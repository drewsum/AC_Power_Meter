

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Nov 03 15:21:12 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text111,global,reloc=2,class=CODE,delta=1
   130                           	psect	text112,global,reloc=2,class=CODE,delta=1
   131                           	psect	text113,global,reloc=2,class=CODE,delta=1
   132                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text115,global,reloc=2,class=CODE,delta=1
   134                           	psect	text116,global,reloc=2,class=CODE,delta=1
   135                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   138                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   139  0000                     
   140                           ; Version 1.45 (B)
   141                           ; Generated 30/01/2018 GMT
   142                           ; 
   143                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   144                           ; All rights reserved.
   145                           ; 
   146                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   147                           ; 
   148                           ; Redistribution and use in source and binary forms, with or without modification, are
   149                           ; permitted provided that the following conditions are met:
   150                           ; 
   151                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   152                           ;        conditions and the following disclaimer.
   153                           ; 
   154                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   155                           ;        of conditions and the following disclaimer in the documentation and/or other
   156                           ;        materials provided with the distribution.
   157                           ; 
   158                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   159                           ;        software without specific prior written permission.
   160                           ; 
   161                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   162                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   163                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   164                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   165                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   166                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   167                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   168                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   169                           ; 
   170                           ; 
   171                           ; Code-generator required, PIC18LF67K40 Definitions
   172                           ; 
   173                           ; SFR Addresses
   174  0000                     
   175                           	psect	idataBANK0
   176  016722                     __pidataBANK0:
   177                           	opt stack 0
   178                           
   179                           ;initializer for _Irms_offset
   180  016722  6D                 	db	109
   181  016723  E7                 	db	231
   182  016724  BD                 	db	189
   183                           
   184                           ;initializer for _Vpk_const
   185                           ;main.c: 58: volatile double FVR_ADC_Result;
   186                           ;main.c: 59: volatile double AVSS_ADC_Result;
   187                           ;main.c: 60: volatile double ADC_Result_Scaling;
   188                           ;main.c: 61: volatile double POS3P3_ADC_Result;
   189                           ;main.c: 62: volatile double POS12_ADC_Result;
   190                           ;main.c: 63: volatile double Temp_ADC_Result;
   191                           ;main.c: 64: volatile double Temp_ADC_Offset = -267.409;
   192  016725  B5                 	db	181
   193  016726  29                 	db	41
   194  016727  43                 	db	67
   195                           
   196                           ;initializer for _Temp_ADC_Offset
   197  016728  B4                 	db	180
   198  016729  85                 	db	133
   199  01672A  C3                 	db	195
   200                           
   201                           ;initializer for _dimming_period
   202  01672B  7FEE               	dw	32750
   203                           
   204                           ;initializer for _TRIAC_Firing_Angle
   205                           ;main.c: 58: volatile double FVR_ADC_Result;
   206                           ;main.c: 59: volatile double AVSS_ADC_Result;
   207                           ;main.c: 60: volatile double ADC_Result_Scaling;
   208                           ;main.c: 61: volatile double POS3P3_ADC_Result;
   209                           ;main.c: 62: volatile double POS12_ADC_Result;
   210                           ;main.c: 63: volatile double Temp_ADC_Result;
   211                           ;main.c: 64: volatile double Temp_ADC_Offset = -267.409;
   212                           ;main.c: 65: double Vpk_const = 169.7056274847714;
   213                           ;main.c: 66: volatile double Vpk;
   214                           ;main.c: 67: volatile double Ipk;
   215                           ;main.c: 68: volatile double Imeas;
   216                           ;main.c: 69: double Irms_offset = -0.113;
   217  01672D  00                 	db	0
   218  01672E  B4                 	db	180
   219  01672F  42                 	db	66
   220                           
   221                           	psect	mediumconst
   222  00F0B4                     __pmediumconst:
   223                           	opt stack 0
   224  00F0B4  00                 	db	0
   225  00F0B5                     _dpowers:
   226                           	opt stack 0
   227  00F0B5  0001               	dw	1
   228  00F0B7  0000               	dw	0
   229  00F0B9  000A               	dw	10
   230  00F0BB  0000               	dw	0
   231  00F0BD  0064               	dw	100
   232  00F0BF  0000               	dw	0
   233  00F0C1  03E8               	dw	1000
   234  00F0C3  0000               	dw	0
   235  00F0C5  2710               	dw	10000
   236  00F0C7  0000               	dw	0
   237  00F0C9  86A0               	dw	34464
   238  00F0CB  0001               	dw	1
   239  00F0CD  4240               	dw	16960
   240  00F0CF  000F               	dw	15
   241  00F0D1  9680               	dw	38528
   242  00F0D3  0098               	dw	152
   243  00F0D5  E100               	dw	57600
   244  00F0D7  05F5               	dw	1525
   245  00F0D9  CA00               	dw	51712
   246  00F0DB  3B9A               	dw	15258
   247  00F0DD                     __end_of_dpowers:
   248                           	opt stack 0
   249  00F0DD                     __powers_:
   250                           	opt stack 0
   251  00F0DD  00                 	db	0
   252  00F0DE  80                 	db	128
   253  00F0DF  3F                 	db	63
   254  00F0E0  00                 	db	0
   255  00F0E1  20                 	db	32
   256  00F0E2  41                 	db	65
   257  00F0E3  00                 	db	0
   258  00F0E4  C8                 	db	200
   259  00F0E5  42                 	db	66
   260  00F0E6  00                 	db	0
   261  00F0E7  7A                 	db	122
   262  00F0E8  44                 	db	68
   263  00F0E9  40                 	db	64
   264  00F0EA  1C                 	db	28
   265  00F0EB  46                 	db	70
   266  00F0EC  50                 	db	80
   267  00F0ED  C3                 	db	195
   268  00F0EE  47                 	db	71
   269  00F0EF  24                 	db	36
   270  00F0F0  74                 	db	116
   271  00F0F1  49                 	db	73
   272  00F0F2  97                 	db	151
   273  00F0F3  18                 	db	24
   274  00F0F4  4B                 	db	75
   275  00F0F5  BC                 	db	188
   276  00F0F6  BE                 	db	190
   277  00F0F7  4C                 	db	76
   278  00F0F8  6B                 	db	107
   279  00F0F9  6E                 	db	110
   280  00F0FA  4E                 	db	78
   281  00F0FB  03                 	db	3
   282  00F0FC  15                 	db	21
   283  00F0FD  50                 	db	80
   284  00F0FE  79                 	db	121
   285  00F0FF  AD                 	db	173
   286  00F100  60                 	db	96
   287  00F101  F3                 	db	243
   288  00F102  49                 	db	73
   289  00F103  71                 	db	113
   290  00F104                     __end_of__powers_:
   291                           	opt stack 0
   292  00F104                     __npowers_:
   293                           	opt stack 0
   294  00F104  00                 	db	0
   295  00F105  80                 	db	128
   296  00F106  3F                 	db	63
   297  00F107  CD                 	db	205
   298  00F108  CC                 	db	204
   299  00F109  3D                 	db	61
   300  00F10A  D7                 	db	215
   301  00F10B  23                 	db	35
   302  00F10C  3C                 	db	60
   303  00F10D  12                 	db	18
   304  00F10E  83                 	db	131
   305  00F10F  3A                 	db	58
   306  00F110  B7                 	db	183
   307  00F111  D1                 	db	209
   308  00F112  38                 	db	56
   309  00F113  C6                 	db	198
   310  00F114  27                 	db	39
   311  00F115  37                 	db	55
   312  00F116  38                 	db	56
   313  00F117  86                 	db	134
   314  00F118  35                 	db	53
   315  00F119  C0                 	db	192
   316  00F11A  D6                 	db	214
   317  00F11B  33                 	db	51
   318  00F11C  CC                 	db	204
   319  00F11D  2B                 	db	43
   320  00F11E  32                 	db	50
   321  00F11F  70                 	db	112
   322  00F120  89                 	db	137
   323  00F121  30                 	db	48
   324  00F122  E7                 	db	231
   325  00F123  DB                 	db	219
   326  00F124  2E                 	db	46
   327  00F125  E5                 	db	229
   328  00F126  3C                 	db	60
   329  00F127  1E                 	db	30
   330  00F128  42                 	db	66
   331  00F129  A2                 	db	162
   332  00F12A  0D                 	db	13
   333  00F12B                     __end_of__npowers_:
   334                           	opt stack 0
   335  00F12B                     _hexpowers:
   336                           	opt stack 0
   337  00F12B  0001               	dw	1
   338  00F12D  0000               	dw	0
   339  00F12F  0010               	dw	16
   340  00F131  0000               	dw	0
   341  00F133  0100               	dw	256
   342  00F135  0000               	dw	0
   343  00F137  1000               	dw	4096
   344  00F139  0000               	dw	0
   345  00F13B  0000               	dw	0
   346  00F13D  0001               	dw	1
   347  00F13F  0000               	dw	0
   348  00F141  0010               	dw	16
   349  00F143  0000               	dw	0
   350  00F145  0100               	dw	256
   351  00F147  0000               	dw	0
   352  00F149  1000               	dw	4096
   353  00F14B                     __end_of_hexpowers:
   354                           	opt stack 0
   355  00F14B                     atan@coeff_a:
   356                           	opt stack 0
   357  00F14B  3C                 	db	60
   358  00F14C  04                 	db	4
   359  00F14D  42                 	db	66
   360  00F14E  9F                 	db	159
   361  00F14F  6A                 	db	106
   362  00F150  42                 	db	66
   363  00F151  90                 	db	144
   364  00F152  01                 	db	1
   365  00F153  42                 	db	66
   366  00F154  4D                 	db	77
   367  00F155  BB                 	db	187
   368  00F156  40                 	db	64
   369  00F157  EC                 	db	236
   370  00F158  47                 	db	71
   371  00F159  3E                 	db	62
   372  00F15A  8E                 	db	142
   373  00F15B  1F                 	db	31
   374  00F15C  BB                 	db	187
   375  00F15D                     __end_ofatan@coeff_a:
   376                           	opt stack 0
   377  00F15D                     sin@coeff_a:
   378                           	opt stack 0
   379  00F15D  F4                 	db	244
   380  00F15E  4A                 	db	74
   381  00F15F  48                 	db	72
   382  00F160  95                 	db	149
   383  00F161  95                 	db	149
   384  00F162  C7                 	db	199
   385  00F163  C1                 	db	193
   386  00F164  DC                 	db	220
   387  00F165  45                 	db	69
   388  00F166  DC                 	db	220
   389  00F167  6D                 	db	109
   390  00F168  C3                 	db	195
   391  00F169  B3                 	db	179
   392  00F16A  33                 	db	51
   393  00F16B  40                 	db	64
   394  00F16C                     __end_ofsin@coeff_a:
   395                           	opt stack 0
   396  00F16C                     atan@coeff_b:
   397                           	opt stack 0
   398  00F16C  3C                 	db	60
   399  00F16D  04                 	db	4
   400  00F16E  42                 	db	66
   401  00F16F  5A                 	db	90
   402  00F170  8B                 	db	139
   403  00F171  42                 	db	66
   404  00F172  04                 	db	4
   405  00F173  44                 	db	68
   406  00F174  42                 	db	66
   407  00F175  9C                 	db	156
   408  00F176  4F                 	db	79
   409  00F177  41                 	db	65
   410  00F178  00                 	db	0
   411  00F179  80                 	db	128
   412  00F17A  3F                 	db	63
   413  00F17B                     __end_ofatan@coeff_b:
   414                           	opt stack 0
   415  00F17B                     sin@coeff_b:
   416                           	opt stack 0
   417  00F17B  34                 	db	52
   418  00F17C  01                 	db	1
   419  00F17D  48                 	db	72
   420  00F17E  9D                 	db	157
   421  00F17F  B0                 	db	176
   422  00F180  45                 	db	69
   423  00F181  00                 	db	0
   424  00F182  DA                 	db	218
   425  00F183  42                 	db	66
   426  00F184  00                 	db	0
   427  00F185  80                 	db	128
   428  00F186  3F                 	db	63
   429  00F187                     __end_ofsin@coeff_b:
   430                           	opt stack 0
   431  0000                     _PIR8bits	set	3643
   432  0000                     _FVRCONbits	set	3780
   433  0000                     _FVRCON	set	3780
   434  0000                     _RC2REG	set	3825
   435  0000                     _RC2STAbits	set	3829
   436  0000                     _TX2REG	set	3826
   437  0000                     _TX2STAbits	set	3830
   438  0000                     _SP2BRGH	set	3828
   439  0000                     _SP2BRGL	set	3827
   440  0000                     _TX2STA	set	3830
   441  0000                     _RC2STA	set	3829
   442  0000                     _BAUD2CON	set	3831
   443  0000                     _PIR1bits	set	3636
   444  0000                     _PIE1bits	set	3626
   445  0000                     _PIR5bits	set	3640
   446  0000                     _PIE5bits	set	3630
   447  0000                     _PIR3bits	set	3638
   448  0000                     _PIE3bits	set	3628
   449  0000                     _IPR1bits	set	3616
   450  0000                     _IPR5bits	set	3620
   451  0000                     _IPR3bits	set	3618
   452  0000                     _RX2PPS	set	3601
   453  0000                     _RG7PPS	set	3721
   454  0000                     _SLRCONH	set	3774
   455  0000                     _SLRCONG	set	3769
   456  0000                     _SLRCONF	set	3761
   457  0000                     _SLRCONE	set	3756
   458  0000                     _SLRCOND	set	3748
   459  0000                     _SLRCONC	set	3743
   460  0000                     _SLRCONB	set	3735
   461  0000                     _SLRCONA	set	3727
   462  0000                     _ODCOND	set	3749
   463  0000                     _ODCONC	set	3744
   464  0000                     _ODCONH	set	3775
   465  0000                     _ODCONB	set	3736
   466  0000                     _ODCONG	set	3770
   467  0000                     _ODCONA	set	3728
   468  0000                     _ODCONF	set	3762
   469  0000                     _ODCONE	set	3757
   470  0000                     _WPUH	set	3776
   471  0000                     _WPUC	set	3745
   472  0000                     _WPUA	set	3729
   473  0000                     _WPUG	set	3771
   474  0000                     _WPUB	set	3737
   475  0000                     _WPUE	set	3758
   476  0000                     _WPUF	set	3763
   477  0000                     _WPUD	set	3750
   478  0000                     _ANSELA	set	3730
   479  0000                     _ANSELF	set	3764
   480  0000                     _ANSELG	set	3772
   481  0000                     _ANSELE	set	3759
   482  0000                     _ANSELB	set	3738
   483  0000                     _ANSELD	set	3751
   484  0000                     _PMD5	set	3665
   485  0000                     _PMD4	set	3664
   486  0000                     _PMD3	set	3663
   487  0000                     _PMD2	set	3662
   488  0000                     _PMD1	set	3661
   489  0000                     _PMD0	set	3660
   490  0000                     _OSCTUNE	set	3656
   491  0000                     _OSCFRQ	set	3657
   492  0000                     _OSCEN	set	3655
   493  0000                     _OSCCON3	set	3653
   494  0000                     _OSCCON1	set	3651
   495  0000                     _PLLR	set	29232
   496  0000                     _T7GCONbits	set	3889
   497  0000                     _T7CONbits	set	3888
   498  0000                     _T7CON	set	3888
   499  0000                     _TMR7L	set	3886
   500  0000                     _TMR7H	set	3887
   501  0000                     _T7CLK	set	3891
   502  0000                     _T7GATE	set	3890
   503  0000                     _T7GCON	set	3889
   504  0000                     _ADCON1bits	set	3929
   505  0000                     _ADCON2bits	set	3930
   506  0000                     _ADPRE	set	3934
   507  0000                     _ADCON3bits	set	3931
   508  0000                     _ADACQ	set	3932
   509  0000                     _ADCLK	set	3927
   510  0000                     _ADACT	set	3926
   511  0000                     _ADREF	set	3928
   512  0000                     _ADCON3	set	3931
   513  0000                     _ADCON2	set	3930
   514  0000                     _ADCON1	set	3929
   515  0000                     _ADCAP	set	3933
   516  0000                     _ADPCH	set	3935
   517  0000                     _LATGbits	set	3967
   518  0000                     _LATFbits	set	3966
   519  0000                     _NVMDAT	set	3958
   520  0000                     _NVMADRL	set	3956
   521  0000                     _NVMADRH	set	3957
   522  0000                     _NVMCON2	set	3960
   523  0000                     _TABLAT	set	4085
   524  0000                     _TBLPTRL	set	4086
   525  0000                     _TBLPTRH	set	4087
   526  0000                     _TBLPTRU	set	4088
   527  0000                     _NVMCON1bits	set	3959
   528  0000                     _T5GCONbits	set	4036
   529  0000                     _T5CONbits	set	4035
   530  0000                     _T5CON	set	4035
   531  0000                     _TMR5L	set	4033
   532  0000                     _TMR5H	set	4034
   533  0000                     _T5CLK	set	4038
   534  0000                     _T5GATE	set	4037
   535  0000                     _T5GCON	set	4036
   536  0000                     _ADERRL	set	3950
   537  0000                     _ADERRH	set	3951
   538  0000                     _ADPREVL	set	3937
   539  0000                     _ADPREVH	set	3938
   540  0000                     _ADFLTRL	set	3954
   541  0000                     _ADFLTRH	set	3955
   542  0000                     _ADSTATbits	set	3941
   543  0000                     _ADACCL	set	3952
   544  0000                     _ADACCH	set	3953
   545  0000                     _ADCNT	set	3943
   546  0000                     _ADRESL	set	3939
   547  0000                     _ADRESH	set	3940
   548  0000                     _ADCON0bits	set	3936
   549  0000                     _ADCON0	set	3936
   550  0000                     _ADSTAT	set	3941
   551  0000                     _ADRPT	set	3942
   552  0000                     _ADSTPTH	set	3945
   553  0000                     _ADSTPTL	set	3944
   554  0000                     _ADUTHH	set	3949
   555  0000                     _ADUTHL	set	3948
   556  0000                     _ADLTHH	set	3947
   557  0000                     _ADLTHL	set	3946
   558  0000                     _PR6	set	4016
   559  0000                     _TMR6	set	4015
   560  0000                     _T6CONbits	set	4017
   561  0000                     _T6RSTbits	set	4020
   562  0000                     _T6HLTbits	set	4018
   563  0000                     _T6CON	set	4017
   564  0000                     _T6TMR	set	4015
   565  0000                     _T6PR	set	4016
   566  0000                     _T6RST	set	4020
   567  0000                     _T6HLT	set	4018
   568  0000                     _T6CLKCON	set	4019
   569  0000                     _INTCONbits	set	4082
   570  0000                     _TRISD	set	3972
   571  0000                     _TRISC	set	3971
   572  0000                     _TRISH	set	3976
   573  0000                     _TRISB	set	3970
   574  0000                     _TRISG	set	3975
   575  0000                     _TRISA	set	3969
   576  0000                     _TRISF	set	3974
   577  0000                     _TRISE	set	3973
   578  0000                     _LATH	set	3968
   579  0000                     _LATC	set	3963
   580  0000                     _LATG	set	3967
   581  0000                     _LATB	set	3962
   582  0000                     _LATF	set	3966
   583  0000                     _LATA	set	3961
   584  0000                     _LATD	set	3964
   585  0000                     _LATE	set	3965
   586  00F187                     STR_91:
   587  00F187  4C                 	db	76	;'L'
   588  00F188  69                 	db	105	;'i'
   589  00F189  73                 	db	115	;'s'
   590  00F18A  74                 	db	116	;'t'
   591  00F18B  20                 	db	32
   592  00F18C  6F                 	db	111	;'o'
   593  00F18D  66                 	db	102	;'f'
   594  00F18E  20                 	db	32
   595  00F18F  73                 	db	115	;'s'
   596  00F190  75                 	db	117	;'u'
   597  00F191  70                 	db	112	;'p'
   598  00F192  70                 	db	112	;'p'
   599  00F193  6F                 	db	111	;'o'
   600  00F194  72                 	db	114	;'r'
   601  00F195  74                 	db	116	;'t'
   602  00F196  65                 	db	101	;'e'
   603  00F197  64                 	db	100	;'d'
   604  00F198  20                 	db	32
   605  00F199  63                 	db	99	;'c'
   606  00F19A  6F                 	db	111	;'o'
   607  00F19B  6D                 	db	109	;'m'
   608  00F19C  6D                 	db	109	;'m'
   609  00F19D  61                 	db	97	;'a'
   610  00F19E  6E                 	db	110	;'n'
   611  00F19F  64                 	db	100	;'d'
   612  00F1A0  73                 	db	115	;'s'
   613  00F1A1  3A                 	db	58	;':'
   614  00F1A2  0A                 	db	10
   615  00F1A3  0D                 	db	13
   616  00F1A4  0A                 	db	10
   617  00F1A5  0D                 	db	13
   618  00F1A6  44                 	db	68	;'D'
   619  00F1A7  65                 	db	101	;'e'
   620  00F1A8  76                 	db	118	;'v'
   621  00F1A9  69                 	db	105	;'i'
   622  00F1AA  63                 	db	99	;'c'
   623  00F1AB  65                 	db	101	;'e'
   624  00F1AC  20                 	db	32
   625  00F1AD  43                 	db	67	;'C'
   626  00F1AE  6F                 	db	111	;'o'
   627  00F1AF  6D                 	db	109	;'m'
   628  00F1B0  6D                 	db	109	;'m'
   629  00F1B1  61                 	db	97	;'a'
   630  00F1B2  6E                 	db	110	;'n'
   631  00F1B3  64                 	db	100	;'d'
   632  00F1B4  73                 	db	115	;'s'
   633  00F1B5  3A                 	db	58	;':'
   634  00F1B6  0A                 	db	10
   635  00F1B7  0D                 	db	13
   636  00F1B8  20                 	db	32
   637  00F1B9  20                 	db	32
   638  00F1BA  20                 	db	32
   639  00F1BB  52                 	db	82	;'R'
   640  00F1BC  65                 	db	101	;'e'
   641  00F1BD  73                 	db	115	;'s'
   642  00F1BE  65                 	db	101	;'e'
   643  00F1BF  74                 	db	116	;'t'
   644  00F1C0  3A                 	db	58	;':'
   645  00F1C1  20                 	db	32
   646  00F1C2  43                 	db	67	;'C'
   647  00F1C3  6C                 	db	108	;'l'
   648  00F1C4  65                 	db	101	;'e'
   649  00F1C5  61                 	db	97	;'a'
   650  00F1C6  72                 	db	114	;'r'
   651  00F1C7  73                 	db	115	;'s'
   652  00F1C8  20                 	db	32
   653  00F1C9  74                 	db	116	;'t'
   654  00F1CA  68                 	db	104	;'h'
   655  00F1CB  65                 	db	101	;'e'
   656  00F1CC  20                 	db	32
   657  00F1CD  74                 	db	116	;'t'
   658  00F1CE  65                 	db	101	;'e'
   659  00F1CF  72                 	db	114	;'r'
   660  00F1D0  6D                 	db	109	;'m'
   661  00F1D1  69                 	db	105	;'i'
   662  00F1D2  6E                 	db	110	;'n'
   663  00F1D3  61                 	db	97	;'a'
   664  00F1D4  6C                 	db	108	;'l'
   665  00F1D5  20                 	db	32
   666  00F1D6  61                 	db	97	;'a'
   667  00F1D7  6E                 	db	110	;'n'
   668  00F1D8  64                 	db	100	;'d'
   669  00F1D9  20                 	db	32
   670  00F1DA  72                 	db	114	;'r'
   671  00F1DB  65                 	db	101	;'e'
   672  00F1DC  73                 	db	115	;'s'
   673  00F1DD  65                 	db	101	;'e'
   674  00F1DE  74                 	db	116	;'t'
   675  00F1DF  73                 	db	115	;'s'
   676  00F1E0  20                 	db	32
   677  00F1E1  74                 	db	116	;'t'
   678  00F1E2  68                 	db	104	;'h'
   679  00F1E3  65                 	db	101	;'e'
   680  00F1E4  20                 	db	32
   681  00F1E5  6D                 	db	109	;'m'
   682  00F1E6  69                 	db	105	;'i'
   683  00F1E7  63                 	db	99	;'c'
   684  00F1E8  72                 	db	114	;'r'
   685  00F1E9  6F                 	db	111	;'o'
   686  00F1EA  0A                 	db	10
   687  00F1EB  0D                 	db	13
   688  00F1EC  20                 	db	32
   689  00F1ED  20                 	db	32
   690  00F1EE  20                 	db	32
   691  00F1EF  43                 	db	67	;'C'
   692  00F1F0  6C                 	db	108	;'l'
   693  00F1F1  65                 	db	101	;'e'
   694  00F1F2  61                 	db	97	;'a'
   695  00F1F3  72                 	db	114	;'r'
   696  00F1F4  3A                 	db	58	;':'
   697  00F1F5  20                 	db	32
   698  00F1F6  43                 	db	67	;'C'
   699  00F1F7  6C                 	db	108	;'l'
   700  00F1F8  65                 	db	101	;'e'
   701  00F1F9  61                 	db	97	;'a'
   702  00F1FA  72                 	db	114	;'r'
   703  00F1FB  73                 	db	115	;'s'
   704  00F1FC  20                 	db	32
   705  00F1FD  74                 	db	116	;'t'
   706  00F1FE  68                 	db	104	;'h'
   707  00F1FF  65                 	db	101	;'e'
   708  00F200  20                 	db	32
   709  00F201  74                 	db	116	;'t'
   710  00F202  65                 	db	101	;'e'
   711  00F203  72                 	db	114	;'r'
   712  00F204  6D                 	db	109	;'m'
   713  00F205  69                 	db	105	;'i'
   714  00F206  6E                 	db	110	;'n'
   715  00F207  61                 	db	97	;'a'
   716  00F208  6C                 	db	108	;'l'
   717  00F209  20                 	db	32
   718  00F20A  62                 	db	98	;'b'
   719  00F20B  75                 	db	117	;'u'
   720  00F20C  74                 	db	116	;'t'
   721  00F20D  20                 	db	32
   722  00F20E  64                 	db	100	;'d'
   723  00F20F  6F                 	db	111	;'o'
   724  00F210  65                 	db	101	;'e'
   725  00F211  73                 	db	115	;'s'
   726  00F212  6E                 	db	110	;'n'
   727  00F213  27                 	db	39
   728  00F214  74                 	db	116	;'t'
   729  00F215  20                 	db	32
   730  00F216  72                 	db	114	;'r'
   731  00F217  65                 	db	101	;'e'
   732  00F218  73                 	db	115	;'s'
   733  00F219  65                 	db	101	;'e'
   734  00F21A  74                 	db	116	;'t'
   735  00F21B  20                 	db	32
   736  00F21C  74                 	db	116	;'t'
   737  00F21D  68                 	db	104	;'h'
   738  00F21E  65                 	db	101	;'e'
   739  00F21F  20                 	db	32
   740  00F220  6D                 	db	109	;'m'
   741  00F221  69                 	db	105	;'i'
   742  00F222  63                 	db	99	;'c'
   743  00F223  72                 	db	114	;'r'
   744  00F224  6F                 	db	111	;'o'
   745  00F225  0A                 	db	10
   746  00F226  0D                 	db	13
   747  00F227  20                 	db	32
   748  00F228  20                 	db	32
   749  00F229  20                 	db	32
   750  00F22A  2A                 	db	42
   751  00F22B  49                 	db	73	;'I'
   752  00F22C  44                 	db	68	;'D'
   753  00F22D  4E                 	db	78	;'N'
   754  00F22E  3F                 	db	63	;'?'
   755  00F22F  3A                 	db	58	;':'
   756  00F230  20                 	db	32
   757  00F231  52                 	db	82	;'R'
   758  00F232  65                 	db	101	;'e'
   759  00F233  74                 	db	116	;'t'
   760  00F234  75                 	db	117	;'u'
   761  00F235  72                 	db	114	;'r'
   762  00F236  6E                 	db	110	;'n'
   763  00F237  73                 	db	115	;'s'
   764  00F238  20                 	db	32
   765  00F239  64                 	db	100	;'d'
   766  00F23A  65                 	db	101	;'e'
   767  00F23B  76                 	db	118	;'v'
   768  00F23C  69                 	db	105	;'i'
   769  00F23D  63                 	db	99	;'c'
   770  00F23E  65                 	db	101	;'e'
   771  00F23F  20                 	db	32
   772  00F240  69                 	db	105	;'i'
   773  00F241  64                 	db	100	;'d'
   774  00F242  65                 	db	101	;'e'
   775  00F243  6E                 	db	110	;'n'
   776  00F244  74                 	db	116	;'t'
   777  00F245  69                 	db	105	;'i'
   778  00F246  66                 	db	102	;'f'
   779  00F247  69                 	db	105	;'i'
   780  00F248  63                 	db	99	;'c'
   781  00F249  61                 	db	97	;'a'
   782  00F24A  74                 	db	116	;'t'
   783  00F24B  69                 	db	105	;'i'
   784  00F24C  6F                 	db	111	;'o'
   785  00F24D  6E                 	db	110	;'n'
   786  00F24E  20                 	db	32
   787  00F24F  73                 	db	115	;'s'
   788  00F250  74                 	db	116	;'t'
   789  00F251  72                 	db	114	;'r'
   790  00F252  69                 	db	105	;'i'
   791  00F253  6E                 	db	110	;'n'
   792  00F254  67                 	db	103	;'g'
   793  00F255  0A                 	db	10
   794  00F256  0D                 	db	13
   795  00F257  20                 	db	32
   796  00F258  20                 	db	32
   797  00F259  20                 	db	32
   798  00F25A  44                 	db	68	;'D'
   799  00F25B  65                 	db	101	;'e'
   800  00F25C  76                 	db	118	;'v'
   801  00F25D  69                 	db	105	;'i'
   802  00F25E  63                 	db	99	;'c'
   803  00F25F  65                 	db	101	;'e'
   804  00F260  20                 	db	32
   805  00F261  4F                 	db	79	;'O'
   806  00F262  6E                 	db	110	;'n'
   807  00F263  20                 	db	32
   808  00F264  54                 	db	84	;'T'
   809  00F265  69                 	db	105	;'i'
   810  00F266  6D                 	db	109	;'m'
   811  00F267  65                 	db	101	;'e'
   812  00F268  3F                 	db	63	;'?'
   813  00F269  3A                 	db	58	;':'
   814  00F26A  20                 	db	32
   815  00F26B  52                 	db	82	;'R'
   816  00F26C  65                 	db	101	;'e'
   817  00F26D  74                 	db	116	;'t'
   818  00F26E  75                 	db	117	;'u'
   819  00F26F  72                 	db	114	;'r'
   820  00F270  6E                 	db	110	;'n'
   821  00F271  73                 	db	115	;'s'
   822  00F272  20                 	db	32
   823  00F273  64                 	db	100	;'d'
   824  00F274  65                 	db	101	;'e'
   825  00F275  76                 	db	118	;'v'
   826  00F276  69                 	db	105	;'i'
   827  00F277  63                 	db	99	;'c'
   828  00F278  65                 	db	101	;'e'
   829  00F279  20                 	db	32
   830  00F27A  6F                 	db	111	;'o'
   831  00F27B  6E                 	db	110	;'n'
   832  00F27C  20                 	db	32
   833  00F27D  74                 	db	116	;'t'
   834  00F27E  69                 	db	105	;'i'
   835  00F27F  6D                 	db	109	;'m'
   836  00F280  65                 	db	101	;'e'
   837  00F281  20                 	db	32
   838  00F282  73                 	db	115	;'s'
   839  00F283  69                 	db	105	;'i'
   840  00F284  6E                 	db	110	;'n'
   841  00F285  63                 	db	99	;'c'
   842  00F286  65                 	db	101	;'e'
   843  00F287  20                 	db	32
   844  00F288  6C                 	db	108	;'l'
   845  00F289  61                 	db	97	;'a'
   846  00F28A  73                 	db	115	;'s'
   847  00F28B  74                 	db	116	;'t'
   848  00F28C  20                 	db	32
   849  00F28D  64                 	db	100	;'d'
   850  00F28E  65                 	db	101	;'e'
   851  00F28F  76                 	db	118	;'v'
   852  00F290  69                 	db	105	;'i'
   853  00F291  63                 	db	99	;'c'
   854  00F292  65                 	db	101	;'e'
   855  00F293  20                 	db	32
   856  00F294  72                 	db	114	;'r'
   857  00F295  65                 	db	101	;'e'
   858  00F296  73                 	db	115	;'s'
   859  00F297  65                 	db	101	;'e'
   860  00F298  74                 	db	116	;'t'
   861  00F299  0A                 	db	10
   862  00F29A  0D                 	db	13
   863  00F29B  20                 	db	32
   864  00F29C  20                 	db	32
   865  00F29D  20                 	db	32
   866  00F29E  44                 	db	68	;'D'
   867  00F29F  65                 	db	101	;'e'
   868  00F2A0  76                 	db	118	;'v'
   869  00F2A1  69                 	db	105	;'i'
   870  00F2A2  63                 	db	99	;'c'
   871  00F2A3  65                 	db	101	;'e'
   872  00F2A4  20                 	db	32
   873  00F2A5  49                 	db	73	;'I'
   874  00F2A6  44                 	db	68	;'D'
   875  00F2A7  3F                 	db	63	;'?'
   876  00F2A8  3A                 	db	58	;':'
   877  00F2A9  20                 	db	32
   878  00F2AA  52                 	db	82	;'R'
   879  00F2AB  65                 	db	101	;'e'
   880  00F2AC  74                 	db	116	;'t'
   881  00F2AD  75                 	db	117	;'u'
   882  00F2AE  72                 	db	114	;'r'
   883  00F2AF  6E                 	db	110	;'n'
   884  00F2B0  73                 	db	115	;'s'
   885  00F2B1  20                 	db	32
   886  00F2B2  64                 	db	100	;'d'
   887  00F2B3  65                 	db	101	;'e'
   888  00F2B4  76                 	db	118	;'v'
   889  00F2B5  69                 	db	105	;'i'
   890  00F2B6  63                 	db	99	;'c'
   891  00F2B7  65                 	db	101	;'e'
   892  00F2B8  20                 	db	32
   893  00F2B9  49                 	db	73	;'I'
   894  00F2BA  44                 	db	68	;'D'
   895  00F2BB  20                 	db	32
   896  00F2BC  61                 	db	97	;'a'
   897  00F2BD  73                 	db	115	;'s'
   898  00F2BE  20                 	db	32
   899  00F2BF  70                 	db	112	;'p'
   900  00F2C0  72                 	db	114	;'r'
   901  00F2C1  65                 	db	101	;'e'
   902  00F2C2  2D                 	db	45
   903  00F2C3  70                 	db	112	;'p'
   904  00F2C4  72                 	db	114	;'r'
   905  00F2C5  6F                 	db	111	;'o'
   906  00F2C6  67                 	db	103	;'g'
   907  00F2C7  72                 	db	114	;'r'
   908  00F2C8  61                 	db	97	;'a'
   909  00F2C9  6D                 	db	109	;'m'
   910  00F2CA  6D                 	db	109	;'m'
   911  00F2CB  65                 	db	101	;'e'
   912  00F2CC  64                 	db	100	;'d'
   913  00F2CD  20                 	db	32
   914  00F2CE  69                 	db	105	;'i'
   915  00F2CF  6E                 	db	110	;'n'
   916  00F2D0  20                 	db	32
   917  00F2D1  66                 	db	102	;'f'
   918  00F2D2  6C                 	db	108	;'l'
   919  00F2D3  61                 	db	97	;'a'
   920  00F2D4  73                 	db	115	;'s'
   921  00F2D5  68                 	db	104	;'h'
   922  00F2D6  20                 	db	32
   923  00F2D7  6D                 	db	109	;'m'
   924  00F2D8  65                 	db	101	;'e'
   925  00F2D9  6D                 	db	109	;'m'
   926  00F2DA  6F                 	db	111	;'o'
   927  00F2DB  72                 	db	114	;'r'
   928  00F2DC  79                 	db	121	;'y'
   929  00F2DD  0A                 	db	10
   930  00F2DE  0D                 	db	13
   931  00F2DF  20                 	db	32
   932  00F2E0  20                 	db	32
   933  00F2E1  20                 	db	32
   934  00F2E2  48                 	db	72	;'H'
   935  00F2E3  65                 	db	101	;'e'
   936  00F2E4  6C                 	db	108	;'l'
   937  00F2E5  70                 	db	112	;'p'
   938  00F2E6  3A                 	db	58	;':'
   939  00F2E7  20                 	db	32
   940  00F2E8  54                 	db	84	;'T'
   941  00F2E9  68                 	db	104	;'h'
   942  00F2EA  69                 	db	105	;'i'
   943  00F2EB  73                 	db	115	;'s'
   944  00F2EC  20                 	db	32
   945  00F2ED  6D                 	db	109	;'m'
   946  00F2EE  65                 	db	101	;'e'
   947  00F2EF  73                 	db	115	;'s'
   948  00F2F0  73                 	db	115	;'s'
   949  00F2F1  61                 	db	97	;'a'
   950  00F2F2  67                 	db	103	;'g'
   951  00F2F3  65                 	db	101	;'e'
   952  00F2F4  2C                 	db	44
   953  00F2F5  20                 	db	32
   954  00F2F6  6C                 	db	108	;'l'
   955  00F2F7  69                 	db	105	;'i'
   956  00F2F8  73                 	db	115	;'s'
   957  00F2F9  74                 	db	116	;'t'
   958  00F2FA  73                 	db	115	;'s'
   959  00F2FB  20                 	db	32
   960  00F2FC  73                 	db	115	;'s'
   961  00F2FD  75                 	db	117	;'u'
   962  00F2FE  70                 	db	112	;'p'
   963  00F2FF  70                 	db	112	;'p'
   964  00F300  6F                 	db	111	;'o'
   965  00F301  72                 	db	114	;'r'
   966  00F302  74                 	db	116	;'t'
   967  00F303  65                 	db	101	;'e'
   968  00F304  64                 	db	100	;'d'
   969  00F305  20                 	db	32
   970  00F306  63                 	db	99	;'c'
   971  00F307  6F                 	db	111	;'o'
   972  00F308  6D                 	db	109	;'m'
   973  00F309  6D                 	db	109	;'m'
   974  00F30A  61                 	db	97	;'a'
   975  00F30B  6E                 	db	110	;'n'
   976  00F30C  64                 	db	100	;'d'
   977  00F30D  73                 	db	115	;'s'
   978  00F30E  0A                 	db	10
   979  00F30F  0D                 	db	13
   980  00F310  0A                 	db	10
   981  00F311  0D                 	db	13
   982  00F312  44                 	db	68	;'D'
   983  00F313  65                 	db	101	;'e'
   984  00F314  76                 	db	118	;'v'
   985  00F315  69                 	db	105	;'i'
   986  00F316  63                 	db	99	;'c'
   987  00F317  65                 	db	101	;'e'
   988  00F318  20                 	db	32
   989  00F319  4D                 	db	77	;'M'
   990  00F31A  65                 	db	101	;'e'
   991  00F31B  61                 	db	97	;'a'
   992  00F31C  73                 	db	115	;'s'
   993  00F31D  75                 	db	117	;'u'
   994  00F31E  72                 	db	114	;'r'
   995  00F31F  65                 	db	101	;'e'
   996  00F320  6D                 	db	109	;'m'
   997  00F321  65                 	db	101	;'e'
   998  00F322  6E                 	db	110	;'n'
   999  00F323  74                 	db	116	;'t'
  1000  00F324  20                 	db	32
  1001  00F325  43                 	db	67	;'C'
  1002  00F326  6F                 	db	111	;'o'
  1003  00F327  6D                 	db	109	;'m'
  1004  00F328  6D                 	db	109	;'m'
  1005  00F329  61                 	db	97	;'a'
  1006  00F32A  6E                 	db	110	;'n'
  1007  00F32B  64                 	db	100	;'d'
  1008  00F32C  73                 	db	115	;'s'
  1009  00F32D  3A                 	db	58	;':'
  1010  00F32E  0A                 	db	10
  1011  00F32F  0D                 	db	13
  1012  00F330  20                 	db	32
  1013  00F331  20                 	db	32
  1014  00F332  20                 	db	32
  1015  00F333  4D                 	db	77	;'M'
  1016  00F334  65                 	db	101	;'e'
  1017  00F335  61                 	db	97	;'a'
  1018  00F336  73                 	db	115	;'s'
  1019  00F337  75                 	db	117	;'u'
  1020  00F338  72                 	db	114	;'r'
  1021  00F339  65                 	db	101	;'e'
  1022  00F33A  20                 	db	32
  1023  00F33B  50                 	db	80	;'P'
  1024  00F33C  4F                 	db	79	;'O'
  1025  00F33D  53                 	db	83	;'S'
  1026  00F33E  33                 	db	51	;'3'
  1027  00F33F  50                 	db	80	;'P'
  1028  00F340  33                 	db	51	;'3'
  1029  00F341  3F                 	db	63	;'?'
  1030  00F342  3A                 	db	58	;':'
  1031  00F343  20                 	db	32
  1032  00F344  52                 	db	82	;'R'
  1033  00F345  65                 	db	101	;'e'
  1034  00F346  74                 	db	116	;'t'
  1035  00F347  75                 	db	117	;'u'
  1036  00F348  72                 	db	114	;'r'
  1037  00F349  6E                 	db	110	;'n'
  1038  00F34A  73                 	db	115	;'s'
  1039  00F34B  20                 	db	32
  1040  00F34C  2B                 	db	43
  1041  00F34D  33                 	db	51	;'3'
  1042  00F34E  2E                 	db	46
  1043  00F34F  33                 	db	51	;'3'
  1044  00F350  56                 	db	86	;'V'
  1045  00F351  20                 	db	32
  1046  00F352  41                 	db	65	;'A'
  1047  00F353  44                 	db	68	;'D'
  1048  00F354  43                 	db	67	;'C'
  1049  00F355  20                 	db	32
  1050  00F356  43                 	db	67	;'C'
  1051  00F357  6F                 	db	111	;'o'
  1052  00F358  6E                 	db	110	;'n'
  1053  00F359  76                 	db	118	;'v'
  1054  00F35A  65                 	db	101	;'e'
  1055  00F35B  72                 	db	114	;'r'
  1056  00F35C  73                 	db	115	;'s'
  1057  00F35D  69                 	db	105	;'i'
  1058  00F35E  6F                 	db	111	;'o'
  1059  00F35F  6E                 	db	110	;'n'
  1060  00F360  20                 	db	32
  1061  00F361  69                 	db	105	;'i'
  1062  00F362  6E                 	db	110	;'n'
  1063  00F363  20                 	db	32
  1064  00F364  76                 	db	118	;'v'
  1065  00F365  6F                 	db	111	;'o'
  1066  00F366  6C                 	db	108	;'l'
  1067  00F367  74                 	db	116	;'t'
  1068  00F368  73                 	db	115	;'s'
  1069  00F369  0A                 	db	10
  1070  00F36A  0D                 	db	13
  1071  00F36B  20                 	db	32
  1072  00F36C  20                 	db	32
  1073  00F36D  20                 	db	32
  1074  00F36E  4D                 	db	77	;'M'
  1075  00F36F  65                 	db	101	;'e'
  1076  00F370  61                 	db	97	;'a'
  1077  00F371  73                 	db	115	;'s'
  1078  00F372  75                 	db	117	;'u'
  1079  00F373  72                 	db	114	;'r'
  1080  00F374  65                 	db	101	;'e'
  1081  00F375  20                 	db	32
  1082  00F376  50                 	db	80	;'P'
  1083  00F377  4F                 	db	79	;'O'
  1084  00F378  53                 	db	83	;'S'
  1085  00F379  31                 	db	49	;'1'
  1086  00F37A  32                 	db	50	;'2'
  1087  00F37B  3F                 	db	63	;'?'
  1088  00F37C  3A                 	db	58	;':'
  1089  00F37D  20                 	db	32
  1090  00F37E  52                 	db	82	;'R'
  1091  00F37F  65                 	db	101	;'e'
  1092  00F380  74                 	db	116	;'t'
  1093  00F381  75                 	db	117	;'u'
  1094  00F382  72                 	db	114	;'r'
  1095  00F383  6E                 	db	110	;'n'
  1096  00F384  73                 	db	115	;'s'
  1097  00F385  20                 	db	32
  1098  00F386  2B                 	db	43
  1099  00F387  31                 	db	49	;'1'
  1100  00F388  32                 	db	50	;'2'
  1101  00F389  56                 	db	86	;'V'
  1102  00F38A  20                 	db	32
  1103  00F38B  41                 	db	65	;'A'
  1104  00F38C  44                 	db	68	;'D'
  1105  00F38D  43                 	db	67	;'C'
  1106  00F38E  20                 	db	32
  1107  00F38F  43                 	db	67	;'C'
  1108  00F390  6F                 	db	111	;'o'
  1109  00F391  6E                 	db	110	;'n'
  1110  00F392  76                 	db	118	;'v'
  1111  00F393  65                 	db	101	;'e'
  1112  00F394  72                 	db	114	;'r'
  1113  00F395  73                 	db	115	;'s'
  1114  00F396  69                 	db	105	;'i'
  1115  00F397  6F                 	db	111	;'o'
  1116  00F398  6E                 	db	110	;'n'
  1117  00F399  20                 	db	32
  1118  00F39A  69                 	db	105	;'i'
  1119  00F39B  6E                 	db	110	;'n'
  1120  00F39C  20                 	db	32
  1121  00F39D  76                 	db	118	;'v'
  1122  00F39E  6F                 	db	111	;'o'
  1123  00F39F  6C                 	db	108	;'l'
  1124  00F3A0  74                 	db	116	;'t'
  1125  00F3A1  73                 	db	115	;'s'
  1126  00F3A2  0A                 	db	10
  1127  00F3A3  0D                 	db	13
  1128  00F3A4  20                 	db	32
  1129  00F3A5  20                 	db	32
  1130  00F3A6  20                 	db	32
  1131  00F3A7  4D                 	db	77	;'M'
  1132  00F3A8  65                 	db	101	;'e'
  1133  00F3A9  61                 	db	97	;'a'
  1134  00F3AA  73                 	db	115	;'s'
  1135  00F3AB  75                 	db	117	;'u'
  1136  00F3AC  72                 	db	114	;'r'
  1137  00F3AD  65                 	db	101	;'e'
  1138  00F3AE  20                 	db	32
  1139  00F3AF  44                 	db	68	;'D'
  1140  00F3B0  69                 	db	105	;'i'
  1141  00F3B1  65                 	db	101	;'e'
  1142  00F3B2  20                 	db	32
  1143  00F3B3  54                 	db	84	;'T'
  1144  00F3B4  65                 	db	101	;'e'
  1145  00F3B5  6D                 	db	109	;'m'
  1146  00F3B6  70                 	db	112	;'p'
  1147  00F3B7  3F                 	db	63	;'?'
  1148  00F3B8  3A                 	db	58	;':'
  1149  00F3B9  20                 	db	32
  1150  00F3BA  52                 	db	82	;'R'
  1151  00F3BB  65                 	db	101	;'e'
  1152  00F3BC  74                 	db	116	;'t'
  1153  00F3BD  75                 	db	117	;'u'
  1154  00F3BE  72                 	db	114	;'r'
  1155  00F3BF  6E                 	db	110	;'n'
  1156  00F3C0  73                 	db	115	;'s'
  1157  00F3C1  20                 	db	32
  1158  00F3C2  74                 	db	116	;'t'
  1159  00F3C3  68                 	db	104	;'h'
  1160  00F3C4  65                 	db	101	;'e'
  1161  00F3C5  20                 	db	32
  1162  00F3C6  6D                 	db	109	;'m'
  1163  00F3C7  69                 	db	105	;'i'
  1164  00F3C8  63                 	db	99	;'c'
  1165  00F3C9  72                 	db	114	;'r'
  1166  00F3CA  6F                 	db	111	;'o'
  1167  00F3CB  63                 	db	99	;'c'
  1168  00F3CC  6F                 	db	111	;'o'
  1169  00F3CD  6E                 	db	110	;'n'
  1170  00F3CE  74                 	db	116	;'t'
  1171  00F3CF  72                 	db	114	;'r'
  1172  00F3D0  6F                 	db	111	;'o'
  1173  00F3D1  6C                 	db	108	;'l'
  1174  00F3D2  6C                 	db	108	;'l'
  1175  00F3D3  65                 	db	101	;'e'
  1176  00F3D4  72                 	db	114	;'r'
  1177  00F3D5  20                 	db	32
  1178  00F3D6  64                 	db	100	;'d'
  1179  00F3D7  69                 	db	105	;'i'
  1180  00F3D8  65                 	db	101	;'e'
  1181  00F3D9  20                 	db	32
  1182  00F3DA  74                 	db	116	;'t'
  1183  00F3DB  65                 	db	101	;'e'
  1184  00F3DC  6D                 	db	109	;'m'
  1185  00F3DD  70                 	db	112	;'p'
  1186  00F3DE  65                 	db	101	;'e'
  1187  00F3DF  72                 	db	114	;'r'
  1188  00F3E0  61                 	db	97	;'a'
  1189  00F3E1  74                 	db	116	;'t'
  1190  00F3E2  75                 	db	117	;'u'
  1191  00F3E3  72                 	db	114	;'r'
  1192  00F3E4  65                 	db	101	;'e'
  1193  00F3E5  20                 	db	32
  1194  00F3E6  69                 	db	105	;'i'
  1195  00F3E7  6E                 	db	110	;'n'
  1196  00F3E8  20                 	db	32
  1197  00F3E9  64                 	db	100	;'d'
  1198  00F3EA  65                 	db	101	;'e'
  1199  00F3EB  67                 	db	103	;'g'
  1200  00F3EC  72                 	db	114	;'r'
  1201  00F3ED  65                 	db	101	;'e'
  1202  00F3EE  65                 	db	101	;'e'
  1203  00F3EF  73                 	db	115	;'s'
  1204  00F3F0  20                 	db	32
  1205  00F3F1  43                 	db	67	;'C'
  1206  00F3F2  0A                 	db	10
  1207  00F3F3  0D                 	db	13
  1208  00F3F4  20                 	db	32
  1209  00F3F5  20                 	db	32
  1210  00F3F6  20                 	db	32
  1211  00F3F7  4D                 	db	77	;'M'
  1212  00F3F8  65                 	db	101	;'e'
  1213  00F3F9  61                 	db	97	;'a'
  1214  00F3FA  73                 	db	115	;'s'
  1215  00F3FB  75                 	db	117	;'u'
  1216  00F3FC  72                 	db	114	;'r'
  1217  00F3FD  65                 	db	101	;'e'
  1218  00F3FE  20                 	db	32
  1219  00F3FF  46                 	db	70	;'F'
  1220  00F400  56                 	db	86	;'V'
  1221  00F401  52                 	db	82	;'R'
  1222  00F402  3F                 	db	63	;'?'
  1223  00F403  3A                 	db	58	;':'
  1224  00F404  20                 	db	32
  1225  00F405  52                 	db	82	;'R'
  1226  00F406  65                 	db	101	;'e'
  1227  00F407  74                 	db	116	;'t'
  1228  00F408  75                 	db	117	;'u'
  1229  00F409  72                 	db	114	;'r'
  1230  00F40A  6E                 	db	110	;'n'
  1231  00F40B  73                 	db	115	;'s'
  1232  00F40C  20                 	db	32
  1233  00F40D  74                 	db	116	;'t'
  1234  00F40E  68                 	db	104	;'h'
  1235  00F40F  65                 	db	101	;'e'
  1236  00F410  20                 	db	32
  1237  00F411  69                 	db	105	;'i'
  1238  00F412  6E                 	db	110	;'n'
  1239  00F413  74                 	db	116	;'t'
  1240  00F414  65                 	db	101	;'e'
  1241  00F415  72                 	db	114	;'r'
  1242  00F416  6E                 	db	110	;'n'
  1243  00F417  61                 	db	97	;'a'
  1244  00F418  6C                 	db	108	;'l'
  1245  00F419  20                 	db	32
  1246  00F41A  66                 	db	102	;'f'
  1247  00F41B  69                 	db	105	;'i'
  1248  00F41C  78                 	db	120	;'x'
  1249  00F41D  65                 	db	101	;'e'
  1250  00F41E  64                 	db	100	;'d'
  1251  00F41F  20                 	db	32
  1252  00F420  76                 	db	118	;'v'
  1253  00F421  6F                 	db	111	;'o'
  1254  00F422  6C                 	db	108	;'l'
  1255  00F423  74                 	db	116	;'t'
  1256  00F424  61                 	db	97	;'a'
  1257  00F425  67                 	db	103	;'g'
  1258  00F426  65                 	db	101	;'e'
  1259  00F427  20                 	db	32
  1260  00F428  72                 	db	114	;'r'
  1261  00F429  65                 	db	101	;'e'
  1262  00F42A  66                 	db	102	;'f'
  1263  00F42B  65                 	db	101	;'e'
  1264  00F42C  72                 	db	114	;'r'
  1265  00F42D  65                 	db	101	;'e'
  1266  00F42E  6E                 	db	110	;'n'
  1267  00F42F  63                 	db	99	;'c'
  1268  00F430  65                 	db	101	;'e'
  1269  00F431  20                 	db	32
  1270  00F432  62                 	db	98	;'b'
  1271  00F433  75                 	db	117	;'u'
  1272  00F434  66                 	db	102	;'f'
  1273  00F435  66                 	db	102	;'f'
  1274  00F436  65                 	db	101	;'e'
  1275  00F437  72                 	db	114	;'r'
  1276  00F438  20                 	db	32
  1277  00F439  31                 	db	49	;'1'
  1278  00F43A  20                 	db	32
  1279  00F43B  6F                 	db	111	;'o'
  1280  00F43C  75                 	db	117	;'u'
  1281  00F43D  74                 	db	116	;'t'
  1282  00F43E  70                 	db	112	;'p'
  1283  00F43F  75                 	db	117	;'u'
  1284  00F440  74                 	db	116	;'t'
  1285  00F441  20                 	db	32
  1286  00F442  69                 	db	105	;'i'
  1287  00F443  6E                 	db	110	;'n'
  1288  00F444  20                 	db	32
  1289  00F445  76                 	db	118	;'v'
  1290  00F446  6F                 	db	111	;'o'
  1291  00F447  6C                 	db	108	;'l'
  1292  00F448  74                 	db	116	;'t'
  1293  00F449  73                 	db	115	;'s'
  1294  00F44A  0A                 	db	10
  1295  00F44B  0D                 	db	13
  1296  00F44C  20                 	db	32
  1297  00F44D  20                 	db	32
  1298  00F44E  20                 	db	32
  1299  00F44F  4D                 	db	77	;'M'
  1300  00F450  65                 	db	101	;'e'
  1301  00F451  61                 	db	97	;'a'
  1302  00F452  73                 	db	115	;'s'
  1303  00F453  75                 	db	117	;'u'
  1304  00F454  72                 	db	114	;'r'
  1305  00F455  65                 	db	101	;'e'
  1306  00F456  20                 	db	32
  1307  00F457  41                 	db	65	;'A'
  1308  00F458  56                 	db	86	;'V'
  1309  00F459  53                 	db	83	;'S'
  1310  00F45A  53                 	db	83	;'S'
  1311  00F45B  3F                 	db	63	;'?'
  1312  00F45C  3A                 	db	58	;':'
  1313  00F45D  20                 	db	32
  1314  00F45E  52                 	db	82	;'R'
  1315  00F45F  65                 	db	101	;'e'
  1316  00F460  74                 	db	116	;'t'
  1317  00F461  75                 	db	117	;'u'
  1318  00F462  72                 	db	114	;'r'
  1319  00F463  6E                 	db	110	;'n'
  1320  00F464  73                 	db	115	;'s'
  1321  00F465  20                 	db	32
  1322  00F466  74                 	db	116	;'t'
  1323  00F467  68                 	db	104	;'h'
  1324  00F468  65                 	db	101	;'e'
  1325  00F469  20                 	db	32
  1326  00F46A  6D                 	db	109	;'m'
  1327  00F46B  65                 	db	101	;'e'
  1328  00F46C  61                 	db	97	;'a'
  1329  00F46D  73                 	db	115	;'s'
  1330  00F46E  75                 	db	117	;'u'
  1331  00F46F  72                 	db	114	;'r'
  1332  00F470  65                 	db	101	;'e'
  1333  00F471  64                 	db	100	;'d'
  1334  00F472  20                 	db	32
  1335  00F473  76                 	db	118	;'v'
  1336  00F474  61                 	db	97	;'a'
  1337  00F475  6C                 	db	108	;'l'
  1338  00F476  75                 	db	117	;'u'
  1339  00F477  65                 	db	101	;'e'
  1340  00F478  20                 	db	32
  1341  00F479  6F                 	db	111	;'o'
  1342  00F47A  66                 	db	102	;'f'
  1343  00F47B  20                 	db	32
  1344  00F47C  41                 	db	65	;'A'
  1345  00F47D  6E                 	db	110	;'n'
  1346  00F47E  61                 	db	97	;'a'
  1347  00F47F  6C                 	db	108	;'l'
  1348  00F480  6F                 	db	111	;'o'
  1349  00F481  67                 	db	103	;'g'
  1350  00F482  20                 	db	32
  1351  00F483  56                 	db	86	;'V'
  1352  00F484  53                 	db	83	;'S'
  1353  00F485  53                 	db	83	;'S'
  1354  00F486  20                 	db	32
  1355  00F487  69                 	db	105	;'i'
  1356  00F488  6E                 	db	110	;'n'
  1357  00F489  20                 	db	32
  1358  00F48A  76                 	db	118	;'v'
  1359  00F48B  6F                 	db	111	;'o'
  1360  00F48C  6C                 	db	108	;'l'
  1361  00F48D  74                 	db	116	;'t'
  1362  00F48E  73                 	db	115	;'s'
  1363  00F48F  0A                 	db	10
  1364  00F490  0D                 	db	13
  1365  00F491  0A                 	db	10
  1366  00F492  0D                 	db	13
  1367  00F493  50                 	db	80	;'P'
  1368  00F494  72                 	db	114	;'r'
  1369  00F495  69                 	db	105	;'i'
  1370  00F496  6D                 	db	109	;'m'
  1371  00F497  61                 	db	97	;'a'
  1372  00F498  72                 	db	114	;'r'
  1373  00F499  79                 	db	121	;'y'
  1374  00F49A  20                 	db	32
  1375  00F49B  4D                 	db	77	;'M'
  1376  00F49C  65                 	db	101	;'e'
  1377  00F49D  61                 	db	97	;'a'
  1378  00F49E  73                 	db	115	;'s'
  1379  00F49F  75                 	db	117	;'u'
  1380  00F4A0  72                 	db	114	;'r'
  1381  00F4A1  65                 	db	101	;'e'
  1382  00F4A2  6D                 	db	109	;'m'
  1383  00F4A3  65                 	db	101	;'e'
  1384  00F4A4  6E                 	db	110	;'n'
  1385  00F4A5  74                 	db	116	;'t'
  1386  00F4A6  20                 	db	32
  1387  00F4A7  43                 	db	67	;'C'
  1388  00F4A8  6F                 	db	111	;'o'
  1389  00F4A9  6D                 	db	109	;'m'
  1390  00F4AA  6D                 	db	109	;'m'
  1391  00F4AB  61                 	db	97	;'a'
  1392  00F4AC  6E                 	db	110	;'n'
  1393  00F4AD  64                 	db	100	;'d'
  1394  00F4AE  73                 	db	115	;'s'
  1395  00F4AF  3A                 	db	58	;':'
  1396  00F4B0  0A                 	db	10
  1397  00F4B1  0D                 	db	13
  1398  00F4B2  20                 	db	32
  1399  00F4B3  20                 	db	32
  1400  00F4B4  20                 	db	32
  1401  00F4B5  4D                 	db	77	;'M'
  1402  00F4B6  65                 	db	101	;'e'
  1403  00F4B7  61                 	db	97	;'a'
  1404  00F4B8  73                 	db	115	;'s'
  1405  00F4B9  75                 	db	117	;'u'
  1406  00F4BA  72                 	db	114	;'r'
  1407  00F4BB  65                 	db	101	;'e'
  1408  00F4BC  20                 	db	32
  1409  00F4BD  44                 	db	68	;'D'
  1410  00F4BE  65                 	db	101	;'e'
  1411  00F4BF  74                 	db	116	;'t'
  1412  00F4C0  65                 	db	101	;'e'
  1413  00F4C1  63                 	db	99	;'c'
  1414  00F4C2  74                 	db	116	;'t'
  1415  00F4C3  65                 	db	101	;'e'
  1416  00F4C4  64                 	db	100	;'d'
  1417  00F4C5  20                 	db	32
  1418  00F4C6  43                 	db	67	;'C'
  1419  00F4C7  75                 	db	117	;'u'
  1420  00F4C8  72                 	db	114	;'r'
  1421  00F4C9  72                 	db	114	;'r'
  1422  00F4CA  65                 	db	101	;'e'
  1423  00F4CB  6E                 	db	110	;'n'
  1424  00F4CC  74                 	db	116	;'t'
  1425  00F4CD  3F                 	db	63	;'?'
  1426  00F4CE  3A                 	db	58	;':'
  1427  00F4CF  20                 	db	32
  1428  00F4D0  52                 	db	82	;'R'
  1429  00F4D1  65                 	db	101	;'e'
  1430  00F4D2  74                 	db	116	;'t'
  1431  00F4D3  75                 	db	117	;'u'
  1432  00F4D4  72                 	db	114	;'r'
  1433  00F4D5  6E                 	db	110	;'n'
  1434  00F4D6  73                 	db	115	;'s'
  1435  00F4D7  20                 	db	32
  1436  00F4D8  6D                 	db	109	;'m'
  1437  00F4D9  65                 	db	101	;'e'
  1438  00F4DA  61                 	db	97	;'a'
  1439  00F4DB  73                 	db	115	;'s'
  1440  00F4DC  75                 	db	117	;'u'
  1441  00F4DD  72                 	db	114	;'r'
  1442  00F4DE  65                 	db	101	;'e'
  1443  00F4DF  64                 	db	100	;'d'
  1444  00F4E0  20                 	db	32
  1445  00F4E1  6F                 	db	111	;'o'
  1446  00F4E2  75                 	db	117	;'u'
  1447  00F4E3  74                 	db	116	;'t'
  1448  00F4E4  70                 	db	112	;'p'
  1449  00F4E5  75                 	db	117	;'u'
  1450  00F4E6  74                 	db	116	;'t'
  1451  00F4E7  20                 	db	32
  1452  00F4E8  63                 	db	99	;'c'
  1453  00F4E9  75                 	db	117	;'u'
  1454  00F4EA  72                 	db	114	;'r'
  1455  00F4EB  72                 	db	114	;'r'
  1456  00F4EC  65                 	db	101	;'e'
  1457  00F4ED  6E                 	db	110	;'n'
  1458  00F4EE  74                 	db	116	;'t'
  1459  00F4EF  20                 	db	32
  1460  00F4F0  69                 	db	105	;'i'
  1461  00F4F1  6E                 	db	110	;'n'
  1462  00F4F2  20                 	db	32
  1463  00F4F3  61                 	db	97	;'a'
  1464  00F4F4  6D                 	db	109	;'m'
  1465  00F4F5  70                 	db	112	;'p'
  1466  00F4F6  73                 	db	115	;'s'
  1467  00F4F7  20                 	db	32
  1468  00F4F8  61                 	db	97	;'a'
  1469  00F4F9  73                 	db	115	;'s'
  1470  00F4FA  20                 	db	32
  1471  00F4FB  73                 	db	115	;'s'
  1472  00F4FC  65                 	db	101	;'e'
  1473  00F4FD  65                 	db	101	;'e'
  1474  00F4FE  6E                 	db	110	;'n'
  1475  00F4FF  20                 	db	32
  1476  00F500  62                 	db	98	;'b'
  1477  00F501  79                 	db	121	;'y'
  1478  00F502  20                 	db	32
  1479  00F503  41                 	db	65	;'A'
  1480  00F504  44                 	db	68	;'D'
  1481  00F505  43                 	db	67	;'C'
  1482  00F506  0A                 	db	10
  1483  00F507  0D                 	db	13
  1484  00F508  20                 	db	32
  1485  00F509  20                 	db	32
  1486  00F50A  20                 	db	32
  1487  00F50B  4D                 	db	77	;'M'
  1488  00F50C  65                 	db	101	;'e'
  1489  00F50D  61                 	db	97	;'a'
  1490  00F50E  73                 	db	115	;'s'
  1491  00F50F  75                 	db	117	;'u'
  1492  00F510  72                 	db	114	;'r'
  1493  00F511  65                 	db	101	;'e'
  1494  00F512  20                 	db	32
  1495  00F513  52                 	db	82	;'R'
  1496  00F514  4D                 	db	77	;'M'
  1497  00F515  53                 	db	83	;'S'
  1498  00F516  20                 	db	32
  1499  00F517  43                 	db	67	;'C'
  1500  00F518  75                 	db	117	;'u'
  1501  00F519  72                 	db	114	;'r'
  1502  00F51A  72                 	db	114	;'r'
  1503  00F51B  65                 	db	101	;'e'
  1504  00F51C  6E                 	db	110	;'n'
  1505  00F51D  74                 	db	116	;'t'
  1506  00F51E  3F                 	db	63	;'?'
  1507  00F51F  3A                 	db	58	;':'
  1508  00F520  20                 	db	32
  1509  00F521  52                 	db	82	;'R'
  1510  00F522  65                 	db	101	;'e'
  1511  00F523  74                 	db	116	;'t'
  1512  00F524  75                 	db	117	;'u'
  1513  00F525  72                 	db	114	;'r'
  1514  00F526  6E                 	db	110	;'n'
  1515  00F527  73                 	db	115	;'s'
  1516  00F528  20                 	db	32
  1517  00F529  74                 	db	116	;'t'
  1518  00F52A  68                 	db	104	;'h'
  1519  00F52B  65                 	db	101	;'e'
  1520  00F52C  20                 	db	32
  1521  00F52D  63                 	db	99	;'c'
  1522  00F52E  61                 	db	97	;'a'
  1523  00F52F  6C                 	db	108	;'l'
  1524  00F530  63                 	db	99	;'c'
  1525  00F531  75                 	db	117	;'u'
  1526  00F532  6C                 	db	108	;'l'
  1527  00F533  61                 	db	97	;'a'
  1528  00F534  74                 	db	116	;'t'
  1529  00F535  65                 	db	101	;'e'
  1530  00F536  64                 	db	100	;'d'
  1531  00F537  20                 	db	32
  1532  00F538  52                 	db	82	;'R'
  1533  00F539  4D                 	db	77	;'M'
  1534  00F53A  53                 	db	83	;'S'
  1535  00F53B  20                 	db	32
  1536  00F53C  6F                 	db	111	;'o'
  1537  00F53D  75                 	db	117	;'u'
  1538  00F53E  74                 	db	116	;'t'
  1539  00F53F  70                 	db	112	;'p'
  1540  00F540  75                 	db	117	;'u'
  1541  00F541  74                 	db	116	;'t'
  1542  00F542  20                 	db	32
  1543  00F543  63                 	db	99	;'c'
  1544  00F544  75                 	db	117	;'u'
  1545  00F545  72                 	db	114	;'r'
  1546  00F546  72                 	db	114	;'r'
  1547  00F547  65                 	db	101	;'e'
  1548  00F548  6E                 	db	110	;'n'
  1549  00F549  74                 	db	116	;'t'
  1550  00F54A  20                 	db	32
  1551  00F54B  66                 	db	102	;'f'
  1552  00F54C  72                 	db	114	;'r'
  1553  00F54D  6F                 	db	111	;'o'
  1554  00F54E  6D                 	db	109	;'m'
  1555  00F54F  20                 	db	32
  1556  00F550  6D                 	db	109	;'m'
  1557  00F551  65                 	db	101	;'e'
  1558  00F552  61                 	db	97	;'a'
  1559  00F553  73                 	db	115	;'s'
  1560  00F554  75                 	db	117	;'u'
  1561  00F555  72                 	db	114	;'r'
  1562  00F556  65                 	db	101	;'e'
  1563  00F557  6D                 	db	109	;'m'
  1564  00F558  65                 	db	101	;'e'
  1565  00F559  6E                 	db	110	;'n'
  1566  00F55A  74                 	db	116	;'t'
  1567  00F55B  73                 	db	115	;'s'
  1568  00F55C  20                 	db	32
  1569  00F55D  61                 	db	97	;'a'
  1570  00F55E  6E                 	db	110	;'n'
  1571  00F55F  64                 	db	100	;'d'
  1572  00F560  20                 	db	32
  1573  00F561  54                 	db	84	;'T'
  1574  00F562  52                 	db	82	;'R'
  1575  00F563  49                 	db	73	;'I'
  1576  00F564  41                 	db	65	;'A'
  1577  00F565  43                 	db	67	;'C'
  1578  00F566  20                 	db	32
  1579  00F567  66                 	db	102	;'f'
  1580  00F568  69                 	db	105	;'i'
  1581  00F569  72                 	db	114	;'r'
  1582  00F56A  69                 	db	105	;'i'
  1583  00F56B  6E                 	db	110	;'n'
  1584  00F56C  67                 	db	103	;'g'
  1585  00F56D  20                 	db	32
  1586  00F56E  61                 	db	97	;'a'
  1587  00F56F  6E                 	db	110	;'n'
  1588  00F570  67                 	db	103	;'g'
  1589  00F571  6C                 	db	108	;'l'
  1590  00F572  65                 	db	101	;'e'
  1591  00F573  0A                 	db	10
  1592  00F574  0D                 	db	13
  1593  00F575  20                 	db	32
  1594  00F576  20                 	db	32
  1595  00F577  20                 	db	32
  1596  00F578  4D                 	db	77	;'M'
  1597  00F579  65                 	db	101	;'e'
  1598  00F57A  61                 	db	97	;'a'
  1599  00F57B  73                 	db	115	;'s'
  1600  00F57C  75                 	db	117	;'u'
  1601  00F57D  72                 	db	114	;'r'
  1602  00F57E  65                 	db	101	;'e'
  1603  00F57F  20                 	db	32
  1604  00F580  52                 	db	82	;'R'
  1605  00F581  4D                 	db	77	;'M'
  1606  00F582  53                 	db	83	;'S'
  1607  00F583  20                 	db	32
  1608  00F584  56                 	db	86	;'V'
  1609  00F585  6F                 	db	111	;'o'
  1610  00F586  6C                 	db	108	;'l'
  1611  00F587  74                 	db	116	;'t'
  1612  00F588  61                 	db	97	;'a'
  1613  00F589  67                 	db	103	;'g'
  1614  00F58A  65                 	db	101	;'e'
  1615  00F58B  3F                 	db	63	;'?'
  1616  00F58C  3A                 	db	58	;':'
  1617  00F58D  20                 	db	32
  1618  00F58E  52                 	db	82	;'R'
  1619  00F58F  65                 	db	101	;'e'
  1620  00F590  74                 	db	116	;'t'
  1621  00F591  75                 	db	117	;'u'
  1622  00F592  72                 	db	114	;'r'
  1623  00F593  6E                 	db	110	;'n'
  1624  00F594  73                 	db	115	;'s'
  1625  00F595  20                 	db	32
  1626  00F596  74                 	db	116	;'t'
  1627  00F597  68                 	db	104	;'h'
  1628  00F598  65                 	db	101	;'e'
  1629  00F599  20                 	db	32
  1630  00F59A  63                 	db	99	;'c'
  1631  00F59B  61                 	db	97	;'a'
  1632  00F59C  6C                 	db	108	;'l'
  1633  00F59D  63                 	db	99	;'c'
  1634  00F59E  75                 	db	117	;'u'
  1635  00F59F  6C                 	db	108	;'l'
  1636  00F5A0  61                 	db	97	;'a'
  1637  00F5A1  74                 	db	116	;'t'
  1638  00F5A2  65                 	db	101	;'e'
  1639  00F5A3  64                 	db	100	;'d'
  1640  00F5A4  20                 	db	32
  1641  00F5A5  52                 	db	82	;'R'
  1642  00F5A6  4D                 	db	77	;'M'
  1643  00F5A7  53                 	db	83	;'S'
  1644  00F5A8  20                 	db	32
  1645  00F5A9  6F                 	db	111	;'o'
  1646  00F5AA  75                 	db	117	;'u'
  1647  00F5AB  74                 	db	116	;'t'
  1648  00F5AC  70                 	db	112	;'p'
  1649  00F5AD  75                 	db	117	;'u'
  1650  00F5AE  74                 	db	116	;'t'
  1651  00F5AF  20                 	db	32
  1652  00F5B0  76                 	db	118	;'v'
  1653  00F5B1  6F                 	db	111	;'o'
  1654  00F5B2  6C                 	db	108	;'l'
  1655  00F5B3  74                 	db	116	;'t'
  1656  00F5B4  61                 	db	97	;'a'
  1657  00F5B5  67                 	db	103	;'g'
  1658  00F5B6  65                 	db	101	;'e'
  1659  00F5B7  20                 	db	32
  1660  00F5B8  66                 	db	102	;'f'
  1661  00F5B9  72                 	db	114	;'r'
  1662  00F5BA  6F                 	db	111	;'o'
  1663  00F5BB  6D                 	db	109	;'m'
  1664  00F5BC  20                 	db	32
  1665  00F5BD  54                 	db	84	;'T'
  1666  00F5BE  52                 	db	82	;'R'
  1667  00F5BF  49                 	db	73	;'I'
  1668  00F5C0  41                 	db	65	;'A'
  1669  00F5C1  43                 	db	67	;'C'
  1670  00F5C2  20                 	db	32
  1671  00F5C3  66                 	db	102	;'f'
  1672  00F5C4  69                 	db	105	;'i'
  1673  00F5C5  72                 	db	114	;'r'
  1674  00F5C6  69                 	db	105	;'i'
  1675  00F5C7  6E                 	db	110	;'n'
  1676  00F5C8  67                 	db	103	;'g'
  1677  00F5C9  20                 	db	32
  1678  00F5CA  61                 	db	97	;'a'
  1679  00F5CB  6E                 	db	110	;'n'
  1680  00F5CC  67                 	db	103	;'g'
  1681  00F5CD  6C                 	db	108	;'l'
  1682  00F5CE  65                 	db	101	;'e'
  1683  00F5CF  0A                 	db	10
  1684  00F5D0  0D                 	db	13
  1685  00F5D1  20                 	db	32
  1686  00F5D2  20                 	db	32
  1687  00F5D3  20                 	db	32
  1688  00F5D4  4D                 	db	77	;'M'
  1689  00F5D5  65                 	db	101	;'e'
  1690  00F5D6  61                 	db	97	;'a'
  1691  00F5D7  73                 	db	115	;'s'
  1692  00F5D8  75                 	db	117	;'u'
  1693  00F5D9  72                 	db	114	;'r'
  1694  00F5DA  65                 	db	101	;'e'
  1695  00F5DB  20                 	db	32
  1696  00F5DC  50                 	db	80	;'P'
  1697  00F5DD  6F                 	db	111	;'o'
  1698  00F5DE  77                 	db	119	;'w'
  1699  00F5DF  65                 	db	101	;'e'
  1700  00F5E0  72                 	db	114	;'r'
  1701  00F5E1  3F                 	db	63	;'?'
  1702  00F5E2  3A                 	db	58	;':'
  1703  00F5E3  20                 	db	32
  1704  00F5E4  52                 	db	82	;'R'
  1705  00F5E5  65                 	db	101	;'e'
  1706  00F5E6  74                 	db	116	;'t'
  1707  00F5E7  75                 	db	117	;'u'
  1708  00F5E8  72                 	db	114	;'r'
  1709  00F5E9  6E                 	db	110	;'n'
  1710  00F5EA  73                 	db	115	;'s'
  1711  00F5EB  20                 	db	32
  1712  00F5EC  74                 	db	116	;'t'
  1713  00F5ED  68                 	db	104	;'h'
  1714  00F5EE  65                 	db	101	;'e'
  1715  00F5EF  20                 	db	32
  1716  00F5F0  63                 	db	99	;'c'
  1717  00F5F1  61                 	db	97	;'a'
  1718  00F5F2  6C                 	db	108	;'l'
  1719  00F5F3  63                 	db	99	;'c'
  1720  00F5F4  75                 	db	117	;'u'
  1721  00F5F5  6C                 	db	108	;'l'
  1722  00F5F6  61                 	db	97	;'a'
  1723  00F5F7  74                 	db	116	;'t'
  1724  00F5F8  65                 	db	101	;'e'
  1725  00F5F9  64                 	db	100	;'d'
  1726  00F5FA  20                 	db	32
  1727  00F5FB  6F                 	db	111	;'o'
  1728  00F5FC  75                 	db	117	;'u'
  1729  00F5FD  74                 	db	116	;'t'
  1730  00F5FE  70                 	db	112	;'p'
  1731  00F5FF  75                 	db	117	;'u'
  1732  00F600  74                 	db	116	;'t'
  1733  00F601  20                 	db	32
  1734  00F602  70                 	db	112	;'p'
  1735  00F603  6F                 	db	111	;'o'
  1736  00F604  77                 	db	119	;'w'
  1737  00F605  65                 	db	101	;'e'
  1738  00F606  72                 	db	114	;'r'
  1739  00F607  20                 	db	32
  1740  00F608  69                 	db	105	;'i'
  1741  00F609  6E                 	db	110	;'n'
  1742  00F60A  20                 	db	32
  1743  00F60B  57                 	db	87	;'W'
  1744  00F60C  61                 	db	97	;'a'
  1745  00F60D  74                 	db	116	;'t'
  1746  00F60E  74                 	db	116	;'t'
  1747  00F60F  73                 	db	115	;'s'
  1748  00F610  0A                 	db	10
  1749  00F611  0D                 	db	13
  1750  00F612  20                 	db	32
  1751  00F613  20                 	db	32
  1752  00F614  20                 	db	32
  1753  00F615  4C                 	db	76	;'L'
  1754  00F616  6F                 	db	111	;'o'
  1755  00F617  61                 	db	97	;'a'
  1756  00F618  64                 	db	100	;'d'
  1757  00F619  20                 	db	32
  1758  00F61A  4F                 	db	79	;'O'
  1759  00F61B  6E                 	db	110	;'n'
  1760  00F61C  20                 	db	32
  1761  00F61D  54                 	db	84	;'T'
  1762  00F61E  69                 	db	105	;'i'
  1763  00F61F  6D                 	db	109	;'m'
  1764  00F620  65                 	db	101	;'e'
  1765  00F621  3F                 	db	63	;'?'
  1766  00F622  3A                 	db	58	;':'
  1767  00F623  20                 	db	32
  1768  00F624  52                 	db	82	;'R'
  1769  00F625  65                 	db	101	;'e'
  1770  00F626  74                 	db	116	;'t'
  1771  00F627  75                 	db	117	;'u'
  1772  00F628  72                 	db	114	;'r'
  1773  00F629  6E                 	db	110	;'n'
  1774  00F62A  73                 	db	115	;'s'
  1775  00F62B  20                 	db	32
  1776  00F62C  6C                 	db	108	;'l'
  1777  00F62D  6F                 	db	111	;'o'
  1778  00F62E  61                 	db	97	;'a'
  1779  00F62F  64                 	db	100	;'d'
  1780  00F630  20                 	db	32
  1781  00F631  6F                 	db	111	;'o'
  1782  00F632  6E                 	db	110	;'n'
  1783  00F633  20                 	db	32
  1784  00F634  74                 	db	116	;'t'
  1785  00F635  69                 	db	105	;'i'
  1786  00F636  6D                 	db	109	;'m'
  1787  00F637  65                 	db	101	;'e'
  1788  00F638  20                 	db	32
  1789  00F639  73                 	db	115	;'s'
  1790  00F63A  69                 	db	105	;'i'
  1791  00F63B  6E                 	db	110	;'n'
  1792  00F63C  63                 	db	99	;'c'
  1793  00F63D  65                 	db	101	;'e'
  1794  00F63E  20                 	db	32
  1795  00F63F  6C                 	db	108	;'l'
  1796  00F640  61                 	db	97	;'a'
  1797  00F641  73                 	db	115	;'s'
  1798  00F642  74                 	db	116	;'t'
  1799  00F643  20                 	db	32
  1800  00F644  64                 	db	100	;'d'
  1801  00F645  65                 	db	101	;'e'
  1802  00F646  76                 	db	118	;'v'
  1803  00F647  69                 	db	105	;'i'
  1804  00F648  63                 	db	99	;'c'
  1805  00F649  65                 	db	101	;'e'
  1806  00F64A  20                 	db	32
  1807  00F64B  72                 	db	114	;'r'
  1808  00F64C  65                 	db	101	;'e'
  1809  00F64D  73                 	db	115	;'s'
  1810  00F64E  65                 	db	101	;'e'
  1811  00F64F  74                 	db	116	;'t'
  1812  00F650  20                 	db	32
  1813  00F651  69                 	db	105	;'i'
  1814  00F652  6E                 	db	110	;'n'
  1815  00F653  20                 	db	32
  1816  00F654  73                 	db	115	;'s'
  1817  00F655  65                 	db	101	;'e'
  1818  00F656  63                 	db	99	;'c'
  1819  00F657  6F                 	db	111	;'o'
  1820  00F658  6E                 	db	110	;'n'
  1821  00F659  64                 	db	100	;'d'
  1822  00F65A  73                 	db	115	;'s'
  1823  00F65B  0A                 	db	10
  1824  00F65C  0D                 	db	13
  1825  00F65D  0A                 	db	10
  1826  00F65E  0D                 	db	13
  1827  00F65F  4F                 	db	79	;'O'
  1828  00F660  75                 	db	117	;'u'
  1829  00F661  74                 	db	116	;'t'
  1830  00F662  70                 	db	112	;'p'
  1831  00F663  75                 	db	117	;'u'
  1832  00F664  74                 	db	116	;'t'
  1833  00F665  20                 	db	32
  1834  00F666  43                 	db	67	;'C'
  1835  00F667  6F                 	db	111	;'o'
  1836  00F668  6E                 	db	110	;'n'
  1837  00F669  74                 	db	116	;'t'
  1838  00F66A  72                 	db	114	;'r'
  1839  00F66B  6F                 	db	111	;'o'
  1840  00F66C  6C                 	db	108	;'l'
  1841  00F66D  20                 	db	32
  1842  00F66E  43                 	db	67	;'C'
  1843  00F66F  6F                 	db	111	;'o'
  1844  00F670  6D                 	db	109	;'m'
  1845  00F671  6D                 	db	109	;'m'
  1846  00F672  61                 	db	97	;'a'
  1847  00F673  6E                 	db	110	;'n'
  1848  00F674  64                 	db	100	;'d'
  1849  00F675  73                 	db	115	;'s'
  1850  00F676  3A                 	db	58	;':'
  1851  00F677  0A                 	db	10
  1852  00F678  0D                 	db	13
  1853  00F679  20                 	db	32
  1854  00F67A  20                 	db	32
  1855  00F67B  20                 	db	32
  1856  00F67C  45                 	db	69	;'E'
  1857  00F67D  6E                 	db	110	;'n'
  1858  00F67E  61                 	db	97	;'a'
  1859  00F67F  62                 	db	98	;'b'
  1860  00F680  6C                 	db	108	;'l'
  1861  00F681  65                 	db	101	;'e'
  1862  00F682  20                 	db	32
  1863  00F683  44                 	db	68	;'D'
  1864  00F684  69                 	db	105	;'i'
  1865  00F685  6D                 	db	109	;'m'
  1866  00F686  6D                 	db	109	;'m'
  1867  00F687  69                 	db	105	;'i'
  1868  00F688  6E                 	db	110	;'n'
  1869  00F689  67                 	db	103	;'g'
  1870  00F68A  3A                 	db	58	;':'
  1871  00F68B  20                 	db	32
  1872  00F68C  45                 	db	69	;'E'
  1873  00F68D  6E                 	db	110	;'n'
  1874  00F68E  61                 	db	97	;'a'
  1875  00F68F  62                 	db	98	;'b'
  1876  00F690  6C                 	db	108	;'l'
  1877  00F691  65                 	db	101	;'e'
  1878  00F692  20                 	db	32
  1879  00F693  54                 	db	84	;'T'
  1880  00F694  52                 	db	82	;'R'
  1881  00F695  49                 	db	73	;'I'
  1882  00F696  41                 	db	65	;'A'
  1883  00F697  43                 	db	67	;'C'
  1884  00F698  20                 	db	32
  1885  00F699  6F                 	db	111	;'o'
  1886  00F69A  75                 	db	117	;'u'
  1887  00F69B  74                 	db	116	;'t'
  1888  00F69C  70                 	db	112	;'p'
  1889  00F69D  75                 	db	117	;'u'
  1890  00F69E  74                 	db	116	;'t'
  1891  00F69F  20                 	db	32
  1892  00F6A0  64                 	db	100	;'d'
  1893  00F6A1  69                 	db	105	;'i'
  1894  00F6A2  6D                 	db	109	;'m'
  1895  00F6A3  6D                 	db	109	;'m'
  1896  00F6A4  69                 	db	105	;'i'
  1897  00F6A5  6E                 	db	110	;'n'
  1898  00F6A6  67                 	db	103	;'g'
  1899  00F6A7  0A                 	db	10
  1900  00F6A8  0D                 	db	13
  1901  00F6A9  20                 	db	32
  1902  00F6AA  20                 	db	32
  1903  00F6AB  20                 	db	32
  1904  00F6AC  44                 	db	68	;'D'
  1905  00F6AD  69                 	db	105	;'i'
  1906  00F6AE  73                 	db	115	;'s'
  1907  00F6AF  61                 	db	97	;'a'
  1908  00F6B0  62                 	db	98	;'b'
  1909  00F6B1  6C                 	db	108	;'l'
  1910  00F6B2  65                 	db	101	;'e'
  1911  00F6B3  20                 	db	32
  1912  00F6B4  44                 	db	68	;'D'
  1913  00F6B5  69                 	db	105	;'i'
  1914  00F6B6  6D                 	db	109	;'m'
  1915  00F6B7  6D                 	db	109	;'m'
  1916  00F6B8  69                 	db	105	;'i'
  1917  00F6B9  6E                 	db	110	;'n'
  1918  00F6BA  67                 	db	103	;'g'
  1919  00F6BB  3A                 	db	58	;':'
  1920  00F6BC  20                 	db	32
  1921  00F6BD  44                 	db	68	;'D'
  1922  00F6BE  69                 	db	105	;'i'
  1923  00F6BF  73                 	db	115	;'s'
  1924  00F6C0  61                 	db	97	;'a'
  1925  00F6C1  62                 	db	98	;'b'
  1926  00F6C2  6C                 	db	108	;'l'
  1927  00F6C3  65                 	db	101	;'e'
  1928  00F6C4  20                 	db	32
  1929  00F6C5  54                 	db	84	;'T'
  1930  00F6C6  52                 	db	82	;'R'
  1931  00F6C7  49                 	db	73	;'I'
  1932  00F6C8  41                 	db	65	;'A'
  1933  00F6C9  43                 	db	67	;'C'
  1934  00F6CA  20                 	db	32
  1935  00F6CB  6F                 	db	111	;'o'
  1936  00F6CC  75                 	db	117	;'u'
  1937  00F6CD  74                 	db	116	;'t'
  1938  00F6CE  70                 	db	112	;'p'
  1939  00F6CF  75                 	db	117	;'u'
  1940  00F6D0  74                 	db	116	;'t'
  1941  00F6D1  20                 	db	32
  1942  00F6D2  64                 	db	100	;'d'
  1943  00F6D3  69                 	db	105	;'i'
  1944  00F6D4  6D                 	db	109	;'m'
  1945  00F6D5  6D                 	db	109	;'m'
  1946  00F6D6  69                 	db	105	;'i'
  1947  00F6D7  6E                 	db	110	;'n'
  1948  00F6D8  67                 	db	103	;'g'
  1949  00F6D9  0A                 	db	10
  1950  00F6DA  0D                 	db	13
  1951  00F6DB  20                 	db	32
  1952  00F6DC  20                 	db	32
  1953  00F6DD  20                 	db	32
  1954  00F6DE  45                 	db	69	;'E'
  1955  00F6DF  6E                 	db	110	;'n'
  1956  00F6E0  61                 	db	97	;'a'
  1957  00F6E1  62                 	db	98	;'b'
  1958  00F6E2  6C                 	db	108	;'l'
  1959  00F6E3  65                 	db	101	;'e'
  1960  00F6E4  20                 	db	32
  1961  00F6E5  4C                 	db	76	;'L'
  1962  00F6E6  6F                 	db	111	;'o'
  1963  00F6E7  61                 	db	97	;'a'
  1964  00F6E8  64                 	db	100	;'d'
  1965  00F6E9  3A                 	db	58	;':'
  1966  00F6EA  20                 	db	32
  1967  00F6EB  45                 	db	69	;'E'
  1968  00F6EC  6E                 	db	110	;'n'
  1969  00F6ED  61                 	db	97	;'a'
  1970  00F6EE  62                 	db	98	;'b'
  1971  00F6EF  6C                 	db	108	;'l'
  1972  00F6F0  65                 	db	101	;'e'
  1973  00F6F1  73                 	db	115	;'s'
  1974  00F6F2  20                 	db	32
  1975  00F6F3  74                 	db	116	;'t'
  1976  00F6F4  68                 	db	104	;'h'
  1977  00F6F5  65                 	db	101	;'e'
  1978  00F6F6  20                 	db	32
  1979  00F6F7  6F                 	db	111	;'o'
  1980  00F6F8  75                 	db	117	;'u'
  1981  00F6F9  74                 	db	116	;'t'
  1982  00F6FA  70                 	db	112	;'p'
  1983  00F6FB  75                 	db	117	;'u'
  1984  00F6FC  74                 	db	116	;'t'
  1985  00F6FD  20                 	db	32
  1986  00F6FE  54                 	db	84	;'T'
  1987  00F6FF  52                 	db	82	;'R'
  1988  00F700  49                 	db	73	;'I'
  1989  00F701  41                 	db	65	;'A'
  1990  00F702  43                 	db	67	;'C'
  1991  00F703  20                 	db	32
  1992  00F704  77                 	db	119	;'w'
  1993  00F705  69                 	db	105	;'i'
  1994  00F706  74                 	db	116	;'t'
  1995  00F707  68                 	db	104	;'h'
  1996  00F708  20                 	db	32
  1997  00F709  64                 	db	100	;'d'
  1998  00F70A  69                 	db	105	;'i'
  1999  00F70B  6D                 	db	109	;'m'
  2000  00F70C  6D                 	db	109	;'m'
  2001  00F70D  69                 	db	105	;'i'
  2002  00F70E  6E                 	db	110	;'n'
  2003  00F70F  67                 	db	103	;'g'
  2004  00F710  20                 	db	32
  2005  00F711  64                 	db	100	;'d'
  2006  00F712  69                 	db	105	;'i'
  2007  00F713  73                 	db	115	;'s'
  2008  00F714  61                 	db	97	;'a'
  2009  00F715  62                 	db	98	;'b'
  2010  00F716  6C                 	db	108	;'l'
  2011  00F717  65                 	db	101	;'e'
  2012  00F718  64                 	db	100	;'d'
  2013  00F719  0A                 	db	10
  2014  00F71A  0D                 	db	13
  2015  00F71B  20                 	db	32
  2016  00F71C  20                 	db	32
  2017  00F71D  20                 	db	32
  2018  00F71E  44                 	db	68	;'D'
  2019  00F71F  69                 	db	105	;'i'
  2020  00F720  73                 	db	115	;'s'
  2021  00F721  61                 	db	97	;'a'
  2022  00F722  62                 	db	98	;'b'
  2023  00F723  6C                 	db	108	;'l'
  2024  00F724  65                 	db	101	;'e'
  2025  00F725  20                 	db	32
  2026  00F726  4C                 	db	76	;'L'
  2027  00F727  6F                 	db	111	;'o'
  2028  00F728  61                 	db	97	;'a'
  2029  00F729  64                 	db	100	;'d'
  2030  00F72A  3A                 	db	58	;':'
  2031  00F72B  20                 	db	32
  2032  00F72C  44                 	db	68	;'D'
  2033  00F72D  69                 	db	105	;'i'
  2034  00F72E  73                 	db	115	;'s'
  2035  00F72F  61                 	db	97	;'a'
  2036  00F730  62                 	db	98	;'b'
  2037  00F731  6C                 	db	108	;'l'
  2038  00F732  65                 	db	101	;'e'
  2039  00F733  73                 	db	115	;'s'
  2040  00F734  20                 	db	32
  2041  00F735  74                 	db	116	;'t'
  2042  00F736  68                 	db	104	;'h'
  2043  00F737  65                 	db	101	;'e'
  2044  00F738  20                 	db	32
  2045  00F739  6F                 	db	111	;'o'
  2046  00F73A  75                 	db	117	;'u'
  2047  00F73B  74                 	db	116	;'t'
  2048  00F73C  70                 	db	112	;'p'
  2049  00F73D  75                 	db	117	;'u'
  2050  00F73E  74                 	db	116	;'t'
  2051  00F73F  20                 	db	32
  2052  00F740  54                 	db	84	;'T'
  2053  00F741  52                 	db	82	;'R'
  2054  00F742  49                 	db	73	;'I'
  2055  00F743  41                 	db	65	;'A'
  2056  00F744  43                 	db	67	;'C'
  2057  00F745  20                 	db	32
  2058  00F746  63                 	db	99	;'c'
  2059  00F747  6F                 	db	111	;'o'
  2060  00F748  6D                 	db	109	;'m'
  2061  00F749  70                 	db	112	;'p'
  2062  00F74A  6C                 	db	108	;'l'
  2063  00F74B  65                 	db	101	;'e'
  2064  00F74C  74                 	db	116	;'t'
  2065  00F74D  65                 	db	101	;'e'
  2066  00F74E  6C                 	db	108	;'l'
  2067  00F74F  79                 	db	121	;'y'
  2068  00F750  0A                 	db	10
  2069  00F751  0D                 	db	13
  2070  00F752  20                 	db	32
  2071  00F753  20                 	db	32
  2072  00F754  20                 	db	32
  2073  00F755  53                 	db	83	;'S'
  2074  00F756  65                 	db	101	;'e'
  2075  00F757  74                 	db	116	;'t'
  2076  00F758  20                 	db	32
  2077  00F759  44                 	db	68	;'D'
  2078  00F75A  69                 	db	105	;'i'
  2079  00F75B  6D                 	db	109	;'m'
  2080  00F75C  6D                 	db	109	;'m'
  2081  00F75D  69                 	db	105	;'i'
  2082  00F75E  6E                 	db	110	;'n'
  2083  00F75F  67                 	db	103	;'g'
  2084  00F760  20                 	db	32
  2085  00F761  50                 	db	80	;'P'
  2086  00F762  65                 	db	101	;'e'
  2087  00F763  72                 	db	114	;'r'
  2088  00F764  63                 	db	99	;'c'
  2089  00F765  65                 	db	101	;'e'
  2090  00F766  6E                 	db	110	;'n'
  2091  00F767  74                 	db	116	;'t'
  2092  00F768  61                 	db	97	;'a'
  2093  00F769  67                 	db	103	;'g'
  2094  00F76A  65                 	db	101	;'e'
  2095  00F76B  3A                 	db	58	;':'
  2096  00F76C  20                 	db	32
  2097  00F76D  3C                 	db	60	;'<'
  2098  00F76E  78                 	db	120	;'x'
  2099  00F76F  3E                 	db	62	;'>'
  2100  00F770  3A                 	db	58	;':'
  2101  00F771  20                 	db	32
  2102  00F772  53                 	db	83	;'S'
  2103  00F773  65                 	db	101	;'e'
  2104  00F774  74                 	db	116	;'t'
  2105  00F775  73                 	db	115	;'s'
  2106  00F776  20                 	db	32
  2107  00F777  74                 	db	116	;'t'
  2108  00F778  68                 	db	104	;'h'
  2109  00F779  65                 	db	101	;'e'
  2110  00F77A  20                 	db	32
  2111  00F77B  6F                 	db	111	;'o'
  2112  00F77C  75                 	db	117	;'u'
  2113  00F77D  74                 	db	116	;'t'
  2114  00F77E  70                 	db	112	;'p'
  2115  00F77F  75                 	db	117	;'u'
  2116  00F780  74                 	db	116	;'t'
  2117  00F781  20                 	db	32
  2118  00F782  64                 	db	100	;'d'
  2119  00F783  69                 	db	105	;'i'
  2120  00F784  6D                 	db	109	;'m'
  2121  00F785  6D                 	db	109	;'m'
  2122  00F786  69                 	db	105	;'i'
  2123  00F787  6E                 	db	110	;'n'
  2124  00F788  67                 	db	103	;'g'
  2125  00F789  20                 	db	32
  2126  00F78A  70                 	db	112	;'p'
  2127  00F78B  65                 	db	101	;'e'
  2128  00F78C  72                 	db	114	;'r'
  2129  00F78D  63                 	db	99	;'c'
  2130  00F78E  65                 	db	101	;'e'
  2131  00F78F  6E                 	db	110	;'n'
  2132  00F790  74                 	db	116	;'t'
  2133  00F791  61                 	db	97	;'a'
  2134  00F792  67                 	db	103	;'g'
  2135  00F793  65                 	db	101	;'e'
  2136  00F794  20                 	db	32
  2137  00F795  61                 	db	97	;'a'
  2138  00F796  73                 	db	115	;'s'
  2139  00F797  20                 	db	32
  2140  00F798  78                 	db	120	;'x'
  2141  00F799  20                 	db	32
  2142  00F79A  70                 	db	112	;'p'
  2143  00F79B  65                 	db	101	;'e'
  2144  00F79C  72                 	db	114	;'r'
  2145  00F79D  63                 	db	99	;'c'
  2146  00F79E  65                 	db	101	;'e'
  2147  00F79F  6E                 	db	110	;'n'
  2148  00F7A0  74                 	db	116	;'t'
  2149  00F7A1  0A                 	db	10
  2150  00F7A2  0D                 	db	13
  2151  00F7A3  00                 	db	0
  2152  00F7A4  20                 	db	32
  2153  00F7A5  20                 	db	32
  2154  00F7A6  20                 	db	32
  2155  00F7A7  20                 	db	32
  2156  00F7A8  42                 	db	66	;'B'
  2157  00F7A9  6F                 	db	111	;'o'
  2158  00F7AA  6F                 	db	111	;'o'
  2159  00F7AB  74                 	db	116	;'t'
  2160  00F7AC  20                 	db	32
  2161  00F7AD  63                 	db	99	;'c'
  2162  00F7AE  6F                 	db	111	;'o'
  2163  00F7AF  6D                 	db	109	;'m'
  2164  00F7B0  70                 	db	112	;'p'
  2165  00F7B1  6C                 	db	108	;'l'
  2166  00F7B2  65                 	db	101	;'e'
  2167  00F7B3  74                 	db	116	;'t'
  2168  00F7B4  65                 	db	101	;'e'
  2169  00F7B5  0A                 	db	10
  2170  00F7B6  0D                 	db	13
  2171  00F7B7  20                 	db	32
  2172  00F7B8  20                 	db	32
  2173  00F7B9  20                 	db	32
  2174  00F7BA  20                 	db	32
  2175  00F7BB  50                 	db	80	;'P'
  2176  00F7BC  49                 	db	73	;'I'
  2177  00F7BD  43                 	db	67	;'C'
  2178  00F7BE  31                 	db	49	;'1'
  2179  00F7BF  38                 	db	56	;'8'
  2180  00F7C0  46                 	db	70	;'F'
  2181  00F7C1  36                 	db	54	;'6'
  2182  00F7C2  37                 	db	55	;'7'
  2183  00F7C3  4B                 	db	75	;'K'
  2184  00F7C4  34                 	db	52	;'4'
  2185  00F7C5  30                 	db	48	;'0'
  2186  00F7C6  20                 	db	32
  2187  00F7C7  6D                 	db	109	;'m'
  2188  00F7C8  54                 	db	84	;'T'
  2189  00F7C9  6F                 	db	111	;'o'
  2190  00F7CA  75                 	db	117	;'u'
  2191  00F7CB  63                 	db	99	;'c'
  2192  00F7CC  68                 	db	104	;'h'
  2193  00F7CD  20                 	db	32
  2194  00F7CE  54                 	db	84	;'T'
  2195  00F7CF  65                 	db	101	;'e'
  2196  00F7D0  73                 	db	115	;'s'
  2197  00F7D1  74                 	db	116	;'t'
  2198  00F7D2  20                 	db	32
  2199  00F7D3  42                 	db	66	;'B'
  2200  00F7D4  6F                 	db	111	;'o'
  2201  00F7D5  61                 	db	97	;'a'
  2202  00F7D6  72                 	db	114	;'r'
  2203  00F7D7  64                 	db	100	;'d'
  2204  00F7D8  0A                 	db	10
  2205  00F7D9  0D                 	db	13
  2206  00F7DA  20                 	db	32
  2207  00F7DB  20                 	db	32
  2208  00F7DC  20                 	db	32
  2209  00F7DD  20                 	db	32
  2210  00F7DE  45                 	db	69	;'E'
  2211  00F7DF  76                 	db	118	;'v'
  2212  00F7E0  61                 	db	97	;'a'
  2213  00F7E1  6C                 	db	108	;'l'
  2214  00F7E2  75                 	db	117	;'u'
  2215  00F7E3  61                 	db	97	;'a'
  2216  00F7E4  74                 	db	116	;'t'
  2217  00F7E5  65                 	db	101	;'e'
  2218  00F7E6  73                 	db	115	;'s'
  2219  00F7E7  20                 	db	32
  2220  00F7E8  74                 	db	116	;'t'
  2221  00F7E9  68                 	db	104	;'h'
  2222  00F7EA  65                 	db	101	;'e'
  2223  00F7EB  20                 	db	32
  2224  00F7EC  6D                 	db	109	;'m'
  2225  00F7ED  54                 	db	84	;'T'
  2226  00F7EE  6F                 	db	111	;'o'
  2227  00F7EF  75                 	db	117	;'u'
  2228  00F7F0  63                 	db	99	;'c'
  2229  00F7F1  68                 	db	104	;'h'
  2230  00F7F2  20                 	db	32
  2231  00F7F3  63                 	db	99	;'c'
  2232  00F7F4  61                 	db	97	;'a'
  2233  00F7F5  70                 	db	112	;'p'
  2234  00F7F6  61                 	db	97	;'a'
  2235  00F7F7  63                 	db	99	;'c'
  2236  00F7F8  69                 	db	105	;'i'
  2237  00F7F9  74                 	db	116	;'t'
  2238  00F7FA  69                 	db	105	;'i'
  2239  00F7FB  76                 	db	118	;'v'
  2240  00F7FC  65                 	db	101	;'e'
  2241  00F7FD  20                 	db	32
  2242  00F7FE  74                 	db	116	;'t'
  2243  00F7FF  6F                 	db	111	;'o'
  2244  00F800  75                 	db	117	;'u'
  2245  00F801  63                 	db	99	;'c'
  2246  00F802  68                 	db	104	;'h'
  2247  00F803  20                 	db	32
  2248  00F804  6C                 	db	108	;'l'
  2249  00F805  69                 	db	105	;'i'
  2250  00F806  62                 	db	98	;'b'
  2251  00F807  72                 	db	114	;'r'
  2252  00F808  61                 	db	97	;'a'
  2253  00F809  72                 	db	114	;'r'
  2254  00F80A  79                 	db	121	;'y'
  2255  00F80B  20                 	db	32
  2256  00F80C  64                 	db	100	;'d'
  2257  00F80D  69                 	db	105	;'i'
  2258  00F80E  73                 	db	115	;'s'
  2259  00F80F  74                 	db	116	;'t'
  2260  00F810  72                 	db	114	;'r'
  2261  00F811  69                 	db	105	;'i'
  2262  00F812  62                 	db	98	;'b'
  2263  00F813  75                 	db	117	;'u'
  2264  00F814  74                 	db	116	;'t'
  2265  00F815  65                 	db	101	;'e'
  2266  00F816  64                 	db	100	;'d'
  2267  00F817  20                 	db	32
  2268  00F818  62                 	db	98	;'b'
  2269  00F819  79                 	db	121	;'y'
  2270  00F81A  20                 	db	32
  2271  00F81B  4D                 	db	77	;'M'
  2272  00F81C  69                 	db	105	;'i'
  2273  00F81D  63                 	db	99	;'c'
  2274  00F81E  72                 	db	114	;'r'
  2275  00F81F  6F                 	db	111	;'o'
  2276  00F820  63                 	db	99	;'c'
  2277  00F821  68                 	db	104	;'h'
  2278  00F822  69                 	db	105	;'i'
  2279  00F823  70                 	db	112	;'p'
  2280  00F824  0A                 	db	10
  2281  00F825  0D                 	db	13
  2282  00F826  20                 	db	32
  2283  00F827  20                 	db	32
  2284  00F828  20                 	db	32
  2285  00F829  20                 	db	32
  2286  00F82A  53                 	db	83	;'S'
  2287  00F82B  65                 	db	101	;'e'
  2288  00F82C  74                 	db	116	;'t'
  2289  00F82D  73                 	db	115	;'s'
  2290  00F82E  20                 	db	32
  2291  00F82F  74                 	db	116	;'t'
  2292  00F830  68                 	db	104	;'h'
  2293  00F831  65                 	db	101	;'e'
  2294  00F832  20                 	db	32
  2295  00F833  73                 	db	115	;'s'
  2296  00F834  74                 	db	116	;'t'
  2297  00F835  61                 	db	97	;'a'
  2298  00F836  74                 	db	116	;'t'
  2299  00F837  65                 	db	101	;'e'
  2300  00F838  20                 	db	32
  2301  00F839  6F                 	db	111	;'o'
  2302  00F83A  66                 	db	102	;'f'
  2303  00F83B  20                 	db	32
  2304  00F83C  66                 	db	102	;'f'
  2305  00F83D  69                 	db	105	;'i'
  2306  00F83E  76                 	db	118	;'v'
  2307  00F83F  65                 	db	101	;'e'
  2308  00F840  20                 	db	32
  2309  00F841  4C                 	db	76	;'L'
  2310  00F842  45                 	db	69	;'E'
  2311  00F843  44                 	db	68	;'D'
  2312  00F844  73                 	db	115	;'s'
  2313  00F845  20                 	db	32
  2314  00F846  62                 	db	98	;'b'
  2315  00F847  61                 	db	97	;'a'
  2316  00F848  73                 	db	115	;'s'
  2317  00F849  65                 	db	101	;'e'
  2318  00F84A  64                 	db	100	;'d'
  2319  00F84B  20                 	db	32
  2320  00F84C  6F                 	db	111	;'o'
  2321  00F84D  6E                 	db	110	;'n'
  2322  00F84E  20                 	db	32
  2323  00F84F  6D                 	db	109	;'m'
  2324  00F850  54                 	db	84	;'T'
  2325  00F851  6F                 	db	111	;'o'
  2326  00F852  75                 	db	117	;'u'
  2327  00F853  63                 	db	99	;'c'
  2328  00F854  68                 	db	104	;'h'
  2329  00F855  20                 	db	32
  2330  00F856  63                 	db	99	;'c'
  2331  00F857  61                 	db	97	;'a'
  2332  00F858  70                 	db	112	;'p'
  2333  00F859  61                 	db	97	;'a'
  2334  00F85A  63                 	db	99	;'c'
  2335  00F85B  69                 	db	105	;'i'
  2336  00F85C  74                 	db	116	;'t'
  2337  00F85D  69                 	db	105	;'i'
  2338  00F85E  76                 	db	118	;'v'
  2339  00F85F  65                 	db	101	;'e'
  2340  00F860  20                 	db	32
  2341  00F861  70                 	db	112	;'p'
  2342  00F862  75                 	db	117	;'u'
  2343  00F863  73                 	db	115	;'s'
  2344  00F864  68                 	db	104	;'h'
  2345  00F865  62                 	db	98	;'b'
  2346  00F866  75                 	db	117	;'u'
  2347  00F867  74                 	db	116	;'t'
  2348  00F868  74                 	db	116	;'t'
  2349  00F869  6F                 	db	111	;'o'
  2350  00F86A  6E                 	db	110	;'n'
  2351  00F86B  73                 	db	115	;'s'
  2352  00F86C  0A                 	db	10
  2353  00F86D  0D                 	db	13
  2354  00F86E  20                 	db	32
  2355  00F86F  20                 	db	32
  2356  00F870  20                 	db	32
  2357  00F871  20                 	db	32
  2358  00F872  42                 	db	66	;'B'
  2359  00F873  61                 	db	97	;'a'
  2360  00F874  75                 	db	117	;'u'
  2361  00F875  64                 	db	100	;'d'
  2362  00F876  20                 	db	32
  2363  00F877  72                 	db	114	;'r'
  2364  00F878  61                 	db	97	;'a'
  2365  00F879  74                 	db	116	;'t'
  2366  00F87A  65                 	db	101	;'e'
  2367  00F87B  3A                 	db	58	;':'
  2368  00F87C  20                 	db	32
  2369  00F87D  31                 	db	49	;'1'
  2370  00F87E  31                 	db	49	;'1'
  2371  00F87F  35                 	db	53	;'5'
  2372  00F880  32                 	db	50	;'2'
  2373  00F881  30                 	db	48	;'0'
  2374  00F882  30                 	db	48	;'0'
  2375  00F883  20                 	db	32
  2376  00F884  62                 	db	98	;'b'
  2377  00F885  70                 	db	112	;'p'
  2378  00F886  73                 	db	115	;'s'
  2379  00F887  0A                 	db	10
  2380  00F888  0D                 	db	13
  2381  00F889  20                 	db	32
  2382  00F88A  20                 	db	32
  2383  00F88B  20                 	db	32
  2384  00F88C  20                 	db	32
  2385  00F88D  4E                 	db	78	;'N'
  2386  00F88E  6F                 	db	111	;'o'
  2387  00F88F  20                 	db	32
  2388  00F890  70                 	db	112	;'p'
  2389  00F891  61                 	db	97	;'a'
  2390  00F892  72                 	db	114	;'r'
  2391  00F893  69                 	db	105	;'i'
  2392  00F894  74                 	db	116	;'t'
  2393  00F895  79                 	db	121	;'y'
  2394  00F896  2C                 	db	44
  2395  00F897  20                 	db	32
  2396  00F898  38                 	db	56	;'8'
  2397  00F899  20                 	db	32
  2398  00F89A  62                 	db	98	;'b'
  2399  00F89B  69                 	db	105	;'i'
  2400  00F89C  74                 	db	116	;'t'
  2401  00F89D  73                 	db	115	;'s'
  2402  00F89E  2C                 	db	44
  2403  00F89F  20                 	db	32
  2404  00F8A0  6E                 	db	110	;'n'
  2405  00F8A1  6F                 	db	111	;'o'
  2406  00F8A2  20                 	db	32
  2407  00F8A3  66                 	db	102	;'f'
  2408  00F8A4  6C                 	db	108	;'l'
  2409  00F8A5  6F                 	db	111	;'o'
  2410  00F8A6  77                 	db	119	;'w'
  2411  00F8A7  20                 	db	32
  2412  00F8A8  63                 	db	99	;'c'
  2413  00F8A9  6F                 	db	111	;'o'
  2414  00F8AA  6E                 	db	110	;'n'
  2415  00F8AB  74                 	db	116	;'t'
  2416  00F8AC  72                 	db	114	;'r'
  2417  00F8AD  6F                 	db	111	;'o'
  2418  00F8AE  6C                 	db	108	;'l'
  2419  00F8AF  2C                 	db	44
  2420  00F8B0  20                 	db	32
  2421  00F8B1  31                 	db	49	;'1'
  2422  00F8B2  20                 	db	32
  2423  00F8B3  73                 	db	115	;'s'
  2424  00F8B4  74                 	db	116	;'t'
  2425  00F8B5  6F                 	db	111	;'o'
  2426  00F8B6  70                 	db	112	;'p'
  2427  00F8B7  20                 	db	32
  2428  00F8B8  62                 	db	98	;'b'
  2429  00F8B9  69                 	db	105	;'i'
  2430  00F8BA  74                 	db	116	;'t'
  2431  00F8BB  0A                 	db	10
  2432  00F8BC  0D                 	db	13
  2433  00F8BD  20                 	db	32
  2434  00F8BE  20                 	db	32
  2435  00F8BF  20                 	db	32
  2436  00F8C0  20                 	db	32
  2437  00F8C1  43                 	db	67	;'C'
  2438  00F8C2  6F                 	db	111	;'o'
  2439  00F8C3  6D                 	db	109	;'m'
  2440  00F8C4  6D                 	db	109	;'m'
  2441  00F8C5  61                 	db	97	;'a'
  2442  00F8C6  6E                 	db	110	;'n'
  2443  00F8C7  64                 	db	100	;'d'
  2444  00F8C8  73                 	db	115	;'s'
  2445  00F8C9  20                 	db	32
  2446  00F8CA  61                 	db	97	;'a'
  2447  00F8CB  72                 	db	114	;'r'
  2448  00F8CC  65                 	db	101	;'e'
  2449  00F8CD  20                 	db	32
  2450  00F8CE  63                 	db	99	;'c'
  2451  00F8CF  61                 	db	97	;'a'
  2452  00F8D0  73                 	db	115	;'s'
  2453  00F8D1  65                 	db	101	;'e'
  2454  00F8D2  20                 	db	32
  2455  00F8D3  73                 	db	115	;'s'
  2456  00F8D4  65                 	db	101	;'e'
  2457  00F8D5  6E                 	db	110	;'n'
  2458  00F8D6  73                 	db	115	;'s'
  2459  00F8D7  69                 	db	105	;'i'
  2460  00F8D8  74                 	db	116	;'t'
  2461  00F8D9  69                 	db	105	;'i'
  2462  00F8DA  76                 	db	118	;'v'
  2463  00F8DB  65                 	db	101	;'e'
  2464  00F8DC  0A                 	db	10
  2465  00F8DD  0D                 	db	13
  2466  00F8DE  20                 	db	32
  2467  00F8DF  20                 	db	32
  2468  00F8E0  20                 	db	32
  2469  00F8E1  20                 	db	32
  2470  00F8E2  45                 	db	69	;'E'
  2471  00F8E3  6E                 	db	110	;'n'
  2472  00F8E4  74                 	db	116	;'t'
  2473  00F8E5  65                 	db	101	;'e'
  2474  00F8E6  72                 	db	114	;'r'
  2475  00F8E7  20                 	db	32
  2476  00F8E8  61                 	db	97	;'a'
  2477  00F8E9  20                 	db	32
  2478  00F8EA  63                 	db	99	;'c'
  2479  00F8EB  6F                 	db	111	;'o'
  2480  00F8EC  6D                 	db	109	;'m'
  2481  00F8ED  6D                 	db	109	;'m'
  2482  00F8EE  61                 	db	97	;'a'
  2483  00F8EF  6E                 	db	110	;'n'
  2484  00F8F0  64                 	db	100	;'d'
  2485  00F8F1  2C                 	db	44
  2486  00F8F2  20                 	db	32
  2487  00F8F3  6F                 	db	111	;'o'
  2488  00F8F4  72                 	db	114	;'r'
  2489  00F8F5  20                 	db	32
  2490  00F8F6  65                 	db	101	;'e'
  2491  00F8F7  6E                 	db	110	;'n'
  2492  00F8F8  74                 	db	116	;'t'
  2493  00F8F9  65                 	db	101	;'e'
  2494  00F8FA  72                 	db	114	;'r'
  2495  00F8FB  20                 	db	32
  2496  00F8FC  48                 	db	72	;'H'
  2497  00F8FD  65                 	db	101	;'e'
  2498  00F8FE  6C                 	db	108	;'l'
  2499  00F8FF  70                 	db	112	;'p'
  2500  00F900  20                 	db	32
  2501  00F901  66                 	db	102	;'f'
  2502  00F902  6F                 	db	111	;'o'
  2503  00F903  72                 	db	114	;'r'
  2504  00F904  20                 	db	32
  2505  00F905  6C                 	db	108	;'l'
  2506  00F906  69                 	db	105	;'i'
  2507  00F907  73                 	db	115	;'s'
  2508  00F908  74                 	db	116	;'t'
  2509  00F909  20                 	db	32
  2510  00F90A  6F                 	db	111	;'o'
  2511  00F90B  66                 	db	102	;'f'
  2512  00F90C  20                 	db	32
  2513  00F90D  63                 	db	99	;'c'
  2514  00F90E  6F                 	db	111	;'o'
  2515  00F90F  6D                 	db	109	;'m'
  2516  00F910  6D                 	db	109	;'m'
  2517  00F911  61                 	db	97	;'a'
  2518  00F912  6E                 	db	110	;'n'
  2519  00F913  64                 	db	100	;'d'
  2520  00F914  73                 	db	115	;'s'
  2521  00F915  0A                 	db	10
  2522  00F916  0D                 	db	13
  2523  00F917  00                 	db	0
  2524  00F918                     STR_81:
  2525  00F918  49                 	db	73	;'I'
  2526  00F919  66                 	db	102	;'f'
  2527  00F91A  20                 	db	32
  2528  00F91B  79                 	db	121	;'y'
  2529  00F91C  6F                 	db	111	;'o'
  2530  00F91D  75                 	db	117	;'u'
  2531  00F91E  27                 	db	39
  2532  00F91F  64                 	db	100	;'d'
  2533  00F920  20                 	db	32
  2534  00F921  6C                 	db	108	;'l'
  2535  00F922  69                 	db	105	;'i'
  2536  00F923  6B                 	db	107	;'k'
  2537  00F924  65                 	db	101	;'e'
  2538  00F925  20                 	db	32
  2539  00F926  74                 	db	116	;'t'
  2540  00F927  6F                 	db	111	;'o'
  2541  00F928  20                 	db	32
  2542  00F929  63                 	db	99	;'c'
  2543  00F92A  6F                 	db	111	;'o'
  2544  00F92B  6D                 	db	109	;'m'
  2545  00F92C  70                 	db	112	;'p'
  2546  00F92D  6C                 	db	108	;'l'
  2547  00F92E  65                 	db	101	;'e'
  2548  00F92F  74                 	db	116	;'t'
  2549  00F930  65                 	db	101	;'e'
  2550  00F931  6C                 	db	108	;'l'
  2551  00F932  79                 	db	121	;'y'
  2552  00F933  20                 	db	32
  2553  00F934  65                 	db	101	;'e'
  2554  00F935  6E                 	db	110	;'n'
  2555  00F936  61                 	db	97	;'a'
  2556  00F937  62                 	db	98	;'b'
  2557  00F938  6C                 	db	108	;'l'
  2558  00F939  65                 	db	101	;'e'
  2559  00F93A  20                 	db	32
  2560  00F93B  6F                 	db	111	;'o'
  2561  00F93C  72                 	db	114	;'r'
  2562  00F93D  20                 	db	32
  2563  00F93E  64                 	db	100	;'d'
  2564  00F93F  69                 	db	105	;'i'
  2565  00F940  73                 	db	115	;'s'
  2566  00F941  61                 	db	97	;'a'
  2567  00F942  62                 	db	98	;'b'
  2568  00F943  6C                 	db	108	;'l'
  2569  00F944  65                 	db	101	;'e'
  2570  00F945  20                 	db	32
  2571  00F946  74                 	db	116	;'t'
  2572  00F947  68                 	db	104	;'h'
  2573  00F948  65                 	db	101	;'e'
  2574  00F949  20                 	db	32
  2575  00F94A  6C                 	db	108	;'l'
  2576  00F94B  6F                 	db	111	;'o'
  2577  00F94C  61                 	db	97	;'a'
  2578  00F94D  64                 	db	100	;'d'
  2579  00F94E  2C                 	db	44
  2580  00F94F  20                 	db	32
  2581  00F950  64                 	db	100	;'d'
  2582  00F951  69                 	db	105	;'i'
  2583  00F952  73                 	db	115	;'s'
  2584  00F953  61                 	db	97	;'a'
  2585  00F954  62                 	db	98	;'b'
  2586  00F955  6C                 	db	108	;'l'
  2587  00F956  65                 	db	101	;'e'
  2588  00F957  20                 	db	32
  2589  00F958  64                 	db	100	;'d'
  2590  00F959  69                 	db	105	;'i'
  2591  00F95A  6D                 	db	109	;'m'
  2592  00F95B  6D                 	db	109	;'m'
  2593  00F95C  69                 	db	105	;'i'
  2594  00F95D  6E                 	db	110	;'n'
  2595  00F95E  67                 	db	103	;'g'
  2596  00F95F  20                 	db	32
  2597  00F960  61                 	db	97	;'a'
  2598  00F961  6E                 	db	110	;'n'
  2599  00F962  64                 	db	100	;'d'
  2600  00F963  20                 	db	32
  2601  00F964  75                 	db	117	;'u'
  2602  00F965  73                 	db	115	;'s'
  2603  00F966  65                 	db	101	;'e'
  2604  00F967  20                 	db	32
  2605  00F968  72                 	db	114	;'r'
  2606  00F969  65                 	db	101	;'e'
  2607  00F96A  73                 	db	115	;'s'
  2608  00F96B  70                 	db	112	;'p'
  2609  00F96C  65                 	db	101	;'e'
  2610  00F96D  63                 	db	99	;'c'
  2611  00F96E  74                 	db	116	;'t'
  2612  00F96F  69                 	db	105	;'i'
  2613  00F970  76                 	db	118	;'v'
  2614  00F971  65                 	db	101	;'e'
  2615  00F972  20                 	db	32
  2616  00F973  63                 	db	99	;'c'
  2617  00F974  6F                 	db	111	;'o'
  2618  00F975  6D                 	db	109	;'m'
  2619  00F976  6D                 	db	109	;'m'
  2620  00F977  61                 	db	97	;'a'
  2621  00F978  6E                 	db	110	;'n'
  2622  00F979  64                 	db	100	;'d'
  2623  00F97A  73                 	db	115	;'s'
  2624  00F97B  0A                 	db	10
  2625  00F97C  0D                 	db	13
  2626  00F97D  00                 	db	0
  2627  00F97E                     STR_80:
  2628  00F97E  45                 	db	69	;'E'
  2629  00F97F  52                 	db	82	;'R'
  2630  00F980  52                 	db	82	;'R'
  2631  00F981  4F                 	db	79	;'O'
  2632  00F982  52                 	db	82	;'R'
  2633  00F983  3A                 	db	58	;':'
  2634  00F984  20                 	db	32
  2635  00F985  50                 	db	80	;'P'
  2636  00F986  6C                 	db	108	;'l'
  2637  00F987  65                 	db	101	;'e'
  2638  00F988  61                 	db	97	;'a'
  2639  00F989  73                 	db	115	;'s'
  2640  00F98A  65                 	db	101	;'e'
  2641  00F98B  20                 	db	32
  2642  00F98C  73                 	db	115	;'s'
  2643  00F98D  65                 	db	101	;'e'
  2644  00F98E  74                 	db	116	;'t'
  2645  00F98F  20                 	db	32
  2646  00F990  64                 	db	100	;'d'
  2647  00F991  69                 	db	105	;'i'
  2648  00F992  6D                 	db	109	;'m'
  2649  00F993  6D                 	db	109	;'m'
  2650  00F994  69                 	db	105	;'i'
  2651  00F995  6E                 	db	110	;'n'
  2652  00F996  67                 	db	103	;'g'
  2653  00F997  20                 	db	32
  2654  00F998  70                 	db	112	;'p'
  2655  00F999  65                 	db	101	;'e'
  2656  00F99A  72                 	db	114	;'r'
  2657  00F99B  63                 	db	99	;'c'
  2658  00F99C  65                 	db	101	;'e'
  2659  00F99D  6E                 	db	110	;'n'
  2660  00F99E  74                 	db	116	;'t'
  2661  00F99F  61                 	db	97	;'a'
  2662  00F9A0  67                 	db	103	;'g'
  2663  00F9A1  65                 	db	101	;'e'
  2664  00F9A2  20                 	db	32
  2665  00F9A3  74                 	db	116	;'t'
  2666  00F9A4  6F                 	db	111	;'o'
  2667  00F9A5  20                 	db	32
  2668  00F9A6  61                 	db	97	;'a'
  2669  00F9A7  6E                 	db	110	;'n'
  2670  00F9A8  20                 	db	32
  2671  00F9A9  69                 	db	105	;'i'
  2672  00F9AA  6E                 	db	110	;'n'
  2673  00F9AB  74                 	db	116	;'t'
  2674  00F9AC  65                 	db	101	;'e'
  2675  00F9AD  67                 	db	103	;'g'
  2676  00F9AE  65                 	db	101	;'e'
  2677  00F9AF  72                 	db	114	;'r'
  2678  00F9B0  20                 	db	32
  2679  00F9B1  67                 	db	103	;'g'
  2680  00F9B2  72                 	db	114	;'r'
  2681  00F9B3  65                 	db	101	;'e'
  2682  00F9B4  61                 	db	97	;'a'
  2683  00F9B5  74                 	db	116	;'t'
  2684  00F9B6  65                 	db	101	;'e'
  2685  00F9B7  72                 	db	114	;'r'
  2686  00F9B8  20                 	db	32
  2687  00F9B9  74                 	db	116	;'t'
  2688  00F9BA  68                 	db	104	;'h'
  2689  00F9BB  61                 	db	97	;'a'
  2690  00F9BC  6E                 	db	110	;'n'
  2691  00F9BD  20                 	db	32
  2692  00F9BE  30                 	db	48	;'0'
  2693  00F9BF  20                 	db	32
  2694  00F9C0  61                 	db	97	;'a'
  2695  00F9C1  6E                 	db	110	;'n'
  2696  00F9C2  64                 	db	100	;'d'
  2697  00F9C3  20                 	db	32
  2698  00F9C4  6C                 	db	108	;'l'
  2699  00F9C5  65                 	db	101	;'e'
  2700  00F9C6  73                 	db	115	;'s'
  2701  00F9C7  73                 	db	115	;'s'
  2702  00F9C8  20                 	db	32
  2703  00F9C9  74                 	db	116	;'t'
  2704  00F9CA  68                 	db	104	;'h'
  2705  00F9CB  61                 	db	97	;'a'
  2706  00F9CC  6E                 	db	110	;'n'
  2707  00F9CD  20                 	db	32
  2708  00F9CE  31                 	db	49	;'1'
  2709  00F9CF  30                 	db	48	;'0'
  2710  00F9D0  30                 	db	48	;'0'
  2711  00F9D1  0A                 	db	10
  2712  00F9D2  0D                 	db	13
  2713  00F9D3  00                 	db	0
  2714  00F9D4                     STR_52:
  2715  00F9D4  46                 	db	70	;'F'
  2716  00F9D5  6C                 	db	108	;'l'
  2717  00F9D6  61                 	db	97	;'a'
  2718  00F9D7  73                 	db	115	;'s'
  2719  00F9D8  68                 	db	104	;'h'
  2720  00F9D9  20                 	db	32
  2721  00F9DA  6D                 	db	109	;'m'
  2722  00F9DB  65                 	db	101	;'e'
  2723  00F9DC  6D                 	db	109	;'m'
  2724  00F9DD  6F                 	db	111	;'o'
  2725  00F9DE  72                 	db	114	;'r'
  2726  00F9DF  79                 	db	121	;'y'
  2727  00F9E0  20                 	db	32
  2728  00F9E1  64                 	db	100	;'d'
  2729  00F9E2  65                 	db	101	;'e'
  2730  00F9E3  76                 	db	118	;'v'
  2731  00F9E4  69                 	db	105	;'i'
  2732  00F9E5  63                 	db	99	;'c'
  2733  00F9E6  65                 	db	101	;'e'
  2734  00F9E7  20                 	db	32
  2735  00F9E8  49                 	db	73	;'I'
  2736  00F9E9  44                 	db	68	;'D'
  2737  00F9EA  20                 	db	32
  2738  00F9EB  69                 	db	105	;'i'
  2739  00F9EC  73                 	db	115	;'s'
  2740  00F9ED  3A                 	db	58	;':'
  2741  00F9EE  20                 	db	32
  2742  00F9EF  30                 	db	48	;'0'
  2743  00F9F0  78                 	db	120	;'x'
  2744  00F9F1  25                 	db	37
  2745  00F9F2  58                 	db	88	;'X'
  2746  00F9F3  2E                 	db	46
  2747  00F9F4  20                 	db	32
  2748  00F9F5  54                 	db	84	;'T'
  2749  00F9F6  68                 	db	104	;'h'
  2750  00F9F7  69                 	db	105	;'i'
  2751  00F9F8  73                 	db	115	;'s'
  2752  00F9F9  20                 	db	32
  2753  00F9FA  63                 	db	99	;'c'
  2754  00F9FB  6F                 	db	111	;'o'
  2755  00F9FC  72                 	db	114	;'r'
  2756  00F9FD  72                 	db	114	;'r'
  2757  00F9FE  65                 	db	101	;'e'
  2758  00F9FF  73                 	db	115	;'s'
  2759  00FA00  70                 	db	112	;'p'
  2760  00FA01  6F                 	db	111	;'o'
  2761  00FA02  6E                 	db	110	;'n'
  2762  00FA03  64                 	db	100	;'d'
  2763  00FA04  73                 	db	115	;'s'
  2764  00FA05  20                 	db	32
  2765  00FA06  74                 	db	116	;'t'
  2766  00FA07  6F                 	db	111	;'o'
  2767  00FA08  20                 	db	32
  2768  00FA09  61                 	db	97	;'a'
  2769  00FA0A  20                 	db	32
  2770  00FA0B  64                 	db	100	;'d'
  2771  00FA0C  65                 	db	101	;'e'
  2772  00FA0D  76                 	db	118	;'v'
  2773  00FA0E  69                 	db	105	;'i'
  2774  00FA0F  63                 	db	99	;'c'
  2775  00FA10  65                 	db	101	;'e'
  2776  00FA11  20                 	db	32
  2777  00FA12  70                 	db	112	;'p'
  2778  00FA13  61                 	db	97	;'a'
  2779  00FA14  72                 	db	114	;'r'
  2780  00FA15  74                 	db	116	;'t'
  2781  00FA16  20                 	db	32
  2782  00FA17  6E                 	db	110	;'n'
  2783  00FA18  75                 	db	117	;'u'
  2784  00FA19  6D                 	db	109	;'m'
  2785  00FA1A  62                 	db	98	;'b'
  2786  00FA1B  65                 	db	101	;'e'
  2787  00FA1C  72                 	db	114	;'r'
  2788  00FA1D  20                 	db	32
  2789  00FA1E  6F                 	db	111	;'o'
  2790  00FA1F  66                 	db	102	;'f'
  2791  00FA20  20                 	db	32
  2792  00FA21  25                 	db	37
  2793  00FA22  73                 	db	115	;'s'
  2794  00FA23  0A                 	db	10
  2795  00FA24  0D                 	db	13
  2796  00FA25  00                 	db	0
  2797  00FA26                     STR_85:
  2798  00FA26  54                 	db	84	;'T'
  2799  00FA27  68                 	db	104	;'h'
  2800  00FA28  69                 	db	105	;'i'
  2801  00FA29  73                 	db	115	;'s'
  2802  00FA2A  20                 	db	32
  2803  00FA2B  63                 	db	99	;'c'
  2804  00FA2C  6F                 	db	111	;'o'
  2805  00FA2D  72                 	db	114	;'r'
  2806  00FA2E  72                 	db	114	;'r'
  2807  00FA2F  65                 	db	101	;'e'
  2808  00FA30  73                 	db	115	;'s'
  2809  00FA31  70                 	db	112	;'p'
  2810  00FA32  6F                 	db	111	;'o'
  2811  00FA33  6E                 	db	110	;'n'
  2812  00FA34  64                 	db	100	;'d'
  2813  00FA35  73                 	db	115	;'s'
  2814  00FA36  20                 	db	32
  2815  00FA37  74                 	db	116	;'t'
  2816  00FA38  6F                 	db	111	;'o'
  2817  00FA39  20                 	db	32
  2818  00FA3A  61                 	db	97	;'a'
  2819  00FA3B  20                 	db	32
  2820  00FA3C  31                 	db	49	;'1'
  2821  00FA3D  36                 	db	54	;'6'
  2822  00FA3E  20                 	db	32
  2823  00FA3F  62                 	db	98	;'b'
  2824  00FA40  69                 	db	105	;'i'
  2825  00FA41  74                 	db	116	;'t'
  2826  00FA42  20                 	db	32
  2827  00FA43  74                 	db	116	;'t'
  2828  00FA44  69                 	db	105	;'i'
  2829  00FA45  6D                 	db	109	;'m'
  2830  00FA46  65                 	db	101	;'e'
  2831  00FA47  72                 	db	114	;'r'
  2832  00FA48  20                 	db	32
  2833  00FA49  70                 	db	112	;'p'
  2834  00FA4A  72                 	db	114	;'r'
  2835  00FA4B  65                 	db	101	;'e'
  2836  00FA4C  2D                 	db	45
  2837  00FA4D  6C                 	db	108	;'l'
  2838  00FA4E  6F                 	db	111	;'o'
  2839  00FA4F  61                 	db	97	;'a'
  2840  00FA50  64                 	db	100	;'d'
  2841  00FA51  20                 	db	32
  2842  00FA52  76                 	db	118	;'v'
  2843  00FA53  61                 	db	97	;'a'
  2844  00FA54  6C                 	db	108	;'l'
  2845  00FA55  75                 	db	117	;'u'
  2846  00FA56  65                 	db	101	;'e'
  2847  00FA57  20                 	db	32
  2848  00FA58  6F                 	db	111	;'o'
  2849  00FA59  66                 	db	102	;'f'
  2850  00FA5A  20                 	db	32
  2851  00FA5B  30                 	db	48	;'0'
  2852  00FA5C  78                 	db	120	;'x'
  2853  00FA5D  25                 	db	37
  2854  00FA5E  58                 	db	88	;'X'
  2855  00FA5F  20                 	db	32
  2856  00FA60  28                 	db	40
  2857  00FA61  25                 	db	37
  2858  00FA62  75                 	db	117	;'u'
  2859  00FA63  20                 	db	32
  2860  00FA64  4C                 	db	76	;'L'
  2861  00FA65  53                 	db	83	;'S'
  2862  00FA66  42                 	db	66	;'B'
  2863  00FA67  73                 	db	115	;'s'
  2864  00FA68  29                 	db	41
  2865  00FA69  20                 	db	32
  2866  00FA6A  0A                 	db	10
  2867  00FA6B  0D                 	db	13
  2868  00FA6C  00                 	db	0
  2869  00FA6D                     STR_84:
  2870  00FA6D  43                 	db	67	;'C'
  2871  00FA6E  61                 	db	97	;'a'
  2872  00FA6F  6C                 	db	108	;'l'
  2873  00FA70  63                 	db	99	;'c'
  2874  00FA71  75                 	db	117	;'u'
  2875  00FA72  6C                 	db	108	;'l'
  2876  00FA73  61                 	db	97	;'a'
  2877  00FA74  74                 	db	116	;'t'
  2878  00FA75  65                 	db	101	;'e'
  2879  00FA76  64                 	db	100	;'d'
  2880  00FA77  20                 	db	32
  2881  00FA78  54                 	db	84	;'T'
  2882  00FA79  52                 	db	82	;'R'
  2883  00FA7A  49                 	db	73	;'I'
  2884  00FA7B  41                 	db	65	;'A'
  2885  00FA7C  43                 	db	67	;'C'
  2886  00FA7D  20                 	db	32
  2887  00FA7E  66                 	db	102	;'f'
  2888  00FA7F  69                 	db	105	;'i'
  2889  00FA80  72                 	db	114	;'r'
  2890  00FA81  69                 	db	105	;'i'
  2891  00FA82  6E                 	db	110	;'n'
  2892  00FA83  67                 	db	103	;'g'
  2893  00FA84  20                 	db	32
  2894  00FA85  61                 	db	97	;'a'
  2895  00FA86  6E                 	db	110	;'n'
  2896  00FA87  67                 	db	103	;'g'
  2897  00FA88  6C                 	db	108	;'l'
  2898  00FA89  65                 	db	101	;'e'
  2899  00FA8A  20                 	db	32
  2900  00FA8B  69                 	db	105	;'i'
  2901  00FA8C  73                 	db	115	;'s'
  2902  00FA8D  20                 	db	32
  2903  00FA8E  25                 	db	37
  2904  00FA8F  2E                 	db	46
  2905  00FA90  33                 	db	51	;'3'
  2906  00FA91  66                 	db	102	;'f'
  2907  00FA92  20                 	db	32
  2908  00FA93  72                 	db	114	;'r'
  2909  00FA94  61                 	db	97	;'a'
  2910  00FA95  64                 	db	100	;'d'
  2911  00FA96  69                 	db	105	;'i'
  2912  00FA97  61                 	db	97	;'a'
  2913  00FA98  6E                 	db	110	;'n'
  2914  00FA99  73                 	db	115	;'s'
  2915  00FA9A  20                 	db	32
  2916  00FA9B  28                 	db	40
  2917  00FA9C  25                 	db	37
  2918  00FA9D  2E                 	db	46
  2919  00FA9E  33                 	db	51	;'3'
  2920  00FA9F  66                 	db	102	;'f'
  2921  00FAA0  20                 	db	32
  2922  00FAA1  64                 	db	100	;'d'
  2923  00FAA2  65                 	db	101	;'e'
  2924  00FAA3  67                 	db	103	;'g'
  2925  00FAA4  72                 	db	114	;'r'
  2926  00FAA5  65                 	db	101	;'e'
  2927  00FAA6  65                 	db	101	;'e'
  2928  00FAA7  73                 	db	115	;'s'
  2929  00FAA8  29                 	db	41
  2930  00FAA9  0A                 	db	10
  2931  00FAAA  0D                 	db	13
  2932  00FAAB  00                 	db	0
  2933  00FAAC                     STR_87:
  2934  00FAAC  44                 	db	68	;'D'
  2935  00FAAD  65                 	db	101	;'e'
  2936  00FAAE  76                 	db	118	;'v'
  2937  00FAAF  69                 	db	105	;'i'
  2938  00FAB0  63                 	db	99	;'c'
  2939  00FAB1  65                 	db	101	;'e'
  2940  00FAB2  20                 	db	32
  2941  00FAB3  6F                 	db	111	;'o'
  2942  00FAB4  6E                 	db	110	;'n'
  2943  00FAB5  20                 	db	32
  2944  00FAB6  74                 	db	116	;'t'
  2945  00FAB7  69                 	db	105	;'i'
  2946  00FAB8  6D                 	db	109	;'m'
  2947  00FAB9  65                 	db	101	;'e'
  2948  00FABA  20                 	db	32
  2949  00FABB  73                 	db	115	;'s'
  2950  00FABC  69                 	db	105	;'i'
  2951  00FABD  6E                 	db	110	;'n'
  2952  00FABE  63                 	db	99	;'c'
  2953  00FABF  65                 	db	101	;'e'
  2954  00FAC0  20                 	db	32
  2955  00FAC1  6C                 	db	108	;'l'
  2956  00FAC2  61                 	db	97	;'a'
  2957  00FAC3  73                 	db	115	;'s'
  2958  00FAC4  74                 	db	116	;'t'
  2959  00FAC5  20                 	db	32
  2960  00FAC6  72                 	db	114	;'r'
  2961  00FAC7  65                 	db	101	;'e'
  2962  00FAC8  73                 	db	115	;'s'
  2963  00FAC9  65                 	db	101	;'e'
  2964  00FACA  74                 	db	116	;'t'
  2965  00FACB  20                 	db	32
  2966  00FACC  63                 	db	99	;'c'
  2967  00FACD  6F                 	db	111	;'o'
  2968  00FACE  6E                 	db	110	;'n'
  2969  00FACF  64                 	db	100	;'d'
  2970  00FAD0  69                 	db	105	;'i'
  2971  00FAD1  74                 	db	116	;'t'
  2972  00FAD2  69                 	db	105	;'i'
  2973  00FAD3  6F                 	db	111	;'o'
  2974  00FAD4  6E                 	db	110	;'n'
  2975  00FAD5  20                 	db	32
  2976  00FAD6  69                 	db	105	;'i'
  2977  00FAD7  73                 	db	115	;'s'
  2978  00FAD8  20                 	db	32
  2979  00FAD9  25                 	db	37
  2980  00FADA  64                 	db	100	;'d'
  2981  00FADB  20                 	db	32
  2982  00FADC  73                 	db	115	;'s'
  2983  00FADD  65                 	db	101	;'e'
  2984  00FADE  63                 	db	99	;'c'
  2985  00FADF  6F                 	db	111	;'o'
  2986  00FAE0  6E                 	db	110	;'n'
  2987  00FAE1  64                 	db	100	;'d'
  2988  00FAE2  73                 	db	115	;'s'
  2989  00FAE3  0A                 	db	10
  2990  00FAE4  0D                 	db	13
  2991  00FAE5  00                 	db	0
  2992  00FAE6                     STR_70:
  2993  00FAE6  4F                 	db	79	;'O'
  2994  00FAE7  75                 	db	117	;'u'
  2995  00FAE8  74                 	db	116	;'t'
  2996  00FAE9  70                 	db	112	;'p'
  2997  00FAEA  75                 	db	117	;'u'
  2998  00FAEB  74                 	db	116	;'t'
  2999  00FAEC  20                 	db	32
  3000  00FAED  70                 	db	112	;'p'
  3001  00FAEE  6F                 	db	111	;'o'
  3002  00FAEF  77                 	db	119	;'w'
  3003  00FAF0  65                 	db	101	;'e'
  3004  00FAF1  72                 	db	114	;'r'
  3005  00FAF2  20                 	db	32
  3006  00FAF3  63                 	db	99	;'c'
  3007  00FAF4  61                 	db	97	;'a'
  3008  00FAF5  6C                 	db	108	;'l'
  3009  00FAF6  63                 	db	99	;'c'
  3010  00FAF7  75                 	db	117	;'u'
  3011  00FAF8  6C                 	db	108	;'l'
  3012  00FAF9  61                 	db	97	;'a'
  3013  00FAFA  74                 	db	116	;'t'
  3014  00FAFB  65                 	db	101	;'e'
  3015  00FAFC  64                 	db	100	;'d'
  3016  00FAFD  20                 	db	32
  3017  00FAFE  61                 	db	97	;'a'
  3018  00FAFF  73                 	db	115	;'s'
  3019  00FB00  20                 	db	32
  3020  00FB01  25                 	db	37
  3021  00FB02  2E                 	db	46
  3022  00FB03  33                 	db	51	;'3'
  3023  00FB04  66                 	db	102	;'f'
  3024  00FB05  20                 	db	32
  3025  00FB06  57                 	db	87	;'W'
  3026  00FB07  61                 	db	97	;'a'
  3027  00FB08  74                 	db	116	;'t'
  3028  00FB09  74                 	db	116	;'t'
  3029  00FB0A  73                 	db	115	;'s'
  3030  00FB0B  20                 	db	32
  3031  00FB0C  66                 	db	102	;'f'
  3032  00FB0D  72                 	db	114	;'r'
  3033  00FB0E  6F                 	db	111	;'o'
  3034  00FB0F  6D                 	db	109	;'m'
  3035  00FB10  20                 	db	32
  3036  00FB11  52                 	db	82	;'R'
  3037  00FB12  4D                 	db	77	;'M'
  3038  00FB13  53                 	db	83	;'S'
  3039  00FB14  20                 	db	32
  3040  00FB15  76                 	db	118	;'v'
  3041  00FB16  61                 	db	97	;'a'
  3042  00FB17  6C                 	db	108	;'l'
  3043  00FB18  75                 	db	117	;'u'
  3044  00FB19  65                 	db	101	;'e'
  3045  00FB1A  73                 	db	115	;'s'
  3046  00FB1B  0A                 	db	10
  3047  00FB1C  0D                 	db	13
  3048  00FB1D  00                 	db	0
  3049  00FB1E                     STR_60:
  3050  00FB1E  46                 	db	70	;'F'
  3051  00FB1F  69                 	db	105	;'i'
  3052  00FB20  78                 	db	120	;'x'
  3053  00FB21  65                 	db	101	;'e'
  3054  00FB22  64                 	db	100	;'d'
  3055  00FB23  20                 	db	32
  3056  00FB24  56                 	db	86	;'V'
  3057  00FB25  6F                 	db	111	;'o'
  3058  00FB26  6C                 	db	108	;'l'
  3059  00FB27  74                 	db	116	;'t'
  3060  00FB28  61                 	db	97	;'a'
  3061  00FB29  67                 	db	103	;'g'
  3062  00FB2A  65                 	db	101	;'e'
  3063  00FB2B  20                 	db	32
  3064  00FB2C  52                 	db	82	;'R'
  3065  00FB2D  65                 	db	101	;'e'
  3066  00FB2E  66                 	db	102	;'f'
  3067  00FB2F  65                 	db	101	;'e'
  3068  00FB30  72                 	db	114	;'r'
  3069  00FB31  65                 	db	101	;'e'
  3070  00FB32  6E                 	db	110	;'n'
  3071  00FB33  63                 	db	99	;'c'
  3072  00FB34  65                 	db	101	;'e'
  3073  00FB35  20                 	db	32
  3074  00FB36  42                 	db	66	;'B'
  3075  00FB37  75                 	db	117	;'u'
  3076  00FB38  66                 	db	102	;'f'
  3077  00FB39  66                 	db	102	;'f'
  3078  00FB3A  65                 	db	101	;'e'
  3079  00FB3B  72                 	db	114	;'r'
  3080  00FB3C  20                 	db	32
  3081  00FB3D  31                 	db	49	;'1'
  3082  00FB3E  20                 	db	32
  3083  00FB3F  6D                 	db	109	;'m'
  3084  00FB40  65                 	db	101	;'e'
  3085  00FB41  61                 	db	97	;'a'
  3086  00FB42  73                 	db	115	;'s'
  3087  00FB43  75                 	db	117	;'u'
  3088  00FB44  72                 	db	114	;'r'
  3089  00FB45  65                 	db	101	;'e'
  3090  00FB46  64                 	db	100	;'d'
  3091  00FB47  20                 	db	32
  3092  00FB48  61                 	db	97	;'a'
  3093  00FB49  73                 	db	115	;'s'
  3094  00FB4A  20                 	db	32
  3095  00FB4B  25                 	db	37
  3096  00FB4C  66                 	db	102	;'f'
  3097  00FB4D  20                 	db	32
  3098  00FB4E  56                 	db	86	;'V'
  3099  00FB4F  6F                 	db	111	;'o'
  3100  00FB50  6C                 	db	108	;'l'
  3101  00FB51  74                 	db	116	;'t'
  3102  00FB52  73                 	db	115	;'s'
  3103  00FB53  0A                 	db	10
  3104  00FB54  0D                 	db	13
  3105  00FB55  00                 	db	0
  3106  00FB56                     STR_89:
  3107  00FB56  4C                 	db	76	;'L'
  3108  00FB57  6F                 	db	111	;'o'
  3109  00FB58  61                 	db	97	;'a'
  3110  00FB59  64                 	db	100	;'d'
  3111  00FB5A  20                 	db	32
  3112  00FB5B  6F                 	db	111	;'o'
  3113  00FB5C  6E                 	db	110	;'n'
  3114  00FB5D  20                 	db	32
  3115  00FB5E  74                 	db	116	;'t'
  3116  00FB5F  69                 	db	105	;'i'
  3117  00FB60  6D                 	db	109	;'m'
  3118  00FB61  65                 	db	101	;'e'
  3119  00FB62  20                 	db	32
  3120  00FB63  73                 	db	115	;'s'
  3121  00FB64  69                 	db	105	;'i'
  3122  00FB65  6E                 	db	110	;'n'
  3123  00FB66  63                 	db	99	;'c'
  3124  00FB67  65                 	db	101	;'e'
  3125  00FB68  20                 	db	32
  3126  00FB69  6C                 	db	108	;'l'
  3127  00FB6A  61                 	db	97	;'a'
  3128  00FB6B  73                 	db	115	;'s'
  3129  00FB6C  74                 	db	116	;'t'
  3130  00FB6D  20                 	db	32
  3131  00FB6E  64                 	db	100	;'d'
  3132  00FB6F  65                 	db	101	;'e'
  3133  00FB70  76                 	db	118	;'v'
  3134  00FB71  69                 	db	105	;'i'
  3135  00FB72  63                 	db	99	;'c'
  3136  00FB73  65                 	db	101	;'e'
  3137  00FB74  20                 	db	32
  3138  00FB75  72                 	db	114	;'r'
  3139  00FB76  65                 	db	101	;'e'
  3140  00FB77  73                 	db	115	;'s'
  3141  00FB78  65                 	db	101	;'e'
  3142  00FB79  74                 	db	116	;'t'
  3143  00FB7A  20                 	db	32
  3144  00FB7B  69                 	db	105	;'i'
  3145  00FB7C  73                 	db	115	;'s'
  3146  00FB7D  20                 	db	32
  3147  00FB7E  25                 	db	37
  3148  00FB7F  64                 	db	100	;'d'
  3149  00FB80  20                 	db	32
  3150  00FB81  73                 	db	115	;'s'
  3151  00FB82  65                 	db	101	;'e'
  3152  00FB83  63                 	db	99	;'c'
  3153  00FB84  6F                 	db	111	;'o'
  3154  00FB85  6E                 	db	110	;'n'
  3155  00FB86  64                 	db	100	;'d'
  3156  00FB87  73                 	db	115	;'s'
  3157  00FB88  0A                 	db	10
  3158  00FB89  0D                 	db	13
  3159  00FB8A  00                 	db	0
  3160  00FB8B                     STR_50:
  3161  00FB8B  4D                 	db	77	;'M'
  3162  00FB8C  61                 	db	97	;'a'
  3163  00FB8D  72                 	db	114	;'r'
  3164  00FB8E  71                 	db	113	;'q'
  3165  00FB8F  75                 	db	117	;'u'
  3166  00FB90  65                 	db	101	;'e'
  3167  00FB91  74                 	db	116	;'t'
  3168  00FB92  74                 	db	116	;'t'
  3169  00FB93  65                 	db	101	;'e'
  3170  00FB94  20                 	db	32
  3171  00FB95  55                 	db	85	;'U'
  3172  00FB96  6E                 	db	110	;'n'
  3173  00FB97  69                 	db	105	;'i'
  3174  00FB98  76                 	db	118	;'v'
  3175  00FB99  65                 	db	101	;'e'
  3176  00FB9A  72                 	db	114	;'r'
  3177  00FB9B  73                 	db	115	;'s'
  3178  00FB9C  69                 	db	105	;'i'
  3179  00FB9D  74                 	db	116	;'t'
  3180  00FB9E  79                 	db	121	;'y'
  3181  00FB9F  20                 	db	32
  3182  00FBA0  45                 	db	69	;'E'
  3183  00FBA1  4C                 	db	76	;'L'
  3184  00FBA2  45                 	db	69	;'E'
  3185  00FBA3  4E                 	db	78	;'N'
  3186  00FBA4  20                 	db	32
  3187  00FBA5  33                 	db	51	;'3'
  3188  00FBA6  30                 	db	48	;'0'
  3189  00FBA7  33                 	db	51	;'3'
  3190  00FBA8  35                 	db	53	;'5'
  3191  00FBA9  20                 	db	32
  3192  00FBAA  46                 	db	70	;'F'
  3193  00FBAB  69                 	db	105	;'i'
  3194  00FBAC  6E                 	db	110	;'n'
  3195  00FBAD  61                 	db	97	;'a'
  3196  00FBAE  6C                 	db	108	;'l'
  3197  00FBAF  20                 	db	32
  3198  00FBB0  50                 	db	80	;'P'
  3199  00FBB1  72                 	db	114	;'r'
  3200  00FBB2  6F                 	db	111	;'o'
  3201  00FBB3  6A                 	db	106	;'j'
  3202  00FBB4  65                 	db	101	;'e'
  3203  00FBB5  63                 	db	99	;'c'
  3204  00FBB6  74                 	db	116	;'t'
  3205  00FBB7  0A                 	db	10
  3206  00FBB8  0D                 	db	13
  3207  00FBB9  00                 	db	0
  3208  00FBBA                     STR_82:
  3209  00FBBA  45                 	db	69	;'E'
  3210  00FBBB  6E                 	db	110	;'n'
  3211  00FBBC  74                 	db	116	;'t'
  3212  00FBBD  65                 	db	101	;'e'
  3213  00FBBE  72                 	db	114	;'r'
  3214  00FBBF  20                 	db	32
  3215  00FBC0  27                 	db	39
  3216  00FBC1  48                 	db	72	;'H'
  3217  00FBC2  65                 	db	101	;'e'
  3218  00FBC3  6C                 	db	108	;'l'
  3219  00FBC4  70                 	db	112	;'p'
  3220  00FBC5  27                 	db	39
  3221  00FBC6  20                 	db	32
  3222  00FBC7  66                 	db	102	;'f'
  3223  00FBC8  6F                 	db	111	;'o'
  3224  00FBC9  72                 	db	114	;'r'
  3225  00FBCA  20                 	db	32
  3226  00FBCB  6C                 	db	108	;'l'
  3227  00FBCC  69                 	db	105	;'i'
  3228  00FBCD  73                 	db	115	;'s'
  3229  00FBCE  74                 	db	116	;'t'
  3230  00FBCF  20                 	db	32
  3231  00FBD0  6F                 	db	111	;'o'
  3232  00FBD1  66                 	db	102	;'f'
  3233  00FBD2  20                 	db	32
  3234  00FBD3  61                 	db	97	;'a'
  3235  00FBD4  76                 	db	118	;'v'
  3236  00FBD5  61                 	db	97	;'a'
  3237  00FBD6  69                 	db	105	;'i'
  3238  00FBD7  6C                 	db	108	;'l'
  3239  00FBD8  61                 	db	97	;'a'
  3240  00FBD9  62                 	db	98	;'b'
  3241  00FBDA  6C                 	db	108	;'l'
  3242  00FBDB  65                 	db	101	;'e'
  3243  00FBDC  20                 	db	32
  3244  00FBDD  63                 	db	99	;'c'
  3245  00FBDE  6F                 	db	111	;'o'
  3246  00FBDF  6D                 	db	109	;'m'
  3247  00FBE0  6D                 	db	109	;'m'
  3248  00FBE1  61                 	db	97	;'a'
  3249  00FBE2  6E                 	db	110	;'n'
  3250  00FBE3  64                 	db	100	;'d'
  3251  00FBE4  73                 	db	115	;'s'
  3252  00FBE5  0A                 	db	10
  3253  00FBE6  0D                 	db	13
  3254  00FBE7  00                 	db	0
  3255  00FBE8                     STR_76:
  3256  00FBE8  4C                 	db	76	;'L'
  3257  00FBE9  6F                 	db	111	;'o'
  3258  00FBEA  61                 	db	97	;'a'
  3259  00FBEB  64                 	db	100	;'d'
  3260  00FBEC  20                 	db	32
  3261  00FBED  68                 	db	104	;'h'
  3262  00FBEE  61                 	db	97	;'a'
  3263  00FBEF  73                 	db	115	;'s'
  3264  00FBF0  20                 	db	32
  3265  00FBF1  62                 	db	98	;'b'
  3266  00FBF2  65                 	db	101	;'e'
  3267  00FBF3  65                 	db	101	;'e'
  3268  00FBF4  6E                 	db	110	;'n'
  3269  00FBF5  20                 	db	32
  3270  00FBF6  65                 	db	101	;'e'
  3271  00FBF7  6E                 	db	110	;'n'
  3272  00FBF8  61                 	db	97	;'a'
  3273  00FBF9  62                 	db	98	;'b'
  3274  00FBFA  6C                 	db	108	;'l'
  3275  00FBFB  65                 	db	101	;'e'
  3276  00FBFC  64                 	db	100	;'d'
  3277  00FBFD  2C                 	db	44
  3278  00FBFE  20                 	db	32
  3279  00FBFF  64                 	db	100	;'d'
  3280  00FC00  69                 	db	105	;'i'
  3281  00FC01  6D                 	db	109	;'m'
  3282  00FC02  6D                 	db	109	;'m'
  3283  00FC03  69                 	db	105	;'i'
  3284  00FC04  6E                 	db	110	;'n'
  3285  00FC05  67                 	db	103	;'g'
  3286  00FC06  20                 	db	32
  3287  00FC07  64                 	db	100	;'d'
  3288  00FC08  69                 	db	105	;'i'
  3289  00FC09  73                 	db	115	;'s'
  3290  00FC0A  61                 	db	97	;'a'
  3291  00FC0B  62                 	db	98	;'b'
  3292  00FC0C  6C                 	db	108	;'l'
  3293  00FC0D  65                 	db	101	;'e'
  3294  00FC0E  64                 	db	100	;'d'
  3295  00FC0F  0A                 	db	10
  3296  00FC10  0D                 	db	13
  3297  00FC11  00                 	db	0
  3298  00FC12                     STR_74:
  3299  00FC12  54                 	db	84	;'T'
  3300  00FC13  52                 	db	82	;'R'
  3301  00FC14  49                 	db	73	;'I'
  3302  00FC15  41                 	db	65	;'A'
  3303  00FC16  43                 	db	67	;'C'
  3304  00FC17  20                 	db	32
  3305  00FC18  6F                 	db	111	;'o'
  3306  00FC19  75                 	db	117	;'u'
  3307  00FC1A  74                 	db	116	;'t'
  3308  00FC1B  70                 	db	112	;'p'
  3309  00FC1C  75                 	db	117	;'u'
  3310  00FC1D  74                 	db	116	;'t'
  3311  00FC1E  20                 	db	32
  3312  00FC1F  64                 	db	100	;'d'
  3313  00FC20  69                 	db	105	;'i'
  3314  00FC21  6D                 	db	109	;'m'
  3315  00FC22  6D                 	db	109	;'m'
  3316  00FC23  69                 	db	105	;'i'
  3317  00FC24  6E                 	db	110	;'n'
  3318  00FC25  67                 	db	103	;'g'
  3319  00FC26  20                 	db	32
  3320  00FC27  68                 	db	104	;'h'
  3321  00FC28  61                 	db	97	;'a'
  3322  00FC29  73                 	db	115	;'s'
  3323  00FC2A  20                 	db	32
  3324  00FC2B  62                 	db	98	;'b'
  3325  00FC2C  65                 	db	101	;'e'
  3326  00FC2D  65                 	db	101	;'e'
  3327  00FC2E  6E                 	db	110	;'n'
  3328  00FC2F  20                 	db	32
  3329  00FC30  64                 	db	100	;'d'
  3330  00FC31  69                 	db	105	;'i'
  3331  00FC32  73                 	db	115	;'s'
  3332  00FC33  61                 	db	97	;'a'
  3333  00FC34  62                 	db	98	;'b'
  3334  00FC35  6C                 	db	108	;'l'
  3335  00FC36  65                 	db	101	;'e'
  3336  00FC37  64                 	db	100	;'d'
  3337  00FC38  0A                 	db	10
  3338  00FC39  0D                 	db	13
  3339  00FC3A  00                 	db	0
  3340  00FC3B                     STR_72:
  3341  00FC3B  54                 	db	84	;'T'
  3342  00FC3C  52                 	db	82	;'R'
  3343  00FC3D  49                 	db	73	;'I'
  3344  00FC3E  41                 	db	65	;'A'
  3345  00FC3F  43                 	db	67	;'C'
  3346  00FC40  20                 	db	32
  3347  00FC41  6F                 	db	111	;'o'
  3348  00FC42  75                 	db	117	;'u'
  3349  00FC43  74                 	db	116	;'t'
  3350  00FC44  70                 	db	112	;'p'
  3351  00FC45  75                 	db	117	;'u'
  3352  00FC46  74                 	db	116	;'t'
  3353  00FC47  20                 	db	32
  3354  00FC48  64                 	db	100	;'d'
  3355  00FC49  69                 	db	105	;'i'
  3356  00FC4A  6D                 	db	109	;'m'
  3357  00FC4B  6D                 	db	109	;'m'
  3358  00FC4C  69                 	db	105	;'i'
  3359  00FC4D  6E                 	db	110	;'n'
  3360  00FC4E  67                 	db	103	;'g'
  3361  00FC4F  20                 	db	32
  3362  00FC50  68                 	db	104	;'h'
  3363  00FC51  61                 	db	97	;'a'
  3364  00FC52  73                 	db	115	;'s'
  3365  00FC53  20                 	db	32
  3366  00FC54  62                 	db	98	;'b'
  3367  00FC55  65                 	db	101	;'e'
  3368  00FC56  65                 	db	101	;'e'
  3369  00FC57  6E                 	db	110	;'n'
  3370  00FC58  20                 	db	32
  3371  00FC59  65                 	db	101	;'e'
  3372  00FC5A  6E                 	db	110	;'n'
  3373  00FC5B  61                 	db	97	;'a'
  3374  00FC5C  62                 	db	98	;'b'
  3375  00FC5D  6C                 	db	108	;'l'
  3376  00FC5E  65                 	db	101	;'e'
  3377  00FC5F  64                 	db	100	;'d'
  3378  00FC60  0A                 	db	10
  3379  00FC61  0D                 	db	13
  3380  00FC62  00                 	db	0
  3381  00FC63                     STR_94:
  3382  00FC63  4D                 	db	77	;'M'
  3383  00FC64  65                 	db	101	;'e'
  3384  00FC65  61                 	db	97	;'a'
  3385  00FC66  73                 	db	115	;'s'
  3386  00FC67  75                 	db	117	;'u'
  3387  00FC68  72                 	db	114	;'r'
  3388  00FC69  65                 	db	101	;'e'
  3389  00FC6A  6D                 	db	109	;'m'
  3390  00FC6B  65                 	db	101	;'e'
  3391  00FC6C  6E                 	db	110	;'n'
  3392  00FC6D  74                 	db	116	;'t'
  3393  00FC6E  20                 	db	32
  3394  00FC6F  72                 	db	114	;'r'
  3395  00FC70  65                 	db	101	;'e'
  3396  00FC71  73                 	db	115	;'s'
  3397  00FC72  70                 	db	112	;'p'
  3398  00FC73  6F                 	db	111	;'o'
  3399  00FC74  6E                 	db	110	;'n'
  3400  00FC75  73                 	db	115	;'s'
  3401  00FC76  65                 	db	101	;'e'
  3402  00FC77  73                 	db	115	;'s'
  3403  00FC78  20                 	db	32
  3404  00FC79  61                 	db	97	;'a'
  3405  00FC7A  70                 	db	112	;'p'
  3406  00FC7B  70                 	db	112	;'p'
  3407  00FC7C  65                 	db	101	;'e'
  3408  00FC7D  61                 	db	97	;'a'
  3409  00FC7E  72                 	db	114	;'r'
  3410  00FC7F  20                 	db	32
  3411  00FC80  69                 	db	105	;'i'
  3412  00FC81  6E                 	db	110	;'n'
  3413  00FC82  20                 	db	32
  3414  00FC83  63                 	db	99	;'c'
  3415  00FC84  79                 	db	121	;'y'
  3416  00FC85  61                 	db	97	;'a'
  3417  00FC86  6E                 	db	110	;'n'
  3418  00FC87  0A                 	db	10
  3419  00FC88  0D                 	db	13
  3420  00FC89  00                 	db	0
  3421  00FC8A                     STR_62:
  3422  00FC8A  41                 	db	65	;'A'
  3423  00FC8B  56                 	db	86	;'V'
  3424  00FC8C  53                 	db	83	;'S'
  3425  00FC8D  53                 	db	83	;'S'
  3426  00FC8E  20                 	db	32
  3427  00FC8F  6D                 	db	109	;'m'
  3428  00FC90  65                 	db	101	;'e'
  3429  00FC91  61                 	db	97	;'a'
  3430  00FC92  73                 	db	115	;'s'
  3431  00FC93  75                 	db	117	;'u'
  3432  00FC94  72                 	db	114	;'r'
  3433  00FC95  65                 	db	101	;'e'
  3434  00FC96  64                 	db	100	;'d'
  3435  00FC97  20                 	db	32
  3436  00FC98  61                 	db	97	;'a'
  3437  00FC99  73                 	db	115	;'s'
  3438  00FC9A  20                 	db	32
  3439  00FC9B  25                 	db	37
  3440  00FC9C  2E                 	db	46
  3441  00FC9D  33                 	db	51	;'3'
  3442  00FC9E  66                 	db	102	;'f'
  3443  00FC9F  20                 	db	32
  3444  00FCA0  56                 	db	86	;'V'
  3445  00FCA1  6F                 	db	111	;'o'
  3446  00FCA2  6C                 	db	108	;'l'
  3447  00FCA3  74                 	db	116	;'t'
  3448  00FCA4  73                 	db	115	;'s'
  3449  00FCA5  20                 	db	32
  3450  00FCA6  62                 	db	98	;'b'
  3451  00FCA7  79                 	db	121	;'y'
  3452  00FCA8  20                 	db	32
  3453  00FCA9  41                 	db	65	;'A'
  3454  00FCAA  44                 	db	68	;'D'
  3455  00FCAB  43                 	db	67	;'C'
  3456  00FCAC  0A                 	db	10
  3457  00FCAD  0D                 	db	13
  3458  00FCAE  00                 	db	0
  3459  00FCAF                     STR_93:
  3460  00FCAF  53                 	db	83	;'S'
  3461  00FCB0  79                 	db	121	;'y'
  3462  00FCB1  73                 	db	115	;'s'
  3463  00FCB2  74                 	db	116	;'t'
  3464  00FCB3  65                 	db	101	;'e'
  3465  00FCB4  6D                 	db	109	;'m'
  3466  00FCB5  20                 	db	32
  3467  00FCB6  70                 	db	112	;'p'
  3468  00FCB7  61                 	db	97	;'a'
  3469  00FCB8  72                 	db	114	;'r'
  3470  00FCB9  61                 	db	97	;'a'
  3471  00FCBA  6D                 	db	109	;'m'
  3472  00FCBB  65                 	db	101	;'e'
  3473  00FCBC  74                 	db	116	;'t'
  3474  00FCBD  65                 	db	101	;'e'
  3475  00FCBE  72                 	db	114	;'r'
  3476  00FCBF  73                 	db	115	;'s'
  3477  00FCC0  20                 	db	32
  3478  00FCC1  61                 	db	97	;'a'
  3479  00FCC2  70                 	db	112	;'p'
  3480  00FCC3  70                 	db	112	;'p'
  3481  00FCC4  65                 	db	101	;'e'
  3482  00FCC5  61                 	db	97	;'a'
  3483  00FCC6  72                 	db	114	;'r'
  3484  00FCC7  73                 	db	115	;'s'
  3485  00FCC8  20                 	db	32
  3486  00FCC9  69                 	db	105	;'i'
  3487  00FCCA  6E                 	db	110	;'n'
  3488  00FCCB  20                 	db	32
  3489  00FCCC  67                 	db	103	;'g'
  3490  00FCCD  72                 	db	114	;'r'
  3491  00FCCE  65                 	db	101	;'e'
  3492  00FCCF  65                 	db	101	;'e'
  3493  00FCD0  6E                 	db	110	;'n'
  3494  00FCD1  0A                 	db	10
  3495  00FCD2  0D                 	db	13
  3496  00FCD3  00                 	db	0
  3497  00FCD4                     STR_83:
  3498  00FCD4  44                 	db	68	;'D'
  3499  00FCD5  69                 	db	105	;'i'
  3500  00FCD6  6D                 	db	109	;'m'
  3501  00FCD7  6D                 	db	109	;'m'
  3502  00FCD8  69                 	db	105	;'i'
  3503  00FCD9  6E                 	db	110	;'n'
  3504  00FCDA  67                 	db	103	;'g'
  3505  00FCDB  20                 	db	32
  3506  00FCDC  68                 	db	104	;'h'
  3507  00FCDD  61                 	db	97	;'a'
  3508  00FCDE  73                 	db	115	;'s'
  3509  00FCDF  20                 	db	32
  3510  00FCE0  62                 	db	98	;'b'
  3511  00FCE1  65                 	db	101	;'e'
  3512  00FCE2  65                 	db	101	;'e'
  3513  00FCE3  6E                 	db	110	;'n'
  3514  00FCE4  20                 	db	32
  3515  00FCE5  73                 	db	115	;'s'
  3516  00FCE6  65                 	db	101	;'e'
  3517  00FCE7  74                 	db	116	;'t'
  3518  00FCE8  20                 	db	32
  3519  00FCE9  74                 	db	116	;'t'
  3520  00FCEA  6F                 	db	111	;'o'
  3521  00FCEB  20                 	db	32
  3522  00FCEC  25                 	db	37
  3523  00FCED  64                 	db	100	;'d'
  3524  00FCEE  20                 	db	32
  3525  00FCEF  70                 	db	112	;'p'
  3526  00FCF0  65                 	db	101	;'e'
  3527  00FCF1  72                 	db	114	;'r'
  3528  00FCF2  63                 	db	99	;'c'
  3529  00FCF3  65                 	db	101	;'e'
  3530  00FCF4  6E                 	db	110	;'n'
  3531  00FCF5  74                 	db	116	;'t'
  3532  00FCF6  0A                 	db	10
  3533  00FCF7  0D                 	db	13
  3534  00FCF8  00                 	db	0
  3535  00FCF9                     STR_54:
  3536  00FCF9  2B                 	db	43
  3537  00FCFA  33                 	db	51	;'3'
  3538  00FCFB  2E                 	db	46
  3539  00FCFC  33                 	db	51	;'3'
  3540  00FCFD  56                 	db	86	;'V'
  3541  00FCFE  20                 	db	32
  3542  00FCFF  72                 	db	114	;'r'
  3543  00FD00  61                 	db	97	;'a'
  3544  00FD01  69                 	db	105	;'i'
  3545  00FD02  6C                 	db	108	;'l'
  3546  00FD03  20                 	db	32
  3547  00FD04  6D                 	db	109	;'m'
  3548  00FD05  65                 	db	101	;'e'
  3549  00FD06  61                 	db	97	;'a'
  3550  00FD07  73                 	db	115	;'s'
  3551  00FD08  75                 	db	117	;'u'
  3552  00FD09  72                 	db	114	;'r'
  3553  00FD0A  65                 	db	101	;'e'
  3554  00FD0B  64                 	db	100	;'d'
  3555  00FD0C  20                 	db	32
  3556  00FD0D  61                 	db	97	;'a'
  3557  00FD0E  73                 	db	115	;'s'
  3558  00FD0F  20                 	db	32
  3559  00FD10  2B                 	db	43
  3560  00FD11  25                 	db	37
  3561  00FD12  66                 	db	102	;'f'
  3562  00FD13  20                 	db	32
  3563  00FD14  56                 	db	86	;'V'
  3564  00FD15  6F                 	db	111	;'o'
  3565  00FD16  6C                 	db	108	;'l'
  3566  00FD17  74                 	db	116	;'t'
  3567  00FD18  73                 	db	115	;'s'
  3568  00FD19  0A                 	db	10
  3569  00FD1A  0D                 	db	13
  3570  00FD1B  00                 	db	0
  3571  00FD1C                     STR_58:
  3572  00FD1C  44                 	db	68	;'D'
  3573  00FD1D  69                 	db	105	;'i'
  3574  00FD1E  65                 	db	101	;'e'
  3575  00FD1F  20                 	db	32
  3576  00FD20  54                 	db	84	;'T'
  3577  00FD21  65                 	db	101	;'e'
  3578  00FD22  6D                 	db	109	;'m'
  3579  00FD23  70                 	db	112	;'p'
  3580  00FD24  65                 	db	101	;'e'
  3581  00FD25  72                 	db	114	;'r'
  3582  00FD26  61                 	db	97	;'a'
  3583  00FD27  74                 	db	116	;'t'
  3584  00FD28  75                 	db	117	;'u'
  3585  00FD29  72                 	db	114	;'r'
  3586  00FD2A  65                 	db	101	;'e'
  3587  00FD2B  20                 	db	32
  3588  00FD2C  6D                 	db	109	;'m'
  3589  00FD2D  65                 	db	101	;'e'
  3590  00FD2E  61                 	db	97	;'a'
  3591  00FD2F  73                 	db	115	;'s'
  3592  00FD30  75                 	db	117	;'u'
  3593  00FD31  72                 	db	114	;'r'
  3594  00FD32  65                 	db	101	;'e'
  3595  00FD33  64                 	db	100	;'d'
  3596  00FD34  20                 	db	32
  3597  00FD35  61                 	db	97	;'a'
  3598  00FD36  73                 	db	115	;'s'
  3599  00FD37  20                 	db	32
  3600  00FD38  25                 	db	37
  3601  00FD39  66                 	db	102	;'f'
  3602  00FD3A  43                 	db	67	;'C'
  3603  00FD3B  0A                 	db	10
  3604  00FD3C  0D                 	db	13
  3605  00FD3D  00                 	db	0
  3606  00FD3E                     STR_66:
  3607  00FD3E  52                 	db	82	;'R'
  3608  00FD3F  4D                 	db	77	;'M'
  3609  00FD40  53                 	db	83	;'S'
  3610  00FD41  20                 	db	32
  3611  00FD42  4F                 	db	79	;'O'
  3612  00FD43  75                 	db	117	;'u'
  3613  00FD44  74                 	db	116	;'t'
  3614  00FD45  70                 	db	112	;'p'
  3615  00FD46  75                 	db	117	;'u'
  3616  00FD47  74                 	db	116	;'t'
  3617  00FD48  20                 	db	32
  3618  00FD49  43                 	db	67	;'C'
  3619  00FD4A  75                 	db	117	;'u'
  3620  00FD4B  72                 	db	114	;'r'
  3621  00FD4C  72                 	db	114	;'r'
  3622  00FD4D  65                 	db	101	;'e'
  3623  00FD4E  6E                 	db	110	;'n'
  3624  00FD4F  74                 	db	116	;'t'
  3625  00FD50  20                 	db	32
  3626  00FD51  69                 	db	105	;'i'
  3627  00FD52  73                 	db	115	;'s'
  3628  00FD53  20                 	db	32
  3629  00FD54  25                 	db	37
  3630  00FD55  2E                 	db	46
  3631  00FD56  33                 	db	51	;'3'
  3632  00FD57  66                 	db	102	;'f'
  3633  00FD58  20                 	db	32
  3634  00FD59  41                 	db	65	;'A'
  3635  00FD5A  72                 	db	114	;'r'
  3636  00FD5B  6D                 	db	109	;'m'
  3637  00FD5C  73                 	db	115	;'s'
  3638  00FD5D  0A                 	db	10
  3639  00FD5E  0D                 	db	13
  3640  00FD5F  00                 	db	0
  3641  00FD60                     STR_68:
  3642  00FD60  52                 	db	82	;'R'
  3643  00FD61  4D                 	db	77	;'M'
  3644  00FD62  53                 	db	83	;'S'
  3645  00FD63  20                 	db	32
  3646  00FD64  4F                 	db	79	;'O'
  3647  00FD65  75                 	db	117	;'u'
  3648  00FD66  74                 	db	116	;'t'
  3649  00FD67  70                 	db	112	;'p'
  3650  00FD68  75                 	db	117	;'u'
  3651  00FD69  74                 	db	116	;'t'
  3652  00FD6A  20                 	db	32
  3653  00FD6B  56                 	db	86	;'V'
  3654  00FD6C  6F                 	db	111	;'o'
  3655  00FD6D  6C                 	db	108	;'l'
  3656  00FD6E  74                 	db	116	;'t'
  3657  00FD6F  61                 	db	97	;'a'
  3658  00FD70  67                 	db	103	;'g'
  3659  00FD71  65                 	db	101	;'e'
  3660  00FD72  20                 	db	32
  3661  00FD73  69                 	db	105	;'i'
  3662  00FD74  73                 	db	115	;'s'
  3663  00FD75  20                 	db	32
  3664  00FD76  25                 	db	37
  3665  00FD77  2E                 	db	46
  3666  00FD78  33                 	db	51	;'3'
  3667  00FD79  66                 	db	102	;'f'
  3668  00FD7A  20                 	db	32
  3669  00FD7B  56                 	db	86	;'V'
  3670  00FD7C  72                 	db	114	;'r'
  3671  00FD7D  6D                 	db	109	;'m'
  3672  00FD7E  73                 	db	115	;'s'
  3673  00FD7F  0A                 	db	10
  3674  00FD80  0D                 	db	13
  3675  00FD81  00                 	db	0
  3676  00FD82                     STR_56:
  3677  00FD82  2B                 	db	43
  3678  00FD83  31                 	db	49	;'1'
  3679  00FD84  32                 	db	50	;'2'
  3680  00FD85  56                 	db	86	;'V'
  3681  00FD86  20                 	db	32
  3682  00FD87  72                 	db	114	;'r'
  3683  00FD88  61                 	db	97	;'a'
  3684  00FD89  69                 	db	105	;'i'
  3685  00FD8A  6C                 	db	108	;'l'
  3686  00FD8B  20                 	db	32
  3687  00FD8C  6D                 	db	109	;'m'
  3688  00FD8D  65                 	db	101	;'e'
  3689  00FD8E  61                 	db	97	;'a'
  3690  00FD8F  73                 	db	115	;'s'
  3691  00FD90  75                 	db	117	;'u'
  3692  00FD91  72                 	db	114	;'r'
  3693  00FD92  65                 	db	101	;'e'
  3694  00FD93  64                 	db	100	;'d'
  3695  00FD94  20                 	db	32
  3696  00FD95  61                 	db	97	;'a'
  3697  00FD96  73                 	db	115	;'s'
  3698  00FD97  20                 	db	32
  3699  00FD98  2B                 	db	43
  3700  00FD99  25                 	db	37
  3701  00FD9A  66                 	db	102	;'f'
  3702  00FD9B  20                 	db	32
  3703  00FD9C  56                 	db	86	;'V'
  3704  00FD9D  6F                 	db	111	;'o'
  3705  00FD9E  6C                 	db	108	;'l'
  3706  00FD9F  74                 	db	116	;'t'
  3707  00FDA0  73                 	db	115	;'s'
  3708  00FDA1  0A                 	db	10
  3709  00FDA2  0D                 	db	13
  3710  00FDA3  00                 	db	0
  3711  00FDA4                     STR_92:
  3712  00FDA4  48                 	db	72	;'H'
  3713  00FDA5  65                 	db	101	;'e'
  3714  00FDA6  6C                 	db	108	;'l'
  3715  00FDA7  70                 	db	112	;'p'
  3716  00FDA8  20                 	db	32
  3717  00FDA9  6D                 	db	109	;'m'
  3718  00FDAA  65                 	db	101	;'e'
  3719  00FDAB  73                 	db	115	;'s'
  3720  00FDAC  73                 	db	115	;'s'
  3721  00FDAD  61                 	db	97	;'a'
  3722  00FDAE  67                 	db	103	;'g'
  3723  00FDAF  65                 	db	101	;'e'
  3724  00FDB0  73                 	db	115	;'s'
  3725  00FDB1  20                 	db	32
  3726  00FDB2  61                 	db	97	;'a'
  3727  00FDB3  70                 	db	112	;'p'
  3728  00FDB4  70                 	db	112	;'p'
  3729  00FDB5  65                 	db	101	;'e'
  3730  00FDB6  61                 	db	97	;'a'
  3731  00FDB7  72                 	db	114	;'r'
  3732  00FDB8  20                 	db	32
  3733  00FDB9  69                 	db	105	;'i'
  3734  00FDBA  6E                 	db	110	;'n'
  3735  00FDBB  20                 	db	32
  3736  00FDBC  79                 	db	121	;'y'
  3737  00FDBD  65                 	db	101	;'e'
  3738  00FDBE  6C                 	db	108	;'l'
  3739  00FDBF  6C                 	db	108	;'l'
  3740  00FDC0  6F                 	db	111	;'o'
  3741  00FDC1  77                 	db	119	;'w'
  3742  00FDC2  0A                 	db	10
  3743  00FDC3  0D                 	db	13
  3744  00FDC4  00                 	db	0
  3745  00FDC5                     STR_64:
  3746  00FDC5  4D                 	db	77	;'M'
  3747  00FDC6  65                 	db	101	;'e'
  3748  00FDC7  61                 	db	97	;'a'
  3749  00FDC8  73                 	db	115	;'s'
  3750  00FDC9  75                 	db	117	;'u'
  3751  00FDCA  72                 	db	114	;'r'
  3752  00FDCB  65                 	db	101	;'e'
  3753  00FDCC  64                 	db	100	;'d'
  3754  00FDCD  20                 	db	32
  3755  00FDCE  43                 	db	67	;'C'
  3756  00FDCF  75                 	db	117	;'u'
  3757  00FDD0  72                 	db	114	;'r'
  3758  00FDD1  72                 	db	114	;'r'
  3759  00FDD2  65                 	db	101	;'e'
  3760  00FDD3  6E                 	db	110	;'n'
  3761  00FDD4  74                 	db	116	;'t'
  3762  00FDD5  20                 	db	32
  3763  00FDD6  69                 	db	105	;'i'
  3764  00FDD7  73                 	db	115	;'s'
  3765  00FDD8  20                 	db	32
  3766  00FDD9  25                 	db	37
  3767  00FDDA  2E                 	db	46
  3768  00FDDB  33                 	db	51	;'3'
  3769  00FDDC  66                 	db	102	;'f'
  3770  00FDDD  20                 	db	32
  3771  00FDDE  41                 	db	65	;'A'
  3772  00FDDF  6D                 	db	109	;'m'
  3773  00FDE0  70                 	db	112	;'p'
  3774  00FDE1  73                 	db	115	;'s'
  3775  00FDE2  0A                 	db	10
  3776  00FDE3  0D                 	db	13
  3777  00FDE4  00                 	db	0
  3778  00FDE5                     STR_96:
  3779  00FDE5  55                 	db	85	;'U'
  3780  00FDE6  73                 	db	115	;'s'
  3781  00FDE7  65                 	db	101	;'e'
  3782  00FDE8  72                 	db	114	;'r'
  3783  00FDE9  20                 	db	32
  3784  00FDEA  69                 	db	105	;'i'
  3785  00FDEB  6E                 	db	110	;'n'
  3786  00FDEC  70                 	db	112	;'p'
  3787  00FDED  75                 	db	117	;'u'
  3788  00FDEE  74                 	db	116	;'t'
  3789  00FDEF  20                 	db	32
  3790  00FDF0  61                 	db	97	;'a'
  3791  00FDF1  70                 	db	112	;'p'
  3792  00FDF2  70                 	db	112	;'p'
  3793  00FDF3  65                 	db	101	;'e'
  3794  00FDF4  61                 	db	97	;'a'
  3795  00FDF5  72                 	db	114	;'r'
  3796  00FDF6  73                 	db	115	;'s'
  3797  00FDF7  20                 	db	32
  3798  00FDF8  69                 	db	105	;'i'
  3799  00FDF9  6E                 	db	110	;'n'
  3800  00FDFA  20                 	db	32
  3801  00FDFB  77                 	db	119	;'w'
  3802  00FDFC  68                 	db	104	;'h'
  3803  00FDFD  69                 	db	105	;'i'
  3804  00FDFE  74                 	db	116	;'t'
  3805  00FDFF  65                 	db	101	;'e'
  3806  00FE00  0A                 	db	10
  3807  00FE01  0D                 	db	13
  3808  00FE02  00                 	db	0
  3809  00FE03                     STR_63:
  3810  00FE03  4D                 	db	77	;'M'
  3811  00FE04  65                 	db	101	;'e'
  3812  00FE05  61                 	db	97	;'a'
  3813  00FE06  73                 	db	115	;'s'
  3814  00FE07  75                 	db	117	;'u'
  3815  00FE08  72                 	db	114	;'r'
  3816  00FE09  65                 	db	101	;'e'
  3817  00FE0A  20                 	db	32
  3818  00FE0B  44                 	db	68	;'D'
  3819  00FE0C  65                 	db	101	;'e'
  3820  00FE0D  74                 	db	116	;'t'
  3821  00FE0E  65                 	db	101	;'e'
  3822  00FE0F  63                 	db	99	;'c'
  3823  00FE10  74                 	db	116	;'t'
  3824  00FE11  65                 	db	101	;'e'
  3825  00FE12  64                 	db	100	;'d'
  3826  00FE13  20                 	db	32
  3827  00FE14  43                 	db	67	;'C'
  3828  00FE15  75                 	db	117	;'u'
  3829  00FE16  72                 	db	114	;'r'
  3830  00FE17  72                 	db	114	;'r'
  3831  00FE18  65                 	db	101	;'e'
  3832  00FE19  6E                 	db	110	;'n'
  3833  00FE1A  74                 	db	116	;'t'
  3834  00FE1B  3F                 	db	63	;'?'
  3835  00FE1C  00                 	db	0
  3836  00FE1D                     STR_78:
  3837  00FE1D  4C                 	db	76	;'L'
  3838  00FE1E  6F                 	db	111	;'o'
  3839  00FE1F  61                 	db	97	;'a'
  3840  00FE20  64                 	db	100	;'d'
  3841  00FE21  20                 	db	32
  3842  00FE22  68                 	db	104	;'h'
  3843  00FE23  61                 	db	97	;'a'
  3844  00FE24  73                 	db	115	;'s'
  3845  00FE25  20                 	db	32
  3846  00FE26  62                 	db	98	;'b'
  3847  00FE27  65                 	db	101	;'e'
  3848  00FE28  65                 	db	101	;'e'
  3849  00FE29  6E                 	db	110	;'n'
  3850  00FE2A  20                 	db	32
  3851  00FE2B  64                 	db	100	;'d'
  3852  00FE2C  69                 	db	105	;'i'
  3853  00FE2D  73                 	db	115	;'s'
  3854  00FE2E  61                 	db	97	;'a'
  3855  00FE2F  62                 	db	98	;'b'
  3856  00FE30  6C                 	db	108	;'l'
  3857  00FE31  65                 	db	101	;'e'
  3858  00FE32  64                 	db	100	;'d'
  3859  00FE33  0A                 	db	10
  3860  00FE34  0D                 	db	13
  3861  00FE35  00                 	db	0
  3862  00FE36                     STR_79:
  3863  00FE36  53                 	db	83	;'S'
  3864  00FE37  65                 	db	101	;'e'
  3865  00FE38  74                 	db	116	;'t'
  3866  00FE39  20                 	db	32
  3867  00FE3A  44                 	db	68	;'D'
  3868  00FE3B  69                 	db	105	;'i'
  3869  00FE3C  6D                 	db	109	;'m'
  3870  00FE3D  6D                 	db	109	;'m'
  3871  00FE3E  69                 	db	105	;'i'
  3872  00FE3F  6E                 	db	110	;'n'
  3873  00FE40  67                 	db	103	;'g'
  3874  00FE41  20                 	db	32
  3875  00FE42  50                 	db	80	;'P'
  3876  00FE43  65                 	db	101	;'e'
  3877  00FE44  72                 	db	114	;'r'
  3878  00FE45  63                 	db	99	;'c'
  3879  00FE46  65                 	db	101	;'e'
  3880  00FE47  6E                 	db	110	;'n'
  3881  00FE48  74                 	db	116	;'t'
  3882  00FE49  61                 	db	97	;'a'
  3883  00FE4A  67                 	db	103	;'g'
  3884  00FE4B  65                 	db	101	;'e'
  3885  00FE4C  3A                 	db	58	;':'
  3886  00FE4D  20                 	db	32
  3887  00FE4E  00                 	db	0
  3888  00FE4F                     STR_95:
  3889  00FE4F  45                 	db	69	;'E'
  3890  00FE50  72                 	db	114	;'r'
  3891  00FE51  72                 	db	114	;'r'
  3892  00FE52  6F                 	db	111	;'o'
  3893  00FE53  72                 	db	114	;'r'
  3894  00FE54  73                 	db	115	;'s'
  3895  00FE55  20                 	db	32
  3896  00FE56  61                 	db	97	;'a'
  3897  00FE57  70                 	db	112	;'p'
  3898  00FE58  70                 	db	112	;'p'
  3899  00FE59  65                 	db	101	;'e'
  3900  00FE5A  61                 	db	97	;'a'
  3901  00FE5B  72                 	db	114	;'r'
  3902  00FE5C  20                 	db	32
  3903  00FE5D  69                 	db	105	;'i'
  3904  00FE5E  6E                 	db	110	;'n'
  3905  00FE5F  20                 	db	32
  3906  00FE60  72                 	db	114	;'r'
  3907  00FE61  65                 	db	101	;'e'
  3908  00FE62  64                 	db	100	;'d'
  3909  00FE63  0A                 	db	10
  3910  00FE64  0D                 	db	13
  3911  00FE65  00                 	db	0
  3912  00FE66                     STR_67:
  3913  00FE66  4D                 	db	77	;'M'
  3914  00FE67  65                 	db	101	;'e'
  3915  00FE68  61                 	db	97	;'a'
  3916  00FE69  73                 	db	115	;'s'
  3917  00FE6A  75                 	db	117	;'u'
  3918  00FE6B  72                 	db	114	;'r'
  3919  00FE6C  65                 	db	101	;'e'
  3920  00FE6D  20                 	db	32
  3921  00FE6E  52                 	db	82	;'R'
  3922  00FE6F  4D                 	db	77	;'M'
  3923  00FE70  53                 	db	83	;'S'
  3924  00FE71  20                 	db	32
  3925  00FE72  56                 	db	86	;'V'
  3926  00FE73  6F                 	db	111	;'o'
  3927  00FE74  6C                 	db	108	;'l'
  3928  00FE75  74                 	db	116	;'t'
  3929  00FE76  61                 	db	97	;'a'
  3930  00FE77  67                 	db	103	;'g'
  3931  00FE78  65                 	db	101	;'e'
  3932  00FE79  3F                 	db	63	;'?'
  3933  00FE7A  00                 	db	0
  3934  00FE7B                     STR_65:
  3935  00FE7B  4D                 	db	77	;'M'
  3936  00FE7C  65                 	db	101	;'e'
  3937  00FE7D  61                 	db	97	;'a'
  3938  00FE7E  73                 	db	115	;'s'
  3939  00FE7F  75                 	db	117	;'u'
  3940  00FE80  72                 	db	114	;'r'
  3941  00FE81  65                 	db	101	;'e'
  3942  00FE82  20                 	db	32
  3943  00FE83  52                 	db	82	;'R'
  3944  00FE84  4D                 	db	77	;'M'
  3945  00FE85  53                 	db	83	;'S'
  3946  00FE86  20                 	db	32
  3947  00FE87  43                 	db	67	;'C'
  3948  00FE88  75                 	db	117	;'u'
  3949  00FE89  72                 	db	114	;'r'
  3950  00FE8A  72                 	db	114	;'r'
  3951  00FE8B  65                 	db	101	;'e'
  3952  00FE8C  6E                 	db	110	;'n'
  3953  00FE8D  74                 	db	116	;'t'
  3954  00FE8E  3F                 	db	63	;'?'
  3955  00FE8F  00                 	db	0
  3956  00FE90                     STR_57:
  3957  00FE90  4D                 	db	77	;'M'
  3958  00FE91  65                 	db	101	;'e'
  3959  00FE92  61                 	db	97	;'a'
  3960  00FE93  73                 	db	115	;'s'
  3961  00FE94  75                 	db	117	;'u'
  3962  00FE95  72                 	db	114	;'r'
  3963  00FE96  65                 	db	101	;'e'
  3964  00FE97  20                 	db	32
  3965  00FE98  44                 	db	68	;'D'
  3966  00FE99  69                 	db	105	;'i'
  3967  00FE9A  65                 	db	101	;'e'
  3968  00FE9B  20                 	db	32
  3969  00FE9C  54                 	db	84	;'T'
  3970  00FE9D  65                 	db	101	;'e'
  3971  00FE9E  6D                 	db	109	;'m'
  3972  00FE9F  70                 	db	112	;'p'
  3973  00FEA0  3F                 	db	63	;'?'
  3974  00FEA1  00                 	db	0
  3975  00FEA2                     STR_101:
  3976  00FEA2  30                 	db	48	;'0'
  3977  00FEA3  31                 	db	49	;'1'
  3978  00FEA4  32                 	db	50	;'2'
  3979  00FEA5  33                 	db	51	;'3'
  3980  00FEA6  34                 	db	52	;'4'
  3981  00FEA7  35                 	db	53	;'5'
  3982  00FEA8  36                 	db	54	;'6'
  3983  00FEA9  37                 	db	55	;'7'
  3984  00FEAA  38                 	db	56	;'8'
  3985  00FEAB  39                 	db	57	;'9'
  3986  00FEAC  41                 	db	65	;'A'
  3987  00FEAD  42                 	db	66	;'B'
  3988  00FEAE  43                 	db	67	;'C'
  3989  00FEAF  44                 	db	68	;'D'
  3990  00FEB0  45                 	db	69	;'E'
  3991  00FEB1  46                 	db	70	;'F'
  3992  00FEB2  00                 	db	0
  3993  00FEB3                     STR_49:
  3994  00FEB3  41                 	db	65	;'A'
  3995  00FEB4  43                 	db	67	;'C'
  3996  00FEB5  20                 	db	32
  3997  00FEB6  50                 	db	80	;'P'
  3998  00FEB7  6F                 	db	111	;'o'
  3999  00FEB8  77                 	db	119	;'w'
  4000  00FEB9  65                 	db	101	;'e'
  4001  00FEBA  72                 	db	114	;'r'
  4002  00FEBB  20                 	db	32
  4003  00FEBC  4D                 	db	77	;'M'
  4004  00FEBD  65                 	db	101	;'e'
  4005  00FEBE  74                 	db	116	;'t'
  4006  00FEBF  65                 	db	101	;'e'
  4007  00FEC0  72                 	db	114	;'r'
  4008  00FEC1  0A                 	db	10
  4009  00FEC2  0D                 	db	13
  4010  00FEC3  00                 	db	0
  4011  00FEC4                     STR_53:
  4012  00FEC4  4D                 	db	77	;'M'
  4013  00FEC5  65                 	db	101	;'e'
  4014  00FEC6  61                 	db	97	;'a'
  4015  00FEC7  73                 	db	115	;'s'
  4016  00FEC8  75                 	db	117	;'u'
  4017  00FEC9  72                 	db	114	;'r'
  4018  00FECA  65                 	db	101	;'e'
  4019  00FECB  20                 	db	32
  4020  00FECC  50                 	db	80	;'P'
  4021  00FECD  4F                 	db	79	;'O'
  4022  00FECE  53                 	db	83	;'S'
  4023  00FECF  33                 	db	51	;'3'
  4024  00FED0  50                 	db	80	;'P'
  4025  00FED1  33                 	db	51	;'3'
  4026  00FED2  3F                 	db	63	;'?'
  4027  00FED3  00                 	db	0
  4028  00FED4                     STR_86:
  4029  00FED4  44                 	db	68	;'D'
  4030  00FED5  65                 	db	101	;'e'
  4031  00FED6  76                 	db	118	;'v'
  4032  00FED7  69                 	db	105	;'i'
  4033  00FED8  63                 	db	99	;'c'
  4034  00FED9  65                 	db	101	;'e'
  4035  00FEDA  20                 	db	32
  4036  00FEDB  4F                 	db	79	;'O'
  4037  00FEDC  6E                 	db	110	;'n'
  4038  00FEDD  20                 	db	32
  4039  00FEDE  54                 	db	84	;'T'
  4040  00FEDF  69                 	db	105	;'i'
  4041  00FEE0  6D                 	db	109	;'m'
  4042  00FEE1  65                 	db	101	;'e'
  4043  00FEE2  3F                 	db	63	;'?'
  4044  00FEE3  00                 	db	0
  4045  00FEE4                     STR_73:
  4046  00FEE4  44                 	db	68	;'D'
  4047  00FEE5  69                 	db	105	;'i'
  4048  00FEE6  73                 	db	115	;'s'
  4049  00FEE7  61                 	db	97	;'a'
  4050  00FEE8  62                 	db	98	;'b'
  4051  00FEE9  6C                 	db	108	;'l'
  4052  00FEEA  65                 	db	101	;'e'
  4053  00FEEB  20                 	db	32
  4054  00FEEC  44                 	db	68	;'D'
  4055  00FEED  69                 	db	105	;'i'
  4056  00FEEE  6D                 	db	109	;'m'
  4057  00FEEF  6D                 	db	109	;'m'
  4058  00FEF0  69                 	db	105	;'i'
  4059  00FEF1  6E                 	db	110	;'n'
  4060  00FEF2  67                 	db	103	;'g'
  4061  00FEF3  00                 	db	0
  4062  00FEF4                     STR_55:
  4063  00FEF4  4D                 	db	77	;'M'
  4064  00FEF5  65                 	db	101	;'e'
  4065  00FEF6  61                 	db	97	;'a'
  4066  00FEF7  73                 	db	115	;'s'
  4067  00FEF8  75                 	db	117	;'u'
  4068  00FEF9  72                 	db	114	;'r'
  4069  00FEFA  65                 	db	101	;'e'
  4070  00FEFB  20                 	db	32
  4071  00FEFC  50                 	db	80	;'P'
  4072  00FEFD  4F                 	db	79	;'O'
  4073  00FEFE  53                 	db	83	;'S'
  4074  00FEFF  31                 	db	49	;'1'
  4075  00FF00  32                 	db	50	;'2'
  4076  00FF01  3F                 	db	63	;'?'
  4077  00FF02  00                 	db	0
  4078  00FF03                     STR_69:
  4079  00FF03  4D                 	db	77	;'M'
  4080  00FF04  65                 	db	101	;'e'
  4081  00FF05  61                 	db	97	;'a'
  4082  00FF06  73                 	db	115	;'s'
  4083  00FF07  75                 	db	117	;'u'
  4084  00FF08  72                 	db	114	;'r'
  4085  00FF09  65                 	db	101	;'e'
  4086  00FF0A  20                 	db	32
  4087  00FF0B  50                 	db	80	;'P'
  4088  00FF0C  6F                 	db	111	;'o'
  4089  00FF0D  77                 	db	119	;'w'
  4090  00FF0E  65                 	db	101	;'e'
  4091  00FF0F  72                 	db	114	;'r'
  4092  00FF10  3F                 	db	63	;'?'
  4093  00FF11  00                 	db	0
  4094  00FF12                     STR_71:
  4095  00FF12  45                 	db	69	;'E'
  4096  00FF13  6E                 	db	110	;'n'
  4097  00FF14  61                 	db	97	;'a'
  4098  00FF15  62                 	db	98	;'b'
  4099  00FF16  6C                 	db	108	;'l'
  4100  00FF17  65                 	db	101	;'e'
  4101  00FF18  20                 	db	32
  4102  00FF19  44                 	db	68	;'D'
  4103  00FF1A  69                 	db	105	;'i'
  4104  00FF1B  6D                 	db	109	;'m'
  4105  00FF1C  6D                 	db	109	;'m'
  4106  00FF1D  69                 	db	105	;'i'
  4107  00FF1E  6E                 	db	110	;'n'
  4108  00FF1F  67                 	db	103	;'g'
  4109  00FF20  00                 	db	0
  4110  00FF21                     STR_61:
  4111  00FF21  4D                 	db	77	;'M'
  4112  00FF22  65                 	db	101	;'e'
  4113  00FF23  61                 	db	97	;'a'
  4114  00FF24  73                 	db	115	;'s'
  4115  00FF25  75                 	db	117	;'u'
  4116  00FF26  72                 	db	114	;'r'
  4117  00FF27  65                 	db	101	;'e'
  4118  00FF28  20                 	db	32
  4119  00FF29  41                 	db	65	;'A'
  4120  00FF2A  56                 	db	86	;'V'
  4121  00FF2B  53                 	db	83	;'S'
  4122  00FF2C  53                 	db	83	;'S'
  4123  00FF2D  3F                 	db	63	;'?'
  4124  00FF2E  00                 	db	0
  4125  00FF2F                     STR_88:
  4126  00FF2F  4C                 	db	76	;'L'
  4127  00FF30  6F                 	db	111	;'o'
  4128  00FF31  61                 	db	97	;'a'
  4129  00FF32  64                 	db	100	;'d'
  4130  00FF33  20                 	db	32
  4131  00FF34  4F                 	db	79	;'O'
  4132  00FF35  6E                 	db	110	;'n'
  4133  00FF36  20                 	db	32
  4134  00FF37  54                 	db	84	;'T'
  4135  00FF38  69                 	db	105	;'i'
  4136  00FF39  6D                 	db	109	;'m'
  4137  00FF3A  65                 	db	101	;'e'
  4138  00FF3B  3F                 	db	63	;'?'
  4139  00FF3C  00                 	db	0
  4140  00FF3D                     STR_98:
  4141  00FF3D  50                 	db	80	;'P'
  4142  00FF3E  49                 	db	73	;'I'
  4143  00FF3F  43                 	db	67	;'C'
  4144  00FF40  31                 	db	49	;'1'
  4145  00FF41  38                 	db	56	;'8'
  4146  00FF42  4C                 	db	76	;'L'
  4147  00FF43  46                 	db	70	;'F'
  4148  00FF44  36                 	db	54	;'6'
  4149  00FF45  37                 	db	55	;'7'
  4150  00FF46  4B                 	db	75	;'K'
  4151  00FF47  34                 	db	52	;'4'
  4152  00FF48  30                 	db	48	;'0'
  4153  00FF49  00                 	db	0
  4154  00FF4A                     STR_59:
  4155  00FF4A  4D                 	db	77	;'M'
  4156  00FF4B  65                 	db	101	;'e'
  4157  00FF4C  61                 	db	97	;'a'
  4158  00FF4D  73                 	db	115	;'s'
  4159  00FF4E  75                 	db	117	;'u'
  4160  00FF4F  72                 	db	114	;'r'
  4161  00FF50  65                 	db	101	;'e'
  4162  00FF51  20                 	db	32
  4163  00FF52  46                 	db	70	;'F'
  4164  00FF53  56                 	db	86	;'V'
  4165  00FF54  52                 	db	82	;'R'
  4166  00FF55  3F                 	db	63	;'?'
  4167  00FF56  00                 	db	0
  4168  00FF57                     STR_77:
  4169  00FF57  44                 	db	68	;'D'
  4170  00FF58  69                 	db	105	;'i'
  4171  00FF59  73                 	db	115	;'s'
  4172  00FF5A  61                 	db	97	;'a'
  4173  00FF5B  62                 	db	98	;'b'
  4174  00FF5C  6C                 	db	108	;'l'
  4175  00FF5D  65                 	db	101	;'e'
  4176  00FF5E  20                 	db	32
  4177  00FF5F  4C                 	db	76	;'L'
  4178  00FF60  6F                 	db	111	;'o'
  4179  00FF61  61                 	db	97	;'a'
  4180  00FF62  64                 	db	100	;'d'
  4181  00FF63  00                 	db	0
  4182  00FF64                     STR_97:
  4183  00FF64  50                 	db	80	;'P'
  4184  00FF65  49                 	db	73	;'I'
  4185  00FF66  43                 	db	67	;'C'
  4186  00FF67  31                 	db	49	;'1'
  4187  00FF68  38                 	db	56	;'8'
  4188  00FF69  46                 	db	70	;'F'
  4189  00FF6A  36                 	db	54	;'6'
  4190  00FF6B  37                 	db	55	;'7'
  4191  00FF6C  4B                 	db	75	;'K'
  4192  00FF6D  34                 	db	52	;'4'
  4193  00FF6E  30                 	db	48	;'0'
  4194  00FF6F  00                 	db	0
  4195  00FF70                     STR_75:
  4196  00FF70  45                 	db	69	;'E'
  4197  00FF71  6E                 	db	110	;'n'
  4198  00FF72  61                 	db	97	;'a'
  4199  00FF73  62                 	db	98	;'b'
  4200  00FF74  6C                 	db	108	;'l'
  4201  00FF75  65                 	db	101	;'e'
  4202  00FF76  20                 	db	32
  4203  00FF77  4C                 	db	76	;'L'
  4204  00FF78  6F                 	db	111	;'o'
  4205  00FF79  61                 	db	97	;'a'
  4206  00FF7A  64                 	db	100	;'d'
  4207  00FF7B  00                 	db	0
  4208  00FF7C                     STR_51:
  4209  00FF7C  44                 	db	68	;'D'
  4210  00FF7D  65                 	db	101	;'e'
  4211  00FF7E  76                 	db	118	;'v'
  4212  00FF7F  69                 	db	105	;'i'
  4213  00FF80  63                 	db	99	;'c'
  4214  00FF81  65                 	db	101	;'e'
  4215  00FF82  20                 	db	32
  4216  00FF83  49                 	db	73	;'I'
  4217  00FF84  44                 	db	68	;'D'
  4218  00FF85  3F                 	db	63	;'?'
  4219  00FF86  00                 	db	0
  4220  00FF87                     STR_99:
  4221  00FF87  55                 	db	85	;'U'
  4222  00FF88  6E                 	db	110	;'n'
  4223  00FF89  64                 	db	100	;'d'
  4224  00FF8A  65                 	db	101	;'e'
  4225  00FF8B  66                 	db	102	;'f'
  4226  00FF8C  69                 	db	105	;'i'
  4227  00FF8D  6E                 	db	110	;'n'
  4228  00FF8E  65                 	db	101	;'e'
  4229  00FF8F  64                 	db	100	;'d'
  4230  00FF90  00                 	db	0
  4231  00FF91                     STR_100:
  4232  00FF91  28                 	db	40
  4233  00FF92  6E                 	db	110	;'n'
  4234  00FF93  75                 	db	117	;'u'
  4235  00FF94  6C                 	db	108	;'l'
  4236  00FF95  6C                 	db	108	;'l'
  4237  00FF96  29                 	db	41
  4238  00FF97  00                 	db	0
  4239  00FF98                     STR_47:
  4240  00FF98  2A                 	db	42
  4241  00FF99  49                 	db	73	;'I'
  4242  00FF9A  44                 	db	68	;'D'
  4243  00FF9B  4E                 	db	78	;'N'
  4244  00FF9C  3F                 	db	63	;'?'
  4245  00FF9D  00                 	db	0
  4246  00FF9E                     STR_44:
  4247  00FF9E  43                 	db	67	;'C'
  4248  00FF9F  6C                 	db	108	;'l'
  4249  00FFA0  65                 	db	101	;'e'
  4250  00FFA1  61                 	db	97	;'a'
  4251  00FFA2  72                 	db	114	;'r'
  4252  00FFA3  00                 	db	0
  4253  00FFA4                     STR_41:
  4254  00FFA4  52                 	db	82	;'R'
  4255  00FFA5  65                 	db	101	;'e'
  4256  00FFA6  73                 	db	115	;'s'
  4257  00FFA7  65                 	db	101	;'e'
  4258  00FFA8  74                 	db	116	;'t'
  4259  00FFA9  00                 	db	0
  4260  00FFAA                     STR_90:
  4261  00FFAA  48                 	db	72	;'H'
  4262  00FFAB  65                 	db	101	;'e'
  4263  00FFAC  6C                 	db	108	;'l'
  4264  00FFAD  70                 	db	112	;'p'
  4265  00FFAE  00                 	db	0
  4266  00FFAF                     STR_2:
  4267  00FFAF  1B                 	db	27
  4268  00FFB0  5B                 	db	91	;'['
  4269  00FFB1  32                 	db	50	;'2'
  4270  00FFB2  4A                 	db	74	;'J'
  4271  00FFB3  00                 	db	0
  4272  00FFB4                     STR_48:
  4273  00FFB4  49                 	db	73	;'I'
  4274  00FFB5  44                 	db	68	;'D'
  4275  00FFB6  4E                 	db	78	;'N'
  4276  00FFB7  00                 	db	0
  4277  00FFB8                     STR_3:
  4278  00FFB8  1B                 	db	27
  4279  00FFB9  5B                 	db	91	;'['
  4280  00FFBA  48                 	db	72	;'H'
  4281  00FFBB  00                 	db	0
  4282  00FFBC  1B                 	db	27
  4283  00FFBD  5B                 	db	91	;'['
  4284  00FFBE  73                 	db	115	;'s'
  4285  00FFBF  00                 	db	0
  4286  00FFC0  1B                 	db	27
  4287  00FFC1  5B                 	db	91	;'['
  4288  00FFC2  75                 	db	117	;'u'
  4289  00FFC3  00                 	db	0
  4290  00FFC4                     STR_1:
  4291  00FFC4  1B                 	db	27
  4292  00FFC5  5B                 	db	91	;'['
  4293  00FFC6  4B                 	db	75	;'K'
  4294  00FFC7  00                 	db	0
  4295  00FFC8                     STR_20:
  4296  00FFC8  33                 	db	51	;'3'
  4297  00FFC9  30                 	db	48	;'0'
  4298  00FFCA  00                 	db	0
  4299  00FFCB                     STR_21:
  4300  00FFCB  33                 	db	51	;'3'
  4301  00FFCC  31                 	db	49	;'1'
  4302  00FFCD  00                 	db	0
  4303  00FFCE                     STR_31:
  4304  00FFCE  34                 	db	52	;'4'
  4305  00FFCF  31                 	db	49	;'1'
  4306  00FFD0  00                 	db	0
  4307  00FFD1                     STR_22:
  4308  00FFD1  33                 	db	51	;'3'
  4309  00FFD2  32                 	db	50	;'2'
  4310  00FFD3  00                 	db	0
  4311  00FFD4                     STR_32:
  4312  00FFD4  34                 	db	52	;'4'
  4313  00FFD5  32                 	db	50	;'2'
  4314  00FFD6  00                 	db	0
  4315  00FFD7                     STR_23:
  4316  00FFD7  33                 	db	51	;'3'
  4317  00FFD8  33                 	db	51	;'3'
  4318  00FFD9  00                 	db	0
  4319  00FFDA                     STR_33:
  4320  00FFDA  34                 	db	52	;'4'
  4321  00FFDB  33                 	db	51	;'3'
  4322  00FFDC  00                 	db	0
  4323  00FFDD                     STR_24:
  4324  00FFDD  33                 	db	51	;'3'
  4325  00FFDE  34                 	db	52	;'4'
  4326  00FFDF  00                 	db	0
  4327  00FFE0                     STR_34:
  4328  00FFE0  34                 	db	52	;'4'
  4329  00FFE1  34                 	db	52	;'4'
  4330  00FFE2  00                 	db	0
  4331  00FFE3                     STR_25:
  4332  00FFE3  33                 	db	51	;'3'
  4333  00FFE4  35                 	db	53	;'5'
  4334  00FFE5  00                 	db	0
  4335  00FFE6                     STR_35:
  4336  00FFE6  34                 	db	52	;'4'
  4337  00FFE7  35                 	db	53	;'5'
  4338  00FFE8  00                 	db	0
  4339  00FFE9                     STR_26:
  4340  00FFE9  33                 	db	51	;'3'
  4341  00FFEA  36                 	db	54	;'6'
  4342  00FFEB  00                 	db	0
  4343  00FFEC                     STR_36:
  4344  00FFEC  34                 	db	52	;'4'
  4345  00FFED  36                 	db	54	;'6'
  4346  00FFEE  00                 	db	0
  4347  00FFEF                     STR_27:
  4348  00FFEF  33                 	db	51	;'3'
  4349  00FFF0  37                 	db	55	;'7'
  4350  00FFF1  00                 	db	0
  4351  00FFF2                     STR_37:
  4352  00FFF2  34                 	db	52	;'4'
  4353  00FFF3  37                 	db	55	;'7'
  4354  00FFF4  00                 	db	0
  4355  00FFF5                     STR_11:
  4356  00FFF5  1B                 	db	27
  4357  00FFF6  5B                 	db	91	;'['
  4358  00FFF7  00                 	db	0
  4359  00FFF8                     STR_17:
  4360  00FFF8  38                 	db	56	;'8'
  4361  00FFF9  00                 	db	0
  4362  00FFFA                     STR_19:
  4363  00FFFA  3B                 	db	59	;';'
  4364  00FFFB  00                 	db	0
  4365  00FFFC                     STR_39:
  4366  00FFFC  6D                 	db	109	;'m'
  4367  00FFFD  00                 	db	0
  4368  0000                     
  4369                           ; #config settings
  4370  00FFFE  00                 	db	0	; dummy byte at the end
  4371  0000                     
  4372                           	psect	cinit
  4373  015E78                     __pcinit:
  4374                           	opt stack 0
  4375  015E78                     start_initialization:
  4376                           	opt stack 0
  4377  015E78                     __initialization:
  4378                           	opt stack 0
  4379                           
  4380                           ; Initialize objects allocated to BANK0 (14 bytes)
  4381                           ; load TBLPTR registers with __pidataBANK0
  4382  015E78  0E22               	movlw	low __pidataBANK0
  4383  015E7A  6EF6               	movwf	tblptrl,c
  4384  015E7C  0E67               	movlw	high __pidataBANK0
  4385  015E7E  6EF7               	movwf	tblptrh,c
  4386  015E80  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  4387  015E82  6EF8               	movwf	tblptru,c
  4388  015E84  EE00  F0EF         	lfsr	0,__pdataBANK0
  4389  015E88  EE10 F00E          	lfsr	1,14
  4390  015E8C                     copy_data0:
  4391  015E8C  0009               	tblrd		*+
  4392  015E8E  CFF5 FFEE          	movff	tablat,postinc0
  4393  015E92  50E5               	movf	postdec1,w,c
  4394  015E94  50E1               	movf	fsr1l,w,c
  4395  015E96  E1FA               	bnz	copy_data0
  4396                           
  4397                           ; Clear objects allocated to BANK2 (256 bytes)
  4398  015E98  EE02  F000         	lfsr	0,__pbssBANK2
  4399  015E9C  EE11 F000          	lfsr	1,256
  4400  015EA0                     clear_0:
  4401  015EA0  6AEE               	clrf	postinc0,c
  4402  015EA2  50E5               	movf	postdec1,w,c
  4403  015EA4  50E1               	movf	fsr1l,w,c
  4404  015EA6  E1FC               	bnz	clear_0
  4405  015EA8  50E2               	movf	fsr1h,w,c
  4406  015EAA  E1FA               	bnz	clear_0
  4407                           
  4408                           ; Clear objects allocated to BANK1 (38 bytes)
  4409  015EAC  EE01  F0B9         	lfsr	0,__pbssBANK1
  4410  015EB0  0E26               	movlw	38
  4411  015EB2                     clear_1:
  4412  015EB2  6AEE               	clrf	postinc0,c
  4413  015EB4  06E8               	decf	wreg,f,c
  4414  015EB6  E1FD               	bnz	clear_1
  4415                           
  4416                           ; Clear objects allocated to BITBANK0 (1 bytes)
  4417  015EB8  0100               	movlb	0
  4418  015EBA  6BFD               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  4419                           
  4420                           ; Clear objects allocated to BANK0 (39 bytes)
  4421  015EBC  EE00  F0C8         	lfsr	0,__pbssBANK0
  4422  015EC0  0E27               	movlw	39
  4423  015EC2                     clear_2:
  4424  015EC2  6AEE               	clrf	postinc0,c
  4425  015EC4  06E8               	decf	wreg,f,c
  4426  015EC6  E1FD               	bnz	clear_2
  4427                           
  4428                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  4429  015EC8  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  4430  015ECA                     end_of_initialization:
  4431                           	opt stack 0
  4432  015ECA                     __end_of__initialization:
  4433                           	opt stack 0
  4434  015ECA  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4435  015ECC  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4436  015ECE  0100               	movlb	0
  4437  015ED0  EF00  F0AD         	goto	_main	;jump to C main() function
  4438                           tblptru	equ	0xFF8
  4439                           tblptrh	equ	0xFF7
  4440                           tblptrl	equ	0xFF6
  4441                           tablat	equ	0xFF5
  4442                           postinc0	equ	0xFEE
  4443                           wreg	equ	0xFE8
  4444                           postdec1	equ	0xFE5
  4445                           fsr1h	equ	0xFE2
  4446                           fsr1l	equ	0xFE1
  4447                           
  4448                           	psect	bitbssCOMRAM
  4449  0002F0                     __pbitbssCOMRAM:
  4450                           	opt stack 0
  4451  0002F0                     _load_enable:
  4452                           	opt stack 0
  4453  0002F0                     	ds	1
  4454                           tblptru	equ	0xFF8
  4455                           tblptrh	equ	0xFF7
  4456                           tblptrl	equ	0xFF6
  4457                           tablat	equ	0xFF5
  4458                           postinc0	equ	0xFEE
  4459                           wreg	equ	0xFE8
  4460                           postdec1	equ	0xFE5
  4461                           fsr1h	equ	0xFE2
  4462                           fsr1l	equ	0xFE1
  4463                           
  4464                           	psect	bitbssBANK0
  4465  0007E8                     __pbitbssBANK0:
  4466                           	opt stack 0
  4467  0007E8                     _eusart2RxStringReady:
  4468                           	opt stack 0
  4469  0007E8                     	ds	1
  4470                           tblptru	equ	0xFF8
  4471                           tblptrh	equ	0xFF7
  4472                           tblptrl	equ	0xFF6
  4473                           tablat	equ	0xFF5
  4474                           postinc0	equ	0xFEE
  4475                           wreg	equ	0xFE8
  4476                           postdec1	equ	0xFE5
  4477                           fsr1h	equ	0xFE2
  4478                           fsr1l	equ	0xFE1
  4479                           
  4480                           	psect	bssBANK0
  4481  0000C8                     __pbssBANK0:
  4482                           	opt stack 0
  4483  0000C8                     _Vrms:
  4484                           	opt stack 0
  4485  0000C8                     	ds	3
  4486  0000CB                     _Irms:
  4487                           	opt stack 0
  4488  0000CB                     	ds	3
  4489  0000CE                     _Imeas:
  4490                           	opt stack 0
  4491  0000CE                     	ds	3
  4492  0000D1                     _Ipk:
  4493                           	opt stack 0
  4494  0000D1                     	ds	3
  4495  0000D4                     _Vpk:
  4496                           	opt stack 0
  4497  0000D4                     	ds	3
  4498  0000D7                     _POS3P3_ADC_Result:
  4499                           	opt stack 0
  4500  0000D7                     	ds	3
  4501  0000DA                     _ADC_Result_Scaling:
  4502                           	opt stack 0
  4503  0000DA                     	ds	3
  4504  0000DD                     _AVSS_ADC_Result:
  4505                           	opt stack 0
  4506  0000DD                     	ds	3
  4507  0000E0                     _ADCC_ADI_InterruptHandler:
  4508                           	opt stack 0
  4509  0000E0                     	ds	3
  4510  0000E3                     _EUSART2_RxDefaultInterruptHandler:
  4511                           	opt stack 0
  4512  0000E3                     	ds	3
  4513  0000E6                     _errno:
  4514                           	opt stack 0
  4515  0000E6                     	ds	2
  4516  0000E8                     _background_color:
  4517                           	opt stack 0
  4518  0000E8                     	ds	1
  4519  0000E9                     _foreground_color:
  4520                           	opt stack 0
  4521  0000E9                     	ds	1
  4522  0000EA                     _attribute:
  4523                           	opt stack 0
  4524  0000EA                     	ds	1
  4525  0000EB                     _eusart2RxHead:
  4526                           	opt stack 0
  4527  0000EB                     	ds	1
  4528  0000EC                     _FVR_ADC_Result:
  4529                           	opt stack 0
  4530  0000EC                     	ds	3
  4531                           tblptru	equ	0xFF8
  4532                           tblptrh	equ	0xFF7
  4533                           tblptrl	equ	0xFF6
  4534                           tablat	equ	0xFF5
  4535                           postinc0	equ	0xFEE
  4536                           wreg	equ	0xFE8
  4537                           postdec1	equ	0xFE5
  4538                           fsr1h	equ	0xFE2
  4539                           fsr1l	equ	0xFE1
  4540                           
  4541                           	psect	dataBANK0
  4542  0000EF                     __pdataBANK0:
  4543                           	opt stack 0
  4544  0000EF                     _Irms_offset:
  4545                           	opt stack 0
  4546  0000EF                     	ds	3
  4547  0000F2                     _Vpk_const:
  4548                           	opt stack 0
  4549  0000F2                     	ds	3
  4550  0000F5                     _Temp_ADC_Offset:
  4551                           	opt stack 0
  4552  0000F5                     	ds	3
  4553  0000F8                     _dimming_period:
  4554                           	opt stack 0
  4555  0000F8                     	ds	2
  4556  0000FA                     _TRIAC_Firing_Angle:
  4557                           	opt stack 0
  4558  0000FA                     	ds	3
  4559                           tblptru	equ	0xFF8
  4560                           tblptrh	equ	0xFF7
  4561                           tblptrl	equ	0xFF6
  4562                           tablat	equ	0xFF5
  4563                           postinc0	equ	0xFEE
  4564                           wreg	equ	0xFE8
  4565                           postdec1	equ	0xFE5
  4566                           fsr1h	equ	0xFE2
  4567                           fsr1l	equ	0xFE1
  4568                           
  4569                           	psect	bssBANK1
  4570  0001B9                     __pbssBANK1:
  4571                           	opt stack 0
  4572  0001B9                     _load_on_time:
  4573                           	opt stack 0
  4574  0001B9                     	ds	4
  4575  0001BD                     _dev_on_time:
  4576                           	opt stack 0
  4577  0001BD                     	ds	4
  4578  0001C1                     _Avg_Power:
  4579                           	opt stack 0
  4580  0001C1                     	ds	3
  4581  0001C4                     _Temp_ADC_Result:
  4582                           	opt stack 0
  4583  0001C4                     	ds	3
  4584  0001C7                     _POS12_ADC_Result:
  4585                           	opt stack 0
  4586  0001C7                     	ds	3
  4587  0001CA                     _TMR5_InterruptHandler:
  4588                           	opt stack 0
  4589  0001CA                     	ds	3
  4590  0001CD                     _TMR7_InterruptHandler:
  4591                           	opt stack 0
  4592  0001CD                     	ds	3
  4593  0001D0                     _TMR6_InterruptHandler:
  4594                           	opt stack 0
  4595  0001D0                     	ds	3
  4596  0001D3                     _EUSART2_TxDefaultInterruptHandler:
  4597                           	opt stack 0
  4598  0001D3                     	ds	3
  4599  0001D6                     _timer5ReloadVal:
  4600                           	opt stack 0
  4601  0001D6                     	ds	2
  4602  0001D8                     _timer7ReloadVal:
  4603                           	opt stack 0
  4604  0001D8                     	ds	2
  4605  0001DA                     _eusart2RxCount:
  4606                           	opt stack 0
  4607  0001DA                     	ds	1
  4608  0001DB                     _eusart2RxTail:
  4609                           	opt stack 0
  4610  0001DB                     	ds	1
  4611  0001DC                     _eusart2TxBufferRemaining:
  4612                           	opt stack 0
  4613  0001DC                     	ds	1
  4614  0001DD                     _eusart2TxTail:
  4615                           	opt stack 0
  4616  0001DD                     	ds	1
  4617  0001DE                     _eusart2TxHead:
  4618                           	opt stack 0
  4619  0001DE                     	ds	1
  4620                           tblptru	equ	0xFF8
  4621                           tblptrh	equ	0xFF7
  4622                           tblptrl	equ	0xFF6
  4623                           tablat	equ	0xFF5
  4624                           postinc0	equ	0xFEE
  4625                           wreg	equ	0xFE8
  4626                           postdec1	equ	0xFE5
  4627                           fsr1h	equ	0xFE2
  4628                           fsr1l	equ	0xFE1
  4629                           
  4630                           	psect	bssBANK2
  4631  000200                     __pbssBANK2:
  4632                           	opt stack 0
  4633  000200                     _eusart2TxBuffer:
  4634                           	opt stack 0
  4635  000200                     	ds	128
  4636  000280                     _eusart2RxBuffer:
  4637                           	opt stack 0
  4638  000280                     	ds	64
  4639  0002C0                     _line:
  4640                           	opt stack 0
  4641  0002C0                     	ds	64
  4642                           tblptru	equ	0xFF8
  4643                           tblptrh	equ	0xFF7
  4644                           tblptrl	equ	0xFF6
  4645                           tablat	equ	0xFF5
  4646                           postinc0	equ	0xFEE
  4647                           wreg	equ	0xFE8
  4648                           postdec1	equ	0xFE5
  4649                           fsr1h	equ	0xFE2
  4650                           fsr1l	equ	0xFE1
  4651                           
  4652                           	psect	cstackBANK1
  4653  000100                     __pcstackBANK1:
  4654                           	opt stack 0
  4655  000100                     ??_heartbeatTimerCallback:
  4656  000100                     ADCC_StartConversion@channel:
  4657                           	opt stack 0
  4658  000100                     TMR7_WriteTimer@timerVal:
  4659                           	opt stack 0
  4660                           
  4661                           ; 2 bytes @ 0x0
  4662  000100                     	ds	1
  4663  000101                     
  4664                           ; 1 bytes @ 0x1
  4665  000101                     	ds	1
  4666  000102                     ??_INTERRUPT_InterruptManagerLow:
  4667  000102                     
  4668                           ; 1 bytes @ 0x2
  4669  000102                     	ds	21
  4670  000117                     ??_isdigit:
  4671  000117                     ?_strlen:
  4672                           	opt stack 0
  4673  000117                     ?_strcmp:
  4674                           	opt stack 0
  4675  000117                     ?_strchr:
  4676                           	opt stack 0
  4677  000117                     ?___awmod:
  4678                           	opt stack 0
  4679  000117                     ?___ftpack:
  4680                           	opt stack 0
  4681  000117                     ?__tdiv_to_l_:
  4682                           	opt stack 0
  4683  000117                     ?__div_to_l_:
  4684                           	opt stack 0
  4685  000117                     ?___lldiv:
  4686                           	opt stack 0
  4687  000117                     EUSART2_Read@readValue:
  4688                           	opt stack 0
  4689  000117                     EUSART2_Write@txData:
  4690                           	opt stack 0
  4691  000117                     ___awmod@dividend:
  4692                           	opt stack 0
  4693  000117                     strcat@to:
  4694                           	opt stack 0
  4695  000117                     strcmp@s1:
  4696                           	opt stack 0
  4697  000117                     strcpy@to:
  4698                           	opt stack 0
  4699  000117                     strlen@s:
  4700                           	opt stack 0
  4701  000117                     strncpy@to:
  4702                           	opt stack 0
  4703  000117                     strchr@ptr:
  4704                           	opt stack 0
  4705  000117                     TMR6_SetInterruptHandler@InterruptHandler:
  4706                           	opt stack 0
  4707  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
  4708                           	opt stack 0
  4709  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
  4710                           	opt stack 0
  4711  000117                     ADCC_SetADIInterruptHandler@InterruptHandler:
  4712                           	opt stack 0
  4713  000117                     TMR7_SetInterruptHandler@InterruptHandler:
  4714                           	opt stack 0
  4715  000117                     TMR5_SetInterruptHandler@InterruptHandler:
  4716                           	opt stack 0
  4717  000117                     __div_to_l_@f1:
  4718                           	opt stack 0
  4719  000117                     ___ftpack@arg:
  4720                           	opt stack 0
  4721  000117                     __tdiv_to_l_@f1:
  4722                           	opt stack 0
  4723  000117                     ___ftge@ff1:
  4724                           	opt stack 0
  4725  000117                     FLASH_ReadByte@flashAddr:
  4726                           	opt stack 0
  4727  000117                     ___lldiv@dividend:
  4728                           	opt stack 0
  4729                           
  4730                           ; 4 bytes @ 0x17
  4731  000117                     	ds	1
  4732  000118                     putch@txData:
  4733                           	opt stack 0
  4734  000118                     _isdigit$2671:
  4735                           	opt stack 0
  4736                           
  4737                           ; 1 bytes @ 0x18
  4738  000118                     	ds	1
  4739  000119                     ??_strlen:
  4740  000119                     isdigit@c:
  4741                           	opt stack 0
  4742  000119                     ___awmod@divisor:
  4743                           	opt stack 0
  4744  000119                     strcat@from:
  4745                           	opt stack 0
  4746  000119                     strcmp@s2:
  4747                           	opt stack 0
  4748  000119                     strcpy@from:
  4749                           	opt stack 0
  4750  000119                     strncpy@from:
  4751                           	opt stack 0
  4752  000119                     strchr@chr:
  4753                           	opt stack 0
  4754                           
  4755                           ; 2 bytes @ 0x19
  4756  000119                     	ds	1
  4757  00011A                     ??_TMR7_Initialize:
  4758  00011A                     ??_TMR5_Initialize:
  4759  00011A                     ___ftpack@exp:
  4760                           	opt stack 0
  4761  00011A                     __div_to_l_@f2:
  4762                           	opt stack 0
  4763  00011A                     __tdiv_to_l_@f2:
  4764                           	opt stack 0
  4765  00011A                     ___ftge@ff2:
  4766                           	opt stack 0
  4767                           
  4768                           ; 3 bytes @ 0x1A
  4769  00011A                     	ds	1
  4770  00011B                     ??_strcmp:
  4771  00011B                     ?_FLASH_ReadWord:
  4772                           	opt stack 0
  4773  00011B                     ___awmod@counter:
  4774                           	opt stack 0
  4775  00011B                     ___ftpack@sign:
  4776                           	opt stack 0
  4777  00011B                     strcat@cp:
  4778                           	opt stack 0
  4779  00011B                     strcpy@cp:
  4780                           	opt stack 0
  4781  00011B                     strlen@cp:
  4782                           	opt stack 0
  4783  00011B                     strncpy@size:
  4784                           	opt stack 0
  4785  00011B                     FLASH_ReadWord@flashAddr:
  4786                           	opt stack 0
  4787  00011B                     ___lldiv@divisor:
  4788                           	opt stack 0
  4789                           
  4790                           ; 4 bytes @ 0x1B
  4791  00011B                     	ds	1
  4792  00011C                     ??___ftpack:
  4793  00011C                     ___awmod@sign:
  4794                           	opt stack 0
  4795  00011C                     strcmp@r:
  4796                           	opt stack 0
  4797                           
  4798                           ; 1 bytes @ 0x1C
  4799  00011C                     	ds	1
  4800  00011D                     ??__tdiv_to_l_:
  4801  00011D                     ??___ftge:
  4802  00011D                     ?_getDeviceIDString:
  4803                           	opt stack 0
  4804  00011D                     ?_strncmp:
  4805                           	opt stack 0
  4806  00011D                     ?___awdiv:
  4807                           	opt stack 0
  4808  00011D                     getDeviceIDString@inputDevID:
  4809                           	opt stack 0
  4810  00011D                     ___awdiv@dividend:
  4811                           	opt stack 0
  4812  00011D                     strncpy@cp:
  4813                           	opt stack 0
  4814  00011D                     strncmp@s1:
  4815                           	opt stack 0
  4816  00011D                     __div_to_l_@quot:
  4817                           	opt stack 0
  4818                           
  4819                           ; 4 bytes @ 0x1D
  4820  00011D                     	ds	2
  4821  00011F                     ??_getDeviceIDString:
  4822  00011F                     ??_FLASH_ReadWord:
  4823  00011F                     ?___awtoft:
  4824                           	opt stack 0
  4825  00011F                     ?___lltoft:
  4826                           	opt stack 0
  4827  00011F                     ___awdiv@divisor:
  4828                           	opt stack 0
  4829  00011F                     ___awtoft@c:
  4830                           	opt stack 0
  4831  00011F                     strncmp@s2:
  4832                           	opt stack 0
  4833  00011F                     ___lldiv@quotient:
  4834                           	opt stack 0
  4835  00011F                     ___lltoft@c:
  4836                           	opt stack 0
  4837                           
  4838                           ; 4 bytes @ 0x1F
  4839  00011F                     	ds	1
  4840  000120                     __tdiv_to_l_@quot:
  4841                           	opt stack 0
  4842                           
  4843                           ; 4 bytes @ 0x20
  4844  000120                     	ds	1
  4845  000121                     ___awdiv@counter:
  4846                           	opt stack 0
  4847  000121                     __div_to_l_@cntr:
  4848                           	opt stack 0
  4849  000121                     strncmp@len:
  4850                           	opt stack 0
  4851  000121                     getDeviceIDString@returnString:
  4852                           	opt stack 0
  4853                           
  4854                           ; 12 bytes @ 0x21
  4855  000121                     	ds	1
  4856  000122                     ?_getDeviceID:
  4857                           	opt stack 0
  4858  000122                     ___awdiv@sign:
  4859                           	opt stack 0
  4860  000122                     ___awtoft@sign:
  4861                           	opt stack 0
  4862  000122                     __div_to_l_@exp1:
  4863                           	opt stack 0
  4864                           
  4865                           ; 1 bytes @ 0x22
  4866  000122                     	ds	1
  4867  000123                     ??_strncmp:
  4868  000123                     ??___lltoft:
  4869  000123                     ?___ftneg:
  4870                           	opt stack 0
  4871  000123                     ___lldiv@counter:
  4872                           	opt stack 0
  4873  000123                     ___awdiv@quotient:
  4874                           	opt stack 0
  4875  000123                     ___ftneg@f1:
  4876                           	opt stack 0
  4877                           
  4878                           ; 3 bytes @ 0x23
  4879  000123                     	ds	1
  4880  000124                     ?___llmod:
  4881                           	opt stack 0
  4882  000124                     __tdiv_to_l_@cntr:
  4883                           	opt stack 0
  4884  000124                     ___llmod@dividend:
  4885                           	opt stack 0
  4886                           
  4887                           ; 4 bytes @ 0x24
  4888  000124                     	ds	1
  4889  000125                     ?___wmul:
  4890                           	opt stack 0
  4891  000125                     __tdiv_to_l_@exp1:
  4892                           	opt stack 0
  4893  000125                     ___wmul@multiplier:
  4894                           	opt stack 0
  4895                           
  4896                           ; 2 bytes @ 0x25
  4897  000125                     	ds	1
  4898  000126                     ?_strstr:
  4899                           	opt stack 0
  4900  000126                     strstr@s1:
  4901                           	opt stack 0
  4902                           
  4903                           ; 2 bytes @ 0x26
  4904  000126                     	ds	1
  4905  000127                     ___lltoft@exp:
  4906                           	opt stack 0
  4907  000127                     ___wmul@multiplicand:
  4908                           	opt stack 0
  4909                           
  4910                           ; 2 bytes @ 0x27
  4911  000127                     	ds	1
  4912  000128                     strstr@s2:
  4913                           	opt stack 0
  4914  000128                     ___llmod@divisor:
  4915                           	opt stack 0
  4916                           
  4917                           ; 4 bytes @ 0x28
  4918  000128                     	ds	1
  4919  000129                     ___wmul@product:
  4920                           	opt stack 0
  4921                           
  4922                           ; 2 bytes @ 0x29
  4923  000129                     	ds	1
  4924  00012A                     
  4925                           ; 1 bytes @ 0x2A
  4926  00012A                     	ds	1
  4927  00012B                     ?_atoi:
  4928                           	opt stack 0
  4929  00012B                     ?___ftadd:
  4930                           	opt stack 0
  4931  00012B                     atoi@s:
  4932                           	opt stack 0
  4933  00012B                     ___ftadd@f1:
  4934                           	opt stack 0
  4935                           
  4936                           ; 3 bytes @ 0x2B
  4937  00012B                     	ds	1
  4938  00012C                     ___llmod@counter:
  4939                           	opt stack 0
  4940                           
  4941                           ; 1 bytes @ 0x2C
  4942  00012C                     	ds	1
  4943  00012D                     ??_atoi:
  4944                           
  4945                           ; 1 bytes @ 0x2D
  4946  00012D                     	ds	1
  4947  00012E                     ___ftadd@f2:
  4948                           	opt stack 0
  4949                           
  4950                           ; 3 bytes @ 0x2E
  4951  00012E                     	ds	1
  4952  00012F                     atoi@sign:
  4953                           	opt stack 0
  4954                           
  4955                           ; 1 bytes @ 0x2F
  4956  00012F                     	ds	1
  4957  000130                     atoi@a:
  4958                           	opt stack 0
  4959                           
  4960                           ; 2 bytes @ 0x30
  4961  000130                     	ds	1
  4962  000131                     ??___ftadd:
  4963                           
  4964                           ; 1 bytes @ 0x31
  4965  000131                     	ds	3
  4966  000134                     ___ftadd@sign:
  4967                           	opt stack 0
  4968                           
  4969                           ; 1 bytes @ 0x34
  4970  000134                     	ds	1
  4971  000135                     ___ftadd@exp2:
  4972                           	opt stack 0
  4973                           
  4974                           ; 1 bytes @ 0x35
  4975  000135                     	ds	1
  4976  000136                     ___ftadd@exp1:
  4977                           	opt stack 0
  4978                           
  4979                           ; 1 bytes @ 0x36
  4980  000136                     	ds	1
  4981  000137                     ?___ftdiv:
  4982                           	opt stack 0
  4983  000137                     ?___ftsub:
  4984                           	opt stack 0
  4985  000137                     ___ftdiv@f1:
  4986                           	opt stack 0
  4987  000137                     ___ftsub@f1:
  4988                           	opt stack 0
  4989                           
  4990                           ; 3 bytes @ 0x37
  4991  000137                     	ds	3
  4992  00013A                     ___ftdiv@f2:
  4993                           	opt stack 0
  4994  00013A                     ___ftsub@f2:
  4995                           	opt stack 0
  4996                           
  4997                           ; 3 bytes @ 0x3A
  4998  00013A                     	ds	3
  4999  00013D                     ??___ftdiv:
  5000  00013D                     
  5001                           ; 1 bytes @ 0x3D
  5002  00013D                     	ds	3
  5003  000140                     ___ftdiv@cntr:
  5004                           	opt stack 0
  5005                           
  5006                           ; 1 bytes @ 0x40
  5007  000140                     	ds	1
  5008  000141                     ___ftdiv@f3:
  5009                           	opt stack 0
  5010                           
  5011                           ; 3 bytes @ 0x41
  5012  000141                     	ds	3
  5013  000144                     ___ftdiv@exp:
  5014                           	opt stack 0
  5015                           
  5016                           ; 1 bytes @ 0x44
  5017  000144                     	ds	1
  5018  000145                     ___ftdiv@sign:
  5019                           	opt stack 0
  5020                           
  5021                           ; 1 bytes @ 0x45
  5022  000145                     	ds	1
  5023  000146                     ?___ftmul:
  5024                           	opt stack 0
  5025  000146                     ___ftmul@f1:
  5026                           	opt stack 0
  5027                           
  5028                           ; 3 bytes @ 0x46
  5029  000146                     	ds	3
  5030  000149                     ___ftmul@f2:
  5031                           	opt stack 0
  5032                           
  5033                           ; 3 bytes @ 0x49
  5034  000149                     	ds	3
  5035  00014C                     ??___ftmul:
  5036                           
  5037                           ; 1 bytes @ 0x4C
  5038  00014C                     	ds	3
  5039  00014F                     ___ftmul@exp:
  5040                           	opt stack 0
  5041                           
  5042                           ; 1 bytes @ 0x4F
  5043  00014F                     	ds	1
  5044  000150                     ___ftmul@f3_as_product:
  5045                           	opt stack 0
  5046                           
  5047                           ; 3 bytes @ 0x50
  5048  000150                     	ds	3
  5049  000153                     ___ftmul@cntr:
  5050                           	opt stack 0
  5051                           
  5052                           ; 1 bytes @ 0x53
  5053  000153                     	ds	1
  5054  000154                     ___ftmul@sign:
  5055                           	opt stack 0
  5056                           
  5057                           ; 1 bytes @ 0x54
  5058  000154                     	ds	1
  5059  000155                     ?_fround:
  5060                           	opt stack 0
  5061  000155                     ?_scale:
  5062                           	opt stack 0
  5063  000155                     ?___fttol:
  5064                           	opt stack 0
  5065  000155                     ___fttol@f1:
  5066                           	opt stack 0
  5067                           
  5068                           ; 3 bytes @ 0x55
  5069  000155                     	ds	3
  5070  000158                     _fround$3334:
  5071                           	opt stack 0
  5072  000158                     _scale$3335:
  5073                           	opt stack 0
  5074                           
  5075                           ; 3 bytes @ 0x58
  5076  000158                     	ds	1
  5077  000159                     ??___fttol:
  5078                           
  5079                           ; 1 bytes @ 0x59
  5080  000159                     	ds	2
  5081  00015B                     scale@scl:
  5082                           	opt stack 0
  5083  00015B                     _fround$3333:
  5084                           	opt stack 0
  5085                           
  5086                           ; 3 bytes @ 0x5B
  5087  00015B                     	ds	3
  5088  00015E                     fround@prec:
  5089                           	opt stack 0
  5090  00015E                     ___fttol@sign1:
  5091                           	opt stack 0
  5092                           
  5093                           ; 1 bytes @ 0x5E
  5094  00015E                     	ds	1
  5095  00015F                     ___fttol@lval:
  5096                           	opt stack 0
  5097                           
  5098                           ; 4 bytes @ 0x5F
  5099  00015F                     	ds	4
  5100  000163                     ___fttol@exp1:
  5101                           	opt stack 0
  5102                           
  5103                           ; 1 bytes @ 0x63
  5104  000163                     	ds	1
  5105  000164                     ?_printf:
  5106                           	opt stack 0
  5107  000164                     printf@f:
  5108                           	opt stack 0
  5109                           
  5110                           ; 2 bytes @ 0x64
  5111  000164                     	ds	8
  5112  00016C                     ??_printf:
  5113                           
  5114                           ; 1 bytes @ 0x6C
  5115  00016C                     	ds	6
  5116  000172                     _printf$3336:
  5117                           	opt stack 0
  5118                           
  5119                           ; 3 bytes @ 0x72
  5120  000172                     	ds	3
  5121  000175                     printf@idx:
  5122                           	opt stack 0
  5123                           
  5124                           ; 1 bytes @ 0x75
  5125  000175                     	ds	1
  5126  000176                     printf@len:
  5127                           	opt stack 0
  5128                           
  5129                           ; 2 bytes @ 0x76
  5130  000176                     	ds	2
  5131  000178                     printf@cp:
  5132                           	opt stack 0
  5133                           
  5134                           ; 2 bytes @ 0x78
  5135  000178                     	ds	2
  5136  00017A                     printf@ap:
  5137                           	opt stack 0
  5138                           
  5139                           ; 2 bytes @ 0x7A
  5140  00017A                     	ds	2
  5141  00017C                     printf@flag:
  5142                           	opt stack 0
  5143                           
  5144                           ; 2 bytes @ 0x7C
  5145  00017C                     	ds	2
  5146  00017E                     printf@exp:
  5147                           	opt stack 0
  5148                           
  5149                           ; 2 bytes @ 0x7E
  5150  00017E                     	ds	2
  5151  000180                     printf@tmpval:
  5152                           	opt stack 0
  5153                           
  5154                           ; 4 bytes @ 0x80
  5155  000180                     	ds	4
  5156  000184                     printf@val:
  5157                           	opt stack 0
  5158                           
  5159                           ; 4 bytes @ 0x84
  5160  000184                     	ds	4
  5161  000188                     printf@fval:
  5162                           	opt stack 0
  5163                           
  5164                           ; 3 bytes @ 0x88
  5165  000188                     	ds	3
  5166  00018B                     printf@prec:
  5167                           	opt stack 0
  5168                           
  5169                           ; 2 bytes @ 0x8B
  5170  00018B                     	ds	2
  5171  00018D                     printf@c:
  5172                           	opt stack 0
  5173                           
  5174                           ; 1 bytes @ 0x8D
  5175  00018D                     	ds	1
  5176  00018E                     terminal_textAttributes@background_color:
  5177                           	opt stack 0
  5178                           
  5179                           ; 1 bytes @ 0x8E
  5180  00018E                     	ds	1
  5181  00018F                     terminal_textAttributes@input_attribute:
  5182                           	opt stack 0
  5183                           
  5184                           ; 1 bytes @ 0x8F
  5185  00018F                     	ds	1
  5186  000190                     terminal_textAttributes@foreground_color:
  5187                           	opt stack 0
  5188                           
  5189                           ; 1 bytes @ 0x90
  5190  000190                     	ds	1
  5191  000191                     terminal_textAttributes@output_buff:
  5192                           	opt stack 0
  5193                           
  5194                           ; 15 bytes @ 0x91
  5195  000191                     	ds	15
  5196  0001A0                     ringBufferLUT@line:
  5197                           	opt stack 0
  5198                           
  5199                           ; 2 bytes @ 0xA0
  5200  0001A0                     	ds	2
  5201  0001A2                     ??_ringBufferLUT:
  5202                           
  5203                           ; 1 bytes @ 0xA2
  5204  0001A2                     	ds	2
  5205  0001A4                     ringBufferLUT@angle_degrees:
  5206                           	opt stack 0
  5207                           
  5208                           ; 3 bytes @ 0xA4
  5209  0001A4                     	ds	3
  5210  0001A7                     ringBufferLUT@arg_buff:
  5211                           	opt stack 0
  5212                           
  5213                           ; 3 bytes @ 0xA7
  5214  0001A7                     	ds	3
  5215  0001AA                     ringBufferLUT@index:
  5216                           	opt stack 0
  5217                           
  5218                           ; 2 bytes @ 0xAA
  5219  0001AA                     	ds	2
  5220  0001AC                     ringBufferLUT@percentage:
  5221                           	opt stack 0
  5222                           
  5223                           ; 2 bytes @ 0xAC
  5224  0001AC                     	ds	2
  5225  0001AE                     ??_terminal_ringBufferPull:
  5226                           
  5227                           ; 1 bytes @ 0xAE
  5228  0001AE                     	ds	3
  5229  0001B1                     terminal_ringBufferPull@charNumber:
  5230                           	opt stack 0
  5231                           
  5232                           ; 2 bytes @ 0xB1
  5233  0001B1                     	ds	2
  5234  0001B3                     terminal_ringBufferPull@index_2114:
  5235                           	opt stack 0
  5236                           
  5237                           ; 2 bytes @ 0xB3
  5238  0001B3                     	ds	2
  5239  0001B5                     terminal_ringBufferPull@index:
  5240                           	opt stack 0
  5241                           
  5242                           ; 2 bytes @ 0xB5
  5243  0001B5                     	ds	2
  5244  0001B7                     ??_main:
  5245                           
  5246                           ; 1 bytes @ 0xB7
  5247  0001B7                     	ds	2
  5248                           tblptru	equ	0xFF8
  5249                           tblptrh	equ	0xFF7
  5250                           tblptrl	equ	0xFF6
  5251                           tablat	equ	0xFF5
  5252                           postinc0	equ	0xFEE
  5253                           wreg	equ	0xFE8
  5254                           postdec1	equ	0xFE5
  5255                           fsr1h	equ	0xFE2
  5256                           fsr1l	equ	0xFE1
  5257                           
  5258                           	psect	cstackBANK0
  5259  000060                     __pcstackBANK0:
  5260                           	opt stack 0
  5261  000060                     ?i2___ftsub:
  5262                           	opt stack 0
  5263  000060                     atan@y:
  5264                           	opt stack 0
  5265  000060                     i2___ftsub@f1:
  5266                           	opt stack 0
  5267                           
  5268                           ; 3 bytes @ 0x0
  5269  000060                     	ds	3
  5270  000063                     atan@x:
  5271                           	opt stack 0
  5272  000063                     i2___ftsub@f2:
  5273                           	opt stack 0
  5274                           
  5275                           ; 3 bytes @ 0x3
  5276  000063                     	ds	3
  5277  000066                     ?i2_printf:
  5278                           	opt stack 0
  5279  000066                     ?_sin:
  5280                           	opt stack 0
  5281  000066                     ?_sqrt:
  5282                           	opt stack 0
  5283  000066                     atan@recip:
  5284                           	opt stack 0
  5285  000066                     i2printf@f:
  5286                           	opt stack 0
  5287  000066                     sin@f:
  5288                           	opt stack 0
  5289  000066                     sqrt@a:
  5290                           	opt stack 0
  5291                           
  5292                           ; 3 bytes @ 0x6
  5293  000066                     	ds	1
  5294  000067                     atan@val_squared:
  5295                           	opt stack 0
  5296                           
  5297                           ; 3 bytes @ 0x7
  5298  000067                     	ds	1
  5299  000068                     ??i2_printf:
  5300                           
  5301                           ; 1 bytes @ 0x8
  5302  000068                     	ds	1
  5303  000069                     ??_sqrt:
  5304  000069                     sin@y:
  5305                           	opt stack 0
  5306                           
  5307                           ; 3 bytes @ 0x9
  5308  000069                     	ds	1
  5309  00006A                     atan@val:
  5310                           	opt stack 0
  5311                           
  5312                           ; 3 bytes @ 0xA
  5313  00006A                     	ds	2
  5314  00006C                     sqrt@og:
  5315                           	opt stack 0
  5316  00006C                     _sin$3528:
  5317                           	opt stack 0
  5318                           
  5319                           ; 3 bytes @ 0xC
  5320  00006C                     	ds	2
  5321  00006E                     i2_printf$3532:
  5322                           	opt stack 0
  5323                           
  5324                           ; 3 bytes @ 0xE
  5325  00006E                     	ds	1
  5326  00006F                     sqrt@i:
  5327                           	opt stack 0
  5328  00006F                     sin@x2:
  5329                           	opt stack 0
  5330                           
  5331                           ; 3 bytes @ 0xF
  5332  00006F                     	ds	1
  5333  000070                     sqrt@z:
  5334                           	opt stack 0
  5335                           
  5336                           ; 3 bytes @ 0x10
  5337  000070                     	ds	1
  5338  000071                     i2printf@idx:
  5339                           	opt stack 0
  5340                           
  5341                           ; 1 bytes @ 0x11
  5342  000071                     	ds	1
  5343  000072                     sin@sgn:
  5344                           	opt stack 0
  5345  000072                     i2printf@len:
  5346                           	opt stack 0
  5347                           
  5348                           ; 2 bytes @ 0x12
  5349  000072                     	ds	1
  5350  000073                     ?_currentMeasuredToPeak:
  5351                           	opt stack 0
  5352  000073                     currentMeasuredToPeak@Measured:
  5353                           	opt stack 0
  5354  000073                     sqrt@q:
  5355                           	opt stack 0
  5356                           
  5357                           ; 3 bytes @ 0x13
  5358  000073                     	ds	1
  5359  000074                     i2printf@cp:
  5360                           	opt stack 0
  5361                           
  5362                           ; 2 bytes @ 0x14
  5363  000074                     	ds	2
  5364  000076                     i2printf@ap:
  5365                           	opt stack 0
  5366  000076                     currentMeasuredToPeak@Angle:
  5367                           	opt stack 0
  5368  000076                     sqrt@x:
  5369                           	opt stack 0
  5370                           
  5371                           ; 3 bytes @ 0x16
  5372  000076                     	ds	2
  5373  000078                     i2printf@flag:
  5374                           	opt stack 0
  5375                           
  5376                           ; 2 bytes @ 0x18
  5377  000078                     	ds	1
  5378  000079                     ?_asin:
  5379                           	opt stack 0
  5380  000079                     currentMeasuredToPeak@Peak:
  5381                           	opt stack 0
  5382  000079                     asin@x:
  5383                           	opt stack 0
  5384                           
  5385                           ; 3 bytes @ 0x19
  5386  000079                     	ds	1
  5387  00007A                     i2printf@exp:
  5388                           	opt stack 0
  5389                           
  5390                           ; 2 bytes @ 0x1A
  5391  00007A                     	ds	2
  5392  00007C                     asin@sgn:
  5393                           	opt stack 0
  5394  00007C                     i2printf@tmpval:
  5395                           	opt stack 0
  5396                           
  5397                           ; 4 bytes @ 0x1C
  5398  00007C                     	ds	3
  5399  00007F                     _asin$3524:
  5400                           	opt stack 0
  5401                           
  5402                           ; 3 bytes @ 0x1F
  5403  00007F                     	ds	1
  5404  000080                     i2printf@fval:
  5405                           	opt stack 0
  5406                           
  5407                           ; 3 bytes @ 0x20
  5408  000080                     	ds	2
  5409  000082                     _asin$3527:
  5410                           	opt stack 0
  5411                           
  5412                           ; 3 bytes @ 0x22
  5413  000082                     	ds	1
  5414  000083                     i2printf@val:
  5415                           	opt stack 0
  5416                           
  5417                           ; 4 bytes @ 0x23
  5418  000083                     	ds	2
  5419  000085                     _asin$3526:
  5420                           	opt stack 0
  5421                           
  5422                           ; 3 bytes @ 0x25
  5423  000085                     	ds	2
  5424  000087                     i2printf@prec:
  5425                           	opt stack 0
  5426                           
  5427                           ; 2 bytes @ 0x27
  5428  000087                     	ds	1
  5429  000088                     asin@y:
  5430                           	opt stack 0
  5431                           
  5432                           ; 3 bytes @ 0x28
  5433  000088                     	ds	1
  5434  000089                     i2printf@c:
  5435                           	opt stack 0
  5436                           
  5437                           ; 1 bytes @ 0x29
  5438  000089                     	ds	2
  5439  00008B                     _asin$3525:
  5440                           	opt stack 0
  5441                           
  5442                           ; 3 bytes @ 0x2B
  5443  00008B                     	ds	3
  5444  00008E                     ?_acos:
  5445                           	opt stack 0
  5446  00008E                     acos@x:
  5447                           	opt stack 0
  5448                           
  5449                           ; 3 bytes @ 0x2E
  5450  00008E                     	ds	3
  5451  000091                     _acos$3523:
  5452                           	opt stack 0
  5453                           
  5454                           ; 3 bytes @ 0x31
  5455  000091                     	ds	3
  5456  000094                     ?_peakToRMS:
  5457                           	opt stack 0
  5458  000094                     peakToRMS@Peak:
  5459                           	opt stack 0
  5460                           
  5461                           ; 3 bytes @ 0x34
  5462  000094                     	ds	3
  5463  000097                     peakToRMS@Angle:
  5464                           	opt stack 0
  5465                           
  5466                           ; 3 bytes @ 0x37
  5467  000097                     	ds	3
  5468  00009A                     _peakToRMS$3516:
  5469                           	opt stack 0
  5470                           
  5471                           ; 3 bytes @ 0x3A
  5472  00009A                     	ds	3
  5473  00009D                     _peakToRMS$3517:
  5474                           	opt stack 0
  5475                           
  5476                           ; 3 bytes @ 0x3D
  5477  00009D                     	ds	3
  5478  0000A0                     _peakToRMS$3515:
  5479                           	opt stack 0
  5480                           
  5481                           ; 3 bytes @ 0x40
  5482  0000A0                     	ds	3
  5483  0000A3                     peakToRMS@RMS:
  5484                           	opt stack 0
  5485                           
  5486                           ; 3 bytes @ 0x43
  5487  0000A3                     	ds	3
  5488  0000A6                     _ADC_postProcessingCallback$3520:
  5489                           	opt stack 0
  5490                           
  5491                           ; 3 bytes @ 0x46
  5492  0000A6                     	ds	3
  5493  0000A9                     _ADC_postProcessingCallback$3521:
  5494                           	opt stack 0
  5495                           
  5496                           ; 3 bytes @ 0x49
  5497  0000A9                     	ds	3
  5498  0000AC                     _ADC_postProcessingCallback$3522:
  5499                           	opt stack 0
  5500                           
  5501                           ; 3 bytes @ 0x4C
  5502  0000AC                     	ds	3
  5503  0000AF                     ADC_postProcessingCallback@currentADCChannel:
  5504                           	opt stack 0
  5505                           
  5506                           ; 1 bytes @ 0x4F
  5507  0000AF                     	ds	1
  5508  0000B0                     _ADC_postProcessingCallback$3519:
  5509                           	opt stack 0
  5510                           
  5511                           ; 3 bytes @ 0x50
  5512  0000B0                     	ds	3
  5513  0000B3                     _ADC_postProcessingCallback$3518:
  5514                           	opt stack 0
  5515                           
  5516                           ; 3 bytes @ 0x53
  5517  0000B3                     	ds	3
  5518  0000B6                     ??_INTERRUPT_InterruptManagerHigh:
  5519                           
  5520                           ; 1 bytes @ 0x56
  5521  0000B6                     	ds	18
  5522                           tblptru	equ	0xFF8
  5523                           tblptrh	equ	0xFF7
  5524                           tblptrl	equ	0xFF6
  5525                           tablat	equ	0xFF5
  5526                           postinc0	equ	0xFEE
  5527                           wreg	equ	0xFE8
  5528                           postdec1	equ	0xFE5
  5529                           fsr1h	equ	0xFE2
  5530                           fsr1l	equ	0xFE1
  5531                           
  5532                           	psect	cstackCOMRAM
  5533  000001                     __pcstackCOMRAM:
  5534                           	opt stack 0
  5535  000001                     ??i2_isdigit:
  5536  000001                     ?_ADCC_GetConversionResult:
  5537                           	opt stack 0
  5538  000001                     ?i2___awmod:
  5539                           	opt stack 0
  5540  000001                     ?i2___ftpack:
  5541                           	opt stack 0
  5542  000001                     ?i2__div_to_l_:
  5543                           	opt stack 0
  5544  000001                     ?i2__tdiv_to_l_:
  5545                           	opt stack 0
  5546  000001                     ?i2___lldiv:
  5547                           	opt stack 0
  5548  000001                     i2EUSART2_Write@txData:
  5549                           	opt stack 0
  5550  000001                     TMR5_WriteTimer@timerVal:
  5551                           	opt stack 0
  5552  000001                     i2___awmod@dividend:
  5553                           	opt stack 0
  5554  000001                     frexp@value:
  5555                           	opt stack 0
  5556  000001                     i2__div_to_l_@f1:
  5557                           	opt stack 0
  5558  000001                     i2___ftpack@arg:
  5559                           	opt stack 0
  5560  000001                     i2__tdiv_to_l_@f1:
  5561                           	opt stack 0
  5562  000001                     i2___lldiv@dividend:
  5563                           	opt stack 0
  5564                           
  5565                           ; 4 bytes @ 0x0
  5566  000001                     	ds	1
  5567  000002                     i2putch@txData:
  5568                           	opt stack 0
  5569  000002                     i2_isdigit$2671:
  5570                           	opt stack 0
  5571                           
  5572                           ; 1 bytes @ 0x1
  5573  000002                     	ds	1
  5574  000003                     ??_ADCC_GetConversionResult:
  5575  000003                     i2isdigit@c:
  5576                           	opt stack 0
  5577  000003                     i2___awmod@divisor:
  5578                           	opt stack 0
  5579                           
  5580                           ; 2 bytes @ 0x2
  5581  000003                     	ds	1
  5582  000004                     i2___ftpack@exp:
  5583                           	opt stack 0
  5584  000004                     frexp@eptr:
  5585                           	opt stack 0
  5586  000004                     i2__div_to_l_@f2:
  5587                           	opt stack 0
  5588  000004                     i2__tdiv_to_l_@f2:
  5589                           	opt stack 0
  5590                           
  5591                           ; 3 bytes @ 0x3
  5592  000004                     	ds	1
  5593  000005                     i2___awmod@counter:
  5594                           	opt stack 0
  5595  000005                     i2___ftpack@sign:
  5596                           	opt stack 0
  5597  000005                     i2___lldiv@divisor:
  5598                           	opt stack 0
  5599                           
  5600                           ; 4 bytes @ 0x4
  5601  000005                     	ds	1
  5602  000006                     ??_frexp:
  5603  000006                     ??i2___ftpack:
  5604  000006                     i2___awmod@sign:
  5605                           	opt stack 0
  5606                           
  5607                           ; 1 bytes @ 0x5
  5608  000006                     	ds	1
  5609  000007                     ??i2__tdiv_to_l_:
  5610  000007                     ?i2___awdiv:
  5611                           	opt stack 0
  5612  000007                     i2___awdiv@dividend:
  5613                           	opt stack 0
  5614  000007                     i2__div_to_l_@quot:
  5615                           	opt stack 0
  5616                           
  5617                           ; 4 bytes @ 0x6
  5618  000007                     	ds	2
  5619  000009                     ?___lwtoft:
  5620                           	opt stack 0
  5621  000009                     ?i2___lltoft:
  5622                           	opt stack 0
  5623  000009                     ___lwtoft@c:
  5624                           	opt stack 0
  5625  000009                     i2___awdiv@divisor:
  5626                           	opt stack 0
  5627  000009                     i2___lldiv@quotient:
  5628                           	opt stack 0
  5629  000009                     i2___lltoft@c:
  5630                           	opt stack 0
  5631                           
  5632                           ; 4 bytes @ 0x8
  5633  000009                     	ds	1
  5634  00000A                     i2__tdiv_to_l_@quot:
  5635                           	opt stack 0
  5636                           
  5637                           ; 4 bytes @ 0x9
  5638  00000A                     	ds	1
  5639  00000B                     i2___awdiv@counter:
  5640                           	opt stack 0
  5641  00000B                     i2__div_to_l_@cntr:
  5642                           	opt stack 0
  5643                           
  5644                           ; 1 bytes @ 0xA
  5645  00000B                     	ds	1
  5646  00000C                     i2___awdiv@sign:
  5647                           	opt stack 0
  5648  00000C                     i2__div_to_l_@exp1:
  5649                           	opt stack 0
  5650                           
  5651                           ; 1 bytes @ 0xB
  5652  00000C                     	ds	1
  5653  00000D                     ??i2___lltoft:
  5654  00000D                     i2___lldiv@counter:
  5655                           	opt stack 0
  5656  00000D                     i2___awdiv@quotient:
  5657                           	opt stack 0
  5658                           
  5659                           ; 2 bytes @ 0xC
  5660  00000D                     	ds	1
  5661  00000E                     ?i2___llmod:
  5662                           	opt stack 0
  5663  00000E                     i2__tdiv_to_l_@cntr:
  5664                           	opt stack 0
  5665  00000E                     i2___llmod@dividend:
  5666                           	opt stack 0
  5667                           
  5668                           ; 4 bytes @ 0xD
  5669  00000E                     	ds	1
  5670  00000F                     ?i2___wmul:
  5671                           	opt stack 0
  5672  00000F                     i2__tdiv_to_l_@exp1:
  5673                           	opt stack 0
  5674  00000F                     i2___wmul@multiplier:
  5675                           	opt stack 0
  5676                           
  5677                           ; 2 bytes @ 0xE
  5678  00000F                     	ds	2
  5679  000011                     i2___lltoft@exp:
  5680                           	opt stack 0
  5681  000011                     i2___wmul@multiplicand:
  5682                           	opt stack 0
  5683                           
  5684                           ; 2 bytes @ 0x10
  5685  000011                     	ds	1
  5686  000012                     i2___llmod@divisor:
  5687                           	opt stack 0
  5688                           
  5689                           ; 4 bytes @ 0x11
  5690  000012                     	ds	1
  5691  000013                     i2___wmul@product:
  5692                           	opt stack 0
  5693                           
  5694                           ; 2 bytes @ 0x12
  5695  000013                     	ds	2
  5696  000015                     ?i2___ftdiv:
  5697                           	opt stack 0
  5698  000015                     i2___ftdiv@f1:
  5699                           	opt stack 0
  5700                           
  5701                           ; 3 bytes @ 0x14
  5702  000015                     	ds	1
  5703  000016                     i2___llmod@counter:
  5704                           	opt stack 0
  5705                           
  5706                           ; 1 bytes @ 0x15
  5707  000016                     	ds	2
  5708  000018                     i2___ftdiv@f2:
  5709                           	opt stack 0
  5710                           
  5711                           ; 3 bytes @ 0x17
  5712  000018                     	ds	3
  5713  00001B                     ??i2___ftdiv:
  5714                           
  5715                           ; 1 bytes @ 0x1A
  5716  00001B                     	ds	3
  5717  00001E                     i2___ftdiv@cntr:
  5718                           	opt stack 0
  5719                           
  5720                           ; 1 bytes @ 0x1D
  5721  00001E                     	ds	1
  5722  00001F                     i2___ftdiv@exp:
  5723                           	opt stack 0
  5724                           
  5725                           ; 1 bytes @ 0x1E
  5726  00001F                     	ds	1
  5727  000020                     i2___ftdiv@f3:
  5728                           	opt stack 0
  5729                           
  5730                           ; 3 bytes @ 0x1F
  5731  000020                     	ds	3
  5732  000023                     i2___ftdiv@sign:
  5733                           	opt stack 0
  5734                           
  5735                           ; 1 bytes @ 0x22
  5736  000023                     	ds	1
  5737  000024                     ?i2___ftneg:
  5738                           	opt stack 0
  5739  000024                     i2___ftneg@f1:
  5740                           	opt stack 0
  5741                           
  5742                           ; 3 bytes @ 0x23
  5743  000024                     	ds	3
  5744  000027                     ?_fabs:
  5745                           	opt stack 0
  5746  000027                     ?i2___ftmul:
  5747                           	opt stack 0
  5748  000027                     fabs@d:
  5749                           	opt stack 0
  5750  000027                     i2___ftmul@f1:
  5751                           	opt stack 0
  5752                           
  5753                           ; 3 bytes @ 0x26
  5754  000027                     	ds	3
  5755  00002A                     i2___ftge@ff1:
  5756                           	opt stack 0
  5757  00002A                     i2___ftmul@f2:
  5758                           	opt stack 0
  5759                           
  5760                           ; 3 bytes @ 0x29
  5761  00002A                     	ds	3
  5762  00002D                     ??i2___ftmul:
  5763  00002D                     i2___ftge@ff2:
  5764                           	opt stack 0
  5765                           
  5766                           ; 3 bytes @ 0x2C
  5767  00002D                     	ds	3
  5768  000030                     ??i2___ftge:
  5769  000030                     i2___ftmul@exp:
  5770                           	opt stack 0
  5771                           
  5772                           ; 1 bytes @ 0x2F
  5773  000030                     	ds	1
  5774  000031                     i2___ftmul@f3_as_product:
  5775                           	opt stack 0
  5776                           
  5777                           ; 3 bytes @ 0x30
  5778  000031                     	ds	3
  5779  000034                     i2___ftmul@cntr:
  5780                           	opt stack 0
  5781                           
  5782                           ; 1 bytes @ 0x33
  5783  000034                     	ds	1
  5784  000035                     i2___ftmul@sign:
  5785                           	opt stack 0
  5786                           
  5787                           ; 1 bytes @ 0x34
  5788  000035                     	ds	1
  5789  000036                     ?i2_fround:
  5790                           	opt stack 0
  5791  000036                     ?i2_scale:
  5792                           	opt stack 0
  5793                           
  5794                           ; 3 bytes @ 0x35
  5795  000036                     	ds	3
  5796  000039                     i2_fround$3530:
  5797                           	opt stack 0
  5798  000039                     i2_scale$3531:
  5799                           	opt stack 0
  5800                           
  5801                           ; 3 bytes @ 0x38
  5802  000039                     	ds	3
  5803  00003C                     i2scale@scl:
  5804                           	opt stack 0
  5805  00003C                     i2_fround$3529:
  5806                           	opt stack 0
  5807                           
  5808                           ; 3 bytes @ 0x3B
  5809  00003C                     	ds	1
  5810  00003D                     ?i2___fttol:
  5811                           	opt stack 0
  5812  00003D                     i2___fttol@f1:
  5813                           	opt stack 0
  5814                           
  5815                           ; 3 bytes @ 0x3C
  5816  00003D                     	ds	2
  5817  00003F                     i2fround@prec:
  5818                           	opt stack 0
  5819                           
  5820                           ; 1 bytes @ 0x3E
  5821  00003F                     	ds	1
  5822  000040                     ?i2___ftadd:
  5823                           	opt stack 0
  5824  000040                     i2___ftadd@f1:
  5825                           	opt stack 0
  5826                           
  5827                           ; 3 bytes @ 0x3F
  5828  000040                     	ds	1
  5829  000041                     ??i2___fttol:
  5830                           
  5831                           ; 1 bytes @ 0x40
  5832  000041                     	ds	2
  5833  000043                     i2___ftadd@f2:
  5834                           	opt stack 0
  5835                           
  5836                           ; 3 bytes @ 0x42
  5837  000043                     	ds	3
  5838  000046                     ??i2___ftadd:
  5839  000046                     i2___fttol@sign1:
  5840                           	opt stack 0
  5841                           
  5842                           ; 1 bytes @ 0x45
  5843  000046                     	ds	1
  5844  000047                     i2___fttol@lval:
  5845                           	opt stack 0
  5846                           
  5847                           ; 4 bytes @ 0x46
  5848  000047                     	ds	2
  5849  000049                     i2___ftadd@sign:
  5850                           	opt stack 0
  5851                           
  5852                           ; 1 bytes @ 0x48
  5853  000049                     	ds	1
  5854  00004A                     i2___ftadd@exp2:
  5855                           	opt stack 0
  5856                           
  5857                           ; 1 bytes @ 0x49
  5858  00004A                     	ds	1
  5859  00004B                     i2___ftadd@exp1:
  5860                           	opt stack 0
  5861  00004B                     i2___fttol@exp1:
  5862                           	opt stack 0
  5863                           
  5864                           ; 1 bytes @ 0x4A
  5865  00004B                     	ds	1
  5866  00004C                     ?_eval_poly:
  5867                           	opt stack 0
  5868  00004C                     ?___altoft:
  5869                           	opt stack 0
  5870  00004C                     eval_poly@x:
  5871                           	opt stack 0
  5872  00004C                     ___altoft@c:
  5873                           	opt stack 0
  5874                           
  5875                           ; 4 bytes @ 0x4B
  5876  00004C                     	ds	3
  5877  00004F                     eval_poly@d:
  5878                           	opt stack 0
  5879                           
  5880                           ; 2 bytes @ 0x4E
  5881  00004F                     	ds	1
  5882  000050                     ??___altoft:
  5883                           
  5884                           ; 1 bytes @ 0x4F
  5885  000050                     	ds	1
  5886  000051                     eval_poly@n:
  5887                           	opt stack 0
  5888                           
  5889                           ; 2 bytes @ 0x50
  5890  000051                     	ds	2
  5891  000053                     ??_eval_poly:
  5892                           
  5893                           ; 1 bytes @ 0x52
  5894  000053                     	ds	1
  5895  000054                     ___altoft@exp:
  5896                           	opt stack 0
  5897                           
  5898                           ; 1 bytes @ 0x53
  5899  000054                     	ds	1
  5900  000055                     ___altoft@sign:
  5901                           	opt stack 0
  5902  000055                     eval_poly@res:
  5903                           	opt stack 0
  5904                           
  5905                           ; 3 bytes @ 0x54
  5906  000055                     	ds	1
  5907  000056                     ?_floor:
  5908                           	opt stack 0
  5909  000056                     floor@x:
  5910                           	opt stack 0
  5911                           
  5912                           ; 3 bytes @ 0x55
  5913  000056                     	ds	2
  5914  000058                     ?_atan:
  5915                           	opt stack 0
  5916  000058                     atan@f:
  5917                           	opt stack 0
  5918                           
  5919                           ; 3 bytes @ 0x57
  5920  000058                     	ds	1
  5921  000059                     floor@i:
  5922                           	opt stack 0
  5923                           
  5924                           ; 3 bytes @ 0x58
  5925  000059                     	ds	2
  5926  00005B                     
  5927                           ; 1 bytes @ 0x5A
  5928  00005B                     	ds	1
  5929  00005C                     floor@expon:
  5930                           	opt stack 0
  5931                           
  5932                           ; 2 bytes @ 0x5B
  5933  00005C                     	ds	2
  5934  00005E                     tblptru	equ	0xFF8
  5935                           tblptrh	equ	0xFF7
  5936                           tblptrl	equ	0xFF6
  5937                           tablat	equ	0xFF5
  5938                           postinc0	equ	0xFEE
  5939                           wreg	equ	0xFE8
  5940                           postdec1	equ	0xFE5
  5941                           fsr1h	equ	0xFE2
  5942                           fsr1l	equ	0xFE1
  5943                           
  5944                           ; 1 bytes @ 0x5D
  5945 ;;
  5946 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5947 ;;
  5948 ;; *************** function _main *****************
  5949 ;; Defined at:
  5950 ;;		line 289 in file "main.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;		None
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;		None
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  1    wreg      void 
  5957 ;; Registers used:
  5958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5966 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5967 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5968 ;;Total ram usage:        2 bytes
  5969 ;; Hardware stack levels required when called:   22
  5970 ;; This function calls:
  5971 ;;		_ADCC_SetADIInterruptHandler
  5972 ;;		_SYSTEM_Initialize
  5973 ;;		_TMR6_SetInterruptHandler
  5974 ;;		_TMR7_SetInterruptHandler
  5975 ;;		_terminal_clearTerminal
  5976 ;;		_terminal_ringBufferPull
  5977 ;;		_terminal_setCursorHome
  5978 ;;		_terminal_textAttributesReset
  5979 ;; This function is called by:
  5980 ;;		Startup code after reset
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           	psect	text0
  5985  015A00                     __ptext0:
  5986                           	opt stack 0
  5987  015A00                     _main:
  5988                           	opt stack 9
  5989                           
  5990                           ;main.c: 294: _delay((unsigned long)((250)*(64000000/4000.0)));
  5991                           
  5992                           ;incstack = 0
  5993  015A00  0E15               	movlw	21
  5994  015A02  0101               	movlb	1	; () banked
  5995  015A04  6FB8               	movwf	(??_main+1)& (0+255),b
  5996  015A06  0E4B               	movlw	75
  5997  015A08  6FB7               	movwf	??_main& (0+255),b
  5998  015A0A  0EBE               	movlw	190
  5999  015A0C                     u16927:
  6000  015A0C  2EE8               	decfsz	wreg,f,c
  6001  015A0E  D7FE               	bra	u16927
  6002  015A10  2FB7               	decfsz	??_main& (0+255),f,b
  6003  015A12  D7FC               	bra	u16927
  6004  015A14  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  6005  015A16  D7FA               	bra	u16927
  6006  015A18  F000               	nop	
  6007                           
  6008                           ;main.c: 297: SYSTEM_Initialize();
  6009  015A1A  EC48  F0B2         	call	_SYSTEM_Initialize	;wreg free
  6010                           
  6011                           ;main.c: 300: LATGbits.LATG0 = 0;
  6012  015A1E  907F               	bcf	3967,0,c	;volatile
  6013                           
  6014                           ;main.c: 301: LATGbits.LATG1 = 0;
  6015  015A20  927F               	bcf	3967,1,c	;volatile
  6016                           
  6017                           ;main.c: 302: load_enable = 0;
  6018  015A22  905E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  6019                           
  6020                           ;main.c: 305: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  6021  015A24  0EAA               	movlw	low _heartbeatTimerCallback
  6022  015A26  0101               	movlb	1	; () banked
  6023  015A28  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  6024  015A2A  0E62               	movlw	high _heartbeatTimerCallback
  6025  015A2C  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  6026  015A2E  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  6027  015A30  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  6028  015A32  ECA6  F0B3         	call	_TMR6_SetInterruptHandler	;wreg free
  6029                           
  6030                           ;main.c: 308: ADCC_SetADIInterruptHandler(ADC_postProcessingCallback);
  6031  015A36  0EEA               	movlw	low _ADC_postProcessingCallback
  6032  015A38  0101               	movlb	1	; () banked
  6033  015A3A  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  6034  015A3C  0E1E               	movlw	high _ADC_postProcessingCallback
  6035  015A3E  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  6036  015A40  0E01               	movlw	low (_ADC_postProcessingCallback shr (0+16))
  6037  015A42  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  6038  015A44  ECC2  F0B3         	call	_ADCC_SetADIInterruptHandler	;wreg free
  6039                           
  6040                           ;main.c: 311: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  6041  015A48  0E58               	movlw	low _acquisitionTimerCallback
  6042  015A4A  0101               	movlb	1	; () banked
  6043  015A4C  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  6044  015A4E  0E5D               	movlw	high _acquisitionTimerCallback
  6045  015A50  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  6046  015A52  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  6047  015A54  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  6048  015A56  EC9F  F0B3         	call	_TMR7_SetInterruptHandler	;wreg free
  6049                           
  6050                           ;main.c: 314: (INTCONbits.GIEH = 1);
  6051  015A5A  8EF2               	bsf	intcon,7,c	;volatile
  6052                           
  6053                           ;main.c: 317: (INTCONbits.GIEL = 1);
  6054  015A5C  8CF2               	bsf	intcon,6,c	;volatile
  6055                           
  6056                           ;main.c: 321: terminal_clearTerminal();
  6057  015A5E  EC89  F0B3         	call	_terminal_clearTerminal	;wreg free
  6058                           
  6059                           ;main.c: 322: terminal_setCursorHome();
  6060  015A62  EC79  F0B3         	call	_terminal_setCursorHome	;wreg free
  6061                           
  6062                           ;main.c: 323: terminal_textAttributesReset();
  6063  015A66  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  6064  015A6A                     
  6065                           ;main.c: 327: {
  6066                           ;main.c: 330: if (eusart2RxStringReady) {
  6067  015A6A  0100               	movlb	0	; () banked
  6068  015A6C  A1FD               	btfss	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  6069  015A6E  D7FD               	goto	l923
  6070                           
  6071                           ; BSR set to: 0
  6072                           ;main.c: 332: terminal_ringBufferPull();
  6073  015A70  ECB9  F0A3         	call	_terminal_ringBufferPull	;wreg free
  6074  015A74  D7FA               	goto	l923
  6075  015A76                     __end_of_main:
  6076                           	opt stack 0
  6077                           tblptru	equ	0xFF8
  6078                           tblptrh	equ	0xFF7
  6079                           tblptrl	equ	0xFF6
  6080                           tablat	equ	0xFF5
  6081                           intcon	equ	0xFF2
  6082                           postinc0	equ	0xFEE
  6083                           wreg	equ	0xFE8
  6084                           postdec1	equ	0xFE5
  6085                           fsr1h	equ	0xFE2
  6086                           fsr1l	equ	0xFE1
  6087                           
  6088 ;; *************** function _terminal_setCursorHome *****************
  6089 ;; Defined at:
  6090 ;;		line 85 in file "ring_buffer_interface.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;		None
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;		None
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  1    wreg      void 
  6097 ;; Registers used:
  6098 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6108 ;;Total ram usage:        0 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; Hardware stack levels required when called:   18
  6111 ;; This function calls:
  6112 ;;		_printf
  6113 ;; This function is called by:
  6114 ;;		_main
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           	psect	text1
  6119  0166F2                     __ptext1:
  6120                           	opt stack 0
  6121  0166F2                     _terminal_setCursorHome:
  6122                           	opt stack 12
  6123                           
  6124                           ;ring_buffer_interface.c: 86: printf("\033[H");
  6125                           
  6126                           ;incstack = 0
  6127  0166F2  0EB8               	movlw	low STR_3
  6128  0166F4  0101               	movlb	1	; () banked
  6129  0166F6  6F64               	movwf	printf@f& (0+255),b
  6130  0166F8  0EFF               	movlw	high STR_3
  6131  0166FA  6F65               	movwf	(printf@f+1)& (0+255),b
  6132  0166FC  EC00  F080         	call	_printf	;wreg free
  6133  016700  0012               	return		;funcret
  6134  016702                     __end_of_terminal_setCursorHome:
  6135                           	opt stack 0
  6136                           tblptru	equ	0xFF8
  6137                           tblptrh	equ	0xFF7
  6138                           tblptrl	equ	0xFF6
  6139                           tablat	equ	0xFF5
  6140                           intcon	equ	0xFF2
  6141                           postinc0	equ	0xFEE
  6142                           wreg	equ	0xFE8
  6143                           postdec1	equ	0xFE5
  6144                           fsr1h	equ	0xFE2
  6145                           fsr1l	equ	0xFE1
  6146                           
  6147 ;; *************** function _terminal_ringBufferPull *****************
  6148 ;; Defined at:
  6149 ;;		line 12 in file "ring_buffer_interface.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;		None
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;  index           2  179[BANK1 ] int 
  6154 ;;  index           2  181[BANK1 ] int 
  6155 ;;  charNumber      2  177[BANK1 ] int 
  6156 ;; Return value:  Size  Location     Type
  6157 ;;                  1    wreg      void 
  6158 ;; Registers used:
  6159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6160 ;; Tracked objects:
  6161 ;;		On entry : 0/0
  6162 ;;		On exit  : 0/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6166 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6167 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6168 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6169 ;;Total ram usage:        9 bytes
  6170 ;; Hardware stack levels used:    1
  6171 ;; Hardware stack levels required when called:   21
  6172 ;; This function calls:
  6173 ;;		_EUSART2_Read
  6174 ;;		_ringBufferLUT
  6175 ;;		_strlen
  6176 ;; This function is called by:
  6177 ;;		_main
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181                           	psect	text2
  6182  014772                     __ptext2:
  6183                           	opt stack 0
  6184  014772                     _terminal_ringBufferPull:
  6185                           	opt stack 9
  6186                           
  6187                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  6188                           
  6189                           ;incstack = 0
  6190  014772  C1DA  F1B1         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  6191  014776  0101               	movlb	1	; () banked
  6192  014778  6BB2               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  6193                           
  6194                           ; BSR set to: 1
  6195                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  6196  01477A  0E00               	movlw	0
  6197  01477C  6FB6               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  6198  01477E  0E00               	movlw	0
  6199  014780  6FB5               	movwf	terminal_ringBufferPull@index& (0+255),b
  6200  014782                     l11078:
  6201                           
  6202                           ; BSR set to: 1
  6203  014782  BFB6               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  6204  014784  D006               	goto	l962
  6205  014786  51B6               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  6206  014788  E10F               	bnz	l11088
  6207  01478A  0E40               	movlw	64
  6208  01478C  5DB5               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  6209  01478E  B0D8               	btfsc	status,0,c
  6210  014790  D00B               	goto	u13010
  6211  014792                     l962:
  6212                           
  6213                           ; BSR set to: 1
  6214                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  6215                           
  6216                           ; BSR set to: 1
  6217  014792  0EC0               	movlw	low _line
  6218  014794  25B5               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  6219  014796  6ED9               	movwf	fsr2l,c
  6220  014798  0E02               	movlw	high _line
  6221  01479A  21B6               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  6222  01479C  6EDA               	movwf	fsr2h,c
  6223  01479E  0E00               	movlw	0
  6224  0147A0  6EDF               	movwf	indf2,c
  6225                           
  6226                           ; BSR set to: 1
  6227  0147A2  4BB5               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  6228  0147A4  2BB6               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  6229  0147A6  D7ED               	goto	l11078
  6230  0147A8                     u13010:
  6231  0147A8                     l11088:
  6232                           
  6233                           ; BSR set to: 1
  6234                           ;ring_buffer_interface.c: 21: }
  6235                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  6236  0147A8  0E00               	movlw	0
  6237  0147AA  6FB4               	movwf	(terminal_ringBufferPull@index_2114+1)& (0+255),b
  6238  0147AC  0E00               	movlw	0
  6239  0147AE  6FB3               	movwf	terminal_ringBufferPull@index_2114& (0+255),b
  6240  0147B0  D00E               	goto	l964
  6241  0147B2                     
  6242                           ; BSR set to: 1
  6243                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  6244                           
  6245                           ; BSR set to: 1
  6246  0147B2  ECD0  F0B0         	call	_EUSART2_Read	;wreg free
  6247  0147B6  0101               	movlb	1	; () banked
  6248  0147B8  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  6249  0147BA  0EC0               	movlw	low _line
  6250  0147BC  25B3               	addwf	terminal_ringBufferPull@index_2114& (0+255),w,b
  6251  0147BE  6ED9               	movwf	fsr2l,c
  6252  0147C0  0E02               	movlw	high _line
  6253  0147C2  21B4               	addwfc	(terminal_ringBufferPull@index_2114+1)& (0+255),w,b
  6254  0147C4  6EDA               	movwf	fsr2h,c
  6255  0147C6  C1AE  FFDF         	movff	??_terminal_ringBufferPull,indf2
  6256                           
  6257                           ; BSR set to: 1
  6258  0147CA  4BB3               	infsnz	terminal_ringBufferPull@index_2114& (0+255),f,b
  6259  0147CC  2BB4               	incf	(terminal_ringBufferPull@index_2114+1)& (0+255),f,b
  6260  0147CE                     l964:
  6261                           
  6262                           ; BSR set to: 1
  6263                           
  6264                           ; BSR set to: 1
  6265  0147CE  51B1               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  6266  0147D0  5DB3               	subwf	terminal_ringBufferPull@index_2114& (0+255),w,b
  6267  0147D2  51B4               	movf	(terminal_ringBufferPull@index_2114+1)& (0+255),w,b
  6268  0147D4  0A80               	xorlw	128
  6269  0147D6  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  6270  0147D8  51B2               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  6271  0147DA  0A80               	xorlw	128
  6272  0147DC  59AE               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  6273  0147DE  A0D8               	btfss	status,0,c
  6274  0147E0  D7E8               	goto	l965
  6275                           
  6276                           ; BSR set to: 1
  6277                           ;ring_buffer_interface.c: 28: }
  6278                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  6279  0147E2  C0EB  F1DB         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  6280                           
  6281                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  6282                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  6283  0147E6  D017               	goto	l967
  6284  0147E8                     
  6285                           ; BSR set to: 1
  6286                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  6287                           
  6288                           ; BSR set to: 1
  6289  0147E8  0EFF               	movlw	255
  6290  0147EA  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  6291  0147EC  0EFF               	movlw	255
  6292  0147EE  6FAF               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  6293  0147F0  0EC0               	movlw	low _line
  6294  0147F2  6F17               	movwf	strlen@s& (0+255),b
  6295  0147F4  0E02               	movlw	high _line
  6296  0147F6  6F18               	movwf	(strlen@s+1)& (0+255),b
  6297  0147F8  EC98  F0AF         	call	_strlen	;wreg free
  6298  0147FC  0101               	movlb	1	; () banked
  6299  0147FE  51AE               	movf	??_terminal_ringBufferPull& (0+255),w,b
  6300  014800  2717               	addwf	?_strlen& (0+255),f,b
  6301  014802  51AF               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  6302  014804  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  6303  014806  0EC0               	movlw	low _line
  6304  014808  2517               	addwf	?_strlen& (0+255),w,b
  6305  01480A  6ED9               	movwf	fsr2l,c
  6306  01480C  0E02               	movlw	high _line
  6307  01480E  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  6308  014810  6EDA               	movwf	fsr2h,c
  6309  014812  0E00               	movlw	0
  6310  014814  6EDF               	movwf	indf2,c
  6311  014816                     l967:
  6312                           
  6313                           ; BSR set to: 1
  6314  014816  0EFF               	movlw	255
  6315  014818  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  6316  01481A  0EFF               	movlw	255
  6317  01481C  6FAF               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  6318  01481E  0EC0               	movlw	low _line
  6319  014820  6F17               	movwf	strlen@s& (0+255),b
  6320  014822  0E02               	movlw	high _line
  6321  014824  6F18               	movwf	(strlen@s+1)& (0+255),b
  6322  014826  EC98  F0AF         	call	_strlen	;wreg free
  6323  01482A  0101               	movlb	1	; () banked
  6324  01482C  51AE               	movf	??_terminal_ringBufferPull& (0+255),w,b
  6325  01482E  2717               	addwf	?_strlen& (0+255),f,b
  6326  014830  51AF               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  6327  014832  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  6328  014834  0EC0               	movlw	low _line
  6329  014836  2517               	addwf	?_strlen& (0+255),w,b
  6330  014838  6ED9               	movwf	fsr2l,c
  6331  01483A  0E02               	movlw	high _line
  6332  01483C  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  6333  01483E  6EDA               	movwf	fsr2h,c
  6334  014840  0E0A               	movlw	10
  6335  014842  18DE               	xorwf	postinc2,w,c
  6336  014844  B4D8               	btfsc	status,2,c
  6337  014846  D7D0               	goto	l968
  6338                           
  6339                           ; BSR set to: 1
  6340  014848  0EFF               	movlw	255
  6341  01484A  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  6342  01484C  0EFF               	movlw	255
  6343  01484E  6FAF               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  6344  014850  0EC0               	movlw	low _line
  6345  014852  6F17               	movwf	strlen@s& (0+255),b
  6346  014854  0E02               	movlw	high _line
  6347  014856  6F18               	movwf	(strlen@s+1)& (0+255),b
  6348  014858  EC98  F0AF         	call	_strlen	;wreg free
  6349  01485C  0101               	movlb	1	; () banked
  6350  01485E  51AE               	movf	??_terminal_ringBufferPull& (0+255),w,b
  6351  014860  2717               	addwf	?_strlen& (0+255),f,b
  6352  014862  51AF               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  6353  014864  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  6354  014866  0EC0               	movlw	low _line
  6355  014868  2517               	addwf	?_strlen& (0+255),w,b
  6356  01486A  6ED9               	movwf	fsr2l,c
  6357  01486C  0E02               	movlw	high _line
  6358  01486E  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  6359  014870  6EDA               	movwf	fsr2h,c
  6360  014872  0E0D               	movlw	13
  6361  014874  18DE               	xorwf	postinc2,w,c
  6362  014876  B4D8               	btfsc	status,2,c
  6363  014878  D7B7               	goto	l968
  6364                           
  6365                           ; BSR set to: 1
  6366                           ;ring_buffer_interface.c: 40: }
  6367                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  6368  01487A  0100               	movlb	0	; () banked
  6369  01487C  91FD               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  6373  01487E  0EC0               	movlw	low _line
  6374  014880  0101               	movlb	1	; () banked
  6375  014882  6FA0               	movwf	ringBufferLUT@line& (0+255),b
  6376  014884  0E02               	movlw	high _line
  6377  014886  6FA1               	movwf	(ringBufferLUT@line+1)& (0+255),b
  6378  014888  ECB7  F08A         	call	_ringBufferLUT	;wreg free
  6379  01488C  0012               	return		;funcret
  6380  01488E                     __end_of_terminal_ringBufferPull:
  6381                           	opt stack 0
  6382                           tblptru	equ	0xFF8
  6383                           tblptrh	equ	0xFF7
  6384                           tblptrl	equ	0xFF6
  6385                           tablat	equ	0xFF5
  6386                           intcon	equ	0xFF2
  6387                           postinc0	equ	0xFEE
  6388                           wreg	equ	0xFE8
  6389                           postdec1	equ	0xFE5
  6390                           fsr1h	equ	0xFE2
  6391                           fsr1l	equ	0xFE1
  6392                           indf2	equ	0xFDF
  6393                           postinc2	equ	0xFDE
  6394                           fsr2h	equ	0xFDA
  6395                           fsr2l	equ	0xFD9
  6396                           status	equ	0xFD8
  6397                           
  6398 ;; *************** function _ringBufferLUT *****************
  6399 ;; Defined at:
  6400 ;;		line 37 in file "ring_buffer_LUT.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;  line            2  160[BANK1 ] PTR unsigned char 
  6403 ;;		 -> line(64), 
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;  angle_degree    3  164[BANK1 ] PTR unsigned char 
  6406 ;;  index           2  170[BANK1 ] int 
  6407 ;;  arg_buff        3  167[BANK1 ] unsigned char [3]
  6408 ;;  percentage      2  172[BANK1 ] int 
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      void 
  6411 ;; Registers used:
  6412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6418 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6419 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6420 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6421 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6422 ;;Total ram usage:       14 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:   20
  6425 ;; This function calls:
  6426 ;;		___awtoft
  6427 ;;		___ftadd
  6428 ;;		___ftdiv
  6429 ;;		___ftmul
  6430 ;;		___ftneg
  6431 ;;		___wmul
  6432 ;;		_atoi
  6433 ;;		_getDeviceID
  6434 ;;		_getDeviceIDString
  6435 ;;		_printf
  6436 ;;		_strcmp
  6437 ;;		_strstr
  6438 ;;		_terminal_printNewline
  6439 ;;		_terminal_textAttributes
  6440 ;;		_terminal_textAttributesReset
  6441 ;; This function is called by:
  6442 ;;		_terminal_ringBufferPull
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text3
  6447  01156E                     __ptext3:
  6448                           	opt stack 0
  6449  01156E                     _ringBufferLUT:
  6450                           	opt stack 9
  6451                           
  6452                           ;ring_buffer_LUT.c: 43: if((0 == strcmp(line, "Reset"))) {
  6453                           
  6454                           ;incstack = 0
  6455  01156E  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6456  011572  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6457  011576  0EA4               	movlw	low STR_41
  6458  011578  0101               	movlb	1	; () banked
  6459  01157A  6F19               	movwf	strcmp@s2& (0+255),b
  6460  01157C  0EFF               	movlw	high STR_41
  6461  01157E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6462  011580  ECEF  F0AF         	call	_strcmp	;wreg free
  6463  011584  0101               	movlb	1	; () banked
  6464  011586  5117               	movf	?_strcmp& (0+255),w,b
  6465  011588  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6466  01158A  A4D8               	btfss	status,2,c
  6467  01158C  D00F               	goto	l1085
  6468                           
  6469                           ; BSR set to: 1
  6470                           ;ring_buffer_LUT.c: 46: printf("\033[2J");
  6471  01158E  0EAF               	movlw	low STR_2
  6472  011590  6F64               	movwf	printf@f& (0+255),b
  6473  011592  0EFF               	movlw	high STR_2
  6474  011594  6F65               	movwf	(printf@f+1)& (0+255),b
  6475  011596  EC00  F080         	call	_printf	;wreg free
  6476                           
  6477                           ;ring_buffer_LUT.c: 49: printf("\033[H");
  6478  01159A  0EB8               	movlw	low STR_3
  6479  01159C  0101               	movlb	1	; () banked
  6480  01159E  6F64               	movwf	printf@f& (0+255),b
  6481  0115A0  0EFF               	movlw	high STR_3
  6482  0115A2  6F65               	movwf	(printf@f+1)& (0+255),b
  6483  0115A4  EC00  F080         	call	_printf	;wreg free
  6484  0115A8  00FF               	reset		;# 
  6485                           
  6486                           ;ring_buffer_LUT.c: 54: }
  6487  0115AA  0012               	return	
  6488  0115AC                     l1085:
  6489                           
  6490                           ;ring_buffer_LUT.c: 57: else if((0 == strcmp(line, "Clear"))) {
  6491  0115AC  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6492  0115B0  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6493  0115B4  0E9E               	movlw	low STR_44
  6494  0115B6  0101               	movlb	1	; () banked
  6495  0115B8  6F19               	movwf	strcmp@s2& (0+255),b
  6496  0115BA  0EFF               	movlw	high STR_44
  6497  0115BC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6498  0115BE  ECEF  F0AF         	call	_strcmp	;wreg free
  6499  0115C2  0101               	movlb	1	; () banked
  6500  0115C4  5117               	movf	?_strcmp& (0+255),w,b
  6501  0115C6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6502  0115C8  A4D8               	btfss	status,2,c
  6503  0115CA  D00E               	goto	l1087
  6504                           
  6505                           ; BSR set to: 1
  6506                           ;ring_buffer_LUT.c: 60: printf("\033[2J");
  6507  0115CC  0EAF               	movlw	low STR_2
  6508  0115CE  6F64               	movwf	printf@f& (0+255),b
  6509  0115D0  0EFF               	movlw	high STR_2
  6510  0115D2  6F65               	movwf	(printf@f+1)& (0+255),b
  6511  0115D4  EC00  F080         	call	_printf	;wreg free
  6512                           
  6513                           ;ring_buffer_LUT.c: 63: printf("\033[H");
  6514  0115D8  0EB8               	movlw	low STR_3
  6515  0115DA  0101               	movlb	1	; () banked
  6516  0115DC  6F64               	movwf	printf@f& (0+255),b
  6517  0115DE  0EFF               	movlw	high STR_3
  6518  0115E0  6F65               	movwf	(printf@f+1)& (0+255),b
  6519  0115E2  EC00  F080         	call	_printf	;wreg free
  6520                           
  6521                           ;ring_buffer_LUT.c: 65: }
  6522  0115E6  0012               	return	
  6523  0115E8                     l1087:
  6524                           
  6525                           ;ring_buffer_LUT.c: 68: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  6526  0115E8  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6527  0115EC  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6528  0115F0  0E98               	movlw	low STR_47
  6529  0115F2  0101               	movlb	1	; () banked
  6530  0115F4  6F19               	movwf	strcmp@s2& (0+255),b
  6531  0115F6  0EFF               	movlw	high STR_47
  6532  0115F8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6533  0115FA  ECEF  F0AF         	call	_strcmp	;wreg free
  6534  0115FE  0101               	movlb	1	; () banked
  6535  011600  5117               	movf	?_strcmp& (0+255),w,b
  6536  011602  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6537  011604  B4D8               	btfsc	status,2,c
  6538  011606  D00F               	goto	u12090
  6539                           
  6540                           ; BSR set to: 1
  6541  011608  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6542  01160C  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6543  011610  0EB4               	movlw	low STR_48
  6544  011612  6F19               	movwf	strcmp@s2& (0+255),b
  6545  011614  0EFF               	movlw	high STR_48
  6546  011616  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6547  011618  ECEF  F0AF         	call	_strcmp	;wreg free
  6548  01161C  0101               	movlb	1	; () banked
  6549  01161E  5117               	movf	?_strcmp& (0+255),w,b
  6550  011620  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6551  011622  A4D8               	btfss	status,2,c
  6552  011624  D01D               	goto	l1089
  6553  011626                     u12090:
  6554                           
  6555                           ; BSR set to: 1
  6556                           ;ring_buffer_LUT.c: 71: terminal_printNewline();
  6557                           
  6558                           ; BSR set to: 1
  6559  011626  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6560                           
  6561                           ;ring_buffer_LUT.c: 73: terminal_textAttributes(GREEN, BLACK, NORMAL);
  6562  01162A  0E00               	movlw	0
  6563  01162C  0101               	movlb	1	; () banked
  6564  01162E  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6565  011630  0E00               	movlw	0
  6566  011632  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6567  011634  0E02               	movlw	2
  6568  011636  EC86  F096         	call	_terminal_textAttributes
  6569                           
  6570                           ;ring_buffer_LUT.c: 75: printf("AC Power Meter\n\r");
  6571  01163A  0EB3               	movlw	low STR_49
  6572  01163C  0101               	movlb	1	; () banked
  6573  01163E  6F64               	movwf	printf@f& (0+255),b
  6574  011640  0EFE               	movlw	high STR_49
  6575  011642  6F65               	movwf	(printf@f+1)& (0+255),b
  6576  011644  EC00  F080         	call	_printf	;wreg free
  6577                           
  6578                           ;ring_buffer_LUT.c: 76: printf("Marquette University ELEN 3035 Final Project\n\r");
  6579  011648  0E8B               	movlw	low STR_50
  6580  01164A  0101               	movlb	1	; () banked
  6581  01164C  6F64               	movwf	printf@f& (0+255),b
  6582  01164E  0EFB               	movlw	high STR_50
  6583  011650  6F65               	movwf	(printf@f+1)& (0+255),b
  6584  011652  EC00  F080         	call	_printf	;wreg free
  6585                           
  6586                           ;ring_buffer_LUT.c: 78: terminal_textAttributesReset();
  6587  011656  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  6588                           
  6589                           ;ring_buffer_LUT.c: 80: terminal_printNewline();
  6590  01165A  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6591                           
  6592                           ;ring_buffer_LUT.c: 82: }
  6593  01165E  0012               	return	
  6594  011660                     l1089:
  6595                           
  6596                           ;ring_buffer_LUT.c: 85: else if((0 == strcmp(line, "Device ID?"))) {
  6597  011660  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6598  011664  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6599  011668  0E7C               	movlw	low STR_51
  6600  01166A  0101               	movlb	1	; () banked
  6601  01166C  6F19               	movwf	strcmp@s2& (0+255),b
  6602  01166E  0EFF               	movlw	high STR_51
  6603  011670  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6604  011672  ECEF  F0AF         	call	_strcmp	;wreg free
  6605  011676  0101               	movlb	1	; () banked
  6606  011678  5117               	movf	?_strcmp& (0+255),w,b
  6607  01167A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6608  01167C  A4D8               	btfss	status,2,c
  6609  01167E  D027               	goto	l1093
  6610                           
  6611                           ; BSR set to: 1
  6612                           ;ring_buffer_LUT.c: 88: terminal_printNewline();
  6613  011680  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6614                           
  6615                           ;ring_buffer_LUT.c: 90: terminal_textAttributes(GREEN, BLACK, NORMAL);
  6616  011684  0E00               	movlw	0
  6617  011686  0101               	movlb	1	; () banked
  6618  011688  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6619  01168A  0E00               	movlw	0
  6620  01168C  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6621  01168E  0E02               	movlw	2
  6622  011690  EC86  F096         	call	_terminal_textAttributes
  6623                           
  6624                           ;ring_buffer_LUT.c: 93: printf("Flash memory device ID is: 0x%X. This corresponds to a d
      +                          evice "
  6625                           ;ring_buffer_LUT.c: 94: "part number of %s\n\r",
  6626                           ;ring_buffer_LUT.c: 95: getDeviceID(),
  6627                           ;ring_buffer_LUT.c: 96: getDeviceIDString(getDeviceID));
  6628  011694  0ED4               	movlw	low STR_52
  6629  011696  0101               	movlb	1	; () banked
  6630  011698  6F64               	movwf	printf@f& (0+255),b
  6631  01169A  0EF9               	movlw	high STR_52
  6632  01169C  6F65               	movwf	(printf@f+1)& (0+255),b
  6633  01169E  EC07  F0B3         	call	_getDeviceID	;wreg free
  6634  0116A2  C122  F166         	movff	?_getDeviceID,?_printf+2
  6635  0116A6  C123  F167         	movff	?_getDeviceID+1,?_printf+3
  6636  0116AA  0E66               	movlw	high _getDeviceID
  6637  0116AC  0101               	movlb	1	; () banked
  6638  0116AE  6F1E               	movwf	(getDeviceIDString@inputDevID+1)& (0+255),b
  6639  0116B0  0E0E               	movlw	low _getDeviceID
  6640  0116B2  6F1D               	movwf	getDeviceIDString@inputDevID& (0+255),b
  6641  0116B4  EC3B  F0AB         	call	_getDeviceIDString	;wreg free
  6642  0116B8  C11D  F168         	movff	?_getDeviceIDString,?_printf+4
  6643  0116BC  C11E  F169         	movff	?_getDeviceIDString+1,?_printf+5
  6644  0116C0  EC00  F080         	call	_printf	;wreg free
  6645                           
  6646                           ;ring_buffer_LUT.c: 99: terminal_textAttributesReset();
  6647  0116C4  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  6648                           
  6649                           ;ring_buffer_LUT.c: 101: terminal_printNewline();
  6650  0116C8  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6651                           
  6652                           ;ring_buffer_LUT.c: 103: }
  6653  0116CC  0012               	return	
  6654  0116CE                     l1093:
  6655                           
  6656                           ;ring_buffer_LUT.c: 106: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  6657  0116CE  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6658  0116D2  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6659  0116D6  0EC4               	movlw	low STR_53
  6660  0116D8  0101               	movlb	1	; () banked
  6661  0116DA  6F19               	movwf	strcmp@s2& (0+255),b
  6662  0116DC  0EFE               	movlw	high STR_53
  6663  0116DE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6664  0116E0  ECEF  F0AF         	call	_strcmp	;wreg free
  6665  0116E4  0101               	movlb	1	; () banked
  6666  0116E6  5117               	movf	?_strcmp& (0+255),w,b
  6667  0116E8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6668  0116EA  A4D8               	btfss	status,2,c
  6669  0116EC  D01C               	goto	l1095
  6670                           
  6671                           ; BSR set to: 1
  6672                           ;ring_buffer_LUT.c: 109: terminal_printNewline();
  6673  0116EE  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6674                           
  6675                           ;ring_buffer_LUT.c: 111: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6676  0116F2  0E00               	movlw	0
  6677  0116F4  0101               	movlb	1	; () banked
  6678  0116F6  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6679  0116F8  0E00               	movlw	0
  6680  0116FA  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6681  0116FC  0E06               	movlw	6
  6682  0116FE  EC86  F096         	call	_terminal_textAttributes
  6683                           
  6684                           ;ring_buffer_LUT.c: 112: printf("+3.3V rail measured as +%f Volts\n\r", POS3P3_ADC_Resul
      +                          t);
  6685  011702  0EF9               	movlw	low STR_54
  6686  011704  0101               	movlb	1	; () banked
  6687  011706  6F64               	movwf	printf@f& (0+255),b
  6688  011708  0EFC               	movlw	high STR_54
  6689  01170A  6F65               	movwf	(printf@f+1)& (0+255),b
  6690  01170C  C0D7  F166         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
  6691  011710  C0D8  F167         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
  6692  011714  C0D9  F168         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
  6693  011718  EC00  F080         	call	_printf	;wreg free
  6694                           
  6695                           ;ring_buffer_LUT.c: 114: terminal_textAttributesReset();
  6696  01171C  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  6697                           
  6698                           ;ring_buffer_LUT.c: 116: terminal_printNewline();
  6699  011720  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6700                           
  6701                           ;ring_buffer_LUT.c: 119: }
  6702  011724  0012               	return	
  6703  011726                     l1095:
  6704                           
  6705                           ;ring_buffer_LUT.c: 122: else if((0 == strcmp(line, "Measure POS12?"))) {
  6706  011726  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6707  01172A  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6708  01172E  0EF4               	movlw	low STR_55
  6709  011730  0101               	movlb	1	; () banked
  6710  011732  6F19               	movwf	strcmp@s2& (0+255),b
  6711  011734  0EFE               	movlw	high STR_55
  6712  011736  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6713  011738  ECEF  F0AF         	call	_strcmp	;wreg free
  6714  01173C  0101               	movlb	1	; () banked
  6715  01173E  5117               	movf	?_strcmp& (0+255),w,b
  6716  011740  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6717  011742  A4D8               	btfss	status,2,c
  6718  011744  D01C               	goto	l1097
  6719                           
  6720                           ; BSR set to: 1
  6721                           ;ring_buffer_LUT.c: 125: terminal_printNewline();
  6722  011746  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6723                           
  6724                           ;ring_buffer_LUT.c: 127: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6725  01174A  0E00               	movlw	0
  6726  01174C  0101               	movlb	1	; () banked
  6727  01174E  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6728  011750  0E00               	movlw	0
  6729  011752  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6730  011754  0E06               	movlw	6
  6731  011756  EC86  F096         	call	_terminal_textAttributes
  6732                           
  6733                           ;ring_buffer_LUT.c: 128: printf("+12V rail measured as +%f Volts\n\r", POS12_ADC_Result)
      +                          ;
  6734  01175A  0E82               	movlw	low STR_56
  6735  01175C  0101               	movlb	1	; () banked
  6736  01175E  6F64               	movwf	printf@f& (0+255),b
  6737  011760  0EFD               	movlw	high STR_56
  6738  011762  6F65               	movwf	(printf@f+1)& (0+255),b
  6739  011764  C1C7  F166         	movff	_POS12_ADC_Result,?_printf+2	;volatile
  6740  011768  C1C8  F167         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
  6741  01176C  C1C9  F168         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
  6742  011770  EC00  F080         	call	_printf	;wreg free
  6743                           
  6744                           ;ring_buffer_LUT.c: 130: terminal_textAttributesReset();
  6745  011774  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  6746                           
  6747                           ;ring_buffer_LUT.c: 132: terminal_printNewline();
  6748  011778  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6749                           
  6750                           ;ring_buffer_LUT.c: 135: }
  6751  01177C  0012               	return	
  6752  01177E                     l1097:
  6753                           
  6754                           ;ring_buffer_LUT.c: 138: else if((0 == strcmp(line, "Measure Die Temp?"))) {
  6755  01177E  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6756  011782  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6757  011786  0E90               	movlw	low STR_57
  6758  011788  0101               	movlb	1	; () banked
  6759  01178A  6F19               	movwf	strcmp@s2& (0+255),b
  6760  01178C  0EFE               	movlw	high STR_57
  6761  01178E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6762  011790  ECEF  F0AF         	call	_strcmp	;wreg free
  6763  011794  0101               	movlb	1	; () banked
  6764  011796  5117               	movf	?_strcmp& (0+255),w,b
  6765  011798  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6766  01179A  A4D8               	btfss	status,2,c
  6767  01179C  D01C               	goto	l1099
  6768                           
  6769                           ; BSR set to: 1
  6770                           ;ring_buffer_LUT.c: 141: terminal_printNewline();
  6771  01179E  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6772                           
  6773                           ;ring_buffer_LUT.c: 143: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6774  0117A2  0E00               	movlw	0
  6775  0117A4  0101               	movlb	1	; () banked
  6776  0117A6  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6777  0117A8  0E00               	movlw	0
  6778  0117AA  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6779  0117AC  0E06               	movlw	6
  6780  0117AE  EC86  F096         	call	_terminal_textAttributes
  6781                           
  6782                           ;ring_buffer_LUT.c: 144: printf("Die Temperature measured as %fC\n\r", Temp_ADC_Result);
  6783  0117B2  0E1C               	movlw	low STR_58
  6784  0117B4  0101               	movlb	1	; () banked
  6785  0117B6  6F64               	movwf	printf@f& (0+255),b
  6786  0117B8  0EFD               	movlw	high STR_58
  6787  0117BA  6F65               	movwf	(printf@f+1)& (0+255),b
  6788  0117BC  C1C4  F166         	movff	_Temp_ADC_Result,?_printf+2	;volatile
  6789  0117C0  C1C5  F167         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
  6790  0117C4  C1C6  F168         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
  6791  0117C8  EC00  F080         	call	_printf	;wreg free
  6792                           
  6793                           ;ring_buffer_LUT.c: 146: terminal_textAttributesReset();
  6794  0117CC  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  6795                           
  6796                           ;ring_buffer_LUT.c: 148: terminal_printNewline();
  6797  0117D0  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6798                           
  6799                           ;ring_buffer_LUT.c: 151: }
  6800  0117D4  0012               	return	
  6801  0117D6                     l1099:
  6802                           
  6803                           ;ring_buffer_LUT.c: 154: else if((0 == strcmp(line, "Measure FVR?"))) {
  6804  0117D6  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6805  0117DA  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6806  0117DE  0E4A               	movlw	low STR_59
  6807  0117E0  0101               	movlb	1	; () banked
  6808  0117E2  6F19               	movwf	strcmp@s2& (0+255),b
  6809  0117E4  0EFF               	movlw	high STR_59
  6810  0117E6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6811  0117E8  ECEF  F0AF         	call	_strcmp	;wreg free
  6812  0117EC  0101               	movlb	1	; () banked
  6813  0117EE  5117               	movf	?_strcmp& (0+255),w,b
  6814  0117F0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6815  0117F2  A4D8               	btfss	status,2,c
  6816  0117F4  D01C               	goto	l1101
  6817                           
  6818                           ; BSR set to: 1
  6819                           ;ring_buffer_LUT.c: 157: terminal_printNewline();
  6820  0117F6  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6821                           
  6822                           ;ring_buffer_LUT.c: 159: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6823  0117FA  0E00               	movlw	0
  6824  0117FC  0101               	movlb	1	; () banked
  6825  0117FE  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6826  011800  0E00               	movlw	0
  6827  011802  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6828  011804  0E06               	movlw	6
  6829  011806  EC86  F096         	call	_terminal_textAttributes
  6830                           
  6831                           ;ring_buffer_LUT.c: 160: printf("Fixed Voltage Reference Buffer 1 measured as %f Volts\n
      +                          \r", FVR_ADC_Result);
  6832  01180A  0E1E               	movlw	low STR_60
  6833  01180C  0101               	movlb	1	; () banked
  6834  01180E  6F64               	movwf	printf@f& (0+255),b
  6835  011810  0EFB               	movlw	high STR_60
  6836  011812  6F65               	movwf	(printf@f+1)& (0+255),b
  6837  011814  C0EC  F166         	movff	_FVR_ADC_Result,?_printf+2	;volatile
  6838  011818  C0ED  F167         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
  6839  01181C  C0EE  F168         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
  6840  011820  EC00  F080         	call	_printf	;wreg free
  6841                           
  6842                           ;ring_buffer_LUT.c: 162: terminal_textAttributesReset();
  6843  011824  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  6844                           
  6845                           ;ring_buffer_LUT.c: 164: terminal_printNewline();
  6846  011828  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6847                           
  6848                           ;ring_buffer_LUT.c: 167: }
  6849  01182C  0012               	return	
  6850  01182E                     l1101:
  6851                           
  6852                           ;ring_buffer_LUT.c: 170: else if((0 == strcmp(line, "Measure AVSS?"))) {
  6853  01182E  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6854  011832  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6855  011836  0E21               	movlw	low STR_61
  6856  011838  0101               	movlb	1	; () banked
  6857  01183A  6F19               	movwf	strcmp@s2& (0+255),b
  6858  01183C  0EFF               	movlw	high STR_61
  6859  01183E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6860  011840  ECEF  F0AF         	call	_strcmp	;wreg free
  6861  011844  0101               	movlb	1	; () banked
  6862  011846  5117               	movf	?_strcmp& (0+255),w,b
  6863  011848  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6864  01184A  A4D8               	btfss	status,2,c
  6865  01184C  D01C               	goto	l1103
  6866                           
  6867                           ; BSR set to: 1
  6868                           ;ring_buffer_LUT.c: 173: terminal_printNewline();
  6869  01184E  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6870                           
  6871                           ;ring_buffer_LUT.c: 175: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6872  011852  0E00               	movlw	0
  6873  011854  0101               	movlb	1	; () banked
  6874  011856  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6875  011858  0E00               	movlw	0
  6876  01185A  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6877  01185C  0E06               	movlw	6
  6878  01185E  EC86  F096         	call	_terminal_textAttributes
  6879                           
  6880                           ;ring_buffer_LUT.c: 176: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
  6881  011862  0E8A               	movlw	low STR_62
  6882  011864  0101               	movlb	1	; () banked
  6883  011866  6F64               	movwf	printf@f& (0+255),b
  6884  011868  0EFC               	movlw	high STR_62
  6885  01186A  6F65               	movwf	(printf@f+1)& (0+255),b
  6886  01186C  C0DD  F166         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
  6887  011870  C0DE  F167         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
  6888  011874  C0DF  F168         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
  6889  011878  EC00  F080         	call	_printf	;wreg free
  6890                           
  6891                           ;ring_buffer_LUT.c: 178: terminal_textAttributesReset();
  6892  01187C  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  6893                           
  6894                           ;ring_buffer_LUT.c: 180: terminal_printNewline();
  6895  011880  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6896                           
  6897                           ;ring_buffer_LUT.c: 183: }
  6898  011884  0012               	return	
  6899  011886                     l1103:
  6900                           
  6901                           ;ring_buffer_LUT.c: 186: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
  6902  011886  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6903  01188A  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6904  01188E  0E03               	movlw	low STR_63
  6905  011890  0101               	movlb	1	; () banked
  6906  011892  6F19               	movwf	strcmp@s2& (0+255),b
  6907  011894  0EFE               	movlw	high STR_63
  6908  011896  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6909  011898  ECEF  F0AF         	call	_strcmp	;wreg free
  6910  01189C  0101               	movlb	1	; () banked
  6911  01189E  5117               	movf	?_strcmp& (0+255),w,b
  6912  0118A0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6913  0118A2  A4D8               	btfss	status,2,c
  6914  0118A4  D01C               	goto	l1105
  6915                           
  6916                           ; BSR set to: 1
  6917                           ;ring_buffer_LUT.c: 189: terminal_printNewline();
  6918  0118A6  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6919                           
  6920                           ;ring_buffer_LUT.c: 191: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6921  0118AA  0E00               	movlw	0
  6922  0118AC  0101               	movlb	1	; () banked
  6923  0118AE  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6924  0118B0  0E00               	movlw	0
  6925  0118B2  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6926  0118B4  0E06               	movlw	6
  6927  0118B6  EC86  F096         	call	_terminal_textAttributes
  6928                           
  6929                           ;ring_buffer_LUT.c: 192: printf("Measured Current is %.3f Amps\n\r", Imeas);
  6930  0118BA  0EC5               	movlw	low STR_64
  6931  0118BC  0101               	movlb	1	; () banked
  6932  0118BE  6F64               	movwf	printf@f& (0+255),b
  6933  0118C0  0EFD               	movlw	high STR_64
  6934  0118C2  6F65               	movwf	(printf@f+1)& (0+255),b
  6935  0118C4  C0CE  F166         	movff	_Imeas,?_printf+2	;volatile
  6936  0118C8  C0CF  F167         	movff	_Imeas+1,?_printf+3	;volatile
  6937  0118CC  C0D0  F168         	movff	_Imeas+2,?_printf+4	;volatile
  6938  0118D0  EC00  F080         	call	_printf	;wreg free
  6939                           
  6940                           ;ring_buffer_LUT.c: 194: terminal_textAttributesReset();
  6941  0118D4  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  6942                           
  6943                           ;ring_buffer_LUT.c: 196: terminal_printNewline();
  6944  0118D8  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6945                           
  6946                           ;ring_buffer_LUT.c: 198: }
  6947  0118DC  0012               	return	
  6948  0118DE                     l1105:
  6949                           
  6950                           ;ring_buffer_LUT.c: 201: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
  6951  0118DE  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6952  0118E2  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6953  0118E6  0E7B               	movlw	low STR_65
  6954  0118E8  0101               	movlb	1	; () banked
  6955  0118EA  6F19               	movwf	strcmp@s2& (0+255),b
  6956  0118EC  0EFE               	movlw	high STR_65
  6957  0118EE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6958  0118F0  ECEF  F0AF         	call	_strcmp	;wreg free
  6959  0118F4  0101               	movlb	1	; () banked
  6960  0118F6  5117               	movf	?_strcmp& (0+255),w,b
  6961  0118F8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6962  0118FA  A4D8               	btfss	status,2,c
  6963  0118FC  D01C               	goto	l1107
  6964                           
  6965                           ; BSR set to: 1
  6966                           ;ring_buffer_LUT.c: 204: terminal_printNewline();
  6967  0118FE  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6968                           
  6969                           ;ring_buffer_LUT.c: 206: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6970  011902  0E00               	movlw	0
  6971  011904  0101               	movlb	1	; () banked
  6972  011906  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6973  011908  0E00               	movlw	0
  6974  01190A  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6975  01190C  0E06               	movlw	6
  6976  01190E  EC86  F096         	call	_terminal_textAttributes
  6977                           
  6978                           ;ring_buffer_LUT.c: 207: printf("RMS Output Current is %.3f Arms\n\r", Irms);
  6979  011912  0E3E               	movlw	low STR_66
  6980  011914  0101               	movlb	1	; () banked
  6981  011916  6F64               	movwf	printf@f& (0+255),b
  6982  011918  0EFD               	movlw	high STR_66
  6983  01191A  6F65               	movwf	(printf@f+1)& (0+255),b
  6984  01191C  C0CB  F166         	movff	_Irms,?_printf+2	;volatile
  6985  011920  C0CC  F167         	movff	_Irms+1,?_printf+3	;volatile
  6986  011924  C0CD  F168         	movff	_Irms+2,?_printf+4	;volatile
  6987  011928  EC00  F080         	call	_printf	;wreg free
  6988                           
  6989                           ;ring_buffer_LUT.c: 209: terminal_textAttributesReset();
  6990  01192C  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  6991                           
  6992                           ;ring_buffer_LUT.c: 211: terminal_printNewline();
  6993  011930  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  6994                           
  6995                           ;ring_buffer_LUT.c: 213: }
  6996  011934  0012               	return	
  6997  011936                     l1107:
  6998                           
  6999                           ;ring_buffer_LUT.c: 216: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
  7000  011936  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  7001  01193A  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7002  01193E  0E66               	movlw	low STR_67
  7003  011940  0101               	movlb	1	; () banked
  7004  011942  6F19               	movwf	strcmp@s2& (0+255),b
  7005  011944  0EFE               	movlw	high STR_67
  7006  011946  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7007  011948  ECEF  F0AF         	call	_strcmp	;wreg free
  7008  01194C  0101               	movlb	1	; () banked
  7009  01194E  5117               	movf	?_strcmp& (0+255),w,b
  7010  011950  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7011  011952  A4D8               	btfss	status,2,c
  7012  011954  D01C               	goto	l1109
  7013                           
  7014                           ; BSR set to: 1
  7015                           ;ring_buffer_LUT.c: 219: terminal_printNewline();
  7016  011956  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7017                           
  7018                           ;ring_buffer_LUT.c: 221: terminal_textAttributes(CYAN, BLACK, NORMAL);
  7019  01195A  0E00               	movlw	0
  7020  01195C  0101               	movlb	1	; () banked
  7021  01195E  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7022  011960  0E00               	movlw	0
  7023  011962  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7024  011964  0E06               	movlw	6
  7025  011966  EC86  F096         	call	_terminal_textAttributes
  7026                           
  7027                           ;ring_buffer_LUT.c: 222: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
  7028  01196A  0E60               	movlw	low STR_68
  7029  01196C  0101               	movlb	1	; () banked
  7030  01196E  6F64               	movwf	printf@f& (0+255),b
  7031  011970  0EFD               	movlw	high STR_68
  7032  011972  6F65               	movwf	(printf@f+1)& (0+255),b
  7033  011974  C0C8  F166         	movff	_Vrms,?_printf+2	;volatile
  7034  011978  C0C9  F167         	movff	_Vrms+1,?_printf+3	;volatile
  7035  01197C  C0CA  F168         	movff	_Vrms+2,?_printf+4	;volatile
  7036  011980  EC00  F080         	call	_printf	;wreg free
  7037                           
  7038                           ;ring_buffer_LUT.c: 224: terminal_textAttributesReset();
  7039  011984  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  7040                           
  7041                           ;ring_buffer_LUT.c: 226: terminal_printNewline();
  7042  011988  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7043                           
  7044                           ;ring_buffer_LUT.c: 228: }
  7045  01198C  0012               	return	
  7046  01198E                     l1109:
  7047                           
  7048                           ;ring_buffer_LUT.c: 231: else if ((0 == strcmp(line, "Measure Power?"))) {
  7049  01198E  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  7050  011992  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7051  011996  0E03               	movlw	low STR_69
  7052  011998  0101               	movlb	1	; () banked
  7053  01199A  6F19               	movwf	strcmp@s2& (0+255),b
  7054  01199C  0EFF               	movlw	high STR_69
  7055  01199E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7056  0119A0  ECEF  F0AF         	call	_strcmp	;wreg free
  7057  0119A4  0101               	movlb	1	; () banked
  7058  0119A6  5117               	movf	?_strcmp& (0+255),w,b
  7059  0119A8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7060  0119AA  A4D8               	btfss	status,2,c
  7061  0119AC  D01C               	goto	l1111
  7062                           
  7063                           ; BSR set to: 1
  7064                           ;ring_buffer_LUT.c: 234: terminal_printNewline();
  7065  0119AE  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7066                           
  7067                           ;ring_buffer_LUT.c: 236: terminal_textAttributes(CYAN, BLACK, NORMAL);
  7068  0119B2  0E00               	movlw	0
  7069  0119B4  0101               	movlb	1	; () banked
  7070  0119B6  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7071  0119B8  0E00               	movlw	0
  7072  0119BA  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7073  0119BC  0E06               	movlw	6
  7074  0119BE  EC86  F096         	call	_terminal_textAttributes
  7075                           
  7076                           ;ring_buffer_LUT.c: 237: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
  7077  0119C2  0EE6               	movlw	low STR_70
  7078  0119C4  0101               	movlb	1	; () banked
  7079  0119C6  6F64               	movwf	printf@f& (0+255),b
  7080  0119C8  0EFA               	movlw	high STR_70
  7081  0119CA  6F65               	movwf	(printf@f+1)& (0+255),b
  7082  0119CC  C1C1  F166         	movff	_Avg_Power,?_printf+2	;volatile
  7083  0119D0  C1C2  F167         	movff	_Avg_Power+1,?_printf+3	;volatile
  7084  0119D4  C1C3  F168         	movff	_Avg_Power+2,?_printf+4	;volatile
  7085  0119D8  EC00  F080         	call	_printf	;wreg free
  7086                           
  7087                           ;ring_buffer_LUT.c: 239: terminal_textAttributesReset();
  7088  0119DC  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  7089                           
  7090                           ;ring_buffer_LUT.c: 241: terminal_printNewline();
  7091  0119E0  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7092                           
  7093                           ;ring_buffer_LUT.c: 243: }
  7094  0119E4  0012               	return	
  7095  0119E6                     l1111:
  7096                           
  7097                           ;ring_buffer_LUT.c: 246: else if ((0 == strcmp(line, "Enable Dimming"))) {
  7098  0119E6  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  7099  0119EA  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7100  0119EE  0E12               	movlw	low STR_71
  7101  0119F0  0101               	movlb	1	; () banked
  7102  0119F2  6F19               	movwf	strcmp@s2& (0+255),b
  7103  0119F4  0EFF               	movlw	high STR_71
  7104  0119F6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7105  0119F8  ECEF  F0AF         	call	_strcmp	;wreg free
  7106  0119FC  0101               	movlb	1	; () banked
  7107  0119FE  5117               	movf	?_strcmp& (0+255),w,b
  7108  011A00  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7109  011A02  A4D8               	btfss	status,2,c
  7110  011A04  D017               	goto	l1113
  7111                           
  7112                           ; BSR set to: 1
  7113                           ;ring_buffer_LUT.c: 249: LATGbits.LATG0 = 0;
  7114  011A06  907F               	bcf	3967,0,c	;volatile
  7115                           
  7116                           ; BSR set to: 1
  7117                           ;ring_buffer_LUT.c: 252: terminal_printNewline();
  7118  011A08  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7119                           
  7120                           ;ring_buffer_LUT.c: 254: terminal_textAttributes(CYAN, BLACK, NORMAL);
  7121  011A0C  0E00               	movlw	0
  7122  011A0E  0101               	movlb	1	; () banked
  7123  011A10  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7124  011A12  0E00               	movlw	0
  7125  011A14  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7126  011A16  0E06               	movlw	6
  7127  011A18  EC86  F096         	call	_terminal_textAttributes
  7128                           
  7129                           ;ring_buffer_LUT.c: 255: printf("TRIAC output dimming has been enabled\n\r");
  7130  011A1C  0E3B               	movlw	low STR_72
  7131  011A1E  0101               	movlb	1	; () banked
  7132  011A20  6F64               	movwf	printf@f& (0+255),b
  7133  011A22  0EFC               	movlw	high STR_72
  7134  011A24  6F65               	movwf	(printf@f+1)& (0+255),b
  7135  011A26  EC00  F080         	call	_printf	;wreg free
  7136                           
  7137                           ;ring_buffer_LUT.c: 257: terminal_textAttributesReset();
  7138  011A2A  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  7139                           
  7140                           ;ring_buffer_LUT.c: 259: terminal_printNewline();
  7141  011A2E  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7142                           
  7143                           ;ring_buffer_LUT.c: 261: }
  7144  011A32  0012               	return	
  7145  011A34                     l1113:
  7146                           
  7147                           ;ring_buffer_LUT.c: 264: else if ((0 == strcmp(line, "Disable Dimming"))) {
  7148  011A34  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  7149  011A38  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7150  011A3C  0EE4               	movlw	low STR_73
  7151  011A3E  0101               	movlb	1	; () banked
  7152  011A40  6F19               	movwf	strcmp@s2& (0+255),b
  7153  011A42  0EFE               	movlw	high STR_73
  7154  011A44  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7155  011A46  ECEF  F0AF         	call	_strcmp	;wreg free
  7156  011A4A  0101               	movlb	1	; () banked
  7157  011A4C  5117               	movf	?_strcmp& (0+255),w,b
  7158  011A4E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7159  011A50  A4D8               	btfss	status,2,c
  7160  011A52  D017               	goto	l1115
  7161                           
  7162                           ; BSR set to: 1
  7163                           ;ring_buffer_LUT.c: 267: LATGbits.LATG0 = 1;
  7164  011A54  807F               	bsf	3967,0,c	;volatile
  7165                           
  7166                           ; BSR set to: 1
  7167                           ;ring_buffer_LUT.c: 270: terminal_printNewline();
  7168  011A56  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7169                           
  7170                           ;ring_buffer_LUT.c: 272: terminal_textAttributes(CYAN, BLACK, NORMAL);
  7171  011A5A  0E00               	movlw	0
  7172  011A5C  0101               	movlb	1	; () banked
  7173  011A5E  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7174  011A60  0E00               	movlw	0
  7175  011A62  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7176  011A64  0E06               	movlw	6
  7177  011A66  EC86  F096         	call	_terminal_textAttributes
  7178                           
  7179                           ;ring_buffer_LUT.c: 273: printf("TRIAC output dimming has been disabled\n\r");
  7180  011A6A  0E12               	movlw	low STR_74
  7181  011A6C  0101               	movlb	1	; () banked
  7182  011A6E  6F64               	movwf	printf@f& (0+255),b
  7183  011A70  0EFC               	movlw	high STR_74
  7184  011A72  6F65               	movwf	(printf@f+1)& (0+255),b
  7185  011A74  EC00  F080         	call	_printf	;wreg free
  7186                           
  7187                           ;ring_buffer_LUT.c: 275: terminal_textAttributesReset();
  7188  011A78  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  7189                           
  7190                           ;ring_buffer_LUT.c: 277: terminal_printNewline();
  7191  011A7C  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7192                           
  7193                           ;ring_buffer_LUT.c: 279: }
  7194  011A80  0012               	return	
  7195  011A82                     l1115:
  7196                           
  7197                           ;ring_buffer_LUT.c: 282: else if ((0 == strcmp(line, "Enable Load"))) {
  7198  011A82  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  7199  011A86  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7200  011A8A  0E70               	movlw	low STR_75
  7201  011A8C  0101               	movlb	1	; () banked
  7202  011A8E  6F19               	movwf	strcmp@s2& (0+255),b
  7203  011A90  0EFF               	movlw	high STR_75
  7204  011A92  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7205  011A94  ECEF  F0AF         	call	_strcmp	;wreg free
  7206  011A98  0101               	movlb	1	; () banked
  7207  011A9A  5117               	movf	?_strcmp& (0+255),w,b
  7208  011A9C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7209  011A9E  A4D8               	btfss	status,2,c
  7210  011AA0  D019               	goto	l1117
  7211                           
  7212                           ; BSR set to: 1
  7213                           ;ring_buffer_LUT.c: 284: LATGbits.LATG0 = 1;
  7214  011AA2  807F               	bsf	3967,0,c	;volatile
  7215                           
  7216                           ;ring_buffer_LUT.c: 285: LATGbits.LATG1 = 0;
  7217  011AA4  927F               	bcf	3967,1,c	;volatile
  7218                           
  7219                           ;ring_buffer_LUT.c: 286: load_enable = 1;
  7220  011AA6  805E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  7221                           
  7222                           ; BSR set to: 1
  7223                           ;ring_buffer_LUT.c: 289: terminal_printNewline();
  7224  011AA8  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7225                           
  7226                           ;ring_buffer_LUT.c: 291: terminal_textAttributes(CYAN, BLACK, NORMAL);
  7227  011AAC  0E00               	movlw	0
  7228  011AAE  0101               	movlb	1	; () banked
  7229  011AB0  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7230  011AB2  0E00               	movlw	0
  7231  011AB4  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7232  011AB6  0E06               	movlw	6
  7233  011AB8  EC86  F096         	call	_terminal_textAttributes
  7234                           
  7235                           ;ring_buffer_LUT.c: 292: printf("Load has been enabled, dimming disabled\n\r");
  7236  011ABC  0EE8               	movlw	low STR_76
  7237  011ABE  0101               	movlb	1	; () banked
  7238  011AC0  6F64               	movwf	printf@f& (0+255),b
  7239  011AC2  0EFB               	movlw	high STR_76
  7240  011AC4  6F65               	movwf	(printf@f+1)& (0+255),b
  7241  011AC6  EC00  F080         	call	_printf	;wreg free
  7242                           
  7243                           ;ring_buffer_LUT.c: 294: terminal_textAttributesReset();
  7244  011ACA  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  7245                           
  7246                           ;ring_buffer_LUT.c: 296: terminal_printNewline();
  7247  011ACE  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7248                           
  7249                           ;ring_buffer_LUT.c: 298: }
  7250  011AD2  0012               	return	
  7251  011AD4                     l1117:
  7252                           
  7253                           ;ring_buffer_LUT.c: 301: else if ((0 == strcmp(line, "Disable Load"))) {
  7254  011AD4  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  7255  011AD8  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7256  011ADC  0E57               	movlw	low STR_77
  7257  011ADE  0101               	movlb	1	; () banked
  7258  011AE0  6F19               	movwf	strcmp@s2& (0+255),b
  7259  011AE2  0EFF               	movlw	high STR_77
  7260  011AE4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7261  011AE6  ECEF  F0AF         	call	_strcmp	;wreg free
  7262  011AEA  0101               	movlb	1	; () banked
  7263  011AEC  5117               	movf	?_strcmp& (0+255),w,b
  7264  011AEE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7265  011AF0  A4D8               	btfss	status,2,c
  7266  011AF2  D019               	goto	l1119
  7267                           
  7268                           ; BSR set to: 1
  7269                           ;ring_buffer_LUT.c: 303: LATGbits.LATG1 = 0;
  7270  011AF4  927F               	bcf	3967,1,c	;volatile
  7271                           
  7272                           ;ring_buffer_LUT.c: 304: LATGbits.LATG0 = 0;
  7273  011AF6  907F               	bcf	3967,0,c	;volatile
  7274                           
  7275                           ;ring_buffer_LUT.c: 305: load_enable = 0;
  7276  011AF8  905E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  7277                           
  7278                           ; BSR set to: 1
  7279                           ;ring_buffer_LUT.c: 308: terminal_printNewline();
  7280  011AFA  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7281                           
  7282                           ;ring_buffer_LUT.c: 310: terminal_textAttributes(CYAN, BLACK, NORMAL);
  7283  011AFE  0E00               	movlw	0
  7284  011B00  0101               	movlb	1	; () banked
  7285  011B02  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7286  011B04  0E00               	movlw	0
  7287  011B06  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7288  011B08  0E06               	movlw	6
  7289  011B0A  EC86  F096         	call	_terminal_textAttributes
  7290                           
  7291                           ;ring_buffer_LUT.c: 311: printf("Load has been disabled\n\r");
  7292  011B0E  0E1D               	movlw	low STR_78
  7293  011B10  0101               	movlb	1	; () banked
  7294  011B12  6F64               	movwf	printf@f& (0+255),b
  7295  011B14  0EFE               	movlw	high STR_78
  7296  011B16  6F65               	movwf	(printf@f+1)& (0+255),b
  7297  011B18  EC00  F080         	call	_printf	;wreg free
  7298                           
  7299                           ;ring_buffer_LUT.c: 313: terminal_textAttributesReset();
  7300  011B1C  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  7301                           
  7302                           ;ring_buffer_LUT.c: 315: terminal_printNewline();
  7303  011B20  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7304                           
  7305                           ;ring_buffer_LUT.c: 317: }
  7306  011B24  0012               	return	
  7307  011B26                     l1119:
  7308                           
  7309                           ;ring_buffer_LUT.c: 320: else if ((strstr(line, "Set Dimming Percentage: "))) {
  7310  011B26  C1A0  F126         	movff	ringBufferLUT@line,strstr@s1
  7311  011B2A  C1A1  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
  7312  011B2E  0E36               	movlw	low STR_79
  7313  011B30  0101               	movlb	1	; () banked
  7314  011B32  6F28               	movwf	strstr@s2& (0+255),b
  7315  011B34  0EFE               	movlw	high STR_79
  7316  011B36  6F29               	movwf	(strstr@s2+1)& (0+255),b
  7317  011B38  ECF5  F0AA         	call	_strstr	;wreg free
  7318  011B3C  0101               	movlb	1	; () banked
  7319  011B3E  5126               	movf	?_strstr& (0+255),w,b
  7320  011B40  1127               	iorwf	(?_strstr+1)& (0+255),w,b
  7321  011B42  B4D8               	btfsc	status,2,c
  7322  011B44  D113               	goto	l1121
  7323                           
  7324                           ; BSR set to: 1
  7325                           ;ring_buffer_LUT.c: 323: char arg_buff[3];
  7326                           ;ring_buffer_LUT.c: 326: for (int index = 0; index < 3; index++) {
  7327  011B46  0E00               	movlw	0
  7328  011B48  6FAB               	movwf	(ringBufferLUT@index+1)& (0+255),b
  7329  011B4A  0E00               	movlw	0
  7330  011B4C  6FAA               	movwf	ringBufferLUT@index& (0+255),b
  7331  011B4E                     l10656:
  7332                           
  7333                           ; BSR set to: 1
  7334  011B4E  BFAB               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
  7335  011B50  D006               	goto	l1122
  7336  011B52  51AB               	movf	(ringBufferLUT@index+1)& (0+255),w,b
  7337  011B54  E11B               	bnz	l10666
  7338  011B56  0E03               	movlw	3
  7339  011B58  5DAA               	subwf	ringBufferLUT@index& (0+255),w,b
  7340  011B5A  B0D8               	btfsc	status,0,c
  7341  011B5C  D017               	goto	u12260
  7342  011B5E                     l1122:
  7343                           
  7344                           ; BSR set to: 1
  7345                           ;ring_buffer_LUT.c: 328: arg_buff[index] = line[index + 24];
  7346                           
  7347                           ; BSR set to: 1
  7348  011B5E  0E18               	movlw	24
  7349  011B60  25AA               	addwf	ringBufferLUT@index& (0+255),w,b
  7350  011B62  6FA2               	movwf	??_ringBufferLUT& (0+255),b
  7351  011B64  0E00               	movlw	0
  7352  011B66  21AB               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  7353  011B68  6FA3               	movwf	(??_ringBufferLUT+1)& (0+255),b
  7354  011B6A  51A2               	movf	??_ringBufferLUT& (0+255),w,b
  7355  011B6C  25A0               	addwf	ringBufferLUT@line& (0+255),w,b
  7356  011B6E  6ED9               	movwf	fsr2l,c
  7357  011B70  51A3               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  7358  011B72  21A1               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  7359  011B74  6EDA               	movwf	fsr2h,c
  7360  011B76  0EA7               	movlw	low ringBufferLUT@arg_buff
  7361  011B78  25AA               	addwf	ringBufferLUT@index& (0+255),w,b
  7362  011B7A  6EE1               	movwf	fsr1l,c
  7363  011B7C  0E01               	movlw	high ringBufferLUT@arg_buff
  7364  011B7E  21AB               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  7365  011B80  6EE2               	movwf	fsr1h,c
  7366  011B82  CFDF FFE7          	movff	indf2,indf1
  7367                           
  7368                           ; BSR set to: 1
  7369  011B86  4BAA               	infsnz	ringBufferLUT@index& (0+255),f,b
  7370  011B88  2BAB               	incf	(ringBufferLUT@index+1)& (0+255),f,b
  7371  011B8A  D7E1               	goto	l10656
  7372  011B8C                     u12260:
  7373  011B8C                     l10666:
  7374                           
  7375                           ; BSR set to: 1
  7376                           ;ring_buffer_LUT.c: 330: }
  7377                           ;ring_buffer_LUT.c: 332: int percentage = atoi(arg_buff);
  7378  011B8C  0EA7               	movlw	low ringBufferLUT@arg_buff
  7379  011B8E  6F2B               	movwf	atoi@s& (0+255),b
  7380  011B90  0E01               	movlw	high ringBufferLUT@arg_buff
  7381  011B92  6F2C               	movwf	(atoi@s+1)& (0+255),b
  7382  011B94  ECF5  F0A7         	call	_atoi	;wreg free
  7383  011B98  C12B  F1AC         	movff	?_atoi,ringBufferLUT@percentage
  7384  011B9C  C12C  F1AD         	movff	?_atoi+1,ringBufferLUT@percentage+1
  7385                           
  7386                           ;ring_buffer_LUT.c: 335: if ( (percentage >= 100) ||
  7387                           ;ring_buffer_LUT.c: 336: (percentage <= 0)) {
  7388  011BA0  0101               	movlb	1	; () banked
  7389  011BA2  BFAD               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  7390  011BA4  D006               	goto	u12270
  7391  011BA6  51AD               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  7392  011BA8  E10B               	bnz	l10672
  7393  011BAA  0E64               	movlw	100
  7394  011BAC  5DAC               	subwf	ringBufferLUT@percentage& (0+255),w,b
  7395  011BAE  B0D8               	btfsc	status,0,c
  7396  011BB0  D007               	goto	u12280
  7397  011BB2                     u12270:
  7398                           
  7399                           ; BSR set to: 1
  7400  011BB2  BFAD               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  7401  011BB4  D005               	goto	u12280
  7402  011BB6  51AD               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  7403  011BB8  E12F               	bnz	l10674
  7404  011BBA  05AC               	decf	ringBufferLUT@percentage& (0+255),w,b
  7405  011BBC  B0D8               	btfsc	status,0,c
  7406  011BBE  D02C               	goto	l1124
  7407  011BC0                     u12280:
  7408  011BC0                     l10672:
  7409                           
  7410                           ; BSR set to: 1
  7411                           ;ring_buffer_LUT.c: 339: terminal_printNewline();
  7412  011BC0  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7413                           
  7414                           ;ring_buffer_LUT.c: 341: terminal_textAttributes(RED, BLACK, NORMAL);
  7415  011BC4  0E00               	movlw	0
  7416  011BC6  0101               	movlb	1	; () banked
  7417  011BC8  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7418  011BCA  0E00               	movlw	0
  7419  011BCC  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7420  011BCE  0E01               	movlw	1
  7421  011BD0  EC86  F096         	call	_terminal_textAttributes
  7422                           
  7423                           ;ring_buffer_LUT.c: 342: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
  7424  011BD4  0E7E               	movlw	low STR_80
  7425  011BD6  0101               	movlb	1	; () banked
  7426  011BD8  6F64               	movwf	printf@f& (0+255),b
  7427  011BDA  0EF9               	movlw	high STR_80
  7428  011BDC  6F65               	movwf	(printf@f+1)& (0+255),b
  7429  011BDE  EC00  F080         	call	_printf	;wreg free
  7430                           
  7431                           ;ring_buffer_LUT.c: 344: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  7432  011BE2  0E00               	movlw	0
  7433  011BE4  0101               	movlb	1	; () banked
  7434  011BE6  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7435  011BE8  0E00               	movlw	0
  7436  011BEA  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7437  011BEC  0E03               	movlw	3
  7438  011BEE  EC86  F096         	call	_terminal_textAttributes
  7439                           
  7440                           ;ring_buffer_LUT.c: 345: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
  7441  011BF2  0E18               	movlw	low STR_81
  7442  011BF4  0101               	movlb	1	; () banked
  7443  011BF6  6F64               	movwf	printf@f& (0+255),b
  7444  011BF8  0EF9               	movlw	high STR_81
  7445  011BFA  6F65               	movwf	(printf@f+1)& (0+255),b
  7446  011BFC  EC00  F080         	call	_printf	;wreg free
  7447                           
  7448                           ;ring_buffer_LUT.c: 346: printf("Enter 'Help' for list of available commands\n\r");
  7449  011C00  0EBA               	movlw	low STR_82
  7450  011C02  0101               	movlb	1	; () banked
  7451  011C04  6F64               	movwf	printf@f& (0+255),b
  7452  011C06  0EFB               	movlw	high STR_82
  7453  011C08  6F65               	movwf	(printf@f+1)& (0+255),b
  7454  011C0A  EC00  F080         	call	_printf	;wreg free
  7455                           
  7456                           ;ring_buffer_LUT.c: 348: terminal_textAttributesReset();
  7457  011C0E  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  7458                           
  7459                           ;ring_buffer_LUT.c: 350: terminal_printNewline();
  7460  011C12  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7461                           
  7462                           ;ring_buffer_LUT.c: 352: }
  7463  011C16  0012               	return	
  7464  011C18                     l1124:
  7465  011C18                     l10674:
  7466                           
  7467                           ;ring_buffer_LUT.c: 355: else {
  7468                           ;ring_buffer_LUT.c: 358: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
  7469  011C18  0E00               	movlw	0
  7470  011C1A  0101               	movlb	1	; () banked
  7471  011C1C  6F3A               	movwf	___ftdiv@f2& (0+255),b
  7472  011C1E  0EC8               	movlw	200
  7473  011C20  6F3B               	movwf	(___ftdiv@f2+1)& (0+255),b
  7474  011C22  0E42               	movlw	66
  7475  011C24  6F3C               	movwf	(___ftdiv@f2+2)& (0+255),b
  7476  011C26  0E00               	movlw	0
  7477  011C28  6F2E               	movwf	___ftadd@f2& (0+255),b
  7478  011C2A  0EC8               	movlw	200
  7479  011C2C  6F2F               	movwf	(___ftadd@f2+1)& (0+255),b
  7480  011C2E  0E42               	movlw	66
  7481  011C30  6F30               	movwf	(___ftadd@f2+2)& (0+255),b
  7482  011C32  C1AC  F11F         	movff	ringBufferLUT@percentage,___awtoft@c
  7483  011C36  C1AD  F120         	movff	ringBufferLUT@percentage+1,___awtoft@c+1
  7484  011C3A  EC74  F0B1         	call	___awtoft	;wreg free
  7485  011C3E  C11F  F123         	movff	?___awtoft,___ftneg@f1
  7486  011C42  C120  F124         	movff	?___awtoft+1,___ftneg@f1+1
  7487  011C46  C121  F125         	movff	?___awtoft+2,___ftneg@f1+2
  7488  011C4A  EC99  F0B2         	call	___ftneg	;wreg free
  7489  011C4E  C123  F12B         	movff	?___ftneg,___ftadd@f1
  7490  011C52  C124  F12C         	movff	?___ftneg+1,___ftadd@f1+1
  7491  011C56  C125  F12D         	movff	?___ftneg+2,___ftadd@f1+2
  7492  011C5A  ECE7  F09E         	call	___ftadd	;wreg free
  7493  011C5E  C12B  F137         	movff	?___ftadd,___ftdiv@f1
  7494  011C62  C12C  F138         	movff	?___ftadd+1,___ftdiv@f1+1
  7495  011C66  C12D  F139         	movff	?___ftadd+2,___ftdiv@f1+2
  7496  011C6A  EC32  F0A6         	call	___ftdiv	;wreg free
  7497  011C6E  C137  F146         	movff	?___ftdiv,___ftmul@f1
  7498  011C72  C138  F147         	movff	?___ftdiv+1,___ftmul@f1+1
  7499  011C76  C139  F148         	movff	?___ftdiv+2,___ftmul@f1+2
  7500  011C7A  0E10               	movlw	16
  7501  011C7C  0101               	movlb	1	; () banked
  7502  011C7E  6F49               	movwf	___ftmul@f2& (0+255),b
  7503  011C80  0E49               	movlw	73
  7504  011C82  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  7505  011C84  0E40               	movlw	64
  7506  011C86  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  7507  011C88  ECC3  F0A4         	call	___ftmul	;wreg free
  7508  011C8C  C146  F0FA         	movff	?___ftmul,_TRIAC_Firing_Angle	;volatile
  7509  011C90  C147  F0FB         	movff	?___ftmul+1,_TRIAC_Firing_Angle+1	;volatile
  7510  011C94  C148  F0FC         	movff	?___ftmul+2,_TRIAC_Firing_Angle+2	;volatile
  7511                           
  7512                           ;ring_buffer_LUT.c: 359: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
  7513  011C98  C0FA  F146         	movff	_TRIAC_Firing_Angle,___ftmul@f1	;volatile
  7514  011C9C  C0FB  F147         	movff	_TRIAC_Firing_Angle+1,___ftmul@f1+1	;volatile
  7515  011CA0  C0FC  F148         	movff	_TRIAC_Firing_Angle+2,___ftmul@f1+2	;volatile
  7516  011CA4  0E2F               	movlw	47
  7517  011CA6  0101               	movlb	1	; () banked
  7518  011CA8  6F49               	movwf	___ftmul@f2& (0+255),b
  7519  011CAA  0E65               	movlw	101
  7520  011CAC  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  7521  011CAE  0E42               	movlw	66
  7522  011CB0  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  7523  011CB2  ECC3  F0A4         	call	___ftmul	;wreg free
  7524  011CB6  C146  F1A4         	movff	?___ftmul,ringBufferLUT@angle_degrees
  7525  011CBA  C147  F1A5         	movff	?___ftmul+1,ringBufferLUT@angle_degrees+1
  7526  011CBE  C148  F1A6         	movff	?___ftmul+2,ringBufferLUT@angle_degrees+2
  7527                           
  7528                           ;ring_buffer_LUT.c: 360: dimming_period = (100 - percentage) * (0xFFFF / 100);
  7529  011CC2  C1AC  F1A2         	movff	ringBufferLUT@percentage,??_ringBufferLUT
  7530  011CC6  C1AD  F1A3         	movff	ringBufferLUT@percentage+1,??_ringBufferLUT+1
  7531  011CCA  0101               	movlb	1	; () banked
  7532  011CCC  1FA2               	comf	??_ringBufferLUT& (0+255),f,b
  7533  011CCE  1FA3               	comf	(??_ringBufferLUT+1)& (0+255),f,b
  7534  011CD0  4BA2               	infsnz	??_ringBufferLUT& (0+255),f,b
  7535  011CD2  2BA3               	incf	(??_ringBufferLUT+1)& (0+255),f,b
  7536  011CD4  0E64               	movlw	100
  7537  011CD6  25A2               	addwf	??_ringBufferLUT& (0+255),w,b
  7538  011CD8  6F25               	movwf	___wmul@multiplier& (0+255),b
  7539  011CDA  0E00               	movlw	0
  7540  011CDC  21A3               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
  7541  011CDE  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
  7542  011CE0  0E02               	movlw	2
  7543  011CE2  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7544  011CE4  0E8F               	movlw	143
  7545  011CE6  6F27               	movwf	___wmul@multiplicand& (0+255),b
  7546  011CE8  EC5D  F0B2         	call	___wmul	;wreg free
  7547  011CEC  C125  F0F8         	movff	?___wmul,_dimming_period	;volatile
  7548  011CF0  C126  F0F9         	movff	?___wmul+1,_dimming_period+1	;volatile
  7549                           
  7550                           ;ring_buffer_LUT.c: 363: terminal_printNewline();
  7551  011CF4  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7552                           
  7553                           ;ring_buffer_LUT.c: 365: terminal_textAttributes(CYAN, BLACK, NORMAL);
  7554  011CF8  0E00               	movlw	0
  7555  011CFA  0101               	movlb	1	; () banked
  7556  011CFC  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7557  011CFE  0E00               	movlw	0
  7558  011D00  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7559  011D02  0E06               	movlw	6
  7560  011D04  EC86  F096         	call	_terminal_textAttributes
  7561                           
  7562                           ;ring_buffer_LUT.c: 366: printf("Dimming has been set to %d percent\n\r", percentage);
  7563  011D08  0ED4               	movlw	low STR_83
  7564  011D0A  0101               	movlb	1	; () banked
  7565  011D0C  6F64               	movwf	printf@f& (0+255),b
  7566  011D0E  0EFC               	movlw	high STR_83
  7567  011D10  6F65               	movwf	(printf@f+1)& (0+255),b
  7568  011D12  C1AC  F166         	movff	ringBufferLUT@percentage,?_printf+2
  7569  011D16  C1AD  F167         	movff	ringBufferLUT@percentage+1,?_printf+3
  7570  011D1A  EC00  F080         	call	_printf	;wreg free
  7571                           
  7572                           ;ring_buffer_LUT.c: 367: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
  7573  011D1E  0E6D               	movlw	low STR_84
  7574  011D20  0101               	movlb	1	; () banked
  7575  011D22  6F64               	movwf	printf@f& (0+255),b
  7576  011D24  0EFA               	movlw	high STR_84
  7577  011D26  6F65               	movwf	(printf@f+1)& (0+255),b
  7578  011D28  C0FA  F166         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
  7579  011D2C  C0FB  F167         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
  7580  011D30  C0FC  F168         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
  7581  011D34  C1A4  F169         	movff	ringBufferLUT@angle_degrees,?_printf+5
  7582  011D38  C1A5  F16A         	movff	ringBufferLUT@angle_degrees+1,?_printf+6
  7583  011D3C  C1A6  F16B         	movff	ringBufferLUT@angle_degrees+2,?_printf+7
  7584  011D40  EC00  F080         	call	_printf	;wreg free
  7585                           
  7586                           ;ring_buffer_LUT.c: 368: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
  7587  011D44  0E26               	movlw	low STR_85
  7588  011D46  0101               	movlb	1	; () banked
  7589  011D48  6F64               	movwf	printf@f& (0+255),b
  7590  011D4A  0EFA               	movlw	high STR_85
  7591  011D4C  6F65               	movwf	(printf@f+1)& (0+255),b
  7592  011D4E  C0F8  F166         	movff	_dimming_period,?_printf+2	;volatile
  7593  011D52  C0F9  F167         	movff	_dimming_period+1,?_printf+3	;volatile
  7594  011D56  C0F8  F168         	movff	_dimming_period,?_printf+4	;volatile
  7595  011D5A  C0F9  F169         	movff	_dimming_period+1,?_printf+5	;volatile
  7596  011D5E  EC00  F080         	call	_printf	;wreg free
  7597                           
  7598                           ;ring_buffer_LUT.c: 370: terminal_textAttributesReset();
  7599  011D62  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  7600                           
  7601                           ;ring_buffer_LUT.c: 372: terminal_printNewline();
  7602  011D66  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7603                           
  7604                           ;ring_buffer_LUT.c: 374: }
  7605                           ;ring_buffer_LUT.c: 376: }
  7606  011D6A  0012               	return	
  7607  011D6C                     l1121:
  7608                           
  7609                           ;ring_buffer_LUT.c: 379: else if((0 == strcmp(line, "Device On Time?"))) {
  7610  011D6C  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  7611  011D70  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7612  011D74  0ED4               	movlw	low STR_86
  7613  011D76  0101               	movlb	1	; () banked
  7614  011D78  6F19               	movwf	strcmp@s2& (0+255),b
  7615  011D7A  0EFE               	movlw	high STR_86
  7616  011D7C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7617  011D7E  ECEF  F0AF         	call	_strcmp	;wreg free
  7618  011D82  0101               	movlb	1	; () banked
  7619  011D84  5117               	movf	?_strcmp& (0+255),w,b
  7620  011D86  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7621  011D88  A4D8               	btfss	status,2,c
  7622  011D8A  D01E               	goto	l1129
  7623                           
  7624                           ; BSR set to: 1
  7625                           ;ring_buffer_LUT.c: 382: terminal_printNewline();
  7626  011D8C  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7627                           
  7628                           ;ring_buffer_LUT.c: 384: terminal_textAttributes(CYAN, BLACK, NORMAL);
  7629  011D90  0E00               	movlw	0
  7630  011D92  0101               	movlb	1	; () banked
  7631  011D94  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7632  011D96  0E00               	movlw	0
  7633  011D98  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7634  011D9A  0E06               	movlw	6
  7635  011D9C  EC86  F096         	call	_terminal_textAttributes
  7636                           
  7637                           ;ring_buffer_LUT.c: 385: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
  7638  011DA0  0EAC               	movlw	low STR_87
  7639  011DA2  0101               	movlb	1	; () banked
  7640  011DA4  6F64               	movwf	printf@f& (0+255),b
  7641  011DA6  0EFA               	movlw	high STR_87
  7642  011DA8  6F65               	movwf	(printf@f+1)& (0+255),b
  7643  011DAA  C1BD  F166         	movff	_dev_on_time,?_printf+2	;volatile
  7644  011DAE  C1BE  F167         	movff	_dev_on_time+1,?_printf+3	;volatile
  7645  011DB2  C1BF  F168         	movff	_dev_on_time+2,?_printf+4	;volatile
  7646  011DB6  C1C0  F169         	movff	_dev_on_time+3,?_printf+5	;volatile
  7647  011DBA  EC00  F080         	call	_printf	;wreg free
  7648                           
  7649                           ;ring_buffer_LUT.c: 387: terminal_textAttributesReset();
  7650  011DBE  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  7651                           
  7652                           ;ring_buffer_LUT.c: 389: terminal_printNewline();
  7653  011DC2  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7654                           
  7655                           ;ring_buffer_LUT.c: 391: }
  7656  011DC6  0012               	return	
  7657  011DC8                     l1129:
  7658                           
  7659                           ;ring_buffer_LUT.c: 394: else if((0 == strcmp(line, "Load On Time?"))) {
  7660  011DC8  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  7661  011DCC  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7662  011DD0  0E2F               	movlw	low STR_88
  7663  011DD2  0101               	movlb	1	; () banked
  7664  011DD4  6F19               	movwf	strcmp@s2& (0+255),b
  7665  011DD6  0EFF               	movlw	high STR_88
  7666  011DD8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7667  011DDA  ECEF  F0AF         	call	_strcmp	;wreg free
  7668  011DDE  0101               	movlb	1	; () banked
  7669  011DE0  5117               	movf	?_strcmp& (0+255),w,b
  7670  011DE2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7671  011DE4  A4D8               	btfss	status,2,c
  7672  011DE6  D01E               	goto	l1131
  7673                           
  7674                           ; BSR set to: 1
  7675                           ;ring_buffer_LUT.c: 397: terminal_printNewline();
  7676  011DE8  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7677                           
  7678                           ;ring_buffer_LUT.c: 399: terminal_textAttributes(CYAN, BLACK, NORMAL);
  7679  011DEC  0E00               	movlw	0
  7680  011DEE  0101               	movlb	1	; () banked
  7681  011DF0  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7682  011DF2  0E00               	movlw	0
  7683  011DF4  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7684  011DF6  0E06               	movlw	6
  7685  011DF8  EC86  F096         	call	_terminal_textAttributes
  7686                           
  7687                           ;ring_buffer_LUT.c: 400: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
  7688  011DFC  0E56               	movlw	low STR_89
  7689  011DFE  0101               	movlb	1	; () banked
  7690  011E00  6F64               	movwf	printf@f& (0+255),b
  7691  011E02  0EFB               	movlw	high STR_89
  7692  011E04  6F65               	movwf	(printf@f+1)& (0+255),b
  7693  011E06  C1B9  F166         	movff	_load_on_time,?_printf+2	;volatile
  7694  011E0A  C1BA  F167         	movff	_load_on_time+1,?_printf+3	;volatile
  7695  011E0E  C1BB  F168         	movff	_load_on_time+2,?_printf+4	;volatile
  7696  011E12  C1BC  F169         	movff	_load_on_time+3,?_printf+5	;volatile
  7697  011E16  EC00  F080         	call	_printf	;wreg free
  7698                           
  7699                           ;ring_buffer_LUT.c: 402: terminal_textAttributesReset();
  7700  011E1A  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  7701                           
  7702                           ;ring_buffer_LUT.c: 404: terminal_printNewline();
  7703  011E1E  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7704                           
  7705                           ;ring_buffer_LUT.c: 406: }
  7706  011E22  0012               	return	
  7707  011E24                     l1131:
  7708                           
  7709                           ;ring_buffer_LUT.c: 411: else if((0 == strcmp(line, "Help"))) {
  7710  011E24  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  7711  011E28  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7712  011E2C  0EAA               	movlw	low STR_90
  7713  011E2E  0101               	movlb	1	; () banked
  7714  011E30  6F19               	movwf	strcmp@s2& (0+255),b
  7715  011E32  0EFF               	movlw	high STR_90
  7716  011E34  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7717  011E36  ECEF  F0AF         	call	_strcmp	;wreg free
  7718  011E3A  0101               	movlb	1	; () banked
  7719  011E3C  5117               	movf	?_strcmp& (0+255),w,b
  7720  011E3E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7721  011E40  A4D8               	btfss	status,2,c
  7722  011E42  0012               	return	
  7723                           
  7724                           ; BSR set to: 1
  7725                           ;ring_buffer_LUT.c: 414: terminal_printNewline();
  7726  011E44  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7727                           
  7728                           ;ring_buffer_LUT.c: 416: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  7729  011E48  0E00               	movlw	0
  7730  011E4A  0101               	movlb	1	; () banked
  7731  011E4C  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7732  011E4E  0E00               	movlw	0
  7733  011E50  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7734  011E52  0E03               	movlw	3
  7735  011E54  EC86  F096         	call	_terminal_textAttributes
  7736                           
  7737                           ;ring_buffer_LUT.c: 417: printf("List of supported commands:\n\r\n\r"
  7738                           ;ring_buffer_LUT.c: 419: "Device Commands:\n\r"
  7739                           ;ring_buffer_LUT.c: 420: "   Reset: Clears the terminal and resets the micro\n\r"
  7740                           ;ring_buffer_LUT.c: 421: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
  7741                           ;ring_buffer_LUT.c: 422: "   *IDN?: Returns device identification string\n\r"
  7742                           ;ring_buffer_LUT.c: 423: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
  7743                           ;ring_buffer_LUT.c: 424: "   Device ID?: Returns device ID as pre-programmed in flash me
      +                          mory\n\r"
  7744  011E58  0E87               	movlw	low STR_91
  7745  011E5A  0101               	movlb	1	; () banked
  7746  011E5C  6F64               	movwf	printf@f& (0+255),b
  7747  011E5E  0EF1               	movlw	high STR_91
  7748  011E60  6F65               	movwf	(printf@f+1)& (0+255),b
  7749  011E62  EC00  F080         	call	_printf	;wreg free
  7750                           
  7751                           ;ring_buffer_LUT.c: 450: terminal_printNewline();
  7752  011E66  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7753                           
  7754                           ;ring_buffer_LUT.c: 451: printf("Help messages appear in yellow\n\r");
  7755  011E6A  0EA4               	movlw	low STR_92
  7756  011E6C  0101               	movlb	1	; () banked
  7757  011E6E  6F64               	movwf	printf@f& (0+255),b
  7758  011E70  0EFD               	movlw	high STR_92
  7759  011E72  6F65               	movwf	(printf@f+1)& (0+255),b
  7760  011E74  EC00  F080         	call	_printf	;wreg free
  7761                           
  7762                           ;ring_buffer_LUT.c: 453: terminal_textAttributes(GREEN, BLACK, NORMAL);
  7763  011E78  0E00               	movlw	0
  7764  011E7A  0101               	movlb	1	; () banked
  7765  011E7C  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7766  011E7E  0E00               	movlw	0
  7767  011E80  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7768  011E82  0E02               	movlw	2
  7769  011E84  EC86  F096         	call	_terminal_textAttributes
  7770                           
  7771                           ;ring_buffer_LUT.c: 454: printf("System parameters appears in green\n\r");
  7772  011E88  0EAF               	movlw	low STR_93
  7773  011E8A  0101               	movlb	1	; () banked
  7774  011E8C  6F64               	movwf	printf@f& (0+255),b
  7775  011E8E  0EFC               	movlw	high STR_93
  7776  011E90  6F65               	movwf	(printf@f+1)& (0+255),b
  7777  011E92  EC00  F080         	call	_printf	;wreg free
  7778                           
  7779                           ;ring_buffer_LUT.c: 455: terminal_textAttributes(CYAN, BLACK, NORMAL);
  7780  011E96  0E00               	movlw	0
  7781  011E98  0101               	movlb	1	; () banked
  7782  011E9A  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7783  011E9C  0E00               	movlw	0
  7784  011E9E  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7785  011EA0  0E06               	movlw	6
  7786  011EA2  EC86  F096         	call	_terminal_textAttributes
  7787                           
  7788                           ;ring_buffer_LUT.c: 456: printf("Measurement responses appear in cyan\n\r");
  7789  011EA6  0E63               	movlw	low STR_94
  7790  011EA8  0101               	movlb	1	; () banked
  7791  011EAA  6F64               	movwf	printf@f& (0+255),b
  7792  011EAC  0EFC               	movlw	high STR_94
  7793  011EAE  6F65               	movwf	(printf@f+1)& (0+255),b
  7794  011EB0  EC00  F080         	call	_printf	;wreg free
  7795                           
  7796                           ;ring_buffer_LUT.c: 457: terminal_textAttributes(RED, BLACK, NORMAL);
  7797  011EB4  0E00               	movlw	0
  7798  011EB6  0101               	movlb	1	; () banked
  7799  011EB8  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7800  011EBA  0E00               	movlw	0
  7801  011EBC  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7802  011EBE  0E01               	movlw	1
  7803  011EC0  EC86  F096         	call	_terminal_textAttributes
  7804                           
  7805                           ;ring_buffer_LUT.c: 458: printf("Errors appear in red\n\r");
  7806  011EC4  0E4F               	movlw	low STR_95
  7807  011EC6  0101               	movlb	1	; () banked
  7808  011EC8  6F64               	movwf	printf@f& (0+255),b
  7809  011ECA  0EFE               	movlw	high STR_95
  7810  011ECC  6F65               	movwf	(printf@f+1)& (0+255),b
  7811  011ECE  EC00  F080         	call	_printf	;wreg free
  7812                           
  7813                           ;ring_buffer_LUT.c: 459: terminal_textAttributesReset();
  7814  011ED2  EC67  F0B3         	call	_terminal_textAttributesReset	;wreg free
  7815                           
  7816                           ;ring_buffer_LUT.c: 460: printf("User input appears in white\n\r");
  7817  011ED6  0EE5               	movlw	low STR_96
  7818  011ED8  0101               	movlb	1	; () banked
  7819  011EDA  6F64               	movwf	printf@f& (0+255),b
  7820  011EDC  0EFD               	movlw	high STR_96
  7821  011EDE  6F65               	movwf	(printf@f+1)& (0+255),b
  7822  011EE0  EC00  F080         	call	_printf	;wreg free
  7823                           
  7824                           ;ring_buffer_LUT.c: 463: terminal_printNewline();
  7825  011EE4  EC81  F0B3         	call	_terminal_printNewline	;wreg free
  7826  011EE8  0012               	return	
  7827  011EEA                     __end_of_ringBufferLUT:
  7828                           	opt stack 0
  7829                           tblptru	equ	0xFF8
  7830                           tblptrh	equ	0xFF7
  7831                           tblptrl	equ	0xFF6
  7832                           tablat	equ	0xFF5
  7833                           intcon	equ	0xFF2
  7834                           postinc0	equ	0xFEE
  7835                           wreg	equ	0xFE8
  7836                           indf1	equ	0xFE7
  7837                           postdec1	equ	0xFE5
  7838                           fsr1h	equ	0xFE2
  7839                           fsr1l	equ	0xFE1
  7840                           indf2	equ	0xFDF
  7841                           postinc2	equ	0xFDE
  7842                           fsr2h	equ	0xFDA
  7843                           fsr2l	equ	0xFD9
  7844                           status	equ	0xFD8
  7845                           
  7846 ;; *************** function _terminal_textAttributesReset *****************
  7847 ;; Defined at:
  7848 ;;		line 223 in file "ring_buffer_interface.c"
  7849 ;; Parameters:    Size  Location     Type
  7850 ;;		None
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;		None
  7853 ;; Return value:  Size  Location     Type
  7854 ;;                  1    wreg      void 
  7855 ;; Registers used:
  7856 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7857 ;; Tracked objects:
  7858 ;;		On entry : 0/0
  7859 ;;		On exit  : 0/0
  7860 ;;		Unchanged: 0/0
  7861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7866 ;;Total ram usage:        0 bytes
  7867 ;; Hardware stack levels used:    1
  7868 ;; Hardware stack levels required when called:   19
  7869 ;; This function calls:
  7870 ;;		_terminal_textAttributes
  7871 ;; This function is called by:
  7872 ;;		_main
  7873 ;;		_ringBufferLUT
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           	psect	text4
  7878  0166CE                     __ptext4:
  7879                           	opt stack 0
  7880  0166CE                     _terminal_textAttributesReset:
  7881                           	opt stack 11
  7882                           
  7883                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
  7884                           
  7885                           ;incstack = 0
  7886  0166CE  0E00               	movlw	0
  7887  0166D0  0101               	movlb	1	; () banked
  7888  0166D2  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7889  0166D4  0E00               	movlw	0
  7890  0166D6  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7891  0166D8  0E07               	movlw	7
  7892  0166DA  EC86  F096         	call	_terminal_textAttributes
  7893  0166DE  0012               	return		;funcret
  7894  0166E0                     __end_of_terminal_textAttributesReset:
  7895                           	opt stack 0
  7896                           tblptru	equ	0xFF8
  7897                           tblptrh	equ	0xFF7
  7898                           tblptrl	equ	0xFF6
  7899                           tablat	equ	0xFF5
  7900                           intcon	equ	0xFF2
  7901                           postinc0	equ	0xFEE
  7902                           wreg	equ	0xFE8
  7903                           indf1	equ	0xFE7
  7904                           postdec1	equ	0xFE5
  7905                           fsr1h	equ	0xFE2
  7906                           fsr1l	equ	0xFE1
  7907                           indf2	equ	0xFDF
  7908                           postinc2	equ	0xFDE
  7909                           fsr2h	equ	0xFDA
  7910                           fsr2l	equ	0xFD9
  7911                           status	equ	0xFD8
  7912                           
  7913 ;; *************** function _terminal_textAttributes *****************
  7914 ;; Defined at:
  7915 ;;		line 115 in file "ring_buffer_interface.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;  foreground_c    1    wreg     enum E17859
  7918 ;;  background_c    1  142[BANK1 ] enum E17859
  7919 ;;  input_attrib    1  143[BANK1 ] enum E17851
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;  foreground_c    1  144[BANK1 ] enum E17859
  7922 ;;  output_buff    15  145[BANK1 ] unsigned char [15]
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  1    wreg      void 
  7925 ;; Registers used:
  7926 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7932 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7933 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7935 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7936 ;;Total ram usage:       18 bytes
  7937 ;; Hardware stack levels used:    1
  7938 ;; Hardware stack levels required when called:   18
  7939 ;; This function calls:
  7940 ;;		_printf
  7941 ;;		_strcat
  7942 ;;		_strncpy
  7943 ;; This function is called by:
  7944 ;;		_terminal_textAttributesReset
  7945 ;;		_ringBufferLUT
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           	psect	text5
  7950  012D0C                     __ptext5:
  7951                           	opt stack 0
  7952  012D0C                     _terminal_textAttributes:
  7953                           	opt stack 11
  7954                           
  7955                           ;incstack = 0
  7956                           ;terminal_textAttributes@foreground_color stored from wreg
  7957  012D0C  0101               	movlb	1	; () banked
  7958  012D0E  6F90               	movwf	terminal_textAttributes@foreground_color& (0+255),b
  7959                           
  7960                           ;ring_buffer_interface.c: 119: char output_buff[15];
  7961                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
  7962  012D10  0E91               	movlw	low terminal_textAttributes@output_buff
  7963  012D12  0101               	movlb	1	; () banked
  7964  012D14  6F17               	movwf	strncpy@to& (0+255),b
  7965  012D16  0E01               	movlw	high terminal_textAttributes@output_buff
  7966  012D18  6F18               	movwf	(strncpy@to+1)& (0+255),b
  7967  012D1A  0EF5               	movlw	low STR_11
  7968  012D1C  6F19               	movwf	strncpy@from& (0+255),b
  7969  012D1E  0EFF               	movlw	high STR_11
  7970  012D20  6F1A               	movwf	(strncpy@from+1)& (0+255),b
  7971  012D22  0E00               	movlw	0
  7972  012D24  6F1C               	movwf	(strncpy@size+1)& (0+255),b
  7973  012D26  0E0F               	movlw	15
  7974  012D28  6F1B               	movwf	strncpy@size& (0+255),b
  7975  012D2A  ECAC  F0AD         	call	_strncpy	;wreg free
  7976                           
  7977                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
  7978  012D2E  D054               	goto	l991
  7979  012D30                     
  7980                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
  7981  012D30  0E91               	movlw	low terminal_textAttributes@output_buff
  7982  012D32  0101               	movlb	1	; () banked
  7983  012D34  6F17               	movwf	strcat@to& (0+255),b
  7984  012D36  0E01               	movlw	high terminal_textAttributes@output_buff
  7985  012D38  6F18               	movwf	(strcat@to+1)& (0+255),b
  7986  012D3A  0EC9               	movlw	low (STR_20+1)
  7987  012D3C  6F19               	movwf	strcat@from& (0+255),b
  7988  012D3E  0EFF               	movlw	high (STR_20+1)
  7989  012D40  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7990  012D42  EC3E  F0B0         	call	_strcat	;wreg free
  7991                           
  7992                           ;ring_buffer_interface.c: 127: break;
  7993  012D46  D05D               	goto	l993
  7994  012D48                     
  7995                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
  7996  012D48  0E91               	movlw	low terminal_textAttributes@output_buff
  7997  012D4A  0101               	movlb	1	; () banked
  7998  012D4C  6F17               	movwf	strcat@to& (0+255),b
  7999  012D4E  0E01               	movlw	high terminal_textAttributes@output_buff
  8000  012D50  6F18               	movwf	(strcat@to+1)& (0+255),b
  8001  012D52  0ECC               	movlw	low (STR_21+1)
  8002  012D54  6F19               	movwf	strcat@from& (0+255),b
  8003  012D56  0EFF               	movlw	high (STR_21+1)
  8004  012D58  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8005  012D5A  EC3E  F0B0         	call	_strcat	;wreg free
  8006                           
  8007                           ;ring_buffer_interface.c: 130: break;
  8008  012D5E  D051               	goto	l993
  8009  012D60                     
  8010                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
  8011  012D60  0E91               	movlw	low terminal_textAttributes@output_buff
  8012  012D62  0101               	movlb	1	; () banked
  8013  012D64  6F17               	movwf	strcat@to& (0+255),b
  8014  012D66  0E01               	movlw	high terminal_textAttributes@output_buff
  8015  012D68  6F18               	movwf	(strcat@to+1)& (0+255),b
  8016  012D6A  0EDE               	movlw	low (STR_24+1)
  8017  012D6C  6F19               	movwf	strcat@from& (0+255),b
  8018  012D6E  0EFF               	movlw	high (STR_24+1)
  8019  012D70  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8020  012D72  EC3E  F0B0         	call	_strcat	;wreg free
  8021                           
  8022                           ;ring_buffer_interface.c: 133: break;
  8023  012D76  D045               	goto	l993
  8024  012D78                     
  8025                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
  8026  012D78  0E91               	movlw	low terminal_textAttributes@output_buff
  8027  012D7A  0101               	movlb	1	; () banked
  8028  012D7C  6F17               	movwf	strcat@to& (0+255),b
  8029  012D7E  0E01               	movlw	high terminal_textAttributes@output_buff
  8030  012D80  6F18               	movwf	(strcat@to+1)& (0+255),b
  8031  012D82  0EE4               	movlw	low (STR_25+1)
  8032  012D84  6F19               	movwf	strcat@from& (0+255),b
  8033  012D86  0EFF               	movlw	high (STR_25+1)
  8034  012D88  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8035  012D8A  EC3E  F0B0         	call	_strcat	;wreg free
  8036                           
  8037                           ;ring_buffer_interface.c: 136: break;
  8038  012D8E  D039               	goto	l993
  8039  012D90                     
  8040                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
  8041  012D90  0E91               	movlw	low terminal_textAttributes@output_buff
  8042  012D92  0101               	movlb	1	; () banked
  8043  012D94  6F17               	movwf	strcat@to& (0+255),b
  8044  012D96  0E01               	movlw	high terminal_textAttributes@output_buff
  8045  012D98  6F18               	movwf	(strcat@to+1)& (0+255),b
  8046  012D9A  0EF0               	movlw	low (STR_27+1)
  8047  012D9C  6F19               	movwf	strcat@from& (0+255),b
  8048  012D9E  0EFF               	movlw	high (STR_27+1)
  8049  012DA0  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8050  012DA2  EC3E  F0B0         	call	_strcat	;wreg free
  8051                           
  8052                           ;ring_buffer_interface.c: 139: break;
  8053  012DA6  D02D               	goto	l993
  8054  012DA8                     
  8055                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
  8056  012DA8  0E91               	movlw	low terminal_textAttributes@output_buff
  8057  012DAA  0101               	movlb	1	; () banked
  8058  012DAC  6F17               	movwf	strcat@to& (0+255),b
  8059  012DAE  0E01               	movlw	high terminal_textAttributes@output_buff
  8060  012DB0  6F18               	movwf	(strcat@to+1)& (0+255),b
  8061  012DB2  0EF8               	movlw	low STR_17
  8062  012DB4  6F19               	movwf	strcat@from& (0+255),b
  8063  012DB6  0EFF               	movlw	high STR_17
  8064  012DB8  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8065  012DBA  EC3E  F0B0         	call	_strcat	;wreg free
  8066                           
  8067                           ;ring_buffer_interface.c: 142: break;
  8068  012DBE  D021               	goto	l993
  8069  012DC0                     
  8070                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
  8071  012DC0  0E91               	movlw	low terminal_textAttributes@output_buff
  8072  012DC2  0101               	movlb	1	; () banked
  8073  012DC4  6F17               	movwf	strcat@to& (0+255),b
  8074  012DC6  0E01               	movlw	high terminal_textAttributes@output_buff
  8075  012DC8  6F18               	movwf	(strcat@to+1)& (0+255),b
  8076  012DCA  0EC9               	movlw	low (STR_20+1)
  8077  012DCC  6F19               	movwf	strcat@from& (0+255),b
  8078  012DCE  0EFF               	movlw	high (STR_20+1)
  8079  012DD0  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8080  012DD2  EC3E  F0B0         	call	_strcat	;wreg free
  8081                           
  8082                           ;ring_buffer_interface.c: 147: }
  8083                           
  8084                           ;ring_buffer_interface.c: 146: break;
  8085  012DD6  D015               	goto	l993
  8086  012DD8                     l991:
  8087  012DD8  0101               	movlb	1	; () banked
  8088  012DDA  518F               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
  8089                           
  8090                           ; Switch size 1, requested type "space"
  8091                           ; Number of cases is 6, Range of values is 0 to 5
  8092                           ; switch strategies available:
  8093                           ; Name         Instructions Cycles
  8094                           ; simple_byte           19    10 (average)
  8095                           ;	Chosen strategy is simple_byte
  8096  012DDC  0A00               	xorlw	0	; case 0
  8097  012DDE  B4D8               	btfsc	status,2,c
  8098  012DE0  D7A7               	goto	l992
  8099  012DE2  0A01               	xorlw	1	; case 1
  8100  012DE4  B4D8               	btfsc	status,2,c
  8101  012DE6  D7B0               	goto	l994
  8102  012DE8  0A03               	xorlw	3	; case 2
  8103  012DEA  B4D8               	btfsc	status,2,c
  8104  012DEC  D7B9               	goto	l995
  8105  012DEE  0A01               	xorlw	1	; case 3
  8106  012DF0  B4D8               	btfsc	status,2,c
  8107  012DF2  D7C2               	goto	l996
  8108  012DF4  0A07               	xorlw	7	; case 4
  8109  012DF6  B4D8               	btfsc	status,2,c
  8110  012DF8  D7CB               	goto	l997
  8111  012DFA  0A01               	xorlw	1	; case 5
  8112  012DFC  B4D8               	btfsc	status,2,c
  8113  012DFE  D7D4               	goto	l998
  8114  012E00  D7DF               	goto	l999
  8115  012E02                     l993:
  8116                           
  8117                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
  8118                           
  8119                           ; BSR set to: 1
  8120  012E02  0E91               	movlw	low terminal_textAttributes@output_buff
  8121  012E04  0101               	movlb	1	; () banked
  8122  012E06  6F17               	movwf	strcat@to& (0+255),b
  8123  012E08  0E01               	movlw	high terminal_textAttributes@output_buff
  8124  012E0A  6F18               	movwf	(strcat@to+1)& (0+255),b
  8125  012E0C  0EFA               	movlw	low STR_19
  8126  012E0E  6F19               	movwf	strcat@from& (0+255),b
  8127  012E10  0EFF               	movlw	high STR_19
  8128  012E12  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8129  012E14  EC3E  F0B0         	call	_strcat	;wreg free
  8130                           
  8131                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
  8132  012E18  D06C               	goto	l1000
  8133  012E1A                     
  8134                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
  8135  012E1A  0E91               	movlw	low terminal_textAttributes@output_buff
  8136  012E1C  0101               	movlb	1	; () banked
  8137  012E1E  6F17               	movwf	strcat@to& (0+255),b
  8138  012E20  0E01               	movlw	high terminal_textAttributes@output_buff
  8139  012E22  6F18               	movwf	(strcat@to+1)& (0+255),b
  8140  012E24  0EC8               	movlw	low STR_20
  8141  012E26  6F19               	movwf	strcat@from& (0+255),b
  8142  012E28  0EFF               	movlw	high STR_20
  8143  012E2A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8144  012E2C  EC3E  F0B0         	call	_strcat	;wreg free
  8145                           
  8146                           ;ring_buffer_interface.c: 155: break;
  8147  012E30  D07B               	goto	l1002
  8148  012E32                     
  8149                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
  8150  012E32  0E91               	movlw	low terminal_textAttributes@output_buff
  8151  012E34  0101               	movlb	1	; () banked
  8152  012E36  6F17               	movwf	strcat@to& (0+255),b
  8153  012E38  0E01               	movlw	high terminal_textAttributes@output_buff
  8154  012E3A  6F18               	movwf	(strcat@to+1)& (0+255),b
  8155  012E3C  0ECB               	movlw	low STR_21
  8156  012E3E  6F19               	movwf	strcat@from& (0+255),b
  8157  012E40  0EFF               	movlw	high STR_21
  8158  012E42  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8159  012E44  EC3E  F0B0         	call	_strcat	;wreg free
  8160                           
  8161                           ;ring_buffer_interface.c: 158: break;
  8162  012E48  D06F               	goto	l1002
  8163  012E4A                     
  8164                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
  8165  012E4A  0E91               	movlw	low terminal_textAttributes@output_buff
  8166  012E4C  0101               	movlb	1	; () banked
  8167  012E4E  6F17               	movwf	strcat@to& (0+255),b
  8168  012E50  0E01               	movlw	high terminal_textAttributes@output_buff
  8169  012E52  6F18               	movwf	(strcat@to+1)& (0+255),b
  8170  012E54  0ED1               	movlw	low STR_22
  8171  012E56  6F19               	movwf	strcat@from& (0+255),b
  8172  012E58  0EFF               	movlw	high STR_22
  8173  012E5A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8174  012E5C  EC3E  F0B0         	call	_strcat	;wreg free
  8175                           
  8176                           ;ring_buffer_interface.c: 161: break;
  8177  012E60  D063               	goto	l1002
  8178  012E62                     
  8179                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
  8180  012E62  0E91               	movlw	low terminal_textAttributes@output_buff
  8181  012E64  0101               	movlb	1	; () banked
  8182  012E66  6F17               	movwf	strcat@to& (0+255),b
  8183  012E68  0E01               	movlw	high terminal_textAttributes@output_buff
  8184  012E6A  6F18               	movwf	(strcat@to+1)& (0+255),b
  8185  012E6C  0ED7               	movlw	low STR_23
  8186  012E6E  6F19               	movwf	strcat@from& (0+255),b
  8187  012E70  0EFF               	movlw	high STR_23
  8188  012E72  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8189  012E74  EC3E  F0B0         	call	_strcat	;wreg free
  8190                           
  8191                           ;ring_buffer_interface.c: 164: break;
  8192  012E78  D057               	goto	l1002
  8193  012E7A                     
  8194                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
  8195  012E7A  0E91               	movlw	low terminal_textAttributes@output_buff
  8196  012E7C  0101               	movlb	1	; () banked
  8197  012E7E  6F17               	movwf	strcat@to& (0+255),b
  8198  012E80  0E01               	movlw	high terminal_textAttributes@output_buff
  8199  012E82  6F18               	movwf	(strcat@to+1)& (0+255),b
  8200  012E84  0EDD               	movlw	low STR_24
  8201  012E86  6F19               	movwf	strcat@from& (0+255),b
  8202  012E88  0EFF               	movlw	high STR_24
  8203  012E8A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8204  012E8C  EC3E  F0B0         	call	_strcat	;wreg free
  8205                           
  8206                           ;ring_buffer_interface.c: 167: break;
  8207  012E90  D04B               	goto	l1002
  8208  012E92                     
  8209                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
  8210  012E92  0E91               	movlw	low terminal_textAttributes@output_buff
  8211  012E94  0101               	movlb	1	; () banked
  8212  012E96  6F17               	movwf	strcat@to& (0+255),b
  8213  012E98  0E01               	movlw	high terminal_textAttributes@output_buff
  8214  012E9A  6F18               	movwf	(strcat@to+1)& (0+255),b
  8215  012E9C  0EE3               	movlw	low STR_25
  8216  012E9E  6F19               	movwf	strcat@from& (0+255),b
  8217  012EA0  0EFF               	movlw	high STR_25
  8218  012EA2  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8219  012EA4  EC3E  F0B0         	call	_strcat	;wreg free
  8220                           
  8221                           ;ring_buffer_interface.c: 170: break;
  8222  012EA8  D03F               	goto	l1002
  8223  012EAA                     
  8224                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
  8225  012EAA  0E91               	movlw	low terminal_textAttributes@output_buff
  8226  012EAC  0101               	movlb	1	; () banked
  8227  012EAE  6F17               	movwf	strcat@to& (0+255),b
  8228  012EB0  0E01               	movlw	high terminal_textAttributes@output_buff
  8229  012EB2  6F18               	movwf	(strcat@to+1)& (0+255),b
  8230  012EB4  0EE9               	movlw	low STR_26
  8231  012EB6  6F19               	movwf	strcat@from& (0+255),b
  8232  012EB8  0EFF               	movlw	high STR_26
  8233  012EBA  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8234  012EBC  EC3E  F0B0         	call	_strcat	;wreg free
  8235                           
  8236                           ;ring_buffer_interface.c: 173: break;
  8237  012EC0  D033               	goto	l1002
  8238  012EC2                     
  8239                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
  8240  012EC2  0E91               	movlw	low terminal_textAttributes@output_buff
  8241  012EC4  0101               	movlb	1	; () banked
  8242  012EC6  6F17               	movwf	strcat@to& (0+255),b
  8243  012EC8  0E01               	movlw	high terminal_textAttributes@output_buff
  8244  012ECA  6F18               	movwf	(strcat@to+1)& (0+255),b
  8245  012ECC  0EEF               	movlw	low STR_27
  8246  012ECE  6F19               	movwf	strcat@from& (0+255),b
  8247  012ED0  0EFF               	movlw	high STR_27
  8248  012ED2  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8249  012ED4  EC3E  F0B0         	call	_strcat	;wreg free
  8250                           
  8251                           ;ring_buffer_interface.c: 176: break;
  8252  012ED8  D027               	goto	l1002
  8253  012EDA                     
  8254                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
  8255  012EDA  0E91               	movlw	low terminal_textAttributes@output_buff
  8256  012EDC  0101               	movlb	1	; () banked
  8257  012EDE  6F17               	movwf	strcat@to& (0+255),b
  8258  012EE0  0E01               	movlw	high terminal_textAttributes@output_buff
  8259  012EE2  6F18               	movwf	(strcat@to+1)& (0+255),b
  8260  012EE4  0EEF               	movlw	low STR_27
  8261  012EE6  6F19               	movwf	strcat@from& (0+255),b
  8262  012EE8  0EFF               	movlw	high STR_27
  8263  012EEA  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8264  012EEC  EC3E  F0B0         	call	_strcat	;wreg free
  8265                           
  8266                           ;ring_buffer_interface.c: 181: }
  8267                           
  8268                           ;ring_buffer_interface.c: 180: break;
  8269  012EF0  D01B               	goto	l1002
  8270  012EF2                     l1000:
  8271  012EF2  0101               	movlb	1	; () banked
  8272  012EF4  5190               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
  8273                           
  8274                           ; Switch size 1, requested type "space"
  8275                           ; Number of cases is 8, Range of values is 0 to 7
  8276                           ; switch strategies available:
  8277                           ; Name         Instructions Cycles
  8278                           ; simple_byte           25    13 (average)
  8279                           ;	Chosen strategy is simple_byte
  8280  012EF6  0A00               	xorlw	0	; case 0
  8281  012EF8  B4D8               	btfsc	status,2,c
  8282  012EFA  D78F               	goto	l1001
  8283  012EFC  0A01               	xorlw	1	; case 1
  8284  012EFE  B4D8               	btfsc	status,2,c
  8285  012F00  D798               	goto	l1003
  8286  012F02  0A03               	xorlw	3	; case 2
  8287  012F04  B4D8               	btfsc	status,2,c
  8288  012F06  D7A1               	goto	l1004
  8289  012F08  0A01               	xorlw	1	; case 3
  8290  012F0A  B4D8               	btfsc	status,2,c
  8291  012F0C  D7AA               	goto	l1005
  8292  012F0E  0A07               	xorlw	7	; case 4
  8293  012F10  B4D8               	btfsc	status,2,c
  8294  012F12  D7B3               	goto	l1006
  8295  012F14  0A01               	xorlw	1	; case 5
  8296  012F16  B4D8               	btfsc	status,2,c
  8297  012F18  D7BC               	goto	l1007
  8298  012F1A  0A03               	xorlw	3	; case 6
  8299  012F1C  B4D8               	btfsc	status,2,c
  8300  012F1E  D7C5               	goto	l1008
  8301  012F20  0A01               	xorlw	1	; case 7
  8302  012F22  B4D8               	btfsc	status,2,c
  8303  012F24  D7CE               	goto	l1009
  8304  012F26  D7D9               	goto	l1010
  8305  012F28                     l1002:
  8306                           
  8307                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
  8308                           
  8309                           ; BSR set to: 1
  8310  012F28  0E91               	movlw	low terminal_textAttributes@output_buff
  8311  012F2A  0101               	movlb	1	; () banked
  8312  012F2C  6F17               	movwf	strcat@to& (0+255),b
  8313  012F2E  0E01               	movlw	high terminal_textAttributes@output_buff
  8314  012F30  6F18               	movwf	(strcat@to+1)& (0+255),b
  8315  012F32  0EFA               	movlw	low STR_19
  8316  012F34  6F19               	movwf	strcat@from& (0+255),b
  8317  012F36  0EFF               	movlw	high STR_19
  8318  012F38  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8319  012F3A  EC3E  F0B0         	call	_strcat	;wreg free
  8320                           
  8321                           ;ring_buffer_interface.c: 185: switch (background_color) {
  8322  012F3E  D06C               	goto	l1011
  8323  012F40                     
  8324                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
  8325  012F40  0E91               	movlw	low terminal_textAttributes@output_buff
  8326  012F42  0101               	movlb	1	; () banked
  8327  012F44  6F17               	movwf	strcat@to& (0+255),b
  8328  012F46  0E01               	movlw	high terminal_textAttributes@output_buff
  8329  012F48  6F18               	movwf	(strcat@to+1)& (0+255),b
  8330  012F4A  0E6D               	movlw	low (STR_97+9)
  8331  012F4C  6F19               	movwf	strcat@from& (0+255),b
  8332  012F4E  0EFF               	movlw	high (STR_97+9)
  8333  012F50  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8334  012F52  EC3E  F0B0         	call	_strcat	;wreg free
  8335                           
  8336                           ;ring_buffer_interface.c: 189: break;
  8337  012F56  D07B               	goto	l1013
  8338  012F58                     
  8339                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
  8340  012F58  0E91               	movlw	low terminal_textAttributes@output_buff
  8341  012F5A  0101               	movlb	1	; () banked
  8342  012F5C  6F17               	movwf	strcat@to& (0+255),b
  8343  012F5E  0E01               	movlw	high terminal_textAttributes@output_buff
  8344  012F60  6F18               	movwf	(strcat@to+1)& (0+255),b
  8345  012F62  0ECE               	movlw	low STR_31
  8346  012F64  6F19               	movwf	strcat@from& (0+255),b
  8347  012F66  0EFF               	movlw	high STR_31
  8348  012F68  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8349  012F6A  EC3E  F0B0         	call	_strcat	;wreg free
  8350                           
  8351                           ;ring_buffer_interface.c: 192: break;
  8352  012F6E  D06F               	goto	l1013
  8353  012F70                     
  8354                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
  8355  012F70  0E91               	movlw	low terminal_textAttributes@output_buff
  8356  012F72  0101               	movlb	1	; () banked
  8357  012F74  6F17               	movwf	strcat@to& (0+255),b
  8358  012F76  0E01               	movlw	high terminal_textAttributes@output_buff
  8359  012F78  6F18               	movwf	(strcat@to+1)& (0+255),b
  8360  012F7A  0ED4               	movlw	low STR_32
  8361  012F7C  6F19               	movwf	strcat@from& (0+255),b
  8362  012F7E  0EFF               	movlw	high STR_32
  8363  012F80  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8364  012F82  EC3E  F0B0         	call	_strcat	;wreg free
  8365                           
  8366                           ;ring_buffer_interface.c: 195: break;
  8367  012F86  D063               	goto	l1013
  8368  012F88                     
  8369                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
  8370  012F88  0E91               	movlw	low terminal_textAttributes@output_buff
  8371  012F8A  0101               	movlb	1	; () banked
  8372  012F8C  6F17               	movwf	strcat@to& (0+255),b
  8373  012F8E  0E01               	movlw	high terminal_textAttributes@output_buff
  8374  012F90  6F18               	movwf	(strcat@to+1)& (0+255),b
  8375  012F92  0EDA               	movlw	low STR_33
  8376  012F94  6F19               	movwf	strcat@from& (0+255),b
  8377  012F96  0EFF               	movlw	high STR_33
  8378  012F98  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8379  012F9A  EC3E  F0B0         	call	_strcat	;wreg free
  8380                           
  8381                           ;ring_buffer_interface.c: 198: break;
  8382  012F9E  D057               	goto	l1013
  8383  012FA0                     
  8384                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
  8385  012FA0  0E91               	movlw	low terminal_textAttributes@output_buff
  8386  012FA2  0101               	movlb	1	; () banked
  8387  012FA4  6F17               	movwf	strcat@to& (0+255),b
  8388  012FA6  0E01               	movlw	high terminal_textAttributes@output_buff
  8389  012FA8  6F18               	movwf	(strcat@to+1)& (0+255),b
  8390  012FAA  0EE0               	movlw	low STR_34
  8391  012FAC  6F19               	movwf	strcat@from& (0+255),b
  8392  012FAE  0EFF               	movlw	high STR_34
  8393  012FB0  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8394  012FB2  EC3E  F0B0         	call	_strcat	;wreg free
  8395                           
  8396                           ;ring_buffer_interface.c: 201: break;
  8397  012FB6  D04B               	goto	l1013
  8398  012FB8                     
  8399                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
  8400  012FB8  0E91               	movlw	low terminal_textAttributes@output_buff
  8401  012FBA  0101               	movlb	1	; () banked
  8402  012FBC  6F17               	movwf	strcat@to& (0+255),b
  8403  012FBE  0E01               	movlw	high terminal_textAttributes@output_buff
  8404  012FC0  6F18               	movwf	(strcat@to+1)& (0+255),b
  8405  012FC2  0EE6               	movlw	low STR_35
  8406  012FC4  6F19               	movwf	strcat@from& (0+255),b
  8407  012FC6  0EFF               	movlw	high STR_35
  8408  012FC8  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8409  012FCA  EC3E  F0B0         	call	_strcat	;wreg free
  8410                           
  8411                           ;ring_buffer_interface.c: 204: break;
  8412  012FCE  D03F               	goto	l1013
  8413  012FD0                     
  8414                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
  8415  012FD0  0E91               	movlw	low terminal_textAttributes@output_buff
  8416  012FD2  0101               	movlb	1	; () banked
  8417  012FD4  6F17               	movwf	strcat@to& (0+255),b
  8418  012FD6  0E01               	movlw	high terminal_textAttributes@output_buff
  8419  012FD8  6F18               	movwf	(strcat@to+1)& (0+255),b
  8420  012FDA  0EEC               	movlw	low STR_36
  8421  012FDC  6F19               	movwf	strcat@from& (0+255),b
  8422  012FDE  0EFF               	movlw	high STR_36
  8423  012FE0  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8424  012FE2  EC3E  F0B0         	call	_strcat	;wreg free
  8425                           
  8426                           ;ring_buffer_interface.c: 207: break;
  8427  012FE6  D033               	goto	l1013
  8428  012FE8                     
  8429                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
  8430  012FE8  0E91               	movlw	low terminal_textAttributes@output_buff
  8431  012FEA  0101               	movlb	1	; () banked
  8432  012FEC  6F17               	movwf	strcat@to& (0+255),b
  8433  012FEE  0E01               	movlw	high terminal_textAttributes@output_buff
  8434  012FF0  6F18               	movwf	(strcat@to+1)& (0+255),b
  8435  012FF2  0EF2               	movlw	low STR_37
  8436  012FF4  6F19               	movwf	strcat@from& (0+255),b
  8437  012FF6  0EFF               	movlw	high STR_37
  8438  012FF8  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8439  012FFA  EC3E  F0B0         	call	_strcat	;wreg free
  8440                           
  8441                           ;ring_buffer_interface.c: 210: break;
  8442  012FFE  D027               	goto	l1013
  8443  013000                     
  8444                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
  8445  013000  0E91               	movlw	low terminal_textAttributes@output_buff
  8446  013002  0101               	movlb	1	; () banked
  8447  013004  6F17               	movwf	strcat@to& (0+255),b
  8448  013006  0E01               	movlw	high terminal_textAttributes@output_buff
  8449  013008  6F18               	movwf	(strcat@to+1)& (0+255),b
  8450  01300A  0EF2               	movlw	low STR_37
  8451  01300C  6F19               	movwf	strcat@from& (0+255),b
  8452  01300E  0EFF               	movlw	high STR_37
  8453  013010  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8454  013012  EC3E  F0B0         	call	_strcat	;wreg free
  8455                           
  8456                           ;ring_buffer_interface.c: 215: }
  8457                           
  8458                           ;ring_buffer_interface.c: 214: break;
  8459  013016  D01B               	goto	l1013
  8460  013018                     l1011:
  8461  013018  0101               	movlb	1	; () banked
  8462  01301A  518E               	movf	terminal_textAttributes@background_color& (0+255),w,b
  8463                           
  8464                           ; Switch size 1, requested type "space"
  8465                           ; Number of cases is 8, Range of values is 0 to 7
  8466                           ; switch strategies available:
  8467                           ; Name         Instructions Cycles
  8468                           ; simple_byte           25    13 (average)
  8469                           ;	Chosen strategy is simple_byte
  8470  01301C  0A00               	xorlw	0	; case 0
  8471  01301E  B4D8               	btfsc	status,2,c
  8472  013020  D78F               	goto	l1012
  8473  013022  0A01               	xorlw	1	; case 1
  8474  013024  B4D8               	btfsc	status,2,c
  8475  013026  D798               	goto	l1014
  8476  013028  0A03               	xorlw	3	; case 2
  8477  01302A  B4D8               	btfsc	status,2,c
  8478  01302C  D7A1               	goto	l1015
  8479  01302E  0A01               	xorlw	1	; case 3
  8480  013030  B4D8               	btfsc	status,2,c
  8481  013032  D7AA               	goto	l1016
  8482  013034  0A07               	xorlw	7	; case 4
  8483  013036  B4D8               	btfsc	status,2,c
  8484  013038  D7B3               	goto	l1017
  8485  01303A  0A01               	xorlw	1	; case 5
  8486  01303C  B4D8               	btfsc	status,2,c
  8487  01303E  D7BC               	goto	l1018
  8488  013040  0A03               	xorlw	3	; case 6
  8489  013042  B4D8               	btfsc	status,2,c
  8490  013044  D7C5               	goto	l1019
  8491  013046  0A01               	xorlw	1	; case 7
  8492  013048  B4D8               	btfsc	status,2,c
  8493  01304A  D7CE               	goto	l1020
  8494  01304C  D7D9               	goto	l1021
  8495  01304E                     l1013:
  8496                           
  8497                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
  8498                           
  8499                           ; BSR set to: 1
  8500  01304E  0E91               	movlw	low terminal_textAttributes@output_buff
  8501  013050  0101               	movlb	1	; () banked
  8502  013052  6F17               	movwf	strcat@to& (0+255),b
  8503  013054  0E01               	movlw	high terminal_textAttributes@output_buff
  8504  013056  6F18               	movwf	(strcat@to+1)& (0+255),b
  8505  013058  0EFC               	movlw	low STR_39
  8506  01305A  6F19               	movwf	strcat@from& (0+255),b
  8507  01305C  0EFF               	movlw	high STR_39
  8508  01305E  6F1A               	movwf	(strcat@from+1)& (0+255),b
  8509  013060  EC3E  F0B0         	call	_strcat	;wreg free
  8510                           
  8511                           ;ring_buffer_interface.c: 219: printf(output_buff);
  8512  013064  0E91               	movlw	low terminal_textAttributes@output_buff
  8513  013066  0101               	movlb	1	; () banked
  8514  013068  6F64               	movwf	printf@f& (0+255),b
  8515  01306A  0E01               	movlw	high terminal_textAttributes@output_buff
  8516  01306C  6F65               	movwf	(printf@f+1)& (0+255),b
  8517  01306E  EC00  F080         	call	_printf	;wreg free
  8518  013072  0012               	return		;funcret
  8519  013074                     __end_of_terminal_textAttributes:
  8520                           	opt stack 0
  8521                           tblptru	equ	0xFF8
  8522                           tblptrh	equ	0xFF7
  8523                           tblptrl	equ	0xFF6
  8524                           tablat	equ	0xFF5
  8525                           intcon	equ	0xFF2
  8526                           postinc0	equ	0xFEE
  8527                           wreg	equ	0xFE8
  8528                           indf1	equ	0xFE7
  8529                           postdec1	equ	0xFE5
  8530                           fsr1h	equ	0xFE2
  8531                           fsr1l	equ	0xFE1
  8532                           indf2	equ	0xFDF
  8533                           postinc2	equ	0xFDE
  8534                           fsr2h	equ	0xFDA
  8535                           fsr2l	equ	0xFD9
  8536                           status	equ	0xFD8
  8537                           
  8538 ;; *************** function _strncpy *****************
  8539 ;; Defined at:
  8540 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
  8541 ;; Parameters:    Size  Location     Type
  8542 ;;  to              2   23[BANK1 ] PTR unsigned char 
  8543 ;;		 -> terminal_textAttributes@output_buff(15), 
  8544 ;;  from            2   25[BANK1 ] PTR const unsigned char 
  8545 ;;		 -> STR_11(3), 
  8546 ;;  size            2   27[BANK1 ] unsigned int 
  8547 ;; Auto vars:     Size  Location     Type
  8548 ;;  cp              2   29[BANK1 ] PTR unsigned char 
  8549 ;;		 -> terminal_textAttributes@output_buff(15), 
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  2   23[BANK1 ] PTR unsigned char 
  8552 ;; Registers used:
  8553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8559 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8560 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8562 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8563 ;;Total ram usage:        8 bytes
  8564 ;; Hardware stack levels used:    1
  8565 ;; Hardware stack levels required when called:   14
  8566 ;; This function calls:
  8567 ;;		Nothing
  8568 ;; This function is called by:
  8569 ;;		_terminal_textAttributes
  8570 ;; This function uses a non-reentrant model
  8571 ;;
  8572                           
  8573                           	psect	text6
  8574  015B58                     __ptext6:
  8575                           	opt stack 0
  8576  015B58                     _strncpy:
  8577                           	opt stack 14
  8578                           
  8579                           ;incstack = 0
  8580  015B58  C117  F11D         	movff	strncpy@to,strncpy@cp
  8581  015B5C  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
  8582  015B60  D018               	goto	l1993
  8583  015B62  0101               	movlb	1	; () banked
  8584  015B64  071B               	decf	strncpy@size& (0+255),f,b
  8585  015B66  A0D8               	btfss	status,0,c
  8586  015B68  071C               	decf	(strncpy@size+1)& (0+255),f,b
  8587                           
  8588                           ; BSR set to: 1
  8589  015B6A  C119  FFF6         	movff	strncpy@from,tblptrl
  8590  015B6E  C11A  FFF7         	movff	strncpy@from+1,tblptrh
  8591  015B72  4B19               	infsnz	strncpy@from& (0+255),f,b
  8592  015B74  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
  8593  015B76                     	if	0	;tblptru may be non-zero
  8594  015B76                     	endif
  8595  015B76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8596  015B76  0E00               	movlw	low (__mediumconst shr (0+16))
  8597  015B78  6EF8               	movwf	tblptru,c
  8598  015B7A                     	endif
  8599  015B7A  C11D  FFD9         	movff	strncpy@cp,fsr2l
  8600  015B7E  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
  8601  015B82  4B1D               	infsnz	strncpy@cp& (0+255),f,b
  8602  015B84  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
  8603  015B86  0008               	tblrd		*
  8604  015B88  CFF5 FFDF          	movff	tablat,indf2
  8605  015B8C  50DF               	movf	indf2,w,c
  8606  015B8E  B4D8               	btfsc	status,2,c
  8607  015B90  D00E               	goto	l1995
  8608  015B92                     l1993:
  8609                           
  8610                           ; BSR set to: 1
  8611                           
  8612                           ; BSR set to: 1
  8613  015B92  0101               	movlb	1	; () banked
  8614  015B94  511B               	movf	strncpy@size& (0+255),w,b
  8615  015B96  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
  8616  015B98  B4D8               	btfsc	status,2,c
  8617  015B9A  D009               	goto	l1995
  8618  015B9C  D7E2               	goto	l1992
  8619  015B9E                     l9612:
  8620                           
  8621                           ; BSR set to: 1
  8622  015B9E  C11D  FFD9         	movff	strncpy@cp,fsr2l
  8623  015BA2  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
  8624  015BA6  0E00               	movlw	0
  8625  015BA8  6EDF               	movwf	indf2,c
  8626                           
  8627                           ; BSR set to: 1
  8628  015BAA  4B1D               	infsnz	strncpy@cp& (0+255),f,b
  8629  015BAC  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
  8630  015BAE                     l1995:
  8631                           
  8632                           ; BSR set to: 1
  8633                           
  8634                           ; BSR set to: 1
  8635  015BAE  071B               	decf	strncpy@size& (0+255),f,b
  8636  015BB0  A0D8               	btfss	status,0,c
  8637  015BB2  071C               	decf	(strncpy@size+1)& (0+255),f,b
  8638  015BB4  291B               	incf	strncpy@size& (0+255),w,b
  8639  015BB6  E1F3               	bnz	l9612
  8640  015BB8  291C               	incf	(strncpy@size+1)& (0+255),w,b
  8641  015BBA  B4D8               	btfsc	status,2,c
  8642  015BBC  0012               	return	
  8643  015BBE  D7EF               	goto	l1996
  8644  015BC0                     __end_of_strncpy:
  8645                           	opt stack 0
  8646                           tblptru	equ	0xFF8
  8647                           tblptrh	equ	0xFF7
  8648                           tblptrl	equ	0xFF6
  8649                           tablat	equ	0xFF5
  8650                           intcon	equ	0xFF2
  8651                           postinc0	equ	0xFEE
  8652                           wreg	equ	0xFE8
  8653                           indf1	equ	0xFE7
  8654                           postdec1	equ	0xFE5
  8655                           fsr1h	equ	0xFE2
  8656                           fsr1l	equ	0xFE1
  8657                           indf2	equ	0xFDF
  8658                           postinc2	equ	0xFDE
  8659                           fsr2h	equ	0xFDA
  8660                           fsr2l	equ	0xFD9
  8661                           status	equ	0xFD8
  8662                           
  8663 ;; *************** function _strcat *****************
  8664 ;; Defined at:
  8665 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;  to              2   23[BANK1 ] PTR unsigned char 
  8668 ;;		 -> terminal_textAttributes@output_buff(15), 
  8669 ;;  from            2   25[BANK1 ] PTR const unsigned char 
  8670 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
  8671 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
  8672 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
  8673 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
  8674 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
  8675 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  8676 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;  cp              2   27[BANK1 ] PTR unsigned char 
  8679 ;;		 -> terminal_textAttributes@output_buff(15), 
  8680 ;; Return value:  Size  Location     Type
  8681 ;;                  2   23[BANK1 ] PTR unsigned char 
  8682 ;; Registers used:
  8683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8684 ;; Tracked objects:
  8685 ;;		On entry : 0/0
  8686 ;;		On exit  : 0/0
  8687 ;;		Unchanged: 0/0
  8688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8689 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8690 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8692 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8693 ;;Total ram usage:        6 bytes
  8694 ;; Hardware stack levels used:    1
  8695 ;; Hardware stack levels required when called:   14
  8696 ;; This function calls:
  8697 ;;		Nothing
  8698 ;; This function is called by:
  8699 ;;		_terminal_textAttributes
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703                           	psect	text7
  8704  01607C                     __ptext7:
  8705                           	opt stack 0
  8706  01607C                     _strcat:
  8707                           	opt stack 14
  8708                           
  8709                           ; BSR set to: 1
  8710                           ;incstack = 0
  8711  01607C  C117  F11B         	movff	strcat@to,strcat@cp
  8712  016080  C118  F11C         	movff	strcat@to+1,strcat@cp+1
  8713  016084  D003               	goto	l1962
  8714  016086  0101               	movlb	1	; () banked
  8715  016088  4B1B               	infsnz	strcat@cp& (0+255),f,b
  8716  01608A  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
  8717  01608C                     l1962:
  8718                           
  8719                           ; BSR set to: 1
  8720  01608C  C11B  FFD9         	movff	strcat@cp,fsr2l
  8721  016090  C11C  FFDA         	movff	strcat@cp+1,fsr2h
  8722  016094  50DF               	movf	indf2,w,c
  8723  016096  B4D8               	btfsc	status,2,c
  8724  016098  D006               	goto	l1965
  8725  01609A  D7F5               	goto	l1963
  8726  01609C  0101               	movlb	1	; () banked
  8727  01609E  4B1B               	infsnz	strcat@cp& (0+255),f,b
  8728  0160A0  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
  8729  0160A2  4B19               	infsnz	strcat@from& (0+255),f,b
  8730  0160A4  2B1A               	incf	(strcat@from+1)& (0+255),f,b
  8731  0160A6                     l1965:
  8732                           
  8733                           ; BSR set to: 1
  8734  0160A6  C119  FFF6         	movff	strcat@from,tblptrl
  8735  0160AA  C11A  FFF7         	movff	strcat@from+1,tblptrh
  8736  0160AE                     	if	0	;tblptru may be non-zero
  8737  0160AE                     	endif
  8738  0160AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8739  0160AE  0E00               	movlw	low (__mediumconst shr (0+16))
  8740  0160B0  6EF8               	movwf	tblptru,c
  8741  0160B2                     	endif
  8742  0160B2  C11B  FFD9         	movff	strcat@cp,fsr2l
  8743  0160B6  C11C  FFDA         	movff	strcat@cp+1,fsr2h
  8744  0160BA  0008               	tblrd		*
  8745  0160BC  CFF5 FFDF          	movff	tablat,indf2
  8746  0160C0  50DF               	movf	indf2,w,c
  8747  0160C2  B4D8               	btfsc	status,2,c
  8748  0160C4  0012               	return	
  8749  0160C6  D7EA               	goto	l1966
  8750  0160C8                     __end_of_strcat:
  8751                           	opt stack 0
  8752                           tblptru	equ	0xFF8
  8753                           tblptrh	equ	0xFF7
  8754                           tblptrl	equ	0xFF6
  8755                           tablat	equ	0xFF5
  8756                           intcon	equ	0xFF2
  8757                           postinc0	equ	0xFEE
  8758                           wreg	equ	0xFE8
  8759                           indf1	equ	0xFE7
  8760                           postdec1	equ	0xFE5
  8761                           fsr1h	equ	0xFE2
  8762                           fsr1l	equ	0xFE1
  8763                           indf2	equ	0xFDF
  8764                           postinc2	equ	0xFDE
  8765                           fsr2h	equ	0xFDA
  8766                           fsr2l	equ	0xFD9
  8767                           status	equ	0xFD8
  8768                           
  8769 ;; *************** function _terminal_printNewline *****************
  8770 ;; Defined at:
  8771 ;;		line 230 in file "ring_buffer_interface.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;		None
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;		None
  8776 ;; Return value:  Size  Location     Type
  8777 ;;                  1    wreg      void 
  8778 ;; Registers used:
  8779 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8780 ;; Tracked objects:
  8781 ;;		On entry : 0/0
  8782 ;;		On exit  : 0/0
  8783 ;;		Unchanged: 0/0
  8784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8789 ;;Total ram usage:        0 bytes
  8790 ;; Hardware stack levels used:    1
  8791 ;; Hardware stack levels required when called:   18
  8792 ;; This function calls:
  8793 ;;		_printf
  8794 ;; This function is called by:
  8795 ;;		_ringBufferLUT
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799                           	psect	text8
  8800  016702                     __ptext8:
  8801                           	opt stack 0
  8802  016702                     _terminal_printNewline:
  8803                           	opt stack 10
  8804                           
  8805                           ;ring_buffer_interface.c: 232: printf("\n\r");
  8806                           
  8807                           ;incstack = 0
  8808  016702  0E6A               	movlw	low (STR_85+68)
  8809  016704  0101               	movlb	1	; () banked
  8810  016706  6F64               	movwf	printf@f& (0+255),b
  8811  016708  0EFA               	movlw	high (STR_85+68)
  8812  01670A  6F65               	movwf	(printf@f+1)& (0+255),b
  8813  01670C  EC00  F080         	call	_printf	;wreg free
  8814  016710  0012               	return		;funcret
  8815  016712                     __end_of_terminal_printNewline:
  8816                           	opt stack 0
  8817                           tblptru	equ	0xFF8
  8818                           tblptrh	equ	0xFF7
  8819                           tblptrl	equ	0xFF6
  8820                           tablat	equ	0xFF5
  8821                           intcon	equ	0xFF2
  8822                           postinc0	equ	0xFEE
  8823                           wreg	equ	0xFE8
  8824                           indf1	equ	0xFE7
  8825                           postdec1	equ	0xFE5
  8826                           fsr1h	equ	0xFE2
  8827                           fsr1l	equ	0xFE1
  8828                           indf2	equ	0xFDF
  8829                           postinc2	equ	0xFDE
  8830                           fsr2h	equ	0xFDA
  8831                           fsr2l	equ	0xFD9
  8832                           status	equ	0xFD8
  8833                           
  8834 ;; *************** function _strstr *****************
  8835 ;; Defined at:
  8836 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
  8837 ;; Parameters:    Size  Location     Type
  8838 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
  8839 ;;		 -> NULL(0), line(64), 
  8840 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
  8841 ;;		 -> STR_79(25), 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  2   38[BANK1 ] PTR unsigned char 
  8846 ;; Registers used:
  8847 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8853 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8856 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8857 ;;Total ram usage:        4 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:   15
  8860 ;; This function calls:
  8861 ;;		_strchr
  8862 ;;		_strlen
  8863 ;;		_strncmp
  8864 ;; This function is called by:
  8865 ;;		_ringBufferLUT
  8866 ;; This function uses a non-reentrant model
  8867 ;;
  8868                           
  8869                           	psect	text9
  8870  0155EA                     __ptext9:
  8871                           	opt stack 0
  8872  0155EA                     _strstr:
  8873                           	opt stack 13
  8874                           
  8875                           ;incstack = 0
  8876  0155EA  D034               	goto	l2007
  8877  0155EC  C126  F11D         	movff	strstr@s1,strncmp@s1
  8878  0155F0  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
  8879  0155F4  C128  F11F         	movff	strstr@s2,strncmp@s2
  8880  0155F8  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
  8881  0155FC  C128  F117         	movff	strstr@s2,strlen@s
  8882  015600  C129  F118         	movff	strstr@s2+1,strlen@s+1
  8883  015604  EC98  F0AF         	call	_strlen	;wreg free
  8884  015608  C117  F121         	movff	?_strlen,strncmp@len
  8885  01560C  C118  F122         	movff	?_strlen+1,strncmp@len+1
  8886  015610  EC65  F0AA         	call	_strncmp	;wreg free
  8887  015614  0101               	movlb	1	; () banked
  8888  015616  511D               	movf	?_strncmp& (0+255),w,b
  8889  015618  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
  8890  01561A  A4D8               	btfss	status,2,c
  8891  01561C  D005               	goto	l2009
  8892                           
  8893                           ; BSR set to: 1
  8894  01561E  C126  F126         	movff	strstr@s1,?_strstr
  8895  015622  C127  F127         	movff	strstr@s1+1,?_strstr+1
  8896                           
  8897                           ; BSR set to: 1
  8898  015626  0012               	return	
  8899  015628                     l2009:
  8900                           
  8901                           ; BSR set to: 1
  8902                           
  8903                           ; BSR set to: 1
  8904  015628  0E01               	movlw	1
  8905  01562A  2526               	addwf	strstr@s1& (0+255),w,b
  8906  01562C  6F17               	movwf	strchr@ptr& (0+255),b
  8907  01562E  0E00               	movlw	0
  8908  015630  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
  8909  015632  6F18               	movwf	(strchr@ptr+1)& (0+255),b
  8910  015634  C128  FFF6         	movff	strstr@s2,tblptrl
  8911  015638  C129  FFF7         	movff	strstr@s2+1,tblptrh
  8912  01563C                     	if	0	;tblptru may be non-zero
  8913  01563C                     	endif
  8914  01563C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8915  01563C  0E00               	movlw	low (__mediumconst shr (0+16))
  8916  01563E  6EF8               	movwf	tblptru,c
  8917  015640                     	endif
  8918  015640  0008               	tblrd		*
  8919  015642  50F5               	movf	tablat,w,c
  8920  015644  6F19               	movwf	strchr@chr& (0+255),b
  8921  015646  6B1A               	clrf	(strchr@chr+1)& (0+255),b
  8922  015648  EC91  F0B1         	call	_strchr	;wreg free
  8923  01564C  C117  F126         	movff	?_strchr,strstr@s1
  8924  015650  C118  F127         	movff	?_strchr+1,strstr@s1+1
  8925  015654                     l2007:
  8926  015654  0101               	movlb	1	; () banked
  8927  015656  5126               	movf	strstr@s1& (0+255),w,b
  8928  015658  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
  8929  01565A  B4D8               	btfsc	status,2,c
  8930  01565C  D007               	goto	u11550
  8931                           
  8932                           ; BSR set to: 1
  8933  01565E  C126  FFD9         	movff	strstr@s1,fsr2l
  8934  015662  C127  FFDA         	movff	strstr@s1+1,fsr2h
  8935  015666  50DF               	movf	indf2,w,c
  8936  015668  A4D8               	btfss	status,2,c
  8937  01566A  D7C0               	goto	l2008
  8938  01566C                     u11550:
  8939                           
  8940                           ; BSR set to: 1
  8941                           
  8942                           ; BSR set to: 1
  8943                           
  8944                           ; BSR set to: 1
  8945  01566C  0E00               	movlw	0
  8946  01566E  6F26               	movwf	?_strstr& (0+255),b
  8947  015670  0E00               	movlw	0
  8948  015672  6F27               	movwf	(?_strstr+1)& (0+255),b
  8949  015674  0012               	return	
  8950  015676                     __end_of_strstr:
  8951                           	opt stack 0
  8952                           tblptru	equ	0xFF8
  8953                           tblptrh	equ	0xFF7
  8954                           tblptrl	equ	0xFF6
  8955                           tablat	equ	0xFF5
  8956                           intcon	equ	0xFF2
  8957                           postinc0	equ	0xFEE
  8958                           wreg	equ	0xFE8
  8959                           indf1	equ	0xFE7
  8960                           postdec1	equ	0xFE5
  8961                           fsr1h	equ	0xFE2
  8962                           fsr1l	equ	0xFE1
  8963                           indf2	equ	0xFDF
  8964                           postinc2	equ	0xFDE
  8965                           fsr2h	equ	0xFDA
  8966                           fsr2l	equ	0xFD9
  8967                           status	equ	0xFD8
  8968                           
  8969 ;; *************** function _strncmp *****************
  8970 ;; Defined at:
  8971 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
  8972 ;; Parameters:    Size  Location     Type
  8973 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
  8974 ;;		 -> NULL(0), line(64), 
  8975 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
  8976 ;;		 -> STR_79(25), 
  8977 ;;  len             2   33[BANK1 ] unsigned int 
  8978 ;; Auto vars:     Size  Location     Type
  8979 ;;		None
  8980 ;; Return value:  Size  Location     Type
  8981 ;;                  2   29[BANK1 ] int 
  8982 ;; Registers used:
  8983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8984 ;; Tracked objects:
  8985 ;;		On entry : 0/0
  8986 ;;		On exit  : 0/0
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8989 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8991 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8992 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8993 ;;Total ram usage:        9 bytes
  8994 ;; Hardware stack levels used:    1
  8995 ;; Hardware stack levels required when called:   14
  8996 ;; This function calls:
  8997 ;;		Nothing
  8998 ;; This function is called by:
  8999 ;;		_strstr
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           
  9003                           	psect	text10
  9004  0154CA                     __ptext10:
  9005                           	opt stack 0
  9006  0154CA                     _strncmp:
  9007                           	opt stack 13
  9008                           
  9009                           ; BSR set to: 1
  9010                           ;incstack = 0
  9011  0154CA  D039               	goto	l2066
  9012  0154CC                     l9826:
  9013  0154CC  C11D  FFD9         	movff	strncmp@s1,fsr2l
  9014  0154D0  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  9015  0154D4  50DF               	movf	indf2,w,c
  9016  0154D6  B4D8               	btfsc	status,2,c
  9017  0154D8  D012               	goto	u11320
  9018  0154DA  C11D  FFD9         	movff	strncmp@s1,fsr2l
  9019  0154DE  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  9020  0154E2  50DF               	movf	indf2,w,c
  9021  0154E4  0101               	movlb	1	; () banked
  9022  0154E6  6F23               	movwf	??_strncmp& (0+255),b
  9023  0154E8  C11F  FFF6         	movff	strncmp@s2,tblptrl
  9024  0154EC  C120  FFF7         	movff	strncmp@s2+1,tblptrh
  9025  0154F0                     	if	0	;tblptru may be non-zero
  9026  0154F0                     	endif
  9027  0154F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9028  0154F0  0E00               	movlw	low (__mediumconst shr (0+16))
  9029  0154F2  6EF8               	movwf	tblptru,c
  9030  0154F4                     	endif
  9031  0154F4  0008               	tblrd		*
  9032  0154F6  50F5               	movf	tablat,w,c
  9033  0154F8  1923               	xorwf	??_strncmp& (0+255),w,b
  9034  0154FA  B4D8               	btfsc	status,2,c
  9035  0154FC  D01C               	goto	l2068
  9036  0154FE                     u11320:
  9037                           
  9038                           ; BSR set to: 1
  9039  0154FE  C11F  FFF6         	movff	strncmp@s2,tblptrl
  9040  015502  C120  FFF7         	movff	strncmp@s2+1,tblptrh
  9041  015506                     	if	0	;tblptru may be non-zero
  9042  015506                     	endif
  9043  015506                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9044  015506  0E00               	movlw	low (__mediumconst shr (0+16))
  9045  015508  6EF8               	movwf	tblptru,c
  9046  01550A                     	endif
  9047  01550A  0008               	tblrd		*
  9048  01550C  50F5               	movf	tablat,w,c
  9049  01550E  0101               	movlb	1	; () banked
  9050  015510  6F23               	movwf	??_strncmp& (0+255),b
  9051  015512  6B24               	clrf	(??_strncmp+1)& (0+255),b
  9052  015514  1F23               	comf	??_strncmp& (0+255),f,b
  9053  015516  1F24               	comf	(??_strncmp+1)& (0+255),f,b
  9054  015518  4B23               	infsnz	??_strncmp& (0+255),f,b
  9055  01551A  2B24               	incf	(??_strncmp+1)& (0+255),f,b
  9056  01551C  C11D  FFD9         	movff	strncmp@s1,fsr2l
  9057  015520  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  9058  015524  50DF               	movf	indf2,w,c
  9059  015526  6F25               	movwf	(??_strncmp+2)& (0+255),b
  9060  015528  5125               	movf	(??_strncmp+2)& (0+255),w,b
  9061  01552A  2523               	addwf	??_strncmp& (0+255),w,b
  9062  01552C  6F1D               	movwf	?_strncmp& (0+255),b
  9063  01552E  0E00               	movlw	0
  9064  015530  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
  9065  015532  6F1E               	movwf	(?_strncmp+1)& (0+255),b
  9066                           
  9067                           ; BSR set to: 1
  9068  015534  0012               	return	
  9069  015536                     l2068:
  9070                           
  9071                           ; BSR set to: 1
  9072                           
  9073                           ; BSR set to: 1
  9074  015536  4B1D               	infsnz	strncmp@s1& (0+255),f,b
  9075  015538  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
  9076  01553A  4B1F               	infsnz	strncmp@s2& (0+255),f,b
  9077  01553C  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
  9078  01553E                     l2066:
  9079                           
  9080                           ; BSR set to: 1
  9081  01553E  0101               	movlb	1	; () banked
  9082  015540  0721               	decf	strncmp@len& (0+255),f,b
  9083  015542  A0D8               	btfss	status,0,c
  9084  015544  0722               	decf	(strncmp@len+1)& (0+255),f,b
  9085  015546  2921               	incf	strncmp@len& (0+255),w,b
  9086  015548  E1C1               	bnz	l9826
  9087  01554A  2922               	incf	(strncmp@len+1)& (0+255),w,b
  9088  01554C  A4D8               	btfss	status,2,c
  9089  01554E  D7BE               	goto	l2067
  9090                           
  9091                           ; BSR set to: 1
  9092                           
  9093                           ; BSR set to: 1
  9094  015550  0E00               	movlw	0
  9095  015552  6F1E               	movwf	(?_strncmp+1)& (0+255),b
  9096  015554  0E00               	movlw	0
  9097  015556  6F1D               	movwf	?_strncmp& (0+255),b
  9098  015558  0012               	return	
  9099  01555A                     __end_of_strncmp:
  9100                           	opt stack 0
  9101                           tblptru	equ	0xFF8
  9102                           tblptrh	equ	0xFF7
  9103                           tblptrl	equ	0xFF6
  9104                           tablat	equ	0xFF5
  9105                           intcon	equ	0xFF2
  9106                           postinc0	equ	0xFEE
  9107                           wreg	equ	0xFE8
  9108                           indf1	equ	0xFE7
  9109                           postdec1	equ	0xFE5
  9110                           fsr1h	equ	0xFE2
  9111                           fsr1l	equ	0xFE1
  9112                           indf2	equ	0xFDF
  9113                           postinc2	equ	0xFDE
  9114                           fsr2h	equ	0xFDA
  9115                           fsr2l	equ	0xFD9
  9116                           status	equ	0xFD8
  9117                           
  9118 ;; *************** function _strlen *****************
  9119 ;; Defined at:
  9120 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;  s               2   23[BANK1 ] PTR const unsigned char 
  9123 ;;		 -> STR_79(25), line(64), 
  9124 ;; Auto vars:     Size  Location     Type
  9125 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
  9126 ;;		 -> STR_79(25), line(64), 
  9127 ;; Return value:  Size  Location     Type
  9128 ;;                  2   23[BANK1 ] unsigned int 
  9129 ;; Registers used:
  9130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9131 ;; Tracked objects:
  9132 ;;		On entry : 0/0
  9133 ;;		On exit  : 0/0
  9134 ;;		Unchanged: 0/0
  9135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9136 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9137 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9138 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9139 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9140 ;;Total ram usage:        6 bytes
  9141 ;; Hardware stack levels used:    1
  9142 ;; Hardware stack levels required when called:   14
  9143 ;; This function calls:
  9144 ;;		Nothing
  9145 ;; This function is called by:
  9146 ;;		_terminal_ringBufferPull
  9147 ;;		_strstr
  9148 ;; This function uses a non-reentrant model
  9149 ;;
  9150                           
  9151                           	psect	text11
  9152  015F30                     __ptext11:
  9153                           	opt stack 0
  9154  015F30                     _strlen:
  9155                           	opt stack 15
  9156                           
  9157                           ; BSR set to: 1
  9158                           ;incstack = 0
  9159  015F30  C117  F11B         	movff	strlen@s,strlen@cp
  9160  015F34  C118  F11C         	movff	strlen@s+1,strlen@cp+1
  9161  015F38  D003               	goto	l1985
  9162  015F3A  0101               	movlb	1	; () banked
  9163  015F3C  4B1B               	infsnz	strlen@cp& (0+255),f,b
  9164  015F3E  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
  9165  015F40                     l1985:
  9166                           
  9167                           ; BSR set to: 1
  9168  015F40  C11B  FFF6         	movff	strlen@cp,tblptrl
  9169  015F44  C11C  FFF7         	movff	strlen@cp+1,tblptrh
  9170  015F48  0E00               	movlw	low (__mediumconst shr (0+16))
  9171  015F4A  6EF8               	movwf	tblptru,c
  9172  015F4C  0E0D               	movlw	(high __ramtop+-1)
  9173  015F4E  64F7               	cpfsgt	tblptrh,c
  9174  015F50  D003               	bra	u11287
  9175  015F52  0008               	tblrd		*
  9176  015F54  50F5               	movf	tablat,w,c
  9177  015F56  D005               	bra	u11280
  9178  015F58                     u11287:
  9179  015F58  CFF6 FFE9          	movff	tblptrl,fsr0l
  9180  015F5C  CFF7 FFEA          	movff	tblptrh,fsr0h
  9181  015F60  50EF               	movf	indf0,w,c
  9182  015F62                     u11280:
  9183  015F62  0900               	iorlw	0
  9184  015F64  A4D8               	btfss	status,2,c
  9185  015F66  D7E9               	goto	l1986
  9186  015F68  C117  F119         	movff	strlen@s,??_strlen
  9187  015F6C  C118  F11A         	movff	strlen@s+1,??_strlen+1
  9188  015F70  0101               	movlb	1	; () banked
  9189  015F72  1F19               	comf	??_strlen& (0+255),f,b
  9190  015F74  1F1A               	comf	(??_strlen+1)& (0+255),f,b
  9191  015F76  4B19               	infsnz	??_strlen& (0+255),f,b
  9192  015F78  2B1A               	incf	(??_strlen+1)& (0+255),f,b
  9193  015F7A  511B               	movf	strlen@cp& (0+255),w,b
  9194  015F7C  2519               	addwf	??_strlen& (0+255),w,b
  9195  015F7E  6F17               	movwf	?_strlen& (0+255),b
  9196  015F80  511C               	movf	(strlen@cp+1)& (0+255),w,b
  9197  015F82  211A               	addwfc	(??_strlen+1)& (0+255),w,b
  9198  015F84  6F18               	movwf	(?_strlen+1)& (0+255),b
  9199  015F86  0012               	return	
  9200  015F88                     __end_of_strlen:
  9201                           	opt stack 0
  9202                           tblptru	equ	0xFF8
  9203                           tblptrh	equ	0xFF7
  9204                           tblptrl	equ	0xFF6
  9205                           tablat	equ	0xFF5
  9206                           intcon	equ	0xFF2
  9207                           indf0	equ	0xFEF
  9208                           postinc0	equ	0xFEE
  9209                           fsr0h	equ	0xFEA
  9210                           fsr0l	equ	0xFE9
  9211                           wreg	equ	0xFE8
  9212                           indf1	equ	0xFE7
  9213                           postdec1	equ	0xFE5
  9214                           fsr1h	equ	0xFE2
  9215                           fsr1l	equ	0xFE1
  9216                           indf2	equ	0xFDF
  9217                           postinc2	equ	0xFDE
  9218                           fsr2h	equ	0xFDA
  9219                           fsr2l	equ	0xFD9
  9220                           status	equ	0xFD8
  9221                           
  9222 ;; *************** function _strchr *****************
  9223 ;; Defined at:
  9224 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
  9227 ;;		 -> NULL(0), line(64), 
  9228 ;;  chr             2   25[BANK1 ] int 
  9229 ;; Auto vars:     Size  Location     Type
  9230 ;;		None
  9231 ;; Return value:  Size  Location     Type
  9232 ;;                  2   23[BANK1 ] PTR unsigned char 
  9233 ;; Registers used:
  9234 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9235 ;; Tracked objects:
  9236 ;;		On entry : 0/0
  9237 ;;		On exit  : 0/0
  9238 ;;		Unchanged: 0/0
  9239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9240 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9242 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9243 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9244 ;;Total ram usage:        5 bytes
  9245 ;; Hardware stack levels used:    1
  9246 ;; Hardware stack levels required when called:   14
  9247 ;; This function calls:
  9248 ;;		Nothing
  9249 ;; This function is called by:
  9250 ;;		_strstr
  9251 ;; This function uses a non-reentrant model
  9252 ;;
  9253                           
  9254                           	psect	text12
  9255  016322                     __ptext12:
  9256                           	opt stack 0
  9257  016322                     _strchr:
  9258                           	opt stack 13
  9259                           
  9260                           ; BSR set to: 1
  9261                           ;incstack = 0
  9262  016322  C117  FFD9         	movff	strchr@ptr,fsr2l
  9263  016326  C118  FFDA         	movff	strchr@ptr+1,fsr2h
  9264  01632A  0101               	movlb	1	; () banked
  9265  01632C  5119               	movf	strchr@chr& (0+255),w,b
  9266  01632E  18DE               	xorwf	postinc2,w,c
  9267  016330  A4D8               	btfss	status,2,c
  9268  016332  D005               	goto	l2061
  9269                           
  9270                           ; BSR set to: 1
  9271  016334  C117  F117         	movff	strchr@ptr,?_strchr
  9272  016338  C118  F118         	movff	strchr@ptr+1,?_strchr+1
  9273                           
  9274                           ; BSR set to: 1
  9275  01633C  0012               	return	
  9276  01633E                     l2061:
  9277                           
  9278                           ; BSR set to: 1
  9279                           
  9280                           ; BSR set to: 1
  9281  01633E  C117  FFD9         	movff	strchr@ptr,fsr2l
  9282  016342  C118  FFDA         	movff	strchr@ptr+1,fsr2h
  9283  016346  4B17               	infsnz	strchr@ptr& (0+255),f,b
  9284  016348  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
  9285  01634A  50DF               	movf	indf2,w,c
  9286  01634C  A4D8               	btfss	status,2,c
  9287  01634E  D7E9               	goto	_strchr
  9288                           
  9289                           ; BSR set to: 1
  9290                           
  9291                           ; BSR set to: 1
  9292  016350  0E00               	movlw	0
  9293  016352  6F17               	movwf	?_strchr& (0+255),b
  9294  016354  0E00               	movlw	0
  9295  016356  6F18               	movwf	(?_strchr+1)& (0+255),b
  9296  016358  0012               	return	
  9297  01635A                     __end_of_strchr:
  9298                           	opt stack 0
  9299                           tblptru	equ	0xFF8
  9300                           tblptrh	equ	0xFF7
  9301                           tblptrl	equ	0xFF6
  9302                           tablat	equ	0xFF5
  9303                           intcon	equ	0xFF2
  9304                           indf0	equ	0xFEF
  9305                           postinc0	equ	0xFEE
  9306                           fsr0h	equ	0xFEA
  9307                           fsr0l	equ	0xFE9
  9308                           wreg	equ	0xFE8
  9309                           indf1	equ	0xFE7
  9310                           postdec1	equ	0xFE5
  9311                           fsr1h	equ	0xFE2
  9312                           fsr1l	equ	0xFE1
  9313                           indf2	equ	0xFDF
  9314                           postinc2	equ	0xFDE
  9315                           fsr2h	equ	0xFDA
  9316                           fsr2l	equ	0xFD9
  9317                           status	equ	0xFD8
  9318                           
  9319 ;; *************** function _strcmp *****************
  9320 ;; Defined at:
  9321 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
  9324 ;;		 -> line(64), 
  9325 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
  9326 ;;		 -> STR_90(5), STR_88(14), STR_86(16), STR_77(13), 
  9327 ;;		 -> STR_75(12), STR_73(16), STR_71(15), STR_69(15), 
  9328 ;;		 -> STR_67(21), STR_65(21), STR_63(26), STR_61(14), 
  9329 ;;		 -> STR_59(13), STR_57(18), STR_55(15), STR_53(16), 
  9330 ;;		 -> STR_51(11), STR_48(4), STR_47(6), STR_44(6), 
  9331 ;;		 -> STR_41(6), 
  9332 ;; Auto vars:     Size  Location     Type
  9333 ;;  r               1   28[BANK1 ] char 
  9334 ;; Return value:  Size  Location     Type
  9335 ;;                  2   23[BANK1 ] int 
  9336 ;; Registers used:
  9337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9338 ;; Tracked objects:
  9339 ;;		On entry : 0/0
  9340 ;;		On exit  : 0/0
  9341 ;;		Unchanged: 0/0
  9342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9343 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9344 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9345 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9346 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9347 ;;Total ram usage:        6 bytes
  9348 ;; Hardware stack levels used:    1
  9349 ;; Hardware stack levels required when called:   14
  9350 ;; This function calls:
  9351 ;;		Nothing
  9352 ;; This function is called by:
  9353 ;;		_ringBufferLUT
  9354 ;; This function uses a non-reentrant model
  9355 ;;
  9356                           
  9357                           	psect	text13
  9358  015FDE                     __ptext13:
  9359                           	opt stack 0
  9360  015FDE                     _strcmp:
  9361                           	opt stack 14
  9362                           
  9363                           ; BSR set to: 1
  9364                           ;incstack = 0
  9365  015FDE  D005               	goto	l1971
  9366  015FE0  0101               	movlb	1	; () banked
  9367  015FE2  4B17               	infsnz	strcmp@s1& (0+255),f,b
  9368  015FE4  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
  9369  015FE6  4B19               	infsnz	strcmp@s2& (0+255),f,b
  9370  015FE8  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
  9371  015FEA                     l1971:
  9372                           
  9373                           ; BSR set to: 1
  9374  015FEA  C117  FFD9         	movff	strcmp@s1,fsr2l
  9375  015FEE  C118  FFDA         	movff	strcmp@s1+1,fsr2h
  9376  015FF2  50DF               	movf	indf2,w,c
  9377  015FF4  0101               	movlb	1	; () banked
  9378  015FF6  6F1B               	movwf	??_strcmp& (0+255),b
  9379  015FF8  C119  FFF6         	movff	strcmp@s2,tblptrl
  9380  015FFC  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
  9381  016000                     	if	0	;tblptru may be non-zero
  9382  016000                     	endif
  9383  016000                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9384  016000  0E00               	movlw	low (__mediumconst shr (0+16))
  9385  016002  6EF8               	movwf	tblptru,c
  9386  016004                     	endif
  9387  016004  0008               	tblrd		*
  9388  016006  50F5               	movf	tablat,w,c
  9389  016008  0800               	sublw	0
  9390  01600A  251B               	addwf	??_strcmp& (0+255),w,b
  9391  01600C  6F1C               	movwf	strcmp@r& (0+255),b
  9392  01600E  511C               	movf	strcmp@r& (0+255),w,b
  9393  016010  A4D8               	btfss	status,2,c
  9394  016012  D007               	goto	u11520
  9395                           
  9396                           ; BSR set to: 1
  9397  016014  C117  FFD9         	movff	strcmp@s1,fsr2l
  9398  016018  C118  FFDA         	movff	strcmp@s1+1,fsr2h
  9399  01601C  50DF               	movf	indf2,w,c
  9400  01601E  A4D8               	btfss	status,2,c
  9401  016020  D7DF               	goto	l1972
  9402  016022                     u11520:
  9403                           
  9404                           ; BSR set to: 1
  9405                           
  9406                           ; BSR set to: 1
  9407                           
  9408                           ; BSR set to: 1
  9409  016022  511C               	movf	strcmp@r& (0+255),w,b
  9410  016024  6F17               	movwf	?_strcmp& (0+255),b
  9411  016026  6B18               	clrf	(?_strcmp+1)& (0+255),b
  9412  016028  BF17               	btfsc	?_strcmp& (0+255),7,b
  9413  01602A  0718               	decf	(?_strcmp+1)& (0+255),f,b
  9414  01602C  0012               	return	
  9415  01602E                     __end_of_strcmp:
  9416                           	opt stack 0
  9417                           tblptru	equ	0xFF8
  9418                           tblptrh	equ	0xFF7
  9419                           tblptrl	equ	0xFF6
  9420                           tablat	equ	0xFF5
  9421                           intcon	equ	0xFF2
  9422                           indf0	equ	0xFEF
  9423                           postinc0	equ	0xFEE
  9424                           fsr0h	equ	0xFEA
  9425                           fsr0l	equ	0xFE9
  9426                           wreg	equ	0xFE8
  9427                           indf1	equ	0xFE7
  9428                           postdec1	equ	0xFE5
  9429                           fsr1h	equ	0xFE2
  9430                           fsr1l	equ	0xFE1
  9431                           indf2	equ	0xFDF
  9432                           postinc2	equ	0xFDE
  9433                           fsr2h	equ	0xFDA
  9434                           fsr2l	equ	0xFD9
  9435                           status	equ	0xFD8
  9436                           
  9437 ;; *************** function _getDeviceIDString *****************
  9438 ;; Defined at:
  9439 ;;		line 13 in file "device_IDs.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  inputDevID      2   29[BANK1 ] unsigned int 
  9442 ;; Auto vars:     Size  Location     Type
  9443 ;;  returnString   12   33[BANK1 ] unsigned char [12]
  9444 ;; Return value:  Size  Location     Type
  9445 ;;                  2   29[BANK1 ] PTR unsigned char 
  9446 ;; Registers used:
  9447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9448 ;; Tracked objects:
  9449 ;;		On entry : 0/0
  9450 ;;		On exit  : 0/0
  9451 ;;		Unchanged: 0/0
  9452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9453 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9454 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9455 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9456 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9457 ;;Total ram usage:       16 bytes
  9458 ;; Hardware stack levels used:    1
  9459 ;; Hardware stack levels required when called:   15
  9460 ;; This function calls:
  9461 ;;		_strcpy
  9462 ;; This function is called by:
  9463 ;;		_ringBufferLUT
  9464 ;; This function uses a non-reentrant model
  9465 ;;
  9466                           
  9467                           	psect	text14
  9468  015676                     __ptext14:
  9469                           	opt stack 0
  9470  015676                     _getDeviceIDString:
  9471                           	opt stack 13
  9472                           
  9473                           ;device_IDs.c: 16: char returnString[12];
  9474                           ;device_IDs.c: 20: switch (inputDevID) {
  9475                           
  9476                           ; BSR set to: 1
  9477                           ;incstack = 0
  9478  015676  D024               	goto	l1144
  9479  015678                     
  9480                           ;device_IDs.c: 23: strcpy(returnString, "PIC18F67K40");
  9481  015678  0E21               	movlw	low getDeviceIDString@returnString
  9482  01567A  0101               	movlb	1	; () banked
  9483  01567C  6F17               	movwf	strcpy@to& (0+255),b
  9484  01567E  0E01               	movlw	high getDeviceIDString@returnString
  9485  015680  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9486  015682  0E64               	movlw	low STR_97
  9487  015684  6F19               	movwf	strcpy@from& (0+255),b
  9488  015686  0EFF               	movlw	high STR_97
  9489  015688  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9490  01568A  ECAD  F0B1         	call	_strcpy	;wreg free
  9491                           
  9492                           ;device_IDs.c: 24: break;
  9493  01568E  D02F               	goto	l1146
  9494  015690                     
  9495                           ;device_IDs.c: 27: strcpy(returnString, "PIC18LF67K40");
  9496  015690  0E21               	movlw	low getDeviceIDString@returnString
  9497  015692  0101               	movlb	1	; () banked
  9498  015694  6F17               	movwf	strcpy@to& (0+255),b
  9499  015696  0E01               	movlw	high getDeviceIDString@returnString
  9500  015698  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9501  01569A  0E3D               	movlw	low STR_98
  9502  01569C  6F19               	movwf	strcpy@from& (0+255),b
  9503  01569E  0EFF               	movlw	high STR_98
  9504  0156A0  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9505  0156A2  ECAD  F0B1         	call	_strcpy	;wreg free
  9506                           
  9507                           ;device_IDs.c: 28: break;
  9508  0156A6  D023               	goto	l1146
  9509  0156A8                     
  9510                           ;device_IDs.c: 31: strcpy(returnString, "Undefined");
  9511  0156A8  0E21               	movlw	low getDeviceIDString@returnString
  9512  0156AA  0101               	movlb	1	; () banked
  9513  0156AC  6F17               	movwf	strcpy@to& (0+255),b
  9514  0156AE  0E01               	movlw	high getDeviceIDString@returnString
  9515  0156B0  6F18               	movwf	(strcpy@to+1)& (0+255),b
  9516  0156B2  0E87               	movlw	low STR_99
  9517  0156B4  6F19               	movwf	strcpy@from& (0+255),b
  9518  0156B6  0EFF               	movlw	high STR_99
  9519  0156B8  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  9520  0156BA  ECAD  F0B1         	call	_strcpy	;wreg free
  9521                           
  9522                           ;device_IDs.c: 34: }
  9523                           
  9524                           ;device_IDs.c: 32: break;
  9525  0156BE  D017               	goto	l1146
  9526  0156C0                     l1144:
  9527  0156C0  C11D  F11F         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
  9528  0156C4  C11E  F120         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
  9529                           
  9530                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9531                           ; Switch size 1, requested type "space"
  9532                           ; Number of cases is 2, Range of values is 106 to 107
  9533                           ; switch strategies available:
  9534                           ; Name         Instructions Cycles
  9535                           ; simple_byte            7     4 (average)
  9536                           ;	Chosen strategy is simple_byte
  9537  0156C8  0101               	movlb	1	; () banked
  9538  0156CA  5120               	movf	(??_getDeviceIDString+1)& (0+255),w,b
  9539  0156CC  0A6A               	xorlw	106	; case 106
  9540  0156CE  B4D8               	btfsc	status,2,c
  9541  0156D0  D004               	goto	l13612
  9542  0156D2  0A01               	xorlw	1	; case 107
  9543  0156D4  B4D8               	btfsc	status,2,c
  9544  0156D6  D006               	goto	l13614
  9545  0156D8  D7E7               	goto	l1148
  9546  0156DA                     l13612:
  9547                           
  9548                           ; BSR set to: 1
  9549                           ; Switch size 1, requested type "space"
  9550                           ; Number of cases is 1, Range of values is 192 to 192
  9551                           ; switch strategies available:
  9552                           ; Name         Instructions Cycles
  9553                           ; simple_byte            4     3 (average)
  9554                           ;	Chosen strategy is simple_byte
  9555  0156DA  511F               	movf	??_getDeviceIDString& (0+255),w,b
  9556  0156DC  0AC0               	xorlw	192	; case 192
  9557  0156DE  B4D8               	btfsc	status,2,c
  9558  0156E0  D7CB               	goto	l1145
  9559  0156E2  D7E2               	goto	l1148
  9560  0156E4                     l13614:
  9561                           
  9562                           ; BSR set to: 1
  9563                           ; Switch size 1, requested type "space"
  9564                           ; Number of cases is 1, Range of values is 32 to 32
  9565                           ; switch strategies available:
  9566                           ; Name         Instructions Cycles
  9567                           ; simple_byte            4     3 (average)
  9568                           ;	Chosen strategy is simple_byte
  9569  0156E4  511F               	movf	??_getDeviceIDString& (0+255),w,b
  9570  0156E6  0A20               	xorlw	32	; case 32
  9571  0156E8  B4D8               	btfsc	status,2,c
  9572  0156EA  D7D2               	goto	l1147
  9573  0156EC  D7DD               	goto	l1148
  9574  0156EE                     l1146:
  9575                           
  9576                           ;device_IDs.c: 37: return *returnString;
  9577                           
  9578                           ; BSR set to: 1
  9579  0156EE  0101               	movlb	1	; () banked
  9580  0156F0  5121               	movf	getDeviceIDString@returnString& (0+255),w,b
  9581  0156F2  6F1F               	movwf	??_getDeviceIDString& (0+255),b
  9582  0156F4  6B20               	clrf	(??_getDeviceIDString+1)& (0+255),b
  9583  0156F6  C11F  F11D         	movff	??_getDeviceIDString,?_getDeviceIDString
  9584  0156FA  C120  F11E         	movff	??_getDeviceIDString+1,?_getDeviceIDString+1
  9585  0156FE  0012               	return	
  9586  015700                     __end_of_getDeviceIDString:
  9587                           	opt stack 0
  9588                           tblptru	equ	0xFF8
  9589                           tblptrh	equ	0xFF7
  9590                           tblptrl	equ	0xFF6
  9591                           tablat	equ	0xFF5
  9592                           intcon	equ	0xFF2
  9593                           indf0	equ	0xFEF
  9594                           postinc0	equ	0xFEE
  9595                           fsr0h	equ	0xFEA
  9596                           fsr0l	equ	0xFE9
  9597                           wreg	equ	0xFE8
  9598                           indf1	equ	0xFE7
  9599                           postdec1	equ	0xFE5
  9600                           fsr1h	equ	0xFE2
  9601                           fsr1l	equ	0xFE1
  9602                           indf2	equ	0xFDF
  9603                           postinc2	equ	0xFDE
  9604                           fsr2h	equ	0xFDA
  9605                           fsr2l	equ	0xFD9
  9606                           status	equ	0xFD8
  9607                           
  9608 ;; *************** function _strcpy *****************
  9609 ;; Defined at:
  9610 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;  to              2   23[BANK1 ] PTR unsigned char 
  9613 ;;		 -> getDeviceIDString@returnString(12), 
  9614 ;;  from            2   25[BANK1 ] PTR const unsigned char 
  9615 ;;		 -> STR_99(10), STR_98(13), STR_97(12), 
  9616 ;; Auto vars:     Size  Location     Type
  9617 ;;  cp              2   27[BANK1 ] PTR unsigned char 
  9618 ;;		 -> getDeviceIDString@returnString(12), 
  9619 ;; Return value:  Size  Location     Type
  9620 ;;                  2   23[BANK1 ] PTR unsigned char 
  9621 ;; Registers used:
  9622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9623 ;; Tracked objects:
  9624 ;;		On entry : 0/0
  9625 ;;		On exit  : 0/0
  9626 ;;		Unchanged: 0/0
  9627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9628 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9629 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9631 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9632 ;;Total ram usage:        6 bytes
  9633 ;; Hardware stack levels used:    1
  9634 ;; Hardware stack levels required when called:   14
  9635 ;; This function calls:
  9636 ;;		Nothing
  9637 ;; This function is called by:
  9638 ;;		_getDeviceIDString
  9639 ;; This function uses a non-reentrant model
  9640 ;;
  9641                           
  9642                           	psect	text15
  9643  01635A                     __ptext15:
  9644                           	opt stack 0
  9645  01635A                     _strcpy:
  9646                           	opt stack 13
  9647                           
  9648                           ; BSR set to: 1
  9649                           ;incstack = 0
  9650  01635A  C117  F11B         	movff	strcpy@to,strcpy@cp
  9651  01635E  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
  9652  016362  D005               	goto	l1979
  9653  016364  0101               	movlb	1	; () banked
  9654  016366  4B1B               	infsnz	strcpy@cp& (0+255),f,b
  9655  016368  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
  9656  01636A  4B19               	infsnz	strcpy@from& (0+255),f,b
  9657  01636C  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
  9658  01636E                     l1979:
  9659                           
  9660                           ; BSR set to: 1
  9661  01636E  C119  FFF6         	movff	strcpy@from,tblptrl
  9662  016372  C11A  FFF7         	movff	strcpy@from+1,tblptrh
  9663  016376                     	if	0	;tblptru may be non-zero
  9664  016376                     	endif
  9665  016376                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9666  016376  0E00               	movlw	low (__mediumconst shr (0+16))
  9667  016378  6EF8               	movwf	tblptru,c
  9668  01637A                     	endif
  9669  01637A  C11B  FFD9         	movff	strcpy@cp,fsr2l
  9670  01637E  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
  9671  016382  0008               	tblrd		*
  9672  016384  CFF5 FFDF          	movff	tablat,indf2
  9673  016388  50DF               	movf	indf2,w,c
  9674  01638A  B4D8               	btfsc	status,2,c
  9675  01638C  0012               	return	
  9676  01638E  D7EA               	goto	l1980
  9677  016390                     __end_of_strcpy:
  9678                           	opt stack 0
  9679                           tblptru	equ	0xFF8
  9680                           tblptrh	equ	0xFF7
  9681                           tblptrl	equ	0xFF6
  9682                           tablat	equ	0xFF5
  9683                           intcon	equ	0xFF2
  9684                           indf0	equ	0xFEF
  9685                           postinc0	equ	0xFEE
  9686                           fsr0h	equ	0xFEA
  9687                           fsr0l	equ	0xFE9
  9688                           wreg	equ	0xFE8
  9689                           indf1	equ	0xFE7
  9690                           postdec1	equ	0xFE5
  9691                           fsr1h	equ	0xFE2
  9692                           fsr1l	equ	0xFE1
  9693                           indf2	equ	0xFDF
  9694                           postinc2	equ	0xFDE
  9695                           fsr2h	equ	0xFDA
  9696                           fsr2l	equ	0xFD9
  9697                           status	equ	0xFD8
  9698                           
  9699 ;; *************** function _getDeviceID *****************
  9700 ;; Defined at:
  9701 ;;		line 4 in file "device_IDs.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;		None
  9704 ;; Auto vars:     Size  Location     Type
  9705 ;;		None
  9706 ;; Return value:  Size  Location     Type
  9707 ;;                  2   34[BANK1 ] unsigned int 
  9708 ;; Registers used:
  9709 ;;		wreg, status,2, status,0, cstack
  9710 ;; Tracked objects:
  9711 ;;		On entry : 0/0
  9712 ;;		On exit  : 0/0
  9713 ;;		Unchanged: 0/0
  9714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9715 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9718 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9719 ;;Total ram usage:        2 bytes
  9720 ;; Hardware stack levels used:    1
  9721 ;; Hardware stack levels required when called:   16
  9722 ;; This function calls:
  9723 ;;		_FLASH_ReadWord
  9724 ;; This function is called by:
  9725 ;;		_ringBufferLUT
  9726 ;; This function uses a non-reentrant model
  9727 ;;
  9728                           
  9729                           	psect	text16
  9730  01660E                     __ptext16:
  9731                           	opt stack 0
  9732  01660E                     _getDeviceID:
  9733                           	opt stack 12
  9734                           
  9735                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
  9736                           
  9737                           ;incstack = 0
  9738  01660E  0EFE               	movlw	254
  9739  016610  0101               	movlb	1	; () banked
  9740  016612  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
  9741  016614  0EFF               	movlw	255
  9742  016616  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
  9743  016618  0E3F               	movlw	63
  9744  01661A  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
  9745  01661C  0E00               	movlw	0
  9746  01661E  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
  9747  016620  ECF2  F0B0         	call	_FLASH_ReadWord	;wreg free
  9748  016624  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
  9749  016628  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
  9750  01662C  0012               	return	
  9751  01662E                     __end_of_getDeviceID:
  9752                           	opt stack 0
  9753                           tblptru	equ	0xFF8
  9754                           tblptrh	equ	0xFF7
  9755                           tblptrl	equ	0xFF6
  9756                           tablat	equ	0xFF5
  9757                           intcon	equ	0xFF2
  9758                           indf0	equ	0xFEF
  9759                           postinc0	equ	0xFEE
  9760                           fsr0h	equ	0xFEA
  9761                           fsr0l	equ	0xFE9
  9762                           wreg	equ	0xFE8
  9763                           indf1	equ	0xFE7
  9764                           postdec1	equ	0xFE5
  9765                           fsr1h	equ	0xFE2
  9766                           fsr1l	equ	0xFE1
  9767                           indf2	equ	0xFDF
  9768                           postinc2	equ	0xFDE
  9769                           fsr2h	equ	0xFDA
  9770                           fsr2l	equ	0xFD9
  9771                           status	equ	0xFD8
  9772                           
  9773 ;; *************** function _FLASH_ReadWord *****************
  9774 ;; Defined at:
  9775 ;;		line 71 in file "mcc_generated_files/memory.c"
  9776 ;; Parameters:    Size  Location     Type
  9777 ;;  flashAddr       4   27[BANK1 ] unsigned long 
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;		None
  9780 ;; Return value:  Size  Location     Type
  9781 ;;                  2   27[BANK1 ] unsigned int 
  9782 ;; Registers used:
  9783 ;;		wreg, status,2, status,0, cstack
  9784 ;; Tracked objects:
  9785 ;;		On entry : 0/0
  9786 ;;		On exit  : 0/0
  9787 ;;		Unchanged: 0/0
  9788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9789 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9791 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9792 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9793 ;;Total ram usage:        7 bytes
  9794 ;; Hardware stack levels used:    1
  9795 ;; Hardware stack levels required when called:   15
  9796 ;; This function calls:
  9797 ;;		_FLASH_ReadByte
  9798 ;; This function is called by:
  9799 ;;		_getDeviceID
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803                           	psect	text17
  9804  0161E4                     __ptext17:
  9805                           	opt stack 0
  9806  0161E4                     _FLASH_ReadWord:
  9807                           	opt stack 12
  9808                           
  9809                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
  9810                           
  9811                           ;incstack = 0
  9812  0161E4  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
  9813  0161E8  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
  9814  0161EC  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
  9815  0161F0  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
  9816  0161F4  EC50  F0B3         	call	_FLASH_ReadByte	;wreg free
  9817  0161F8  0101               	movlb	1	; () banked
  9818  0161FA  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
  9819  0161FC  0E01               	movlw	1
  9820  0161FE  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
  9821  016200  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
  9822  016202  0E00               	movlw	0
  9823  016204  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
  9824  016206  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
  9825  016208  0E00               	movlw	0
  9826  01620A  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
  9827  01620C  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
  9828  01620E  0E00               	movlw	0
  9829  016210  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
  9830  016212  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
  9831  016214  EC50  F0B3         	call	_FLASH_ReadByte	;wreg free
  9832  016218  0101               	movlb	1	; () banked
  9833  01621A  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
  9834  01621C  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
  9835  01621E  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
  9836  016220  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
  9837  016224  0012               	return	
  9838  016226                     __end_of_FLASH_ReadWord:
  9839                           	opt stack 0
  9840                           tblptru	equ	0xFF8
  9841                           tblptrh	equ	0xFF7
  9842                           tblptrl	equ	0xFF6
  9843                           tablat	equ	0xFF5
  9844                           intcon	equ	0xFF2
  9845                           indf0	equ	0xFEF
  9846                           postinc0	equ	0xFEE
  9847                           fsr0h	equ	0xFEA
  9848                           fsr0l	equ	0xFE9
  9849                           wreg	equ	0xFE8
  9850                           indf1	equ	0xFE7
  9851                           postdec1	equ	0xFE5
  9852                           fsr1h	equ	0xFE2
  9853                           fsr1l	equ	0xFE1
  9854                           indf2	equ	0xFDF
  9855                           postinc2	equ	0xFDE
  9856                           fsr2h	equ	0xFDA
  9857                           fsr2l	equ	0xFD9
  9858                           status	equ	0xFD8
  9859                           
  9860 ;; *************** function _FLASH_ReadByte *****************
  9861 ;; Defined at:
  9862 ;;		line 59 in file "mcc_generated_files/memory.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;  flashAddr       4   23[BANK1 ] unsigned long 
  9865 ;; Auto vars:     Size  Location     Type
  9866 ;;		None
  9867 ;; Return value:  Size  Location     Type
  9868 ;;                  1    wreg      unsigned char 
  9869 ;; Registers used:
  9870 ;;		wreg, status,2
  9871 ;; Tracked objects:
  9872 ;;		On entry : 0/0
  9873 ;;		On exit  : 0/0
  9874 ;;		Unchanged: 0/0
  9875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9876 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9879 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9880 ;;Total ram usage:        4 bytes
  9881 ;; Hardware stack levels used:    1
  9882 ;; Hardware stack levels required when called:   14
  9883 ;; This function calls:
  9884 ;;		Nothing
  9885 ;; This function is called by:
  9886 ;;		_FLASH_ReadWord
  9887 ;;		_FLASH_WriteByte
  9888 ;; This function uses a non-reentrant model
  9889 ;;
  9890                           
  9891                           	psect	text18
  9892  0166A0                     __ptext18:
  9893                           	opt stack 0
  9894  0166A0                     _FLASH_ReadByte:
  9895                           	opt stack 12
  9896                           
  9897                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
  9898                           
  9899                           ; BSR set to: 1
  9900                           ;incstack = 0
  9901  0166A0  5077               	movf	3959,w,c	;volsfr
  9902  0166A2  0B3F               	andlw	-193
  9903  0166A4  0980               	iorlw	128
  9904  0166A6  6E77               	movwf	3959,c	;volsfr
  9905                           
  9906                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
  9907  0166A8  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
  9908                           
  9909                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
  9910  0166AC  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
  9911                           
  9912                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
  9913  0166B0  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
  9914  0166B4  0008               	tblrd		*	;# 
  9915                           
  9916                           ;memory.c: 68: return (TABLAT);
  9917  0166B6  50F5               	movf	tablat,w,c	;volatile
  9918  0166B8  0012               	return	
  9919  0166BA                     __end_of_FLASH_ReadByte:
  9920                           	opt stack 0
  9921                           tblptru	equ	0xFF8
  9922                           tblptrh	equ	0xFF7
  9923                           tblptrl	equ	0xFF6
  9924                           tablat	equ	0xFF5
  9925                           intcon	equ	0xFF2
  9926                           indf0	equ	0xFEF
  9927                           postinc0	equ	0xFEE
  9928                           fsr0h	equ	0xFEA
  9929                           fsr0l	equ	0xFE9
  9930                           wreg	equ	0xFE8
  9931                           indf1	equ	0xFE7
  9932                           postdec1	equ	0xFE5
  9933                           fsr1h	equ	0xFE2
  9934                           fsr1l	equ	0xFE1
  9935                           indf2	equ	0xFDF
  9936                           postinc2	equ	0xFDE
  9937                           fsr2h	equ	0xFDA
  9938                           fsr2l	equ	0xFD9
  9939                           status	equ	0xFD8
  9940                           
  9941 ;; *************** function _atoi *****************
  9942 ;; Defined at:
  9943 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  9944 ;; Parameters:    Size  Location     Type
  9945 ;;  s               2   43[BANK1 ] PTR const unsigned char 
  9946 ;;		 -> ringBufferLUT@arg_buff(3), 
  9947 ;; Auto vars:     Size  Location     Type
  9948 ;;  a               2   48[BANK1 ] int 
  9949 ;;  sign            1   47[BANK1 ] unsigned char 
  9950 ;; Return value:  Size  Location     Type
  9951 ;;                  2   43[BANK1 ] int 
  9952 ;; Registers used:
  9953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9954 ;; Tracked objects:
  9955 ;;		On entry : 0/0
  9956 ;;		On exit  : 0/0
  9957 ;;		Unchanged: 0/0
  9958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9959 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9960 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9961 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9962 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9963 ;;Total ram usage:        7 bytes
  9964 ;; Hardware stack levels used:    1
  9965 ;; Hardware stack levels required when called:   15
  9966 ;; This function calls:
  9967 ;;		___wmul
  9968 ;;		_isdigit
  9969 ;; This function is called by:
  9970 ;;		_ringBufferLUT
  9971 ;; This function uses a non-reentrant model
  9972 ;;
  9973                           
  9974                           	psect	text19
  9975  014FEA                     __ptext19:
  9976                           	opt stack 0
  9977  014FEA                     _atoi:
  9978                           	opt stack 13
  9979                           
  9980                           ;incstack = 0
  9981  014FEA  D003               	goto	l1484
  9982  014FEC  0101               	movlb	1	; () banked
  9983  014FEE  4B2B               	infsnz	atoi@s& (0+255),f,b
  9984  014FF0  2B2C               	incf	(atoi@s+1)& (0+255),f,b
  9985  014FF2                     l1484:
  9986                           
  9987                           ; BSR set to: 1
  9988  014FF2  C12B  FFD9         	movff	atoi@s,fsr2l
  9989  014FF6  C12C  FFDA         	movff	atoi@s+1,fsr2h
  9990  014FFA  0E20               	movlw	32
  9991  014FFC  18DE               	xorwf	postinc2,w,c
  9992  014FFE  B4D8               	btfsc	status,2,c
  9993  015000  D7F5               	goto	l1485
  9994  015002  C12B  FFD9         	movff	atoi@s,fsr2l
  9995  015006  C12C  FFDA         	movff	atoi@s+1,fsr2h
  9996  01500A  0E09               	movlw	9
  9997  01500C  18DE               	xorwf	postinc2,w,c
  9998  01500E  B4D8               	btfsc	status,2,c
  9999  015010  D7ED               	goto	l1485
 10000  015012  0E00               	movlw	0
 10001  015014  0101               	movlb	1	; () banked
 10002  015016  6F31               	movwf	(atoi@a+1)& (0+255),b
 10003  015018  0E00               	movlw	0
 10004  01501A  6F30               	movwf	atoi@a& (0+255),b
 10005  01501C  0E00               	movlw	0
 10006  01501E  6F2F               	movwf	atoi@sign& (0+255),b
 10007                           
 10008                           ; BSR set to: 1
 10009  015020  C12B  FFD9         	movff	atoi@s,fsr2l
 10010  015024  C12C  FFDA         	movff	atoi@s+1,fsr2h
 10011  015028  0E2D               	movlw	45
 10012  01502A  18DE               	xorwf	postinc2,w,c
 10013  01502C  A4D8               	btfss	status,2,c
 10014  01502E  D002               	goto	l1487
 10015                           
 10016                           ; BSR set to: 1
 10017  015030  2B2F               	incf	atoi@sign& (0+255),f,b
 10018  015032  D026               	goto	l10082
 10019  015034                     l1487:
 10020                           
 10021                           ; BSR set to: 1
 10022                           
 10023                           ; BSR set to: 1
 10024  015034  C12B  FFD9         	movff	atoi@s,fsr2l
 10025  015038  C12C  FFDA         	movff	atoi@s+1,fsr2h
 10026  01503C  0E2B               	movlw	43
 10027  01503E  18DE               	xorwf	postinc2,w,c
 10028  015040  A4D8               	btfss	status,2,c
 10029  015042  D020               	goto	l1490
 10030  015044  D01D               	goto	l10082
 10031  015046                     
 10032                           ; BSR set to: 1
 10033  015046  C130  F125         	movff	atoi@a,___wmul@multiplier
 10034  01504A  C131  F126         	movff	atoi@a+1,___wmul@multiplier+1
 10035  01504E  0E00               	movlw	0
 10036  015050  0101               	movlb	1	; () banked
 10037  015052  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10038  015054  0E0A               	movlw	10
 10039  015056  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10040  015058  EC5D  F0B2         	call	___wmul	;wreg free
 10041  01505C  C12B  FFD9         	movff	atoi@s,fsr2l
 10042  015060  C12C  FFDA         	movff	atoi@s+1,fsr2h
 10043  015064  50DF               	movf	indf2,w,c
 10044  015066  0101               	movlb	1	; () banked
 10045  015068  6F2D               	movwf	??_atoi& (0+255),b
 10046  01506A  6B2E               	clrf	(??_atoi+1)& (0+255),b
 10047  01506C  5125               	movf	?___wmul& (0+255),w,b
 10048  01506E  272D               	addwf	??_atoi& (0+255),f,b
 10049  015070  5126               	movf	(?___wmul+1)& (0+255),w,b
 10050  015072  232E               	addwfc	(??_atoi+1)& (0+255),f,b
 10051  015074  0ED0               	movlw	208
 10052  015076  252D               	addwf	??_atoi& (0+255),w,b
 10053  015078  6F30               	movwf	atoi@a& (0+255),b
 10054  01507A  0EFF               	movlw	255
 10055  01507C  212E               	addwfc	(??_atoi+1)& (0+255),w,b
 10056  01507E  6F31               	movwf	(atoi@a+1)& (0+255),b
 10057  015080                     l10082:
 10058                           
 10059                           ; BSR set to: 1
 10060  015080  4B2B               	infsnz	atoi@s& (0+255),f,b
 10061  015082  2B2C               	incf	(atoi@s+1)& (0+255),f,b
 10062  015084                     l1490:
 10063                           
 10064                           ; BSR set to: 1
 10065                           
 10066                           ; BSR set to: 1
 10067  015084  C12B  FFD9         	movff	atoi@s,fsr2l
 10068  015088  C12C  FFDA         	movff	atoi@s+1,fsr2h
 10069  01508C  50DF               	movf	indf2,w,c
 10070  01508E  ECF6  F0B2         	call	_isdigit
 10071  015092  B0D8               	btfsc	status,0,c
 10072  015094  D7D8               	goto	l1491
 10073  015096  0101               	movlb	1	; () banked
 10074  015098  512F               	movf	atoi@sign& (0+255),w,b
 10075  01509A  B4D8               	btfsc	status,2,c
 10076  01509C  D00D               	goto	l1493
 10077                           
 10078                           ; BSR set to: 1
 10079  01509E  C130  F12D         	movff	atoi@a,??_atoi
 10080  0150A2  C131  F12E         	movff	atoi@a+1,??_atoi+1
 10081  0150A6  1F2D               	comf	??_atoi& (0+255),f,b
 10082  0150A8  1F2E               	comf	(??_atoi+1)& (0+255),f,b
 10083  0150AA  4B2D               	infsnz	??_atoi& (0+255),f,b
 10084  0150AC  2B2E               	incf	(??_atoi+1)& (0+255),f,b
 10085  0150AE  C12D  F12B         	movff	??_atoi,?_atoi
 10086  0150B2  C12E  F12C         	movff	??_atoi+1,?_atoi+1
 10087  0150B6  0012               	return	
 10088  0150B8                     l1493:
 10089                           
 10090                           ; BSR set to: 1
 10091  0150B8  C130  F12B         	movff	atoi@a,?_atoi
 10092  0150BC  C131  F12C         	movff	atoi@a+1,?_atoi+1
 10093                           
 10094                           ; BSR set to: 1
 10095  0150C0  0012               	return		;funcret
 10096  0150C2                     __end_of_atoi:
 10097                           	opt stack 0
 10098                           tblptru	equ	0xFF8
 10099                           tblptrh	equ	0xFF7
 10100                           tblptrl	equ	0xFF6
 10101                           tablat	equ	0xFF5
 10102                           intcon	equ	0xFF2
 10103                           indf0	equ	0xFEF
 10104                           postinc0	equ	0xFEE
 10105                           fsr0h	equ	0xFEA
 10106                           fsr0l	equ	0xFE9
 10107                           wreg	equ	0xFE8
 10108                           indf1	equ	0xFE7
 10109                           postdec1	equ	0xFE5
 10110                           fsr1h	equ	0xFE2
 10111                           fsr1l	equ	0xFE1
 10112                           indf2	equ	0xFDF
 10113                           postinc2	equ	0xFDE
 10114                           fsr2h	equ	0xFDA
 10115                           fsr2l	equ	0xFD9
 10116                           status	equ	0xFD8
 10117                           
 10118 ;; *************** function ___ftdiv *****************
 10119 ;; Defined at:
 10120 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 10121 ;; Parameters:    Size  Location     Type
 10122 ;;  f1              3   55[BANK1 ] float 
 10123 ;;  f2              3   58[BANK1 ] float 
 10124 ;; Auto vars:     Size  Location     Type
 10125 ;;  f3              3   65[BANK1 ] float 
 10126 ;;  sign            1   69[BANK1 ] unsigned char 
 10127 ;;  exp             1   68[BANK1 ] unsigned char 
 10128 ;;  cntr            1   64[BANK1 ] unsigned char 
 10129 ;; Return value:  Size  Location     Type
 10130 ;;                  3   55[BANK1 ] float 
 10131 ;; Registers used:
 10132 ;;		wreg, status,2, status,0, cstack
 10133 ;; Tracked objects:
 10134 ;;		On entry : 0/0
 10135 ;;		On exit  : 0/0
 10136 ;;		Unchanged: 0/0
 10137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10138 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10139 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10140 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10141 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10142 ;;Total ram usage:       15 bytes
 10143 ;; Hardware stack levels used:    1
 10144 ;; Hardware stack levels required when called:   15
 10145 ;; This function calls:
 10146 ;;		___ftpack
 10147 ;; This function is called by:
 10148 ;;		_ringBufferLUT
 10149 ;; This function uses a non-reentrant model
 10150 ;;
 10151                           
 10152                           	psect	text20
 10153  014C64                     __ptext20:
 10154                           	opt stack 0
 10155  014C64                     ___ftdiv:
 10156                           	opt stack 13
 10157                           
 10158                           ; BSR set to: 1
 10159                           ;incstack = 0
 10160  014C64  C139  F13D         	movff	___ftdiv@f1+2,??___ftdiv
 10161  014C68  0101               	movlb	1	; () banked
 10162  014C6A  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
 10163  014C6C  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
 10164  014C6E  3538               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 10165  014C70  373D               	rlcf	??___ftdiv& (0+255),f,b
 10166  014C72  E301               	bnc	u11621
 10167  014C74  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
 10168  014C76                     u11621:
 10169  014C76  513D               	movf	??___ftdiv& (0+255),w,b
 10170  014C78  6F44               	movwf	___ftdiv@exp& (0+255),b
 10171  014C7A  5144               	movf	___ftdiv@exp& (0+255),w,b
 10172  014C7C  A4D8               	btfss	status,2,c
 10173  014C7E  D007               	goto	l1643
 10174                           
 10175                           ; BSR set to: 1
 10176  014C80  0E00               	movlw	0
 10177  014C82  6F37               	movwf	?___ftdiv& (0+255),b
 10178  014C84  0E00               	movlw	0
 10179  014C86  6F38               	movwf	(?___ftdiv+1)& (0+255),b
 10180  014C88  0E00               	movlw	0
 10181  014C8A  6F39               	movwf	(?___ftdiv+2)& (0+255),b
 10182                           
 10183                           ; BSR set to: 1
 10184  014C8C  0012               	return	
 10185  014C8E                     l1643:
 10186                           
 10187                           ; BSR set to: 1
 10188                           
 10189                           ; BSR set to: 1
 10190  014C8E  C13C  F13D         	movff	___ftdiv@f2+2,??___ftdiv
 10191  014C92  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
 10192  014C94  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
 10193  014C96  353B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 10194  014C98  373D               	rlcf	??___ftdiv& (0+255),f,b
 10195  014C9A  E301               	bnc	u11641
 10196  014C9C  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
 10197  014C9E                     u11641:
 10198  014C9E  513D               	movf	??___ftdiv& (0+255),w,b
 10199  014CA0  6F45               	movwf	___ftdiv@sign& (0+255),b
 10200  014CA2  5145               	movf	___ftdiv@sign& (0+255),w,b
 10201  014CA4  A4D8               	btfss	status,2,c
 10202  014CA6  D007               	goto	l1645
 10203                           
 10204                           ; BSR set to: 1
 10205  014CA8  0E00               	movlw	0
 10206  014CAA  6F37               	movwf	?___ftdiv& (0+255),b
 10207  014CAC  0E00               	movlw	0
 10208  014CAE  6F38               	movwf	(?___ftdiv+1)& (0+255),b
 10209  014CB0  0E00               	movlw	0
 10210  014CB2  6F39               	movwf	(?___ftdiv+2)& (0+255),b
 10211                           
 10212                           ; BSR set to: 1
 10213  014CB4  0012               	return	
 10214  014CB6                     l1645:
 10215                           
 10216                           ; BSR set to: 1
 10217                           
 10218                           ; BSR set to: 1
 10219  014CB6  0E00               	movlw	0
 10220  014CB8  6F41               	movwf	___ftdiv@f3& (0+255),b
 10221  014CBA  0E00               	movlw	0
 10222  014CBC  6F42               	movwf	(___ftdiv@f3+1)& (0+255),b
 10223  014CBE  0E00               	movlw	0
 10224  014CC0  6F43               	movwf	(___ftdiv@f3+2)& (0+255),b
 10225                           
 10226                           ; BSR set to: 1
 10227  014CC2  5145               	movf	___ftdiv@sign& (0+255),w,b
 10228  014CC4  0F89               	addlw	137
 10229  014CC6  5F44               	subwf	___ftdiv@exp& (0+255),f,b
 10230                           
 10231                           ; BSR set to: 1
 10232  014CC8  C139  F145         	movff	___ftdiv@f1+2,___ftdiv@sign
 10233                           
 10234                           ; BSR set to: 1
 10235  014CCC  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 10236  014CCE  1B45               	xorwf	___ftdiv@sign& (0+255),f,b
 10237                           
 10238                           ; BSR set to: 1
 10239  014CD0  0E80               	movlw	128
 10240  014CD2  1745               	andwf	___ftdiv@sign& (0+255),f,b
 10241                           
 10242                           ; BSR set to: 1
 10243  014CD4  8F38               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 10244                           
 10245                           ; BSR set to: 1
 10246  014CD6  0EFF               	movlw	255
 10247  014CD8  1737               	andwf	___ftdiv@f1& (0+255),f,b
 10248  014CDA  0EFF               	movlw	255
 10249  014CDC  1738               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 10250  014CDE  0E00               	movlw	0
 10251  014CE0  1739               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 10252                           
 10253                           ; BSR set to: 1
 10254  014CE2  8F3B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 10255                           
 10256                           ; BSR set to: 1
 10257  014CE4  0EFF               	movlw	255
 10258  014CE6  173A               	andwf	___ftdiv@f2& (0+255),f,b
 10259  014CE8  0EFF               	movlw	255
 10260  014CEA  173B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 10261  014CEC  0E00               	movlw	0
 10262  014CEE  173C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 10263                           
 10264                           ; BSR set to: 1
 10265  014CF0  0E18               	movlw	24
 10266  014CF2  6F40               	movwf	___ftdiv@cntr& (0+255),b
 10267  014CF4                     
 10268                           ; BSR set to: 1
 10269                           
 10270                           ; BSR set to: 1
 10271  014CF4  90D8               	bcf	status,0,c
 10272  014CF6  3741               	rlcf	___ftdiv@f3& (0+255),f,b
 10273  014CF8  3742               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 10274  014CFA  3743               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 10275                           
 10276                           ; BSR set to: 1
 10277  014CFC  513A               	movf	___ftdiv@f2& (0+255),w,b
 10278  014CFE  5D37               	subwf	___ftdiv@f1& (0+255),w,b
 10279  014D00  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 10280  014D02  5938               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 10281  014D04  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 10282  014D06  5939               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 10283  014D08  A0D8               	btfss	status,0,c
 10284  014D0A  D007               	goto	l1647
 10285                           
 10286                           ; BSR set to: 1
 10287  014D0C  513A               	movf	___ftdiv@f2& (0+255),w,b
 10288  014D0E  5F37               	subwf	___ftdiv@f1& (0+255),f,b
 10289  014D10  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 10290  014D12  5B38               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 10291  014D14  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 10292  014D16  5B39               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 10293                           
 10294                           ; BSR set to: 1
 10295  014D18  8141               	bsf	___ftdiv@f3& (0+255),0,b
 10296  014D1A                     l1647:
 10297                           
 10298                           ; BSR set to: 1
 10299  014D1A  90D8               	bcf	status,0,c
 10300  014D1C  3737               	rlcf	___ftdiv@f1& (0+255),f,b
 10301  014D1E  3738               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 10302  014D20  3739               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 10303                           
 10304                           ; BSR set to: 1
 10305  014D22  2F40               	decfsz	___ftdiv@cntr& (0+255),f,b
 10306  014D24  D7E7               	goto	l1646
 10307                           
 10308                           ; BSR set to: 1
 10309                           
 10310                           ; BSR set to: 1
 10311  014D26  C141  F117         	movff	___ftdiv@f3,___ftpack@arg
 10312  014D2A  C142  F118         	movff	___ftdiv@f3+1,___ftpack@arg+1
 10313  014D2E  C143  F119         	movff	___ftdiv@f3+2,___ftpack@arg+2
 10314  014D32  C144  F11A         	movff	___ftdiv@exp,___ftpack@exp
 10315  014D36  C145  F11B         	movff	___ftdiv@sign,___ftpack@sign
 10316  014D3A  ECC7  F0A8         	call	___ftpack	;wreg free
 10317  014D3E  C117  F137         	movff	?___ftpack,?___ftdiv
 10318  014D42  C118  F138         	movff	?___ftpack+1,?___ftdiv+1
 10319  014D46  C119  F139         	movff	?___ftpack+2,?___ftdiv+2
 10320  014D4A  0012               	return	
 10321  014D4C                     __end_of___ftdiv:
 10322                           	opt stack 0
 10323                           tblptru	equ	0xFF8
 10324                           tblptrh	equ	0xFF7
 10325                           tblptrl	equ	0xFF6
 10326                           tablat	equ	0xFF5
 10327                           intcon	equ	0xFF2
 10328                           indf0	equ	0xFEF
 10329                           postinc0	equ	0xFEE
 10330                           fsr0h	equ	0xFEA
 10331                           fsr0l	equ	0xFE9
 10332                           wreg	equ	0xFE8
 10333                           indf1	equ	0xFE7
 10334                           postdec1	equ	0xFE5
 10335                           fsr1h	equ	0xFE2
 10336                           fsr1l	equ	0xFE1
 10337                           indf2	equ	0xFDF
 10338                           postinc2	equ	0xFDE
 10339                           fsr2h	equ	0xFDA
 10340                           fsr2l	equ	0xFD9
 10341                           status	equ	0xFD8
 10342                           
 10343 ;; *************** function ___awtoft *****************
 10344 ;; Defined at:
 10345 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 10346 ;; Parameters:    Size  Location     Type
 10347 ;;  c               2   31[BANK1 ] int 
 10348 ;; Auto vars:     Size  Location     Type
 10349 ;;  sign            1   34[BANK1 ] unsigned char 
 10350 ;; Return value:  Size  Location     Type
 10351 ;;                  3   31[BANK1 ] float 
 10352 ;; Registers used:
 10353 ;;		wreg, status,2, status,0, cstack
 10354 ;; Tracked objects:
 10355 ;;		On entry : 0/0
 10356 ;;		On exit  : 0/0
 10357 ;;		Unchanged: 0/0
 10358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10359 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10360 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10362 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10363 ;;Total ram usage:        4 bytes
 10364 ;; Hardware stack levels used:    1
 10365 ;; Hardware stack levels required when called:   15
 10366 ;; This function calls:
 10367 ;;		___ftpack
 10368 ;; This function is called by:
 10369 ;;		_ringBufferLUT
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           	psect	text21
 10374  0162E8                     __ptext21:
 10375                           	opt stack 0
 10376  0162E8                     ___awtoft:
 10377                           	opt stack 13
 10378                           
 10379                           ;incstack = 0
 10380  0162E8  0E00               	movlw	0
 10381  0162EA  0101               	movlb	1	; () banked
 10382  0162EC  6F22               	movwf	___awtoft@sign& (0+255),b
 10383                           
 10384                           ; BSR set to: 1
 10385  0162EE  AF20               	btfss	(___awtoft@c+1)& (0+255),7,b
 10386  0162F0  D006               	goto	l1531
 10387                           
 10388                           ; BSR set to: 1
 10389  0162F2  6D1F               	negf	___awtoft@c& (0+255),b
 10390  0162F4  1F20               	comf	(___awtoft@c+1)& (0+255),f,b
 10391  0162F6  B0D8               	btfsc	status,0,c
 10392  0162F8  2B20               	incf	(___awtoft@c+1)& (0+255),f,b
 10393                           
 10394                           ; BSR set to: 1
 10395  0162FA  0E01               	movlw	1
 10396  0162FC  6F22               	movwf	___awtoft@sign& (0+255),b
 10397  0162FE                     l1531:
 10398                           
 10399                           ; BSR set to: 1
 10400                           
 10401                           ; BSR set to: 1
 10402  0162FE  C11F  F117         	movff	___awtoft@c,___ftpack@arg
 10403  016302  C120  F118         	movff	___awtoft@c+1,___ftpack@arg+1
 10404  016306  6B19               	clrf	(___ftpack@arg+2)& (0+255),b
 10405  016308  0E8E               	movlw	142
 10406  01630A  6F1A               	movwf	___ftpack@exp& (0+255),b
 10407  01630C  C122  F11B         	movff	___awtoft@sign,___ftpack@sign
 10408  016310  ECC7  F0A8         	call	___ftpack	;wreg free
 10409  016314  C117  F11F         	movff	?___ftpack,?___awtoft
 10410  016318  C118  F120         	movff	?___ftpack+1,?___awtoft+1
 10411  01631C  C119  F121         	movff	?___ftpack+2,?___awtoft+2
 10412  016320  0012               	return	
 10413  016322                     __end_of___awtoft:
 10414                           	opt stack 0
 10415                           tblptru	equ	0xFF8
 10416                           tblptrh	equ	0xFF7
 10417                           tblptrl	equ	0xFF6
 10418                           tablat	equ	0xFF5
 10419                           intcon	equ	0xFF2
 10420                           indf0	equ	0xFEF
 10421                           postinc0	equ	0xFEE
 10422                           fsr0h	equ	0xFEA
 10423                           fsr0l	equ	0xFE9
 10424                           wreg	equ	0xFE8
 10425                           indf1	equ	0xFE7
 10426                           postdec1	equ	0xFE5
 10427                           fsr1h	equ	0xFE2
 10428                           fsr1l	equ	0xFE1
 10429                           indf2	equ	0xFDF
 10430                           postinc2	equ	0xFDE
 10431                           fsr2h	equ	0xFDA
 10432                           fsr2l	equ	0xFD9
 10433                           status	equ	0xFD8
 10434                           
 10435 ;; *************** function _EUSART2_Read *****************
 10436 ;; Defined at:
 10437 ;;		line 130 in file "mcc_generated_files/eusart2.c"
 10438 ;; Parameters:    Size  Location     Type
 10439 ;;		None
 10440 ;; Auto vars:     Size  Location     Type
 10441 ;;  readValue       1   23[BANK1 ] unsigned char 
 10442 ;; Return value:  Size  Location     Type
 10443 ;;                  1    wreg      unsigned char 
 10444 ;; Registers used:
 10445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10446 ;; Tracked objects:
 10447 ;;		On entry : 0/0
 10448 ;;		On exit  : 0/0
 10449 ;;		Unchanged: 0/0
 10450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10452 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10454 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10455 ;;Total ram usage:        1 bytes
 10456 ;; Hardware stack levels used:    1
 10457 ;; Hardware stack levels required when called:   14
 10458 ;; This function calls:
 10459 ;;		Nothing
 10460 ;; This function is called by:
 10461 ;;		_terminal_ringBufferPull
 10462 ;;		_getch
 10463 ;; This function uses a non-reentrant model
 10464 ;;
 10465                           
 10466                           	psect	text22
 10467  0161A0                     __ptext22:
 10468                           	opt stack 0
 10469  0161A0                     _EUSART2_Read:
 10470                           	opt stack 15
 10471                           
 10472                           ;eusart2.c: 132: uint8_t readValue = 0;
 10473                           
 10474                           ;incstack = 0
 10475  0161A0  0E00               	movlw	0
 10476  0161A2  0101               	movlb	1	; () banked
 10477  0161A4  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 10478                           
 10479                           ;eusart2.c: 134: while(0 == eusart2RxCount)
 10480  0161A6  D001               	goto	l367
 10481  0161A8                     l368:
 10482                           
 10483                           ; BSR set to: 1
 10484  0161A8  0004               	clrwdt		;# 
 10485  0161AA                     l367:
 10486  0161AA  0101               	movlb	1	; () banked
 10487  0161AC  51DA               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 10488  0161AE  B4D8               	btfsc	status,2,c
 10489  0161B0  D7FB               	goto	l368
 10490                           
 10491                           ; BSR set to: 1
 10492                           ;eusart2.c: 137: }
 10493                           ;eusart2.c: 139: readValue = eusart2RxBuffer[eusart2RxTail++];
 10494                           
 10495                           ; BSR set to: 1
 10496  0161B2  51DB               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 10497  0161B4  0D01               	mullw	1
 10498  0161B6  0E80               	movlw	low _eusart2RxBuffer
 10499  0161B8  24F3               	addwf	prodl,w,c
 10500  0161BA  6ED9               	movwf	fsr2l,c
 10501  0161BC  0E02               	movlw	high _eusart2RxBuffer
 10502  0161BE  20F4               	addwfc	prodh,w,c
 10503  0161C0  6EDA               	movwf	fsr2h,c
 10504  0161C2  50DF               	movf	indf2,w,c
 10505  0161C4  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 10506                           
 10507                           ; BSR set to: 1
 10508  0161C6  2BDB               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 10509                           
 10510                           ; BSR set to: 1
 10511                           ;eusart2.c: 140: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 10512  0161C8  0E3F               	movlw	63
 10513  0161CA  65DB               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 10514  0161CC  D002               	goto	l370
 10515                           
 10516                           ; BSR set to: 1
 10517                           ;eusart2.c: 141: {
 10518                           ;eusart2.c: 142: eusart2RxTail = 0;
 10519  0161CE  0E00               	movlw	0
 10520  0161D0  6FDB               	movwf	_eusart2RxTail& (0+255),b	;volatile
 10521  0161D2                     l370:
 10522                           
 10523                           ; BSR set to: 1
 10524                           ;eusart2.c: 143: }
 10525                           ;eusart2.c: 144: PIE3bits.RC2IE = 0;
 10526                           
 10527                           ; BSR set to: 1
 10528  0161D2  010E               	movlb	14	; () banked
 10529  0161D4  9F2C               	bcf	44,7,b	;volatile
 10530                           
 10531                           ; BSR set to: 14
 10532                           ;eusart2.c: 145: eusart2RxCount--;
 10533  0161D6  0101               	movlb	1	; () banked
 10534  0161D8  07DA               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 10535                           
 10536                           ; BSR set to: 1
 10537                           ;eusart2.c: 146: PIE3bits.RC2IE = 1;
 10538  0161DA  010E               	movlb	14	; () banked
 10539  0161DC  8F2C               	bsf	44,7,b	;volatile
 10540                           
 10541                           ; BSR set to: 14
 10542                           ;eusart2.c: 148: return readValue;
 10543  0161DE  0101               	movlb	1	; () banked
 10544  0161E0  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 10545  0161E2  0012               	return	
 10546  0161E4                     __end_of_EUSART2_Read:
 10547                           	opt stack 0
 10548                           tblptru	equ	0xFF8
 10549                           tblptrh	equ	0xFF7
 10550                           tblptrl	equ	0xFF6
 10551                           tablat	equ	0xFF5
 10552                           prodh	equ	0xFF4
 10553                           prodl	equ	0xFF3
 10554                           intcon	equ	0xFF2
 10555                           indf0	equ	0xFEF
 10556                           postinc0	equ	0xFEE
 10557                           fsr0h	equ	0xFEA
 10558                           fsr0l	equ	0xFE9
 10559                           wreg	equ	0xFE8
 10560                           indf1	equ	0xFE7
 10561                           postdec1	equ	0xFE5
 10562                           fsr1h	equ	0xFE2
 10563                           fsr1l	equ	0xFE1
 10564                           indf2	equ	0xFDF
 10565                           postinc2	equ	0xFDE
 10566                           fsr2h	equ	0xFDA
 10567                           fsr2l	equ	0xFD9
 10568                           status	equ	0xFD8
 10569                           
 10570 ;; *************** function _terminal_clearTerminal *****************
 10571 ;; Defined at:
 10572 ;;		line 80 in file "ring_buffer_interface.c"
 10573 ;; Parameters:    Size  Location     Type
 10574 ;;		None
 10575 ;; Auto vars:     Size  Location     Type
 10576 ;;		None
 10577 ;; Return value:  Size  Location     Type
 10578 ;;                  1    wreg      void 
 10579 ;; Registers used:
 10580 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10581 ;; Tracked objects:
 10582 ;;		On entry : 0/0
 10583 ;;		On exit  : 0/0
 10584 ;;		Unchanged: 0/0
 10585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10590 ;;Total ram usage:        0 bytes
 10591 ;; Hardware stack levels used:    1
 10592 ;; Hardware stack levels required when called:   18
 10593 ;; This function calls:
 10594 ;;		_printf
 10595 ;; This function is called by:
 10596 ;;		_main
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           
 10600                           	psect	text23
 10601  016712                     __ptext23:
 10602                           	opt stack 0
 10603  016712                     _terminal_clearTerminal:
 10604                           	opt stack 12
 10605                           
 10606                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 10607                           
 10608                           ; BSR set to: 1
 10609                           ;incstack = 0
 10610  016712  0EAF               	movlw	low STR_2
 10611  016714  0101               	movlb	1	; () banked
 10612  016716  6F64               	movwf	printf@f& (0+255),b
 10613  016718  0EFF               	movlw	high STR_2
 10614  01671A  6F65               	movwf	(printf@f+1)& (0+255),b
 10615  01671C  EC00  F080         	call	_printf	;wreg free
 10616  016720  0012               	return		;funcret
 10617  016722                     __end_of_terminal_clearTerminal:
 10618                           	opt stack 0
 10619                           tblptru	equ	0xFF8
 10620                           tblptrh	equ	0xFF7
 10621                           tblptrl	equ	0xFF6
 10622                           tablat	equ	0xFF5
 10623                           prodh	equ	0xFF4
 10624                           prodl	equ	0xFF3
 10625                           intcon	equ	0xFF2
 10626                           indf0	equ	0xFEF
 10627                           postinc0	equ	0xFEE
 10628                           fsr0h	equ	0xFEA
 10629                           fsr0l	equ	0xFE9
 10630                           wreg	equ	0xFE8
 10631                           indf1	equ	0xFE7
 10632                           postdec1	equ	0xFE5
 10633                           fsr1h	equ	0xFE2
 10634                           fsr1l	equ	0xFE1
 10635                           indf2	equ	0xFDF
 10636                           postinc2	equ	0xFDE
 10637                           fsr2h	equ	0xFDA
 10638                           fsr2l	equ	0xFD9
 10639                           status	equ	0xFD8
 10640                           
 10641 ;; *************** function _printf *****************
 10642 ;; Defined at:
 10643 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 10644 ;; Parameters:    Size  Location     Type
 10645 ;;  f               2  100[BANK1 ] PTR const unsigned char 
 10646 ;;		 -> STR_96(30), STR_95(23), STR_94(39), STR_93(37), 
 10647 ;;		 -> STR_92(33), STR_91(1565), STR_89(53), STR_87(58), 
 10648 ;;		 -> STR_85(71), STR_84(63), STR_83(37), STR_82(46), 
 10649 ;;		 -> STR_81(102), STR_80(86), STR_78(25), STR_76(42), 
 10650 ;;		 -> STR_74(41), STR_72(40), STR_70(56), STR_68(34), 
 10651 ;;		 -> STR_66(34), STR_64(32), STR_62(37), STR_60(56), 
 10652 ;;		 -> STR_58(34), STR_56(34), STR_54(35), STR_52(82), 
 10653 ;;		 -> STR_50(47), STR_49(17), STR_46(4), STR_45(5), 
 10654 ;;		 -> STR_43(4), STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), 
 10655 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
 10656 ;;		 -> STR_6(5), STR_5(3), STR_4(372), STR_3(4), 
 10657 ;;		 -> STR_2(5), STR_1(4), 
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;  idx             1  117[BANK1 ] unsigned char 
 10660 ;;  val             4  132[BANK1 ] unsigned long 
 10661 ;;  tmpval          4  128[BANK1 ] struct .
 10662 ;;  fval            3  136[BANK1 ] struct .
 10663 ;;  prec            2  139[BANK1 ] int 
 10664 ;;  exp             2  126[BANK1 ] int 
 10665 ;;  flag            2  124[BANK1 ] unsigned short 
 10666 ;;  ap              2  122[BANK1 ] PTR void [1]
 10667 ;;		 -> ?i2_printf(2), ?_printf(2), 
 10668 ;;  cp              2  120[BANK1 ] PTR const unsigned char 
 10669 ;;		 -> STR_100(7), printf@c(1), RAM(3561), TRIAC_Firing_Angle(3), 
 10670 ;;  len             2  118[BANK1 ] unsigned int 
 10671 ;;  width           2    0        int 
 10672 ;;  c               1  141[BANK1 ] char 
 10673 ;;  d               1    0        unsigned char 
 10674 ;; Return value:  Size  Location     Type
 10675 ;;                  2  100[BANK1 ] int 
 10676 ;; Registers used:
 10677 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10678 ;; Tracked objects:
 10679 ;;		On entry : 0/0
 10680 ;;		On exit  : 0/0
 10681 ;;		Unchanged: 0/0
 10682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10683 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10684 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10685 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10686 ;;      Totals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10687 ;;Total ram usage:       42 bytes
 10688 ;; Hardware stack levels used:    1
 10689 ;; Hardware stack levels required when called:   17
 10690 ;; This function calls:
 10691 ;;		___awdiv
 10692 ;;		___ftadd
 10693 ;;		___ftge
 10694 ;;		___ftmul
 10695 ;;		___ftneg
 10696 ;;		___ftsub
 10697 ;;		___fttol
 10698 ;;		___lldiv
 10699 ;;		___llmod
 10700 ;;		___lltoft
 10701 ;;		___wmul
 10702 ;;		__div_to_l_
 10703 ;;		__tdiv_to_l_
 10704 ;;		_fround
 10705 ;;		_isdigit
 10706 ;;		_putch
 10707 ;;		_scale
 10708 ;; This function is called by:
 10709 ;;		_terminal_clearTerminal
 10710 ;;		_terminal_setCursorHome
 10711 ;;		_terminal_textAttributes
 10712 ;;		_terminal_printNewline
 10713 ;;		_ringBufferLUT
 10714 ;;		_terminal_printResetMessage
 10715 ;;		_terminal_clearLine
 10716 ;;		_terminal_saveCursor
 10717 ;;		_terminal_returnCursor
 10718 ;; This function uses a non-reentrant model
 10719 ;;
 10720                           
 10721                           	psect	text24
 10722  010000                     __ptext24:
 10723                           	opt stack 0
 10724  010000                     _printf:
 10725                           	opt stack 11
 10726                           
 10727                           ;doprnt.c: 466: va_list ap;
 10728                           ;doprnt.c: 499: signed char c;
 10729                           ;doprnt.c: 501: int width;
 10730                           ;doprnt.c: 504: int prec;
 10731                           ;doprnt.c: 508: unsigned short flag;
 10732                           ;doprnt.c: 515: char d;
 10733                           ;doprnt.c: 516: double fval;
 10734                           ;doprnt.c: 517: int exp;
 10735                           ;doprnt.c: 523: union {
 10736                           ;doprnt.c: 524: unsigned long vd;
 10737                           ;doprnt.c: 525: double integ;
 10738                           ;doprnt.c: 526: } tmpval;
 10739                           ;doprnt.c: 528: unsigned long val;
 10740                           ;doprnt.c: 529: unsigned len;
 10741                           ;doprnt.c: 530: const char * cp;
 10742                           ;doprnt.c: 533: *ap = __va_start();
 10743                           
 10744                           ;incstack = 0
 10745  010000  0E66               	movlw	low (?_printf+2)
 10746  010002  0101               	movlb	1	; () banked
 10747  010004  6F7A               	movwf	printf@ap& (0+255),b
 10748  010006  0E01               	movlw	high (?_printf+2)
 10749  010008  6F7B               	movwf	(printf@ap+1)& (0+255),b
 10750                           
 10751                           ;doprnt.c: 536: while(c = *f++) {
 10752  01000A  EF3E  F085         	goto	u11070
 10753  01000E                     
 10754                           ; BSR set to: 1
 10755                           ;doprnt.c: 538: if(c != '%')
 10756                           
 10757                           ; BSR set to: 1
 10758  01000E  0E25               	movlw	37
 10759  010010  198D               	xorwf	printf@c& (0+255),w,b
 10760  010012  B4D8               	btfsc	status,2,c
 10761  010014  D005               	goto	l1190
 10762                           
 10763                           ; BSR set to: 1
 10764                           ;doprnt.c: 540: {
 10765                           ;doprnt.c: 541: (putch(c) );
 10766  010016  518D               	movf	printf@c& (0+255),w,b
 10767  010018  EC98  F0B3         	call	_putch
 10768                           
 10769                           ;doprnt.c: 542: continue;
 10770  01001C  EF3E  F085         	goto	u11070
 10771  010020                     l1190:
 10772                           
 10773                           ;doprnt.c: 543: }
 10774                           ;doprnt.c: 548: flag = 0;
 10775  010020  0E00               	movlw	0
 10776  010022  0101               	movlb	1	; () banked
 10777  010024  6F7D               	movwf	(printf@flag+1)& (0+255),b
 10778  010026  0E00               	movlw	0
 10779  010028  6F7C               	movwf	printf@flag& (0+255),b
 10780                           
 10781                           ; BSR set to: 1
 10782                           ;doprnt.c: 611: if(*f == '.') {
 10783  01002A  C164  FFF6         	movff	printf@f,tblptrl
 10784  01002E  C165  FFF7         	movff	printf@f+1,tblptrh
 10785  010032  0E00               	movlw	low (__mediumconst shr (0+16))
 10786  010034  6EF8               	movwf	tblptru,c
 10787  010036  0E0D               	movlw	(high __ramtop+-1)
 10788  010038  64F7               	cpfsgt	tblptrh,c
 10789  01003A  D003               	bra	u10577
 10790  01003C  0008               	tblrd		*
 10791  01003E  50F5               	movf	tablat,w,c
 10792  010040  D005               	bra	u10570
 10793  010042                     u10577:
 10794  010042  CFF6 FFE9          	movff	tblptrl,fsr0l
 10795  010046  CFF7 FFEA          	movff	tblptrh,fsr0h
 10796  01004A  50EF               	movf	indf0,w,c
 10797  01004C                     u10570:
 10798  01004C  0A2E               	xorlw	46
 10799  01004E  A4D8               	btfss	status,2,c
 10800  010050  D049               	goto	l1191
 10801                           
 10802                           ;doprnt.c: 612: flag |= 0x4000;
 10803  010052  0101               	movlb	1	; () banked
 10804  010054  8D7D               	bsf	(printf@flag+1)& (0+255),6,b
 10805                           
 10806                           ;doprnt.c: 613: f++;
 10807  010056  4B64               	infsnz	printf@f& (0+255),f,b
 10808  010058  2B65               	incf	(printf@f+1)& (0+255),f,b
 10809                           
 10810                           ; BSR set to: 1
 10811                           ;doprnt.c: 620: {
 10812                           ;doprnt.c: 621: prec = 0;
 10813  01005A  0E00               	movlw	0
 10814  01005C  6F8C               	movwf	(printf@prec+1)& (0+255),b
 10815  01005E  0E00               	movlw	0
 10816  010060  6F8B               	movwf	printf@prec& (0+255),b
 10817                           
 10818                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 10819  010062  D02A               	goto	l1192
 10820  010064                     
 10821                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 10822                           
 10823                           ; BSR set to: 1
 10824  010064  C18B  F125         	movff	printf@prec,___wmul@multiplier
 10825  010068  C18C  F126         	movff	printf@prec+1,___wmul@multiplier+1
 10826  01006C  0E00               	movlw	0
 10827  01006E  0101               	movlb	1	; () banked
 10828  010070  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10829  010072  0E0A               	movlw	10
 10830  010074  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10831  010076  EC5D  F0B2         	call	___wmul	;wreg free
 10832  01007A  C164  FFF6         	movff	printf@f,tblptrl
 10833  01007E  C165  FFF7         	movff	printf@f+1,tblptrh
 10834  010082  0E00               	movlw	low (__mediumconst shr (0+16))
 10835  010084  6EF8               	movwf	tblptru,c
 10836  010086  0E0D               	movlw	(high __ramtop+-1)
 10837  010088  64F7               	cpfsgt	tblptrh,c
 10838  01008A  D003               	bra	u10597
 10839  01008C  0008               	tblrd		*
 10840  01008E  50F5               	movf	tablat,w,c
 10841  010090  D005               	bra	u10590
 10842  010092                     u10597:
 10843  010092  CFF6 FFE9          	movff	tblptrl,fsr0l
 10844  010096  CFF7 FFEA          	movff	tblptrh,fsr0h
 10845  01009A  50EF               	movf	indf0,w,c
 10846  01009C                     u10590:
 10847  01009C  0101               	movlb	1	; () banked
 10848  01009E  6F6C               	movwf	??_printf& (0+255),b
 10849  0100A0  516C               	movf	??_printf& (0+255),w,b
 10850  0100A2  2725               	addwf	?___wmul& (0+255),f,b
 10851  0100A4  0E00               	movlw	0
 10852  0100A6  2326               	addwfc	(?___wmul+1)& (0+255),f,b
 10853  0100A8  0ED0               	movlw	208
 10854  0100AA  2525               	addwf	?___wmul& (0+255),w,b
 10855  0100AC  6F8B               	movwf	printf@prec& (0+255),b
 10856  0100AE  0EFF               	movlw	255
 10857  0100B0  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10858  0100B2  6F8C               	movwf	(printf@prec+1)& (0+255),b
 10859                           
 10860                           ; BSR set to: 1
 10861  0100B4  4B64               	infsnz	printf@f& (0+255),f,b
 10862  0100B6  2B65               	incf	(printf@f+1)& (0+255),f,b
 10863  0100B8                     l1192:
 10864                           
 10865                           ; BSR set to: 1
 10866                           
 10867                           ; BSR set to: 1
 10868  0100B8  C164  FFF6         	movff	printf@f,tblptrl
 10869  0100BC  C165  FFF7         	movff	printf@f+1,tblptrh
 10870  0100C0  0E00               	movlw	low (__mediumconst shr (0+16))
 10871  0100C2  6EF8               	movwf	tblptru,c
 10872  0100C4  0E0D               	movlw	(high __ramtop+-1)
 10873  0100C6  64F7               	cpfsgt	tblptrh,c
 10874  0100C8  D003               	bra	u10607
 10875  0100CA  0008               	tblrd		*
 10876  0100CC  50F5               	movf	tablat,w,c
 10877  0100CE  D005               	bra	u10600
 10878  0100D0                     u10607:
 10879  0100D0  CFF6 FFE9          	movff	tblptrl,fsr0l
 10880  0100D4  CFF7 FFEA          	movff	tblptrh,fsr0h
 10881  0100D8  50EF               	movf	indf0,w,c
 10882  0100DA                     u10600:
 10883  0100DA  ECF6  F0B2         	call	_isdigit
 10884  0100DE  A0D8               	btfss	status,0,c
 10885  0100E0  D07E               	goto	l1196
 10886  0100E2  D7C0               	goto	l1193
 10887  0100E4                     l1191:
 10888                           
 10889                           ;doprnt.c: 626: prec = 0;
 10890  0100E4  0E00               	movlw	0
 10891  0100E6  0101               	movlb	1	; () banked
 10892  0100E8  6F8C               	movwf	(printf@prec+1)& (0+255),b
 10893  0100EA  0E00               	movlw	0
 10894  0100EC  6F8B               	movwf	printf@prec& (0+255),b
 10895                           
 10896                           ; BSR set to: 1
 10897                           ;doprnt.c: 628: flag |= 0x1000;
 10898  0100EE  897D               	bsf	(printf@flag+1)& (0+255),4,b
 10899                           
 10900                           ; BSR set to: 1
 10901                           ;doprnt.c: 630: }
 10902                           ;doprnt.c: 635: switch(c = *f++) {
 10903  0100F0  D076               	goto	l1196
 10904  0100F2                     
 10905                           ; BSR set to: 1
 10906                           ;doprnt.c: 663: flag |= 0x400;
 10907                           
 10908                           ; BSR set to: 1
 10909  0100F2  857D               	bsf	(printf@flag+1)& (0+255),2,b
 10910                           
 10911                           ; BSR set to: 1
 10912                           ;doprnt.c: 698: case 'i':
 10913                           ;doprnt.c: 699: break;
 10914                           
 10915                           ; BSR set to: 1
 10916                           
 10917                           ;doprnt.c: 697: case 'd':
 10918                           
 10919                           ;doprnt.c: 664: break;
 10920  0100F4  D0A8               	goto	l1200
 10921  0100F6                     
 10922                           ; BSR set to: 1
 10923                           ;doprnt.c: 718: case 'x':
 10924                           ;doprnt.c: 721: flag |= 0x80;
 10925                           
 10926                           ; BSR set to: 1
 10927                           
 10928                           ; BSR set to: 1
 10929  0100F6  8F7C               	bsf	printf@flag& (0+255),7,b
 10930                           
 10931                           ;doprnt.c: 723: break;
 10932  0100F8  D0A6               	goto	l1200
 10933  0100FA                     
 10934                           ; BSR set to: 1
 10935                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 10936                           
 10937                           ; BSR set to: 1
 10938  0100FA  C17A  FFD9         	movff	printf@ap,fsr2l
 10939  0100FE  C17B  FFDA         	movff	printf@ap+1,fsr2h
 10940  010102  CFDE F178          	movff	postinc2,printf@cp
 10941  010106  CFDD F179          	movff	postdec2,printf@cp+1
 10942                           
 10943                           ; BSR set to: 1
 10944  01010A  0E02               	movlw	2
 10945  01010C  277A               	addwf	printf@ap& (0+255),f,b
 10946  01010E  0E00               	movlw	0
 10947  010110  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 10948                           
 10949                           ; BSR set to: 1
 10950                           ;doprnt.c: 740: if(!cp)
 10951  010112  5178               	movf	printf@cp& (0+255),w,b
 10952  010114  1179               	iorwf	(printf@cp+1)& (0+255),w,b
 10953  010116  A4D8               	btfss	status,2,c
 10954  010118  D004               	goto	l1206
 10955                           
 10956                           ; BSR set to: 1
 10957                           ;doprnt.c: 741: cp = "(null)";
 10958  01011A  0E91               	movlw	low STR_100
 10959  01011C  6F78               	movwf	printf@cp& (0+255),b
 10960  01011E  0EFF               	movlw	high STR_100
 10961  010120  6F79               	movwf	(printf@cp+1)& (0+255),b
 10962  010122                     l1206:
 10963                           
 10964                           ; BSR set to: 1
 10965                           ;doprnt.c: 745: len = 0;
 10966                           
 10967                           ; BSR set to: 1
 10968  010122  0E00               	movlw	0
 10969  010124  6F77               	movwf	(printf@len+1)& (0+255),b
 10970  010126  0E00               	movlw	0
 10971  010128  6F76               	movwf	printf@len& (0+255),b
 10972                           
 10973                           ;doprnt.c: 746: while(cp[len])
 10974  01012A  D003               	goto	l1207
 10975  01012C                     
 10976                           ;doprnt.c: 747: len++;
 10977                           
 10978                           ; BSR set to: 1
 10979  01012C  0101               	movlb	1	; () banked
 10980  01012E  4B76               	infsnz	printf@len& (0+255),f,b
 10981  010130  2B77               	incf	(printf@len+1)& (0+255),f,b
 10982  010132                     l1207:
 10983                           
 10984                           ; BSR set to: 1
 10985                           
 10986                           ; BSR set to: 1
 10987  010132  5176               	movf	printf@len& (0+255),w,b
 10988  010134  2578               	addwf	printf@cp& (0+255),w,b
 10989  010136  6F6C               	movwf	??_printf& (0+255),b
 10990  010138  5177               	movf	(printf@len+1)& (0+255),w,b
 10991  01013A  2179               	addwfc	(printf@cp+1)& (0+255),w,b
 10992  01013C  6F6D               	movwf	(??_printf+1)& (0+255),b
 10993  01013E  C16C  FFF6         	movff	??_printf,tblptrl
 10994  010142  C16D  FFF7         	movff	??_printf+1,tblptrh
 10995  010146  0E00               	movlw	low (__mediumconst shr (0+16))
 10996  010148  6EF8               	movwf	tblptru,c
 10997  01014A  0E0D               	movlw	(high __ramtop+-1)
 10998  01014C  64F7               	cpfsgt	tblptrh,c
 10999  01014E  D003               	bra	u10637
 11000  010150  0008               	tblrd		*
 11001  010152  50F5               	movf	tablat,w,c
 11002  010154  D005               	bra	u10630
 11003  010156                     u10637:
 11004  010156  CFF6 FFE9          	movff	tblptrl,fsr0l
 11005  01015A  CFF7 FFEA          	movff	tblptrh,fsr0h
 11006  01015E  50EF               	movf	indf0,w,c
 11007  010160                     u10630:
 11008  010160  0900               	iorlw	0
 11009  010162  A4D8               	btfss	status,2,c
 11010  010164  D7E3               	goto	l1208
 11011  010166                     u10640:
 11012                           
 11013                           ;doprnt.c: 753: if(prec && prec < len)
 11014                           
 11015                           ;doprnt.c: 750: dostring:
 11016  010166  0101               	movlb	1	; () banked
 11017  010168  518B               	movf	printf@prec& (0+255),w,b
 11018  01016A  118C               	iorwf	(printf@prec+1)& (0+255),w,b
 11019  01016C  B4D8               	btfsc	status,2,c
 11020  01016E  D021               	goto	l1212
 11021                           
 11022                           ; BSR set to: 1
 11023  010170  5176               	movf	printf@len& (0+255),w,b
 11024  010172  5D8B               	subwf	printf@prec& (0+255),w,b
 11025  010174  5177               	movf	(printf@len+1)& (0+255),w,b
 11026  010176  598C               	subwfb	(printf@prec+1)& (0+255),w,b
 11027  010178  B0D8               	btfsc	status,0,c
 11028  01017A  D01B               	goto	l1212
 11029                           
 11030                           ; BSR set to: 1
 11031                           ;doprnt.c: 754: len = prec;
 11032  01017C  C18B  F176         	movff	printf@prec,printf@len
 11033  010180  C18C  F177         	movff	printf@prec+1,printf@len+1
 11034                           
 11035                           ; BSR set to: 1
 11036                           ;doprnt.c: 767: while(len--)
 11037  010184  D016               	goto	l1212
 11038  010186                     l9358:
 11039                           
 11040                           ; BSR set to: 1
 11041                           ;doprnt.c: 768: (putch(*cp++) );
 11042  010186  C178  FFF6         	movff	printf@cp,tblptrl
 11043  01018A  C179  FFF7         	movff	printf@cp+1,tblptrh
 11044  01018E  0E00               	movlw	low (__mediumconst shr (0+16))
 11045  010190  6EF8               	movwf	tblptru,c
 11046  010192  0E0D               	movlw	(high __ramtop+-1)
 11047  010194  64F7               	cpfsgt	tblptrh,c
 11048  010196  D003               	bra	u10677
 11049  010198  0008               	tblrd		*
 11050  01019A  50F5               	movf	tablat,w,c
 11051  01019C  D005               	bra	u10670
 11052  01019E                     u10677:
 11053  01019E  CFF6 FFE9          	movff	tblptrl,fsr0l
 11054  0101A2  CFF7 FFEA          	movff	tblptrh,fsr0h
 11055  0101A6  50EF               	movf	indf0,w,c
 11056  0101A8                     u10670:
 11057  0101A8  EC98  F0B3         	call	_putch
 11058  0101AC  0101               	movlb	1	; () banked
 11059  0101AE  4B78               	infsnz	printf@cp& (0+255),f,b
 11060  0101B0  2B79               	incf	(printf@cp+1)& (0+255),f,b
 11061  0101B2                     l1212:
 11062                           
 11063                           ; BSR set to: 1
 11064                           
 11065                           ; BSR set to: 1
 11066  0101B2  0776               	decf	printf@len& (0+255),f,b
 11067  0101B4  A0D8               	btfss	status,0,c
 11068  0101B6  0777               	decf	(printf@len+1)& (0+255),f,b
 11069  0101B8  2976               	incf	printf@len& (0+255),w,b
 11070  0101BA  E1E5               	bnz	l9358
 11071  0101BC  2977               	incf	(printf@len+1)& (0+255),w,b
 11072  0101BE  B4D8               	btfsc	status,2,c
 11073  0101C0  EF3E  F085         	goto	u11070
 11074  0101C4  D7E0               	goto	l1213
 11075  0101C6                     
 11076                           ; BSR set to: 1
 11077                           ;doprnt.c: 805: cp = (char *)&c;
 11078                           
 11079                           ; BSR set to: 1
 11080  0101C6  0E8D               	movlw	low printf@c
 11081  0101C8  6F78               	movwf	printf@cp& (0+255),b
 11082  0101CA  0E01               	movlw	high printf@c
 11083  0101CC  6F79               	movwf	(printf@cp+1)& (0+255),b
 11084                           
 11085                           ; BSR set to: 1
 11086                           ;doprnt.c: 806: len = 1;
 11087  0101CE  0E00               	movlw	0
 11088  0101D0  6F77               	movwf	(printf@len+1)& (0+255),b
 11089  0101D2  0E01               	movlw	1
 11090  0101D4  6F76               	movwf	printf@len& (0+255),b
 11091                           
 11092                           ;doprnt.c: 807: goto dostring;
 11093  0101D6  D7C7               	goto	u10640
 11094  0101D8                     
 11095                           ; BSR set to: 1
 11096                           ;doprnt.c: 818: flag |= 0xC0;
 11097                           
 11098                           ; BSR set to: 1
 11099  0101D8  0EC0               	movlw	192
 11100  0101DA  137C               	iorwf	printf@flag& (0+255),f,b
 11101                           
 11102                           ; BSR set to: 1
 11103                           ;doprnt.c: 822: }
 11104                           
 11105                           ;doprnt.c: 819: break;
 11106  0101DC  D034               	goto	l1200
 11107  0101DE                     l1196:
 11108                           
 11109                           ; BSR set to: 1
 11110  0101DE  0101               	movlb	1	; () banked
 11111  0101E0  5164               	movf	printf@f& (0+255),w,b
 11112  0101E2  6F6C               	movwf	??_printf& (0+255),b
 11113  0101E4  5165               	movf	(printf@f+1)& (0+255),w,b
 11114  0101E6  6F6D               	movwf	(??_printf+1)& (0+255),b
 11115  0101E8  4B64               	infsnz	printf@f& (0+255),f,b
 11116  0101EA  2B65               	incf	(printf@f+1)& (0+255),f,b
 11117  0101EC  C16C  FFF6         	movff	??_printf,tblptrl
 11118  0101F0  C16D  FFF7         	movff	??_printf+1,tblptrh
 11119  0101F4  0E00               	movlw	low (__mediumconst shr (0+16))
 11120  0101F6  6EF8               	movwf	tblptru,c
 11121  0101F8  0E0D               	movlw	(high __ramtop+-1)
 11122  0101FA  64F7               	cpfsgt	tblptrh,c
 11123  0101FC  D003               	bra	u10697
 11124  0101FE  0008               	tblrd		*
 11125  010200  50F5               	movf	tablat,w,c
 11126  010202  D005               	bra	u10690
 11127  010204                     u10697:
 11128  010204  CFF6 FFE9          	movff	tblptrl,fsr0l
 11129  010208  CFF7 FFEA          	movff	tblptrh,fsr0h
 11130  01020C  50EF               	movf	indf0,w,c
 11131  01020E                     u10690:
 11132  01020E  0101               	movlb	1	; () banked
 11133  010210  6F8D               	movwf	printf@c& (0+255),b
 11134  010212  518D               	movf	printf@c& (0+255),w,b
 11135                           
 11136                           ; Switch size 1, requested type "space"
 11137                           ; Number of cases is 8, Range of values is 0 to 120
 11138                           ; switch strategies available:
 11139                           ; Name         Instructions Cycles
 11140                           ; simple_byte           25    13 (average)
 11141                           ;	Chosen strategy is simple_byte
 11142  010214  0A00               	xorlw	0	; case 0
 11143  010216  B4D8               	btfsc	status,2,c
 11144  010218  0012               	return	
 11145  01021A  0A58               	xorlw	88	; case 88
 11146  01021C  B4D8               	btfsc	status,2,c
 11147  01021E  D76B               	goto	l1203
 11148  010220  0A3C               	xorlw	60	; case 100
 11149  010222  B4D8               	btfsc	status,2,c
 11150  010224  D010               	goto	l1200
 11151  010226  0A02               	xorlw	2	; case 102
 11152  010228  B4D8               	btfsc	status,2,c
 11153  01022A  D763               	goto	l1199
 11154  01022C  0A0F               	xorlw	15	; case 105
 11155  01022E  B4D8               	btfsc	status,2,c
 11156  010230  D00A               	goto	l1200
 11157  010232  0A1A               	xorlw	26	; case 115
 11158  010234  B4D8               	btfsc	status,2,c
 11159  010236  D761               	goto	l1205
 11160  010238  0A06               	xorlw	6	; case 117
 11161  01023A  B4D8               	btfsc	status,2,c
 11162  01023C  D7CD               	goto	l1216
 11163  01023E  0A0D               	xorlw	13	; case 120
 11164  010240  B4D8               	btfsc	status,2,c
 11165  010242  D759               	goto	l1203
 11166  010244  D7C0               	goto	l1215
 11167  010246                     l1200:
 11168                           
 11169                           ; BSR set to: 1
 11170                           ;doprnt.c: 825: if(flag & (0x700)) {
 11171                           
 11172                           ; BSR set to: 1
 11173  010246  0E07               	movlw	7
 11174  010248  157D               	andwf	(printf@flag+1)& (0+255),w,b
 11175  01024A  B4D8               	btfsc	status,2,c
 11176  01024C  D2C1               	goto	l1217
 11177                           
 11178                           ; BSR set to: 1
 11179                           ;doprnt.c: 827: if(flag & 0x1000)
 11180  01024E  A97D               	btfss	(printf@flag+1)& (0+255),4,b
 11181  010250  D004               	goto	l1218
 11182                           
 11183                           ; BSR set to: 1
 11184                           ;doprnt.c: 829: prec = 6;
 11185  010252  0E00               	movlw	0
 11186  010254  6F8C               	movwf	(printf@prec+1)& (0+255),b
 11187  010256  0E06               	movlw	6
 11188  010258  6F8B               	movwf	printf@prec& (0+255),b
 11189  01025A                     l1218:
 11190                           
 11191                           ; BSR set to: 1
 11192                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 11193                           
 11194                           ; BSR set to: 1
 11195  01025A  C17A  FFD9         	movff	printf@ap,fsr2l
 11196  01025E  C17B  FFDA         	movff	printf@ap+1,fsr2h
 11197  010262  CFDE F188          	movff	postinc2,printf@fval
 11198  010266  CFDE F189          	movff	postinc2,printf@fval+1
 11199  01026A  CFDD F18A          	movff	postdec2,printf@fval+2
 11200                           
 11201                           ; BSR set to: 1
 11202  01026E  0E03               	movlw	3
 11203  010270  277A               	addwf	printf@ap& (0+255),f,b
 11204  010272  0E00               	movlw	0
 11205  010274  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 11206                           
 11207                           ; BSR set to: 1
 11208                           ;doprnt.c: 831: if(fval < 0.0) {
 11209  010276  AF8A               	btfss	(printf@fval+2)& (0+255),7,b
 11210  010278  D011               	goto	l1219
 11211                           
 11212                           ; BSR set to: 1
 11213                           ;doprnt.c: 832: fval = -fval;
 11214  01027A  C188  F123         	movff	printf@fval,___ftneg@f1
 11215  01027E  C189  F124         	movff	printf@fval+1,___ftneg@f1+1
 11216  010282  C18A  F125         	movff	printf@fval+2,___ftneg@f1+2
 11217  010286  EC99  F0B2         	call	___ftneg	;wreg free
 11218  01028A  C123  F188         	movff	?___ftneg,printf@fval
 11219  01028E  C124  F189         	movff	?___ftneg+1,printf@fval+1
 11220  010292  C125  F18A         	movff	?___ftneg+2,printf@fval+2
 11221                           
 11222                           ;doprnt.c: 833: flag |= 0x03;
 11223  010296  0E03               	movlw	3
 11224  010298  0101               	movlb	1	; () banked
 11225  01029A  137C               	iorwf	printf@flag& (0+255),f,b
 11226  01029C                     l1219:
 11227                           
 11228                           ; BSR set to: 1
 11229                           ;doprnt.c: 834: }
 11230                           ;doprnt.c: 835: exp = 0;
 11231                           
 11232                           ; BSR set to: 1
 11233  01029C  0E00               	movlw	0
 11234  01029E  6F7F               	movwf	(printf@exp+1)& (0+255),b
 11235  0102A0  0E00               	movlw	0
 11236  0102A2  6F7E               	movwf	printf@exp& (0+255),b
 11237                           
 11238                           ; BSR set to: 1
 11239                           ;doprnt.c: 836: if( fval!=0) {
 11240  0102A4  5188               	movf	printf@fval& (0+255),w,b
 11241  0102A6  1189               	iorwf	(printf@fval+1)& (0+255),w,b
 11242  0102A8  118A               	iorwf	(printf@fval+2)& (0+255),w,b
 11243  0102AA  B4D8               	btfsc	status,2,c
 11244  0102AC  D088               	goto	l1224
 11245                           
 11246                           ; BSR set to: 1
 11247                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 11248  0102AE  0E82               	movlw	130
 11249  0102B0  6F6C               	movwf	??_printf& (0+255),b
 11250  0102B2  0EFF               	movlw	255
 11251  0102B4  6F6D               	movwf	(??_printf+1)& (0+255),b
 11252  0102B6  C188  F16E         	movff	printf@fval,??_printf+2
 11253  0102BA  C189  F16F         	movff	printf@fval+1,??_printf+3
 11254  0102BE  C18A  F170         	movff	printf@fval+2,??_printf+4
 11255  0102C2  C18B  F171         	movff	printf@fval+3,??_printf+5
 11256  0102C6  0E10               	movlw	16
 11257  0102C8  D005               	goto	u10740
 11258  0102CA                     u10745:
 11259  0102CA  90D8               	bcf	status,0,c
 11260  0102CC  3371               	rrcf	(??_printf+5)& (0+255),f,b
 11261  0102CE  3370               	rrcf	(??_printf+4)& (0+255),f,b
 11262  0102D0  336F               	rrcf	(??_printf+3)& (0+255),f,b
 11263  0102D2  336E               	rrcf	(??_printf+2)& (0+255),f,b
 11264  0102D4                     u10740:
 11265  0102D4  2EE8               	decfsz	wreg,f,c
 11266  0102D6  D7F9               	goto	u10745
 11267  0102D8  516E               	movf	(??_printf+2)& (0+255),w,b
 11268  0102DA  256C               	addwf	??_printf& (0+255),w,b
 11269  0102DC  6F7E               	movwf	printf@exp& (0+255),b
 11270  0102DE  0E00               	movlw	0
 11271  0102E0  216D               	addwfc	(??_printf+1)& (0+255),w,b
 11272  0102E2  6F7F               	movwf	(printf@exp+1)& (0+255),b
 11273                           
 11274                           ; BSR set to: 1
 11275                           ;doprnt.c: 838: exp--;
 11276  0102E4  077E               	decf	printf@exp& (0+255),f,b
 11277  0102E6  A0D8               	btfss	status,0,c
 11278  0102E8  077F               	decf	(printf@exp+1)& (0+255),f,b
 11279                           
 11280                           ; BSR set to: 1
 11281                           ;doprnt.c: 839: exp *= 3;
 11282  0102EA  C17E  F125         	movff	printf@exp,___wmul@multiplier
 11283  0102EE  C17F  F126         	movff	printf@exp+1,___wmul@multiplier+1
 11284  0102F2  0E00               	movlw	0
 11285  0102F4  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11286  0102F6  0E03               	movlw	3
 11287  0102F8  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11288  0102FA  EC5D  F0B2         	call	___wmul	;wreg free
 11289  0102FE  C125  F17E         	movff	?___wmul,printf@exp
 11290  010302  C126  F17F         	movff	?___wmul+1,printf@exp+1
 11291                           
 11292                           ;doprnt.c: 840: exp /= 10;
 11293  010306  C17E  F11D         	movff	printf@exp,___awdiv@dividend
 11294  01030A  C17F  F11E         	movff	printf@exp+1,___awdiv@dividend+1
 11295  01030E  0E00               	movlw	0
 11296  010310  0101               	movlb	1	; () banked
 11297  010312  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11298  010314  0E0A               	movlw	10
 11299  010316  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11300  010318  EC80  F0AB         	call	___awdiv	;wreg free
 11301  01031C  C11D  F17E         	movff	?___awdiv,printf@exp
 11302  010320  C11E  F17F         	movff	?___awdiv+1,printf@exp+1
 11303                           
 11304                           ;doprnt.c: 841: if(exp < 0)
 11305  010324  0101               	movlb	1	; () banked
 11306  010326  AF7F               	btfss	(printf@exp+1)& (0+255),7,b
 11307  010328  D003               	goto	l1221
 11308                           
 11309                           ; BSR set to: 1
 11310                           ;doprnt.c: 842: exp--;
 11311  01032A  077E               	decf	printf@exp& (0+255),f,b
 11312  01032C  A0D8               	btfss	status,0,c
 11313  01032E  077F               	decf	(printf@exp+1)& (0+255),f,b
 11314  010330                     l1221:
 11315                           
 11316                           ; BSR set to: 1
 11317                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 11318                           
 11319                           ; BSR set to: 1
 11320  010330  517E               	movf	printf@exp& (0+255),w,b
 11321  010332  0800               	sublw	0
 11322  010334  EC1E  F092         	call	_scale
 11323  010338  C155  F180         	movff	?_scale,printf@tmpval
 11324  01033C  C156  F181         	movff	?_scale+1,printf@tmpval+1
 11325  010340  C157  F182         	movff	?_scale+2,printf@tmpval+2
 11326                           
 11327                           ;doprnt.c: 847: tmpval.integ *= fval;
 11328  010344  C180  F146         	movff	printf@tmpval,___ftmul@f1
 11329  010348  C181  F147         	movff	printf@tmpval+1,___ftmul@f1+1
 11330  01034C  C182  F148         	movff	printf@tmpval+2,___ftmul@f1+2
 11331  010350  C188  F149         	movff	printf@fval,___ftmul@f2
 11332  010354  C189  F14A         	movff	printf@fval+1,___ftmul@f2+1
 11333  010358  C18A  F14B         	movff	printf@fval+2,___ftmul@f2+2
 11334  01035C  ECC3  F0A4         	call	___ftmul	;wreg free
 11335  010360  C146  F180         	movff	?___ftmul,printf@tmpval
 11336  010364  C147  F181         	movff	?___ftmul+1,printf@tmpval+1
 11337  010368  C148  F182         	movff	?___ftmul+2,printf@tmpval+2
 11338                           
 11339                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 11340  01036C  C180  F117         	movff	printf@tmpval,___ftge@ff1
 11341  010370  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 11342  010374  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 11343  010378  0E00               	movlw	0
 11344  01037A  0101               	movlb	1	; () banked
 11345  01037C  6F1A               	movwf	___ftge@ff2& (0+255),b
 11346  01037E  0E80               	movlw	128
 11347  010380  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 11348  010382  0E3F               	movlw	63
 11349  010384  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 11350  010386  EC1C  F0AA         	call	___ftge	;wreg free
 11351  01038A  0101               	movlb	1	; () banked
 11352  01038C  B0D8               	btfsc	status,0,c
 11353  01038E  D004               	goto	l1222
 11354                           
 11355                           ; BSR set to: 1
 11356                           ;doprnt.c: 849: exp--;
 11357  010390  077E               	decf	printf@exp& (0+255),f,b
 11358  010392  A0D8               	btfss	status,0,c
 11359  010394  077F               	decf	(printf@exp+1)& (0+255),f,b
 11360  010396  D013               	goto	l1224
 11361  010398                     l1222:
 11362                           
 11363                           ; BSR set to: 1
 11364                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 11365                           
 11366                           ; BSR set to: 1
 11367  010398  C180  F117         	movff	printf@tmpval,___ftge@ff1
 11368  01039C  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 11369  0103A0  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 11370  0103A4  0E00               	movlw	0
 11371  0103A6  6F1A               	movwf	___ftge@ff2& (0+255),b
 11372  0103A8  0E20               	movlw	32
 11373  0103AA  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 11374  0103AC  0E41               	movlw	65
 11375  0103AE  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 11376  0103B0  EC1C  F0AA         	call	___ftge	;wreg free
 11377  0103B4  0101               	movlb	1	; () banked
 11378  0103B6  A0D8               	btfss	status,0,c
 11379  0103B8  D002               	goto	l1224
 11380                           
 11381                           ; BSR set to: 1
 11382                           ;doprnt.c: 851: exp++;
 11383  0103BA  4B7E               	infsnz	printf@exp& (0+255),f,b
 11384  0103BC  2B7F               	incf	(printf@exp+1)& (0+255),f,b
 11385  0103BE                     l1224:
 11386                           
 11387                           ; BSR set to: 1
 11388                           ;doprnt.c: 852: }
 11389                           ;doprnt.c: 1112: if(prec <= 12)
 11390                           
 11391                           ; BSR set to: 1
 11392                           
 11393                           ; BSR set to: 1
 11394                           
 11395                           ; BSR set to: 1
 11396  0103BE  BF8C               	btfsc	(printf@prec+1)& (0+255),7,b
 11397  0103C0  D006               	goto	u10780
 11398  0103C2  518C               	movf	(printf@prec+1)& (0+255),w,b
 11399  0103C4  E11B               	bnz	l9422
 11400  0103C6  0E0D               	movlw	13
 11401  0103C8  5D8B               	subwf	printf@prec& (0+255),w,b
 11402  0103CA  B0D8               	btfsc	status,0,c
 11403  0103CC  D017               	goto	l1225
 11404  0103CE                     u10780:
 11405                           
 11406                           ; BSR set to: 1
 11407                           ;doprnt.c: 1113: fval += fround(prec);
 11408  0103CE  C188  F12B         	movff	printf@fval,___ftadd@f1
 11409  0103D2  C189  F12C         	movff	printf@fval+1,___ftadd@f1+1
 11410  0103D6  C18A  F12D         	movff	printf@fval+2,___ftadd@f1+2
 11411  0103DA  518B               	movf	printf@prec& (0+255),w,b
 11412  0103DC  EC3A  F098         	call	_fround
 11413  0103E0  C155  F12E         	movff	?_fround,___ftadd@f2
 11414  0103E4  C156  F12F         	movff	?_fround+1,___ftadd@f2+1
 11415  0103E8  C157  F130         	movff	?_fround+2,___ftadd@f2+2
 11416  0103EC  ECE7  F09E         	call	___ftadd	;wreg free
 11417  0103F0  C12B  F188         	movff	?___ftadd,printf@fval
 11418  0103F4  C12C  F189         	movff	?___ftadd+1,printf@fval+1
 11419  0103F8  C12D  F18A         	movff	?___ftadd+2,printf@fval+2
 11420  0103FC                     l1225:
 11421  0103FC                     l9422:
 11422                           
 11423                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 11424  0103FC  0101               	movlb	1	; () banked
 11425  0103FE  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
 11426  010400  D006               	goto	u10790
 11427  010402  517F               	movf	(printf@exp+1)& (0+255),w,b
 11428  010404  E11F               	bnz	l9430
 11429  010406  0E0A               	movlw	10
 11430  010408  5D7E               	subwf	printf@exp& (0+255),w,b
 11431  01040A  B0D8               	btfsc	status,0,c
 11432  01040C  D01B               	goto	u10820
 11433  01040E                     u10790:
 11434                           
 11435                           ; BSR set to: 1
 11436  01040E  5188               	movf	printf@fval& (0+255),w,b
 11437  010410  1189               	iorwf	(printf@fval+1)& (0+255),w,b
 11438  010412  118A               	iorwf	(printf@fval+2)& (0+255),w,b
 11439  010414  B4D8               	btfsc	status,2,c
 11440  010416  D054               	goto	l1226
 11441                           
 11442                           ; BSR set to: 1
 11443  010418  C188  F155         	movff	printf@fval,___fttol@f1
 11444  01041C  C189  F156         	movff	printf@fval+1,___fttol@f1+1
 11445  010420  C18A  F157         	movff	printf@fval+2,___fttol@f1+2
 11446  010424  EC47  F0A4         	call	___fttol	;wreg free
 11447  010428  0101               	movlb	1	; () banked
 11448  01042A  5155               	movf	?___fttol& (0+255),w,b
 11449  01042C  1156               	iorwf	(?___fttol+1)& (0+255),w,b
 11450  01042E  1157               	iorwf	(?___fttol+2)& (0+255),w,b
 11451  010430  1158               	iorwf	(?___fttol+3)& (0+255),w,b
 11452  010432  B4D8               	btfsc	status,2,c
 11453                           
 11454                           ; BSR set to: 1
 11455  010434  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
 11456  010436  D044               	goto	l1226
 11457  010438  517F               	movf	(printf@exp+1)& (0+255),w,b
 11458  01043A  E104               	bnz	l9430
 11459  01043C  0E02               	movlw	2
 11460  01043E  5D7E               	subwf	printf@exp& (0+255),w,b
 11461  010440  A0D8               	btfss	status,0,c
 11462  010442  D03E               	goto	l1226
 11463  010444                     u10820:
 11464  010444                     l9430:
 11465                           
 11466                           ; BSR set to: 1
 11467                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 11468  010444  C180  F117         	movff	printf@tmpval,___ftge@ff1
 11469  010448  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 11470  01044C  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 11471  010450  0E70               	movlw	112
 11472  010452  6F1A               	movwf	___ftge@ff2& (0+255),b
 11473  010454  0E89               	movlw	137
 11474  010456  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 11475  010458  0E40               	movlw	64
 11476  01045A  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 11477  01045C  EC1C  F0AA         	call	___ftge	;wreg free
 11478  010460  0101               	movlb	1	; () banked
 11479  010462  B0D8               	btfsc	status,0,c
 11480  010464  D002               	goto	l1229
 11481                           
 11482                           ; BSR set to: 1
 11483                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 11484  010466  0EF7               	movlw	247
 11485  010468  D001               	goto	L1
 11486  01046A                     l1229:
 11487                           
 11488                           ; BSR set to: 1
 11489                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 11490                           
 11491                           ; BSR set to: 1
 11492  01046A  0EF8               	movlw	248
 11493  01046C                     L1:
 11494  01046C  277E               	addwf	printf@exp& (0+255),f,b
 11495  01046E  0EFF               	movlw	255
 11496  010470  237F               	addwfc	(printf@exp+1)& (0+255),f,b
 11497                           
 11498                           ; BSR set to: 1
 11499                           ;doprnt.c: 1124: }
 11500                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 11501                           
 11502                           ; BSR set to: 1
 11503  010472  517E               	movf	printf@exp& (0+255),w,b
 11504  010474  EC1E  F092         	call	_scale
 11505  010478  C155  F180         	movff	?_scale,printf@tmpval
 11506  01047C  C156  F181         	movff	?_scale+1,printf@tmpval+1
 11507  010480  C157  F182         	movff	?_scale+2,printf@tmpval+2
 11508                           
 11509                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 11510  010484  C188  F117         	movff	printf@fval,__tdiv_to_l_@f1
 11511  010488  C189  F118         	movff	printf@fval+1,__tdiv_to_l_@f1+1
 11512  01048C  C18A  F119         	movff	printf@fval+2,__tdiv_to_l_@f1+2
 11513  010490  C180  F11A         	movff	printf@tmpval,__tdiv_to_l_@f2
 11514  010494  C181  F11B         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
 11515  010498  C182  F11C         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
 11516  01049C  EC5D  F0A1         	call	__tdiv_to_l_	;wreg free
 11517  0104A0  C117  F184         	movff	?__tdiv_to_l_,printf@val
 11518  0104A4  C118  F185         	movff	?__tdiv_to_l_+1,printf@val+1
 11519  0104A8  C119  F186         	movff	?__tdiv_to_l_+2,printf@val+2
 11520  0104AC  C11A  F187         	movff	?__tdiv_to_l_+3,printf@val+3
 11521                           
 11522                           ;doprnt.c: 1129: fval = 0.0;
 11523  0104B0  0E00               	movlw	0
 11524  0104B2  0101               	movlb	1	; () banked
 11525  0104B4  6F88               	movwf	printf@fval& (0+255),b
 11526  0104B6  0E00               	movlw	0
 11527  0104B8  6F89               	movwf	(printf@fval+1)& (0+255),b
 11528  0104BA  0E00               	movlw	0
 11529  0104BC  6F8A               	movwf	(printf@fval+2)& (0+255),b
 11530                           
 11531                           ;doprnt.c: 1130: } else {
 11532  0104BE  D033               	goto	l1235
 11533  0104C0                     l1226:
 11534                           
 11535                           ; BSR set to: 1
 11536                           ;doprnt.c: 1131: val = (unsigned long)fval;
 11537                           
 11538                           ; BSR set to: 1
 11539  0104C0  C188  F155         	movff	printf@fval,___fttol@f1
 11540  0104C4  C189  F156         	movff	printf@fval+1,___fttol@f1+1
 11541  0104C8  C18A  F157         	movff	printf@fval+2,___fttol@f1+2
 11542  0104CC  EC47  F0A4         	call	___fttol	;wreg free
 11543  0104D0  C155  F184         	movff	?___fttol,printf@val
 11544  0104D4  C156  F185         	movff	?___fttol+1,printf@val+1
 11545  0104D8  C157  F186         	movff	?___fttol+2,printf@val+2
 11546  0104DC  C158  F187         	movff	?___fttol+3,printf@val+3
 11547                           
 11548                           ;doprnt.c: 1132: fval -= (double)val;
 11549  0104E0  C188  F137         	movff	printf@fval,___ftsub@f1
 11550  0104E4  C189  F138         	movff	printf@fval+1,___ftsub@f1+1
 11551  0104E8  C18A  F139         	movff	printf@fval+2,___ftsub@f1+2
 11552  0104EC  C184  F11F         	movff	printf@val,___lltoft@c
 11553  0104F0  C185  F120         	movff	printf@val+1,___lltoft@c+1
 11554  0104F4  C186  F121         	movff	printf@val+2,___lltoft@c+2
 11555  0104F8  C187  F122         	movff	printf@val+3,___lltoft@c+3
 11556  0104FC  EC0D  F0AF         	call	___lltoft	;wreg free
 11557  010500  C11F  F13A         	movff	?___lltoft,___ftsub@f2
 11558  010504  C120  F13B         	movff	?___lltoft+1,___ftsub@f2+1
 11559  010508  C121  F13C         	movff	?___lltoft+2,___ftsub@f2+2
 11560  01050C  EC13  F0B1         	call	___ftsub	;wreg free
 11561  010510  C137  F188         	movff	?___ftsub,printf@fval
 11562  010514  C138  F189         	movff	?___ftsub+1,printf@fval+1
 11563  010518  C139  F18A         	movff	?___ftsub+2,printf@fval+2
 11564                           
 11565                           ;doprnt.c: 1133: exp = 0;
 11566  01051C  0E00               	movlw	0
 11567  01051E  0101               	movlb	1	; () banked
 11568  010520  6F7F               	movwf	(printf@exp+1)& (0+255),b
 11569  010522  0E00               	movlw	0
 11570  010524  6F7E               	movwf	printf@exp& (0+255),b
 11571  010526                     l1235:
 11572                           
 11573                           ; BSR set to: 1
 11574                           ;doprnt.c: 1134: }
 11575                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 11576                           
 11577                           ; BSR set to: 1
 11578  010526  0E01               	movlw	1
 11579  010528  6F8D               	movwf	printf@c& (0+255),b
 11580  01052A                     l9450:
 11581                           
 11582                           ; BSR set to: 1
 11583  01052A  0E0A               	movlw	10
 11584  01052C  198D               	xorwf	printf@c& (0+255),w,b
 11585  01052E  B4D8               	btfsc	status,2,c
 11586  010530  D01B               	goto	u10860
 11587                           
 11588                           ; BSR set to: 1
 11589                           ;doprnt.c: 1137: if(val < dpowers[c])
 11590                           
 11591                           ; BSR set to: 1
 11592                           
 11593                           ; BSR set to: 1
 11594  010532  518D               	movf	printf@c& (0+255),w,b
 11595  010534  0D04               	mullw	4
 11596  010536  0EB5               	movlw	low _dpowers
 11597  010538  24F3               	addwf	prodl,w,c
 11598  01053A  6EF6               	movwf	tblptrl,c
 11599  01053C  0EF0               	movlw	high _dpowers
 11600  01053E  20F4               	addwfc	prodh,w,c
 11601  010540  6EF7               	movwf	tblptrh,c
 11602  010542                     	if	1	;There are 3 active tblptr bytes
 11603  010542  6AF8               	clrf	tblptru,c
 11604  010544  0E00               	movlw	low (__mediumconst shr (0+16))
 11605  010546  22F8               	addwfc	tblptru,f,c
 11606  010548                     	endif
 11607  010548  0009               	tblrd		*+
 11608  01054A  50F5               	movf	tablat,w,c
 11609  01054C  5D84               	subwf	printf@val& (0+255),w,b
 11610  01054E  0009               	tblrd		*+
 11611  010550  50F5               	movf	tablat,w,c
 11612  010552  5985               	subwfb	(printf@val+1)& (0+255),w,b
 11613  010554  0009               	tblrd		*+
 11614  010556  50F5               	movf	tablat,w,c
 11615  010558  5986               	subwfb	(printf@val+2)& (0+255),w,b
 11616  01055A  0009               	tblrd		*+
 11617  01055C  50F5               	movf	tablat,w,c
 11618  01055E  5987               	subwfb	(printf@val+3)& (0+255),w,b
 11619  010560  A0D8               	btfss	status,0,c
 11620  010562  D002               	goto	u10860
 11621                           
 11622                           ; BSR set to: 1
 11623                           
 11624                           ; BSR set to: 1
 11625                           
 11626                           ; BSR set to: 1
 11627                           ;doprnt.c: 1138: break;
 11628  010564  2B8D               	incf	printf@c& (0+255),f,b
 11629  010566  D7E1               	goto	l9450
 11630  010568                     u10860:
 11631                           
 11632                           ; BSR set to: 1
 11633                           ;doprnt.c: 1175: {
 11634                           ;doprnt.c: 1188: if(flag & 0x03)
 11635                           
 11636                           ; BSR set to: 1
 11637  010568  0E03               	movlw	3
 11638  01056A  157C               	andwf	printf@flag& (0+255),w,b
 11639  01056C  6F6C               	movwf	??_printf& (0+255),b
 11640  01056E  0E00               	movlw	0
 11641  010570  157D               	andwf	(printf@flag+1)& (0+255),w,b
 11642  010572  6F6D               	movwf	(??_printf+1)& (0+255),b
 11643  010574  516C               	movf	??_printf& (0+255),w,b
 11644  010576  116D               	iorwf	(??_printf+1)& (0+255),w,b
 11645  010578  B4D8               	btfsc	status,2,c
 11646  01057A  D04E               	goto	l1240
 11647                           
 11648                           ; BSR set to: 1
 11649                           ;doprnt.c: 1190: (putch('-') );
 11650  01057C  0E2D               	movlw	45
 11651  01057E  EC98  F0B3         	call	_putch
 11652                           
 11653                           ;doprnt.c: 1195: }
 11654                           ;doprnt.c: 1196: while(c--) {
 11655  010582  D04A               	goto	l1240
 11656  010584                     
 11657                           ;doprnt.c: 1200: {
 11658                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 11659  010584  C184  F117         	movff	printf@val,___lldiv@dividend
 11660  010588  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 11661  01058C  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 11662  010590  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 11663  010594  0101               	movlb	1	; () banked
 11664  010596  518D               	movf	printf@c& (0+255),w,b
 11665  010598  0D04               	mullw	4
 11666  01059A  0EB5               	movlw	low _dpowers
 11667  01059C  24F3               	addwf	prodl,w,c
 11668  01059E  6EF6               	movwf	tblptrl,c
 11669  0105A0  0EF0               	movlw	high _dpowers
 11670  0105A2  20F4               	addwfc	prodh,w,c
 11671  0105A4  6EF7               	movwf	tblptrh,c
 11672  0105A6                     	if	1	;There are 3 active tblptr bytes
 11673  0105A6  6AF8               	clrf	tblptru,c
 11674  0105A8  0E00               	movlw	low (__mediumconst shr (0+16))
 11675  0105AA  22F8               	addwfc	tblptru,f,c
 11676  0105AC                     	endif
 11677  0105AC  0009               	tblrd		*+
 11678  0105AE  CFF5 F11B          	movff	tablat,___lldiv@divisor
 11679  0105B2  0009               	tblrd		*+
 11680  0105B4  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 11681  0105B8  0009               	tblrd		*+
 11682  0105BA  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 11683  0105BE  000A               	tblrd		*-
 11684  0105C0  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 11685  0105C4  ECC3  F0AB         	call	___lldiv	;wreg free
 11686  0105C8  C117  F180         	movff	?___lldiv,printf@tmpval
 11687  0105CC  C118  F181         	movff	?___lldiv+1,printf@tmpval+1
 11688  0105D0  C119  F182         	movff	?___lldiv+2,printf@tmpval+2
 11689  0105D4  C11A  F183         	movff	?___lldiv+3,printf@tmpval+3
 11690                           
 11691                           ;doprnt.c: 1202: tmpval.vd %= 10;
 11692  0105D8  C180  F124         	movff	printf@tmpval,___llmod@dividend
 11693  0105DC  C181  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 11694  0105E0  C182  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 11695  0105E4  C183  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 11696  0105E8  0E0A               	movlw	10
 11697  0105EA  0101               	movlb	1	; () banked
 11698  0105EC  6F28               	movwf	___llmod@divisor& (0+255),b
 11699  0105EE  0E00               	movlw	0
 11700  0105F0  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 11701  0105F2  0E00               	movlw	0
 11702  0105F4  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 11703  0105F6  0E00               	movlw	0
 11704  0105F8  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 11705  0105FA  ECE0  F0AD         	call	___llmod	;wreg free
 11706  0105FE  C124  F180         	movff	?___llmod,printf@tmpval
 11707  010602  C125  F181         	movff	?___llmod+1,printf@tmpval+1
 11708  010606  C126  F182         	movff	?___llmod+2,printf@tmpval+2
 11709  01060A  C127  F183         	movff	?___llmod+3,printf@tmpval+3
 11710                           
 11711                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 11712  01060E  0101               	movlb	1	; () banked
 11713  010610  5180               	movf	printf@tmpval& (0+255),w,b
 11714  010612  0F30               	addlw	48
 11715  010614  EC98  F0B3         	call	_putch
 11716  010618                     l1240:
 11717  010618  0101               	movlb	1	; () banked
 11718  01061A  078D               	decf	printf@c& (0+255),f,b
 11719  01061C  298D               	incf	printf@c& (0+255),w,b
 11720  01061E  B4D8               	btfsc	status,2,c
 11721  010620  D008               	goto	l1243
 11722  010622  D7B0               	goto	l1241
 11723  010624                     l9474:
 11724                           
 11725                           ; BSR set to: 1
 11726                           ;doprnt.c: 1208: (putch('0') );
 11727  010624  0E30               	movlw	48
 11728  010626  EC98  F0B3         	call	_putch
 11729                           
 11730                           ;doprnt.c: 1209: exp--;
 11731  01062A  0101               	movlb	1	; () banked
 11732  01062C  077E               	decf	printf@exp& (0+255),f,b
 11733  01062E  A0D8               	btfss	status,0,c
 11734  010630  077F               	decf	(printf@exp+1)& (0+255),f,b
 11735  010632                     l1243:
 11736                           
 11737                           ; BSR set to: 1
 11738                           
 11739                           ; BSR set to: 1
 11740  010632  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
 11741  010634  D005               	goto	u10890
 11742  010636  517F               	movf	(printf@exp+1)& (0+255),w,b
 11743  010638  E1F5               	bnz	l9474
 11744  01063A  057E               	decf	printf@exp& (0+255),w,b
 11745  01063C  B0D8               	btfsc	status,0,c
 11746  01063E  D7F2               	goto	l1244
 11747  010640                     u10890:
 11748                           
 11749                           ; BSR set to: 1
 11750                           ;doprnt.c: 1210: }
 11751                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11752                           
 11753                           ; BSR set to: 1
 11754  010640  BF8C               	btfsc	(printf@prec+1)& (0+255),7,b
 11755  010642  D009               	goto	l1246
 11756  010644  518C               	movf	(printf@prec+1)& (0+255),w,b
 11757  010646  E104               	bnz	u10900
 11758  010648  0E09               	movlw	9
 11759  01064A  5D8B               	subwf	printf@prec& (0+255),w,b
 11760  01064C  A0D8               	btfss	status,0,c
 11761  01064E  D003               	goto	l1246
 11762  010650                     u10900:
 11763                           
 11764                           ; BSR set to: 1
 11765                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 11766  010650  0E08               	movlw	8
 11767  010652  6F8D               	movwf	printf@c& (0+255),b
 11768  010654  D002               	goto	l1247
 11769  010656                     l1246:
 11770                           
 11771                           ; BSR set to: 1
 11772                           ;doprnt.c: 1213: else
 11773                           ;doprnt.c: 1214: c = prec;
 11774  010656  C18B  F18D         	movff	printf@prec,printf@c
 11775  01065A                     l1247:
 11776                           
 11777                           ; BSR set to: 1
 11778                           ;doprnt.c: 1215: prec -= c;
 11779                           
 11780                           ; BSR set to: 1
 11781  01065A  518D               	movf	printf@c& (0+255),w,b
 11782  01065C  5F8B               	subwf	printf@prec& (0+255),f,b
 11783  01065E  0E00               	movlw	0
 11784  010660  BF8D               	btfsc	printf@c& (0+255),7,b
 11785  010662  0EFF               	movlw	255
 11786  010664  5B8C               	subwfb	(printf@prec+1)& (0+255),f,b
 11787                           
 11788                           ; BSR set to: 1
 11789                           ;doprnt.c: 1219: if(c)
 11790  010666  518D               	movf	printf@c& (0+255),w,b
 11791  010668  B4D8               	btfsc	status,2,c
 11792  01066A  D003               	goto	l1248
 11793                           
 11794                           ; BSR set to: 1
 11795                           ;doprnt.c: 1221: (putch('.') );
 11796  01066C  0E2E               	movlw	46
 11797  01066E  EC98  F0B3         	call	_putch
 11798  010672                     l1248:
 11799                           
 11800                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 11801  010672  0101               	movlb	1	; () banked
 11802  010674  518D               	movf	printf@c& (0+255),w,b
 11803  010676  EC1E  F092         	call	_scale
 11804  01067A  C155  F172         	movff	?_scale,_printf$3336
 11805  01067E  C156  F173         	movff	?_scale+1,_printf$3336+1
 11806  010682  C157  F174         	movff	?_scale+2,_printf$3336+2
 11807                           
 11808                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 11809  010686  C188  F149         	movff	printf@fval,___ftmul@f2
 11810  01068A  C189  F14A         	movff	printf@fval+1,___ftmul@f2+1
 11811  01068E  C18A  F14B         	movff	printf@fval+2,___ftmul@f2+2
 11812  010692  C172  F146         	movff	_printf$3336,___ftmul@f1
 11813  010696  C173  F147         	movff	_printf$3336+1,___ftmul@f1+1
 11814  01069A  C174  F148         	movff	_printf$3336+2,___ftmul@f1+2
 11815  01069E  ECC3  F0A4         	call	___ftmul	;wreg free
 11816  0106A2  C146  F155         	movff	?___ftmul,___fttol@f1
 11817  0106A6  C147  F156         	movff	?___ftmul+1,___fttol@f1+1
 11818  0106AA  C148  F157         	movff	?___ftmul+2,___fttol@f1+2
 11819  0106AE  EC47  F0A4         	call	___fttol	;wreg free
 11820  0106B2  C155  F184         	movff	?___fttol,printf@val
 11821  0106B6  C156  F185         	movff	?___fttol+1,printf@val+1
 11822  0106BA  C157  F186         	movff	?___fttol+2,printf@val+2
 11823  0106BE  C158  F187         	movff	?___fttol+3,printf@val+3
 11824                           
 11825                           ;doprnt.c: 1228: while(c--) {
 11826  0106C2  D074               	goto	l1249
 11827  0106C4                     
 11828                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 11829  0106C4  C184  F117         	movff	printf@val,___lldiv@dividend
 11830  0106C8  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 11831  0106CC  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 11832  0106D0  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 11833  0106D4  0101               	movlb	1	; () banked
 11834  0106D6  518D               	movf	printf@c& (0+255),w,b
 11835  0106D8  0D04               	mullw	4
 11836  0106DA  0EB5               	movlw	low _dpowers
 11837  0106DC  24F3               	addwf	prodl,w,c
 11838  0106DE  6EF6               	movwf	tblptrl,c
 11839  0106E0  0EF0               	movlw	high _dpowers
 11840  0106E2  20F4               	addwfc	prodh,w,c
 11841  0106E4  6EF7               	movwf	tblptrh,c
 11842  0106E6                     	if	1	;There are 3 active tblptr bytes
 11843  0106E6  6AF8               	clrf	tblptru,c
 11844  0106E8  0E00               	movlw	low (__mediumconst shr (0+16))
 11845  0106EA  22F8               	addwfc	tblptru,f,c
 11846  0106EC                     	endif
 11847  0106EC  0009               	tblrd		*+
 11848  0106EE  CFF5 F11B          	movff	tablat,___lldiv@divisor
 11849  0106F2  0009               	tblrd		*+
 11850  0106F4  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 11851  0106F8  0009               	tblrd		*+
 11852  0106FA  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 11853  0106FE  000A               	tblrd		*-
 11854  010700  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 11855  010704  ECC3  F0AB         	call	___lldiv	;wreg free
 11856  010708  C117  F180         	movff	?___lldiv,printf@tmpval
 11857  01070C  C118  F181         	movff	?___lldiv+1,printf@tmpval+1
 11858  010710  C119  F182         	movff	?___lldiv+2,printf@tmpval+2
 11859  010714  C11A  F183         	movff	?___lldiv+3,printf@tmpval+3
 11860                           
 11861                           ;doprnt.c: 1230: tmpval.vd %= 10;
 11862  010718  C180  F124         	movff	printf@tmpval,___llmod@dividend
 11863  01071C  C181  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 11864  010720  C182  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 11865  010724  C183  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 11866  010728  0E0A               	movlw	10
 11867  01072A  0101               	movlb	1	; () banked
 11868  01072C  6F28               	movwf	___llmod@divisor& (0+255),b
 11869  01072E  0E00               	movlw	0
 11870  010730  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 11871  010732  0E00               	movlw	0
 11872  010734  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 11873  010736  0E00               	movlw	0
 11874  010738  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 11875  01073A  ECE0  F0AD         	call	___llmod	;wreg free
 11876  01073E  C124  F180         	movff	?___llmod,printf@tmpval
 11877  010742  C125  F181         	movff	?___llmod+1,printf@tmpval+1
 11878  010746  C126  F182         	movff	?___llmod+2,printf@tmpval+2
 11879  01074A  C127  F183         	movff	?___llmod+3,printf@tmpval+3
 11880                           
 11881                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 11882  01074E  0101               	movlb	1	; () banked
 11883  010750  5180               	movf	printf@tmpval& (0+255),w,b
 11884  010752  0F30               	addlw	48
 11885  010754  EC98  F0B3         	call	_putch
 11886                           
 11887                           ;doprnt.c: 1232: val %= dpowers[c];
 11888  010758  C184  F124         	movff	printf@val,___llmod@dividend
 11889  01075C  C185  F125         	movff	printf@val+1,___llmod@dividend+1
 11890  010760  C186  F126         	movff	printf@val+2,___llmod@dividend+2
 11891  010764  C187  F127         	movff	printf@val+3,___llmod@dividend+3
 11892  010768  0101               	movlb	1	; () banked
 11893  01076A  518D               	movf	printf@c& (0+255),w,b
 11894  01076C  0D04               	mullw	4
 11895  01076E  0EB5               	movlw	low _dpowers
 11896  010770  24F3               	addwf	prodl,w,c
 11897  010772  6EF6               	movwf	tblptrl,c
 11898  010774  0EF0               	movlw	high _dpowers
 11899  010776  20F4               	addwfc	prodh,w,c
 11900  010778  6EF7               	movwf	tblptrh,c
 11901  01077A                     	if	1	;There are 3 active tblptr bytes
 11902  01077A  6AF8               	clrf	tblptru,c
 11903  01077C  0E00               	movlw	low (__mediumconst shr (0+16))
 11904  01077E  22F8               	addwfc	tblptru,f,c
 11905  010780                     	endif
 11906  010780  0009               	tblrd		*+
 11907  010782  CFF5 F128          	movff	tablat,___llmod@divisor
 11908  010786  0009               	tblrd		*+
 11909  010788  CFF5 F129          	movff	tablat,___llmod@divisor+1
 11910  01078C  0009               	tblrd		*+
 11911  01078E  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 11912  010792  000A               	tblrd		*-
 11913  010794  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 11914  010798  ECE0  F0AD         	call	___llmod	;wreg free
 11915  01079C  C124  F184         	movff	?___llmod,printf@val
 11916  0107A0  C125  F185         	movff	?___llmod+1,printf@val+1
 11917  0107A4  C126  F186         	movff	?___llmod+2,printf@val+2
 11918  0107A8  C127  F187         	movff	?___llmod+3,printf@val+3
 11919  0107AC                     l1249:
 11920  0107AC  0101               	movlb	1	; () banked
 11921  0107AE  078D               	decf	printf@c& (0+255),f,b
 11922  0107B0  298D               	incf	printf@c& (0+255),w,b
 11923  0107B2  B4D8               	btfsc	status,2,c
 11924  0107B4  D008               	goto	l1252
 11925  0107B6  D786               	goto	l1250
 11926  0107B8                     
 11927                           ; BSR set to: 1
 11928                           ;doprnt.c: 1236: (putch('0') );
 11929                           
 11930                           ; BSR set to: 1
 11931  0107B8  0E30               	movlw	48
 11932  0107BA  EC98  F0B3         	call	_putch
 11933                           
 11934                           ;doprnt.c: 1237: prec--;
 11935  0107BE  0101               	movlb	1	; () banked
 11936  0107C0  078B               	decf	printf@prec& (0+255),f,b
 11937  0107C2  A0D8               	btfss	status,0,c
 11938  0107C4  078C               	decf	(printf@prec+1)& (0+255),f,b
 11939  0107C6                     l1252:
 11940                           
 11941                           ; BSR set to: 1
 11942                           
 11943                           ; BSR set to: 1
 11944  0107C6  518B               	movf	printf@prec& (0+255),w,b
 11945  0107C8  118C               	iorwf	(printf@prec+1)& (0+255),w,b
 11946  0107CA  B4D8               	btfsc	status,2,c
 11947  0107CC  D157               	goto	u11070
 11948  0107CE  D7F4               	goto	l1253
 11949  0107D0                     l1217:
 11950                           
 11951                           ; BSR set to: 1
 11952                           ;doprnt.c: 1246: }
 11953                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 11954                           
 11955                           ; BSR set to: 1
 11956  0107D0  0EC0               	movlw	192
 11957  0107D2  157C               	andwf	printf@flag& (0+255),w,b
 11958  0107D4  6F6C               	movwf	??_printf& (0+255),b
 11959  0107D6  0E00               	movlw	0
 11960  0107D8  157D               	andwf	(printf@flag+1)& (0+255),w,b
 11961  0107DA  6F6D               	movwf	(??_printf+1)& (0+255),b
 11962  0107DC  516C               	movf	??_printf& (0+255),w,b
 11963  0107DE  116D               	iorwf	(??_printf+1)& (0+255),w,b
 11964  0107E0  A4D8               	btfss	status,2,c
 11965  0107E2  D01E               	goto	l1255
 11966                           
 11967                           ; BSR set to: 1
 11968                           ;doprnt.c: 1253: {
 11969                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11970  0107E4  C17A  FFD9         	movff	printf@ap,fsr2l
 11971  0107E8  C17B  FFDA         	movff	printf@ap+1,fsr2h
 11972  0107EC  CFDE F184          	movff	postinc2,printf@val
 11973  0107F0  CFDD F185          	movff	postdec2,printf@val+1
 11974  0107F4  0E00               	movlw	0
 11975  0107F6  BF85               	btfsc	(printf@val+1)& (0+255),7,b
 11976  0107F8  0EFF               	movlw	-1
 11977  0107FA  6F86               	movwf	(printf@val+2)& (0+255),b
 11978  0107FC  6F87               	movwf	(printf@val+3)& (0+255),b
 11979                           
 11980                           ; BSR set to: 1
 11981  0107FE  0E02               	movlw	2
 11982  010800  277A               	addwf	printf@ap& (0+255),f,b
 11983  010802  0E00               	movlw	0
 11984  010804  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 11985                           
 11986                           ; BSR set to: 1
 11987                           ;doprnt.c: 1261: if((long)val < 0) {
 11988  010806  AF87               	btfss	(printf@val+3)& (0+255),7,b
 11989  010808  D01D               	goto	l1257
 11990                           
 11991                           ; BSR set to: 1
 11992                           ;doprnt.c: 1262: flag |= 0x03;
 11993  01080A  0E03               	movlw	3
 11994  01080C  137C               	iorwf	printf@flag& (0+255),f,b
 11995                           
 11996                           ; BSR set to: 1
 11997                           ;doprnt.c: 1263: val = -val;
 11998  01080E  1F87               	comf	(printf@val+3)& (0+255),f,b
 11999  010810  1F86               	comf	(printf@val+2)& (0+255),f,b
 12000  010812  1F85               	comf	(printf@val+1)& (0+255),f,b
 12001  010814  6D84               	negf	printf@val& (0+255),b
 12002  010816  0E00               	movlw	0
 12003  010818  2385               	addwfc	(printf@val+1)& (0+255),f,b
 12004  01081A  2386               	addwfc	(printf@val+2)& (0+255),f,b
 12005  01081C  2387               	addwfc	(printf@val+3)& (0+255),f,b
 12006                           
 12007                           ; BSR set to: 1
 12008                           ;doprnt.c: 1264: }
 12009                           ;doprnt.c: 1266: }
 12010  01081E  D012               	goto	l1257
 12011  010820                     l1255:
 12012                           
 12013                           ; BSR set to: 1
 12014                           ;doprnt.c: 1268: else
 12015                           ;doprnt.c: 1273: {
 12016                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 12017                           
 12018                           ; BSR set to: 1
 12019  010820  C17A  FFD9         	movff	printf@ap,fsr2l
 12020  010824  C17B  FFDA         	movff	printf@ap+1,fsr2h
 12021  010828  CFDE F16C          	movff	postinc2,??_printf
 12022  01082C  CFDD F16D          	movff	postdec2,??_printf+1
 12023  010830  C16C  F184         	movff	??_printf,printf@val
 12024  010834  C16D  F185         	movff	??_printf+1,printf@val+1
 12025  010838  6B86               	clrf	(printf@val+2)& (0+255),b
 12026  01083A  6B87               	clrf	(printf@val+3)& (0+255),b
 12027                           
 12028                           ; BSR set to: 1
 12029  01083C  0E02               	movlw	2
 12030  01083E  277A               	addwf	printf@ap& (0+255),f,b
 12031  010840  0E00               	movlw	0
 12032  010842  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 12033  010844                     l1257:
 12034                           
 12035                           ; BSR set to: 1
 12036                           ;doprnt.c: 1287: }
 12037                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 12038                           
 12039                           ; BSR set to: 1
 12040  010844  518B               	movf	printf@prec& (0+255),w,b
 12041  010846  118C               	iorwf	(printf@prec+1)& (0+255),w,b
 12042  010848  A4D8               	btfss	status,2,c
 12043  01084A  D04B               	goto	l1259
 12044                           
 12045                           ; BSR set to: 1
 12046  01084C  5184               	movf	printf@val& (0+255),w,b
 12047  01084E  1185               	iorwf	(printf@val+1)& (0+255),w,b
 12048  010850  1186               	iorwf	(printf@val+2)& (0+255),w,b
 12049  010852  1187               	iorwf	(printf@val+3)& (0+255),w,b
 12050  010854  A4D8               	btfss	status,2,c
 12051  010856  D045               	goto	l1259
 12052                           
 12053                           ; BSR set to: 1
 12054                           ;doprnt.c: 1291: prec++;
 12055  010858  4B8B               	infsnz	printf@prec& (0+255),f,b
 12056  01085A  2B8C               	incf	(printf@prec+1)& (0+255),f,b
 12057                           
 12058                           ; BSR set to: 1
 12059                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 12060  01085C  D042               	goto	l1259
 12061  01085E                     
 12062                           ; BSR set to: 1
 12063                           ;doprnt.c: 1302: case 0xC0:
 12064                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 12065                           
 12066                           ; BSR set to: 1
 12067                           
 12068                           ; BSR set to: 1
 12069  01085E  0E01               	movlw	1
 12070  010860  6F8D               	movwf	printf@c& (0+255),b
 12071  010862                     l9534:
 12072                           
 12073                           ; BSR set to: 1
 12074  010862  0E0A               	movlw	10
 12075  010864  198D               	xorwf	printf@c& (0+255),w,b
 12076  010866  B4D8               	btfsc	status,2,c
 12077  010868  D047               	goto	l1265
 12078                           
 12079                           ; BSR set to: 1
 12080                           ;doprnt.c: 1306: if(val < dpowers[c])
 12081                           
 12082                           ; BSR set to: 1
 12083                           
 12084                           ; BSR set to: 1
 12085  01086A  518D               	movf	printf@c& (0+255),w,b
 12086  01086C  0D04               	mullw	4
 12087  01086E  0EB5               	movlw	low _dpowers
 12088  010870  24F3               	addwf	prodl,w,c
 12089  010872  6EF6               	movwf	tblptrl,c
 12090  010874  0EF0               	movlw	high _dpowers
 12091  010876  20F4               	addwfc	prodh,w,c
 12092  010878  6EF7               	movwf	tblptrh,c
 12093  01087A                     	if	1	;There are 3 active tblptr bytes
 12094  01087A  6AF8               	clrf	tblptru,c
 12095  01087C  0E00               	movlw	low (__mediumconst shr (0+16))
 12096  01087E  22F8               	addwfc	tblptru,f,c
 12097  010880                     	endif
 12098  010880  0009               	tblrd		*+
 12099  010882  50F5               	movf	tablat,w,c
 12100  010884  5D84               	subwf	printf@val& (0+255),w,b
 12101  010886  0009               	tblrd		*+
 12102  010888  50F5               	movf	tablat,w,c
 12103  01088A  5985               	subwfb	(printf@val+1)& (0+255),w,b
 12104  01088C  0009               	tblrd		*+
 12105  01088E  50F5               	movf	tablat,w,c
 12106  010890  5986               	subwfb	(printf@val+2)& (0+255),w,b
 12107  010892  0009               	tblrd		*+
 12108  010894  50F5               	movf	tablat,w,c
 12109  010896  5987               	subwfb	(printf@val+3)& (0+255),w,b
 12110  010898  A0D8               	btfss	status,0,c
 12111  01089A  D02E               	goto	l1265
 12112                           
 12113                           ; BSR set to: 1
 12114                           
 12115                           ; BSR set to: 1
 12116                           
 12117                           ; BSR set to: 1
 12118                           ;doprnt.c: 1307: break;
 12119  01089C  2B8D               	incf	printf@c& (0+255),f,b
 12120  01089E  D7E1               	goto	l9534
 12121  0108A0                     
 12122                           ; BSR set to: 1
 12123                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 12124                           
 12125                           ; BSR set to: 1
 12126  0108A0  0E01               	movlw	1
 12127  0108A2  6F8D               	movwf	printf@c& (0+255),b
 12128  0108A4                     l9548:
 12129                           
 12130                           ; BSR set to: 1
 12131  0108A4  0E08               	movlw	8
 12132  0108A6  198D               	xorwf	printf@c& (0+255),w,b
 12133  0108A8  B4D8               	btfsc	status,2,c
 12134  0108AA  D026               	goto	l1265
 12135                           
 12136                           ; BSR set to: 1
 12137                           ;doprnt.c: 1317: if(val < hexpowers[c])
 12138                           
 12139                           ; BSR set to: 1
 12140                           
 12141                           ; BSR set to: 1
 12142  0108AC  518D               	movf	printf@c& (0+255),w,b
 12143  0108AE  0D04               	mullw	4
 12144  0108B0  0E2B               	movlw	low _hexpowers
 12145  0108B2  24F3               	addwf	prodl,w,c
 12146  0108B4  6EF6               	movwf	tblptrl,c
 12147  0108B6  0EF1               	movlw	high _hexpowers
 12148  0108B8  20F4               	addwfc	prodh,w,c
 12149  0108BA  6EF7               	movwf	tblptrh,c
 12150  0108BC                     	if	1	;There are 3 active tblptr bytes
 12151  0108BC  6AF8               	clrf	tblptru,c
 12152  0108BE  0E00               	movlw	low (__mediumconst shr (0+16))
 12153  0108C0  22F8               	addwfc	tblptru,f,c
 12154  0108C2                     	endif
 12155  0108C2  0009               	tblrd		*+
 12156  0108C4  50F5               	movf	tablat,w,c
 12157  0108C6  5D84               	subwf	printf@val& (0+255),w,b
 12158  0108C8  0009               	tblrd		*+
 12159  0108CA  50F5               	movf	tablat,w,c
 12160  0108CC  5985               	subwfb	(printf@val+1)& (0+255),w,b
 12161  0108CE  0009               	tblrd		*+
 12162  0108D0  50F5               	movf	tablat,w,c
 12163  0108D2  5986               	subwfb	(printf@val+2)& (0+255),w,b
 12164  0108D4  0009               	tblrd		*+
 12165  0108D6  50F5               	movf	tablat,w,c
 12166  0108D8  5987               	subwfb	(printf@val+3)& (0+255),w,b
 12167  0108DA  A0D8               	btfss	status,0,c
 12168  0108DC  D00D               	goto	l1265
 12169                           
 12170                           ; BSR set to: 1
 12171                           
 12172                           ; BSR set to: 1
 12173                           
 12174                           ; BSR set to: 1
 12175                           ;doprnt.c: 1318: break;
 12176  0108DE  2B8D               	incf	printf@c& (0+255),f,b
 12177  0108E0  D7E1               	goto	l9548
 12178  0108E2                     l1259:
 12179                           
 12180                           ; BSR set to: 1
 12181                           
 12182                           ; BSR set to: 1
 12183  0108E2  517C               	movf	printf@flag& (0+255),w,b
 12184  0108E4  0BC0               	andlw	192
 12185                           
 12186                           ; Switch size 1, requested type "space"
 12187                           ; Number of cases is 3, Range of values is 0 to 192
 12188                           ; switch strategies available:
 12189                           ; Name         Instructions Cycles
 12190                           ; simple_byte           10     6 (average)
 12191                           ;	Chosen strategy is simple_byte
 12192  0108E6  0A00               	xorlw	0	; case 0
 12193  0108E8  B4D8               	btfsc	status,2,c
 12194  0108EA  D7B9               	goto	l1260
 12195  0108EC  0A80               	xorlw	128	; case 128
 12196  0108EE  B4D8               	btfsc	status,2,c
 12197  0108F0  D7D7               	goto	l1266
 12198  0108F2  0A40               	xorlw	64	; case 192
 12199  0108F4  B4D8               	btfsc	status,2,c
 12200  0108F6  D7B3               	goto	l1260
 12201  0108F8                     l1265:
 12202                           
 12203                           ; BSR set to: 1
 12204                           ;doprnt.c: 1339: if(c < prec)
 12205                           
 12206                           ; BSR set to: 1
 12207  0108F8  0E80               	movlw	128
 12208  0108FA  BF8D               	btfsc	printf@c& (0+255),7,b
 12209  0108FC  0E7F               	movlw	127
 12210  0108FE  6F6C               	movwf	??_printf& (0+255),b
 12211  010900  518B               	movf	printf@prec& (0+255),w,b
 12212  010902  5D8D               	subwf	printf@c& (0+255),w,b
 12213  010904  518C               	movf	(printf@prec+1)& (0+255),w,b
 12214  010906  0A80               	xorlw	128
 12215  010908  596C               	subwfb	??_printf& (0+255),w,b
 12216  01090A  B0D8               	btfsc	status,0,c
 12217  01090C  D003               	goto	l1270
 12218                           
 12219                           ; BSR set to: 1
 12220                           ;doprnt.c: 1340: c = prec;
 12221  01090E  C18B  F18D         	movff	printf@prec,printf@c
 12222  010912  D010               	goto	l1272
 12223  010914                     l1270:
 12224                           
 12225                           ; BSR set to: 1
 12226                           ;doprnt.c: 1341: else if(prec < c)
 12227                           
 12228                           ; BSR set to: 1
 12229  010914  518C               	movf	(printf@prec+1)& (0+255),w,b
 12230  010916  0A80               	xorlw	128
 12231  010918  6F6C               	movwf	??_printf& (0+255),b
 12232  01091A  518D               	movf	printf@c& (0+255),w,b
 12233  01091C  5D8B               	subwf	printf@prec& (0+255),w,b
 12234  01091E  0E80               	movlw	128
 12235  010920  BF8D               	btfsc	printf@c& (0+255),7,b
 12236  010922  0E7F               	movlw	127
 12237  010924  596C               	subwfb	??_printf& (0+255),w,b
 12238  010926  B0D8               	btfsc	status,0,c
 12239  010928  D005               	goto	l1272
 12240                           
 12241                           ; BSR set to: 1
 12242                           ;doprnt.c: 1342: prec = c;
 12243  01092A  518D               	movf	printf@c& (0+255),w,b
 12244  01092C  6F8B               	movwf	printf@prec& (0+255),b
 12245  01092E  6B8C               	clrf	(printf@prec+1)& (0+255),b
 12246  010930  BF8B               	btfsc	printf@prec& (0+255),7,b
 12247  010932  078C               	decf	(printf@prec+1)& (0+255),f,b
 12248  010934                     l1272:
 12249                           
 12250                           ; BSR set to: 1
 12251                           ;doprnt.c: 1422: {
 12252                           ;doprnt.c: 1438: if(flag & 0x03)
 12253                           
 12254                           ; BSR set to: 1
 12255                           
 12256                           ; BSR set to: 1
 12257  010934  0E03               	movlw	3
 12258  010936  157C               	andwf	printf@flag& (0+255),w,b
 12259  010938  6F6C               	movwf	??_printf& (0+255),b
 12260  01093A  0E00               	movlw	0
 12261  01093C  157D               	andwf	(printf@flag+1)& (0+255),w,b
 12262  01093E  6F6D               	movwf	(??_printf+1)& (0+255),b
 12263  010940  516C               	movf	??_printf& (0+255),w,b
 12264  010942  116D               	iorwf	(??_printf+1)& (0+255),w,b
 12265  010944  B4D8               	btfsc	status,2,c
 12266  010946  D091               	goto	l1274
 12267                           
 12268                           ; BSR set to: 1
 12269                           ;doprnt.c: 1439: (putch('-') );
 12270  010948  0E2D               	movlw	45
 12271  01094A  EC98  F0B3         	call	_putch
 12272                           
 12273                           ;doprnt.c: 1469: }
 12274                           ;doprnt.c: 1474: while(prec--) {
 12275  01094E  D08D               	goto	l1274
 12276  010950                     
 12277                           ;doprnt.c: 1486: case 0xC0:
 12278                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 12279  010950  C18B  F16C         	movff	printf@prec,??_printf
 12280  010954  C18C  F16D         	movff	printf@prec+1,??_printf+1
 12281  010958  0101               	movlb	1	; () banked
 12282  01095A  90D8               	bcf	status,0,c
 12283  01095C  376C               	rlcf	??_printf& (0+255),f,b
 12284  01095E  376D               	rlcf	(??_printf+1)& (0+255),f,b
 12285  010960  90D8               	bcf	status,0,c
 12286  010962  376C               	rlcf	??_printf& (0+255),f,b
 12287  010964  376D               	rlcf	(??_printf+1)& (0+255),f,b
 12288  010966  0EB5               	movlw	low _dpowers
 12289  010968  256C               	addwf	??_printf& (0+255),w,b
 12290  01096A  6EF6               	movwf	tblptrl,c
 12291  01096C  0EF0               	movlw	high _dpowers
 12292  01096E  216D               	addwfc	(??_printf+1)& (0+255),w,b
 12293  010970  6EF7               	movwf	tblptrh,c
 12294  010972                     	if	1	;There are 3 active tblptr bytes
 12295  010972  6AF8               	clrf	tblptru,c
 12296  010974  0E00               	movlw	low (__mediumconst shr (0+16))
 12297  010976  22F8               	addwfc	tblptru,f,c
 12298  010978                     	endif
 12299  010978  0009               	tblrd		*+
 12300  01097A  CFF5 F11B          	movff	tablat,___lldiv@divisor
 12301  01097E  0009               	tblrd		*+
 12302  010980  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 12303  010984  0009               	tblrd		*+
 12304  010986  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 12305  01098A  000A               	tblrd		*-
 12306  01098C  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 12307  010990  C184  F117         	movff	printf@val,___lldiv@dividend
 12308  010994  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 12309  010998  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 12310  01099C  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 12311  0109A0  ECC3  F0AB         	call	___lldiv	;wreg free
 12312  0109A4  C117  F124         	movff	?___lldiv,___llmod@dividend
 12313  0109A8  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 12314  0109AC  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 12315  0109B0  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 12316  0109B4  0E0A               	movlw	10
 12317  0109B6  0101               	movlb	1	; () banked
 12318  0109B8  6F28               	movwf	___llmod@divisor& (0+255),b
 12319  0109BA  0E00               	movlw	0
 12320  0109BC  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 12321  0109BE  0E00               	movlw	0
 12322  0109C0  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 12323  0109C2  0E00               	movlw	0
 12324  0109C4  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 12325  0109C6  ECE0  F0AD         	call	___llmod	;wreg free
 12326  0109CA  0101               	movlb	1	; () banked
 12327  0109CC  5124               	movf	?___llmod& (0+255),w,b
 12328  0109CE  0F30               	addlw	48
 12329  0109D0  6F8D               	movwf	printf@c& (0+255),b
 12330                           
 12331                           ;doprnt.c: 1491: break;
 12332  0109D2  D048               	goto	l1279
 12333  0109D4                     
 12334                           ; BSR set to: 1
 12335                           ;doprnt.c: 1499: {
 12336                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 12337                           
 12338                           ; BSR set to: 1
 12339  0109D4  C184  F117         	movff	printf@val,___lldiv@dividend
 12340  0109D8  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 12341  0109DC  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 12342  0109E0  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 12343  0109E4  C18B  F16C         	movff	printf@prec,??_printf
 12344  0109E8  C18C  F16D         	movff	printf@prec+1,??_printf+1
 12345  0109EC  90D8               	bcf	status,0,c
 12346  0109EE  376C               	rlcf	??_printf& (0+255),f,b
 12347  0109F0  376D               	rlcf	(??_printf+1)& (0+255),f,b
 12348  0109F2  90D8               	bcf	status,0,c
 12349  0109F4  376C               	rlcf	??_printf& (0+255),f,b
 12350  0109F6  376D               	rlcf	(??_printf+1)& (0+255),f,b
 12351  0109F8  0E2B               	movlw	low _hexpowers
 12352  0109FA  256C               	addwf	??_printf& (0+255),w,b
 12353  0109FC  6EF6               	movwf	tblptrl,c
 12354  0109FE  0EF1               	movlw	high _hexpowers
 12355  010A00  216D               	addwfc	(??_printf+1)& (0+255),w,b
 12356  010A02  6EF7               	movwf	tblptrh,c
 12357  010A04                     	if	1	;There are 3 active tblptr bytes
 12358  010A04  6AF8               	clrf	tblptru,c
 12359  010A06  0E00               	movlw	low (__mediumconst shr (0+16))
 12360  010A08  22F8               	addwfc	tblptru,f,c
 12361  010A0A                     	endif
 12362  010A0A  0009               	tblrd		*+
 12363  010A0C  CFF5 F11B          	movff	tablat,___lldiv@divisor
 12364  010A10  0009               	tblrd		*+
 12365  010A12  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 12366  010A16  0009               	tblrd		*+
 12367  010A18  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 12368  010A1C  000A               	tblrd		*-
 12369  010A1E  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 12370  010A22  ECC3  F0AB         	call	___lldiv	;wreg free
 12371  010A26  0101               	movlb	1	; () banked
 12372  010A28  5117               	movf	?___lldiv& (0+255),w,b
 12373  010A2A  0B0F               	andlw	15
 12374  010A2C  6F75               	movwf	printf@idx& (0+255),b
 12375                           
 12376                           ; BSR set to: 1
 12377                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 12378  010A2E  5175               	movf	printf@idx& (0+255),w,b
 12379  010A30  0D01               	mullw	1
 12380  010A32  0EA2               	movlw	low STR_101
 12381  010A34  24F3               	addwf	prodl,w,c
 12382  010A36  6EF6               	movwf	tblptrl,c
 12383  010A38  0EFE               	movlw	high STR_101
 12384  010A3A  20F4               	addwfc	prodh,w,c
 12385  010A3C  6EF7               	movwf	tblptrh,c
 12386  010A3E                     	if	1	;There are 3 active tblptr bytes
 12387  010A3E  6AF8               	clrf	tblptru,c
 12388  010A40  0E00               	movlw	low (__mediumconst shr (0+16))
 12389  010A42  22F8               	addwfc	tblptru,f,c
 12390  010A44                     	endif
 12391  010A44  0008               	tblrd		*
 12392  010A46  CFF5 F18D          	movff	tablat,printf@c
 12393                           
 12394                           ; BSR set to: 1
 12395                           ;doprnt.c: 1523: }
 12396                           
 12397                           ;doprnt.c: 1508: }
 12398                           ;doprnt.c: 1510: break;
 12399  010A4A  D00C               	goto	l1279
 12400  010A4C                     l9584:
 12401  010A4C  0101               	movlb	1	; () banked
 12402  010A4E  517C               	movf	printf@flag& (0+255),w,b
 12403  010A50  0BC0               	andlw	192
 12404                           
 12405                           ; Switch size 1, requested type "space"
 12406                           ; Number of cases is 3, Range of values is 0 to 192
 12407                           ; switch strategies available:
 12408                           ; Name         Instructions Cycles
 12409                           ; simple_byte           10     6 (average)
 12410                           ;	Chosen strategy is simple_byte
 12411  010A52  0A00               	xorlw	0	; case 0
 12412  010A54  B4D8               	btfsc	status,2,c
 12413  010A56  D77C               	goto	l1277
 12414  010A58  0A80               	xorlw	128	; case 128
 12415  010A5A  B4D8               	btfsc	status,2,c
 12416  010A5C  D7BB               	goto	l1280
 12417  010A5E  0A40               	xorlw	64	; case 192
 12418  010A60  B4D8               	btfsc	status,2,c
 12419  010A62  D776               	goto	l1277
 12420  010A64                     l1279:
 12421                           
 12422                           ; BSR set to: 1
 12423                           ;doprnt.c: 1524: (putch(c) );
 12424                           
 12425                           ; BSR set to: 1
 12426  010A64  518D               	movf	printf@c& (0+255),w,b
 12427  010A66  EC98  F0B3         	call	_putch
 12428  010A6A                     l1274:
 12429  010A6A  0101               	movlb	1	; () banked
 12430  010A6C  078B               	decf	printf@prec& (0+255),f,b
 12431  010A6E  A0D8               	btfss	status,0,c
 12432  010A70  078C               	decf	(printf@prec+1)& (0+255),f,b
 12433  010A72  298B               	incf	printf@prec& (0+255),w,b
 12434  010A74  E1EB               	bnz	l9584
 12435  010A76  298C               	incf	(printf@prec+1)& (0+255),w,b
 12436  010A78  A4D8               	btfss	status,2,c
 12437  010A7A  D7E8               	goto	l1276
 12438  010A7C                     u11070:
 12439                           
 12440                           ; BSR set to: 1
 12441                           
 12442                           ; BSR set to: 1
 12443  010A7C  0101               	movlb	1	; () banked
 12444  010A7E  5164               	movf	printf@f& (0+255),w,b
 12445  010A80  6F6C               	movwf	??_printf& (0+255),b
 12446  010A82  5165               	movf	(printf@f+1)& (0+255),w,b
 12447  010A84  6F6D               	movwf	(??_printf+1)& (0+255),b
 12448  010A86  4B64               	infsnz	printf@f& (0+255),f,b
 12449  010A88  2B65               	incf	(printf@f+1)& (0+255),f,b
 12450  010A8A  C16C  FFF6         	movff	??_printf,tblptrl
 12451  010A8E  C16D  FFF7         	movff	??_printf+1,tblptrh
 12452  010A92  0E00               	movlw	low (__mediumconst shr (0+16))
 12453  010A94  6EF8               	movwf	tblptru,c
 12454  010A96  0E0D               	movlw	(high __ramtop+-1)
 12455  010A98  64F7               	cpfsgt	tblptrh,c
 12456  010A9A  D003               	bra	u11087
 12457  010A9C  0008               	tblrd		*
 12458  010A9E  50F5               	movf	tablat,w,c
 12459  010AA0  D005               	bra	u11080
 12460  010AA2                     u11087:
 12461  010AA2  CFF6 FFE9          	movff	tblptrl,fsr0l
 12462  010AA6  CFF7 FFEA          	movff	tblptrh,fsr0h
 12463  010AAA  50EF               	movf	indf0,w,c
 12464  010AAC                     u11080:
 12465  010AAC  0101               	movlb	1	; () banked
 12466  010AAE  6F8D               	movwf	printf@c& (0+255),b
 12467  010AB0  518D               	movf	printf@c& (0+255),w,b
 12468  010AB2  B4D8               	btfsc	status,2,c
 12469  010AB4  0012               	return	
 12470  010AB6  EF07  F080         	goto	l1189
 12471  010ABA                     __end_of_printf:
 12472                           	opt stack 0
 12473                           tblptru	equ	0xFF8
 12474                           tblptrh	equ	0xFF7
 12475                           tblptrl	equ	0xFF6
 12476                           tablat	equ	0xFF5
 12477                           prodh	equ	0xFF4
 12478                           prodl	equ	0xFF3
 12479                           intcon	equ	0xFF2
 12480                           indf0	equ	0xFEF
 12481                           postinc0	equ	0xFEE
 12482                           fsr0h	equ	0xFEA
 12483                           fsr0l	equ	0xFE9
 12484                           wreg	equ	0xFE8
 12485                           indf1	equ	0xFE7
 12486                           postdec1	equ	0xFE5
 12487                           fsr1h	equ	0xFE2
 12488                           fsr1l	equ	0xFE1
 12489                           indf2	equ	0xFDF
 12490                           postinc2	equ	0xFDE
 12491                           postdec2	equ	0xFDD
 12492                           fsr2h	equ	0xFDA
 12493                           fsr2l	equ	0xFD9
 12494                           status	equ	0xFD8
 12495                           
 12496 ;; *************** function _scale *****************
 12497 ;; Defined at:
 12498 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 12499 ;; Parameters:    Size  Location     Type
 12500 ;;  scl             1    wreg     char 
 12501 ;; Auto vars:     Size  Location     Type
 12502 ;;  scl             1   91[BANK1 ] char 
 12503 ;; Return value:  Size  Location     Type
 12504 ;;                  3   85[BANK1 ] char 
 12505 ;; Registers used:
 12506 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12507 ;; Tracked objects:
 12508 ;;		On entry : 0/0
 12509 ;;		On exit  : 0/0
 12510 ;;		Unchanged: 0/0
 12511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12512 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12513 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12515 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12516 ;;Total ram usage:        7 bytes
 12517 ;; Hardware stack levels used:    1
 12518 ;; Hardware stack levels required when called:   16
 12519 ;; This function calls:
 12520 ;;		___awdiv
 12521 ;;		___awmod
 12522 ;;		___ftmul
 12523 ;;		___wmul
 12524 ;; This function is called by:
 12525 ;;		_printf
 12526 ;; This function uses a non-reentrant model
 12527 ;;
 12528                           
 12529                           	psect	text25
 12530  01243C                     __ptext25:
 12531                           	opt stack 0
 12532  01243C                     _scale:
 12533                           	opt stack 11
 12534                           
 12535                           ; BSR set to: 1
 12536                           ;incstack = 0
 12537                           ;scale@scl stored from wreg
 12538  01243C  0101               	movlb	1	; () banked
 12539  01243E  6F5B               	movwf	scale@scl& (0+255),b
 12540                           
 12541                           ;doprnt.c: 428: if(scl < 0) {
 12542  012440  0101               	movlb	1	; () banked
 12543  012442  AF5B               	btfss	scale@scl& (0+255),7,b
 12544  012444  D11E               	goto	l1178
 12545                           
 12546                           ; BSR set to: 1
 12547                           ;doprnt.c: 429: scl = -scl;
 12548  012446  6D5B               	negf	scale@scl& (0+255),b
 12549                           
 12550                           ;doprnt.c: 430: if(scl>=110)
 12551  012448  515B               	movf	scale@scl& (0+255),w,b
 12552  01244A  0A80               	xorlw	128
 12553  01244C  0F12               	addlw	-238
 12554  01244E  A0D8               	btfss	status,0,c
 12555  012450  D0A0               	goto	l1179
 12556                           
 12557                           ; BSR set to: 1
 12558                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 12559  012452  0E00               	movlw	0
 12560  012454  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12561  012456  0E03               	movlw	3
 12562  012458  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12563  01245A  0E00               	movlw	0
 12564  01245C  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 12565  01245E  0E0A               	movlw	10
 12566  012460  6F1F               	movwf	___awdiv@divisor& (0+255),b
 12567  012462  0E00               	movlw	0
 12568  012464  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 12569  012466  0E64               	movlw	100
 12570  012468  6F19               	movwf	___awmod@divisor& (0+255),b
 12571  01246A  515B               	movf	scale@scl& (0+255),w,b
 12572  01246C  6F17               	movwf	___awmod@dividend& (0+255),b
 12573  01246E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 12574  012470  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 12575  012472  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 12576  012474  EC3B  F0AD         	call	___awmod	;wreg free
 12577  012478  C117  F11D         	movff	?___awmod,___awdiv@dividend
 12578  01247C  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 12579  012480  EC80  F0AB         	call	___awdiv	;wreg free
 12580  012484  0E09               	movlw	9
 12581  012486  0101               	movlb	1	; () banked
 12582  012488  251D               	addwf	?___awdiv& (0+255),w,b
 12583  01248A  6F25               	movwf	___wmul@multiplier& (0+255),b
 12584  01248C  0E00               	movlw	0
 12585  01248E  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 12586  012490  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 12587  012492  EC5D  F0B2         	call	___wmul	;wreg free
 12588  012496  0E04               	movlw	low __npowers_
 12589  012498  0101               	movlb	1	; () banked
 12590  01249A  2525               	addwf	?___wmul& (0+255),w,b
 12591  01249C  6EF6               	movwf	tblptrl,c
 12592  01249E  0EF1               	movlw	high __npowers_
 12593  0124A0  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12594  0124A2  6EF7               	movwf	tblptrh,c
 12595  0124A4                     	if	1	;There are 3 active tblptr bytes
 12596  0124A4  6AF8               	clrf	tblptru,c
 12597  0124A6  0E00               	movlw	low (__mediumconst shr (0+16))
 12598  0124A8  22F8               	addwfc	tblptru,f,c
 12599  0124AA                     	endif
 12600  0124AA  0009               	tblrd		*+
 12601  0124AC  CFF5 F149          	movff	tablat,___ftmul@f2
 12602  0124B0  0009               	tblrd		*+
 12603  0124B2  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 12604  0124B6  000A               	tblrd		*-
 12605  0124B8  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 12606  0124BC  0E00               	movlw	0
 12607  0124BE  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 12608  0124C0  0E64               	movlw	100
 12609  0124C2  6F1F               	movwf	___awdiv@divisor& (0+255),b
 12610  0124C4  515B               	movf	scale@scl& (0+255),w,b
 12611  0124C6  6F1D               	movwf	___awdiv@dividend& (0+255),b
 12612  0124C8  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 12613  0124CA  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 12614  0124CC  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12615  0124CE  EC80  F0AB         	call	___awdiv	;wreg free
 12616  0124D2  0E12               	movlw	18
 12617  0124D4  0101               	movlb	1	; () banked
 12618  0124D6  251D               	addwf	?___awdiv& (0+255),w,b
 12619  0124D8  6F25               	movwf	___wmul@multiplier& (0+255),b
 12620  0124DA  0E00               	movlw	0
 12621  0124DC  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 12622  0124DE  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 12623  0124E0  0E00               	movlw	0
 12624  0124E2  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12625  0124E4  0E03               	movlw	3
 12626  0124E6  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12627  0124E8  EC5D  F0B2         	call	___wmul	;wreg free
 12628  0124EC  0E04               	movlw	low __npowers_
 12629  0124EE  0101               	movlb	1	; () banked
 12630  0124F0  2525               	addwf	?___wmul& (0+255),w,b
 12631  0124F2  6EF6               	movwf	tblptrl,c
 12632  0124F4  0EF1               	movlw	high __npowers_
 12633  0124F6  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12634  0124F8  6EF7               	movwf	tblptrh,c
 12635  0124FA                     	if	1	;There are 3 active tblptr bytes
 12636  0124FA  6AF8               	clrf	tblptru,c
 12637  0124FC  0E00               	movlw	low (__mediumconst shr (0+16))
 12638  0124FE  22F8               	addwfc	tblptru,f,c
 12639  012500                     	endif
 12640  012500  0009               	tblrd		*+
 12641  012502  CFF5 F146          	movff	tablat,___ftmul@f1
 12642  012506  0009               	tblrd		*+
 12643  012508  CFF5 F147          	movff	tablat,___ftmul@f1+1
 12644  01250C  000A               	tblrd		*-
 12645  01250E  CFF5 F148          	movff	tablat,___ftmul@f1+2
 12646  012512  ECC3  F0A4         	call	___ftmul	;wreg free
 12647  012516  C146  F158         	movff	?___ftmul,_scale$3335
 12648  01251A  C147  F159         	movff	?___ftmul+1,_scale$3335+1
 12649  01251E  C148  F15A         	movff	?___ftmul+2,_scale$3335+2
 12650                           
 12651                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 12652  012522  C158  F146         	movff	_scale$3335,___ftmul@f1
 12653  012526  C159  F147         	movff	_scale$3335+1,___ftmul@f1+1
 12654  01252A  C15A  F148         	movff	_scale$3335+2,___ftmul@f1+2
 12655  01252E  0E00               	movlw	0
 12656  012530  0101               	movlb	1	; () banked
 12657  012532  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12658  012534  0E03               	movlw	3
 12659  012536  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12660  012538  0E00               	movlw	0
 12661  01253A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 12662  01253C  0E0A               	movlw	10
 12663  01253E  6F19               	movwf	___awmod@divisor& (0+255),b
 12664  012540  515B               	movf	scale@scl& (0+255),w,b
 12665  012542  6F17               	movwf	___awmod@dividend& (0+255),b
 12666  012544  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 12667  012546  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 12668  012548  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 12669  01254A  EC3B  F0AD         	call	___awmod	;wreg free
 12670  01254E  C117  F125         	movff	?___awmod,___wmul@multiplier
 12671  012552  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 12672  012556  EC5D  F0B2         	call	___wmul	;wreg free
 12673  01255A  0E04               	movlw	low __npowers_
 12674  01255C  0101               	movlb	1	; () banked
 12675  01255E  2525               	addwf	?___wmul& (0+255),w,b
 12676  012560  6EF6               	movwf	tblptrl,c
 12677  012562  0EF1               	movlw	high __npowers_
 12678  012564  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12679  012566  6EF7               	movwf	tblptrh,c
 12680  012568                     	if	1	;There are 3 active tblptr bytes
 12681  012568  6AF8               	clrf	tblptru,c
 12682  01256A  0E00               	movlw	low (__mediumconst shr (0+16))
 12683  01256C  22F8               	addwfc	tblptru,f,c
 12684  01256E                     	endif
 12685  01256E  0009               	tblrd		*+
 12686  012570  CFF5 F149          	movff	tablat,___ftmul@f2
 12687  012574  0009               	tblrd		*+
 12688  012576  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 12689  01257A  000A               	tblrd		*-
 12690  01257C  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 12691  012580  ECC3  F0A4         	call	___ftmul	;wreg free
 12692  012584  C146  F155         	movff	?___ftmul,?_scale
 12693  012588  C147  F156         	movff	?___ftmul+1,?_scale+1
 12694  01258C  C148  F157         	movff	?___ftmul+2,?_scale+2
 12695  012590  0012               	return	
 12696  012592                     l1179:
 12697                           
 12698                           ;doprnt.c: 432: else if(scl > 10)
 12699  012592  0101               	movlb	1	; () banked
 12700  012594  515B               	movf	scale@scl& (0+255),w,b
 12701  012596  0A80               	xorlw	128
 12702  012598  0F75               	addlw	-139
 12703  01259A  A0D8               	btfss	status,0,c
 12704  01259C  D05C               	goto	l1182
 12705                           
 12706                           ; BSR set to: 1
 12707                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 12708  01259E  0E00               	movlw	0
 12709  0125A0  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 12710  0125A2  0E0A               	movlw	10
 12711  0125A4  6F1F               	movwf	___awdiv@divisor& (0+255),b
 12712  0125A6  515B               	movf	scale@scl& (0+255),w,b
 12713  0125A8  6F1D               	movwf	___awdiv@dividend& (0+255),b
 12714  0125AA  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 12715  0125AC  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 12716  0125AE  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12717  0125B0  EC80  F0AB         	call	___awdiv	;wreg free
 12718  0125B4  0E09               	movlw	9
 12719  0125B6  0101               	movlb	1	; () banked
 12720  0125B8  251D               	addwf	?___awdiv& (0+255),w,b
 12721  0125BA  6F25               	movwf	___wmul@multiplier& (0+255),b
 12722  0125BC  0E00               	movlw	0
 12723  0125BE  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 12724  0125C0  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 12725  0125C2  0E00               	movlw	0
 12726  0125C4  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12727  0125C6  0E03               	movlw	3
 12728  0125C8  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12729  0125CA  EC5D  F0B2         	call	___wmul	;wreg free
 12730  0125CE  0E04               	movlw	low __npowers_
 12731  0125D0  0101               	movlb	1	; () banked
 12732  0125D2  2525               	addwf	?___wmul& (0+255),w,b
 12733  0125D4  6EF6               	movwf	tblptrl,c
 12734  0125D6  0EF1               	movlw	high __npowers_
 12735  0125D8  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12736  0125DA  6EF7               	movwf	tblptrh,c
 12737  0125DC                     	if	1	;There are 3 active tblptr bytes
 12738  0125DC  6AF8               	clrf	tblptru,c
 12739  0125DE  0E00               	movlw	low (__mediumconst shr (0+16))
 12740  0125E0  22F8               	addwfc	tblptru,f,c
 12741  0125E2                     	endif
 12742  0125E2  0009               	tblrd		*+
 12743  0125E4  CFF5 F146          	movff	tablat,___ftmul@f1
 12744  0125E8  0009               	tblrd		*+
 12745  0125EA  CFF5 F147          	movff	tablat,___ftmul@f1+1
 12746  0125EE  000A               	tblrd		*-
 12747  0125F0  CFF5 F148          	movff	tablat,___ftmul@f1+2
 12748  0125F4  0E00               	movlw	0
 12749  0125F6  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12750  0125F8  0E03               	movlw	3
 12751  0125FA  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12752  0125FC  0E00               	movlw	0
 12753  0125FE  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 12754  012600  0E0A               	movlw	10
 12755  012602  6F19               	movwf	___awmod@divisor& (0+255),b
 12756  012604  515B               	movf	scale@scl& (0+255),w,b
 12757  012606  6F17               	movwf	___awmod@dividend& (0+255),b
 12758  012608  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 12759  01260A  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 12760  01260C  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 12761  01260E  EC3B  F0AD         	call	___awmod	;wreg free
 12762  012612  C117  F125         	movff	?___awmod,___wmul@multiplier
 12763  012616  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 12764  01261A  EC5D  F0B2         	call	___wmul	;wreg free
 12765  01261E  0E04               	movlw	low __npowers_
 12766  012620  0101               	movlb	1	; () banked
 12767  012622  2525               	addwf	?___wmul& (0+255),w,b
 12768  012624  6EF6               	movwf	tblptrl,c
 12769  012626  0EF1               	movlw	high __npowers_
 12770  012628  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12771  01262A  6EF7               	movwf	tblptrh,c
 12772  01262C                     	if	1	;There are 3 active tblptr bytes
 12773  01262C  6AF8               	clrf	tblptru,c
 12774  01262E  0E00               	movlw	low (__mediumconst shr (0+16))
 12775  012630  22F8               	addwfc	tblptru,f,c
 12776  012632                     	endif
 12777  012632  0009               	tblrd		*+
 12778  012634  CFF5 F149          	movff	tablat,___ftmul@f2
 12779  012638  0009               	tblrd		*+
 12780  01263A  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 12781  01263E  000A               	tblrd		*-
 12782  012640  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 12783  012644  ECC3  F0A4         	call	___ftmul	;wreg free
 12784  012648  C146  F155         	movff	?___ftmul,?_scale
 12785  01264C  C147  F156         	movff	?___ftmul+1,?_scale+1
 12786  012650  C148  F157         	movff	?___ftmul+2,?_scale+2
 12787  012654  0012               	return	
 12788  012656                     l1182:
 12789                           
 12790                           ;doprnt.c: 434: return _npowers_[scl];
 12791  012656  0101               	movlb	1	; () banked
 12792  012658  515B               	movf	scale@scl& (0+255),w,b
 12793  01265A  0D03               	mullw	3
 12794  01265C  0E04               	movlw	low __npowers_
 12795  01265E  24F3               	addwf	prodl,w,c
 12796  012660  6EF6               	movwf	tblptrl,c
 12797  012662  0EF1               	movlw	high __npowers_
 12798  012664  20F4               	addwfc	prodh,w,c
 12799  012666  6EF7               	movwf	tblptrh,c
 12800  012668                     	if	1	;There are 3 active tblptr bytes
 12801  012668  6AF8               	clrf	tblptru,c
 12802  01266A  0E00               	movlw	low (__mediumconst shr (0+16))
 12803  01266C  22F8               	addwfc	tblptru,f,c
 12804  01266E                     	endif
 12805  01266E  0009               	tblrd		*+
 12806  012670  CFF5 F155          	movff	tablat,?_scale
 12807  012674  0009               	tblrd		*+
 12808  012676  CFF5 F156          	movff	tablat,?_scale+1
 12809  01267A  000A               	tblrd		*-
 12810  01267C  CFF5 F157          	movff	tablat,?_scale+2
 12811                           
 12812                           ; BSR set to: 1
 12813  012680  0012               	return	
 12814  012682                     l1178:
 12815                           
 12816                           ; BSR set to: 1
 12817                           ;doprnt.c: 435: }
 12818                           ;doprnt.c: 436: if(scl>=110)
 12819                           
 12820                           ; BSR set to: 1
 12821  012682  515B               	movf	scale@scl& (0+255),w,b
 12822  012684  0A80               	xorlw	128
 12823  012686  0F12               	addlw	-238
 12824  012688  A0D8               	btfss	status,0,c
 12825  01268A  D0A0               	goto	l1183
 12826                           
 12827                           ; BSR set to: 1
 12828                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 12829  01268C  0E00               	movlw	0
 12830  01268E  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12831  012690  0E03               	movlw	3
 12832  012692  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12833  012694  0E00               	movlw	0
 12834  012696  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 12835  012698  0E0A               	movlw	10
 12836  01269A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 12837  01269C  0E00               	movlw	0
 12838  01269E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 12839  0126A0  0E64               	movlw	100
 12840  0126A2  6F19               	movwf	___awmod@divisor& (0+255),b
 12841  0126A4  515B               	movf	scale@scl& (0+255),w,b
 12842  0126A6  6F17               	movwf	___awmod@dividend& (0+255),b
 12843  0126A8  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 12844  0126AA  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 12845  0126AC  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 12846  0126AE  EC3B  F0AD         	call	___awmod	;wreg free
 12847  0126B2  C117  F11D         	movff	?___awmod,___awdiv@dividend
 12848  0126B6  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 12849  0126BA  EC80  F0AB         	call	___awdiv	;wreg free
 12850  0126BE  0E09               	movlw	9
 12851  0126C0  0101               	movlb	1	; () banked
 12852  0126C2  251D               	addwf	?___awdiv& (0+255),w,b
 12853  0126C4  6F25               	movwf	___wmul@multiplier& (0+255),b
 12854  0126C6  0E00               	movlw	0
 12855  0126C8  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 12856  0126CA  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 12857  0126CC  EC5D  F0B2         	call	___wmul	;wreg free
 12858  0126D0  0EDD               	movlw	low __powers_
 12859  0126D2  0101               	movlb	1	; () banked
 12860  0126D4  2525               	addwf	?___wmul& (0+255),w,b
 12861  0126D6  6EF6               	movwf	tblptrl,c
 12862  0126D8  0EF0               	movlw	high __powers_
 12863  0126DA  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12864  0126DC  6EF7               	movwf	tblptrh,c
 12865  0126DE                     	if	1	;There are 3 active tblptr bytes
 12866  0126DE  6AF8               	clrf	tblptru,c
 12867  0126E0  0E00               	movlw	low (__mediumconst shr (0+16))
 12868  0126E2  22F8               	addwfc	tblptru,f,c
 12869  0126E4                     	endif
 12870  0126E4  0009               	tblrd		*+
 12871  0126E6  CFF5 F149          	movff	tablat,___ftmul@f2
 12872  0126EA  0009               	tblrd		*+
 12873  0126EC  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 12874  0126F0  000A               	tblrd		*-
 12875  0126F2  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 12876  0126F6  0E00               	movlw	0
 12877  0126F8  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 12878  0126FA  0E64               	movlw	100
 12879  0126FC  6F1F               	movwf	___awdiv@divisor& (0+255),b
 12880  0126FE  515B               	movf	scale@scl& (0+255),w,b
 12881  012700  6F1D               	movwf	___awdiv@dividend& (0+255),b
 12882  012702  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 12883  012704  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 12884  012706  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12885  012708  EC80  F0AB         	call	___awdiv	;wreg free
 12886  01270C  0E12               	movlw	18
 12887  01270E  0101               	movlb	1	; () banked
 12888  012710  251D               	addwf	?___awdiv& (0+255),w,b
 12889  012712  6F25               	movwf	___wmul@multiplier& (0+255),b
 12890  012714  0E00               	movlw	0
 12891  012716  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 12892  012718  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 12893  01271A  0E00               	movlw	0
 12894  01271C  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12895  01271E  0E03               	movlw	3
 12896  012720  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12897  012722  EC5D  F0B2         	call	___wmul	;wreg free
 12898  012726  0EDD               	movlw	low __powers_
 12899  012728  0101               	movlb	1	; () banked
 12900  01272A  2525               	addwf	?___wmul& (0+255),w,b
 12901  01272C  6EF6               	movwf	tblptrl,c
 12902  01272E  0EF0               	movlw	high __powers_
 12903  012730  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12904  012732  6EF7               	movwf	tblptrh,c
 12905  012734                     	if	1	;There are 3 active tblptr bytes
 12906  012734  6AF8               	clrf	tblptru,c
 12907  012736  0E00               	movlw	low (__mediumconst shr (0+16))
 12908  012738  22F8               	addwfc	tblptru,f,c
 12909  01273A                     	endif
 12910  01273A  0009               	tblrd		*+
 12911  01273C  CFF5 F146          	movff	tablat,___ftmul@f1
 12912  012740  0009               	tblrd		*+
 12913  012742  CFF5 F147          	movff	tablat,___ftmul@f1+1
 12914  012746  000A               	tblrd		*-
 12915  012748  CFF5 F148          	movff	tablat,___ftmul@f1+2
 12916  01274C  ECC3  F0A4         	call	___ftmul	;wreg free
 12917  012750  C146  F158         	movff	?___ftmul,_scale$3335
 12918  012754  C147  F159         	movff	?___ftmul+1,_scale$3335+1
 12919  012758  C148  F15A         	movff	?___ftmul+2,_scale$3335+2
 12920                           
 12921                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 12922  01275C  C158  F146         	movff	_scale$3335,___ftmul@f1
 12923  012760  C159  F147         	movff	_scale$3335+1,___ftmul@f1+1
 12924  012764  C15A  F148         	movff	_scale$3335+2,___ftmul@f1+2
 12925  012768  0E00               	movlw	0
 12926  01276A  0101               	movlb	1	; () banked
 12927  01276C  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12928  01276E  0E03               	movlw	3
 12929  012770  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12930  012772  0E00               	movlw	0
 12931  012774  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 12932  012776  0E0A               	movlw	10
 12933  012778  6F19               	movwf	___awmod@divisor& (0+255),b
 12934  01277A  515B               	movf	scale@scl& (0+255),w,b
 12935  01277C  6F17               	movwf	___awmod@dividend& (0+255),b
 12936  01277E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 12937  012780  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 12938  012782  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 12939  012784  EC3B  F0AD         	call	___awmod	;wreg free
 12940  012788  C117  F125         	movff	?___awmod,___wmul@multiplier
 12941  01278C  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 12942  012790  EC5D  F0B2         	call	___wmul	;wreg free
 12943  012794  0EDD               	movlw	low __powers_
 12944  012796  0101               	movlb	1	; () banked
 12945  012798  2525               	addwf	?___wmul& (0+255),w,b
 12946  01279A  6EF6               	movwf	tblptrl,c
 12947  01279C  0EF0               	movlw	high __powers_
 12948  01279E  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12949  0127A0  6EF7               	movwf	tblptrh,c
 12950  0127A2                     	if	1	;There are 3 active tblptr bytes
 12951  0127A2  6AF8               	clrf	tblptru,c
 12952  0127A4  0E00               	movlw	low (__mediumconst shr (0+16))
 12953  0127A6  22F8               	addwfc	tblptru,f,c
 12954  0127A8                     	endif
 12955  0127A8  0009               	tblrd		*+
 12956  0127AA  CFF5 F149          	movff	tablat,___ftmul@f2
 12957  0127AE  0009               	tblrd		*+
 12958  0127B0  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 12959  0127B4  000A               	tblrd		*-
 12960  0127B6  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 12961  0127BA  ECC3  F0A4         	call	___ftmul	;wreg free
 12962  0127BE  C146  F155         	movff	?___ftmul,?_scale
 12963  0127C2  C147  F156         	movff	?___ftmul+1,?_scale+1
 12964  0127C6  C148  F157         	movff	?___ftmul+2,?_scale+2
 12965  0127CA  0012               	return	
 12966  0127CC                     l1183:
 12967                           
 12968                           ;doprnt.c: 438: else if(scl > 10)
 12969  0127CC  0101               	movlb	1	; () banked
 12970  0127CE  515B               	movf	scale@scl& (0+255),w,b
 12971  0127D0  0A80               	xorlw	128
 12972  0127D2  0F75               	addlw	-139
 12973  0127D4  A0D8               	btfss	status,0,c
 12974  0127D6  D05C               	goto	l1185
 12975                           
 12976                           ; BSR set to: 1
 12977                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 12978  0127D8  0E00               	movlw	0
 12979  0127DA  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 12980  0127DC  0E0A               	movlw	10
 12981  0127DE  6F1F               	movwf	___awdiv@divisor& (0+255),b
 12982  0127E0  515B               	movf	scale@scl& (0+255),w,b
 12983  0127E2  6F1D               	movwf	___awdiv@dividend& (0+255),b
 12984  0127E4  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 12985  0127E6  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 12986  0127E8  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 12987  0127EA  EC80  F0AB         	call	___awdiv	;wreg free
 12988  0127EE  0E09               	movlw	9
 12989  0127F0  0101               	movlb	1	; () banked
 12990  0127F2  251D               	addwf	?___awdiv& (0+255),w,b
 12991  0127F4  6F25               	movwf	___wmul@multiplier& (0+255),b
 12992  0127F6  0E00               	movlw	0
 12993  0127F8  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 12994  0127FA  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 12995  0127FC  0E00               	movlw	0
 12996  0127FE  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12997  012800  0E03               	movlw	3
 12998  012802  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12999  012804  EC5D  F0B2         	call	___wmul	;wreg free
 13000  012808  0EDD               	movlw	low __powers_
 13001  01280A  0101               	movlb	1	; () banked
 13002  01280C  2525               	addwf	?___wmul& (0+255),w,b
 13003  01280E  6EF6               	movwf	tblptrl,c
 13004  012810  0EF0               	movlw	high __powers_
 13005  012812  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 13006  012814  6EF7               	movwf	tblptrh,c
 13007  012816                     	if	1	;There are 3 active tblptr bytes
 13008  012816  6AF8               	clrf	tblptru,c
 13009  012818  0E00               	movlw	low (__mediumconst shr (0+16))
 13010  01281A  22F8               	addwfc	tblptru,f,c
 13011  01281C                     	endif
 13012  01281C  0009               	tblrd		*+
 13013  01281E  CFF5 F146          	movff	tablat,___ftmul@f1
 13014  012822  0009               	tblrd		*+
 13015  012824  CFF5 F147          	movff	tablat,___ftmul@f1+1
 13016  012828  000A               	tblrd		*-
 13017  01282A  CFF5 F148          	movff	tablat,___ftmul@f1+2
 13018  01282E  0E00               	movlw	0
 13019  012830  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13020  012832  0E03               	movlw	3
 13021  012834  6F27               	movwf	___wmul@multiplicand& (0+255),b
 13022  012836  0E00               	movlw	0
 13023  012838  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 13024  01283A  0E0A               	movlw	10
 13025  01283C  6F19               	movwf	___awmod@divisor& (0+255),b
 13026  01283E  515B               	movf	scale@scl& (0+255),w,b
 13027  012840  6F17               	movwf	___awmod@dividend& (0+255),b
 13028  012842  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 13029  012844  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 13030  012846  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 13031  012848  EC3B  F0AD         	call	___awmod	;wreg free
 13032  01284C  C117  F125         	movff	?___awmod,___wmul@multiplier
 13033  012850  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 13034  012854  EC5D  F0B2         	call	___wmul	;wreg free
 13035  012858  0EDD               	movlw	low __powers_
 13036  01285A  0101               	movlb	1	; () banked
 13037  01285C  2525               	addwf	?___wmul& (0+255),w,b
 13038  01285E  6EF6               	movwf	tblptrl,c
 13039  012860  0EF0               	movlw	high __powers_
 13040  012862  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 13041  012864  6EF7               	movwf	tblptrh,c
 13042  012866                     	if	1	;There are 3 active tblptr bytes
 13043  012866  6AF8               	clrf	tblptru,c
 13044  012868  0E00               	movlw	low (__mediumconst shr (0+16))
 13045  01286A  22F8               	addwfc	tblptru,f,c
 13046  01286C                     	endif
 13047  01286C  0009               	tblrd		*+
 13048  01286E  CFF5 F149          	movff	tablat,___ftmul@f2
 13049  012872  0009               	tblrd		*+
 13050  012874  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 13051  012878  000A               	tblrd		*-
 13052  01287A  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 13053  01287E  ECC3  F0A4         	call	___ftmul	;wreg free
 13054  012882  C146  F155         	movff	?___ftmul,?_scale
 13055  012886  C147  F156         	movff	?___ftmul+1,?_scale+1
 13056  01288A  C148  F157         	movff	?___ftmul+2,?_scale+2
 13057  01288E  0012               	return	
 13058  012890                     l1185:
 13059                           
 13060                           ;doprnt.c: 440: return _powers_[scl];
 13061  012890  0101               	movlb	1	; () banked
 13062  012892  515B               	movf	scale@scl& (0+255),w,b
 13063  012894  0D03               	mullw	3
 13064  012896  0EDD               	movlw	low __powers_
 13065  012898  24F3               	addwf	prodl,w,c
 13066  01289A  6EF6               	movwf	tblptrl,c
 13067  01289C  0EF0               	movlw	high __powers_
 13068  01289E  20F4               	addwfc	prodh,w,c
 13069  0128A0  6EF7               	movwf	tblptrh,c
 13070  0128A2                     	if	1	;There are 3 active tblptr bytes
 13071  0128A2  6AF8               	clrf	tblptru,c
 13072  0128A4  0E00               	movlw	low (__mediumconst shr (0+16))
 13073  0128A6  22F8               	addwfc	tblptru,f,c
 13074  0128A8                     	endif
 13075  0128A8  0009               	tblrd		*+
 13076  0128AA  CFF5 F155          	movff	tablat,?_scale
 13077  0128AE  0009               	tblrd		*+
 13078  0128B0  CFF5 F156          	movff	tablat,?_scale+1
 13079  0128B4  000A               	tblrd		*-
 13080  0128B6  CFF5 F157          	movff	tablat,?_scale+2
 13081  0128BA  0012               	return	
 13082  0128BC                     __end_of_scale:
 13083                           	opt stack 0
 13084                           tblptru	equ	0xFF8
 13085                           tblptrh	equ	0xFF7
 13086                           tblptrl	equ	0xFF6
 13087                           tablat	equ	0xFF5
 13088                           prodh	equ	0xFF4
 13089                           prodl	equ	0xFF3
 13090                           intcon	equ	0xFF2
 13091                           indf0	equ	0xFEF
 13092                           postinc0	equ	0xFEE
 13093                           fsr0h	equ	0xFEA
 13094                           fsr0l	equ	0xFE9
 13095                           wreg	equ	0xFE8
 13096                           indf1	equ	0xFE7
 13097                           postdec1	equ	0xFE5
 13098                           fsr1h	equ	0xFE2
 13099                           fsr1l	equ	0xFE1
 13100                           indf2	equ	0xFDF
 13101                           postinc2	equ	0xFDE
 13102                           postdec2	equ	0xFDD
 13103                           fsr2h	equ	0xFDA
 13104                           fsr2l	equ	0xFD9
 13105                           status	equ	0xFD8
 13106                           
 13107 ;; *************** function _putch *****************
 13108 ;; Defined at:
 13109 ;;		line 180 in file "mcc_generated_files/eusart2.c"
 13110 ;; Parameters:    Size  Location     Type
 13111 ;;  txData          1    wreg     unsigned char 
 13112 ;; Auto vars:     Size  Location     Type
 13113 ;;  txData          1   24[BANK1 ] unsigned char 
 13114 ;; Return value:  Size  Location     Type
 13115 ;;                  1    wreg      void 
 13116 ;; Registers used:
 13117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13118 ;; Tracked objects:
 13119 ;;		On entry : 0/0
 13120 ;;		On exit  : 0/0
 13121 ;;		Unchanged: 0/0
 13122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13124 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13126 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13127 ;;Total ram usage:        1 bytes
 13128 ;; Hardware stack levels used:    1
 13129 ;; Hardware stack levels required when called:   15
 13130 ;; This function calls:
 13131 ;;		_EUSART2_Write
 13132 ;; This function is called by:
 13133 ;;		_printf
 13134 ;; This function uses a non-reentrant model
 13135 ;;
 13136                           
 13137                           	psect	text26
 13138  016730                     __ptext26:
 13139                           	opt stack 0
 13140  016730                     _putch:
 13141                           	opt stack 12
 13142                           
 13143                           ;incstack = 0
 13144                           ;putch@txData stored from wreg
 13145  016730  0101               	movlb	1	; () banked
 13146  016732  6F18               	movwf	putch@txData& (0+255),b
 13147                           
 13148                           ;eusart2.c: 182: EUSART2_Write(txData);
 13149  016734  0101               	movlb	1	; () banked
 13150  016736  5118               	movf	putch@txData& (0+255),w,b
 13151  016738  EC89  F0B0         	call	_EUSART2_Write
 13152  01673C  0012               	return		;funcret
 13153  01673E                     __end_of_putch:
 13154                           	opt stack 0
 13155                           tblptru	equ	0xFF8
 13156                           tblptrh	equ	0xFF7
 13157                           tblptrl	equ	0xFF6
 13158                           tablat	equ	0xFF5
 13159                           prodh	equ	0xFF4
 13160                           prodl	equ	0xFF3
 13161                           intcon	equ	0xFF2
 13162                           indf0	equ	0xFEF
 13163                           postinc0	equ	0xFEE
 13164                           fsr0h	equ	0xFEA
 13165                           fsr0l	equ	0xFE9
 13166                           wreg	equ	0xFE8
 13167                           indf1	equ	0xFE7
 13168                           postdec1	equ	0xFE5
 13169                           fsr1h	equ	0xFE2
 13170                           fsr1l	equ	0xFE1
 13171                           indf2	equ	0xFDF
 13172                           postinc2	equ	0xFDE
 13173                           postdec2	equ	0xFDD
 13174                           fsr2h	equ	0xFDA
 13175                           fsr2l	equ	0xFD9
 13176                           status	equ	0xFD8
 13177                           
 13178 ;; *************** function _EUSART2_Write *****************
 13179 ;; Defined at:
 13180 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 13181 ;; Parameters:    Size  Location     Type
 13182 ;;  txData          1    wreg     unsigned char 
 13183 ;; Auto vars:     Size  Location     Type
 13184 ;;  txData          1   23[BANK1 ] unsigned char 
 13185 ;; Return value:  Size  Location     Type
 13186 ;;                  1    wreg      void 
 13187 ;; Registers used:
 13188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13189 ;; Tracked objects:
 13190 ;;		On entry : 0/0
 13191 ;;		On exit  : 0/0
 13192 ;;		Unchanged: 0/0
 13193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13195 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13197 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13198 ;;Total ram usage:        1 bytes
 13199 ;; Hardware stack levels used:    1
 13200 ;; Hardware stack levels required when called:   14
 13201 ;; This function calls:
 13202 ;;		Nothing
 13203 ;; This function is called by:
 13204 ;;		_putch
 13205 ;; This function uses a non-reentrant model
 13206 ;;
 13207                           
 13208                           	psect	text27
 13209  016112                     __ptext27:
 13210                           	opt stack 0
 13211  016112                     _EUSART2_Write:
 13212                           	opt stack 12
 13213                           
 13214                           ;incstack = 0
 13215                           ;EUSART2_Write@txData stored from wreg
 13216  016112  0101               	movlb	1	; () banked
 13217  016114  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 13218                           
 13219                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
 13220  016116  D001               	goto	l374
 13221  016118                     l375:
 13222                           
 13223                           ; BSR set to: 1
 13224  016118  0004               	clrwdt		;# 
 13225  01611A                     l374:
 13226  01611A  0101               	movlb	1	; () banked
 13227  01611C  51DC               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 13228  01611E  B4D8               	btfsc	status,2,c
 13229  016120  D7FB               	goto	l375
 13230                           
 13231                           ; BSR set to: 1
 13232                           ;eusart2.c: 156: }
 13233                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
 13234  016122  010E               	movlb	14	; () banked
 13235  016124  BD2C               	btfsc	44,6,b	;volatile
 13236  016126  D003               	goto	l377
 13237                           
 13238                           ; BSR set to: 14
 13239                           ;eusart2.c: 159: {
 13240                           ;eusart2.c: 160: TX2REG = txData;
 13241  016128  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 13242                           
 13243                           ;eusart2.c: 161: }
 13244  01612C  D013               	goto	l378
 13245  01612E                     l377:
 13246                           
 13247                           ; BSR set to: 14
 13248                           ;eusart2.c: 162: else
 13249                           ;eusart2.c: 163: {
 13250                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
 13251  01612E  9D2C               	bcf	44,6,b	;volatile
 13252                           
 13253                           ; BSR set to: 14
 13254                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
 13255  016130  0101               	movlb	1	; () banked
 13256  016132  51DE               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 13257  016134  0D01               	mullw	1
 13258  016136  0E00               	movlw	low _eusart2TxBuffer
 13259  016138  24F3               	addwf	prodl,w,c
 13260  01613A  6ED9               	movwf	fsr2l,c
 13261  01613C  0E02               	movlw	high _eusart2TxBuffer
 13262  01613E  20F4               	addwfc	prodh,w,c
 13263  016140  6EDA               	movwf	fsr2h,c
 13264  016142  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 13265                           
 13266                           ; BSR set to: 1
 13267  016146  2BDE               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 13268                           
 13269                           ; BSR set to: 1
 13270                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 13271  016148  0E7F               	movlw	127
 13272  01614A  65DE               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 13273  01614C  D002               	goto	l379
 13274                           
 13275                           ; BSR set to: 1
 13276                           ;eusart2.c: 167: {
 13277                           ;eusart2.c: 168: eusart2TxHead = 0;
 13278  01614E  0E00               	movlw	0
 13279  016150  6FDE               	movwf	_eusart2TxHead& (0+255),b	;volatile
 13280  016152                     l379:
 13281                           
 13282                           ; BSR set to: 1
 13283                           ;eusart2.c: 169: }
 13284                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
 13285                           
 13286                           ; BSR set to: 1
 13287  016152  07DC               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 13288  016154                     l378:
 13289                           
 13290                           ;eusart2.c: 171: }
 13291                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
 13292                           
 13293                           ; BSR set to: 1
 13294  016154  010E               	movlb	14	; () banked
 13295  016156  8D2C               	bsf	44,6,b	;volatile
 13296                           
 13297                           ; BSR set to: 14
 13298  016158  0012               	return		;funcret
 13299  01615A                     __end_of_EUSART2_Write:
 13300                           	opt stack 0
 13301                           tblptru	equ	0xFF8
 13302                           tblptrh	equ	0xFF7
 13303                           tblptrl	equ	0xFF6
 13304                           tablat	equ	0xFF5
 13305                           prodh	equ	0xFF4
 13306                           prodl	equ	0xFF3
 13307                           intcon	equ	0xFF2
 13308                           indf0	equ	0xFEF
 13309                           postinc0	equ	0xFEE
 13310                           fsr0h	equ	0xFEA
 13311                           fsr0l	equ	0xFE9
 13312                           wreg	equ	0xFE8
 13313                           indf1	equ	0xFE7
 13314                           postdec1	equ	0xFE5
 13315                           fsr1h	equ	0xFE2
 13316                           fsr1l	equ	0xFE1
 13317                           indf2	equ	0xFDF
 13318                           postinc2	equ	0xFDE
 13319                           postdec2	equ	0xFDD
 13320                           fsr2h	equ	0xFDA
 13321                           fsr2l	equ	0xFD9
 13322                           status	equ	0xFD8
 13323                           
 13324 ;; *************** function _isdigit *****************
 13325 ;; Defined at:
 13326 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 13327 ;; Parameters:    Size  Location     Type
 13328 ;;  c               1    wreg     unsigned char 
 13329 ;; Auto vars:     Size  Location     Type
 13330 ;;  c               1   25[BANK1 ] unsigned char 
 13331 ;; Return value:  Size  Location     Type
 13332 ;;		None               void
 13333 ;; Registers used:
 13334 ;;		wreg, status,2, status,0
 13335 ;; Tracked objects:
 13336 ;;		On entry : 0/0
 13337 ;;		On exit  : 0/0
 13338 ;;		Unchanged: 0/0
 13339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13341 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13342 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13343 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13344 ;;Total ram usage:        3 bytes
 13345 ;; Hardware stack levels used:    1
 13346 ;; Hardware stack levels required when called:   14
 13347 ;; This function calls:
 13348 ;;		Nothing
 13349 ;; This function is called by:
 13350 ;;		_printf
 13351 ;;		_atoi
 13352 ;; This function uses a non-reentrant model
 13353 ;;
 13354                           
 13355                           	psect	text28
 13356  0165EC                     __ptext28:
 13357                           	opt stack 0
 13358  0165EC                     _isdigit:
 13359                           	opt stack 13
 13360                           
 13361                           ; BSR set to: 14
 13362                           ;incstack = 0
 13363                           ;isdigit@c stored from wreg
 13364  0165EC  0101               	movlb	1	; () banked
 13365  0165EE  6F19               	movwf	isdigit@c& (0+255),b
 13366  0165F0  0E00               	movlw	0
 13367  0165F2  0101               	movlb	1	; () banked
 13368  0165F4  6F18               	movwf	_isdigit$2671& (0+255),b
 13369                           
 13370                           ; BSR set to: 1
 13371  0165F6  0E3A               	movlw	58
 13372  0165F8  6119               	cpfslt	isdigit@c& (0+255),b
 13373  0165FA  D005               	goto	l1711
 13374                           
 13375                           ; BSR set to: 1
 13376  0165FC  0E2F               	movlw	47
 13377  0165FE  6519               	cpfsgt	isdigit@c& (0+255),b
 13378  016600  D002               	goto	l1711
 13379                           
 13380                           ; BSR set to: 1
 13381  016602  0E01               	movlw	1
 13382  016604  6F18               	movwf	_isdigit$2671& (0+255),b
 13383  016606                     l1711:
 13384                           
 13385                           ; BSR set to: 1
 13386                           
 13387                           ; BSR set to: 1
 13388  016606  C118  F117         	movff	_isdigit$2671,??_isdigit
 13389  01660A  3117               	rrcf	??_isdigit& (0+255),w,b
 13390  01660C  0012               	return	
 13391  01660E                     __end_of_isdigit:
 13392                           	opt stack 0
 13393                           tblptru	equ	0xFF8
 13394                           tblptrh	equ	0xFF7
 13395                           tblptrl	equ	0xFF6
 13396                           tablat	equ	0xFF5
 13397                           prodh	equ	0xFF4
 13398                           prodl	equ	0xFF3
 13399                           intcon	equ	0xFF2
 13400                           indf0	equ	0xFEF
 13401                           postinc0	equ	0xFEE
 13402                           fsr0h	equ	0xFEA
 13403                           fsr0l	equ	0xFE9
 13404                           wreg	equ	0xFE8
 13405                           indf1	equ	0xFE7
 13406                           postdec1	equ	0xFE5
 13407                           fsr1h	equ	0xFE2
 13408                           fsr1l	equ	0xFE1
 13409                           indf2	equ	0xFDF
 13410                           postinc2	equ	0xFDE
 13411                           postdec2	equ	0xFDD
 13412                           fsr2h	equ	0xFDA
 13413                           fsr2l	equ	0xFD9
 13414                           status	equ	0xFD8
 13415                           
 13416 ;; *************** function _fround *****************
 13417 ;; Defined at:
 13418 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 13419 ;; Parameters:    Size  Location     Type
 13420 ;;  prec            1    wreg     unsigned char 
 13421 ;; Auto vars:     Size  Location     Type
 13422 ;;  prec            1   94[BANK1 ] unsigned char 
 13423 ;; Return value:  Size  Location     Type
 13424 ;;                  3   85[BANK1 ] unsigned char 
 13425 ;; Registers used:
 13426 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13427 ;; Tracked objects:
 13428 ;;		On entry : 0/0
 13429 ;;		On exit  : 0/0
 13430 ;;		Unchanged: 0/0
 13431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13432 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13433 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13435 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13436 ;;Total ram usage:       10 bytes
 13437 ;; Hardware stack levels used:    1
 13438 ;; Hardware stack levels required when called:   16
 13439 ;; This function calls:
 13440 ;;		___awdiv
 13441 ;;		___awmod
 13442 ;;		___ftmul
 13443 ;;		___wmul
 13444 ;; This function is called by:
 13445 ;;		_printf
 13446 ;; This function uses a non-reentrant model
 13447 ;;
 13448                           
 13449                           	psect	text29
 13450  013074                     __ptext29:
 13451                           	opt stack 0
 13452  013074                     _fround:
 13453                           	opt stack 11
 13454                           
 13455                           ; BSR set to: 1
 13456                           ;incstack = 0
 13457                           ;fround@prec stored from wreg
 13458  013074  0101               	movlb	1	; () banked
 13459  013076  6F5E               	movwf	fround@prec& (0+255),b
 13460                           
 13461                           ;doprnt.c: 413: if(prec>=110)
 13462  013078  0E6D               	movlw	109
 13463  01307A  0101               	movlb	1	; () banked
 13464  01307C  655E               	cpfsgt	fround@prec& (0+255),b
 13465  01307E  D0AF               	goto	l1172
 13466                           
 13467                           ; BSR set to: 1
 13468                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 13469  013080  0E00               	movlw	0
 13470  013082  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13471  013084  0E03               	movlw	3
 13472  013086  6F27               	movwf	___wmul@multiplicand& (0+255),b
 13473  013088  0E00               	movlw	0
 13474  01308A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 13475  01308C  0E0A               	movlw	10
 13476  01308E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 13477  013090  0E00               	movlw	0
 13478  013092  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 13479  013094  0E64               	movlw	100
 13480  013096  6F19               	movwf	___awmod@divisor& (0+255),b
 13481  013098  C15E  F117         	movff	fround@prec,___awmod@dividend
 13482  01309C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 13483  01309E  EC3B  F0AD         	call	___awmod	;wreg free
 13484  0130A2  C117  F11D         	movff	?___awmod,___awdiv@dividend
 13485  0130A6  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 13486  0130AA  EC80  F0AB         	call	___awdiv	;wreg free
 13487  0130AE  0E09               	movlw	9
 13488  0130B0  0101               	movlb	1	; () banked
 13489  0130B2  251D               	addwf	?___awdiv& (0+255),w,b
 13490  0130B4  6F25               	movwf	___wmul@multiplier& (0+255),b
 13491  0130B6  0E00               	movlw	0
 13492  0130B8  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 13493  0130BA  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 13494  0130BC  EC5D  F0B2         	call	___wmul	;wreg free
 13495  0130C0  0E04               	movlw	low __npowers_
 13496  0130C2  0101               	movlb	1	; () banked
 13497  0130C4  2525               	addwf	?___wmul& (0+255),w,b
 13498  0130C6  6EF6               	movwf	tblptrl,c
 13499  0130C8  0EF1               	movlw	high __npowers_
 13500  0130CA  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 13501  0130CC  6EF7               	movwf	tblptrh,c
 13502  0130CE                     	if	1	;There are 3 active tblptr bytes
 13503  0130CE  6AF8               	clrf	tblptru,c
 13504  0130D0  0E00               	movlw	low (__mediumconst shr (0+16))
 13505  0130D2  22F8               	addwfc	tblptru,f,c
 13506  0130D4                     	endif
 13507  0130D4  0009               	tblrd		*+
 13508  0130D6  CFF5 F149          	movff	tablat,___ftmul@f2
 13509  0130DA  0009               	tblrd		*+
 13510  0130DC  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 13511  0130E0  000A               	tblrd		*-
 13512  0130E2  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 13513  0130E6  0E00               	movlw	0
 13514  0130E8  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 13515  0130EA  0E64               	movlw	100
 13516  0130EC  6F1F               	movwf	___awdiv@divisor& (0+255),b
 13517  0130EE  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 13518  0130F2  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 13519  0130F4  EC80  F0AB         	call	___awdiv	;wreg free
 13520  0130F8  0E12               	movlw	18
 13521  0130FA  0101               	movlb	1	; () banked
 13522  0130FC  251D               	addwf	?___awdiv& (0+255),w,b
 13523  0130FE  6F25               	movwf	___wmul@multiplier& (0+255),b
 13524  013100  0E00               	movlw	0
 13525  013102  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 13526  013104  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 13527  013106  0E00               	movlw	0
 13528  013108  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13529  01310A  0E03               	movlw	3
 13530  01310C  6F27               	movwf	___wmul@multiplicand& (0+255),b
 13531  01310E  EC5D  F0B2         	call	___wmul	;wreg free
 13532  013112  0E04               	movlw	low __npowers_
 13533  013114  0101               	movlb	1	; () banked
 13534  013116  2525               	addwf	?___wmul& (0+255),w,b
 13535  013118  6EF6               	movwf	tblptrl,c
 13536  01311A  0EF1               	movlw	high __npowers_
 13537  01311C  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 13538  01311E  6EF7               	movwf	tblptrh,c
 13539  013120                     	if	1	;There are 3 active tblptr bytes
 13540  013120  6AF8               	clrf	tblptru,c
 13541  013122  0E00               	movlw	low (__mediumconst shr (0+16))
 13542  013124  22F8               	addwfc	tblptru,f,c
 13543  013126                     	endif
 13544  013126  0009               	tblrd		*+
 13545  013128  CFF5 F146          	movff	tablat,___ftmul@f1
 13546  01312C  0009               	tblrd		*+
 13547  01312E  CFF5 F147          	movff	tablat,___ftmul@f1+1
 13548  013132  000A               	tblrd		*-
 13549  013134  CFF5 F148          	movff	tablat,___ftmul@f1+2
 13550  013138  ECC3  F0A4         	call	___ftmul	;wreg free
 13551  01313C  C146  F15B         	movff	?___ftmul,_fround$3333
 13552  013140  C147  F15C         	movff	?___ftmul+1,_fround$3333+1
 13553  013144  C148  F15D         	movff	?___ftmul+2,_fround$3333+2
 13554                           
 13555                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 13556  013148  0E00               	movlw	0
 13557  01314A  0101               	movlb	1	; () banked
 13558  01314C  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13559  01314E  0E03               	movlw	3
 13560  013150  6F27               	movwf	___wmul@multiplicand& (0+255),b
 13561  013152  0E00               	movlw	0
 13562  013154  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 13563  013156  0E0A               	movlw	10
 13564  013158  6F19               	movwf	___awmod@divisor& (0+255),b
 13565  01315A  C15E  F117         	movff	fround@prec,___awmod@dividend
 13566  01315E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 13567  013160  EC3B  F0AD         	call	___awmod	;wreg free
 13568  013164  C117  F125         	movff	?___awmod,___wmul@multiplier
 13569  013168  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 13570  01316C  EC5D  F0B2         	call	___wmul	;wreg free
 13571  013170  0E04               	movlw	low __npowers_
 13572  013172  0101               	movlb	1	; () banked
 13573  013174  2525               	addwf	?___wmul& (0+255),w,b
 13574  013176  6EF6               	movwf	tblptrl,c
 13575  013178  0EF1               	movlw	high __npowers_
 13576  01317A  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 13577  01317C  6EF7               	movwf	tblptrh,c
 13578  01317E                     	if	1	;There are 3 active tblptr bytes
 13579  01317E  6AF8               	clrf	tblptru,c
 13580  013180  0E00               	movlw	low (__mediumconst shr (0+16))
 13581  013182  22F8               	addwfc	tblptru,f,c
 13582  013184                     	endif
 13583  013184  0009               	tblrd		*+
 13584  013186  CFF5 F149          	movff	tablat,___ftmul@f2
 13585  01318A  0009               	tblrd		*+
 13586  01318C  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 13587  013190  000A               	tblrd		*-
 13588  013192  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 13589  013196  C15B  F146         	movff	_fround$3333,___ftmul@f1
 13590  01319A  C15C  F147         	movff	_fround$3333+1,___ftmul@f1+1
 13591  01319E  C15D  F148         	movff	_fround$3333+2,___ftmul@f1+2
 13592  0131A2  ECC3  F0A4         	call	___ftmul	;wreg free
 13593  0131A6  C146  F158         	movff	?___ftmul,_fround$3334
 13594  0131AA  C147  F159         	movff	?___ftmul+1,_fround$3334+1
 13595  0131AE  C148  F15A         	movff	?___ftmul+2,_fround$3334+2
 13596                           
 13597                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 13598  0131B2  C158  F146         	movff	_fround$3334,___ftmul@f1
 13599  0131B6  C159  F147         	movff	_fround$3334+1,___ftmul@f1+1
 13600  0131BA  C15A  F148         	movff	_fround$3334+2,___ftmul@f1+2
 13601  0131BE  0E00               	movlw	0
 13602  0131C0  0101               	movlb	1	; () banked
 13603  0131C2  6F49               	movwf	___ftmul@f2& (0+255),b
 13604  0131C4  0E00               	movlw	0
 13605  0131C6  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 13606  0131C8  0E3F               	movlw	63
 13607  0131CA  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 13608  0131CC  ECC3  F0A4         	call	___ftmul	;wreg free
 13609  0131D0  C146  F155         	movff	?___ftmul,?_fround
 13610  0131D4  C147  F156         	movff	?___ftmul+1,?_fround+1
 13611  0131D8  C148  F157         	movff	?___ftmul+2,?_fround+2
 13612  0131DC  0012               	return	
 13613  0131DE                     l1172:
 13614                           
 13615                           ;doprnt.c: 415: else if(prec > 10)
 13616  0131DE  0E0A               	movlw	10
 13617  0131E0  0101               	movlb	1	; () banked
 13618  0131E2  655E               	cpfsgt	fround@prec& (0+255),b
 13619  0131E4  D06D               	goto	l1175
 13620                           
 13621                           ; BSR set to: 1
 13622                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 13623  0131E6  0E00               	movlw	0
 13624  0131E8  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13625  0131EA  0E03               	movlw	3
 13626  0131EC  6F27               	movwf	___wmul@multiplicand& (0+255),b
 13627  0131EE  0E00               	movlw	0
 13628  0131F0  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 13629  0131F2  0E0A               	movlw	10
 13630  0131F4  6F19               	movwf	___awmod@divisor& (0+255),b
 13631  0131F6  C15E  F117         	movff	fround@prec,___awmod@dividend
 13632  0131FA  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 13633  0131FC  EC3B  F0AD         	call	___awmod	;wreg free
 13634  013200  C117  F125         	movff	?___awmod,___wmul@multiplier
 13635  013204  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 13636  013208  EC5D  F0B2         	call	___wmul	;wreg free
 13637  01320C  0E04               	movlw	low __npowers_
 13638  01320E  0101               	movlb	1	; () banked
 13639  013210  2525               	addwf	?___wmul& (0+255),w,b
 13640  013212  6EF6               	movwf	tblptrl,c
 13641  013214  0EF1               	movlw	high __npowers_
 13642  013216  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 13643  013218  6EF7               	movwf	tblptrh,c
 13644  01321A                     	if	1	;There are 3 active tblptr bytes
 13645  01321A  6AF8               	clrf	tblptru,c
 13646  01321C  0E00               	movlw	low (__mediumconst shr (0+16))
 13647  01321E  22F8               	addwfc	tblptru,f,c
 13648  013220                     	endif
 13649  013220  0009               	tblrd		*+
 13650  013222  CFF5 F149          	movff	tablat,___ftmul@f2
 13651  013226  0009               	tblrd		*+
 13652  013228  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 13653  01322C  000A               	tblrd		*-
 13654  01322E  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 13655  013232  0E00               	movlw	0
 13656  013234  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 13657  013236  0E0A               	movlw	10
 13658  013238  6F1F               	movwf	___awdiv@divisor& (0+255),b
 13659  01323A  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 13660  01323E  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 13661  013240  EC80  F0AB         	call	___awdiv	;wreg free
 13662  013244  0E09               	movlw	9
 13663  013246  0101               	movlb	1	; () banked
 13664  013248  251D               	addwf	?___awdiv& (0+255),w,b
 13665  01324A  6F25               	movwf	___wmul@multiplier& (0+255),b
 13666  01324C  0E00               	movlw	0
 13667  01324E  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 13668  013250  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 13669  013252  0E00               	movlw	0
 13670  013254  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13671  013256  0E03               	movlw	3
 13672  013258  6F27               	movwf	___wmul@multiplicand& (0+255),b
 13673  01325A  EC5D  F0B2         	call	___wmul	;wreg free
 13674  01325E  0E04               	movlw	low __npowers_
 13675  013260  0101               	movlb	1	; () banked
 13676  013262  2525               	addwf	?___wmul& (0+255),w,b
 13677  013264  6EF6               	movwf	tblptrl,c
 13678  013266  0EF1               	movlw	high __npowers_
 13679  013268  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 13680  01326A  6EF7               	movwf	tblptrh,c
 13681  01326C                     	if	1	;There are 3 active tblptr bytes
 13682  01326C  6AF8               	clrf	tblptru,c
 13683  01326E  0E00               	movlw	low (__mediumconst shr (0+16))
 13684  013270  22F8               	addwfc	tblptru,f,c
 13685  013272                     	endif
 13686  013272  0009               	tblrd		*+
 13687  013274  CFF5 F146          	movff	tablat,___ftmul@f1
 13688  013278  0009               	tblrd		*+
 13689  01327A  CFF5 F147          	movff	tablat,___ftmul@f1+1
 13690  01327E  000A               	tblrd		*-
 13691  013280  CFF5 F148          	movff	tablat,___ftmul@f1+2
 13692  013284  ECC3  F0A4         	call	___ftmul	;wreg free
 13693  013288  C146  F15B         	movff	?___ftmul,_fround$3333
 13694  01328C  C147  F15C         	movff	?___ftmul+1,_fround$3333+1
 13695  013290  C148  F15D         	movff	?___ftmul+2,_fround$3333+2
 13696                           
 13697                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 13698  013294  C15B  F146         	movff	_fround$3333,___ftmul@f1
 13699  013298  C15C  F147         	movff	_fround$3333+1,___ftmul@f1+1
 13700  01329C  C15D  F148         	movff	_fround$3333+2,___ftmul@f1+2
 13701  0132A0  0E00               	movlw	0
 13702  0132A2  0101               	movlb	1	; () banked
 13703  0132A4  6F49               	movwf	___ftmul@f2& (0+255),b
 13704  0132A6  0E00               	movlw	0
 13705  0132A8  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 13706  0132AA  0E3F               	movlw	63
 13707  0132AC  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 13708  0132AE  ECC3  F0A4         	call	___ftmul	;wreg free
 13709  0132B2  C146  F155         	movff	?___ftmul,?_fround
 13710  0132B6  C147  F156         	movff	?___ftmul+1,?_fround+1
 13711  0132BA  C148  F157         	movff	?___ftmul+2,?_fround+2
 13712  0132BE  0012               	return	
 13713  0132C0                     l1175:
 13714                           
 13715                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 13716  0132C0  0101               	movlb	1	; () banked
 13717  0132C2  515E               	movf	fround@prec& (0+255),w,b
 13718  0132C4  0D03               	mullw	3
 13719  0132C6  0E04               	movlw	low __npowers_
 13720  0132C8  24F3               	addwf	prodl,w,c
 13721  0132CA  6EF6               	movwf	tblptrl,c
 13722  0132CC  0EF1               	movlw	high __npowers_
 13723  0132CE  20F4               	addwfc	prodh,w,c
 13724  0132D0  6EF7               	movwf	tblptrh,c
 13725  0132D2                     	if	1	;There are 3 active tblptr bytes
 13726  0132D2  6AF8               	clrf	tblptru,c
 13727  0132D4  0E00               	movlw	low (__mediumconst shr (0+16))
 13728  0132D6  22F8               	addwfc	tblptru,f,c
 13729  0132D8                     	endif
 13730  0132D8  0009               	tblrd		*+
 13731  0132DA  CFF5 F146          	movff	tablat,___ftmul@f1
 13732  0132DE  0009               	tblrd		*+
 13733  0132E0  CFF5 F147          	movff	tablat,___ftmul@f1+1
 13734  0132E4  000A               	tblrd		*-
 13735  0132E6  CFF5 F148          	movff	tablat,___ftmul@f1+2
 13736  0132EA  0E00               	movlw	0
 13737  0132EC  6F49               	movwf	___ftmul@f2& (0+255),b
 13738  0132EE  0E00               	movlw	0
 13739  0132F0  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 13740  0132F2  0E3F               	movlw	63
 13741  0132F4  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 13742  0132F6  ECC3  F0A4         	call	___ftmul	;wreg free
 13743  0132FA  C146  F155         	movff	?___ftmul,?_fround
 13744  0132FE  C147  F156         	movff	?___ftmul+1,?_fround+1
 13745  013302  C148  F157         	movff	?___ftmul+2,?_fround+2
 13746  013306  0012               	return	
 13747  013308                     __end_of_fround:
 13748                           	opt stack 0
 13749                           tblptru	equ	0xFF8
 13750                           tblptrh	equ	0xFF7
 13751                           tblptrl	equ	0xFF6
 13752                           tablat	equ	0xFF5
 13753                           prodh	equ	0xFF4
 13754                           prodl	equ	0xFF3
 13755                           intcon	equ	0xFF2
 13756                           indf0	equ	0xFEF
 13757                           postinc0	equ	0xFEE
 13758                           fsr0h	equ	0xFEA
 13759                           fsr0l	equ	0xFE9
 13760                           wreg	equ	0xFE8
 13761                           indf1	equ	0xFE7
 13762                           postdec1	equ	0xFE5
 13763                           fsr1h	equ	0xFE2
 13764                           fsr1l	equ	0xFE1
 13765                           indf2	equ	0xFDF
 13766                           postinc2	equ	0xFDE
 13767                           postdec2	equ	0xFDD
 13768                           fsr2h	equ	0xFDA
 13769                           fsr2l	equ	0xFD9
 13770                           status	equ	0xFD8
 13771                           
 13772 ;; *************** function ___wmul *****************
 13773 ;; Defined at:
 13774 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13775 ;; Parameters:    Size  Location     Type
 13776 ;;  multiplier      2   37[BANK1 ] unsigned int 
 13777 ;;  multiplicand    2   39[BANK1 ] unsigned int 
 13778 ;; Auto vars:     Size  Location     Type
 13779 ;;  product         2   41[BANK1 ] unsigned int 
 13780 ;; Return value:  Size  Location     Type
 13781 ;;                  2   37[BANK1 ] unsigned int 
 13782 ;; Registers used:
 13783 ;;		wreg, status,2, status,0, prodl, prodh
 13784 ;; Tracked objects:
 13785 ;;		On entry : 0/0
 13786 ;;		On exit  : 0/0
 13787 ;;		Unchanged: 0/0
 13788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13789 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13790 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13792 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13793 ;;Total ram usage:        6 bytes
 13794 ;; Hardware stack levels used:    1
 13795 ;; Hardware stack levels required when called:   14
 13796 ;; This function calls:
 13797 ;;		Nothing
 13798 ;; This function is called by:
 13799 ;;		_ringBufferLUT
 13800 ;;		_fround
 13801 ;;		_scale
 13802 ;;		_printf
 13803 ;;		_atoi
 13804 ;; This function uses a non-reentrant model
 13805 ;;
 13806                           
 13807                           	psect	text30
 13808  0164BA                     __ptext30:
 13809                           	opt stack 0
 13810  0164BA                     ___wmul:
 13811                           	opt stack 12
 13812                           
 13813                           ;incstack = 0
 13814  0164BA  0101               	movlb	1	; () banked
 13815  0164BC  5125               	movf	___wmul@multiplier& (0+255),w,b
 13816  0164BE  0327               	mulwf	___wmul@multiplicand& (0+255),b
 13817  0164C0  CFF3 F129          	movff	prodl,___wmul@product
 13818  0164C4  CFF4 F12A          	movff	prodh,___wmul@product+1
 13819  0164C8  5125               	movf	___wmul@multiplier& (0+255),w,b
 13820  0164CA  0328               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 13821  0164CC  50F3               	movf	prodl,w,c
 13822  0164CE  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 13823  0164D0  5126               	movf	(___wmul@multiplier+1)& (0+255),w,b
 13824  0164D2  0327               	mulwf	___wmul@multiplicand& (0+255),b
 13825  0164D4  50F3               	movf	prodl,w,c
 13826  0164D6  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 13827                           
 13828                           ; BSR set to: 1
 13829  0164D8  C129  F125         	movff	___wmul@product,?___wmul
 13830  0164DC  C12A  F126         	movff	___wmul@product+1,?___wmul+1
 13831  0164E0  0012               	return	
 13832  0164E2                     __end_of___wmul:
 13833                           	opt stack 0
 13834                           tblptru	equ	0xFF8
 13835                           tblptrh	equ	0xFF7
 13836                           tblptrl	equ	0xFF6
 13837                           tablat	equ	0xFF5
 13838                           prodh	equ	0xFF4
 13839                           prodl	equ	0xFF3
 13840                           intcon	equ	0xFF2
 13841                           indf0	equ	0xFEF
 13842                           postinc0	equ	0xFEE
 13843                           fsr0h	equ	0xFEA
 13844                           fsr0l	equ	0xFE9
 13845                           wreg	equ	0xFE8
 13846                           indf1	equ	0xFE7
 13847                           postdec1	equ	0xFE5
 13848                           fsr1h	equ	0xFE2
 13849                           fsr1l	equ	0xFE1
 13850                           indf2	equ	0xFDF
 13851                           postinc2	equ	0xFDE
 13852                           postdec2	equ	0xFDD
 13853                           fsr2h	equ	0xFDA
 13854                           fsr2l	equ	0xFD9
 13855                           status	equ	0xFD8
 13856                           
 13857 ;; *************** function ___ftmul *****************
 13858 ;; Defined at:
 13859 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 13860 ;; Parameters:    Size  Location     Type
 13861 ;;  f1              3   70[BANK1 ] float 
 13862 ;;  f2              3   73[BANK1 ] float 
 13863 ;; Auto vars:     Size  Location     Type
 13864 ;;  f3_as_produc    3   80[BANK1 ] unsigned um
 13865 ;;  sign            1   84[BANK1 ] unsigned char 
 13866 ;;  cntr            1   83[BANK1 ] unsigned char 
 13867 ;;  exp             1   79[BANK1 ] unsigned char 
 13868 ;; Return value:  Size  Location     Type
 13869 ;;                  3   70[BANK1 ] float 
 13870 ;; Registers used:
 13871 ;;		wreg, status,2, status,0, cstack
 13872 ;; Tracked objects:
 13873 ;;		On entry : 0/0
 13874 ;;		On exit  : 0/0
 13875 ;;		Unchanged: 0/0
 13876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13877 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13878 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13879 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13880 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13881 ;;Total ram usage:       15 bytes
 13882 ;; Hardware stack levels used:    1
 13883 ;; Hardware stack levels required when called:   15
 13884 ;; This function calls:
 13885 ;;		___ftpack
 13886 ;; This function is called by:
 13887 ;;		_ringBufferLUT
 13888 ;;		_fround
 13889 ;;		_scale
 13890 ;;		_printf
 13891 ;; This function uses a non-reentrant model
 13892 ;;
 13893                           
 13894                           	psect	text31
 13895  014986                     __ptext31:
 13896                           	opt stack 0
 13897  014986                     ___ftmul:
 13898                           	opt stack 11
 13899                           
 13900                           ; BSR set to: 1
 13901                           ;incstack = 0
 13902  014986  C148  F14C         	movff	___ftmul@f1+2,??___ftmul
 13903  01498A  0101               	movlb	1	; () banked
 13904  01498C  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 13905  01498E  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 13906  014990  3547               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 13907  014992  374C               	rlcf	??___ftmul& (0+255),f,b
 13908  014994  E301               	bnc	u9641
 13909  014996  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 13910  014998                     u9641:
 13911  014998  514C               	movf	??___ftmul& (0+255),w,b
 13912  01499A  6F4F               	movwf	___ftmul@exp& (0+255),b
 13913  01499C  514F               	movf	___ftmul@exp& (0+255),w,b
 13914  01499E  A4D8               	btfss	status,2,c
 13915  0149A0  D007               	goto	l1675
 13916                           
 13917                           ; BSR set to: 1
 13918  0149A2  0E00               	movlw	0
 13919  0149A4  6F46               	movwf	?___ftmul& (0+255),b
 13920  0149A6  0E00               	movlw	0
 13921  0149A8  6F47               	movwf	(?___ftmul+1)& (0+255),b
 13922  0149AA  0E00               	movlw	0
 13923  0149AC  6F48               	movwf	(?___ftmul+2)& (0+255),b
 13924                           
 13925                           ; BSR set to: 1
 13926  0149AE  0012               	return	
 13927  0149B0                     l1675:
 13928                           
 13929                           ; BSR set to: 1
 13930                           
 13931                           ; BSR set to: 1
 13932  0149B0  C14B  F14C         	movff	___ftmul@f2+2,??___ftmul
 13933  0149B4  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 13934  0149B6  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 13935  0149B8  354A               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 13936  0149BA  374C               	rlcf	??___ftmul& (0+255),f,b
 13937  0149BC  E301               	bnc	u9661
 13938  0149BE  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 13939  0149C0                     u9661:
 13940  0149C0  514C               	movf	??___ftmul& (0+255),w,b
 13941  0149C2  6F54               	movwf	___ftmul@sign& (0+255),b
 13942  0149C4  5154               	movf	___ftmul@sign& (0+255),w,b
 13943  0149C6  A4D8               	btfss	status,2,c
 13944  0149C8  D007               	goto	l1677
 13945                           
 13946                           ; BSR set to: 1
 13947  0149CA  0E00               	movlw	0
 13948  0149CC  6F46               	movwf	?___ftmul& (0+255),b
 13949  0149CE  0E00               	movlw	0
 13950  0149D0  6F47               	movwf	(?___ftmul+1)& (0+255),b
 13951  0149D2  0E00               	movlw	0
 13952  0149D4  6F48               	movwf	(?___ftmul+2)& (0+255),b
 13953                           
 13954                           ; BSR set to: 1
 13955  0149D6  0012               	return	
 13956  0149D8                     l1677:
 13957                           
 13958                           ; BSR set to: 1
 13959                           
 13960                           ; BSR set to: 1
 13961  0149D8  5154               	movf	___ftmul@sign& (0+255),w,b
 13962  0149DA  0F7B               	addlw	123
 13963  0149DC  274F               	addwf	___ftmul@exp& (0+255),f,b
 13964                           
 13965                           ; BSR set to: 1
 13966  0149DE  C148  F154         	movff	___ftmul@f1+2,___ftmul@sign
 13967  0149E2  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 13968  0149E4  1B54               	xorwf	___ftmul@sign& (0+255),f,b
 13969  0149E6  0E80               	movlw	128
 13970  0149E8  1754               	andwf	___ftmul@sign& (0+255),f,b
 13971                           
 13972                           ; BSR set to: 1
 13973  0149EA  8F47               	bsf	(___ftmul@f1+1)& (0+255),7,b
 13974                           
 13975                           ; BSR set to: 1
 13976  0149EC  8F4A               	bsf	(___ftmul@f2+1)& (0+255),7,b
 13977                           
 13978                           ; BSR set to: 1
 13979  0149EE  0EFF               	movlw	255
 13980  0149F0  1749               	andwf	___ftmul@f2& (0+255),f,b
 13981  0149F2  0EFF               	movlw	255
 13982  0149F4  174A               	andwf	(___ftmul@f2+1)& (0+255),f,b
 13983  0149F6  0E00               	movlw	0
 13984  0149F8  174B               	andwf	(___ftmul@f2+2)& (0+255),f,b
 13985                           
 13986                           ; BSR set to: 1
 13987  0149FA  0E00               	movlw	0
 13988  0149FC  6F50               	movwf	___ftmul@f3_as_product& (0+255),b
 13989  0149FE  0E00               	movlw	0
 13990  014A00  6F51               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 13991  014A02  0E00               	movlw	0
 13992  014A04  6F52               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 13993                           
 13994                           ; BSR set to: 1
 13995  014A06  0E07               	movlw	7
 13996  014A08  6F53               	movwf	___ftmul@cntr& (0+255),b
 13997  014A0A                     
 13998                           ; BSR set to: 1
 13999                           
 14000                           ; BSR set to: 1
 14001  014A0A  A146               	btfss	___ftmul@f1& (0+255),0,b
 14002  014A0C  D006               	goto	l1679
 14003                           
 14004                           ; BSR set to: 1
 14005  014A0E  5149               	movf	___ftmul@f2& (0+255),w,b
 14006  014A10  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 14007  014A12  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 14008  014A14  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 14009  014A16  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 14010  014A18  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 14011  014A1A                     l1679:
 14012                           
 14013                           ; BSR set to: 1
 14014                           
 14015                           ; BSR set to: 1
 14016  014A1A  90D8               	bcf	status,0,c
 14017  014A1C  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 14018  014A1E  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 14019  014A20  3346               	rrcf	___ftmul@f1& (0+255),f,b
 14020  014A22  90D8               	bcf	status,0,c
 14021  014A24  3749               	rlcf	___ftmul@f2& (0+255),f,b
 14022  014A26  374A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 14023  014A28  374B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 14024                           
 14025                           ; BSR set to: 1
 14026  014A2A  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 14027  014A2C  D7EE               	goto	l1678
 14028                           
 14029                           ; BSR set to: 1
 14030                           
 14031                           ; BSR set to: 1
 14032  014A2E  0E09               	movlw	9
 14033  014A30  6F53               	movwf	___ftmul@cntr& (0+255),b
 14034  014A32                     
 14035                           ; BSR set to: 1
 14036                           
 14037                           ; BSR set to: 1
 14038  014A32  A146               	btfss	___ftmul@f1& (0+255),0,b
 14039  014A34  D006               	goto	l1682
 14040                           
 14041                           ; BSR set to: 1
 14042  014A36  5149               	movf	___ftmul@f2& (0+255),w,b
 14043  014A38  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 14044  014A3A  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 14045  014A3C  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 14046  014A3E  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 14047  014A40  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 14048  014A42                     l1682:
 14049                           
 14050                           ; BSR set to: 1
 14051                           
 14052                           ; BSR set to: 1
 14053  014A42  90D8               	bcf	status,0,c
 14054  014A44  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 14055  014A46  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 14056  014A48  3346               	rrcf	___ftmul@f1& (0+255),f,b
 14057  014A4A  90D8               	bcf	status,0,c
 14058  014A4C  3352               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 14059  014A4E  3351               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 14060  014A50  3350               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 14061                           
 14062                           ; BSR set to: 1
 14063  014A52  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 14064  014A54  D7EE               	goto	l1681
 14065                           
 14066                           ; BSR set to: 1
 14067                           
 14068                           ; BSR set to: 1
 14069  014A56  C150  F117         	movff	___ftmul@f3_as_product,___ftpack@arg
 14070  014A5A  C151  F118         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 14071  014A5E  C152  F119         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 14072  014A62  C14F  F11A         	movff	___ftmul@exp,___ftpack@exp
 14073  014A66  C154  F11B         	movff	___ftmul@sign,___ftpack@sign
 14074  014A6A  ECC7  F0A8         	call	___ftpack	;wreg free
 14075  014A6E  C117  F146         	movff	?___ftpack,?___ftmul
 14076  014A72  C118  F147         	movff	?___ftpack+1,?___ftmul+1
 14077  014A76  C119  F148         	movff	?___ftpack+2,?___ftmul+2
 14078  014A7A  0012               	return	
 14079  014A7C                     __end_of___ftmul:
 14080                           	opt stack 0
 14081                           tblptru	equ	0xFF8
 14082                           tblptrh	equ	0xFF7
 14083                           tblptrl	equ	0xFF6
 14084                           tablat	equ	0xFF5
 14085                           prodh	equ	0xFF4
 14086                           prodl	equ	0xFF3
 14087                           intcon	equ	0xFF2
 14088                           indf0	equ	0xFEF
 14089                           postinc0	equ	0xFEE
 14090                           fsr0h	equ	0xFEA
 14091                           fsr0l	equ	0xFE9
 14092                           wreg	equ	0xFE8
 14093                           indf1	equ	0xFE7
 14094                           postdec1	equ	0xFE5
 14095                           fsr1h	equ	0xFE2
 14096                           fsr1l	equ	0xFE1
 14097                           indf2	equ	0xFDF
 14098                           postinc2	equ	0xFDE
 14099                           postdec2	equ	0xFDD
 14100                           fsr2h	equ	0xFDA
 14101                           fsr2l	equ	0xFD9
 14102                           status	equ	0xFD8
 14103                           
 14104 ;; *************** function ___awmod *****************
 14105 ;; Defined at:
 14106 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 14107 ;; Parameters:    Size  Location     Type
 14108 ;;  dividend        2   23[BANK1 ] int 
 14109 ;;  divisor         2   25[BANK1 ] int 
 14110 ;; Auto vars:     Size  Location     Type
 14111 ;;  sign            1   28[BANK1 ] unsigned char 
 14112 ;;  counter         1   27[BANK1 ] unsigned char 
 14113 ;; Return value:  Size  Location     Type
 14114 ;;                  2   23[BANK1 ] int 
 14115 ;; Registers used:
 14116 ;;		wreg, status,2, status,0
 14117 ;; Tracked objects:
 14118 ;;		On entry : 0/0
 14119 ;;		On exit  : 0/0
 14120 ;;		Unchanged: 0/0
 14121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14122 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14123 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14125 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14126 ;;Total ram usage:        6 bytes
 14127 ;; Hardware stack levels used:    1
 14128 ;; Hardware stack levels required when called:   14
 14129 ;; This function calls:
 14130 ;;		Nothing
 14131 ;; This function is called by:
 14132 ;;		_fround
 14133 ;;		_scale
 14134 ;; This function uses a non-reentrant model
 14135 ;;
 14136                           
 14137                           	psect	text32
 14138  015A76                     __ptext32:
 14139                           	opt stack 0
 14140  015A76                     ___awmod:
 14141                           	opt stack 12
 14142                           
 14143                           ;incstack = 0
 14144  015A76  0E00               	movlw	0
 14145  015A78  0101               	movlb	1	; () banked
 14146  015A7A  6F1C               	movwf	___awmod@sign& (0+255),b
 14147                           
 14148                           ; BSR set to: 1
 14149  015A7C  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 14150  015A7E  D006               	goto	l1516
 14151                           
 14152                           ; BSR set to: 1
 14153  015A80  6D17               	negf	___awmod@dividend& (0+255),b
 14154  015A82  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 14155  015A84  B0D8               	btfsc	status,0,c
 14156  015A86  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 14157                           
 14158                           ; BSR set to: 1
 14159  015A88  0E01               	movlw	1
 14160  015A8A  6F1C               	movwf	___awmod@sign& (0+255),b
 14161  015A8C                     l1516:
 14162                           
 14163                           ; BSR set to: 1
 14164                           
 14165                           ; BSR set to: 1
 14166  015A8C  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 14167  015A8E  D004               	goto	l1517
 14168                           
 14169                           ; BSR set to: 1
 14170  015A90  6D19               	negf	___awmod@divisor& (0+255),b
 14171  015A92  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 14172  015A94  B0D8               	btfsc	status,0,c
 14173  015A96  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 14174  015A98                     l1517:
 14175                           
 14176                           ; BSR set to: 1
 14177                           
 14178                           ; BSR set to: 1
 14179  015A98  5119               	movf	___awmod@divisor& (0+255),w,b
 14180  015A9A  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 14181  015A9C  B4D8               	btfsc	status,2,c
 14182  015A9E  D018               	goto	l1524
 14183                           
 14184                           ; BSR set to: 1
 14185  015AA0  0E01               	movlw	1
 14186  015AA2  6F1B               	movwf	___awmod@counter& (0+255),b
 14187  015AA4  D004               	goto	l1519
 14188  015AA6                     
 14189                           ; BSR set to: 1
 14190                           
 14191                           ; BSR set to: 1
 14192  015AA6  90D8               	bcf	status,0,c
 14193  015AA8  3719               	rlcf	___awmod@divisor& (0+255),f,b
 14194  015AAA  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 14195  015AAC  2B1B               	incf	___awmod@counter& (0+255),f,b
 14196  015AAE                     l1519:
 14197                           
 14198                           ; BSR set to: 1
 14199                           
 14200                           ; BSR set to: 1
 14201  015AAE  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 14202  015AB0  D7FA               	goto	l1520
 14203  015AB2                     u9810:
 14204                           
 14205                           ; BSR set to: 1
 14206                           
 14207                           ; BSR set to: 1
 14208                           
 14209                           ; BSR set to: 1
 14210  015AB2  5119               	movf	___awmod@divisor& (0+255),w,b
 14211  015AB4  5D17               	subwf	___awmod@dividend& (0+255),w,b
 14212  015AB6  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 14213  015AB8  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 14214  015ABA  A0D8               	btfss	status,0,c
 14215  015ABC  D004               	goto	l1523
 14216                           
 14217                           ; BSR set to: 1
 14218  015ABE  5119               	movf	___awmod@divisor& (0+255),w,b
 14219  015AC0  5F17               	subwf	___awmod@dividend& (0+255),f,b
 14220  015AC2  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 14221  015AC4  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 14222  015AC6                     l1523:
 14223                           
 14224                           ; BSR set to: 1
 14225                           
 14226                           ; BSR set to: 1
 14227  015AC6  90D8               	bcf	status,0,c
 14228  015AC8  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 14229  015ACA  3319               	rrcf	___awmod@divisor& (0+255),f,b
 14230                           
 14231                           ; BSR set to: 1
 14232  015ACC  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 14233  015ACE  D7F1               	goto	u9810
 14234  015AD0                     l1524:
 14235                           
 14236                           ; BSR set to: 1
 14237                           
 14238                           ; BSR set to: 1
 14239                           
 14240                           ; BSR set to: 1
 14241  015AD0  511C               	movf	___awmod@sign& (0+255),w,b
 14242  015AD2  B4D8               	btfsc	status,2,c
 14243  015AD4  D004               	goto	l1525
 14244                           
 14245                           ; BSR set to: 1
 14246  015AD6  6D17               	negf	___awmod@dividend& (0+255),b
 14247  015AD8  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 14248  015ADA  B0D8               	btfsc	status,0,c
 14249  015ADC  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 14250  015ADE                     l1525:
 14251                           
 14252                           ; BSR set to: 1
 14253                           
 14254                           ; BSR set to: 1
 14255  015ADE  C117  F117         	movff	___awmod@dividend,?___awmod
 14256  015AE2  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 14257  015AE6  0012               	return	
 14258  015AE8                     __end_of___awmod:
 14259                           	opt stack 0
 14260                           tblptru	equ	0xFF8
 14261                           tblptrh	equ	0xFF7
 14262                           tblptrl	equ	0xFF6
 14263                           tablat	equ	0xFF5
 14264                           prodh	equ	0xFF4
 14265                           prodl	equ	0xFF3
 14266                           intcon	equ	0xFF2
 14267                           indf0	equ	0xFEF
 14268                           postinc0	equ	0xFEE
 14269                           fsr0h	equ	0xFEA
 14270                           fsr0l	equ	0xFE9
 14271                           wreg	equ	0xFE8
 14272                           indf1	equ	0xFE7
 14273                           postdec1	equ	0xFE5
 14274                           fsr1h	equ	0xFE2
 14275                           fsr1l	equ	0xFE1
 14276                           indf2	equ	0xFDF
 14277                           postinc2	equ	0xFDE
 14278                           postdec2	equ	0xFDD
 14279                           fsr2h	equ	0xFDA
 14280                           fsr2l	equ	0xFD9
 14281                           status	equ	0xFD8
 14282                           
 14283 ;; *************** function ___awdiv *****************
 14284 ;; Defined at:
 14285 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 14286 ;; Parameters:    Size  Location     Type
 14287 ;;  dividend        2   29[BANK1 ] int 
 14288 ;;  divisor         2   31[BANK1 ] int 
 14289 ;; Auto vars:     Size  Location     Type
 14290 ;;  quotient        2   35[BANK1 ] int 
 14291 ;;  sign            1   34[BANK1 ] unsigned char 
 14292 ;;  counter         1   33[BANK1 ] unsigned char 
 14293 ;; Return value:  Size  Location     Type
 14294 ;;                  2   29[BANK1 ] int 
 14295 ;; Registers used:
 14296 ;;		wreg, status,2, status,0
 14297 ;; Tracked objects:
 14298 ;;		On entry : 0/0
 14299 ;;		On exit  : 0/0
 14300 ;;		Unchanged: 0/0
 14301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14302 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14303 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14305 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14306 ;;Total ram usage:        8 bytes
 14307 ;; Hardware stack levels used:    1
 14308 ;; Hardware stack levels required when called:   14
 14309 ;; This function calls:
 14310 ;;		Nothing
 14311 ;; This function is called by:
 14312 ;;		_fround
 14313 ;;		_scale
 14314 ;;		_printf
 14315 ;; This function uses a non-reentrant model
 14316 ;;
 14317                           
 14318                           	psect	text33
 14319  015700                     __ptext33:
 14320                           	opt stack 0
 14321  015700                     ___awdiv:
 14322                           	opt stack 12
 14323                           
 14324                           ; BSR set to: 1
 14325                           ;incstack = 0
 14326  015700  0E00               	movlw	0
 14327  015702  0101               	movlb	1	; () banked
 14328  015704  6F22               	movwf	___awdiv@sign& (0+255),b
 14329                           
 14330                           ; BSR set to: 1
 14331  015706  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 14332  015708  D006               	goto	l1503
 14333                           
 14334                           ; BSR set to: 1
 14335  01570A  6D1F               	negf	___awdiv@divisor& (0+255),b
 14336  01570C  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 14337  01570E  B0D8               	btfsc	status,0,c
 14338  015710  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 14339                           
 14340                           ; BSR set to: 1
 14341  015712  0E01               	movlw	1
 14342  015714  6F22               	movwf	___awdiv@sign& (0+255),b
 14343  015716                     l1503:
 14344                           
 14345                           ; BSR set to: 1
 14346                           
 14347                           ; BSR set to: 1
 14348  015716  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 14349  015718  D006               	goto	l1504
 14350                           
 14351                           ; BSR set to: 1
 14352  01571A  6D1D               	negf	___awdiv@dividend& (0+255),b
 14353  01571C  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 14354  01571E  B0D8               	btfsc	status,0,c
 14355  015720  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 14356                           
 14357                           ; BSR set to: 1
 14358  015722  0E01               	movlw	1
 14359  015724  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 14360  015726                     l1504:
 14361                           
 14362                           ; BSR set to: 1
 14363                           
 14364                           ; BSR set to: 1
 14365  015726  0E00               	movlw	0
 14366  015728  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 14367  01572A  0E00               	movlw	0
 14368  01572C  6F23               	movwf	___awdiv@quotient& (0+255),b
 14369                           
 14370                           ; BSR set to: 1
 14371  01572E  511F               	movf	___awdiv@divisor& (0+255),w,b
 14372  015730  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 14373  015732  B4D8               	btfsc	status,2,c
 14374  015734  D01C               	goto	l1511
 14375                           
 14376                           ; BSR set to: 1
 14377  015736  0E01               	movlw	1
 14378  015738  6F21               	movwf	___awdiv@counter& (0+255),b
 14379  01573A  D004               	goto	l1506
 14380  01573C                     
 14381                           ; BSR set to: 1
 14382                           
 14383                           ; BSR set to: 1
 14384  01573C  90D8               	bcf	status,0,c
 14385  01573E  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 14386  015740  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 14387  015742  2B21               	incf	___awdiv@counter& (0+255),f,b
 14388  015744                     l1506:
 14389                           
 14390                           ; BSR set to: 1
 14391                           
 14392                           ; BSR set to: 1
 14393  015744  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 14394  015746  D7FA               	goto	l1507
 14395  015748                     u9750:
 14396                           
 14397                           ; BSR set to: 1
 14398                           
 14399                           ; BSR set to: 1
 14400                           
 14401                           ; BSR set to: 1
 14402  015748  90D8               	bcf	status,0,c
 14403  01574A  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 14404  01574C  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 14405                           
 14406                           ; BSR set to: 1
 14407  01574E  511F               	movf	___awdiv@divisor& (0+255),w,b
 14408  015750  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 14409  015752  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 14410  015754  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 14411  015756  A0D8               	btfss	status,0,c
 14412  015758  D005               	goto	l1510
 14413                           
 14414                           ; BSR set to: 1
 14415  01575A  511F               	movf	___awdiv@divisor& (0+255),w,b
 14416  01575C  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 14417  01575E  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 14418  015760  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 14419                           
 14420                           ; BSR set to: 1
 14421  015762  8123               	bsf	___awdiv@quotient& (0+255),0,b
 14422  015764                     l1510:
 14423                           
 14424                           ; BSR set to: 1
 14425                           
 14426                           ; BSR set to: 1
 14427  015764  90D8               	bcf	status,0,c
 14428  015766  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 14429  015768  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 14430                           
 14431                           ; BSR set to: 1
 14432  01576A  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 14433  01576C  D7ED               	goto	u9750
 14434  01576E                     l1511:
 14435                           
 14436                           ; BSR set to: 1
 14437                           
 14438                           ; BSR set to: 1
 14439                           
 14440                           ; BSR set to: 1
 14441  01576E  5122               	movf	___awdiv@sign& (0+255),w,b
 14442  015770  B4D8               	btfsc	status,2,c
 14443  015772  D004               	goto	l1512
 14444                           
 14445                           ; BSR set to: 1
 14446  015774  6D23               	negf	___awdiv@quotient& (0+255),b
 14447  015776  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 14448  015778  B0D8               	btfsc	status,0,c
 14449  01577A  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 14450  01577C                     l1512:
 14451                           
 14452                           ; BSR set to: 1
 14453                           
 14454                           ; BSR set to: 1
 14455  01577C  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 14456  015780  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 14457  015784  0012               	return	
 14458  015786                     __end_of___awdiv:
 14459                           	opt stack 0
 14460                           tblptru	equ	0xFF8
 14461                           tblptrh	equ	0xFF7
 14462                           tblptrl	equ	0xFF6
 14463                           tablat	equ	0xFF5
 14464                           prodh	equ	0xFF4
 14465                           prodl	equ	0xFF3
 14466                           intcon	equ	0xFF2
 14467                           indf0	equ	0xFEF
 14468                           postinc0	equ	0xFEE
 14469                           fsr0h	equ	0xFEA
 14470                           fsr0l	equ	0xFE9
 14471                           wreg	equ	0xFE8
 14472                           indf1	equ	0xFE7
 14473                           postdec1	equ	0xFE5
 14474                           fsr1h	equ	0xFE2
 14475                           fsr1l	equ	0xFE1
 14476                           indf2	equ	0xFDF
 14477                           postinc2	equ	0xFDE
 14478                           postdec2	equ	0xFDD
 14479                           fsr2h	equ	0xFDA
 14480                           fsr2l	equ	0xFD9
 14481                           status	equ	0xFD8
 14482                           
 14483 ;; *************** function __tdiv_to_l_ *****************
 14484 ;; Defined at:
 14485 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 14486 ;; Parameters:    Size  Location     Type
 14487 ;;  f1              3   23[BANK1 ] float 
 14488 ;;  f2              3   26[BANK1 ] float 
 14489 ;; Auto vars:     Size  Location     Type
 14490 ;;  quot            4   32[BANK1 ] unsigned long 
 14491 ;;  exp1            1   37[BANK1 ] unsigned char 
 14492 ;;  cntr            1   36[BANK1 ] unsigned char 
 14493 ;; Return value:  Size  Location     Type
 14494 ;;                  4   23[BANK1 ] unsigned long 
 14495 ;; Registers used:
 14496 ;;		wreg, status,2, status,0
 14497 ;; Tracked objects:
 14498 ;;		On entry : 0/0
 14499 ;;		On exit  : 0/0
 14500 ;;		Unchanged: 0/0
 14501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14502 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14503 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14504 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14505 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14506 ;;Total ram usage:       15 bytes
 14507 ;; Hardware stack levels used:    1
 14508 ;; Hardware stack levels required when called:   14
 14509 ;; This function calls:
 14510 ;;		Nothing
 14511 ;; This function is called by:
 14512 ;;		_printf
 14513 ;; This function uses a non-reentrant model
 14514 ;;
 14515                           
 14516                           	psect	text34
 14517  0142BA                     __ptext34:
 14518                           	opt stack 0
 14519  0142BA                     __tdiv_to_l_:
 14520                           	opt stack 13
 14521                           
 14522                           ; BSR set to: 1
 14523                           ;incstack = 0
 14524  0142BA  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 14525  0142BE  0101               	movlb	1	; () banked
 14526  0142C0  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 14527  0142C2  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 14528  0142C4  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 14529  0142C6  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 14530  0142C8  E301               	bnc	u10041
 14531  0142CA  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 14532  0142CC                     u10041:
 14533  0142CC  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 14534  0142CE  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 14535  0142D0  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 14536  0142D2  A4D8               	btfss	status,2,c
 14537  0142D4  D009               	goto	l1651
 14538                           
 14539                           ; BSR set to: 1
 14540  0142D6  0E00               	movlw	0
 14541  0142D8  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 14542  0142DA  0E00               	movlw	0
 14543  0142DC  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 14544  0142DE  0E00               	movlw	0
 14545  0142E0  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 14546  0142E2  0E00               	movlw	0
 14547  0142E4  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 14548                           
 14549                           ; BSR set to: 1
 14550  0142E6  0012               	return	
 14551  0142E8                     l1651:
 14552                           
 14553                           ; BSR set to: 1
 14554                           
 14555                           ; BSR set to: 1
 14556  0142E8  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 14557  0142EC  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 14558  0142EE  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 14559  0142F0  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 14560  0142F2  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 14561  0142F4  E301               	bnc	u10061
 14562  0142F6  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 14563  0142F8                     u10061:
 14564  0142F8  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 14565  0142FA  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 14566  0142FC  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 14567  0142FE  A4D8               	btfss	status,2,c
 14568  014300  D009               	goto	l1653
 14569                           
 14570                           ; BSR set to: 1
 14571  014302  0E00               	movlw	0
 14572  014304  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 14573  014306  0E00               	movlw	0
 14574  014308  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 14575  01430A  0E00               	movlw	0
 14576  01430C  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 14577  01430E  0E00               	movlw	0
 14578  014310  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 14579                           
 14580                           ; BSR set to: 1
 14581  014312  0012               	return	
 14582  014314                     l1653:
 14583                           
 14584                           ; BSR set to: 1
 14585                           
 14586                           ; BSR set to: 1
 14587  014314  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 14588                           
 14589                           ; BSR set to: 1
 14590  014316  0EFF               	movlw	255
 14591  014318  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 14592  01431A  0EFF               	movlw	255
 14593  01431C  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 14594  01431E  0E00               	movlw	0
 14595  014320  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 14596  014322  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 14597                           
 14598                           ; BSR set to: 1
 14599  014324  0EFF               	movlw	255
 14600  014326  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 14601  014328  0EFF               	movlw	255
 14602  01432A  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 14603  01432C  0E00               	movlw	0
 14604  01432E  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 14605                           
 14606                           ; BSR set to: 1
 14607  014330  0E00               	movlw	0
 14608  014332  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 14609  014334  0E00               	movlw	0
 14610  014336  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 14611  014338  0E00               	movlw	0
 14612  01433A  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 14613  01433C  0E00               	movlw	0
 14614  01433E  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 14615                           
 14616                           ; BSR set to: 1
 14617  014340  0E7F               	movlw	127
 14618  014342  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 14619                           
 14620                           ; BSR set to: 1
 14621  014344  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 14622  014346  0F98               	addlw	152
 14623  014348  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 14624                           
 14625                           ; BSR set to: 1
 14626  01434A  0E18               	movlw	24
 14627  01434C  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 14628  01434E                     l1654:
 14629                           
 14630                           ; BSR set to: 1
 14631  01434E  90D8               	bcf	status,0,c
 14632  014350  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 14633  014352  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 14634  014354  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 14635  014356  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 14636                           
 14637                           ; BSR set to: 1
 14638  014358  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 14639  01435A  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 14640  01435C  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 14641  01435E  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 14642  014360  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 14643  014362  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 14644  014364  A0D8               	btfss	status,0,c
 14645  014366  D007               	goto	l1655
 14646                           
 14647                           ; BSR set to: 1
 14648  014368  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 14649  01436A  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 14650  01436C  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 14651  01436E  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 14652  014370  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 14653  014372  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 14654                           
 14655                           ; BSR set to: 1
 14656  014374  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 14657  014376                     l1655:
 14658                           
 14659                           ; BSR set to: 1
 14660  014376  90D8               	bcf	status,0,c
 14661  014378  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 14662  01437A  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 14663  01437C  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 14664                           
 14665                           ; BSR set to: 1
 14666  01437E  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 14667  014380  D7E6               	goto	l1654
 14668                           
 14669                           ; BSR set to: 1
 14670                           
 14671                           ; BSR set to: 1
 14672  014382  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 14673  014384  D016               	goto	l1657
 14674                           
 14675                           ; BSR set to: 1
 14676  014386  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 14677  014388  0A80               	xorlw	128
 14678  01438A  0F97               	addlw	151
 14679  01438C  B0D8               	btfsc	status,0,c
 14680  01438E  D009               	goto	l1658
 14681                           
 14682                           ; BSR set to: 1
 14683  014390  0E00               	movlw	0
 14684  014392  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 14685  014394  0E00               	movlw	0
 14686  014396  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 14687  014398  0E00               	movlw	0
 14688  01439A  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 14689  01439C  0E00               	movlw	0
 14690  01439E  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 14691                           
 14692                           ; BSR set to: 1
 14693  0143A0  0012               	return	
 14694  0143A2                     l1658:
 14695                           
 14696                           ; BSR set to: 1
 14697                           
 14698                           ; BSR set to: 1
 14699                           
 14700                           ; BSR set to: 1
 14701  0143A2  90D8               	bcf	status,0,c
 14702  0143A4  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 14703  0143A6  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 14704  0143A8  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 14705  0143AA  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 14706                           
 14707                           ; BSR set to: 1
 14708  0143AC  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 14709  0143AE  D7F9               	goto	l1658
 14710                           
 14711                           ; BSR set to: 1
 14712  0143B0  D015               	goto	u10120
 14713  0143B2                     l1657:
 14714                           
 14715                           ; BSR set to: 1
 14716                           
 14717                           ; BSR set to: 1
 14718  0143B2  0E17               	movlw	23
 14719  0143B4  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 14720  0143B6  D00F               	goto	l1663
 14721                           
 14722                           ; BSR set to: 1
 14723  0143B8  0E00               	movlw	0
 14724  0143BA  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 14725  0143BC  0E00               	movlw	0
 14726  0143BE  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 14727  0143C0  0E00               	movlw	0
 14728  0143C2  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 14729  0143C4  0E00               	movlw	0
 14730  0143C6  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 14731                           
 14732                           ; BSR set to: 1
 14733  0143C8  0012               	return	
 14734  0143CA                     
 14735                           ; BSR set to: 1
 14736                           
 14737                           ; BSR set to: 1
 14738  0143CA  90D8               	bcf	status,0,c
 14739  0143CC  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 14740  0143CE  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 14741  0143D0  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 14742  0143D2  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 14743  0143D4  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 14744  0143D6                     l1663:
 14745                           
 14746                           ; BSR set to: 1
 14747                           
 14748                           ; BSR set to: 1
 14749  0143D6  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 14750  0143D8  A4D8               	btfss	status,2,c
 14751  0143DA  D7F7               	goto	l1664
 14752  0143DC                     u10120:
 14753                           
 14754                           ; BSR set to: 1
 14755                           
 14756                           ; BSR set to: 1
 14757  0143DC  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 14758  0143E0  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 14759  0143E4  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 14760  0143E8  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 14761                           
 14762                           ; BSR set to: 1
 14763  0143EC  0012               	return		;funcret
 14764  0143EE                     __end_of__tdiv_to_l_:
 14765                           	opt stack 0
 14766                           tblptru	equ	0xFF8
 14767                           tblptrh	equ	0xFF7
 14768                           tblptrl	equ	0xFF6
 14769                           tablat	equ	0xFF5
 14770                           prodh	equ	0xFF4
 14771                           prodl	equ	0xFF3
 14772                           intcon	equ	0xFF2
 14773                           indf0	equ	0xFEF
 14774                           postinc0	equ	0xFEE
 14775                           fsr0h	equ	0xFEA
 14776                           fsr0l	equ	0xFE9
 14777                           wreg	equ	0xFE8
 14778                           indf1	equ	0xFE7
 14779                           postdec1	equ	0xFE5
 14780                           fsr1h	equ	0xFE2
 14781                           fsr1l	equ	0xFE1
 14782                           indf2	equ	0xFDF
 14783                           postinc2	equ	0xFDE
 14784                           postdec2	equ	0xFDD
 14785                           fsr2h	equ	0xFDA
 14786                           fsr2l	equ	0xFD9
 14787                           status	equ	0xFD8
 14788                           
 14789 ;; *************** function __div_to_l_ *****************
 14790 ;; Defined at:
 14791 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 14792 ;; Parameters:    Size  Location     Type
 14793 ;;  f1              3   23[BANK1 ] unsigned long 
 14794 ;;  f2              3   26[BANK1 ] unsigned long 
 14795 ;; Auto vars:     Size  Location     Type
 14796 ;;  quot            4   29[BANK1 ] unsigned long 
 14797 ;;  exp1            1   34[BANK1 ] unsigned char 
 14798 ;;  cntr            1   33[BANK1 ] unsigned char 
 14799 ;; Return value:  Size  Location     Type
 14800 ;;                  4   23[BANK1 ] unsigned long 
 14801 ;; Registers used:
 14802 ;;		wreg, status,2, status,0
 14803 ;; Tracked objects:
 14804 ;;		On entry : 0/0
 14805 ;;		On exit  : 0/0
 14806 ;;		Unchanged: 0/0
 14807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14808 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14809 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14811 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14812 ;;Total ram usage:       12 bytes
 14813 ;; Hardware stack levels used:    1
 14814 ;; Hardware stack levels required when called:   14
 14815 ;; This function calls:
 14816 ;;		Nothing
 14817 ;; This function is called by:
 14818 ;;		_printf
 14819 ;; This function uses a non-reentrant model
 14820 ;;
 14821                           
 14822                           	psect	text35
 14823  014520                     __ptext35:
 14824                           	opt stack 0
 14825  014520                     __div_to_l_:
 14826                           	opt stack 13
 14827                           
 14828                           ; BSR set to: 1
 14829                           ;incstack = 0
 14830  014520  0101               	movlb	1	; () banked
 14831  014522  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 14832  014524  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 14833  014526  6F22               	movwf	__div_to_l_@exp1& (0+255),b
 14834  014528  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 14835  01452A  A4D8               	btfss	status,2,c
 14836  01452C  D009               	goto	l1547
 14837                           
 14838                           ; BSR set to: 1
 14839  01452E  0E00               	movlw	0
 14840  014530  6F17               	movwf	?__div_to_l_& (0+255),b
 14841  014532  0E00               	movlw	0
 14842  014534  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 14843  014536  0E00               	movlw	0
 14844  014538  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 14845  01453A  0E00               	movlw	0
 14846  01453C  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 14847                           
 14848                           ; BSR set to: 1
 14849  01453E  0012               	return	
 14850  014540                     l1547:
 14851                           
 14852                           ; BSR set to: 1
 14853                           
 14854                           ; BSR set to: 1
 14855  014540  351C               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 14856  014542  351D               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 14857  014544  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 14858  014546  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 14859  014548  A4D8               	btfss	status,2,c
 14860  01454A  D009               	goto	l1549
 14861                           
 14862                           ; BSR set to: 1
 14863  01454C  0E00               	movlw	0
 14864  01454E  6F17               	movwf	?__div_to_l_& (0+255),b
 14865  014550  0E00               	movlw	0
 14866  014552  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 14867  014554  0E00               	movlw	0
 14868  014556  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 14869  014558  0E00               	movlw	0
 14870  01455A  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 14871                           
 14872                           ; BSR set to: 1
 14873  01455C  0012               	return	
 14874  01455E                     l1549:
 14875                           
 14876                           ; BSR set to: 1
 14877                           
 14878                           ; BSR set to: 1
 14879  01455E  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 14880                           
 14881                           ; BSR set to: 1
 14882  014560  0EFF               	movlw	255
 14883  014562  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 14884  014564  0EFF               	movlw	255
 14885  014566  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 14886  014568  0EFF               	movlw	255
 14887  01456A  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 14888  01456C  0E00               	movlw	0
 14889  01456E  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 14890                           
 14891                           ; BSR set to: 1
 14892  014570  8F1C               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 14893  014572  0EFF               	movlw	255
 14894  014574  171A               	andwf	__div_to_l_@f2& (0+255),f,b
 14895  014576  0EFF               	movlw	255
 14896  014578  171B               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 14897  01457A  0EFF               	movlw	255
 14898  01457C  171C               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 14899  01457E  0E00               	movlw	0
 14900  014580  171D               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 14901                           
 14902                           ; BSR set to: 1
 14903  014582  0E00               	movlw	0
 14904  014584  6F1D               	movwf	__div_to_l_@quot& (0+255),b
 14905  014586  0E00               	movlw	0
 14906  014588  6F1E               	movwf	(__div_to_l_@quot+1)& (0+255),b
 14907  01458A  0E00               	movlw	0
 14908  01458C  6F1F               	movwf	(__div_to_l_@quot+2)& (0+255),b
 14909  01458E  0E00               	movlw	0
 14910  014590  6F20               	movwf	(__div_to_l_@quot+3)& (0+255),b
 14911                           
 14912                           ; BSR set to: 1
 14913  014592  0E7F               	movlw	127
 14914  014594  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 14915                           
 14916                           ; BSR set to: 1
 14917  014596  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 14918  014598  0FA0               	addlw	160
 14919  01459A  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 14920                           
 14921                           ; BSR set to: 1
 14922  01459C  0E20               	movlw	32
 14923  01459E  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 14924  0145A0                     
 14925                           ; BSR set to: 1
 14926                           
 14927                           ; BSR set to: 1
 14928  0145A0  90D8               	bcf	status,0,c
 14929  0145A2  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 14930  0145A4  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 14931  0145A6  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 14932  0145A8  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 14933                           
 14934                           ; BSR set to: 1
 14935  0145AA  511A               	movf	__div_to_l_@f2& (0+255),w,b
 14936  0145AC  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 14937  0145AE  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 14938  0145B0  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 14939  0145B2  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 14940  0145B4  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 14941  0145B6  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 14942  0145B8  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 14943  0145BA  A0D8               	btfss	status,0,c
 14944  0145BC  D009               	goto	l1551
 14945                           
 14946                           ; BSR set to: 1
 14947  0145BE  511A               	movf	__div_to_l_@f2& (0+255),w,b
 14948  0145C0  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 14949  0145C2  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 14950  0145C4  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 14951  0145C6  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 14952  0145C8  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 14953  0145CA  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 14954  0145CC  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 14955                           
 14956                           ; BSR set to: 1
 14957  0145CE  811D               	bsf	__div_to_l_@quot& (0+255),0,b
 14958  0145D0                     l1551:
 14959                           
 14960                           ; BSR set to: 1
 14961                           
 14962                           ; BSR set to: 1
 14963  0145D0  90D8               	bcf	status,0,c
 14964  0145D2  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 14965  0145D4  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 14966  0145D6  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 14967  0145D8  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 14968                           
 14969                           ; BSR set to: 1
 14970  0145DA  2F21               	decfsz	__div_to_l_@cntr& (0+255),f,b
 14971  0145DC  D7E1               	goto	l1550
 14972                           
 14973                           ; BSR set to: 1
 14974                           
 14975                           ; BSR set to: 1
 14976  0145DE  AF22               	btfss	__div_to_l_@exp1& (0+255),7,b
 14977  0145E0  D016               	goto	l1553
 14978                           
 14979                           ; BSR set to: 1
 14980  0145E2  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 14981  0145E4  0A80               	xorlw	128
 14982  0145E6  0F9F               	addlw	159
 14983  0145E8  B0D8               	btfsc	status,0,c
 14984  0145EA  D009               	goto	l1554
 14985                           
 14986                           ; BSR set to: 1
 14987  0145EC  0E00               	movlw	0
 14988  0145EE  6F17               	movwf	?__div_to_l_& (0+255),b
 14989  0145F0  0E00               	movlw	0
 14990  0145F2  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 14991  0145F4  0E00               	movlw	0
 14992  0145F6  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 14993  0145F8  0E00               	movlw	0
 14994  0145FA  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 14995                           
 14996                           ; BSR set to: 1
 14997  0145FC  0012               	return	
 14998  0145FE                     l1554:
 14999                           
 15000                           ; BSR set to: 1
 15001                           
 15002                           ; BSR set to: 1
 15003                           
 15004                           ; BSR set to: 1
 15005  0145FE  90D8               	bcf	status,0,c
 15006  014600  3320               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 15007  014602  331F               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 15008  014604  331E               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 15009  014606  331D               	rrcf	__div_to_l_@quot& (0+255),f,b
 15010                           
 15011                           ; BSR set to: 1
 15012  014608  3F22               	incfsz	__div_to_l_@exp1& (0+255),f,b
 15013  01460A  D7F9               	goto	l1554
 15014                           
 15015                           ; BSR set to: 1
 15016  01460C  D015               	goto	u10190
 15017  01460E                     l1553:
 15018                           
 15019                           ; BSR set to: 1
 15020                           
 15021                           ; BSR set to: 1
 15022  01460E  0E1F               	movlw	31
 15023  014610  6522               	cpfsgt	__div_to_l_@exp1& (0+255),b
 15024  014612  D00F               	goto	l1559
 15025                           
 15026                           ; BSR set to: 1
 15027  014614  0E00               	movlw	0
 15028  014616  6F17               	movwf	?__div_to_l_& (0+255),b
 15029  014618  0E00               	movlw	0
 15030  01461A  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 15031  01461C  0E00               	movlw	0
 15032  01461E  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 15033  014620  0E00               	movlw	0
 15034  014622  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 15035                           
 15036                           ; BSR set to: 1
 15037  014624  0012               	return	
 15038  014626                     
 15039                           ; BSR set to: 1
 15040                           
 15041                           ; BSR set to: 1
 15042  014626  90D8               	bcf	status,0,c
 15043  014628  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 15044  01462A  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 15045  01462C  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 15046  01462E  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 15047  014630  0722               	decf	__div_to_l_@exp1& (0+255),f,b
 15048  014632                     l1559:
 15049                           
 15050                           ; BSR set to: 1
 15051                           
 15052                           ; BSR set to: 1
 15053  014632  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 15054  014634  A4D8               	btfss	status,2,c
 15055  014636  D7F7               	goto	l1560
 15056  014638                     u10190:
 15057                           
 15058                           ; BSR set to: 1
 15059                           
 15060                           ; BSR set to: 1
 15061  014638  C11D  F117         	movff	__div_to_l_@quot,?__div_to_l_
 15062  01463C  C11E  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 15063  014640  C11F  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 15064  014644  C120  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 15065                           
 15066                           ; BSR set to: 1
 15067  014648  0012               	return		;funcret
 15068  01464A                     __end_of__div_to_l_:
 15069                           	opt stack 0
 15070                           tblptru	equ	0xFF8
 15071                           tblptrh	equ	0xFF7
 15072                           tblptrl	equ	0xFF6
 15073                           tablat	equ	0xFF5
 15074                           prodh	equ	0xFF4
 15075                           prodl	equ	0xFF3
 15076                           intcon	equ	0xFF2
 15077                           indf0	equ	0xFEF
 15078                           postinc0	equ	0xFEE
 15079                           fsr0h	equ	0xFEA
 15080                           fsr0l	equ	0xFE9
 15081                           wreg	equ	0xFE8
 15082                           indf1	equ	0xFE7
 15083                           postdec1	equ	0xFE5
 15084                           fsr1h	equ	0xFE2
 15085                           fsr1l	equ	0xFE1
 15086                           indf2	equ	0xFDF
 15087                           postinc2	equ	0xFDE
 15088                           postdec2	equ	0xFDD
 15089                           fsr2h	equ	0xFDA
 15090                           fsr2l	equ	0xFD9
 15091                           status	equ	0xFD8
 15092                           
 15093 ;; *************** function ___lltoft *****************
 15094 ;; Defined at:
 15095 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 15096 ;; Parameters:    Size  Location     Type
 15097 ;;  c               4   31[BANK1 ] unsigned long 
 15098 ;; Auto vars:     Size  Location     Type
 15099 ;;  exp             1   39[BANK1 ] unsigned char 
 15100 ;; Return value:  Size  Location     Type
 15101 ;;                  3   31[BANK1 ] float 
 15102 ;; Registers used:
 15103 ;;		wreg, status,2, status,0, cstack
 15104 ;; Tracked objects:
 15105 ;;		On entry : 0/0
 15106 ;;		On exit  : 0/0
 15107 ;;		Unchanged: 0/0
 15108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15109 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15110 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15111 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15112 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15113 ;;Total ram usage:        9 bytes
 15114 ;; Hardware stack levels used:    1
 15115 ;; Hardware stack levels required when called:   15
 15116 ;; This function calls:
 15117 ;;		___ftpack
 15118 ;; This function is called by:
 15119 ;;		_printf
 15120 ;; This function uses a non-reentrant model
 15121 ;;
 15122                           
 15123                           	psect	text36
 15124  015E1A                     __ptext36:
 15125                           	opt stack 0
 15126  015E1A                     ___lltoft:
 15127                           	opt stack 12
 15128                           
 15129                           ; BSR set to: 1
 15130                           ;incstack = 0
 15131  015E1A  0E8E               	movlw	142
 15132  015E1C  0101               	movlb	1	; () banked
 15133  015E1E  6F27               	movwf	___lltoft@exp& (0+255),b
 15134  015E20  D006               	goto	l1758
 15135  015E22                     
 15136                           ; BSR set to: 1
 15137                           
 15138                           ; BSR set to: 1
 15139  015E22  90D8               	bcf	status,0,c
 15140  015E24  3322               	rrcf	(___lltoft@c+3)& (0+255),f,b
 15141  015E26  3321               	rrcf	(___lltoft@c+2)& (0+255),f,b
 15142  015E28  3320               	rrcf	(___lltoft@c+1)& (0+255),f,b
 15143  015E2A  331F               	rrcf	___lltoft@c& (0+255),f,b
 15144  015E2C  2B27               	incf	___lltoft@exp& (0+255),f,b
 15145  015E2E                     l1758:
 15146                           
 15147                           ; BSR set to: 1
 15148                           
 15149                           ; BSR set to: 1
 15150  015E2E  0E00               	movlw	0
 15151  015E30  151F               	andwf	___lltoft@c& (0+255),w,b
 15152  015E32  6F23               	movwf	??___lltoft& (0+255),b
 15153  015E34  0E00               	movlw	0
 15154  015E36  1520               	andwf	(___lltoft@c+1)& (0+255),w,b
 15155  015E38  6F24               	movwf	(??___lltoft+1)& (0+255),b
 15156  015E3A  0E00               	movlw	0
 15157  015E3C  1521               	andwf	(___lltoft@c+2)& (0+255),w,b
 15158  015E3E  6F25               	movwf	(??___lltoft+2)& (0+255),b
 15159  015E40  0EFF               	movlw	255
 15160  015E42  1522               	andwf	(___lltoft@c+3)& (0+255),w,b
 15161  015E44  6F26               	movwf	(??___lltoft+3)& (0+255),b
 15162  015E46  5123               	movf	??___lltoft& (0+255),w,b
 15163  015E48  1124               	iorwf	(??___lltoft+1)& (0+255),w,b
 15164  015E4A  1125               	iorwf	(??___lltoft+2)& (0+255),w,b
 15165  015E4C  1126               	iorwf	(??___lltoft+3)& (0+255),w,b
 15166  015E4E  A4D8               	btfss	status,2,c
 15167  015E50  D7E8               	goto	l1759
 15168                           
 15169                           ; BSR set to: 1
 15170                           
 15171                           ; BSR set to: 1
 15172  015E52  C11F  F117         	movff	___lltoft@c,___ftpack@arg
 15173  015E56  C120  F118         	movff	___lltoft@c+1,___ftpack@arg+1
 15174  015E5A  C121  F119         	movff	___lltoft@c+2,___ftpack@arg+2
 15175  015E5E  C127  F11A         	movff	___lltoft@exp,___ftpack@exp
 15176  015E62  0E00               	movlw	0
 15177  015E64  6F1B               	movwf	___ftpack@sign& (0+255),b
 15178  015E66  ECC7  F0A8         	call	___ftpack	;wreg free
 15179  015E6A  C117  F11F         	movff	?___ftpack,?___lltoft
 15180  015E6E  C118  F120         	movff	?___ftpack+1,?___lltoft+1
 15181  015E72  C119  F121         	movff	?___ftpack+2,?___lltoft+2
 15182  015E76  0012               	return	
 15183  015E78                     __end_of___lltoft:
 15184                           	opt stack 0
 15185                           tblptru	equ	0xFF8
 15186                           tblptrh	equ	0xFF7
 15187                           tblptrl	equ	0xFF6
 15188                           tablat	equ	0xFF5
 15189                           prodh	equ	0xFF4
 15190                           prodl	equ	0xFF3
 15191                           intcon	equ	0xFF2
 15192                           indf0	equ	0xFEF
 15193                           postinc0	equ	0xFEE
 15194                           fsr0h	equ	0xFEA
 15195                           fsr0l	equ	0xFE9
 15196                           wreg	equ	0xFE8
 15197                           indf1	equ	0xFE7
 15198                           postdec1	equ	0xFE5
 15199                           fsr1h	equ	0xFE2
 15200                           fsr1l	equ	0xFE1
 15201                           indf2	equ	0xFDF
 15202                           postinc2	equ	0xFDE
 15203                           postdec2	equ	0xFDD
 15204                           fsr2h	equ	0xFDA
 15205                           fsr2l	equ	0xFD9
 15206                           status	equ	0xFD8
 15207                           
 15208 ;; *************** function ___llmod *****************
 15209 ;; Defined at:
 15210 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 15211 ;; Parameters:    Size  Location     Type
 15212 ;;  dividend        4   36[BANK1 ] unsigned long 
 15213 ;;  divisor         4   40[BANK1 ] unsigned long 
 15214 ;; Auto vars:     Size  Location     Type
 15215 ;;  counter         1   44[BANK1 ] unsigned char 
 15216 ;; Return value:  Size  Location     Type
 15217 ;;                  4   36[BANK1 ] unsigned long 
 15218 ;; Registers used:
 15219 ;;		wreg, status,2, status,0
 15220 ;; Tracked objects:
 15221 ;;		On entry : 0/0
 15222 ;;		On exit  : 0/0
 15223 ;;		Unchanged: 0/0
 15224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15225 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15226 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15228 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15229 ;;Total ram usage:        9 bytes
 15230 ;; Hardware stack levels used:    1
 15231 ;; Hardware stack levels required when called:   14
 15232 ;; This function calls:
 15233 ;;		Nothing
 15234 ;; This function is called by:
 15235 ;;		_printf
 15236 ;; This function uses a non-reentrant model
 15237 ;;
 15238                           
 15239                           	psect	text37
 15240  015BC0                     __ptext37:
 15241                           	opt stack 0
 15242  015BC0                     ___llmod:
 15243                           	opt stack 13
 15244                           
 15245                           ;incstack = 0
 15246  015BC0  0101               	movlb	1	; () banked
 15247  015BC2  5128               	movf	___llmod@divisor& (0+255),w,b
 15248  015BC4  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 15249  015BC6  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 15250  015BC8  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 15251  015BCA  B4D8               	btfsc	status,2,c
 15252  015BCC  D024               	goto	l1752
 15253                           
 15254                           ; BSR set to: 1
 15255  015BCE  0E01               	movlw	1
 15256  015BD0  6F2C               	movwf	___llmod@counter& (0+255),b
 15257  015BD2  D006               	goto	l1747
 15258  015BD4                     
 15259                           ; BSR set to: 1
 15260                           
 15261                           ; BSR set to: 1
 15262  015BD4  90D8               	bcf	status,0,c
 15263  015BD6  3728               	rlcf	___llmod@divisor& (0+255),f,b
 15264  015BD8  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 15265  015BDA  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 15266  015BDC  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 15267  015BDE  2B2C               	incf	___llmod@counter& (0+255),f,b
 15268  015BE0                     l1747:
 15269                           
 15270                           ; BSR set to: 1
 15271                           
 15272                           ; BSR set to: 1
 15273  015BE0  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 15274  015BE2  D7F8               	goto	l1748
 15275  015BE4                     u10450:
 15276                           
 15277                           ; BSR set to: 1
 15278                           
 15279                           ; BSR set to: 1
 15280                           
 15281                           ; BSR set to: 1
 15282  015BE4  5128               	movf	___llmod@divisor& (0+255),w,b
 15283  015BE6  5D24               	subwf	___llmod@dividend& (0+255),w,b
 15284  015BE8  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 15285  015BEA  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 15286  015BEC  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 15287  015BEE  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 15288  015BF0  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 15289  015BF2  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 15290  015BF4  A0D8               	btfss	status,0,c
 15291  015BF6  D008               	goto	l1751
 15292                           
 15293                           ; BSR set to: 1
 15294  015BF8  5128               	movf	___llmod@divisor& (0+255),w,b
 15295  015BFA  5F24               	subwf	___llmod@dividend& (0+255),f,b
 15296  015BFC  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 15297  015BFE  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 15298  015C00  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 15299  015C02  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 15300  015C04  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 15301  015C06  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 15302  015C08                     l1751:
 15303                           
 15304                           ; BSR set to: 1
 15305                           
 15306                           ; BSR set to: 1
 15307  015C08  90D8               	bcf	status,0,c
 15308  015C0A  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 15309  015C0C  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 15310  015C0E  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 15311  015C10  3328               	rrcf	___llmod@divisor& (0+255),f,b
 15312                           
 15313                           ; BSR set to: 1
 15314  015C12  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 15315  015C14  D7E7               	goto	u10450
 15316  015C16                     l1752:
 15317                           
 15318                           ; BSR set to: 1
 15319                           
 15320                           ; BSR set to: 1
 15321  015C16  C124  F124         	movff	___llmod@dividend,?___llmod
 15322  015C1A  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 15323  015C1E  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 15324  015C22  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 15325                           
 15326                           ; BSR set to: 1
 15327  015C26  0012               	return		;funcret
 15328  015C28                     __end_of___llmod:
 15329                           	opt stack 0
 15330                           tblptru	equ	0xFF8
 15331                           tblptrh	equ	0xFF7
 15332                           tblptrl	equ	0xFF6
 15333                           tablat	equ	0xFF5
 15334                           prodh	equ	0xFF4
 15335                           prodl	equ	0xFF3
 15336                           intcon	equ	0xFF2
 15337                           indf0	equ	0xFEF
 15338                           postinc0	equ	0xFEE
 15339                           fsr0h	equ	0xFEA
 15340                           fsr0l	equ	0xFE9
 15341                           wreg	equ	0xFE8
 15342                           indf1	equ	0xFE7
 15343                           postdec1	equ	0xFE5
 15344                           fsr1h	equ	0xFE2
 15345                           fsr1l	equ	0xFE1
 15346                           indf2	equ	0xFDF
 15347                           postinc2	equ	0xFDE
 15348                           postdec2	equ	0xFDD
 15349                           fsr2h	equ	0xFDA
 15350                           fsr2l	equ	0xFD9
 15351                           status	equ	0xFD8
 15352                           
 15353 ;; *************** function ___lldiv *****************
 15354 ;; Defined at:
 15355 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 15356 ;; Parameters:    Size  Location     Type
 15357 ;;  dividend        4   23[BANK1 ] unsigned long 
 15358 ;;  divisor         4   27[BANK1 ] unsigned long 
 15359 ;; Auto vars:     Size  Location     Type
 15360 ;;  quotient        4   31[BANK1 ] unsigned long 
 15361 ;;  counter         1   35[BANK1 ] unsigned char 
 15362 ;; Return value:  Size  Location     Type
 15363 ;;                  4   23[BANK1 ] unsigned long 
 15364 ;; Registers used:
 15365 ;;		wreg, status,2, status,0
 15366 ;; Tracked objects:
 15367 ;;		On entry : 0/0
 15368 ;;		On exit  : 0/0
 15369 ;;		Unchanged: 0/0
 15370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15371 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15372 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15374 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15375 ;;Total ram usage:       13 bytes
 15376 ;; Hardware stack levels used:    1
 15377 ;; Hardware stack levels required when called:   14
 15378 ;; This function calls:
 15379 ;;		Nothing
 15380 ;; This function is called by:
 15381 ;;		_printf
 15382 ;; This function uses a non-reentrant model
 15383 ;;
 15384                           
 15385                           	psect	text38
 15386  015786                     __ptext38:
 15387                           	opt stack 0
 15388  015786                     ___lldiv:
 15389                           	opt stack 13
 15390                           
 15391                           ; BSR set to: 1
 15392                           ;incstack = 0
 15393  015786  0E00               	movlw	0
 15394  015788  0101               	movlb	1	; () banked
 15395  01578A  6F1F               	movwf	___lldiv@quotient& (0+255),b
 15396  01578C  0E00               	movlw	0
 15397  01578E  6F20               	movwf	(___lldiv@quotient+1)& (0+255),b
 15398  015790  0E00               	movlw	0
 15399  015792  6F21               	movwf	(___lldiv@quotient+2)& (0+255),b
 15400  015794  0E00               	movlw	0
 15401  015796  6F22               	movwf	(___lldiv@quotient+3)& (0+255),b
 15402                           
 15403                           ; BSR set to: 1
 15404  015798  511B               	movf	___lldiv@divisor& (0+255),w,b
 15405  01579A  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 15406  01579C  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 15407  01579E  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 15408  0157A0  B4D8               	btfsc	status,2,c
 15409  0157A2  D02A               	goto	l1742
 15410                           
 15411                           ; BSR set to: 1
 15412  0157A4  0E01               	movlw	1
 15413  0157A6  6F23               	movwf	___lldiv@counter& (0+255),b
 15414  0157A8  D006               	goto	l1737
 15415  0157AA                     
 15416                           ; BSR set to: 1
 15417                           
 15418                           ; BSR set to: 1
 15419  0157AA  90D8               	bcf	status,0,c
 15420  0157AC  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 15421  0157AE  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 15422  0157B0  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 15423  0157B2  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 15424  0157B4  2B23               	incf	___lldiv@counter& (0+255),f,b
 15425  0157B6                     l1737:
 15426                           
 15427                           ; BSR set to: 1
 15428                           
 15429                           ; BSR set to: 1
 15430  0157B6  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 15431  0157B8  D7F8               	goto	l1738
 15432  0157BA                     u10420:
 15433                           
 15434                           ; BSR set to: 1
 15435                           
 15436                           ; BSR set to: 1
 15437                           
 15438                           ; BSR set to: 1
 15439  0157BA  90D8               	bcf	status,0,c
 15440  0157BC  371F               	rlcf	___lldiv@quotient& (0+255),f,b
 15441  0157BE  3720               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 15442  0157C0  3721               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 15443  0157C2  3722               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 15444                           
 15445                           ; BSR set to: 1
 15446  0157C4  511B               	movf	___lldiv@divisor& (0+255),w,b
 15447  0157C6  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 15448  0157C8  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15449  0157CA  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 15450  0157CC  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15451  0157CE  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 15452  0157D0  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15453  0157D2  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 15454  0157D4  A0D8               	btfss	status,0,c
 15455  0157D6  D009               	goto	l1741
 15456                           
 15457                           ; BSR set to: 1
 15458  0157D8  511B               	movf	___lldiv@divisor& (0+255),w,b
 15459  0157DA  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 15460  0157DC  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15461  0157DE  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 15462  0157E0  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15463  0157E2  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 15464  0157E4  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15465  0157E6  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 15466                           
 15467                           ; BSR set to: 1
 15468  0157E8  811F               	bsf	___lldiv@quotient& (0+255),0,b
 15469  0157EA                     l1741:
 15470                           
 15471                           ; BSR set to: 1
 15472                           
 15473                           ; BSR set to: 1
 15474  0157EA  90D8               	bcf	status,0,c
 15475  0157EC  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 15476  0157EE  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 15477  0157F0  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 15478  0157F2  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 15479                           
 15480                           ; BSR set to: 1
 15481  0157F4  2F23               	decfsz	___lldiv@counter& (0+255),f,b
 15482  0157F6  D7E1               	goto	u10420
 15483  0157F8                     l1742:
 15484                           
 15485                           ; BSR set to: 1
 15486                           
 15487                           ; BSR set to: 1
 15488  0157F8  C11F  F117         	movff	___lldiv@quotient,?___lldiv
 15489  0157FC  C120  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 15490  015800  C121  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 15491  015804  C122  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 15492                           
 15493                           ; BSR set to: 1
 15494  015808  0012               	return		;funcret
 15495  01580A                     __end_of___lldiv:
 15496                           	opt stack 0
 15497                           tblptru	equ	0xFF8
 15498                           tblptrh	equ	0xFF7
 15499                           tblptrl	equ	0xFF6
 15500                           tablat	equ	0xFF5
 15501                           prodh	equ	0xFF4
 15502                           prodl	equ	0xFF3
 15503                           intcon	equ	0xFF2
 15504                           indf0	equ	0xFEF
 15505                           postinc0	equ	0xFEE
 15506                           fsr0h	equ	0xFEA
 15507                           fsr0l	equ	0xFE9
 15508                           wreg	equ	0xFE8
 15509                           indf1	equ	0xFE7
 15510                           postdec1	equ	0xFE5
 15511                           fsr1h	equ	0xFE2
 15512                           fsr1l	equ	0xFE1
 15513                           indf2	equ	0xFDF
 15514                           postinc2	equ	0xFDE
 15515                           postdec2	equ	0xFDD
 15516                           fsr2h	equ	0xFDA
 15517                           fsr2l	equ	0xFD9
 15518                           status	equ	0xFD8
 15519                           
 15520 ;; *************** function ___fttol *****************
 15521 ;; Defined at:
 15522 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 15523 ;; Parameters:    Size  Location     Type
 15524 ;;  f1              3   85[BANK1 ] float 
 15525 ;; Auto vars:     Size  Location     Type
 15526 ;;  lval            4   95[BANK1 ] unsigned long 
 15527 ;;  exp1            1   99[BANK1 ] unsigned char 
 15528 ;;  sign1           1   94[BANK1 ] unsigned char 
 15529 ;; Return value:  Size  Location     Type
 15530 ;;                  4   85[BANK1 ] long 
 15531 ;; Registers used:
 15532 ;;		wreg, status,2, status,0
 15533 ;; Tracked objects:
 15534 ;;		On entry : 0/0
 15535 ;;		On exit  : 0/0
 15536 ;;		Unchanged: 0/0
 15537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15538 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15539 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15540 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15541 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15542 ;;Total ram usage:       15 bytes
 15543 ;; Hardware stack levels used:    1
 15544 ;; Hardware stack levels required when called:   14
 15545 ;; This function calls:
 15546 ;;		Nothing
 15547 ;; This function is called by:
 15548 ;;		_printf
 15549 ;; This function uses a non-reentrant model
 15550 ;;
 15551                           
 15552                           	psect	text39
 15553  01488E                     __ptext39:
 15554                           	opt stack 0
 15555  01488E                     ___fttol:
 15556                           	opt stack 13
 15557                           
 15558                           ; BSR set to: 1
 15559                           ;incstack = 0
 15560  01488E  C157  F159         	movff	___fttol@f1+2,??___fttol
 15561  014892  0101               	movlb	1	; () banked
 15562  014894  6B5A               	clrf	(??___fttol+1)& (0+255),b
 15563  014896  6B5B               	clrf	(??___fttol+2)& (0+255),b
 15564  014898  3556               	rlcf	(___fttol@f1+1)& (0+255),w,b
 15565  01489A  3759               	rlcf	??___fttol& (0+255),f,b
 15566  01489C  E301               	bnc	u10331
 15567  01489E  815A               	bsf	(??___fttol+1)& (0+255),0,b
 15568  0148A0                     u10331:
 15569  0148A0  5159               	movf	??___fttol& (0+255),w,b
 15570  0148A2  6F63               	movwf	___fttol@exp1& (0+255),b
 15571  0148A4  5163               	movf	___fttol@exp1& (0+255),w,b
 15572  0148A6  A4D8               	btfss	status,2,c
 15573  0148A8  D009               	goto	l1696
 15574                           
 15575                           ; BSR set to: 1
 15576  0148AA  0E00               	movlw	0
 15577  0148AC  6F55               	movwf	?___fttol& (0+255),b
 15578  0148AE  0E00               	movlw	0
 15579  0148B0  6F56               	movwf	(?___fttol+1)& (0+255),b
 15580  0148B2  0E00               	movlw	0
 15581  0148B4  6F57               	movwf	(?___fttol+2)& (0+255),b
 15582  0148B6  0E00               	movlw	0
 15583  0148B8  6F58               	movwf	(?___fttol+3)& (0+255),b
 15584                           
 15585                           ; BSR set to: 1
 15586  0148BA  0012               	return	
 15587  0148BC                     l1696:
 15588                           
 15589                           ; BSR set to: 1
 15590                           
 15591                           ; BSR set to: 1
 15592  0148BC  0E17               	movlw	23
 15593  0148BE  6F59               	movwf	??___fttol& (0+255),b
 15594  0148C0  C155  F15A         	movff	___fttol@f1,??___fttol+1
 15595  0148C4  C156  F15B         	movff	___fttol@f1+1,??___fttol+2
 15596  0148C8  C157  F15C         	movff	___fttol@f1+2,??___fttol+3
 15597  0148CC  2959               	incf	??___fttol& (0+255),w,b
 15598  0148CE  6F5D               	movwf	(??___fttol+4)& (0+255),b
 15599  0148D0  D004               	goto	u10350
 15600  0148D2                     u10355:
 15601  0148D2  90D8               	bcf	status,0,c
 15602  0148D4  335C               	rrcf	(??___fttol+3)& (0+255),f,b
 15603  0148D6  335B               	rrcf	(??___fttol+2)& (0+255),f,b
 15604  0148D8  335A               	rrcf	(??___fttol+1)& (0+255),f,b
 15605  0148DA                     u10350:
 15606  0148DA  2F5D               	decfsz	(??___fttol+4)& (0+255),f,b
 15607  0148DC  D7FA               	goto	u10355
 15608  0148DE  0101               	movlb	1	; () banked
 15609  0148E0  515A               	movf	(??___fttol+1)& (0+255),w,b
 15610  0148E2  6F5E               	movwf	___fttol@sign1& (0+255),b
 15611                           
 15612                           ; BSR set to: 1
 15613  0148E4  8F56               	bsf	(___fttol@f1+1)& (0+255),7,b
 15614                           
 15615                           ; BSR set to: 1
 15616  0148E6  0EFF               	movlw	255
 15617  0148E8  1755               	andwf	___fttol@f1& (0+255),f,b
 15618  0148EA  0EFF               	movlw	255
 15619  0148EC  1756               	andwf	(___fttol@f1+1)& (0+255),f,b
 15620  0148EE  0E00               	movlw	0
 15621  0148F0  1757               	andwf	(___fttol@f1+2)& (0+255),f,b
 15622                           
 15623                           ; BSR set to: 1
 15624  0148F2  5155               	movf	___fttol@f1& (0+255),w,b
 15625  0148F4  6F5F               	movwf	___fttol@lval& (0+255),b
 15626  0148F6  5156               	movf	(___fttol@f1+1)& (0+255),w,b
 15627  0148F8  6F60               	movwf	(___fttol@lval+1)& (0+255),b
 15628  0148FA  5157               	movf	(___fttol@f1+2)& (0+255),w,b
 15629  0148FC  6F61               	movwf	(___fttol@lval+2)& (0+255),b
 15630  0148FE  6B62               	clrf	(___fttol@lval+3)& (0+255),b
 15631                           
 15632                           ; BSR set to: 1
 15633  014900  0E8E               	movlw	142
 15634  014902  5F63               	subwf	___fttol@exp1& (0+255),f,b
 15635                           
 15636                           ; BSR set to: 1
 15637  014904  AF63               	btfss	___fttol@exp1& (0+255),7,b
 15638  014906  D016               	goto	l1698
 15639                           
 15640                           ; BSR set to: 1
 15641  014908  5163               	movf	___fttol@exp1& (0+255),w,b
 15642  01490A  0A80               	xorlw	128
 15643  01490C  0F8F               	addlw	143
 15644  01490E  B0D8               	btfsc	status,0,c
 15645  014910  D009               	goto	l1699
 15646                           
 15647                           ; BSR set to: 1
 15648  014912  0E00               	movlw	0
 15649  014914  6F55               	movwf	?___fttol& (0+255),b
 15650  014916  0E00               	movlw	0
 15651  014918  6F56               	movwf	(?___fttol+1)& (0+255),b
 15652  01491A  0E00               	movlw	0
 15653  01491C  6F57               	movwf	(?___fttol+2)& (0+255),b
 15654  01491E  0E00               	movlw	0
 15655  014920  6F58               	movwf	(?___fttol+3)& (0+255),b
 15656                           
 15657                           ; BSR set to: 1
 15658  014922  0012               	return	
 15659  014924                     l1699:
 15660                           
 15661                           ; BSR set to: 1
 15662                           
 15663                           ; BSR set to: 1
 15664                           
 15665                           ; BSR set to: 1
 15666  014924  90D8               	bcf	status,0,c
 15667  014926  3362               	rrcf	(___fttol@lval+3)& (0+255),f,b
 15668  014928  3361               	rrcf	(___fttol@lval+2)& (0+255),f,b
 15669  01492A  3360               	rrcf	(___fttol@lval+1)& (0+255),f,b
 15670  01492C  335F               	rrcf	___fttol@lval& (0+255),f,b
 15671                           
 15672                           ; BSR set to: 1
 15673  01492E  3F63               	incfsz	___fttol@exp1& (0+255),f,b
 15674  014930  D7F9               	goto	l1699
 15675                           
 15676                           ; BSR set to: 1
 15677  014932  D015               	goto	u10390
 15678  014934                     l1698:
 15679                           
 15680                           ; BSR set to: 1
 15681                           
 15682                           ; BSR set to: 1
 15683  014934  0E17               	movlw	23
 15684  014936  6563               	cpfsgt	___fttol@exp1& (0+255),b
 15685  014938  D00F               	goto	l1704
 15686                           
 15687                           ; BSR set to: 1
 15688  01493A  0E00               	movlw	0
 15689  01493C  6F55               	movwf	?___fttol& (0+255),b
 15690  01493E  0E00               	movlw	0
 15691  014940  6F56               	movwf	(?___fttol+1)& (0+255),b
 15692  014942  0E00               	movlw	0
 15693  014944  6F57               	movwf	(?___fttol+2)& (0+255),b
 15694  014946  0E00               	movlw	0
 15695  014948  6F58               	movwf	(?___fttol+3)& (0+255),b
 15696                           
 15697                           ; BSR set to: 1
 15698  01494A  0012               	return	
 15699  01494C                     
 15700                           ; BSR set to: 1
 15701                           
 15702                           ; BSR set to: 1
 15703  01494C  90D8               	bcf	status,0,c
 15704  01494E  375F               	rlcf	___fttol@lval& (0+255),f,b
 15705  014950  3760               	rlcf	(___fttol@lval+1)& (0+255),f,b
 15706  014952  3761               	rlcf	(___fttol@lval+2)& (0+255),f,b
 15707  014954  3762               	rlcf	(___fttol@lval+3)& (0+255),f,b
 15708  014956  0763               	decf	___fttol@exp1& (0+255),f,b
 15709  014958                     l1704:
 15710                           
 15711                           ; BSR set to: 1
 15712                           
 15713                           ; BSR set to: 1
 15714  014958  5163               	movf	___fttol@exp1& (0+255),w,b
 15715  01495A  A4D8               	btfss	status,2,c
 15716  01495C  D7F7               	goto	l1705
 15717  01495E                     u10390:
 15718                           
 15719                           ; BSR set to: 1
 15720                           
 15721                           ; BSR set to: 1
 15722                           
 15723                           ; BSR set to: 1
 15724  01495E  515E               	movf	___fttol@sign1& (0+255),w,b
 15725  014960  B4D8               	btfsc	status,2,c
 15726  014962  D008               	goto	l1707
 15727                           
 15728                           ; BSR set to: 1
 15729  014964  1F62               	comf	(___fttol@lval+3)& (0+255),f,b
 15730  014966  1F61               	comf	(___fttol@lval+2)& (0+255),f,b
 15731  014968  1F60               	comf	(___fttol@lval+1)& (0+255),f,b
 15732  01496A  6D5F               	negf	___fttol@lval& (0+255),b
 15733  01496C  0E00               	movlw	0
 15734  01496E  2360               	addwfc	(___fttol@lval+1)& (0+255),f,b
 15735  014970  2361               	addwfc	(___fttol@lval+2)& (0+255),f,b
 15736  014972  2362               	addwfc	(___fttol@lval+3)& (0+255),f,b
 15737  014974                     l1707:
 15738                           
 15739                           ; BSR set to: 1
 15740                           
 15741                           ; BSR set to: 1
 15742  014974  C15F  F155         	movff	___fttol@lval,?___fttol
 15743  014978  C160  F156         	movff	___fttol@lval+1,?___fttol+1
 15744  01497C  C161  F157         	movff	___fttol@lval+2,?___fttol+2
 15745  014980  C162  F158         	movff	___fttol@lval+3,?___fttol+3
 15746  014984  0012               	return	
 15747  014986                     __end_of___fttol:
 15748                           	opt stack 0
 15749                           tblptru	equ	0xFF8
 15750                           tblptrh	equ	0xFF7
 15751                           tblptrl	equ	0xFF6
 15752                           tablat	equ	0xFF5
 15753                           prodh	equ	0xFF4
 15754                           prodl	equ	0xFF3
 15755                           intcon	equ	0xFF2
 15756                           indf0	equ	0xFEF
 15757                           postinc0	equ	0xFEE
 15758                           fsr0h	equ	0xFEA
 15759                           fsr0l	equ	0xFE9
 15760                           wreg	equ	0xFE8
 15761                           indf1	equ	0xFE7
 15762                           postdec1	equ	0xFE5
 15763                           fsr1h	equ	0xFE2
 15764                           fsr1l	equ	0xFE1
 15765                           indf2	equ	0xFDF
 15766                           postinc2	equ	0xFDE
 15767                           postdec2	equ	0xFDD
 15768                           fsr2h	equ	0xFDA
 15769                           fsr2l	equ	0xFD9
 15770                           status	equ	0xFD8
 15771                           
 15772 ;; *************** function ___ftsub *****************
 15773 ;; Defined at:
 15774 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 15775 ;; Parameters:    Size  Location     Type
 15776 ;;  f1              3   55[BANK1 ] float 
 15777 ;;  f2              3   58[BANK1 ] float 
 15778 ;; Auto vars:     Size  Location     Type
 15779 ;;		None
 15780 ;; Return value:  Size  Location     Type
 15781 ;;                  3   55[BANK1 ] float 
 15782 ;; Registers used:
 15783 ;;		wreg, status,2, status,0, cstack
 15784 ;; Tracked objects:
 15785 ;;		On entry : 0/0
 15786 ;;		On exit  : 0/0
 15787 ;;		Unchanged: 0/0
 15788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15789 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15792 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15793 ;;Total ram usage:        6 bytes
 15794 ;; Hardware stack levels used:    1
 15795 ;; Hardware stack levels required when called:   16
 15796 ;; This function calls:
 15797 ;;		___ftadd
 15798 ;; This function is called by:
 15799 ;;		_printf
 15800 ;; This function uses a non-reentrant model
 15801 ;;
 15802                           
 15803                           	psect	text40
 15804  016226                     __ptext40:
 15805                           	opt stack 0
 15806  016226                     ___ftsub:
 15807                           	opt stack 11
 15808                           
 15809                           ; BSR set to: 1
 15810                           ;incstack = 0
 15811  016226  0101               	movlb	1	; () banked
 15812  016228  513A               	movf	___ftsub@f2& (0+255),w,b
 15813  01622A  113B               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 15814  01622C  113C               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 15815  01622E  B4D8               	btfsc	status,2,c
 15816  016230  D006               	goto	l1692
 15817                           
 15818                           ; BSR set to: 1
 15819  016232  0E00               	movlw	0
 15820  016234  1B3A               	xorwf	___ftsub@f2& (0+255),f,b
 15821  016236  0E00               	movlw	0
 15822  016238  1B3B               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 15823  01623A  0E80               	movlw	128
 15824  01623C  1B3C               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 15825  01623E                     l1692:
 15826                           
 15827                           ; BSR set to: 1
 15828                           
 15829                           ; BSR set to: 1
 15830  01623E  C137  F12B         	movff	___ftsub@f1,___ftadd@f1
 15831  016242  C138  F12C         	movff	___ftsub@f1+1,___ftadd@f1+1
 15832  016246  C139  F12D         	movff	___ftsub@f1+2,___ftadd@f1+2
 15833  01624A  C13A  F12E         	movff	___ftsub@f2,___ftadd@f2
 15834  01624E  C13B  F12F         	movff	___ftsub@f2+1,___ftadd@f2+1
 15835  016252  C13C  F130         	movff	___ftsub@f2+2,___ftadd@f2+2
 15836  016256  ECE7  F09E         	call	___ftadd	;wreg free
 15837  01625A  C12B  F137         	movff	?___ftadd,?___ftsub
 15838  01625E  C12C  F138         	movff	?___ftadd+1,?___ftsub+1
 15839  016262  C12D  F139         	movff	?___ftadd+2,?___ftsub+2
 15840  016266  0012               	return	
 15841  016268                     __end_of___ftsub:
 15842                           	opt stack 0
 15843                           tblptru	equ	0xFF8
 15844                           tblptrh	equ	0xFF7
 15845                           tblptrl	equ	0xFF6
 15846                           tablat	equ	0xFF5
 15847                           prodh	equ	0xFF4
 15848                           prodl	equ	0xFF3
 15849                           intcon	equ	0xFF2
 15850                           indf0	equ	0xFEF
 15851                           postinc0	equ	0xFEE
 15852                           fsr0h	equ	0xFEA
 15853                           fsr0l	equ	0xFE9
 15854                           wreg	equ	0xFE8
 15855                           indf1	equ	0xFE7
 15856                           postdec1	equ	0xFE5
 15857                           fsr1h	equ	0xFE2
 15858                           fsr1l	equ	0xFE1
 15859                           indf2	equ	0xFDF
 15860                           postinc2	equ	0xFDE
 15861                           postdec2	equ	0xFDD
 15862                           fsr2h	equ	0xFDA
 15863                           fsr2l	equ	0xFD9
 15864                           status	equ	0xFD8
 15865                           
 15866 ;; *************** function ___ftadd *****************
 15867 ;; Defined at:
 15868 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 15869 ;; Parameters:    Size  Location     Type
 15870 ;;  f1              3   43[BANK1 ] float 
 15871 ;;  f2              3   46[BANK1 ] float 
 15872 ;; Auto vars:     Size  Location     Type
 15873 ;;  exp1            1   54[BANK1 ] unsigned char 
 15874 ;;  exp2            1   53[BANK1 ] unsigned char 
 15875 ;;  sign            1   52[BANK1 ] unsigned char 
 15876 ;; Return value:  Size  Location     Type
 15877 ;;                  3   43[BANK1 ] float 
 15878 ;; Registers used:
 15879 ;;		wreg, status,2, status,0, cstack
 15880 ;; Tracked objects:
 15881 ;;		On entry : 0/0
 15882 ;;		On exit  : 0/0
 15883 ;;		Unchanged: 0/0
 15884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15885 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15886 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15887 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15888 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15889 ;;Total ram usage:       12 bytes
 15890 ;; Hardware stack levels used:    1
 15891 ;; Hardware stack levels required when called:   15
 15892 ;; This function calls:
 15893 ;;		___ftpack
 15894 ;; This function is called by:
 15895 ;;		_ringBufferLUT
 15896 ;;		_printf
 15897 ;;		___ftsub
 15898 ;; This function uses a non-reentrant model
 15899 ;;
 15900                           
 15901                           	psect	text41
 15902  013DCE                     __ptext41:
 15903                           	opt stack 0
 15904  013DCE                     ___ftadd:
 15905                           	opt stack 11
 15906                           
 15907                           ;incstack = 0
 15908  013DCE  C12D  F131         	movff	___ftadd@f1+2,??___ftadd
 15909  013DD2  0101               	movlb	1	; () banked
 15910  013DD4  6B32               	clrf	(??___ftadd+1)& (0+255),b
 15911  013DD6  6B33               	clrf	(??___ftadd+2)& (0+255),b
 15912  013DD8  352C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 15913  013DDA  3731               	rlcf	??___ftadd& (0+255),f,b
 15914  013DDC  E301               	bnc	u9431
 15915  013DDE  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 15916  013DE0                     u9431:
 15917  013DE0  5131               	movf	??___ftadd& (0+255),w,b
 15918  013DE2  6F36               	movwf	___ftadd@exp1& (0+255),b
 15919  013DE4  C130  F131         	movff	___ftadd@f2+2,??___ftadd
 15920  013DE8  6B32               	clrf	(??___ftadd+1)& (0+255),b
 15921  013DEA  6B33               	clrf	(??___ftadd+2)& (0+255),b
 15922  013DEC  352F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 15923  013DEE  3731               	rlcf	??___ftadd& (0+255),f,b
 15924  013DF0  E301               	bnc	u9441
 15925  013DF2  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 15926  013DF4                     u9441:
 15927  013DF4  5131               	movf	??___ftadd& (0+255),w,b
 15928  013DF6  6F35               	movwf	___ftadd@exp2& (0+255),b
 15929                           
 15930                           ; BSR set to: 1
 15931  013DF8  5136               	movf	___ftadd@exp1& (0+255),w,b
 15932  013DFA  B4D8               	btfsc	status,2,c
 15933  013DFC  D00B               	goto	u9470
 15934                           
 15935                           ; BSR set to: 1
 15936  013DFE  5135               	movf	___ftadd@exp2& (0+255),w,b
 15937  013E00  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 15938  013E02  B0D8               	btfsc	status,0,c
 15939  013E04  D00E               	goto	l1610
 15940                           
 15941                           ; BSR set to: 1
 15942  013E06  5136               	movf	___ftadd@exp1& (0+255),w,b
 15943  013E08  0800               	sublw	0
 15944  013E0A  2535               	addwf	___ftadd@exp2& (0+255),w,b
 15945  013E0C  6F31               	movwf	??___ftadd& (0+255),b
 15946  013E0E  0E18               	movlw	24
 15947  013E10  6531               	cpfsgt	??___ftadd& (0+255),b
 15948  013E12  D007               	goto	l1610
 15949  013E14                     u9470:
 15950                           
 15951                           ; BSR set to: 1
 15952  013E14  C12E  F12B         	movff	___ftadd@f2,?___ftadd
 15953  013E18  C12F  F12C         	movff	___ftadd@f2+1,?___ftadd+1
 15954  013E1C  C130  F12D         	movff	___ftadd@f2+2,?___ftadd+2
 15955  013E20  0012               	return	
 15956  013E22                     l1610:
 15957                           
 15958                           ; BSR set to: 1
 15959                           
 15960                           ; BSR set to: 1
 15961  013E22  5135               	movf	___ftadd@exp2& (0+255),w,b
 15962  013E24  B4D8               	btfsc	status,2,c
 15963  013E26  D00B               	goto	u9500
 15964                           
 15965                           ; BSR set to: 1
 15966  013E28  5136               	movf	___ftadd@exp1& (0+255),w,b
 15967  013E2A  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 15968  013E2C  B0D8               	btfsc	status,0,c
 15969  013E2E  D00E               	goto	l1614
 15970                           
 15971                           ; BSR set to: 1
 15972  013E30  5135               	movf	___ftadd@exp2& (0+255),w,b
 15973  013E32  0800               	sublw	0
 15974  013E34  2536               	addwf	___ftadd@exp1& (0+255),w,b
 15975  013E36  6F31               	movwf	??___ftadd& (0+255),b
 15976  013E38  0E18               	movlw	24
 15977  013E3A  6531               	cpfsgt	??___ftadd& (0+255),b
 15978  013E3C  D007               	goto	l1614
 15979  013E3E                     u9500:
 15980                           
 15981                           ; BSR set to: 1
 15982  013E3E  C12B  F12B         	movff	___ftadd@f1,?___ftadd
 15983  013E42  C12C  F12C         	movff	___ftadd@f1+1,?___ftadd+1
 15984  013E46  C12D  F12D         	movff	___ftadd@f1+2,?___ftadd+2
 15985  013E4A  0012               	return	
 15986  013E4C                     l1614:
 15987                           
 15988                           ; BSR set to: 1
 15989                           
 15990                           ; BSR set to: 1
 15991  013E4C  0E06               	movlw	6
 15992  013E4E  6F34               	movwf	___ftadd@sign& (0+255),b
 15993                           
 15994                           ; BSR set to: 1
 15995  013E50  BF2D               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 15996                           
 15997                           ; BSR set to: 1
 15998  013E52  8F34               	bsf	___ftadd@sign& (0+255),7,b
 15999                           
 16000                           ; BSR set to: 1
 16001                           
 16002                           ; BSR set to: 1
 16003  013E54  BF30               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 16004                           
 16005                           ; BSR set to: 1
 16006  013E56  8D34               	bsf	___ftadd@sign& (0+255),6,b
 16007                           
 16008                           ; BSR set to: 1
 16009  013E58  8F2C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 16010                           
 16011                           ; BSR set to: 1
 16012  013E5A  0EFF               	movlw	255
 16013  013E5C  172B               	andwf	___ftadd@f1& (0+255),f,b
 16014  013E5E  0EFF               	movlw	255
 16015  013E60  172C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 16016  013E62  0E00               	movlw	0
 16017  013E64  172D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 16018  013E66  8F2F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 16019                           
 16020                           ; BSR set to: 1
 16021  013E68  0EFF               	movlw	255
 16022  013E6A  172E               	andwf	___ftadd@f2& (0+255),f,b
 16023  013E6C  0EFF               	movlw	255
 16024  013E6E  172F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 16025  013E70  0E00               	movlw	0
 16026  013E72  1730               	andwf	(___ftadd@f2+2)& (0+255),f,b
 16027                           
 16028                           ; BSR set to: 1
 16029  013E74  5135               	movf	___ftadd@exp2& (0+255),w,b
 16030  013E76  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 16031  013E78  B0D8               	btfsc	status,0,c
 16032  013E7A  D01B               	goto	l1619
 16033  013E7C                     u9530:
 16034                           
 16035                           ; BSR set to: 1
 16036                           
 16037                           ; BSR set to: 1
 16038  013E7C  90D8               	bcf	status,0,c
 16039  013E7E  372E               	rlcf	___ftadd@f2& (0+255),f,b
 16040  013E80  372F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 16041  013E82  3730               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 16042  013E84  0735               	decf	___ftadd@exp2& (0+255),f,b
 16043                           
 16044                           ; BSR set to: 1
 16045  013E86  5136               	movf	___ftadd@exp1& (0+255),w,b
 16046  013E88  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 16047  013E8A  B4D8               	btfsc	status,2,c
 16048  013E8C  D00D               	goto	l1624
 16049                           
 16050                           ; BSR set to: 1
 16051  013E8E  0734               	decf	___ftadd@sign& (0+255),f,b
 16052  013E90  C134  F131         	movff	___ftadd@sign,??___ftadd
 16053  013E94  0E07               	movlw	7
 16054  013E96  1731               	andwf	??___ftadd& (0+255),f,b
 16055  013E98  B4D8               	btfsc	status,2,c
 16056  013E9A  D006               	goto	l1624
 16057  013E9C  D7EF               	goto	u9530
 16058  013E9E                     
 16059                           ; BSR set to: 1
 16060                           
 16061                           ; BSR set to: 1
 16062  013E9E  90D8               	bcf	status,0,c
 16063  013EA0  332D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 16064  013EA2  332C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 16065  013EA4  332B               	rrcf	___ftadd@f1& (0+255),f,b
 16066  013EA6  2B36               	incf	___ftadd@exp1& (0+255),f,b
 16067  013EA8                     l1624:
 16068                           
 16069                           ; BSR set to: 1
 16070                           
 16071                           ; BSR set to: 1
 16072  013EA8  5135               	movf	___ftadd@exp2& (0+255),w,b
 16073  013EAA  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 16074  013EAC  B4D8               	btfsc	status,2,c
 16075  013EAE  D01F               	goto	u9600
 16076  013EB0  D7F6               	goto	l1625
 16077  013EB2                     l1619:
 16078                           
 16079                           ; BSR set to: 1
 16080                           
 16081                           ; BSR set to: 1
 16082  013EB2  5136               	movf	___ftadd@exp1& (0+255),w,b
 16083  013EB4  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 16084  013EB6  B0D8               	btfsc	status,0,c
 16085  013EB8  D01A               	goto	u9600
 16086  013EBA                     u9570:
 16087                           
 16088                           ; BSR set to: 1
 16089                           
 16090                           ; BSR set to: 1
 16091  013EBA  90D8               	bcf	status,0,c
 16092  013EBC  372B               	rlcf	___ftadd@f1& (0+255),f,b
 16093  013EBE  372C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 16094  013EC0  372D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 16095  013EC2  0736               	decf	___ftadd@exp1& (0+255),f,b
 16096                           
 16097                           ; BSR set to: 1
 16098  013EC4  5136               	movf	___ftadd@exp1& (0+255),w,b
 16099  013EC6  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 16100  013EC8  B4D8               	btfsc	status,2,c
 16101  013ECA  D00D               	goto	l1633
 16102                           
 16103                           ; BSR set to: 1
 16104  013ECC  0734               	decf	___ftadd@sign& (0+255),f,b
 16105  013ECE  C134  F131         	movff	___ftadd@sign,??___ftadd
 16106  013ED2  0E07               	movlw	7
 16107  013ED4  1731               	andwf	??___ftadd& (0+255),f,b
 16108  013ED6  B4D8               	btfsc	status,2,c
 16109  013ED8  D006               	goto	l1633
 16110  013EDA  D7EF               	goto	u9570
 16111  013EDC                     
 16112                           ; BSR set to: 1
 16113                           
 16114                           ; BSR set to: 1
 16115  013EDC  90D8               	bcf	status,0,c
 16116  013EDE  3330               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 16117  013EE0  332F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 16118  013EE2  332E               	rrcf	___ftadd@f2& (0+255),f,b
 16119  013EE4  2B35               	incf	___ftadd@exp2& (0+255),f,b
 16120  013EE6                     l1633:
 16121                           
 16122                           ; BSR set to: 1
 16123                           
 16124                           ; BSR set to: 1
 16125  013EE6  5135               	movf	___ftadd@exp2& (0+255),w,b
 16126  013EE8  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 16127  013EEA  A4D8               	btfss	status,2,c
 16128  013EEC  D7F7               	goto	l1634
 16129  013EEE                     u9600:
 16130                           
 16131                           ; BSR set to: 1
 16132                           
 16133                           ; BSR set to: 1
 16134                           
 16135                           ; BSR set to: 1
 16136  013EEE  AF34               	btfss	___ftadd@sign& (0+255),7,b
 16137  013EF0  D00C               	goto	l1636
 16138                           
 16139                           ; BSR set to: 1
 16140  013EF2  0EFF               	movlw	255
 16141  013EF4  1B2B               	xorwf	___ftadd@f1& (0+255),f,b
 16142  013EF6  0EFF               	movlw	255
 16143  013EF8  1B2C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 16144  013EFA  0EFF               	movlw	255
 16145  013EFC  1B2D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 16146  013EFE  0E01               	movlw	1
 16147  013F00  272B               	addwf	___ftadd@f1& (0+255),f,b
 16148  013F02  0E00               	movlw	0
 16149  013F04  232C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 16150  013F06  0E00               	movlw	0
 16151  013F08  232D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 16152  013F0A                     l1636:
 16153                           
 16154                           ; BSR set to: 1
 16155  013F0A  AD34               	btfss	___ftadd@sign& (0+255),6,b
 16156  013F0C  D00C               	goto	l1637
 16157                           
 16158                           ; BSR set to: 1
 16159  013F0E  0EFF               	movlw	255
 16160  013F10  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 16161  013F12  0EFF               	movlw	255
 16162  013F14  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 16163  013F16  0EFF               	movlw	255
 16164  013F18  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 16165  013F1A  0E01               	movlw	1
 16166  013F1C  272E               	addwf	___ftadd@f2& (0+255),f,b
 16167  013F1E  0E00               	movlw	0
 16168  013F20  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 16169  013F22  0E00               	movlw	0
 16170  013F24  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 16171  013F26                     l1637:
 16172                           
 16173                           ; BSR set to: 1
 16174                           
 16175                           ; BSR set to: 1
 16176  013F26  0E00               	movlw	0
 16177  013F28  6F34               	movwf	___ftadd@sign& (0+255),b
 16178                           
 16179                           ; BSR set to: 1
 16180  013F2A  512B               	movf	___ftadd@f1& (0+255),w,b
 16181  013F2C  272E               	addwf	___ftadd@f2& (0+255),f,b
 16182  013F2E  512C               	movf	(___ftadd@f1+1)& (0+255),w,b
 16183  013F30  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 16184  013F32  512D               	movf	(___ftadd@f1+2)& (0+255),w,b
 16185  013F34  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 16186                           
 16187                           ; BSR set to: 1
 16188  013F36  AF30               	btfss	(___ftadd@f2+2)& (0+255),7,b
 16189  013F38  D00E               	goto	l1638
 16190                           
 16191                           ; BSR set to: 1
 16192  013F3A  0EFF               	movlw	255
 16193  013F3C  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 16194  013F3E  0EFF               	movlw	255
 16195  013F40  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 16196  013F42  0EFF               	movlw	255
 16197  013F44  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 16198  013F46  0E01               	movlw	1
 16199  013F48  272E               	addwf	___ftadd@f2& (0+255),f,b
 16200  013F4A  0E00               	movlw	0
 16201  013F4C  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 16202  013F4E  0E00               	movlw	0
 16203  013F50  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 16204                           
 16205                           ; BSR set to: 1
 16206  013F52  0E01               	movlw	1
 16207  013F54  6F34               	movwf	___ftadd@sign& (0+255),b
 16208  013F56                     l1638:
 16209                           
 16210                           ; BSR set to: 1
 16211                           
 16212                           ; BSR set to: 1
 16213  013F56  C12E  F117         	movff	___ftadd@f2,___ftpack@arg
 16214  013F5A  C12F  F118         	movff	___ftadd@f2+1,___ftpack@arg+1
 16215  013F5E  C130  F119         	movff	___ftadd@f2+2,___ftpack@arg+2
 16216  013F62  C136  F11A         	movff	___ftadd@exp1,___ftpack@exp
 16217  013F66  C134  F11B         	movff	___ftadd@sign,___ftpack@sign
 16218  013F6A  ECC7  F0A8         	call	___ftpack	;wreg free
 16219  013F6E  C117  F12B         	movff	?___ftpack,?___ftadd
 16220  013F72  C118  F12C         	movff	?___ftpack+1,?___ftadd+1
 16221  013F76  C119  F12D         	movff	?___ftpack+2,?___ftadd+2
 16222  013F7A  0012               	return	
 16223  013F7C                     __end_of___ftadd:
 16224                           	opt stack 0
 16225                           tblptru	equ	0xFF8
 16226                           tblptrh	equ	0xFF7
 16227                           tblptrl	equ	0xFF6
 16228                           tablat	equ	0xFF5
 16229                           prodh	equ	0xFF4
 16230                           prodl	equ	0xFF3
 16231                           intcon	equ	0xFF2
 16232                           indf0	equ	0xFEF
 16233                           postinc0	equ	0xFEE
 16234                           fsr0h	equ	0xFEA
 16235                           fsr0l	equ	0xFE9
 16236                           wreg	equ	0xFE8
 16237                           indf1	equ	0xFE7
 16238                           postdec1	equ	0xFE5
 16239                           fsr1h	equ	0xFE2
 16240                           fsr1l	equ	0xFE1
 16241                           indf2	equ	0xFDF
 16242                           postinc2	equ	0xFDE
 16243                           postdec2	equ	0xFDD
 16244                           fsr2h	equ	0xFDA
 16245                           fsr2l	equ	0xFD9
 16246                           status	equ	0xFD8
 16247                           
 16248 ;; *************** function ___ftpack *****************
 16249 ;; Defined at:
 16250 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 16251 ;; Parameters:    Size  Location     Type
 16252 ;;  arg             3   23[BANK1 ] unsigned um
 16253 ;;  exp             1   26[BANK1 ] unsigned char 
 16254 ;;  sign            1   27[BANK1 ] unsigned char 
 16255 ;; Auto vars:     Size  Location     Type
 16256 ;;		None
 16257 ;; Return value:  Size  Location     Type
 16258 ;;                  3   23[BANK1 ] float 
 16259 ;; Registers used:
 16260 ;;		wreg, status,2, status,0
 16261 ;; Tracked objects:
 16262 ;;		On entry : 0/0
 16263 ;;		On exit  : 0/0
 16264 ;;		Unchanged: 0/0
 16265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16266 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16268 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16269 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16270 ;;Total ram usage:        8 bytes
 16271 ;; Hardware stack levels used:    1
 16272 ;; Hardware stack levels required when called:   14
 16273 ;; This function calls:
 16274 ;;		Nothing
 16275 ;; This function is called by:
 16276 ;;		___awtoft
 16277 ;;		___ftadd
 16278 ;;		___ftdiv
 16279 ;;		___ftmul
 16280 ;;		___lltoft
 16281 ;; This function uses a non-reentrant model
 16282 ;;
 16283                           
 16284                           	psect	text42
 16285  01518E                     __ptext42:
 16286                           	opt stack 0
 16287  01518E                     ___ftpack:
 16288                           	opt stack 11
 16289                           
 16290                           ;incstack = 0
 16291  01518E  0101               	movlb	1	; () banked
 16292  015190  511A               	movf	___ftpack@exp& (0+255),w,b
 16293  015192  B4D8               	btfsc	status,2,c
 16294  015194  D005               	goto	u9050
 16295                           
 16296                           ; BSR set to: 1
 16297  015196  5117               	movf	___ftpack@arg& (0+255),w,b
 16298  015198  1118               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 16299  01519A  1119               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 16300  01519C  A4D8               	btfss	status,2,c
 16301  01519E  D00C               	goto	l1579
 16302  0151A0                     u9050:
 16303                           
 16304                           ; BSR set to: 1
 16305                           
 16306                           ; BSR set to: 1
 16307  0151A0  0E00               	movlw	0
 16308  0151A2  6F17               	movwf	?___ftpack& (0+255),b
 16309  0151A4  0E00               	movlw	0
 16310  0151A6  6F18               	movwf	(?___ftpack+1)& (0+255),b
 16311  0151A8  0E00               	movlw	0
 16312  0151AA  6F19               	movwf	(?___ftpack+2)& (0+255),b
 16313                           
 16314                           ; BSR set to: 1
 16315  0151AC  0012               	return	
 16316  0151AE                     
 16317                           ; BSR set to: 1
 16318                           
 16319                           ; BSR set to: 1
 16320  0151AE  2B1A               	incf	___ftpack@exp& (0+255),f,b
 16321  0151B0  90D8               	bcf	status,0,c
 16322  0151B2  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 16323  0151B4  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 16324  0151B6  3317               	rrcf	___ftpack@arg& (0+255),f,b
 16325  0151B8                     l1579:
 16326                           
 16327                           ; BSR set to: 1
 16328                           
 16329                           ; BSR set to: 1
 16330  0151B8  0E00               	movlw	0
 16331  0151BA  1517               	andwf	___ftpack@arg& (0+255),w,b
 16332  0151BC  6F1C               	movwf	??___ftpack& (0+255),b
 16333  0151BE  0E00               	movlw	0
 16334  0151C0  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 16335  0151C2  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 16336  0151C4  0EFE               	movlw	254
 16337  0151C6  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 16338  0151C8  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 16339  0151CA  511C               	movf	??___ftpack& (0+255),w,b
 16340  0151CC  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 16341  0151CE  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 16342  0151D0  B4D8               	btfsc	status,2,c
 16343  0151D2  D00C               	goto	l1582
 16344  0151D4  D7EC               	goto	l1580
 16345  0151D6                     
 16346                           ; BSR set to: 1
 16347                           
 16348                           ; BSR set to: 1
 16349  0151D6  2B1A               	incf	___ftpack@exp& (0+255),f,b
 16350                           
 16351                           ; BSR set to: 1
 16352  0151D8  0E01               	movlw	1
 16353  0151DA  2717               	addwf	___ftpack@arg& (0+255),f,b
 16354  0151DC  0E00               	movlw	0
 16355  0151DE  2318               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 16356  0151E0  0E00               	movlw	0
 16357  0151E2  2319               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 16358  0151E4  90D8               	bcf	status,0,c
 16359  0151E6  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 16360  0151E8  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 16361  0151EA  3317               	rrcf	___ftpack@arg& (0+255),f,b
 16362  0151EC                     l1582:
 16363                           
 16364                           ; BSR set to: 1
 16365                           
 16366                           ; BSR set to: 1
 16367  0151EC  0E00               	movlw	0
 16368  0151EE  1517               	andwf	___ftpack@arg& (0+255),w,b
 16369  0151F0  6F1C               	movwf	??___ftpack& (0+255),b
 16370  0151F2  0E00               	movlw	0
 16371  0151F4  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 16372  0151F6  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 16373  0151F8  0EFF               	movlw	255
 16374  0151FA  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 16375  0151FC  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 16376  0151FE  511C               	movf	??___ftpack& (0+255),w,b
 16377  015200  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 16378  015202  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 16379  015204  B4D8               	btfsc	status,2,c
 16380  015206  D006               	goto	l1585
 16381  015208  D7E6               	goto	l1583
 16382  01520A                     
 16383                           ; BSR set to: 1
 16384                           
 16385                           ; BSR set to: 1
 16386  01520A  071A               	decf	___ftpack@exp& (0+255),f,b
 16387  01520C  90D8               	bcf	status,0,c
 16388  01520E  3717               	rlcf	___ftpack@arg& (0+255),f,b
 16389  015210  3718               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 16390  015212  3719               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 16391  015214                     l1585:
 16392                           
 16393                           ; BSR set to: 1
 16394                           
 16395                           ; BSR set to: 1
 16396  015214  BF18               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 16397  015216  D003               	goto	u9090
 16398                           
 16399                           ; BSR set to: 1
 16400  015218  0E02               	movlw	2
 16401  01521A  611A               	cpfslt	___ftpack@exp& (0+255),b
 16402  01521C  D7F6               	goto	l1586
 16403  01521E                     u9090:
 16404                           
 16405                           ; BSR set to: 1
 16406                           
 16407                           ; BSR set to: 1
 16408  01521E  A11A               	btfss	___ftpack@exp& (0+255),0,b
 16409                           
 16410                           ; BSR set to: 1
 16411  015220  9F18               	bcf	(___ftpack@arg+1)& (0+255),7,b
 16412                           
 16413                           ; BSR set to: 1
 16414                           
 16415                           ; BSR set to: 1
 16416  015222  90D8               	bcf	status,0,c
 16417  015224  331A               	rrcf	___ftpack@exp& (0+255),f,b
 16418  015226  511A               	movf	___ftpack@exp& (0+255),w,b
 16419  015228  1319               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 16420                           
 16421                           ; BSR set to: 1
 16422  01522A  511B               	movf	___ftpack@sign& (0+255),w,b
 16423  01522C  A4D8               	btfss	status,2,c
 16424                           
 16425                           ; BSR set to: 1
 16426  01522E  8F19               	bsf	(___ftpack@arg+2)& (0+255),7,b
 16427                           
 16428                           ; BSR set to: 1
 16429                           
 16430                           ; BSR set to: 1
 16431  015230  C117  F117         	movff	___ftpack@arg,?___ftpack
 16432  015234  C118  F118         	movff	___ftpack@arg+1,?___ftpack+1
 16433  015238  C119  F119         	movff	___ftpack@arg+2,?___ftpack+2
 16434  01523C  0012               	return	
 16435  01523E                     __end_of___ftpack:
 16436                           	opt stack 0
 16437                           tblptru	equ	0xFF8
 16438                           tblptrh	equ	0xFF7
 16439                           tblptrl	equ	0xFF6
 16440                           tablat	equ	0xFF5
 16441                           prodh	equ	0xFF4
 16442                           prodl	equ	0xFF3
 16443                           intcon	equ	0xFF2
 16444                           indf0	equ	0xFEF
 16445                           postinc0	equ	0xFEE
 16446                           fsr0h	equ	0xFEA
 16447                           fsr0l	equ	0xFE9
 16448                           wreg	equ	0xFE8
 16449                           indf1	equ	0xFE7
 16450                           postdec1	equ	0xFE5
 16451                           fsr1h	equ	0xFE2
 16452                           fsr1l	equ	0xFE1
 16453                           indf2	equ	0xFDF
 16454                           postinc2	equ	0xFDE
 16455                           postdec2	equ	0xFDD
 16456                           fsr2h	equ	0xFDA
 16457                           fsr2l	equ	0xFD9
 16458                           status	equ	0xFD8
 16459                           
 16460 ;; *************** function ___ftneg *****************
 16461 ;; Defined at:
 16462 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 16463 ;; Parameters:    Size  Location     Type
 16464 ;;  f1              3   35[BANK1 ] float 
 16465 ;; Auto vars:     Size  Location     Type
 16466 ;;		None
 16467 ;; Return value:  Size  Location     Type
 16468 ;;                  3   35[BANK1 ] float 
 16469 ;; Registers used:
 16470 ;;		wreg, status,2, status,0
 16471 ;; Tracked objects:
 16472 ;;		On entry : 0/0
 16473 ;;		On exit  : 0/0
 16474 ;;		Unchanged: 0/0
 16475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16476 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16479 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16480 ;;Total ram usage:        3 bytes
 16481 ;; Hardware stack levels used:    1
 16482 ;; Hardware stack levels required when called:   14
 16483 ;; This function calls:
 16484 ;;		Nothing
 16485 ;; This function is called by:
 16486 ;;		_ringBufferLUT
 16487 ;;		_printf
 16488 ;; This function uses a non-reentrant model
 16489 ;;
 16490                           
 16491                           	psect	text43
 16492  016532                     __ptext43:
 16493                           	opt stack 0
 16494  016532                     ___ftneg:
 16495                           	opt stack 13
 16496                           
 16497                           ; BSR set to: 1
 16498                           ;incstack = 0
 16499  016532  0101               	movlb	1	; () banked
 16500  016534  5123               	movf	___ftneg@f1& (0+255),w,b
 16501  016536  1124               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 16502  016538  1125               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 16503  01653A  B4D8               	btfsc	status,2,c
 16504  01653C  D006               	goto	l1686
 16505                           
 16506                           ; BSR set to: 1
 16507  01653E  0E00               	movlw	0
 16508  016540  1B23               	xorwf	___ftneg@f1& (0+255),f,b
 16509  016542  0E00               	movlw	0
 16510  016544  1B24               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 16511  016546  0E80               	movlw	128
 16512  016548  1B25               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 16513  01654A                     l1686:
 16514                           
 16515                           ; BSR set to: 1
 16516  01654A  C123  F123         	movff	___ftneg@f1,?___ftneg
 16517  01654E  C124  F124         	movff	___ftneg@f1+1,?___ftneg+1
 16518  016552  C125  F125         	movff	___ftneg@f1+2,?___ftneg+2
 16519                           
 16520                           ; BSR set to: 1
 16521  016556  0012               	return		;funcret
 16522  016558                     __end_of___ftneg:
 16523                           	opt stack 0
 16524                           tblptru	equ	0xFF8
 16525                           tblptrh	equ	0xFF7
 16526                           tblptrl	equ	0xFF6
 16527                           tablat	equ	0xFF5
 16528                           prodh	equ	0xFF4
 16529                           prodl	equ	0xFF3
 16530                           intcon	equ	0xFF2
 16531                           indf0	equ	0xFEF
 16532                           postinc0	equ	0xFEE
 16533                           fsr0h	equ	0xFEA
 16534                           fsr0l	equ	0xFE9
 16535                           wreg	equ	0xFE8
 16536                           indf1	equ	0xFE7
 16537                           postdec1	equ	0xFE5
 16538                           fsr1h	equ	0xFE2
 16539                           fsr1l	equ	0xFE1
 16540                           indf2	equ	0xFDF
 16541                           postinc2	equ	0xFDE
 16542                           postdec2	equ	0xFDD
 16543                           fsr2h	equ	0xFDA
 16544                           fsr2l	equ	0xFD9
 16545                           status	equ	0xFD8
 16546                           
 16547 ;; *************** function ___ftge *****************
 16548 ;; Defined at:
 16549 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 16550 ;; Parameters:    Size  Location     Type
 16551 ;;  ff1             3   23[BANK1 ] float 
 16552 ;;  ff2             3   26[BANK1 ] float 
 16553 ;; Auto vars:     Size  Location     Type
 16554 ;;		None
 16555 ;; Return value:  Size  Location     Type
 16556 ;;		None               void
 16557 ;; Registers used:
 16558 ;;		wreg, status,2, status,0
 16559 ;; Tracked objects:
 16560 ;;		On entry : 0/0
 16561 ;;		On exit  : 0/0
 16562 ;;		Unchanged: 0/0
 16563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16564 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16566 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16567 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16568 ;;Total ram usage:        9 bytes
 16569 ;; Hardware stack levels used:    1
 16570 ;; Hardware stack levels required when called:   14
 16571 ;; This function calls:
 16572 ;;		Nothing
 16573 ;; This function is called by:
 16574 ;;		_printf
 16575 ;; This function uses a non-reentrant model
 16576 ;;
 16577                           
 16578                           	psect	text44
 16579  015438                     __ptext44:
 16580                           	opt stack 0
 16581  015438                     ___ftge:
 16582                           	opt stack 13
 16583                           
 16584                           ; BSR set to: 1
 16585                           ;incstack = 0
 16586  015438  0101               	movlb	1	; () banked
 16587  01543A  AF19               	btfss	(___ftge@ff1+2)& (0+255),7,b
 16588  01543C  D016               	goto	l1668
 16589                           
 16590                           ; BSR set to: 1
 16591  01543E  C117  F11D         	movff	___ftge@ff1,??___ftge
 16592  015442  C118  F11E         	movff	___ftge@ff1+1,??___ftge+1
 16593  015446  C119  F11F         	movff	___ftge@ff1+2,??___ftge+2
 16594  01544A  1F1D               	comf	??___ftge& (0+255),f,b
 16595  01544C  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 16596  01544E  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 16597  015450  2B1D               	incf	??___ftge& (0+255),f,b
 16598  015452  0E00               	movlw	0
 16599  015454  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 16600  015456  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 16601  015458  0E00               	movlw	0
 16602  01545A  251D               	addwf	??___ftge& (0+255),w,b
 16603  01545C  6F17               	movwf	___ftge@ff1& (0+255),b
 16604  01545E  0E00               	movlw	0
 16605  015460  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 16606  015462  6F18               	movwf	(___ftge@ff1+1)& (0+255),b
 16607  015464  0E80               	movlw	128
 16608  015466  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 16609  015468  6F19               	movwf	(___ftge@ff1+2)& (0+255),b
 16610  01546A                     l1668:
 16611                           
 16612                           ; BSR set to: 1
 16613                           
 16614                           ; BSR set to: 1
 16615  01546A  AF1C               	btfss	(___ftge@ff2+2)& (0+255),7,b
 16616  01546C  D016               	goto	l1669
 16617                           
 16618                           ; BSR set to: 1
 16619  01546E  C11A  F11D         	movff	___ftge@ff2,??___ftge
 16620  015472  C11B  F11E         	movff	___ftge@ff2+1,??___ftge+1
 16621  015476  C11C  F11F         	movff	___ftge@ff2+2,??___ftge+2
 16622  01547A  1F1D               	comf	??___ftge& (0+255),f,b
 16623  01547C  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 16624  01547E  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 16625  015480  2B1D               	incf	??___ftge& (0+255),f,b
 16626  015482  0E00               	movlw	0
 16627  015484  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 16628  015486  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 16629  015488  0E00               	movlw	0
 16630  01548A  251D               	addwf	??___ftge& (0+255),w,b
 16631  01548C  6F1A               	movwf	___ftge@ff2& (0+255),b
 16632  01548E  0E00               	movlw	0
 16633  015490  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 16634  015492  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 16635  015494  0E80               	movlw	128
 16636  015496  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 16637  015498  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 16638  01549A                     l1669:
 16639                           
 16640                           ; BSR set to: 1
 16641                           
 16642                           ; BSR set to: 1
 16643  01549A  0E00               	movlw	0
 16644  01549C  1B17               	xorwf	___ftge@ff1& (0+255),f,b
 16645  01549E  0E00               	movlw	0
 16646  0154A0  1B18               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 16647  0154A2  0E80               	movlw	128
 16648  0154A4  1B19               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 16649                           
 16650                           ; BSR set to: 1
 16651  0154A6  0E00               	movlw	0
 16652  0154A8  1B1A               	xorwf	___ftge@ff2& (0+255),f,b
 16653  0154AA  0E00               	movlw	0
 16654  0154AC  1B1B               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 16655  0154AE  0E80               	movlw	128
 16656  0154B0  1B1C               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 16657  0154B2  511A               	movf	___ftge@ff2& (0+255),w,b
 16658  0154B4  5D17               	subwf	___ftge@ff1& (0+255),w,b
 16659  0154B6  511B               	movf	(___ftge@ff2+1)& (0+255),w,b
 16660  0154B8  5918               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 16661  0154BA  511C               	movf	(___ftge@ff2+2)& (0+255),w,b
 16662  0154BC  5919               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 16663  0154BE  B0D8               	btfsc	status,0,c
 16664  0154C0  D002               	goto	l8360
 16665                           
 16666                           ; BSR set to: 1
 16667  0154C2  90D8               	bcf	status,0,c
 16668  0154C4  0012               	return	
 16669  0154C6                     l8360:
 16670                           
 16671                           ; BSR set to: 1
 16672                           
 16673                           ; BSR set to: 1
 16674  0154C6  80D8               	bsf	status,0,c
 16675                           
 16676                           ; BSR set to: 1
 16677  0154C8  0012               	return	
 16678  0154CA                     __end_of___ftge:
 16679                           	opt stack 0
 16680                           tblptru	equ	0xFF8
 16681                           tblptrh	equ	0xFF7
 16682                           tblptrl	equ	0xFF6
 16683                           tablat	equ	0xFF5
 16684                           prodh	equ	0xFF4
 16685                           prodl	equ	0xFF3
 16686                           intcon	equ	0xFF2
 16687                           indf0	equ	0xFEF
 16688                           postinc0	equ	0xFEE
 16689                           fsr0h	equ	0xFEA
 16690                           fsr0l	equ	0xFE9
 16691                           wreg	equ	0xFE8
 16692                           indf1	equ	0xFE7
 16693                           postdec1	equ	0xFE5
 16694                           fsr1h	equ	0xFE2
 16695                           fsr1l	equ	0xFE1
 16696                           indf2	equ	0xFDF
 16697                           postinc2	equ	0xFDE
 16698                           postdec2	equ	0xFDD
 16699                           fsr2h	equ	0xFDA
 16700                           fsr2l	equ	0xFD9
 16701                           status	equ	0xFD8
 16702                           
 16703 ;; *************** function _SYSTEM_Initialize *****************
 16704 ;; Defined at:
 16705 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16706 ;; Parameters:    Size  Location     Type
 16707 ;;		None
 16708 ;; Auto vars:     Size  Location     Type
 16709 ;;		None
 16710 ;; Return value:  Size  Location     Type
 16711 ;;                  1    wreg      void 
 16712 ;; Registers used:
 16713 ;;		wreg, status,2, status,0, cstack
 16714 ;; Tracked objects:
 16715 ;;		On entry : 0/0
 16716 ;;		On exit  : 0/0
 16717 ;;		Unchanged: 0/0
 16718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16723 ;;Total ram usage:        0 bytes
 16724 ;; Hardware stack levels used:    1
 16725 ;; Hardware stack levels required when called:   16
 16726 ;; This function calls:
 16727 ;;		_ADCC_Initialize
 16728 ;;		_EUSART2_Initialize
 16729 ;;		_FVR_Initialize
 16730 ;;		_INTERRUPT_Initialize
 16731 ;;		_OSCILLATOR_Initialize
 16732 ;;		_PIN_MANAGER_Initialize
 16733 ;;		_PMD_Initialize
 16734 ;;		_TMR5_Initialize
 16735 ;;		_TMR6_Initialize
 16736 ;;		_TMR7_Initialize
 16737 ;; This function is called by:
 16738 ;;		_main
 16739 ;; This function uses a non-reentrant model
 16740 ;;
 16741                           
 16742                           	psect	text45
 16743  016490                     __ptext45:
 16744                           	opt stack 0
 16745  016490                     _SYSTEM_Initialize:
 16746                           	opt stack 14
 16747                           
 16748                           ;mcc.c: 52: INTERRUPT_Initialize();
 16749                           
 16750                           ; BSR set to: 1
 16751                           ;incstack = 0
 16752  016490  EC70  F0B3         	call	_INTERRUPT_Initialize	;wreg free
 16753                           
 16754                           ;mcc.c: 53: PMD_Initialize();
 16755  016494  EC26  F0B3         	call	_PMD_Initialize	;wreg free
 16756                           
 16757                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 16758  016498  ECCB  F0A9         	call	_PIN_MANAGER_Initialize	;wreg free
 16759                           
 16760                           ;mcc.c: 55: OSCILLATOR_Initialize();
 16761  01649C  EC34  F0B3         	call	_OSCILLATOR_Initialize	;wreg free
 16762                           
 16763                           ;mcc.c: 56: FVR_Initialize();
 16764  0164A0  ECDB  F0B3         	call	_FVR_Initialize	;wreg free
 16765                           
 16766                           ;mcc.c: 57: TMR7_Initialize();
 16767  0164A4  EC17  F0B0         	call	_TMR7_Initialize	;wreg free
 16768                           
 16769                           ;mcc.c: 58: TMR6_Initialize();
 16770  0164A8  EC17  F0B2         	call	_TMR6_Initialize	;wreg free
 16771                           
 16772                           ;mcc.c: 59: ADCC_Initialize();
 16773  0164AC  EC7A  F0AE         	call	_ADCC_Initialize	;wreg free
 16774                           
 16775                           ;mcc.c: 60: TMR5_Initialize();
 16776  0164B0  EC64  F0B0         	call	_TMR5_Initialize	;wreg free
 16777                           
 16778                           ;mcc.c: 61: EUSART2_Initialize();
 16779  0164B4  EC14  F0AE         	call	_EUSART2_Initialize	;wreg free
 16780  0164B8  0012               	return		;funcret
 16781  0164BA                     __end_of_SYSTEM_Initialize:
 16782                           	opt stack 0
 16783                           tblptru	equ	0xFF8
 16784                           tblptrh	equ	0xFF7
 16785                           tblptrl	equ	0xFF6
 16786                           tablat	equ	0xFF5
 16787                           prodh	equ	0xFF4
 16788                           prodl	equ	0xFF3
 16789                           intcon	equ	0xFF2
 16790                           indf0	equ	0xFEF
 16791                           postinc0	equ	0xFEE
 16792                           fsr0h	equ	0xFEA
 16793                           fsr0l	equ	0xFE9
 16794                           wreg	equ	0xFE8
 16795                           indf1	equ	0xFE7
 16796                           postdec1	equ	0xFE5
 16797                           fsr1h	equ	0xFE2
 16798                           fsr1l	equ	0xFE1
 16799                           indf2	equ	0xFDF
 16800                           postinc2	equ	0xFDE
 16801                           postdec2	equ	0xFDD
 16802                           fsr2h	equ	0xFDA
 16803                           fsr2l	equ	0xFD9
 16804                           status	equ	0xFD8
 16805                           
 16806 ;; *************** function _TMR7_Initialize *****************
 16807 ;; Defined at:
 16808 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 16809 ;; Parameters:    Size  Location     Type
 16810 ;;		None
 16811 ;; Auto vars:     Size  Location     Type
 16812 ;;		None
 16813 ;; Return value:  Size  Location     Type
 16814 ;;                  1    wreg      void 
 16815 ;; Registers used:
 16816 ;;		wreg, status,2, status,0, cstack
 16817 ;; Tracked objects:
 16818 ;;		On entry : 0/0
 16819 ;;		On exit  : 0/0
 16820 ;;		Unchanged: 0/0
 16821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16824 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16825 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16826 ;;Total ram usage:        2 bytes
 16827 ;; Hardware stack levels used:    1
 16828 ;; Hardware stack levels required when called:   15
 16829 ;; This function calls:
 16830 ;;		_TMR7_SetInterruptHandler
 16831 ;; This function is called by:
 16832 ;;		_SYSTEM_Initialize
 16833 ;; This function uses a non-reentrant model
 16834 ;;
 16835                           
 16836                           	psect	text46
 16837  01602E                     __ptext46:
 16838                           	opt stack 0
 16839  01602E                     _TMR7_Initialize:
 16840                           	opt stack 14
 16841                           
 16842                           ;tmr7.c: 69: T7GCON = 0x00;
 16843                           
 16844                           ;incstack = 0
 16845  01602E  0E00               	movlw	0
 16846  016030  010F               	movlb	15	; () banked
 16847  016032  6F31               	movwf	49,b	;volatile
 16848                           
 16849                           ;tmr7.c: 72: T7GATE = 0x00;
 16850  016034  0E00               	movlw	0
 16851  016036  6F32               	movwf	50,b	;volatile
 16852                           
 16853                           ;tmr7.c: 75: T7CLK = 0x03;
 16854  016038  0E03               	movlw	3
 16855  01603A  6F33               	movwf	51,b	;volatile
 16856                           
 16857                           ;tmr7.c: 78: TMR7H = 0x3C;
 16858  01603C  0E3C               	movlw	60
 16859  01603E  6F2F               	movwf	47,b	;volatile
 16860                           
 16861                           ;tmr7.c: 81: TMR7L = 0xB0;
 16862  016040  0EB0               	movlw	176
 16863  016042  6F2E               	movwf	46,b	;volatile
 16864                           
 16865                           ; BSR set to: 15
 16866                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 16867  016044  512E               	movf	46,w,b	;volatile
 16868  016046  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 16869  01604A  0101               	movlb	1	; () banked
 16870  01604C  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 16871  01604E  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 16872  016052  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 16873  016054  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 16874  016056  6FD8               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 16875  016058  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 16876  01605A  6FD9               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 16877                           
 16878                           ; BSR set to: 1
 16879                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 16880  01605C  010E               	movlb	14	; () banked
 16881  01605E  9D38               	bcf	56,6,b	;volatile
 16882                           
 16883                           ; BSR set to: 14
 16884                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 16885  016060  8D2E               	bsf	46,6,b	;volatile
 16886                           
 16887                           ; BSR set to: 14
 16888                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 16889  016062  0EBE               	movlw	low _TMR7_DefaultInterruptHandler
 16890  016064  0101               	movlb	1	; () banked
 16891  016066  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 16892  016068  0E67               	movlw	high _TMR7_DefaultInterruptHandler
 16893  01606A  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 16894  01606C  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 16895  01606E  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 16896  016070  EC9F  F0B3         	call	_TMR7_SetInterruptHandler	;wreg free
 16897                           
 16898                           ;tmr7.c: 96: T7CON = 0x31;
 16899  016074  0E31               	movlw	49
 16900  016076  010F               	movlb	15	; () banked
 16901  016078  6F30               	movwf	48,b	;volatile
 16902                           
 16903                           ; BSR set to: 15
 16904  01607A  0012               	return		;funcret
 16905  01607C                     __end_of_TMR7_Initialize:
 16906                           	opt stack 0
 16907                           tblptru	equ	0xFF8
 16908                           tblptrh	equ	0xFF7
 16909                           tblptrl	equ	0xFF6
 16910                           tablat	equ	0xFF5
 16911                           prodh	equ	0xFF4
 16912                           prodl	equ	0xFF3
 16913                           intcon	equ	0xFF2
 16914                           indf0	equ	0xFEF
 16915                           postinc0	equ	0xFEE
 16916                           fsr0h	equ	0xFEA
 16917                           fsr0l	equ	0xFE9
 16918                           wreg	equ	0xFE8
 16919                           indf1	equ	0xFE7
 16920                           postdec1	equ	0xFE5
 16921                           fsr1h	equ	0xFE2
 16922                           fsr1l	equ	0xFE1
 16923                           indf2	equ	0xFDF
 16924                           postinc2	equ	0xFDE
 16925                           postdec2	equ	0xFDD
 16926                           fsr2h	equ	0xFDA
 16927                           fsr2l	equ	0xFD9
 16928                           status	equ	0xFD8
 16929                           
 16930 ;; *************** function _TMR7_SetInterruptHandler *****************
 16931 ;; Defined at:
 16932 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 16933 ;; Parameters:    Size  Location     Type
 16934 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 16935 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 16936 ;; Auto vars:     Size  Location     Type
 16937 ;;		None
 16938 ;; Return value:  Size  Location     Type
 16939 ;;                  1    wreg      void 
 16940 ;; Registers used:
 16941 ;;		wreg, status,2, status,0
 16942 ;; Tracked objects:
 16943 ;;		On entry : 0/0
 16944 ;;		On exit  : 0/0
 16945 ;;		Unchanged: 0/0
 16946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16947 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16950 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16951 ;;Total ram usage:        3 bytes
 16952 ;; Hardware stack levels used:    1
 16953 ;; Hardware stack levels required when called:   14
 16954 ;; This function calls:
 16955 ;;		Nothing
 16956 ;; This function is called by:
 16957 ;;		_TMR7_Initialize
 16958 ;;		_main
 16959 ;; This function uses a non-reentrant model
 16960 ;;
 16961                           
 16962                           	psect	text47
 16963  01673E                     __ptext47:
 16964                           	opt stack 0
 16965  01673E                     _TMR7_SetInterruptHandler:
 16966                           	opt stack 16
 16967                           
 16968                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 16969                           
 16970                           ; BSR set to: 15
 16971                           ;incstack = 0
 16972  01673E  C117  F1CD         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 16973  016742  C118  F1CE         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 16974  016746  C119  F1CF         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 16975  01674A  0012               	return		;funcret
 16976  01674C                     __end_of_TMR7_SetInterruptHandler:
 16977                           	opt stack 0
 16978                           tblptru	equ	0xFF8
 16979                           tblptrh	equ	0xFF7
 16980                           tblptrl	equ	0xFF6
 16981                           tablat	equ	0xFF5
 16982                           prodh	equ	0xFF4
 16983                           prodl	equ	0xFF3
 16984                           intcon	equ	0xFF2
 16985                           indf0	equ	0xFEF
 16986                           postinc0	equ	0xFEE
 16987                           fsr0h	equ	0xFEA
 16988                           fsr0l	equ	0xFE9
 16989                           wreg	equ	0xFE8
 16990                           indf1	equ	0xFE7
 16991                           postdec1	equ	0xFE5
 16992                           fsr1h	equ	0xFE2
 16993                           fsr1l	equ	0xFE1
 16994                           indf2	equ	0xFDF
 16995                           postinc2	equ	0xFDE
 16996                           postdec2	equ	0xFDD
 16997                           fsr2h	equ	0xFDA
 16998                           fsr2l	equ	0xFD9
 16999                           status	equ	0xFD8
 17000                           
 17001 ;; *************** function _TMR6_Initialize *****************
 17002 ;; Defined at:
 17003 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 17004 ;; Parameters:    Size  Location     Type
 17005 ;;		None
 17006 ;; Auto vars:     Size  Location     Type
 17007 ;;		None
 17008 ;; Return value:  Size  Location     Type
 17009 ;;                  1    wreg      void 
 17010 ;; Registers used:
 17011 ;;		wreg, status,2, status,0, cstack
 17012 ;; Tracked objects:
 17013 ;;		On entry : 0/0
 17014 ;;		On exit  : 0/0
 17015 ;;		Unchanged: 0/0
 17016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17021 ;;Total ram usage:        0 bytes
 17022 ;; Hardware stack levels used:    1
 17023 ;; Hardware stack levels required when called:   15
 17024 ;; This function calls:
 17025 ;;		_TMR6_SetInterruptHandler
 17026 ;; This function is called by:
 17027 ;;		_SYSTEM_Initialize
 17028 ;; This function uses a non-reentrant model
 17029 ;;
 17030                           
 17031                           	psect	text48
 17032  01642E                     __ptext48:
 17033                           	opt stack 0
 17034  01642E                     _TMR6_Initialize:
 17035                           	opt stack 14
 17036                           
 17037                           ;tmr6.c: 69: T6CLKCON = 0x04;
 17038                           
 17039                           ;incstack = 0
 17040  01642E  0E04               	movlw	4
 17041  016430  6EB3               	movwf	4019,c	;volatile
 17042                           
 17043                           ;tmr6.c: 72: T6HLT = 0x20;
 17044  016432  0E20               	movlw	32
 17045  016434  6EB2               	movwf	4018,c	;volatile
 17046                           
 17047                           ;tmr6.c: 75: T6RST = 0x00;
 17048  016436  0E00               	movlw	0
 17049  016438  6EB4               	movwf	4020,c	;volatile
 17050                           
 17051                           ;tmr6.c: 78: T6PR = 0xF1;
 17052  01643A  0EF1               	movlw	241
 17053  01643C  6EB0               	movwf	4016,c	;volatile
 17054                           
 17055                           ;tmr6.c: 81: T6TMR = 0x00;
 17056  01643E  0E00               	movlw	0
 17057  016440  6EAF               	movwf	4015,c	;volatile
 17058                           
 17059                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 17060  016442  010E               	movlb	14	; () banked
 17061  016444  9B38               	bcf	56,5,b	;volatile
 17062                           
 17063                           ; BSR set to: 14
 17064                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 17065  016446  8B2E               	bsf	46,5,b	;volatile
 17066                           
 17067                           ; BSR set to: 14
 17068                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 17069  016448  0EC0               	movlw	low _TMR6_DefaultInterruptHandler
 17070  01644A  0101               	movlb	1	; () banked
 17071  01644C  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 17072  01644E  0E67               	movlw	high _TMR6_DefaultInterruptHandler
 17073  016450  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17074  016452  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 17075  016454  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 17076  016456  ECA6  F0B3         	call	_TMR6_SetInterruptHandler	;wreg free
 17077                           
 17078                           ;tmr6.c: 93: T6CON = 0xBF;
 17079  01645A  0EBF               	movlw	191
 17080  01645C  6EB1               	movwf	4017,c	;volatile
 17081  01645E  0012               	return		;funcret
 17082  016460                     __end_of_TMR6_Initialize:
 17083                           	opt stack 0
 17084                           tblptru	equ	0xFF8
 17085                           tblptrh	equ	0xFF7
 17086                           tblptrl	equ	0xFF6
 17087                           tablat	equ	0xFF5
 17088                           prodh	equ	0xFF4
 17089                           prodl	equ	0xFF3
 17090                           intcon	equ	0xFF2
 17091                           indf0	equ	0xFEF
 17092                           postinc0	equ	0xFEE
 17093                           fsr0h	equ	0xFEA
 17094                           fsr0l	equ	0xFE9
 17095                           wreg	equ	0xFE8
 17096                           indf1	equ	0xFE7
 17097                           postdec1	equ	0xFE5
 17098                           fsr1h	equ	0xFE2
 17099                           fsr1l	equ	0xFE1
 17100                           indf2	equ	0xFDF
 17101                           postinc2	equ	0xFDE
 17102                           postdec2	equ	0xFDD
 17103                           fsr2h	equ	0xFDA
 17104                           fsr2l	equ	0xFD9
 17105                           status	equ	0xFD8
 17106                           
 17107 ;; *************** function _TMR6_SetInterruptHandler *****************
 17108 ;; Defined at:
 17109 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 17110 ;; Parameters:    Size  Location     Type
 17111 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 17112 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 17113 ;; Auto vars:     Size  Location     Type
 17114 ;;		None
 17115 ;; Return value:  Size  Location     Type
 17116 ;;                  1    wreg      void 
 17117 ;; Registers used:
 17118 ;;		wreg, status,2, status,0
 17119 ;; Tracked objects:
 17120 ;;		On entry : 0/0
 17121 ;;		On exit  : 0/0
 17122 ;;		Unchanged: 0/0
 17123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17124 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17127 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17128 ;;Total ram usage:        3 bytes
 17129 ;; Hardware stack levels used:    1
 17130 ;; Hardware stack levels required when called:   14
 17131 ;; This function calls:
 17132 ;;		Nothing
 17133 ;; This function is called by:
 17134 ;;		_TMR6_Initialize
 17135 ;;		_main
 17136 ;; This function uses a non-reentrant model
 17137 ;;
 17138                           
 17139                           	psect	text49
 17140  01674C                     __ptext49:
 17141                           	opt stack 0
 17142  01674C                     _TMR6_SetInterruptHandler:
 17143                           	opt stack 16
 17144                           
 17145                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 17146                           
 17147                           ;incstack = 0
 17148  01674C  C117  F1D0         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 17149  016750  C118  F1D1         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 17150  016754  C119  F1D2         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 17151  016758  0012               	return		;funcret
 17152  01675A                     __end_of_TMR6_SetInterruptHandler:
 17153                           	opt stack 0
 17154                           tblptru	equ	0xFF8
 17155                           tblptrh	equ	0xFF7
 17156                           tblptrl	equ	0xFF6
 17157                           tablat	equ	0xFF5
 17158                           prodh	equ	0xFF4
 17159                           prodl	equ	0xFF3
 17160                           intcon	equ	0xFF2
 17161                           indf0	equ	0xFEF
 17162                           postinc0	equ	0xFEE
 17163                           fsr0h	equ	0xFEA
 17164                           fsr0l	equ	0xFE9
 17165                           wreg	equ	0xFE8
 17166                           indf1	equ	0xFE7
 17167                           postdec1	equ	0xFE5
 17168                           fsr1h	equ	0xFE2
 17169                           fsr1l	equ	0xFE1
 17170                           indf2	equ	0xFDF
 17171                           postinc2	equ	0xFDE
 17172                           postdec2	equ	0xFDD
 17173                           fsr2h	equ	0xFDA
 17174                           fsr2l	equ	0xFD9
 17175                           status	equ	0xFD8
 17176                           
 17177 ;; *************** function _TMR5_Initialize *****************
 17178 ;; Defined at:
 17179 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 17180 ;; Parameters:    Size  Location     Type
 17181 ;;		None
 17182 ;; Auto vars:     Size  Location     Type
 17183 ;;		None
 17184 ;; Return value:  Size  Location     Type
 17185 ;;                  1    wreg      void 
 17186 ;; Registers used:
 17187 ;;		wreg, status,2, status,0, cstack
 17188 ;; Tracked objects:
 17189 ;;		On entry : 0/0
 17190 ;;		On exit  : 0/0
 17191 ;;		Unchanged: 0/0
 17192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17195 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17196 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17197 ;;Total ram usage:        2 bytes
 17198 ;; Hardware stack levels used:    1
 17199 ;; Hardware stack levels required when called:   15
 17200 ;; This function calls:
 17201 ;;		_TMR5_SetInterruptHandler
 17202 ;; This function is called by:
 17203 ;;		_SYSTEM_Initialize
 17204 ;; This function uses a non-reentrant model
 17205 ;;
 17206                           
 17207                           	psect	text50
 17208  0160C8                     __ptext50:
 17209                           	opt stack 0
 17210  0160C8                     _TMR5_Initialize:
 17211                           	opt stack 14
 17212                           
 17213                           ;tmr5.c: 69: T5GCON = 0x00;
 17214                           
 17215                           ;incstack = 0
 17216  0160C8  0E00               	movlw	0
 17217  0160CA  6EC4               	movwf	4036,c	;volatile
 17218                           
 17219                           ;tmr5.c: 72: T5GATE = 0x00;
 17220  0160CC  0E00               	movlw	0
 17221  0160CE  6EC5               	movwf	4037,c	;volatile
 17222                           
 17223                           ;tmr5.c: 75: T5CLK = 0x01;
 17224  0160D0  0E01               	movlw	1
 17225  0160D2  6EC6               	movwf	4038,c	;volatile
 17226                           
 17227                           ;tmr5.c: 78: TMR5H = 0x00;
 17228  0160D4  0E00               	movlw	0
 17229  0160D6  6EC2               	movwf	4034,c	;volatile
 17230                           
 17231                           ;tmr5.c: 81: TMR5L = 0x00;
 17232  0160D8  0E00               	movlw	0
 17233  0160DA  6EC1               	movwf	4033,c	;volatile
 17234                           
 17235                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 17236  0160DC  50C1               	movf	4033,w,c	;volatile
 17237  0160DE  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 17238  0160E2  0101               	movlb	1	; () banked
 17239  0160E4  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 17240  0160E6  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 17241  0160EA  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 17242  0160EC  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 17243  0160EE  6FD6               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 17244  0160F0  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 17245  0160F2  6FD7               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 17246                           
 17247                           ; BSR set to: 1
 17248                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 17249  0160F4  010E               	movlb	14	; () banked
 17250  0160F6  9938               	bcf	56,4,b	;volatile
 17251                           
 17252                           ; BSR set to: 14
 17253                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 17254  0160F8  892E               	bsf	46,4,b	;volatile
 17255                           
 17256                           ; BSR set to: 14
 17257                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 17258  0160FA  0EC2               	movlw	low _TMR5_DefaultInterruptHandler
 17259  0160FC  0101               	movlb	1	; () banked
 17260  0160FE  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 17261  016100  0E67               	movlw	high _TMR5_DefaultInterruptHandler
 17262  016102  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 17263  016104  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 17264  016106  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 17265  016108  ECAD  F0B3         	call	_TMR5_SetInterruptHandler	;wreg free
 17266                           
 17267                           ;tmr5.c: 96: T5CON = 0x13;
 17268  01610C  0E13               	movlw	19
 17269  01610E  6EC3               	movwf	4035,c	;volatile
 17270  016110  0012               	return		;funcret
 17271  016112                     __end_of_TMR5_Initialize:
 17272                           	opt stack 0
 17273                           tblptru	equ	0xFF8
 17274                           tblptrh	equ	0xFF7
 17275                           tblptrl	equ	0xFF6
 17276                           tablat	equ	0xFF5
 17277                           prodh	equ	0xFF4
 17278                           prodl	equ	0xFF3
 17279                           intcon	equ	0xFF2
 17280                           indf0	equ	0xFEF
 17281                           postinc0	equ	0xFEE
 17282                           fsr0h	equ	0xFEA
 17283                           fsr0l	equ	0xFE9
 17284                           wreg	equ	0xFE8
 17285                           indf1	equ	0xFE7
 17286                           postdec1	equ	0xFE5
 17287                           fsr1h	equ	0xFE2
 17288                           fsr1l	equ	0xFE1
 17289                           indf2	equ	0xFDF
 17290                           postinc2	equ	0xFDE
 17291                           postdec2	equ	0xFDD
 17292                           fsr2h	equ	0xFDA
 17293                           fsr2l	equ	0xFD9
 17294                           status	equ	0xFD8
 17295                           
 17296 ;; *************** function _TMR5_SetInterruptHandler *****************
 17297 ;; Defined at:
 17298 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 17299 ;; Parameters:    Size  Location     Type
 17300 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 17301 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 17302 ;; Auto vars:     Size  Location     Type
 17303 ;;		None
 17304 ;; Return value:  Size  Location     Type
 17305 ;;                  1    wreg      void 
 17306 ;; Registers used:
 17307 ;;		wreg, status,2, status,0
 17308 ;; Tracked objects:
 17309 ;;		On entry : 0/0
 17310 ;;		On exit  : 0/0
 17311 ;;		Unchanged: 0/0
 17312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17313 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17316 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17317 ;;Total ram usage:        3 bytes
 17318 ;; Hardware stack levels used:    1
 17319 ;; Hardware stack levels required when called:   14
 17320 ;; This function calls:
 17321 ;;		Nothing
 17322 ;; This function is called by:
 17323 ;;		_TMR5_Initialize
 17324 ;; This function uses a non-reentrant model
 17325 ;;
 17326                           
 17327                           	psect	text51
 17328  01675A                     __ptext51:
 17329                           	opt stack 0
 17330  01675A                     _TMR5_SetInterruptHandler:
 17331                           	opt stack 14
 17332                           
 17333                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 17334                           
 17335                           ;incstack = 0
 17336  01675A  C117  F1CA         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 17337  01675E  C118  F1CB         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 17338  016762  C119  F1CC         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 17339  016766  0012               	return		;funcret
 17340  016768                     __end_of_TMR5_SetInterruptHandler:
 17341                           	opt stack 0
 17342                           tblptru	equ	0xFF8
 17343                           tblptrh	equ	0xFF7
 17344                           tblptrl	equ	0xFF6
 17345                           tablat	equ	0xFF5
 17346                           prodh	equ	0xFF4
 17347                           prodl	equ	0xFF3
 17348                           intcon	equ	0xFF2
 17349                           indf0	equ	0xFEF
 17350                           postinc0	equ	0xFEE
 17351                           fsr0h	equ	0xFEA
 17352                           fsr0l	equ	0xFE9
 17353                           wreg	equ	0xFE8
 17354                           indf1	equ	0xFE7
 17355                           postdec1	equ	0xFE5
 17356                           fsr1h	equ	0xFE2
 17357                           fsr1l	equ	0xFE1
 17358                           indf2	equ	0xFDF
 17359                           postinc2	equ	0xFDE
 17360                           postdec2	equ	0xFDD
 17361                           fsr2h	equ	0xFDA
 17362                           fsr2l	equ	0xFD9
 17363                           status	equ	0xFD8
 17364                           
 17365 ;; *************** function _PMD_Initialize *****************
 17366 ;; Defined at:
 17367 ;;		line 82 in file "mcc_generated_files/mcc.c"
 17368 ;; Parameters:    Size  Location     Type
 17369 ;;		None
 17370 ;; Auto vars:     Size  Location     Type
 17371 ;;		None
 17372 ;; Return value:  Size  Location     Type
 17373 ;;                  1    wreg      void 
 17374 ;; Registers used:
 17375 ;;		wreg, status,2
 17376 ;; Tracked objects:
 17377 ;;		On entry : 0/0
 17378 ;;		On exit  : 0/0
 17379 ;;		Unchanged: 0/0
 17380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17385 ;;Total ram usage:        0 bytes
 17386 ;; Hardware stack levels used:    1
 17387 ;; Hardware stack levels required when called:   14
 17388 ;; This function calls:
 17389 ;;		Nothing
 17390 ;; This function is called by:
 17391 ;;		_SYSTEM_Initialize
 17392 ;; This function uses a non-reentrant model
 17393 ;;
 17394                           
 17395                           	psect	text52
 17396  01664C                     __ptext52:
 17397                           	opt stack 0
 17398  01664C                     _PMD_Initialize:
 17399                           	opt stack 15
 17400                           
 17401                           ;mcc.c: 85: PMD0 = 0x00;
 17402                           
 17403                           ;incstack = 0
 17404  01664C  0E00               	movlw	0
 17405  01664E  010E               	movlb	14	; () banked
 17406  016650  6F4C               	movwf	76,b	;volatile
 17407                           
 17408                           ;mcc.c: 87: PMD1 = 0x00;
 17409  016652  0E00               	movlw	0
 17410  016654  6F4D               	movwf	77,b	;volatile
 17411                           
 17412                           ;mcc.c: 89: PMD2 = 0x00;
 17413  016656  0E00               	movlw	0
 17414  016658  6F4E               	movwf	78,b	;volatile
 17415                           
 17416                           ;mcc.c: 91: PMD3 = 0x00;
 17417  01665A  0E00               	movlw	0
 17418  01665C  6F4F               	movwf	79,b	;volatile
 17419                           
 17420                           ;mcc.c: 93: PMD4 = 0x00;
 17421  01665E  0E00               	movlw	0
 17422  016660  6F50               	movwf	80,b	;volatile
 17423                           
 17424                           ;mcc.c: 95: PMD5 = 0x00;
 17425  016662  0E00               	movlw	0
 17426  016664  6F51               	movwf	81,b	;volatile
 17427                           
 17428                           ; BSR set to: 14
 17429  016666  0012               	return		;funcret
 17430  016668                     __end_of_PMD_Initialize:
 17431                           	opt stack 0
 17432                           tblptru	equ	0xFF8
 17433                           tblptrh	equ	0xFF7
 17434                           tblptrl	equ	0xFF6
 17435                           tablat	equ	0xFF5
 17436                           prodh	equ	0xFF4
 17437                           prodl	equ	0xFF3
 17438                           intcon	equ	0xFF2
 17439                           indf0	equ	0xFEF
 17440                           postinc0	equ	0xFEE
 17441                           fsr0h	equ	0xFEA
 17442                           fsr0l	equ	0xFE9
 17443                           wreg	equ	0xFE8
 17444                           indf1	equ	0xFE7
 17445                           postdec1	equ	0xFE5
 17446                           fsr1h	equ	0xFE2
 17447                           fsr1l	equ	0xFE1
 17448                           indf2	equ	0xFDF
 17449                           postinc2	equ	0xFDE
 17450                           postdec2	equ	0xFDD
 17451                           fsr2h	equ	0xFDA
 17452                           fsr2l	equ	0xFD9
 17453                           status	equ	0xFD8
 17454                           
 17455 ;; *************** function _PIN_MANAGER_Initialize *****************
 17456 ;; Defined at:
 17457 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 17458 ;; Parameters:    Size  Location     Type
 17459 ;;		None
 17460 ;; Auto vars:     Size  Location     Type
 17461 ;;		None
 17462 ;; Return value:  Size  Location     Type
 17463 ;;                  1    wreg      void 
 17464 ;; Registers used:
 17465 ;;		wreg, status,2
 17466 ;; Tracked objects:
 17467 ;;		On entry : 0/0
 17468 ;;		On exit  : 0/0
 17469 ;;		Unchanged: 0/0
 17470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17475 ;;Total ram usage:        0 bytes
 17476 ;; Hardware stack levels used:    1
 17477 ;; Hardware stack levels required when called:   14
 17478 ;; This function calls:
 17479 ;;		Nothing
 17480 ;; This function is called by:
 17481 ;;		_SYSTEM_Initialize
 17482 ;; This function uses a non-reentrant model
 17483 ;;
 17484                           
 17485                           	psect	text53
 17486  015396                     __ptext53:
 17487                           	opt stack 0
 17488  015396                     _PIN_MANAGER_Initialize:
 17489                           	opt stack 15
 17490                           
 17491                           ;pin_manager.c: 62: LATE = 0x00;
 17492                           
 17493                           ; BSR set to: 14
 17494                           ;incstack = 0
 17495  015396  0E00               	movlw	0
 17496  015398  6E7D               	movwf	3965,c	;volatile
 17497                           
 17498                           ;pin_manager.c: 63: LATD = 0x00;
 17499  01539A  0E00               	movlw	0
 17500  01539C  6E7C               	movwf	3964,c	;volatile
 17501                           
 17502                           ;pin_manager.c: 64: LATA = 0x00;
 17503  01539E  0E00               	movlw	0
 17504  0153A0  6E79               	movwf	3961,c	;volatile
 17505                           
 17506                           ;pin_manager.c: 65: LATF = 0x00;
 17507  0153A2  0E00               	movlw	0
 17508  0153A4  6E7E               	movwf	3966,c	;volatile
 17509                           
 17510                           ;pin_manager.c: 66: LATB = 0x00;
 17511  0153A6  0E00               	movlw	0
 17512  0153A8  6E7A               	movwf	3962,c	;volatile
 17513                           
 17514                           ;pin_manager.c: 67: LATG = 0x00;
 17515  0153AA  0E00               	movlw	0
 17516  0153AC  6E7F               	movwf	3967,c	;volatile
 17517                           
 17518                           ;pin_manager.c: 68: LATC = 0x00;
 17519  0153AE  0E00               	movlw	0
 17520  0153B0  6E7B               	movwf	3963,c	;volatile
 17521                           
 17522                           ;pin_manager.c: 69: LATH = 0x00;
 17523  0153B2  0E00               	movlw	0
 17524  0153B4  6E80               	movwf	3968,c	;volatile
 17525                           
 17526                           ;pin_manager.c: 74: TRISE = 0xFF;
 17527  0153B6  6885               	setf	3973,c	;volatile
 17528                           
 17529                           ;pin_manager.c: 75: TRISF = 0xF0;
 17530  0153B8  0EF0               	movlw	240
 17531  0153BA  6E86               	movwf	3974,c	;volatile
 17532                           
 17533                           ;pin_manager.c: 76: TRISA = 0xFF;
 17534  0153BC  6881               	setf	3969,c	;volatile
 17535                           
 17536                           ;pin_manager.c: 77: TRISG = 0x5C;
 17537  0153BE  0E5C               	movlw	92
 17538  0153C0  6E87               	movwf	3975,c	;volatile
 17539                           
 17540                           ;pin_manager.c: 78: TRISB = 0xFF;
 17541  0153C2  6882               	setf	3970,c	;volatile
 17542                           
 17543                           ;pin_manager.c: 79: TRISH = 0x0F;
 17544  0153C4  0E0F               	movlw	15
 17545  0153C6  6E88               	movwf	3976,c	;volatile
 17546                           
 17547                           ;pin_manager.c: 80: TRISC = 0xFF;
 17548  0153C8  6883               	setf	3971,c	;volatile
 17549                           
 17550                           ;pin_manager.c: 81: TRISD = 0xFF;
 17551  0153CA  6884               	setf	3972,c	;volatile
 17552                           
 17553                           ;pin_manager.c: 86: ANSELD = 0xFF;
 17554  0153CC  010E               	movlb	14	; () banked
 17555  0153CE  69A7               	setf	167,b	;volatile
 17556                           
 17557                           ; BSR set to: 14
 17558                           ;pin_manager.c: 87: ANSELB = 0xFF;
 17559  0153D0  699A               	setf	154,b	;volatile
 17560                           
 17561                           ; BSR set to: 14
 17562                           ;pin_manager.c: 88: ANSELE = 0xFF;
 17563  0153D2  69AF               	setf	175,b	;volatile
 17564                           
 17565                           ;pin_manager.c: 89: ANSELG = 0x3C;
 17566  0153D4  0E3C               	movlw	60
 17567  0153D6  6FBC               	movwf	188,b	;volatile
 17568                           
 17569                           ;pin_manager.c: 90: ANSELF = 0xF0;
 17570  0153D8  0EF0               	movlw	240
 17571  0153DA  6FB4               	movwf	180,b	;volatile
 17572                           
 17573                           ; BSR set to: 14
 17574                           ;pin_manager.c: 91: ANSELA = 0xFF;
 17575  0153DC  6992               	setf	146,b	;volatile
 17576                           
 17577                           ;pin_manager.c: 96: WPUD = 0x00;
 17578  0153DE  0E00               	movlw	0
 17579  0153E0  6FA6               	movwf	166,b	;volatile
 17580                           
 17581                           ;pin_manager.c: 97: WPUF = 0x00;
 17582  0153E2  0E00               	movlw	0
 17583  0153E4  6FB3               	movwf	179,b	;volatile
 17584                           
 17585                           ;pin_manager.c: 98: WPUE = 0x00;
 17586  0153E6  0E00               	movlw	0
 17587  0153E8  6FAE               	movwf	174,b	;volatile
 17588                           
 17589                           ;pin_manager.c: 99: WPUB = 0x00;
 17590  0153EA  0E00               	movlw	0
 17591  0153EC  6F99               	movwf	153,b	;volatile
 17592                           
 17593                           ;pin_manager.c: 100: WPUG = 0x00;
 17594  0153EE  0E00               	movlw	0
 17595  0153F0  6FBB               	movwf	187,b	;volatile
 17596                           
 17597                           ;pin_manager.c: 101: WPUA = 0x00;
 17598  0153F2  0E00               	movlw	0
 17599  0153F4  6F91               	movwf	145,b	;volatile
 17600                           
 17601                           ;pin_manager.c: 102: WPUC = 0x00;
 17602  0153F6  0E00               	movlw	0
 17603  0153F8  6FA1               	movwf	161,b	;volatile
 17604                           
 17605                           ;pin_manager.c: 103: WPUH = 0x00;
 17606  0153FA  0E00               	movlw	0
 17607  0153FC  6FC0               	movwf	192,b	;volatile
 17608                           
 17609                           ;pin_manager.c: 108: ODCONE = 0x00;
 17610  0153FE  0E00               	movlw	0
 17611  015400  6FAD               	movwf	173,b	;volatile
 17612                           
 17613                           ;pin_manager.c: 109: ODCONF = 0x01;
 17614  015402  0E01               	movlw	1
 17615  015404  6FB2               	movwf	178,b	;volatile
 17616                           
 17617                           ;pin_manager.c: 110: ODCONA = 0x00;
 17618  015406  0E00               	movlw	0
 17619  015408  6F90               	movwf	144,b	;volatile
 17620                           
 17621                           ;pin_manager.c: 111: ODCONG = 0x00;
 17622  01540A  0E00               	movlw	0
 17623  01540C  6FBA               	movwf	186,b	;volatile
 17624                           
 17625                           ;pin_manager.c: 112: ODCONB = 0x00;
 17626  01540E  0E00               	movlw	0
 17627  015410  6F98               	movwf	152,b	;volatile
 17628                           
 17629                           ;pin_manager.c: 113: ODCONH = 0x00;
 17630  015412  0E00               	movlw	0
 17631  015414  6FBF               	movwf	191,b	;volatile
 17632                           
 17633                           ;pin_manager.c: 114: ODCONC = 0x00;
 17634  015416  0E00               	movlw	0
 17635  015418  6FA0               	movwf	160,b	;volatile
 17636                           
 17637                           ;pin_manager.c: 115: ODCOND = 0x00;
 17638  01541A  0E00               	movlw	0
 17639  01541C  6FA5               	movwf	165,b	;volatile
 17640                           
 17641                           ; BSR set to: 14
 17642                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 17643  01541E  698F               	setf	143,b	;volatile
 17644                           
 17645                           ; BSR set to: 14
 17646                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 17647  015420  6997               	setf	151,b	;volatile
 17648                           
 17649                           ; BSR set to: 14
 17650                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 17651  015422  699F               	setf	159,b	;volatile
 17652                           
 17653                           ; BSR set to: 14
 17654                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 17655  015424  69A4               	setf	164,b	;volatile
 17656                           
 17657                           ; BSR set to: 14
 17658                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 17659  015426  69AC               	setf	172,b	;volatile
 17660                           
 17661                           ; BSR set to: 14
 17662                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 17663  015428  69B1               	setf	177,b	;volatile
 17664                           
 17665                           ; BSR set to: 14
 17666                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 17667  01542A  69B9               	setf	185,b	;volatile
 17668                           
 17669                           ; BSR set to: 14
 17670                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 17671  01542C  69BE               	setf	190,b	;volatile
 17672                           
 17673                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 17674  01542E  0E0E               	movlw	14
 17675  015430  6F89               	movwf	137,b	;volatile
 17676                           
 17677                           ;pin_manager.c: 137: RX2PPS = 0x36;
 17678  015432  0E36               	movlw	54
 17679  015434  6F11               	movwf	17,b	;volatile
 17680                           
 17681                           ; BSR set to: 14
 17682  015436  0012               	return		;funcret
 17683  015438                     __end_of_PIN_MANAGER_Initialize:
 17684                           	opt stack 0
 17685                           tblptru	equ	0xFF8
 17686                           tblptrh	equ	0xFF7
 17687                           tblptrl	equ	0xFF6
 17688                           tablat	equ	0xFF5
 17689                           prodh	equ	0xFF4
 17690                           prodl	equ	0xFF3
 17691                           intcon	equ	0xFF2
 17692                           indf0	equ	0xFEF
 17693                           postinc0	equ	0xFEE
 17694                           fsr0h	equ	0xFEA
 17695                           fsr0l	equ	0xFE9
 17696                           wreg	equ	0xFE8
 17697                           indf1	equ	0xFE7
 17698                           postdec1	equ	0xFE5
 17699                           fsr1h	equ	0xFE2
 17700                           fsr1l	equ	0xFE1
 17701                           indf2	equ	0xFDF
 17702                           postinc2	equ	0xFDE
 17703                           postdec2	equ	0xFDD
 17704                           fsr2h	equ	0xFDA
 17705                           fsr2l	equ	0xFD9
 17706                           status	equ	0xFD8
 17707                           
 17708 ;; *************** function _OSCILLATOR_Initialize *****************
 17709 ;; Defined at:
 17710 ;;		line 64 in file "mcc_generated_files/mcc.c"
 17711 ;; Parameters:    Size  Location     Type
 17712 ;;		None
 17713 ;; Auto vars:     Size  Location     Type
 17714 ;;		None
 17715 ;; Return value:  Size  Location     Type
 17716 ;;                  1    wreg      void 
 17717 ;; Registers used:
 17718 ;;		wreg, status,2
 17719 ;; Tracked objects:
 17720 ;;		On entry : 0/0
 17721 ;;		On exit  : 0/0
 17722 ;;		Unchanged: 0/0
 17723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17728 ;;Total ram usage:        0 bytes
 17729 ;; Hardware stack levels used:    1
 17730 ;; Hardware stack levels required when called:   14
 17731 ;; This function calls:
 17732 ;;		Nothing
 17733 ;; This function is called by:
 17734 ;;		_SYSTEM_Initialize
 17735 ;; This function uses a non-reentrant model
 17736 ;;
 17737                           
 17738                           	psect	text54
 17739  016668                     __ptext54:
 17740                           	opt stack 0
 17741  016668                     _OSCILLATOR_Initialize:
 17742                           	opt stack 15
 17743                           
 17744                           ;mcc.c: 67: OSCCON1 = 0x20;
 17745                           
 17746                           ; BSR set to: 14
 17747                           ;incstack = 0
 17748  016668  0E20               	movlw	32
 17749  01666A  010E               	movlb	14	; () banked
 17750  01666C  6F43               	movwf	67,b	;volatile
 17751                           
 17752                           ;mcc.c: 69: OSCCON3 = 0x00;
 17753  01666E  0E00               	movlw	0
 17754  016670  6F45               	movwf	69,b	;volatile
 17755                           
 17756                           ;mcc.c: 71: OSCEN = 0x00;
 17757  016672  0E00               	movlw	0
 17758  016674  6F47               	movwf	71,b	;volatile
 17759                           
 17760                           ;mcc.c: 73: OSCFRQ = 0x02;
 17761  016676  0E02               	movlw	2
 17762  016678  6F49               	movwf	73,b	;volatile
 17763                           
 17764                           ;mcc.c: 75: OSCTUNE = 0x00;
 17765  01667A  0E00               	movlw	0
 17766  01667C  6F48               	movwf	72,b	;volatile
 17767  01667E                     
 17768                           ; BSR set to: 14
 17769                           
 17770                           ; BSR set to: 14
 17771                           ;mcc.c: 78: {
 17772  01667E  B146               	btfsc	70,0,b	;volatile
 17773  016680  0012               	return	
 17774  016682  D7FD               	goto	l55
 17775  016684                     __end_of_OSCILLATOR_Initialize:
 17776                           	opt stack 0
 17777                           tblptru	equ	0xFF8
 17778                           tblptrh	equ	0xFF7
 17779                           tblptrl	equ	0xFF6
 17780                           tablat	equ	0xFF5
 17781                           prodh	equ	0xFF4
 17782                           prodl	equ	0xFF3
 17783                           intcon	equ	0xFF2
 17784                           indf0	equ	0xFEF
 17785                           postinc0	equ	0xFEE
 17786                           fsr0h	equ	0xFEA
 17787                           fsr0l	equ	0xFE9
 17788                           wreg	equ	0xFE8
 17789                           indf1	equ	0xFE7
 17790                           postdec1	equ	0xFE5
 17791                           fsr1h	equ	0xFE2
 17792                           fsr1l	equ	0xFE1
 17793                           indf2	equ	0xFDF
 17794                           postinc2	equ	0xFDE
 17795                           postdec2	equ	0xFDD
 17796                           fsr2h	equ	0xFDA
 17797                           fsr2l	equ	0xFD9
 17798                           status	equ	0xFD8
 17799                           
 17800 ;; *************** function _INTERRUPT_Initialize *****************
 17801 ;; Defined at:
 17802 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17803 ;; Parameters:    Size  Location     Type
 17804 ;;		None
 17805 ;; Auto vars:     Size  Location     Type
 17806 ;;		None
 17807 ;; Return value:  Size  Location     Type
 17808 ;;                  1    wreg      void 
 17809 ;; Registers used:
 17810 ;;		None
 17811 ;; Tracked objects:
 17812 ;;		On entry : 0/0
 17813 ;;		On exit  : 0/0
 17814 ;;		Unchanged: 0/0
 17815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17820 ;;Total ram usage:        0 bytes
 17821 ;; Hardware stack levels used:    1
 17822 ;; Hardware stack levels required when called:   14
 17823 ;; This function calls:
 17824 ;;		Nothing
 17825 ;; This function is called by:
 17826 ;;		_SYSTEM_Initialize
 17827 ;; This function uses a non-reentrant model
 17828 ;;
 17829                           
 17830                           	psect	text55
 17831  0166E0                     __ptext55:
 17832                           	opt stack 0
 17833  0166E0                     _INTERRUPT_Initialize:
 17834                           	opt stack 15
 17835                           
 17836                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 17837                           
 17838                           ; BSR set to: 14
 17839                           ;incstack = 0
 17840  0166E0  8AF2               	bsf	intcon,5,c	;volatile
 17841                           
 17842                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 17843  0166E2  010E               	movlb	14	; () banked
 17844  0166E4  8F22               	bsf	34,7,b	;volatile
 17845                           
 17846                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 17847  0166E6  8924               	bsf	36,4,b	;volatile
 17848                           
 17849                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 1;
 17850  0166E8  8120               	bsf	32,0,b	;volatile
 17851                           
 17852                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 17853  0166EA  9B24               	bcf	36,5,b	;volatile
 17854                           
 17855                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 17856  0166EC  9D22               	bcf	34,6,b	;volatile
 17857                           
 17858                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 17859  0166EE  9D24               	bcf	36,6,b	;volatile
 17860                           
 17861                           ; BSR set to: 14
 17862  0166F0  0012               	return		;funcret
 17863  0166F2                     __end_of_INTERRUPT_Initialize:
 17864                           	opt stack 0
 17865                           tblptru	equ	0xFF8
 17866                           tblptrh	equ	0xFF7
 17867                           tblptrl	equ	0xFF6
 17868                           tablat	equ	0xFF5
 17869                           prodh	equ	0xFF4
 17870                           prodl	equ	0xFF3
 17871                           intcon	equ	0xFF2
 17872                           indf0	equ	0xFEF
 17873                           postinc0	equ	0xFEE
 17874                           fsr0h	equ	0xFEA
 17875                           fsr0l	equ	0xFE9
 17876                           wreg	equ	0xFE8
 17877                           indf1	equ	0xFE7
 17878                           postdec1	equ	0xFE5
 17879                           fsr1h	equ	0xFE2
 17880                           fsr1l	equ	0xFE1
 17881                           indf2	equ	0xFDF
 17882                           postinc2	equ	0xFDE
 17883                           postdec2	equ	0xFDD
 17884                           fsr2h	equ	0xFDA
 17885                           fsr2l	equ	0xFD9
 17886                           status	equ	0xFD8
 17887                           
 17888 ;; *************** function _FVR_Initialize *****************
 17889 ;; Defined at:
 17890 ;;		line 58 in file "mcc_generated_files/fvr.c"
 17891 ;; Parameters:    Size  Location     Type
 17892 ;;		None
 17893 ;; Auto vars:     Size  Location     Type
 17894 ;;		None
 17895 ;; Return value:  Size  Location     Type
 17896 ;;                  1    wreg      void 
 17897 ;; Registers used:
 17898 ;;		wreg, status,2
 17899 ;; Tracked objects:
 17900 ;;		On entry : 0/0
 17901 ;;		On exit  : 0/0
 17902 ;;		Unchanged: 0/0
 17903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17908 ;;Total ram usage:        0 bytes
 17909 ;; Hardware stack levels used:    1
 17910 ;; Hardware stack levels required when called:   14
 17911 ;; This function calls:
 17912 ;;		Nothing
 17913 ;; This function is called by:
 17914 ;;		_SYSTEM_Initialize
 17915 ;; This function uses a non-reentrant model
 17916 ;;
 17917                           
 17918                           	psect	text56
 17919  0167B6                     __ptext56:
 17920                           	opt stack 0
 17921  0167B6                     _FVR_Initialize:
 17922                           	opt stack 15
 17923                           
 17924                           ;fvr.c: 61: FVRCON = 0xA6;
 17925                           
 17926                           ; BSR set to: 14
 17927                           ;incstack = 0
 17928  0167B6  0EA6               	movlw	166
 17929  0167B8  010E               	movlb	14	; () banked
 17930  0167BA  6FC4               	movwf	196,b	;volatile
 17931                           
 17932                           ; BSR set to: 14
 17933  0167BC  0012               	return		;funcret
 17934  0167BE                     __end_of_FVR_Initialize:
 17935                           	opt stack 0
 17936                           tblptru	equ	0xFF8
 17937                           tblptrh	equ	0xFF7
 17938                           tblptrl	equ	0xFF6
 17939                           tablat	equ	0xFF5
 17940                           prodh	equ	0xFF4
 17941                           prodl	equ	0xFF3
 17942                           intcon	equ	0xFF2
 17943                           indf0	equ	0xFEF
 17944                           postinc0	equ	0xFEE
 17945                           fsr0h	equ	0xFEA
 17946                           fsr0l	equ	0xFE9
 17947                           wreg	equ	0xFE8
 17948                           indf1	equ	0xFE7
 17949                           postdec1	equ	0xFE5
 17950                           fsr1h	equ	0xFE2
 17951                           fsr1l	equ	0xFE1
 17952                           indf2	equ	0xFDF
 17953                           postinc2	equ	0xFDE
 17954                           postdec2	equ	0xFDD
 17955                           fsr2h	equ	0xFDA
 17956                           fsr2l	equ	0xFD9
 17957                           status	equ	0xFD8
 17958                           
 17959 ;; *************** function _EUSART2_Initialize *****************
 17960 ;; Defined at:
 17961 ;;		line 77 in file "mcc_generated_files/eusart2.c"
 17962 ;; Parameters:    Size  Location     Type
 17963 ;;		None
 17964 ;; Auto vars:     Size  Location     Type
 17965 ;;		None
 17966 ;; Return value:  Size  Location     Type
 17967 ;;                  1    wreg      void 
 17968 ;; Registers used:
 17969 ;;		wreg, status,2, status,0, cstack
 17970 ;; Tracked objects:
 17971 ;;		On entry : 0/0
 17972 ;;		On exit  : 0/0
 17973 ;;		Unchanged: 0/0
 17974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17979 ;;Total ram usage:        0 bytes
 17980 ;; Hardware stack levels used:    1
 17981 ;; Hardware stack levels required when called:   15
 17982 ;; This function calls:
 17983 ;;		_EUSART2_SetRxInterruptHandler
 17984 ;;		_EUSART2_SetTxInterruptHandler
 17985 ;; This function is called by:
 17986 ;;		_SYSTEM_Initialize
 17987 ;; This function uses a non-reentrant model
 17988 ;;
 17989                           
 17990                           	psect	text57
 17991  015C28                     __ptext57:
 17992                           	opt stack 0
 17993  015C28                     _EUSART2_Initialize:
 17994                           	opt stack 14
 17995                           
 17996                           ;eusart2.c: 80: PIE3bits.RC2IE = 0;
 17997                           
 17998                           ; BSR set to: 14
 17999                           ;incstack = 0
 18000  015C28  010E               	movlb	14	; () banked
 18001  015C2A  9F2C               	bcf	44,7,b	;volatile
 18002                           
 18003                           ; BSR set to: 14
 18004                           ;eusart2.c: 81: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 18005  015C2C  0EEC               	movlw	low _EUSART2_Receive_ISR
 18006  015C2E  0101               	movlb	1	; () banked
 18007  015C30  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 18008  015C32  0E52               	movlw	high _EUSART2_Receive_ISR
 18009  015C34  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 18010  015C36  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 18011  015C38  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 18012  015C3A  ECBB  F0B3         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 18013                           
 18014                           ;eusart2.c: 82: PIE3bits.TX2IE = 0;
 18015  015C3E  010E               	movlb	14	; () banked
 18016  015C40  9D2C               	bcf	44,6,b	;volatile
 18017                           
 18018                           ;eusart2.c: 83: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 18019  015C42  0E90               	movlw	low _EUSART2_Transmit_ISR
 18020  015C44  0101               	movlb	1	; () banked
 18021  015C46  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 18022  015C48  0E63               	movlw	high _EUSART2_Transmit_ISR
 18023  015C4A  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 18024  015C4C  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 18025  015C4E  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 18026  015C50  ECB4  F0B3         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 18027                           
 18028                           ;eusart2.c: 87: BAUD2CON = 0x08;
 18029  015C54  0E08               	movlw	8
 18030  015C56  010E               	movlb	14	; () banked
 18031  015C58  6FF7               	movwf	247,b	;volatile
 18032                           
 18033                           ; BSR set to: 14
 18034                           ;eusart2.c: 90: RC2STA = 0x90;
 18035  015C5A  0E90               	movlw	144
 18036  015C5C  6FF5               	movwf	245,b	;volatile
 18037                           
 18038                           ; BSR set to: 14
 18039                           ;eusart2.c: 93: TX2STA = 0x24;
 18040  015C5E  0E24               	movlw	36
 18041  015C60  6FF6               	movwf	246,b	;volatile
 18042                           
 18043                           ; BSR set to: 14
 18044                           ;eusart2.c: 96: SP2BRGL = 0x8A;
 18045  015C62  0E8A               	movlw	138
 18046  015C64  6FF3               	movwf	243,b	;volatile
 18047                           
 18048                           ; BSR set to: 14
 18049                           ;eusart2.c: 99: SP2BRGH = 0x00;
 18050  015C66  0E00               	movlw	0
 18051  015C68  6FF4               	movwf	244,b	;volatile
 18052                           
 18053                           ; BSR set to: 14
 18054                           ;eusart2.c: 103: eusart2TxHead = 0;
 18055  015C6A  0E00               	movlw	0
 18056  015C6C  0101               	movlb	1	; () banked
 18057  015C6E  6FDE               	movwf	_eusart2TxHead& (0+255),b	;volatile
 18058                           
 18059                           ; BSR set to: 1
 18060                           ;eusart2.c: 104: eusart2TxTail = 0;
 18061  015C70  0E00               	movlw	0
 18062  015C72  6FDD               	movwf	_eusart2TxTail& (0+255),b	;volatile
 18063                           
 18064                           ; BSR set to: 1
 18065                           ;eusart2.c: 105: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 18066  015C74  0E80               	movlw	128
 18067  015C76  6FDC               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 18068                           
 18069                           ; BSR set to: 1
 18070                           ;eusart2.c: 107: eusart2RxHead = 0;
 18071  015C78  0E00               	movlw	0
 18072  015C7A  0100               	movlb	0	; () banked
 18073  015C7C  6FEB               	movwf	_eusart2RxHead& (0+255),b	;volatile
 18074                           
 18075                           ; BSR set to: 0
 18076                           ;eusart2.c: 108: eusart2RxTail = 0;
 18077  015C7E  0E00               	movlw	0
 18078  015C80  0101               	movlb	1	; () banked
 18079  015C82  6FDB               	movwf	_eusart2RxTail& (0+255),b	;volatile
 18080                           
 18081                           ; BSR set to: 1
 18082                           ;eusart2.c: 109: eusart2RxCount = 0;
 18083  015C84  0E00               	movlw	0
 18084  015C86  6FDA               	movwf	_eusart2RxCount& (0+255),b	;volatile
 18085                           
 18086                           ; BSR set to: 1
 18087                           ;eusart2.c: 112: PIE3bits.RC2IE = 1;
 18088  015C88  010E               	movlb	14	; () banked
 18089  015C8A  8F2C               	bsf	44,7,b	;volatile
 18090                           
 18091                           ; BSR set to: 14
 18092  015C8C  0012               	return		;funcret
 18093  015C8E                     __end_of_EUSART2_Initialize:
 18094                           	opt stack 0
 18095                           tblptru	equ	0xFF8
 18096                           tblptrh	equ	0xFF7
 18097                           tblptrl	equ	0xFF6
 18098                           tablat	equ	0xFF5
 18099                           prodh	equ	0xFF4
 18100                           prodl	equ	0xFF3
 18101                           intcon	equ	0xFF2
 18102                           indf0	equ	0xFEF
 18103                           postinc0	equ	0xFEE
 18104                           fsr0h	equ	0xFEA
 18105                           fsr0l	equ	0xFE9
 18106                           wreg	equ	0xFE8
 18107                           indf1	equ	0xFE7
 18108                           postdec1	equ	0xFE5
 18109                           fsr1h	equ	0xFE2
 18110                           fsr1l	equ	0xFE1
 18111                           indf2	equ	0xFDF
 18112                           postinc2	equ	0xFDE
 18113                           postdec2	equ	0xFDD
 18114                           fsr2h	equ	0xFDA
 18115                           fsr2l	equ	0xFD9
 18116                           status	equ	0xFD8
 18117                           
 18118 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 18119 ;; Defined at:
 18120 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 18121 ;; Parameters:    Size  Location     Type
 18122 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 18123 ;;		 -> EUSART2_Transmit_ISR(1), 
 18124 ;; Auto vars:     Size  Location     Type
 18125 ;;		None
 18126 ;; Return value:  Size  Location     Type
 18127 ;;                  1    wreg      void 
 18128 ;; Registers used:
 18129 ;;		wreg, status,2, status,0
 18130 ;; Tracked objects:
 18131 ;;		On entry : 0/0
 18132 ;;		On exit  : 0/0
 18133 ;;		Unchanged: 0/0
 18134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18135 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18138 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18139 ;;Total ram usage:        3 bytes
 18140 ;; Hardware stack levels used:    1
 18141 ;; Hardware stack levels required when called:   14
 18142 ;; This function calls:
 18143 ;;		Nothing
 18144 ;; This function is called by:
 18145 ;;		_EUSART2_Initialize
 18146 ;; This function uses a non-reentrant model
 18147 ;;
 18148                           
 18149                           	psect	text58
 18150  016768                     __ptext58:
 18151                           	opt stack 0
 18152  016768                     _EUSART2_SetTxInterruptHandler:
 18153                           	opt stack 14
 18154                           
 18155                           ;eusart2.c: 265: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 18156                           
 18157                           ; BSR set to: 14
 18158                           ;incstack = 0
 18159  016768  C117  F1D3         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 18160  01676C  C118  F1D4         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 18161  016770  C119  F1D5         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 18162  016774  0012               	return		;funcret
 18163  016776                     __end_of_EUSART2_SetTxInterruptHandler:
 18164                           	opt stack 0
 18165                           tblptru	equ	0xFF8
 18166                           tblptrh	equ	0xFF7
 18167                           tblptrl	equ	0xFF6
 18168                           tablat	equ	0xFF5
 18169                           prodh	equ	0xFF4
 18170                           prodl	equ	0xFF3
 18171                           intcon	equ	0xFF2
 18172                           indf0	equ	0xFEF
 18173                           postinc0	equ	0xFEE
 18174                           fsr0h	equ	0xFEA
 18175                           fsr0l	equ	0xFE9
 18176                           wreg	equ	0xFE8
 18177                           indf1	equ	0xFE7
 18178                           postdec1	equ	0xFE5
 18179                           fsr1h	equ	0xFE2
 18180                           fsr1l	equ	0xFE1
 18181                           indf2	equ	0xFDF
 18182                           postinc2	equ	0xFDE
 18183                           postdec2	equ	0xFDD
 18184                           fsr2h	equ	0xFDA
 18185                           fsr2l	equ	0xFD9
 18186                           status	equ	0xFD8
 18187                           
 18188 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 18189 ;; Defined at:
 18190 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 18191 ;; Parameters:    Size  Location     Type
 18192 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 18193 ;;		 -> EUSART2_Receive_ISR(1), 
 18194 ;; Auto vars:     Size  Location     Type
 18195 ;;		None
 18196 ;; Return value:  Size  Location     Type
 18197 ;;                  1    wreg      void 
 18198 ;; Registers used:
 18199 ;;		wreg, status,2, status,0
 18200 ;; Tracked objects:
 18201 ;;		On entry : 0/0
 18202 ;;		On exit  : 0/0
 18203 ;;		Unchanged: 0/0
 18204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18205 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18208 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18209 ;;Total ram usage:        3 bytes
 18210 ;; Hardware stack levels used:    1
 18211 ;; Hardware stack levels required when called:   14
 18212 ;; This function calls:
 18213 ;;		Nothing
 18214 ;; This function is called by:
 18215 ;;		_EUSART2_Initialize
 18216 ;; This function uses a non-reentrant model
 18217 ;;
 18218                           
 18219                           	psect	text59
 18220  016776                     __ptext59:
 18221                           	opt stack 0
 18222  016776                     _EUSART2_SetRxInterruptHandler:
 18223                           	opt stack 14
 18224                           
 18225                           ;eusart2.c: 269: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 18226                           
 18227                           ;incstack = 0
 18228  016776  C117  F0E3         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 18229  01677A  C118  F0E4         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 18230  01677E  C119  F0E5         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 18231  016782  0012               	return		;funcret
 18232  016784                     __end_of_EUSART2_SetRxInterruptHandler:
 18233                           	opt stack 0
 18234                           tblptru	equ	0xFF8
 18235                           tblptrh	equ	0xFF7
 18236                           tblptrl	equ	0xFF6
 18237                           tablat	equ	0xFF5
 18238                           prodh	equ	0xFF4
 18239                           prodl	equ	0xFF3
 18240                           intcon	equ	0xFF2
 18241                           indf0	equ	0xFEF
 18242                           postinc0	equ	0xFEE
 18243                           fsr0h	equ	0xFEA
 18244                           fsr0l	equ	0xFE9
 18245                           wreg	equ	0xFE8
 18246                           indf1	equ	0xFE7
 18247                           postdec1	equ	0xFE5
 18248                           fsr1h	equ	0xFE2
 18249                           fsr1l	equ	0xFE1
 18250                           indf2	equ	0xFDF
 18251                           postinc2	equ	0xFDE
 18252                           postdec2	equ	0xFDD
 18253                           fsr2h	equ	0xFDA
 18254                           fsr2l	equ	0xFD9
 18255                           status	equ	0xFD8
 18256                           
 18257 ;; *************** function _ADCC_Initialize *****************
 18258 ;; Defined at:
 18259 ;;		line 63 in file "mcc_generated_files/adcc.c"
 18260 ;; Parameters:    Size  Location     Type
 18261 ;;		None
 18262 ;; Auto vars:     Size  Location     Type
 18263 ;;		None
 18264 ;; Return value:  Size  Location     Type
 18265 ;;                  1    wreg      void 
 18266 ;; Registers used:
 18267 ;;		wreg, status,2, status,0, cstack
 18268 ;; Tracked objects:
 18269 ;;		On entry : 0/0
 18270 ;;		On exit  : 0/0
 18271 ;;		Unchanged: 0/0
 18272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18277 ;;Total ram usage:        0 bytes
 18278 ;; Hardware stack levels used:    1
 18279 ;; Hardware stack levels required when called:   15
 18280 ;; This function calls:
 18281 ;;		_ADCC_SetADIInterruptHandler
 18282 ;; This function is called by:
 18283 ;;		_SYSTEM_Initialize
 18284 ;; This function uses a non-reentrant model
 18285 ;;
 18286                           
 18287                           	psect	text60
 18288  015CF4                     __ptext60:
 18289                           	opt stack 0
 18290  015CF4                     _ADCC_Initialize:
 18291                           	opt stack 14
 18292                           
 18293                           ;adcc.c: 67: ADLTHL = 0x00;
 18294                           
 18295                           ;incstack = 0
 18296  015CF4  0E00               	movlw	0
 18297  015CF6  6E6A               	movwf	3946,c	;volatile
 18298                           
 18299                           ;adcc.c: 69: ADLTHH = 0x00;
 18300  015CF8  0E00               	movlw	0
 18301  015CFA  6E6B               	movwf	3947,c	;volatile
 18302                           
 18303                           ;adcc.c: 71: ADUTHL = 0x00;
 18304  015CFC  0E00               	movlw	0
 18305  015CFE  6E6C               	movwf	3948,c	;volatile
 18306                           
 18307                           ;adcc.c: 73: ADUTHH = 0x00;
 18308  015D00  0E00               	movlw	0
 18309  015D02  6E6D               	movwf	3949,c	;volatile
 18310                           
 18311                           ;adcc.c: 75: ADSTPTL = 0x00;
 18312  015D04  0E00               	movlw	0
 18313  015D06  6E68               	movwf	3944,c	;volatile
 18314                           
 18315                           ;adcc.c: 77: ADSTPTH = 0x00;
 18316  015D08  0E00               	movlw	0
 18317  015D0A  6E69               	movwf	3945,c	;volatile
 18318                           
 18319                           ;adcc.c: 79: ADRPT = 0x00;
 18320  015D0C  0E00               	movlw	0
 18321  015D0E  6E66               	movwf	3942,c	;volatile
 18322                           
 18323                           ;adcc.c: 81: ADPCH = 0x00;
 18324  015D10  0E00               	movlw	0
 18325  015D12  010F               	movlb	15	; () banked
 18326  015D14  6F5F               	movwf	95,b	;volatile
 18327                           
 18328                           ;adcc.c: 83: ADCAP = 0x00;
 18329  015D16  0E00               	movlw	0
 18330  015D18  6F5D               	movwf	93,b	;volatile
 18331                           
 18332                           ;adcc.c: 85: ADCON1 = 0x00;
 18333  015D1A  0E00               	movlw	0
 18334  015D1C  6F59               	movwf	89,b	;volatile
 18335                           
 18336                           ;adcc.c: 87: ADCON2 = 0x04;
 18337  015D1E  0E04               	movlw	4
 18338  015D20  6F5A               	movwf	90,b	;volatile
 18339                           
 18340                           ;adcc.c: 89: ADCON3 = 0x00;
 18341  015D22  0E00               	movlw	0
 18342  015D24  6F5B               	movwf	91,b	;volatile
 18343                           
 18344                           ;adcc.c: 91: ADSTAT = 0x00;
 18345  015D26  0E00               	movlw	0
 18346  015D28  6E65               	movwf	3941,c	;volatile
 18347                           
 18348                           ;adcc.c: 93: ADREF = 0x12;
 18349  015D2A  0E12               	movlw	18
 18350  015D2C  6F58               	movwf	88,b	;volatile
 18351                           
 18352                           ;adcc.c: 95: ADACT = 0x00;
 18353  015D2E  0E00               	movlw	0
 18354  015D30  6F56               	movwf	86,b	;volatile
 18355                           
 18356                           ;adcc.c: 97: ADCLK = 0x00;
 18357  015D32  0E00               	movlw	0
 18358  015D34  6F57               	movwf	87,b	;volatile
 18359                           
 18360                           ;adcc.c: 99: ADCON0 = 0x94;
 18361  015D36  0E94               	movlw	148
 18362  015D38  6E60               	movwf	3936,c	;volatile
 18363                           
 18364                           ;adcc.c: 101: ADACQ = 0x00;
 18365  015D3A  0E00               	movlw	0
 18366  015D3C  6F5C               	movwf	92,b	;volatile
 18367                           
 18368                           ; BSR set to: 15
 18369                           ;adcc.c: 104: PIR1bits.ADIF = 0;
 18370  015D3E  010E               	movlb	14	; () banked
 18371  015D40  9134               	bcf	52,0,b	;volatile
 18372                           
 18373                           ; BSR set to: 14
 18374                           ;adcc.c: 106: PIE1bits.ADIE = 1;
 18375  015D42  812A               	bsf	42,0,b	;volatile
 18376                           
 18377                           ; BSR set to: 14
 18378                           ;adcc.c: 108: ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptHandler);
 18379  015D44  0EC4               	movlw	low _ADCC_DefaultInterruptHandler
 18380  015D46  0101               	movlb	1	; () banked
 18381  015D48  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 18382  015D4A  0E67               	movlw	high _ADCC_DefaultInterruptHandler
 18383  015D4C  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 18384  015D4E  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 18385  015D50  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 18386  015D52  ECC2  F0B3         	call	_ADCC_SetADIInterruptHandler	;wreg free
 18387  015D56  0012               	return		;funcret
 18388  015D58                     __end_of_ADCC_Initialize:
 18389                           	opt stack 0
 18390                           tblptru	equ	0xFF8
 18391                           tblptrh	equ	0xFF7
 18392                           tblptrl	equ	0xFF6
 18393                           tablat	equ	0xFF5
 18394                           prodh	equ	0xFF4
 18395                           prodl	equ	0xFF3
 18396                           intcon	equ	0xFF2
 18397                           indf0	equ	0xFEF
 18398                           postinc0	equ	0xFEE
 18399                           fsr0h	equ	0xFEA
 18400                           fsr0l	equ	0xFE9
 18401                           wreg	equ	0xFE8
 18402                           indf1	equ	0xFE7
 18403                           postdec1	equ	0xFE5
 18404                           fsr1h	equ	0xFE2
 18405                           fsr1l	equ	0xFE1
 18406                           indf2	equ	0xFDF
 18407                           postinc2	equ	0xFDE
 18408                           postdec2	equ	0xFDD
 18409                           fsr2h	equ	0xFDA
 18410                           fsr2l	equ	0xFD9
 18411                           status	equ	0xFD8
 18412                           
 18413 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 18414 ;; Defined at:
 18415 ;;		line 306 in file "mcc_generated_files/adcc.c"
 18416 ;; Parameters:    Size  Location     Type
 18417 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 18418 ;;		 -> ADC_postProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 18419 ;; Auto vars:     Size  Location     Type
 18420 ;;		None
 18421 ;; Return value:  Size  Location     Type
 18422 ;;                  1    wreg      void 
 18423 ;; Registers used:
 18424 ;;		wreg, status,2, status,0
 18425 ;; Tracked objects:
 18426 ;;		On entry : 0/0
 18427 ;;		On exit  : 0/0
 18428 ;;		Unchanged: 0/0
 18429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18430 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18433 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18434 ;;Total ram usage:        3 bytes
 18435 ;; Hardware stack levels used:    1
 18436 ;; Hardware stack levels required when called:   14
 18437 ;; This function calls:
 18438 ;;		Nothing
 18439 ;; This function is called by:
 18440 ;;		_ADCC_Initialize
 18441 ;;		_main
 18442 ;; This function uses a non-reentrant model
 18443 ;;
 18444                           
 18445                           	psect	text61
 18446  016784                     __ptext61:
 18447                           	opt stack 0
 18448  016784                     _ADCC_SetADIInterruptHandler:
 18449                           	opt stack 14
 18450                           
 18451                           ;adcc.c: 307: ADCC_ADI_InterruptHandler = InterruptHandler;
 18452                           
 18453                           ;incstack = 0
 18454  016784  C117  F0E0         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 18455  016788  C118  F0E1         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 18456  01678C  C119  F0E2         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 18457  016790  0012               	return		;funcret
 18458  016792                     __end_of_ADCC_SetADIInterruptHandler:
 18459                           	opt stack 0
 18460                           tblptru	equ	0xFF8
 18461                           tblptrh	equ	0xFF7
 18462                           tblptrl	equ	0xFF6
 18463                           tablat	equ	0xFF5
 18464                           prodh	equ	0xFF4
 18465                           prodl	equ	0xFF3
 18466                           intcon	equ	0xFF2
 18467                           indf0	equ	0xFEF
 18468                           postinc0	equ	0xFEE
 18469                           fsr0h	equ	0xFEA
 18470                           fsr0l	equ	0xFE9
 18471                           wreg	equ	0xFE8
 18472                           indf1	equ	0xFE7
 18473                           postdec1	equ	0xFE5
 18474                           fsr1h	equ	0xFE2
 18475                           fsr1l	equ	0xFE1
 18476                           indf2	equ	0xFDF
 18477                           postinc2	equ	0xFDE
 18478                           postdec2	equ	0xFDD
 18479                           fsr2h	equ	0xFDA
 18480                           fsr2l	equ	0xFD9
 18481                           status	equ	0xFD8
 18482                           
 18483 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 18484 ;; Defined at:
 18485 ;;		line 101 in file "mcc_generated_files/interrupt_manager.c"
 18486 ;; Parameters:    Size  Location     Type
 18487 ;;		None
 18488 ;; Auto vars:     Size  Location     Type
 18489 ;;		None
 18490 ;; Return value:  Size  Location     Type
 18491 ;;                  1    wreg      void 
 18492 ;; Registers used:
 18493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 18494 ;; Tracked objects:
 18495 ;;		On entry : 0/0
 18496 ;;		On exit  : 0/0
 18497 ;;		Unchanged: 0/0
 18498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18501 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18502 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18503 ;;Total ram usage:       21 bytes
 18504 ;; Hardware stack levels used:    1
 18505 ;; Hardware stack levels required when called:   13
 18506 ;; This function calls:
 18507 ;;		Absolute function
 18508 ;;		_EUSART2_Transmit_ISR
 18509 ;;		_TMR6_ISR
 18510 ;;		_TMR7_ISR
 18511 ;; This function is called by:
 18512 ;;		Interrupt level 1
 18513 ;; This function uses a non-reentrant model
 18514 ;;
 18515                           
 18516                           	psect	intcodelo
 18517  000018                     __pintcodelo:
 18518                           	opt stack 0
 18519  000018                     _INTERRUPT_InterruptManagerLow:
 18520                           	opt stack 9
 18521                           
 18522                           ;incstack = 0
 18523  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 18524  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 18525  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 18526  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 18527  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 18528  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 18529  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 18530  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 18531  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 18532  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 18533  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 18534  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 18535  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 18536  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 18537  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 18538  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 18539  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 18540  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 18541  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 18542  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 18543  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 18544  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 18545                           
 18546                           ;interrupt_manager.c: 104: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 18547  00006E  010E               	movlb	14	; () banked
 18548  000070  BB2E               	btfsc	46,5,b	;volatile
 18549                           
 18550                           ; BSR set to: 14
 18551  000072  AB38               	btfss	56,5,b	;volatile
 18552  000074  D003               	goto	i1l213
 18553                           
 18554                           ; BSR set to: 14
 18555                           ;interrupt_manager.c: 105: {
 18556                           ;interrupt_manager.c: 106: TMR6_ISR();
 18557  000076  EC71  F0B2         	call	_TMR6_ISR	;wreg free
 18558                           
 18559                           ;interrupt_manager.c: 107: }
 18560  00007A  D015               	goto	i1l217
 18561  00007C                     i1l213:
 18562                           
 18563                           ; BSR set to: 14
 18564                           ;interrupt_manager.c: 108: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 18565  00007C  BD2C               	btfsc	44,6,b	;volatile
 18566                           
 18567                           ; BSR set to: 14
 18568  00007E  AD36               	btfss	54,6,b	;volatile
 18569  000080  D00D               	goto	i1l215
 18570                           
 18571                           ; BSR set to: 14
 18572                           ;interrupt_manager.c: 109: {
 18573                           ;interrupt_manager.c: 110: EUSART2_TxDefaultInterruptHandler();
 18574  000082  D801               	call	i1u1688_28
 18575  000084  D010               	goto	i1l217
 18576  000086                     i1u1688_28:
 18577  000086  0005               	push	
 18578  000088  6EFA               	movwf	pclath,c
 18579  00008A  0101               	movlb	1	; () banked
 18580  00008C  51D3               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 18581  00008E  6EFD               	movwf	tosl,c
 18582  000090  51D4               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 18583  000092  6EFE               	movwf	tosh,c
 18584  000094  51D5               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 18585  000096  6EFF               	movwf	tosu,c
 18586  000098  50FA               	movf	pclath,w,c
 18587  00009A  0012               	return		;indir
 18588  00009C                     i1l215:
 18589                           
 18590                           ; BSR set to: 14
 18591                           ;interrupt_manager.c: 112: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 18592  00009C  BD2E               	btfsc	46,6,b	;volatile
 18593                           
 18594                           ; BSR set to: 14
 18595  00009E  AD38               	btfss	56,6,b	;volatile
 18596  0000A0  D002               	goto	i1l217
 18597                           
 18598                           ; BSR set to: 14
 18599                           ;interrupt_manager.c: 113: {
 18600                           ;interrupt_manager.c: 114: TMR7_ISR();
 18601  0000A2  ECE3  F0B1         	call	_TMR7_ISR	;wreg free
 18602  0000A6                     i1l217:
 18603                           
 18604                           ;interrupt_manager.c: 116: else
 18605                           ;interrupt_manager.c: 117: {
 18606  0000A6  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 18607  0000AA  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 18608  0000AE  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 18609  0000B2  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 18610  0000B6  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 18611  0000BA  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 18612  0000BE  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 18613  0000C2  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 18614  0000C6  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 18615  0000CA  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 18616  0000CE  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 18617  0000D2  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 18618  0000D6  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 18619  0000DA  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 18620  0000DE  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 18621  0000E2  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 18622  0000E6  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 18623  0000EA  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 18624  0000EE  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 18625  0000F2  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 18626  0000F6  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 18627  0000FA  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 18628  0000FC  0010               	retfie	
 18629  0000FE                     __end_of_INTERRUPT_InterruptManagerLow:
 18630                           	opt stack 0
 18631                           tosu	equ	0xFFF
 18632                           tosh	equ	0xFFE
 18633                           tosl	equ	0xFFD
 18634                           pclatu	equ	0xFFB
 18635                           pclath	equ	0xFFA
 18636                           tblptru	equ	0xFF8
 18637                           tblptrh	equ	0xFF7
 18638                           tblptrl	equ	0xFF6
 18639                           tablat	equ	0xFF5
 18640                           prodh	equ	0xFF4
 18641                           prodl	equ	0xFF3
 18642                           intcon	equ	0xFF2
 18643                           indf0	equ	0xFEF
 18644                           postinc0	equ	0xFEE
 18645                           fsr0h	equ	0xFEA
 18646                           fsr0l	equ	0xFE9
 18647                           wreg	equ	0xFE8
 18648                           indf1	equ	0xFE7
 18649                           postdec1	equ	0xFE5
 18650                           fsr1h	equ	0xFE2
 18651                           fsr1l	equ	0xFE1
 18652                           bsr	equ	0xFE0
 18653                           indf2	equ	0xFDF
 18654                           postinc2	equ	0xFDE
 18655                           postdec2	equ	0xFDD
 18656                           fsr2h	equ	0xFDA
 18657                           fsr2l	equ	0xFD9
 18658                           status	equ	0xFD8
 18659                           
 18660 ;; *************** function _TMR7_ISR *****************
 18661 ;; Defined at:
 18662 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 18663 ;; Parameters:    Size  Location     Type
 18664 ;;		None
 18665 ;; Auto vars:     Size  Location     Type
 18666 ;;		None
 18667 ;; Return value:  Size  Location     Type
 18668 ;;                  1    wreg      void 
 18669 ;; Registers used:
 18670 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18671 ;; Tracked objects:
 18672 ;;		On entry : 0/0
 18673 ;;		On exit  : 0/0
 18674 ;;		Unchanged: 0/0
 18675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18680 ;;Total ram usage:        0 bytes
 18681 ;; Hardware stack levels used:    1
 18682 ;; Hardware stack levels required when called:   12
 18683 ;; This function calls:
 18684 ;;		Absolute function
 18685 ;;		_TMR7_DefaultInterruptHandler
 18686 ;;		_TMR7_WriteTimer
 18687 ;;		_acquisitionTimerCallback
 18688 ;; This function is called by:
 18689 ;;		_INTERRUPT_InterruptManagerLow
 18690 ;; This function uses a non-reentrant model
 18691 ;;
 18692                           
 18693                           	psect	text63
 18694  0163C6                     __ptext63:
 18695                           	opt stack 0
 18696  0163C6                     _TMR7_ISR:
 18697                           	opt stack 9
 18698                           
 18699                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 18700                           
 18701                           ;incstack = 0
 18702  0163C6  010E               	movlb	14	; () banked
 18703  0163C8  9D38               	bcf	56,6,b	;volatile
 18704                           
 18705                           ; BSR set to: 14
 18706                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 18707  0163CA  C1D8  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 18708  0163CE  C1D9  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 18709  0163D2  ECAC  F0B2         	call	_TMR7_WriteTimer	;wreg free
 18710                           
 18711                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 18712  0163D6  0101               	movlb	1	; () banked
 18713  0163D8  51CD               	movf	_TMR7_InterruptHandler& (0+255),w,b
 18714  0163DA  11CE               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 18715  0163DC  11CF               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 18716  0163DE  B4D8               	btfsc	status,2,c
 18717  0163E0  0012               	return	
 18718                           
 18719                           ; BSR set to: 1
 18720                           ;tmr7.c: 172: {
 18721                           ;tmr7.c: 173: TMR7_InterruptHandler();
 18722  0163E2  D801               	call	i1u1670_28
 18723  0163E4  0012               	return	
 18724  0163E6                     i1u1670_28:
 18725  0163E6  0005               	push	
 18726  0163E8  6EFA               	movwf	pclath,c
 18727  0163EA  51CD               	movf	_TMR7_InterruptHandler& (0+255),w,b
 18728  0163EC  6EFD               	movwf	tosl,c
 18729  0163EE  51CE               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 18730  0163F0  6EFE               	movwf	tosh,c
 18731  0163F2  51CF               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 18732  0163F4  6EFF               	movwf	tosu,c
 18733  0163F6  50FA               	movf	pclath,w,c
 18734  0163F8  0012               	return		;indir
 18735  0163FA                     __end_of_TMR7_ISR:
 18736                           	opt stack 0
 18737                           tosu	equ	0xFFF
 18738                           tosh	equ	0xFFE
 18739                           tosl	equ	0xFFD
 18740                           pclatu	equ	0xFFB
 18741                           pclath	equ	0xFFA
 18742                           tblptru	equ	0xFF8
 18743                           tblptrh	equ	0xFF7
 18744                           tblptrl	equ	0xFF6
 18745                           tablat	equ	0xFF5
 18746                           prodh	equ	0xFF4
 18747                           prodl	equ	0xFF3
 18748                           intcon	equ	0xFF2
 18749                           indf0	equ	0xFEF
 18750                           postinc0	equ	0xFEE
 18751                           fsr0h	equ	0xFEA
 18752                           fsr0l	equ	0xFE9
 18753                           wreg	equ	0xFE8
 18754                           indf1	equ	0xFE7
 18755                           postdec1	equ	0xFE5
 18756                           fsr1h	equ	0xFE2
 18757                           fsr1l	equ	0xFE1
 18758                           bsr	equ	0xFE0
 18759                           indf2	equ	0xFDF
 18760                           postinc2	equ	0xFDE
 18761                           postdec2	equ	0xFDD
 18762                           fsr2h	equ	0xFDA
 18763                           fsr2l	equ	0xFD9
 18764                           status	equ	0xFD8
 18765                           
 18766 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 18767 ;; Defined at:
 18768 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 18769 ;; Parameters:    Size  Location     Type
 18770 ;;		None
 18771 ;; Auto vars:     Size  Location     Type
 18772 ;;		None
 18773 ;; Return value:  Size  Location     Type
 18774 ;;                  1    wreg      void 
 18775 ;; Registers used:
 18776 ;;		None
 18777 ;; Tracked objects:
 18778 ;;		On entry : 0/0
 18779 ;;		On exit  : 0/0
 18780 ;;		Unchanged: 0/0
 18781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18786 ;;Total ram usage:        0 bytes
 18787 ;; Hardware stack levels used:    1
 18788 ;; Hardware stack levels required when called:   10
 18789 ;; This function calls:
 18790 ;;		Nothing
 18791 ;; This function is called by:
 18792 ;;		_TMR7_Initialize
 18793 ;;		_TMR7_ISR
 18794 ;; This function uses a non-reentrant model
 18795 ;;
 18796                           
 18797                           	psect	text64
 18798  0167BE                     __ptext64:
 18799                           	opt stack 0
 18800  0167BE                     _TMR7_DefaultInterruptHandler:
 18801                           	opt stack 10
 18802                           
 18803                           ;incstack = 0
 18804  0167BE  0012               	return		;funcret
 18805  0167C0                     __end_of_TMR7_DefaultInterruptHandler:
 18806                           	opt stack 0
 18807                           tosu	equ	0xFFF
 18808                           tosh	equ	0xFFE
 18809                           tosl	equ	0xFFD
 18810                           pclatu	equ	0xFFB
 18811                           pclath	equ	0xFFA
 18812                           tblptru	equ	0xFF8
 18813                           tblptrh	equ	0xFF7
 18814                           tblptrl	equ	0xFF6
 18815                           tablat	equ	0xFF5
 18816                           prodh	equ	0xFF4
 18817                           prodl	equ	0xFF3
 18818                           intcon	equ	0xFF2
 18819                           indf0	equ	0xFEF
 18820                           postinc0	equ	0xFEE
 18821                           fsr0h	equ	0xFEA
 18822                           fsr0l	equ	0xFE9
 18823                           wreg	equ	0xFE8
 18824                           indf1	equ	0xFE7
 18825                           postdec1	equ	0xFE5
 18826                           fsr1h	equ	0xFE2
 18827                           fsr1l	equ	0xFE1
 18828                           bsr	equ	0xFE0
 18829                           indf2	equ	0xFDF
 18830                           postinc2	equ	0xFDE
 18831                           postdec2	equ	0xFDD
 18832                           fsr2h	equ	0xFDA
 18833                           fsr2l	equ	0xFD9
 18834                           status	equ	0xFD8
 18835                           
 18836 ;; *************** function _acquisitionTimerCallback *****************
 18837 ;; Defined at:
 18838 ;;		line 242 in file "main.c"
 18839 ;; Parameters:    Size  Location     Type
 18840 ;;		None
 18841 ;; Auto vars:     Size  Location     Type
 18842 ;;		None
 18843 ;; Return value:  Size  Location     Type
 18844 ;;                  1    wreg      void 
 18845 ;; Registers used:
 18846 ;;		wreg, status,2, cstack
 18847 ;; Tracked objects:
 18848 ;;		On entry : 0/0
 18849 ;;		On exit  : 0/0
 18850 ;;		Unchanged: 0/0
 18851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18856 ;;Total ram usage:        0 bytes
 18857 ;; Hardware stack levels used:    1
 18858 ;; Hardware stack levels required when called:   11
 18859 ;; This function calls:
 18860 ;;		_ADCC_IsConversionDone
 18861 ;;		_ADCC_StartConversion
 18862 ;; This function is called by:
 18863 ;;		_main
 18864 ;;		_TMR7_ISR
 18865 ;; This function uses a non-reentrant model
 18866 ;;
 18867                           
 18868                           	psect	text65
 18869  015D58                     __ptext65:
 18870                           	opt stack 0
 18871  015D58                     _acquisitionTimerCallback:
 18872                           	opt stack 9
 18873                           
 18874                           ;main.c: 245: ADCC_StartConversion(channel_VSS);
 18875                           
 18876                           ;incstack = 0
 18877  015D58  0E3C               	movlw	60
 18878  015D5A  ECC9  F0B3         	call	_ADCC_StartConversion
 18879  015D5E  ECD0  F0B3         	call	_ADCC_IsConversionDone	;wreg free
 18880  015D62  0900               	iorlw	0
 18881  015D64  B4D8               	btfsc	status,2,c
 18882  015D66  D7FB               	goto	i1l901
 18883                           
 18884                           ;main.c: 252: ADCC_StartConversion(channel_FVR_buf1);
 18885  015D68  0E3F               	movlw	63
 18886  015D6A  ECC9  F0B3         	call	_ADCC_StartConversion
 18887  015D6E  ECD0  F0B3         	call	_ADCC_IsConversionDone	;wreg free
 18888  015D72  0900               	iorlw	0
 18889  015D74  B4D8               	btfsc	status,2,c
 18890  015D76  D7FB               	goto	i1l904
 18891                           
 18892                           ;main.c: 258: ADCC_StartConversion(POS3P3_ADC);
 18893  015D78  0E22               	movlw	34
 18894  015D7A  ECC9  F0B3         	call	_ADCC_StartConversion
 18895  015D7E  ECD0  F0B3         	call	_ADCC_IsConversionDone	;wreg free
 18896  015D82  0900               	iorlw	0
 18897  015D84  B4D8               	btfsc	status,2,c
 18898  015D86  D7FB               	goto	i1l907
 18899                           
 18900                           ;main.c: 264: ADCC_StartConversion(ISNS_ADC);
 18901  015D88  0E00               	movlw	0
 18902  015D8A  ECC9  F0B3         	call	_ADCC_StartConversion
 18903  015D8E  ECD0  F0B3         	call	_ADCC_IsConversionDone	;wreg free
 18904  015D92  0900               	iorlw	0
 18905  015D94  B4D8               	btfsc	status,2,c
 18906  015D96  D7FB               	goto	i1l910
 18907                           
 18908                           ;main.c: 270: ADCC_StartConversion(POS12_ADC);
 18909  015D98  0E04               	movlw	4
 18910  015D9A  ECC9  F0B3         	call	_ADCC_StartConversion
 18911  015D9E  ECD0  F0B3         	call	_ADCC_IsConversionDone	;wreg free
 18912  015DA2  0900               	iorlw	0
 18913  015DA4  B4D8               	btfsc	status,2,c
 18914  015DA6  D7FB               	goto	i1l913
 18915                           
 18916                           ;main.c: 276: ADCC_StartConversion(channel_Temp);
 18917  015DA8  0E3D               	movlw	61
 18918  015DAA  ECC9  F0B3         	call	_ADCC_StartConversion
 18919  015DAE  ECD0  F0B3         	call	_ADCC_IsConversionDone	;wreg free
 18920  015DB2  0900               	iorlw	0
 18921  015DB4  A4D8               	btfss	status,2,c
 18922  015DB6  0012               	return	
 18923  015DB8  D7FA               	goto	i1l916
 18924  015DBA                     __end_of_acquisitionTimerCallback:
 18925                           	opt stack 0
 18926                           tosu	equ	0xFFF
 18927                           tosh	equ	0xFFE
 18928                           tosl	equ	0xFFD
 18929                           pclatu	equ	0xFFB
 18930                           pclath	equ	0xFFA
 18931                           tblptru	equ	0xFF8
 18932                           tblptrh	equ	0xFF7
 18933                           tblptrl	equ	0xFF6
 18934                           tablat	equ	0xFF5
 18935                           prodh	equ	0xFF4
 18936                           prodl	equ	0xFF3
 18937                           intcon	equ	0xFF2
 18938                           indf0	equ	0xFEF
 18939                           postinc0	equ	0xFEE
 18940                           fsr0h	equ	0xFEA
 18941                           fsr0l	equ	0xFE9
 18942                           wreg	equ	0xFE8
 18943                           indf1	equ	0xFE7
 18944                           postdec1	equ	0xFE5
 18945                           fsr1h	equ	0xFE2
 18946                           fsr1l	equ	0xFE1
 18947                           bsr	equ	0xFE0
 18948                           indf2	equ	0xFDF
 18949                           postinc2	equ	0xFDE
 18950                           postdec2	equ	0xFDD
 18951                           fsr2h	equ	0xFDA
 18952                           fsr2l	equ	0xFD9
 18953                           status	equ	0xFD8
 18954                           
 18955 ;; *************** function _ADCC_StartConversion *****************
 18956 ;; Defined at:
 18957 ;;		line 112 in file "mcc_generated_files/adcc.c"
 18958 ;; Parameters:    Size  Location     Type
 18959 ;;  channel         1    wreg     enum E17310
 18960 ;; Auto vars:     Size  Location     Type
 18961 ;;  channel         1    0[BANK1 ] enum E17310
 18962 ;; Return value:  Size  Location     Type
 18963 ;;                  1    wreg      void 
 18964 ;; Registers used:
 18965 ;;		wreg
 18966 ;; Tracked objects:
 18967 ;;		On entry : 0/0
 18968 ;;		On exit  : 0/0
 18969 ;;		Unchanged: 0/0
 18970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18972 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18974 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18975 ;;Total ram usage:        1 bytes
 18976 ;; Hardware stack levels used:    1
 18977 ;; Hardware stack levels required when called:   10
 18978 ;; This function calls:
 18979 ;;		Nothing
 18980 ;; This function is called by:
 18981 ;;		_acquisitionTimerCallback
 18982 ;; This function uses a non-reentrant model
 18983 ;;
 18984                           
 18985                           	psect	text66
 18986  016792                     __ptext66:
 18987                           	opt stack 0
 18988  016792                     _ADCC_StartConversion:
 18989                           	opt stack 9
 18990                           
 18991                           ;incstack = 0
 18992                           ;ADCC_StartConversion@channel stored from wreg
 18993  016792  0101               	movlb	1	; () banked
 18994  016794  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 18995                           
 18996                           ;adcc.c: 115: ADPCH = channel;
 18997  016796  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 18998                           
 18999                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 19000  01679A  8E60               	bsf	3936,7,c	;volatile
 19001                           
 19002                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 19003  01679C  8060               	bsf	3936,0,c	;volatile
 19004  01679E  0012               	return		;funcret
 19005  0167A0                     __end_of_ADCC_StartConversion:
 19006                           	opt stack 0
 19007                           tosu	equ	0xFFF
 19008                           tosh	equ	0xFFE
 19009                           tosl	equ	0xFFD
 19010                           pclatu	equ	0xFFB
 19011                           pclath	equ	0xFFA
 19012                           tblptru	equ	0xFF8
 19013                           tblptrh	equ	0xFF7
 19014                           tblptrl	equ	0xFF6
 19015                           tablat	equ	0xFF5
 19016                           prodh	equ	0xFF4
 19017                           prodl	equ	0xFF3
 19018                           intcon	equ	0xFF2
 19019                           indf0	equ	0xFEF
 19020                           postinc0	equ	0xFEE
 19021                           fsr0h	equ	0xFEA
 19022                           fsr0l	equ	0xFE9
 19023                           wreg	equ	0xFE8
 19024                           indf1	equ	0xFE7
 19025                           postdec1	equ	0xFE5
 19026                           fsr1h	equ	0xFE2
 19027                           fsr1l	equ	0xFE1
 19028                           bsr	equ	0xFE0
 19029                           indf2	equ	0xFDF
 19030                           postinc2	equ	0xFDE
 19031                           postdec2	equ	0xFDD
 19032                           fsr2h	equ	0xFDA
 19033                           fsr2l	equ	0xFD9
 19034                           status	equ	0xFD8
 19035                           
 19036 ;; *************** function _ADCC_IsConversionDone *****************
 19037 ;; Defined at:
 19038 ;;		line 124 in file "mcc_generated_files/adcc.c"
 19039 ;; Parameters:    Size  Location     Type
 19040 ;;		None
 19041 ;; Auto vars:     Size  Location     Type
 19042 ;;		None
 19043 ;; Return value:  Size  Location     Type
 19044 ;;                  1    wreg      unsigned char 
 19045 ;; Registers used:
 19046 ;;		wreg
 19047 ;; Tracked objects:
 19048 ;;		On entry : 0/0
 19049 ;;		On exit  : 0/0
 19050 ;;		Unchanged: 0/0
 19051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19056 ;;Total ram usage:        0 bytes
 19057 ;; Hardware stack levels used:    1
 19058 ;; Hardware stack levels required when called:   10
 19059 ;; This function calls:
 19060 ;;		Nothing
 19061 ;; This function is called by:
 19062 ;;		_acquisitionTimerCallback
 19063 ;; This function uses a non-reentrant model
 19064 ;;
 19065                           
 19066                           	psect	text67
 19067  0167A0                     __ptext67:
 19068                           	opt stack 0
 19069  0167A0                     _ADCC_IsConversionDone:
 19070                           	opt stack 9
 19071                           
 19072                           ;adcc.c: 127: return ((unsigned char)(!ADCON0bits.ADGO));
 19073                           
 19074                           ;incstack = 0
 19075  0167A0  B060               	btfsc	3936,0,c	;volatile
 19076  0167A2  D002               	goto	i1u710_20
 19077  0167A4  0E01               	movlw	1
 19078  0167A6  0012               	return	
 19079  0167A8                     i1u710_20:
 19080  0167A8  0E00               	movlw	0
 19081  0167AA  0012               	return	
 19082  0167AC                     __end_of_ADCC_IsConversionDone:
 19083                           	opt stack 0
 19084                           tosu	equ	0xFFF
 19085                           tosh	equ	0xFFE
 19086                           tosl	equ	0xFFD
 19087                           pclatu	equ	0xFFB
 19088                           pclath	equ	0xFFA
 19089                           tblptru	equ	0xFF8
 19090                           tblptrh	equ	0xFF7
 19091                           tblptrl	equ	0xFF6
 19092                           tablat	equ	0xFF5
 19093                           prodh	equ	0xFF4
 19094                           prodl	equ	0xFF3
 19095                           intcon	equ	0xFF2
 19096                           indf0	equ	0xFEF
 19097                           postinc0	equ	0xFEE
 19098                           fsr0h	equ	0xFEA
 19099                           fsr0l	equ	0xFE9
 19100                           wreg	equ	0xFE8
 19101                           indf1	equ	0xFE7
 19102                           postdec1	equ	0xFE5
 19103                           fsr1h	equ	0xFE2
 19104                           fsr1l	equ	0xFE1
 19105                           bsr	equ	0xFE0
 19106                           indf2	equ	0xFDF
 19107                           postinc2	equ	0xFDE
 19108                           postdec2	equ	0xFDD
 19109                           fsr2h	equ	0xFDA
 19110                           fsr2l	equ	0xFD9
 19111                           status	equ	0xFD8
 19112                           
 19113 ;; *************** function _TMR7_WriteTimer *****************
 19114 ;; Defined at:
 19115 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 19116 ;; Parameters:    Size  Location     Type
 19117 ;;  timerVal        2    0[BANK1 ] unsigned int 
 19118 ;; Auto vars:     Size  Location     Type
 19119 ;;		None
 19120 ;; Return value:  Size  Location     Type
 19121 ;;                  1    wreg      void 
 19122 ;; Registers used:
 19123 ;;		wreg, status,2
 19124 ;; Tracked objects:
 19125 ;;		On entry : 0/0
 19126 ;;		On exit  : 0/0
 19127 ;;		Unchanged: 0/0
 19128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19129 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19132 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19133 ;;Total ram usage:        2 bytes
 19134 ;; Hardware stack levels used:    1
 19135 ;; Hardware stack levels required when called:   10
 19136 ;; This function calls:
 19137 ;;		Nothing
 19138 ;; This function is called by:
 19139 ;;		_TMR7_ISR
 19140 ;;		_TMR7_Reload
 19141 ;; This function uses a non-reentrant model
 19142 ;;
 19143                           
 19144                           	psect	text68
 19145  016558                     __ptext68:
 19146                           	opt stack 0
 19147  016558                     _TMR7_WriteTimer:
 19148                           	opt stack 10
 19149                           
 19150                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 19151                           
 19152                           ;incstack = 0
 19153  016558  010F               	movlb	15	; () banked
 19154  01655A  A530               	btfss	48,2,b	;volatile
 19155  01655C  D009               	goto	i1l626
 19156                           
 19157                           ; BSR set to: 15
 19158                           ;tmr7.c: 130: {
 19159                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 19160  01655E  9130               	bcf	48,0,b	;volatile
 19161                           
 19162                           ; BSR set to: 15
 19163                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 19164  016560  0101               	movlb	1	; () banked
 19165  016562  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 19166  016564  010F               	movlb	15	; () banked
 19167  016566  6F2F               	movwf	47,b	;volatile
 19168                           
 19169                           ; BSR set to: 15
 19170                           ;tmr7.c: 136: TMR7L = timerVal;
 19171  016568  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 19172                           
 19173                           ; BSR set to: 15
 19174                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 19175  01656C  8130               	bsf	48,0,b	;volatile
 19176                           
 19177                           ;tmr7.c: 140: }
 19178  01656E  0012               	return	
 19179  016570                     i1l626:
 19180                           
 19181                           ; BSR set to: 15
 19182                           ;tmr7.c: 141: else
 19183                           ;tmr7.c: 142: {
 19184                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 19185                           
 19186                           ; BSR set to: 15
 19187  016570  0101               	movlb	1	; () banked
 19188  016572  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 19189  016574  010F               	movlb	15	; () banked
 19190  016576  6F2F               	movwf	47,b	;volatile
 19191                           
 19192                           ; BSR set to: 15
 19193                           ;tmr7.c: 145: TMR7L = timerVal;
 19194  016578  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 19195  01657C  0012               	return	
 19196  01657E                     __end_of_TMR7_WriteTimer:
 19197                           	opt stack 0
 19198                           tosu	equ	0xFFF
 19199                           tosh	equ	0xFFE
 19200                           tosl	equ	0xFFD
 19201                           pclatu	equ	0xFFB
 19202                           pclath	equ	0xFFA
 19203                           tblptru	equ	0xFF8
 19204                           tblptrh	equ	0xFF7
 19205                           tblptrl	equ	0xFF6
 19206                           tablat	equ	0xFF5
 19207                           prodh	equ	0xFF4
 19208                           prodl	equ	0xFF3
 19209                           intcon	equ	0xFF2
 19210                           indf0	equ	0xFEF
 19211                           postinc0	equ	0xFEE
 19212                           fsr0h	equ	0xFEA
 19213                           fsr0l	equ	0xFE9
 19214                           wreg	equ	0xFE8
 19215                           indf1	equ	0xFE7
 19216                           postdec1	equ	0xFE5
 19217                           fsr1h	equ	0xFE2
 19218                           fsr1l	equ	0xFE1
 19219                           bsr	equ	0xFE0
 19220                           indf2	equ	0xFDF
 19221                           postinc2	equ	0xFDE
 19222                           postdec2	equ	0xFDD
 19223                           fsr2h	equ	0xFDA
 19224                           fsr2l	equ	0xFD9
 19225                           status	equ	0xFD8
 19226                           
 19227 ;; *************** function _TMR6_ISR *****************
 19228 ;; Defined at:
 19229 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 19230 ;; Parameters:    Size  Location     Type
 19231 ;;		None
 19232 ;; Auto vars:     Size  Location     Type
 19233 ;;		None
 19234 ;; Return value:  Size  Location     Type
 19235 ;;                  1    wreg      void 
 19236 ;; Registers used:
 19237 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19238 ;; Tracked objects:
 19239 ;;		On entry : 0/0
 19240 ;;		On exit  : 0/0
 19241 ;;		Unchanged: 0/0
 19242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19247 ;;Total ram usage:        0 bytes
 19248 ;; Hardware stack levels used:    1
 19249 ;; Hardware stack levels required when called:   11
 19250 ;; This function calls:
 19251 ;;		Absolute function
 19252 ;;		_TMR6_DefaultInterruptHandler
 19253 ;;		_heartbeatTimerCallback
 19254 ;; This function is called by:
 19255 ;;		_INTERRUPT_InterruptManagerLow
 19256 ;; This function uses a non-reentrant model
 19257 ;;
 19258                           
 19259                           	psect	text69
 19260  0164E2                     __ptext69:
 19261                           	opt stack 0
 19262  0164E2                     _TMR6_ISR:
 19263                           	opt stack 10
 19264                           
 19265                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 19266                           
 19267                           ; BSR set to: 15
 19268                           ;incstack = 0
 19269  0164E2  010E               	movlb	14	; () banked
 19270  0164E4  9B38               	bcf	56,5,b	;volatile
 19271                           
 19272                           ; BSR set to: 14
 19273                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 19274  0164E6  0101               	movlb	1	; () banked
 19275  0164E8  51D0               	movf	_TMR6_InterruptHandler& (0+255),w,b
 19276  0164EA  11D1               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 19277  0164EC  11D2               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 19278  0164EE  B4D8               	btfsc	status,2,c
 19279  0164F0  0012               	return	
 19280                           
 19281                           ; BSR set to: 1
 19282                           ;tmr6.c: 172: {
 19283                           ;tmr6.c: 173: TMR6_InterruptHandler();
 19284  0164F2  D801               	call	i1u1668_28
 19285  0164F4  0012               	return	
 19286  0164F6                     i1u1668_28:
 19287  0164F6  0005               	push	
 19288  0164F8  6EFA               	movwf	pclath,c
 19289  0164FA  51D0               	movf	_TMR6_InterruptHandler& (0+255),w,b
 19290  0164FC  6EFD               	movwf	tosl,c
 19291  0164FE  51D1               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 19292  016500  6EFE               	movwf	tosh,c
 19293  016502  51D2               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 19294  016504  6EFF               	movwf	tosu,c
 19295  016506  50FA               	movf	pclath,w,c
 19296  016508  0012               	return		;indir
 19297  01650A                     __end_of_TMR6_ISR:
 19298                           	opt stack 0
 19299                           tosu	equ	0xFFF
 19300                           tosh	equ	0xFFE
 19301                           tosl	equ	0xFFD
 19302                           pclatu	equ	0xFFB
 19303                           pclath	equ	0xFFA
 19304                           tblptru	equ	0xFF8
 19305                           tblptrh	equ	0xFF7
 19306                           tblptrl	equ	0xFF6
 19307                           tablat	equ	0xFF5
 19308                           prodh	equ	0xFF4
 19309                           prodl	equ	0xFF3
 19310                           intcon	equ	0xFF2
 19311                           indf0	equ	0xFEF
 19312                           postinc0	equ	0xFEE
 19313                           fsr0h	equ	0xFEA
 19314                           fsr0l	equ	0xFE9
 19315                           wreg	equ	0xFE8
 19316                           indf1	equ	0xFE7
 19317                           postdec1	equ	0xFE5
 19318                           fsr1h	equ	0xFE2
 19319                           fsr1l	equ	0xFE1
 19320                           bsr	equ	0xFE0
 19321                           indf2	equ	0xFDF
 19322                           postinc2	equ	0xFDE
 19323                           postdec2	equ	0xFDD
 19324                           fsr2h	equ	0xFDA
 19325                           fsr2l	equ	0xFD9
 19326                           status	equ	0xFD8
 19327                           
 19328 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 19329 ;; Defined at:
 19330 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 19331 ;; Parameters:    Size  Location     Type
 19332 ;;		None
 19333 ;; Auto vars:     Size  Location     Type
 19334 ;;		None
 19335 ;; Return value:  Size  Location     Type
 19336 ;;                  1    wreg      void 
 19337 ;; Registers used:
 19338 ;;		None
 19339 ;; Tracked objects:
 19340 ;;		On entry : 0/0
 19341 ;;		On exit  : 0/0
 19342 ;;		Unchanged: 0/0
 19343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19348 ;;Total ram usage:        0 bytes
 19349 ;; Hardware stack levels used:    1
 19350 ;; Hardware stack levels required when called:   10
 19351 ;; This function calls:
 19352 ;;		Nothing
 19353 ;; This function is called by:
 19354 ;;		_TMR6_Initialize
 19355 ;;		_TMR6_ISR
 19356 ;; This function uses a non-reentrant model
 19357 ;;
 19358                           
 19359                           	psect	text70
 19360  0167C0                     __ptext70:
 19361                           	opt stack 0
 19362  0167C0                     _TMR6_DefaultInterruptHandler:
 19363                           	opt stack 10
 19364                           
 19365                           ;incstack = 0
 19366  0167C0  0012               	return		;funcret
 19367  0167C2                     __end_of_TMR6_DefaultInterruptHandler:
 19368                           	opt stack 0
 19369                           tosu	equ	0xFFF
 19370                           tosh	equ	0xFFE
 19371                           tosl	equ	0xFFD
 19372                           pclatu	equ	0xFFB
 19373                           pclath	equ	0xFFA
 19374                           tblptru	equ	0xFF8
 19375                           tblptrh	equ	0xFF7
 19376                           tblptrl	equ	0xFF6
 19377                           tablat	equ	0xFF5
 19378                           prodh	equ	0xFF4
 19379                           prodl	equ	0xFF3
 19380                           intcon	equ	0xFF2
 19381                           indf0	equ	0xFEF
 19382                           postinc0	equ	0xFEE
 19383                           fsr0h	equ	0xFEA
 19384                           fsr0l	equ	0xFE9
 19385                           wreg	equ	0xFE8
 19386                           indf1	equ	0xFE7
 19387                           postdec1	equ	0xFE5
 19388                           fsr1h	equ	0xFE2
 19389                           fsr1l	equ	0xFE1
 19390                           bsr	equ	0xFE0
 19391                           indf2	equ	0xFDF
 19392                           postinc2	equ	0xFDE
 19393                           postdec2	equ	0xFDD
 19394                           fsr2h	equ	0xFDA
 19395                           fsr2l	equ	0xFD9
 19396                           status	equ	0xFD8
 19397                           
 19398 ;; *************** function _heartbeatTimerCallback *****************
 19399 ;; Defined at:
 19400 ;;		line 126 in file "main.c"
 19401 ;; Parameters:    Size  Location     Type
 19402 ;;		None
 19403 ;; Auto vars:     Size  Location     Type
 19404 ;;		None
 19405 ;; Return value:  Size  Location     Type
 19406 ;;                  1    wreg      void 
 19407 ;; Registers used:
 19408 ;;		wreg, status,2, status,0
 19409 ;; Tracked objects:
 19410 ;;		On entry : 0/0
 19411 ;;		On exit  : 0/0
 19412 ;;		Unchanged: 0/0
 19413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19416 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19417 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19418 ;;Total ram usage:        1 bytes
 19419 ;; Hardware stack levels used:    1
 19420 ;; Hardware stack levels required when called:   10
 19421 ;; This function calls:
 19422 ;;		Nothing
 19423 ;; This function is called by:
 19424 ;;		_main
 19425 ;;		_TMR6_ISR
 19426 ;; This function uses a non-reentrant model
 19427 ;;
 19428                           
 19429                           	psect	text71
 19430  0162AA                     __ptext71:
 19431                           	opt stack 0
 19432  0162AA                     _heartbeatTimerCallback:
 19433                           	opt stack 10
 19434                           
 19435                           ;main.c: 129: LATFbits.LATF2 = !LATFbits.LATF2;
 19436                           
 19437                           ;incstack = 0
 19438  0162AA  B47E               	btfsc	3966,2,c	;volatile
 19439  0162AC  D004               	goto	i1u766_20
 19440  0162AE  0101               	movlb	1	; () banked
 19441  0162B0  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 19442  0162B2  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 19443  0162B4  D002               	goto	i1u767_28
 19444  0162B6                     i1u766_20:
 19445  0162B6  0101               	movlb	1	; () banked
 19446  0162B8  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 19447  0162BA                     i1u767_28:
 19448  0162BA  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 19449  0162BC  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 19450  0162BE  507E               	movf	3966,w,c	;volatile
 19451  0162C0  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 19452  0162C2  0BFB               	andlw	-5
 19453  0162C4  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 19454  0162C6  6E7E               	movwf	3966,c	;volatile
 19455                           
 19456                           ;main.c: 132: dev_on_time++;
 19457  0162C8  0E01               	movlw	1
 19458  0162CA  27BD               	addwf	_dev_on_time& (0+255),f,b	;volatile
 19459  0162CC  0E00               	movlw	0
 19460  0162CE  23BE               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 19461  0162D0  23BF               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 19462  0162D2  23C0               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 19463                           
 19464                           ; BSR set to: 1
 19465                           ;main.c: 135: if (load_enable) {
 19466  0162D4  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 19467  0162D6  D006               	goto	i1l878
 19468                           
 19469                           ; BSR set to: 1
 19470                           ;main.c: 137: load_on_time++;
 19471  0162D8  0E01               	movlw	1
 19472  0162DA  27B9               	addwf	_load_on_time& (0+255),f,b	;volatile
 19473  0162DC  0E00               	movlw	0
 19474  0162DE  23BA               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 19475  0162E0  23BB               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 19476  0162E2  23BC               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 19477  0162E4                     i1l878:
 19478                           
 19479                           ; BSR set to: 1
 19480  0162E4  0004               	clrwdt		;# 
 19481  0162E6  0012               	return		;funcret
 19482  0162E8                     __end_of_heartbeatTimerCallback:
 19483                           	opt stack 0
 19484                           tosu	equ	0xFFF
 19485                           tosh	equ	0xFFE
 19486                           tosl	equ	0xFFD
 19487                           pclatu	equ	0xFFB
 19488                           pclath	equ	0xFFA
 19489                           tblptru	equ	0xFF8
 19490                           tblptrh	equ	0xFF7
 19491                           tblptrl	equ	0xFF6
 19492                           tablat	equ	0xFF5
 19493                           prodh	equ	0xFF4
 19494                           prodl	equ	0xFF3
 19495                           intcon	equ	0xFF2
 19496                           indf0	equ	0xFEF
 19497                           postinc0	equ	0xFEE
 19498                           fsr0h	equ	0xFEA
 19499                           fsr0l	equ	0xFE9
 19500                           wreg	equ	0xFE8
 19501                           indf1	equ	0xFE7
 19502                           postdec1	equ	0xFE5
 19503                           fsr1h	equ	0xFE2
 19504                           fsr1l	equ	0xFE1
 19505                           bsr	equ	0xFE0
 19506                           indf2	equ	0xFDF
 19507                           postinc2	equ	0xFDE
 19508                           postdec2	equ	0xFDD
 19509                           fsr2h	equ	0xFDA
 19510                           fsr2l	equ	0xFD9
 19511                           status	equ	0xFD8
 19512                           
 19513 ;; *************** function _EUSART2_Transmit_ISR *****************
 19514 ;; Defined at:
 19515 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 19516 ;; Parameters:    Size  Location     Type
 19517 ;;		None
 19518 ;; Auto vars:     Size  Location     Type
 19519 ;;		None
 19520 ;; Return value:  Size  Location     Type
 19521 ;;                  1    wreg      void 
 19522 ;; Registers used:
 19523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19524 ;; Tracked objects:
 19525 ;;		On entry : 0/0
 19526 ;;		On exit  : 0/0
 19527 ;;		Unchanged: 0/0
 19528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19533 ;;Total ram usage:        0 bytes
 19534 ;; Hardware stack levels used:    1
 19535 ;; Hardware stack levels required when called:   10
 19536 ;; This function calls:
 19537 ;;		Nothing
 19538 ;; This function is called by:
 19539 ;;		_EUSART2_Initialize
 19540 ;;		_INTERRUPT_InterruptManagerLow
 19541 ;; This function uses a non-reentrant model
 19542 ;;
 19543                           
 19544                           	psect	text72
 19545  016390                     __ptext72:
 19546                           	opt stack 0
 19547  016390                     _EUSART2_Transmit_ISR:
 19548                           	opt stack 11
 19549                           
 19550                           ;eusart2.c: 189: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 19551                           
 19552                           ;incstack = 0
 19553  016390  0E80               	movlw	128
 19554  016392  0101               	movlb	1	; () banked
 19555  016394  61DC               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 19556  016396  D014               	goto	i1l389
 19557                           
 19558                           ; BSR set to: 1
 19559                           ;eusart2.c: 190: {
 19560                           ;eusart2.c: 191: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 19561  016398  51DD               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 19562  01639A  0D01               	mullw	1
 19563  01639C  0E00               	movlw	low _eusart2TxBuffer
 19564  01639E  24F3               	addwf	prodl,w,c
 19565  0163A0  6ED9               	movwf	fsr2l,c
 19566  0163A2  0E02               	movlw	high _eusart2TxBuffer
 19567  0163A4  20F4               	addwfc	prodh,w,c
 19568  0163A6  6EDA               	movwf	fsr2h,c
 19569  0163A8  50DF               	movf	indf2,w,c
 19570  0163AA  010E               	movlb	14	; () banked
 19571  0163AC  6FF2               	movwf	242,b	;volatile
 19572                           
 19573                           ; BSR set to: 14
 19574  0163AE  0101               	movlb	1	; () banked
 19575  0163B0  2BDD               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 19576                           
 19577                           ; BSR set to: 1
 19578                           ;eusart2.c: 192: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 19579  0163B2  0E7F               	movlw	127
 19580  0163B4  65DD               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 19581  0163B6  D002               	goto	i1l390
 19582                           
 19583                           ; BSR set to: 1
 19584                           ;eusart2.c: 193: {
 19585                           ;eusart2.c: 194: eusart2TxTail = 0;
 19586  0163B8  0E00               	movlw	0
 19587  0163BA  6FDD               	movwf	_eusart2TxTail& (0+255),b	;volatile
 19588  0163BC                     i1l390:
 19589                           
 19590                           ; BSR set to: 1
 19591                           ;eusart2.c: 195: }
 19592                           ;eusart2.c: 196: eusart2TxBufferRemaining++;
 19593                           
 19594                           ; BSR set to: 1
 19595  0163BC  2BDC               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 19596                           
 19597                           ;eusart2.c: 197: }
 19598  0163BE  0012               	return	
 19599  0163C0                     i1l389:
 19600                           
 19601                           ; BSR set to: 1
 19602                           ;eusart2.c: 198: else
 19603                           ;eusart2.c: 199: {
 19604                           ;eusart2.c: 200: PIE3bits.TX2IE = 0;
 19605  0163C0  010E               	movlb	14	; () banked
 19606  0163C2  9D2C               	bcf	44,6,b	;volatile
 19607  0163C4  0012               	return	
 19608  0163C6                     __end_of_EUSART2_Transmit_ISR:
 19609                           	opt stack 0
 19610                           tosu	equ	0xFFF
 19611                           tosh	equ	0xFFE
 19612                           tosl	equ	0xFFD
 19613                           pclatu	equ	0xFFB
 19614                           pclath	equ	0xFFA
 19615                           tblptru	equ	0xFF8
 19616                           tblptrh	equ	0xFF7
 19617                           tblptrl	equ	0xFF6
 19618                           tablat	equ	0xFF5
 19619                           prodh	equ	0xFF4
 19620                           prodl	equ	0xFF3
 19621                           intcon	equ	0xFF2
 19622                           indf0	equ	0xFEF
 19623                           postinc0	equ	0xFEE
 19624                           fsr0h	equ	0xFEA
 19625                           fsr0l	equ	0xFE9
 19626                           wreg	equ	0xFE8
 19627                           indf1	equ	0xFE7
 19628                           postdec1	equ	0xFE5
 19629                           fsr1h	equ	0xFE2
 19630                           fsr1l	equ	0xFE1
 19631                           bsr	equ	0xFE0
 19632                           indf2	equ	0xFDF
 19633                           postinc2	equ	0xFDE
 19634                           postdec2	equ	0xFDD
 19635                           fsr2h	equ	0xFDA
 19636                           fsr2l	equ	0xFD9
 19637                           status	equ	0xFD8
 19638                           
 19639 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 19640 ;; Defined at:
 19641 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
 19642 ;; Parameters:    Size  Location     Type
 19643 ;;		None
 19644 ;; Auto vars:     Size  Location     Type
 19645 ;;		None
 19646 ;; Return value:  Size  Location     Type
 19647 ;;                  1    wreg      void 
 19648 ;; Registers used:
 19649 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19650 ;; Tracked objects:
 19651 ;;		On entry : 0/0
 19652 ;;		On exit  : 0/0
 19653 ;;		Unchanged: 0/0
 19654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19657 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19658 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19659 ;;Total ram usage:       18 bytes
 19660 ;; Hardware stack levels used:    1
 19661 ;; Hardware stack levels required when called:    9
 19662 ;; This function calls:
 19663 ;;		Absolute function
 19664 ;;		_ADCC_ISR
 19665 ;;		_EUSART2_Receive_ISR
 19666 ;;		_TMR5_ISR
 19667 ;; This function is called by:
 19668 ;;		Interrupt level 2
 19669 ;; This function uses a non-reentrant model
 19670 ;;
 19671                           
 19672                           	psect	intcode
 19673  000008                     __pintcode:
 19674                           	opt stack 0
 19675  000008                     _INTERRUPT_InterruptManagerHigh:
 19676                           	opt stack 9
 19677                           
 19678                           ;incstack = 0
 19679  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19680  00000A  EF61  F0A8         	goto	int_func
 19681                           tosu	equ	0xFFF
 19682                           tosh	equ	0xFFE
 19683                           tosl	equ	0xFFD
 19684                           pclatu	equ	0xFFB
 19685                           pclath	equ	0xFFA
 19686                           tblptru	equ	0xFF8
 19687                           tblptrh	equ	0xFF7
 19688                           tblptrl	equ	0xFF6
 19689                           tablat	equ	0xFF5
 19690                           prodh	equ	0xFF4
 19691                           prodl	equ	0xFF3
 19692                           intcon	equ	0xFF2
 19693                           indf0	equ	0xFEF
 19694                           postinc0	equ	0xFEE
 19695                           fsr0h	equ	0xFEA
 19696                           fsr0l	equ	0xFE9
 19697                           wreg	equ	0xFE8
 19698                           indf1	equ	0xFE7
 19699                           postdec1	equ	0xFE5
 19700                           fsr1h	equ	0xFE2
 19701                           fsr1l	equ	0xFE1
 19702                           bsr	equ	0xFE0
 19703                           indf2	equ	0xFDF
 19704                           postinc2	equ	0xFDE
 19705                           postdec2	equ	0xFDD
 19706                           fsr2h	equ	0xFDA
 19707                           fsr2l	equ	0xFD9
 19708                           status	equ	0xFD8
 19709                           
 19710                           	psect	intcode_body
 19711  0150C2                     __pintcode_body:
 19712                           	opt stack 9
 19713  0150C2                     int_func:
 19714                           	opt stack 9
 19715  0150C2  CFFA F0B6          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 19716  0150C6  CFFB F0B7          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 19717  0150CA  CFE9 F0B8          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 19718  0150CE  CFEA F0B9          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 19719  0150D2  CFE1 F0BA          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 19720  0150D6  CFE2 F0BB          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 19721  0150DA  CFD9 F0BC          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 19722  0150DE  CFDA F0BD          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 19723  0150E2  CFF3 F0BE          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 19724  0150E6  CFF4 F0BF          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 19725  0150EA  CFF6 F0C0          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 19726  0150EE  CFF7 F0C1          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 19727  0150F2  CFF8 F0C2          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 19728  0150F6  CFF5 F0C3          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 19729  0150FA  C05F  F0C4         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 19730  0150FE  C060  F0C5         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 19731  015102  C061  F0C6         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 19732  015106  C062  F0C7         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 19733                           
 19734                           ;interrupt_manager.c: 83: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 19735  01510A  010E               	movlb	14	; () banked
 19736  01510C  BF2C               	btfsc	44,7,b	;volatile
 19737                           
 19738                           ; BSR set to: 14
 19739  01510E  AF36               	btfss	54,7,b	;volatile
 19740  015110  D00D               	goto	i2l202
 19741                           
 19742                           ; BSR set to: 14
 19743                           ;interrupt_manager.c: 84: {
 19744                           ;interrupt_manager.c: 85: EUSART2_RxDefaultInterruptHandler();
 19745  015112  D801               	call	i2u1679_48
 19746  015114  D016               	goto	i2l206
 19747  015116                     i2u1679_48:
 19748  015116  0005               	push	
 19749  015118  6EFA               	movwf	pclath,c
 19750  01511A  0100               	movlb	0	; () banked
 19751  01511C  51E3               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 19752  01511E  6EFD               	movwf	tosl,c
 19753  015120  51E4               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 19754  015122  6EFE               	movwf	tosh,c
 19755  015124  51E5               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 19756  015126  6EFF               	movwf	tosu,c
 19757  015128  50FA               	movf	pclath,w,c
 19758  01512A  0012               	return		;indir
 19759  01512C                     i2l202:
 19760                           
 19761                           ; BSR set to: 14
 19762                           ;interrupt_manager.c: 87: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 19763  01512C  B92E               	btfsc	46,4,b	;volatile
 19764                           
 19765                           ; BSR set to: 14
 19766  01512E  A938               	btfss	56,4,b	;volatile
 19767  015130  D003               	goto	i2l204
 19768                           
 19769                           ; BSR set to: 14
 19770                           ;interrupt_manager.c: 88: {
 19771                           ;interrupt_manager.c: 89: TMR5_ISR();
 19772  015132  ECFD  F0B1         	call	_TMR5_ISR	;wreg free
 19773                           
 19774                           ;interrupt_manager.c: 90: }
 19775  015136  D005               	goto	i2l206
 19776  015138                     i2l204:
 19777                           
 19778                           ; BSR set to: 14
 19779                           ;interrupt_manager.c: 91: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 19780  015138  B12A               	btfsc	42,0,b	;volatile
 19781                           
 19782                           ; BSR set to: 14
 19783  01513A  A134               	btfss	52,0,b	;volatile
 19784  01513C  D002               	goto	i2l206
 19785                           
 19786                           ; BSR set to: 14
 19787                           ;interrupt_manager.c: 92: {
 19788                           ;interrupt_manager.c: 93: ADCC_ISR();
 19789  01513E  EC85  F0B2         	call	_ADCC_ISR	;wreg free
 19790  015142                     i2l206:
 19791                           
 19792                           ;interrupt_manager.c: 95: else
 19793                           ;interrupt_manager.c: 96: {
 19794  015142  C0C7  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 19795  015146  C0C6  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 19796  01514A  C0C5  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 19797  01514E  C0C4  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 19798  015152  C0C3  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 19799  015156  C0C2  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 19800  01515A  C0C1  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 19801  01515E  C0C0  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 19802  015162  C0BF  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 19803  015166  C0BE  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 19804  01516A  C0BD  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 19805  01516E  C0BC  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 19806  015172  C0BB  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 19807  015176  C0BA  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 19808  01517A  C0B9  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 19809  01517E  C0B8  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 19810  015182  C0B7  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 19811  015186  C0B6  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 19812  01518A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 19813  01518C  0011               	retfie		f
 19814  01518E                     __end_of_INTERRUPT_InterruptManagerHigh:
 19815                           	opt stack 0
 19816                           tosu	equ	0xFFF
 19817                           tosh	equ	0xFFE
 19818                           tosl	equ	0xFFD
 19819                           pclatu	equ	0xFFB
 19820                           pclath	equ	0xFFA
 19821                           tblptru	equ	0xFF8
 19822                           tblptrh	equ	0xFF7
 19823                           tblptrl	equ	0xFF6
 19824                           tablat	equ	0xFF5
 19825                           prodh	equ	0xFF4
 19826                           prodl	equ	0xFF3
 19827                           intcon	equ	0xFF2
 19828                           indf0	equ	0xFEF
 19829                           postinc0	equ	0xFEE
 19830                           fsr0h	equ	0xFEA
 19831                           fsr0l	equ	0xFE9
 19832                           wreg	equ	0xFE8
 19833                           indf1	equ	0xFE7
 19834                           postdec1	equ	0xFE5
 19835                           fsr1h	equ	0xFE2
 19836                           fsr1l	equ	0xFE1
 19837                           bsr	equ	0xFE0
 19838                           indf2	equ	0xFDF
 19839                           postinc2	equ	0xFDE
 19840                           postdec2	equ	0xFDD
 19841                           fsr2h	equ	0xFDA
 19842                           fsr2l	equ	0xFD9
 19843                           status	equ	0xFD8
 19844                           
 19845 ;; *************** function _TMR5_ISR *****************
 19846 ;; Defined at:
 19847 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 19848 ;; Parameters:    Size  Location     Type
 19849 ;;		None
 19850 ;; Auto vars:     Size  Location     Type
 19851 ;;		None
 19852 ;; Return value:  Size  Location     Type
 19853 ;;                  1    wreg      void 
 19854 ;; Registers used:
 19855 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19856 ;; Tracked objects:
 19857 ;;		On entry : 0/0
 19858 ;;		On exit  : 0/0
 19859 ;;		Unchanged: 0/0
 19860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19865 ;;Total ram usage:        0 bytes
 19866 ;; Hardware stack levels used:    1
 19867 ;; Hardware stack levels required when called:    1
 19868 ;; This function calls:
 19869 ;;		Absolute function
 19870 ;;		_TMR5_DefaultInterruptHandler
 19871 ;;		_TMR5_WriteTimer
 19872 ;; This function is called by:
 19873 ;;		_INTERRUPT_InterruptManagerHigh
 19874 ;; This function uses a non-reentrant model
 19875 ;;
 19876                           
 19877                           	psect	text74
 19878  0163FA                     __ptext74:
 19879                           	opt stack 0
 19880  0163FA                     _TMR5_ISR:
 19881                           	opt stack 16
 19882                           
 19883                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 19884                           
 19885                           ;incstack = 0
 19886  0163FA  010E               	movlb	14	; () banked
 19887  0163FC  9938               	bcf	56,4,b	;volatile
 19888                           
 19889                           ; BSR set to: 14
 19890                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 19891  0163FE  C1D6  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 19892  016402  C1D7  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 19893  016406  EC42  F0B3         	call	_TMR5_WriteTimer	;wreg free
 19894                           
 19895                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 19896  01640A  0101               	movlb	1	; () banked
 19897  01640C  51CA               	movf	_TMR5_InterruptHandler& (0+255),w,b
 19898  01640E  11CB               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 19899  016410  11CC               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 19900  016412  B4D8               	btfsc	status,2,c
 19901  016414  0012               	return	
 19902                           
 19903                           ; BSR set to: 1
 19904                           ;tmr5.c: 172: {
 19905                           ;tmr5.c: 173: TMR5_InterruptHandler();
 19906  016416  D801               	call	i2u1664_48
 19907  016418  0012               	return	
 19908  01641A                     i2u1664_48:
 19909  01641A  0005               	push	
 19910  01641C  6EFA               	movwf	pclath,c
 19911  01641E  51CA               	movf	_TMR5_InterruptHandler& (0+255),w,b
 19912  016420  6EFD               	movwf	tosl,c
 19913  016422  51CB               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 19914  016424  6EFE               	movwf	tosh,c
 19915  016426  51CC               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 19916  016428  6EFF               	movwf	tosu,c
 19917  01642A  50FA               	movf	pclath,w,c
 19918  01642C  0012               	return		;indir
 19919  01642E                     __end_of_TMR5_ISR:
 19920                           	opt stack 0
 19921                           tosu	equ	0xFFF
 19922                           tosh	equ	0xFFE
 19923                           tosl	equ	0xFFD
 19924                           pclatu	equ	0xFFB
 19925                           pclath	equ	0xFFA
 19926                           tblptru	equ	0xFF8
 19927                           tblptrh	equ	0xFF7
 19928                           tblptrl	equ	0xFF6
 19929                           tablat	equ	0xFF5
 19930                           prodh	equ	0xFF4
 19931                           prodl	equ	0xFF3
 19932                           intcon	equ	0xFF2
 19933                           indf0	equ	0xFEF
 19934                           postinc0	equ	0xFEE
 19935                           fsr0h	equ	0xFEA
 19936                           fsr0l	equ	0xFE9
 19937                           wreg	equ	0xFE8
 19938                           indf1	equ	0xFE7
 19939                           postdec1	equ	0xFE5
 19940                           fsr1h	equ	0xFE2
 19941                           fsr1l	equ	0xFE1
 19942                           bsr	equ	0xFE0
 19943                           indf2	equ	0xFDF
 19944                           postinc2	equ	0xFDE
 19945                           postdec2	equ	0xFDD
 19946                           fsr2h	equ	0xFDA
 19947                           fsr2l	equ	0xFD9
 19948                           status	equ	0xFD8
 19949                           
 19950 ;; *************** function _TMR5_WriteTimer *****************
 19951 ;; Defined at:
 19952 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 19953 ;; Parameters:    Size  Location     Type
 19954 ;;  timerVal        2    0[COMRAM] unsigned int 
 19955 ;; Auto vars:     Size  Location     Type
 19956 ;;		None
 19957 ;; Return value:  Size  Location     Type
 19958 ;;                  1    wreg      void 
 19959 ;; Registers used:
 19960 ;;		wreg, status,2
 19961 ;; Tracked objects:
 19962 ;;		On entry : 0/0
 19963 ;;		On exit  : 0/0
 19964 ;;		Unchanged: 0/0
 19965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19969 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19970 ;;Total ram usage:        2 bytes
 19971 ;; Hardware stack levels used:    1
 19972 ;; This function calls:
 19973 ;;		Nothing
 19974 ;; This function is called by:
 19975 ;;		_TMR5_ISR
 19976 ;;		_TMR5_Reload
 19977 ;; This function uses a non-reentrant model
 19978 ;;
 19979                           
 19980                           	psect	text75
 19981  016684                     __ptext75:
 19982                           	opt stack 0
 19983  016684                     _TMR5_WriteTimer:
 19984                           	opt stack 16
 19985                           
 19986                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 19987                           
 19988                           ;incstack = 0
 19989  016684  A4C3               	btfss	4035,2,c	;volatile
 19990  016686  D007               	goto	i2l700
 19991                           
 19992                           ;tmr5.c: 130: {
 19993                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 19994  016688  90C3               	bcf	4035,0,c	;volatile
 19995                           
 19996                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 19997  01668A  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 19998  01668C  6EC2               	movwf	4034,c	;volatile
 19999                           
 20000                           ;tmr5.c: 136: TMR5L = timerVal;
 20001  01668E  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 20002                           
 20003                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 20004  016692  80C3               	bsf	4035,0,c	;volatile
 20005                           
 20006                           ;tmr5.c: 140: }
 20007  016694  0012               	return	
 20008  016696                     i2l700:
 20009                           
 20010                           ;tmr5.c: 141: else
 20011                           ;tmr5.c: 142: {
 20012                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 20013  016696  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 20014  016698  6EC2               	movwf	4034,c	;volatile
 20015                           
 20016                           ;tmr5.c: 145: TMR5L = timerVal;
 20017  01669A  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 20018  01669E  0012               	return	
 20019  0166A0                     __end_of_TMR5_WriteTimer:
 20020                           	opt stack 0
 20021                           tosu	equ	0xFFF
 20022                           tosh	equ	0xFFE
 20023                           tosl	equ	0xFFD
 20024                           pclatu	equ	0xFFB
 20025                           pclath	equ	0xFFA
 20026                           tblptru	equ	0xFF8
 20027                           tblptrh	equ	0xFF7
 20028                           tblptrl	equ	0xFF6
 20029                           tablat	equ	0xFF5
 20030                           prodh	equ	0xFF4
 20031                           prodl	equ	0xFF3
 20032                           intcon	equ	0xFF2
 20033                           indf0	equ	0xFEF
 20034                           postinc0	equ	0xFEE
 20035                           fsr0h	equ	0xFEA
 20036                           fsr0l	equ	0xFE9
 20037                           wreg	equ	0xFE8
 20038                           indf1	equ	0xFE7
 20039                           postdec1	equ	0xFE5
 20040                           fsr1h	equ	0xFE2
 20041                           fsr1l	equ	0xFE1
 20042                           bsr	equ	0xFE0
 20043                           indf2	equ	0xFDF
 20044                           postinc2	equ	0xFDE
 20045                           postdec2	equ	0xFDD
 20046                           fsr2h	equ	0xFDA
 20047                           fsr2l	equ	0xFD9
 20048                           status	equ	0xFD8
 20049                           
 20050 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 20051 ;; Defined at:
 20052 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 20053 ;; Parameters:    Size  Location     Type
 20054 ;;		None
 20055 ;; Auto vars:     Size  Location     Type
 20056 ;;		None
 20057 ;; Return value:  Size  Location     Type
 20058 ;;                  1    wreg      void 
 20059 ;; Registers used:
 20060 ;;		None
 20061 ;; Tracked objects:
 20062 ;;		On entry : 0/0
 20063 ;;		On exit  : 0/0
 20064 ;;		Unchanged: 0/0
 20065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20070 ;;Total ram usage:        0 bytes
 20071 ;; Hardware stack levels used:    1
 20072 ;; This function calls:
 20073 ;;		Nothing
 20074 ;; This function is called by:
 20075 ;;		_TMR5_Initialize
 20076 ;;		_TMR5_ISR
 20077 ;; This function uses a non-reentrant model
 20078 ;;
 20079                           
 20080                           	psect	text76
 20081  0167C2                     __ptext76:
 20082                           	opt stack 0
 20083  0167C2                     _TMR5_DefaultInterruptHandler:
 20084                           	opt stack 16
 20085                           
 20086                           ;incstack = 0
 20087  0167C2  0012               	return		;funcret
 20088  0167C4                     __end_of_TMR5_DefaultInterruptHandler:
 20089                           	opt stack 0
 20090                           tosu	equ	0xFFF
 20091                           tosh	equ	0xFFE
 20092                           tosl	equ	0xFFD
 20093                           pclatu	equ	0xFFB
 20094                           pclath	equ	0xFFA
 20095                           tblptru	equ	0xFF8
 20096                           tblptrh	equ	0xFF7
 20097                           tblptrl	equ	0xFF6
 20098                           tablat	equ	0xFF5
 20099                           prodh	equ	0xFF4
 20100                           prodl	equ	0xFF3
 20101                           intcon	equ	0xFF2
 20102                           indf0	equ	0xFEF
 20103                           postinc0	equ	0xFEE
 20104                           fsr0h	equ	0xFEA
 20105                           fsr0l	equ	0xFE9
 20106                           wreg	equ	0xFE8
 20107                           indf1	equ	0xFE7
 20108                           postdec1	equ	0xFE5
 20109                           fsr1h	equ	0xFE2
 20110                           fsr1l	equ	0xFE1
 20111                           bsr	equ	0xFE0
 20112                           indf2	equ	0xFDF
 20113                           postinc2	equ	0xFDE
 20114                           postdec2	equ	0xFDD
 20115                           fsr2h	equ	0xFDA
 20116                           fsr2l	equ	0xFD9
 20117                           status	equ	0xFD8
 20118                           
 20119 ;; *************** function _EUSART2_Receive_ISR *****************
 20120 ;; Defined at:
 20121 ;;		line 204 in file "mcc_generated_files/eusart2.c"
 20122 ;; Parameters:    Size  Location     Type
 20123 ;;		None
 20124 ;; Auto vars:     Size  Location     Type
 20125 ;;		None
 20126 ;; Return value:  Size  Location     Type
 20127 ;;                  1    wreg      void 
 20128 ;; Registers used:
 20129 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20130 ;; Tracked objects:
 20131 ;;		On entry : 0/0
 20132 ;;		On exit  : 0/0
 20133 ;;		Unchanged: 0/0
 20134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20139 ;;Total ram usage:        0 bytes
 20140 ;; Hardware stack levels used:    1
 20141 ;; Hardware stack levels required when called:    4
 20142 ;; This function calls:
 20143 ;;		i2_printf
 20144 ;; This function is called by:
 20145 ;;		_EUSART2_Initialize
 20146 ;;		_INTERRUPT_InterruptManagerHigh
 20147 ;; This function uses a non-reentrant model
 20148 ;;
 20149                           
 20150                           	psect	text77
 20151  0152EC                     __ptext77:
 20152                           	opt stack 0
 20153  0152EC                     _EUSART2_Receive_ISR:
 20154                           	opt stack 13
 20155                           
 20156                           ;eusart2.c: 207: if(1 == RC2STAbits.OERR)
 20157                           
 20158                           ;incstack = 0
 20159  0152EC  010E               	movlb	14	; () banked
 20160  0152EE  A3F5               	btfss	245,1,b	;volatile
 20161  0152F0  D002               	goto	i2l395
 20162                           
 20163                           ; BSR set to: 14
 20164                           ;eusart2.c: 208: {
 20165                           ;eusart2.c: 211: RC2STAbits.CREN = 0;
 20166  0152F2  99F5               	bcf	245,4,b	;volatile
 20167                           
 20168                           ;eusart2.c: 212: RC2STAbits.CREN = 1;
 20169  0152F4  89F5               	bsf	245,4,b	;volatile
 20170  0152F6                     i2l395:
 20171                           
 20172                           ; BSR set to: 14
 20173                           ;eusart2.c: 213: }
 20174                           ;eusart2.c: 216: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 20175                           
 20176                           ; BSR set to: 14
 20177  0152F6  0100               	movlb	0	; () banked
 20178  0152F8  51EB               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 20179  0152FA  0D01               	mullw	1
 20180  0152FC  0E80               	movlw	low _eusart2RxBuffer
 20181  0152FE  24F3               	addwf	prodl,w,c
 20182  015300  6ED9               	movwf	fsr2l,c
 20183  015302  0E02               	movlw	high _eusart2RxBuffer
 20184  015304  20F4               	addwfc	prodh,w,c
 20185  015306  6EDA               	movwf	fsr2h,c
 20186  015308  CEF1 FFDF          	movff	3825,indf2	;volatile
 20187                           
 20188                           ; BSR set to: 0
 20189  01530C  2BEB               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 20190                           
 20191                           ; BSR set to: 0
 20192                           ;eusart2.c: 217: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 20193  01530E  0E3F               	movlw	63
 20194  015310  65EB               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 20195  015312  D002               	goto	i2l396
 20196                           
 20197                           ; BSR set to: 0
 20198                           ;eusart2.c: 218: {
 20199                           ;eusart2.c: 219: eusart2RxHead = 0;
 20200  015314  0E00               	movlw	0
 20201  015316  6FEB               	movwf	_eusart2RxHead& (0+255),b	;volatile
 20202  015318                     i2l396:
 20203                           
 20204                           ; BSR set to: 0
 20205                           ;eusart2.c: 220: }
 20206                           ;eusart2.c: 221: eusart2RxCount++;
 20207                           
 20208                           ; BSR set to: 0
 20209  015318  0101               	movlb	1	; () banked
 20210  01531A  2BDA               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 20211                           
 20212                           ; BSR set to: 1
 20213                           ;eusart2.c: 227: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 20214  01531C  0E0A               	movlw	10
 20215  01531E  010E               	movlb	14	; () banked
 20216  015320  19F1               	xorwf	241,w,b	;volatile
 20217  015322  B4D8               	btfsc	status,2,c
 20218  015324  D004               	goto	i2u1674_40
 20219                           
 20220                           ; BSR set to: 14
 20221  015326  0E0D               	movlw	13
 20222  015328  19F1               	xorwf	241,w,b	;volatile
 20223  01532A  A4D8               	btfss	status,2,c
 20224  01532C  D006               	goto	i2l397
 20225  01532E                     i2u1674_40:
 20226                           
 20227                           ; BSR set to: 14
 20228                           ;eusart2.c: 229: eusart2RxStringReady = 1;
 20229  01532E  0100               	movlb	0	; () banked
 20230  015330  81FD               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 20231                           
 20232                           ; BSR set to: 0
 20233                           ;eusart2.c: 232: RC2REG = 0;
 20234  015332  0E00               	movlw	0
 20235  015334  010E               	movlb	14	; () banked
 20236  015336  6FF1               	movwf	241,b	;volatile
 20237                           
 20238                           ;eusart2.c: 234: }
 20239  015338  D002               	goto	i2l400
 20240  01533A                     i2l397:
 20241                           
 20242                           ; BSR set to: 14
 20243                           ;eusart2.c: 236: else {
 20244                           ;eusart2.c: 238: eusart2RxStringReady = 0;
 20245  01533A  0100               	movlb	0	; () banked
 20246  01533C  91FD               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 20247  01533E                     i2l400:
 20248                           
 20249                           ;eusart2.c: 240: }
 20250                           ;eusart2.c: 243: if((RC2REG == (int) '\b')) {
 20251                           
 20252                           ; BSR set to: 0
 20253  01533E  0E08               	movlw	8
 20254  015340  010E               	movlb	14	; () banked
 20255  015342  19F1               	xorwf	241,w,b	;volatile
 20256  015344  A4D8               	btfss	status,2,c
 20257  015346  0012               	return	
 20258                           
 20259                           ; BSR set to: 14
 20260                           ;eusart2.c: 245: eusart2RxBuffer[eusart2RxHead] = '\0';
 20261  015348  0100               	movlb	0	; () banked
 20262  01534A  51EB               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 20263  01534C  0D01               	mullw	1
 20264  01534E  0E80               	movlw	low _eusart2RxBuffer
 20265  015350  24F3               	addwf	prodl,w,c
 20266  015352  6ED9               	movwf	fsr2l,c
 20267  015354  0E02               	movlw	high _eusart2RxBuffer
 20268  015356  20F4               	addwfc	prodh,w,c
 20269  015358  6EDA               	movwf	fsr2h,c
 20270  01535A  0E00               	movlw	0
 20271  01535C  6EDF               	movwf	indf2,c
 20272                           
 20273                           ; BSR set to: 0
 20274                           ;eusart2.c: 246: eusart2RxHead--;
 20275  01535E  07EB               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 20276                           
 20277                           ; BSR set to: 0
 20278                           ;eusart2.c: 249: printf("\033[K");
 20279  015360  0EC4               	movlw	low STR_1
 20280  015362  6F66               	movwf	i2printf@f& (0+255),b
 20281  015364  0EFF               	movlw	high STR_1
 20282  015366  6F67               	movwf	(i2printf@f+1)& (0+255),b
 20283  015368  EC5D  F085         	call	i2_printf	;wreg free
 20284                           
 20285                           ;eusart2.c: 251: if(eusart2RxHead != eusart2RxTail) {
 20286  01536C  0101               	movlb	1	; () banked
 20287  01536E  51DB               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 20288  015370  0100               	movlb	0	; () banked
 20289  015372  19EB               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 20290  015374  B4D8               	btfsc	status,2,c
 20291  015376  D00B               	goto	i2l402
 20292                           
 20293                           ; BSR set to: 0
 20294                           ;eusart2.c: 253: eusart2RxBuffer[eusart2RxHead] = '\0';
 20295  015378  51EB               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 20296  01537A  0D01               	mullw	1
 20297  01537C  0E80               	movlw	low _eusart2RxBuffer
 20298  01537E  24F3               	addwf	prodl,w,c
 20299  015380  6ED9               	movwf	fsr2l,c
 20300  015382  0E02               	movlw	high _eusart2RxBuffer
 20301  015384  20F4               	addwfc	prodh,w,c
 20302  015386  6EDA               	movwf	fsr2h,c
 20303  015388  0E00               	movlw	0
 20304  01538A  6EDF               	movwf	indf2,c
 20305                           
 20306                           ; BSR set to: 0
 20307                           ;eusart2.c: 254: eusart2RxHead--;
 20308  01538C  07EB               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 20309  01538E                     i2l402:
 20310                           
 20311                           ; BSR set to: 0
 20312                           ;eusart2.c: 256: }
 20313                           ;eusart2.c: 258: RC2REG = 0;
 20314                           
 20315                           ; BSR set to: 0
 20316  01538E  0E00               	movlw	0
 20317  015390  010E               	movlb	14	; () banked
 20318  015392  6FF1               	movwf	241,b	;volatile
 20319  015394  0012               	return	
 20320  015396                     __end_of_EUSART2_Receive_ISR:
 20321                           	opt stack 0
 20322                           tosu	equ	0xFFF
 20323                           tosh	equ	0xFFE
 20324                           tosl	equ	0xFFD
 20325                           pclatu	equ	0xFFB
 20326                           pclath	equ	0xFFA
 20327                           tblptru	equ	0xFF8
 20328                           tblptrh	equ	0xFF7
 20329                           tblptrl	equ	0xFF6
 20330                           tablat	equ	0xFF5
 20331                           prodh	equ	0xFF4
 20332                           prodl	equ	0xFF3
 20333                           intcon	equ	0xFF2
 20334                           indf0	equ	0xFEF
 20335                           postinc0	equ	0xFEE
 20336                           fsr0h	equ	0xFEA
 20337                           fsr0l	equ	0xFE9
 20338                           wreg	equ	0xFE8
 20339                           indf1	equ	0xFE7
 20340                           postdec1	equ	0xFE5
 20341                           fsr1h	equ	0xFE2
 20342                           fsr1l	equ	0xFE1
 20343                           bsr	equ	0xFE0
 20344                           indf2	equ	0xFDF
 20345                           postinc2	equ	0xFDE
 20346                           postdec2	equ	0xFDD
 20347                           fsr2h	equ	0xFDA
 20348                           fsr2l	equ	0xFD9
 20349                           status	equ	0xFD8
 20350                           
 20351 ;; *************** function i2_printf *****************
 20352 ;; Defined at:
 20353 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 20354 ;; Parameters:    Size  Location     Type
 20355 ;;  f               2    6[BANK0 ] PTR const unsigned char 
 20356 ;;		 -> STR_96(30), STR_95(23), STR_94(39), STR_93(37), 
 20357 ;;		 -> STR_92(33), STR_91(1565), STR_89(53), STR_87(58), 
 20358 ;;		 -> STR_85(71), STR_84(63), STR_83(37), STR_82(46), 
 20359 ;;		 -> STR_81(102), STR_80(86), STR_78(25), STR_76(42), 
 20360 ;;		 -> STR_74(41), STR_72(40), STR_70(56), STR_68(34), 
 20361 ;;		 -> STR_66(34), STR_64(32), STR_62(37), STR_60(56), 
 20362 ;;		 -> STR_58(34), STR_56(34), STR_54(35), STR_52(82), 
 20363 ;;		 -> STR_50(47), STR_49(17), STR_46(4), STR_45(5), 
 20364 ;;		 -> STR_43(4), STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), 
 20365 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
 20366 ;;		 -> STR_6(5), STR_5(3), STR_4(372), STR_3(4), 
 20367 ;;		 -> STR_2(5), STR_1(4), 
 20368 ;; Auto vars:     Size  Location     Type
 20369 ;;  printf          4   35[BANK0 ] unsigned long 
 20370 ;;  printf          4   28[BANK0 ] struct .
 20371 ;;  printf          3   32[BANK0 ] struct .
 20372 ;;  printf          2   39[BANK0 ] int 
 20373 ;;  printf          2   26[BANK0 ] int 
 20374 ;;  printf          2   24[BANK0 ] unsigned short 
 20375 ;;  printf          2   22[BANK0 ] PTR void [1]
 20376 ;;		 -> ?i2_printf(2), ?_printf(2), 
 20377 ;;  printf          2   20[BANK0 ] PTR const unsigned char 
 20378 ;;		 -> STR_100(7), printf@c(1), RAM(3561), TRIAC_Firing_Angle(3), 
 20379 ;;  printf          2   18[BANK0 ] unsigned int 
 20380 ;;  printf          2    0        int 
 20381 ;;  printf          1   41[BANK0 ] char 
 20382 ;;  printf          1   17[BANK0 ] unsigned char 
 20383 ;;  printf          1    0        unsigned char 
 20384 ;; Return value:  Size  Location     Type
 20385 ;;                  2    6[BANK0 ] int 
 20386 ;; Registers used:
 20387 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20388 ;; Tracked objects:
 20389 ;;		On entry : 0/0
 20390 ;;		On exit  : 0/0
 20391 ;;		Unchanged: 0/0
 20392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20393 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20394 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20395 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20396 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20397 ;;Total ram usage:       36 bytes
 20398 ;; Hardware stack levels used:    1
 20399 ;; Hardware stack levels required when called:    3
 20400 ;; This function calls:
 20401 ;;		i2___awdiv
 20402 ;;		i2___ftadd
 20403 ;;		i2___ftge
 20404 ;;		i2___ftmul
 20405 ;;		i2___ftneg
 20406 ;;		i2___ftsub
 20407 ;;		i2___fttol
 20408 ;;		i2___lldiv
 20409 ;;		i2___llmod
 20410 ;;		i2___lltoft
 20411 ;;		i2___wmul
 20412 ;;		i2__div_to_l_
 20413 ;;		i2__tdiv_to_l_
 20414 ;;		i2_fround
 20415 ;;		i2_isdigit
 20416 ;;		i2_putch
 20417 ;;		i2_scale
 20418 ;; This function is called by:
 20419 ;;		_EUSART2_Receive_ISR
 20420 ;; This function uses a non-reentrant model
 20421 ;;
 20422                           
 20423                           	psect	text78
 20424  010ABA                     __ptext78:
 20425                           	opt stack 0
 20426  010ABA                     i2_printf:
 20427                           	opt stack 13
 20428                           
 20429                           ;doprnt.c: 466: va_list ap;
 20430                           ;doprnt.c: 499: signed char c;
 20431                           ;doprnt.c: 501: int width;
 20432                           ;doprnt.c: 504: int prec;
 20433                           ;doprnt.c: 508: unsigned short flag;
 20434                           ;doprnt.c: 515: char d;
 20435                           ;doprnt.c: 516: double fval;
 20436                           ;doprnt.c: 517: int exp;
 20437                           ;doprnt.c: 523: union {
 20438                           ;doprnt.c: 524: unsigned long vd;
 20439                           ;doprnt.c: 525: double integ;
 20440                           ;doprnt.c: 526: } tmpval;
 20441                           ;doprnt.c: 528: unsigned long val;
 20442                           ;doprnt.c: 529: unsigned len;
 20443                           ;doprnt.c: 530: const char * cp;
 20444                           ;doprnt.c: 533: *ap = __va_start();
 20445                           
 20446                           ; BSR set to: 14
 20447                           ;incstack = 0
 20448  010ABA  0E68               	movlw	low (?i2_printf+2)
 20449  010ABC  0100               	movlb	0	; () banked
 20450  010ABE  6F76               	movwf	i2printf@ap& (0+255),b
 20451  010AC0  0E00               	movlw	high (?i2_printf+2)
 20452  010AC2  6F77               	movwf	(i2printf@ap+1)& (0+255),b
 20453                           
 20454                           ;doprnt.c: 536: while(c = *f++) {
 20455  010AC4  EF98  F08A         	goto	i2u1660_40
 20456  010AC8                     
 20457                           ; BSR set to: 0
 20458                           ;doprnt.c: 538: if(c != '%')
 20459                           
 20460                           ; BSR set to: 0
 20461  010AC8  0E25               	movlw	37
 20462  010ACA  1989               	xorwf	i2printf@c& (0+255),w,b
 20463  010ACC  B4D8               	btfsc	status,2,c
 20464  010ACE  D005               	goto	i2l1190
 20465                           
 20466                           ; BSR set to: 0
 20467                           ;doprnt.c: 540: {
 20468                           ;doprnt.c: 541: (putch(c) );
 20469  010AD0  5189               	movf	i2printf@c& (0+255),w,b
 20470  010AD2  ECD6  F0B3         	call	i2_putch
 20471                           
 20472                           ;doprnt.c: 542: continue;
 20473  010AD6  EF98  F08A         	goto	i2u1660_40
 20474  010ADA                     i2l1190:
 20475                           
 20476                           ;doprnt.c: 543: }
 20477                           ;doprnt.c: 548: flag = 0;
 20478  010ADA  0E00               	movlw	0
 20479  010ADC  0100               	movlb	0	; () banked
 20480  010ADE  6F79               	movwf	(i2printf@flag+1)& (0+255),b
 20481  010AE0  0E00               	movlw	0
 20482  010AE2  6F78               	movwf	i2printf@flag& (0+255),b
 20483                           
 20484                           ; BSR set to: 0
 20485                           ;doprnt.c: 611: if(*f == '.') {
 20486  010AE4  C066  FFF6         	movff	i2printf@f,tblptrl
 20487  010AE8  C067  FFF7         	movff	i2printf@f+1,tblptrh
 20488  010AEC  0E00               	movlw	low (__mediumconst shr (0+16))
 20489  010AEE  6EF8               	movwf	tblptru,c
 20490  010AF0  0E0D               	movlw	(high __ramtop+-1)
 20491  010AF2  64F7               	cpfsgt	tblptrh,c
 20492  010AF4  D003               	bra	i2u1610_47
 20493  010AF6  0008               	tblrd		*
 20494  010AF8  50F5               	movf	tablat,w,c
 20495  010AFA  D005               	bra	i2u1610_40
 20496  010AFC                     i2u1610_47:
 20497  010AFC  CFF6 FFE9          	movff	tblptrl,fsr0l
 20498  010B00  CFF7 FFEA          	movff	tblptrh,fsr0h
 20499  010B04  50EF               	movf	indf0,w,c
 20500  010B06                     i2u1610_40:
 20501  010B06  0A2E               	xorlw	46
 20502  010B08  A4D8               	btfss	status,2,c
 20503  010B0A  D048               	goto	i2l1191
 20504                           
 20505                           ;doprnt.c: 612: flag |= 0x4000;
 20506  010B0C  0100               	movlb	0	; () banked
 20507  010B0E  8D79               	bsf	(i2printf@flag+1)& (0+255),6,b
 20508                           
 20509                           ;doprnt.c: 613: f++;
 20510  010B10  4B66               	infsnz	i2printf@f& (0+255),f,b
 20511  010B12  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 20512                           
 20513                           ; BSR set to: 0
 20514                           ;doprnt.c: 620: {
 20515                           ;doprnt.c: 621: prec = 0;
 20516  010B14  0E00               	movlw	0
 20517  010B16  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 20518  010B18  0E00               	movlw	0
 20519  010B1A  6F87               	movwf	i2printf@prec& (0+255),b
 20520                           
 20521                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 20522  010B1C  D029               	goto	i2l1192
 20523  010B1E                     
 20524                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 20525                           
 20526                           ; BSR set to: 0
 20527  010B1E  C087  F00F         	movff	i2printf@prec,i2___wmul@multiplier
 20528  010B22  C088  F010         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 20529  010B26  0E00               	movlw	0
 20530  010B28  6E12               	movwf	i2___wmul@multiplicand+1,c
 20531  010B2A  0E0A               	movlw	10
 20532  010B2C  6E11               	movwf	i2___wmul@multiplicand,c
 20533  010B2E  ECBF  F0B2         	call	i2___wmul	;wreg free
 20534  010B32  C066  FFF6         	movff	i2printf@f,tblptrl
 20535  010B36  C067  FFF7         	movff	i2printf@f+1,tblptrh
 20536  010B3A  0E00               	movlw	low (__mediumconst shr (0+16))
 20537  010B3C  6EF8               	movwf	tblptru,c
 20538  010B3E  0E0D               	movlw	(high __ramtop+-1)
 20539  010B40  64F7               	cpfsgt	tblptrh,c
 20540  010B42  D003               	bra	i2u1612_47
 20541  010B44  0008               	tblrd		*
 20542  010B46  50F5               	movf	tablat,w,c
 20543  010B48  D005               	bra	i2u1612_40
 20544  010B4A                     i2u1612_47:
 20545  010B4A  CFF6 FFE9          	movff	tblptrl,fsr0l
 20546  010B4E  CFF7 FFEA          	movff	tblptrh,fsr0h
 20547  010B52  50EF               	movf	indf0,w,c
 20548  010B54                     i2u1612_40:
 20549  010B54  0100               	movlb	0	; () banked
 20550  010B56  6F68               	movwf	??i2_printf& (0+255),b
 20551  010B58  5168               	movf	??i2_printf& (0+255),w,b
 20552  010B5A  260F               	addwf	?i2___wmul,f,c
 20553  010B5C  0E00               	movlw	0
 20554  010B5E  2210               	addwfc	?i2___wmul+1,f,c
 20555  010B60  0ED0               	movlw	208
 20556  010B62  240F               	addwf	?i2___wmul,w,c
 20557  010B64  6F87               	movwf	i2printf@prec& (0+255),b
 20558  010B66  0EFF               	movlw	255
 20559  010B68  2010               	addwfc	?i2___wmul+1,w,c
 20560  010B6A  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 20561                           
 20562                           ; BSR set to: 0
 20563  010B6C  4B66               	infsnz	i2printf@f& (0+255),f,b
 20564  010B6E  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 20565  010B70                     i2l1192:
 20566                           
 20567                           ; BSR set to: 0
 20568                           
 20569                           ; BSR set to: 0
 20570  010B70  C066  FFF6         	movff	i2printf@f,tblptrl
 20571  010B74  C067  FFF7         	movff	i2printf@f+1,tblptrh
 20572  010B78  0E00               	movlw	low (__mediumconst shr (0+16))
 20573  010B7A  6EF8               	movwf	tblptru,c
 20574  010B7C  0E0D               	movlw	(high __ramtop+-1)
 20575  010B7E  64F7               	cpfsgt	tblptrh,c
 20576  010B80  D003               	bra	i2u1613_47
 20577  010B82  0008               	tblrd		*
 20578  010B84  50F5               	movf	tablat,w,c
 20579  010B86  D005               	bra	i2u1613_40
 20580  010B88                     i2u1613_47:
 20581  010B88  CFF6 FFE9          	movff	tblptrl,fsr0l
 20582  010B8C  CFF7 FFEA          	movff	tblptrh,fsr0h
 20583  010B90  50EF               	movf	indf0,w,c
 20584  010B92                     i2u1613_40:
 20585  010B92  EC17  F0B3         	call	i2_isdigit
 20586  010B96  A0D8               	btfss	status,0,c
 20587  010B98  D07E               	goto	i2l1196
 20588  010B9A  D7C1               	goto	i2l1193
 20589  010B9C                     i2l1191:
 20590                           
 20591                           ;doprnt.c: 626: prec = 0;
 20592  010B9C  0E00               	movlw	0
 20593  010B9E  0100               	movlb	0	; () banked
 20594  010BA0  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 20595  010BA2  0E00               	movlw	0
 20596  010BA4  6F87               	movwf	i2printf@prec& (0+255),b
 20597                           
 20598                           ; BSR set to: 0
 20599                           ;doprnt.c: 628: flag |= 0x1000;
 20600  010BA6  8979               	bsf	(i2printf@flag+1)& (0+255),4,b
 20601                           
 20602                           ; BSR set to: 0
 20603                           ;doprnt.c: 630: }
 20604                           ;doprnt.c: 635: switch(c = *f++) {
 20605  010BA8  D076               	goto	i2l1196
 20606  010BAA                     
 20607                           ; BSR set to: 0
 20608                           ;doprnt.c: 663: flag |= 0x400;
 20609                           
 20610                           ; BSR set to: 0
 20611  010BAA  8579               	bsf	(i2printf@flag+1)& (0+255),2,b
 20612                           
 20613                           ; BSR set to: 0
 20614                           ;doprnt.c: 698: case 'i':
 20615                           ;doprnt.c: 699: break;
 20616                           
 20617                           ; BSR set to: 0
 20618                           
 20619                           ;doprnt.c: 697: case 'd':
 20620                           
 20621                           ;doprnt.c: 664: break;
 20622  010BAC  D0A8               	goto	i2l1200
 20623  010BAE                     
 20624                           ; BSR set to: 0
 20625                           ;doprnt.c: 718: case 'x':
 20626                           ;doprnt.c: 721: flag |= 0x80;
 20627                           
 20628                           ; BSR set to: 0
 20629                           
 20630                           ; BSR set to: 0
 20631  010BAE  8F78               	bsf	i2printf@flag& (0+255),7,b
 20632                           
 20633                           ;doprnt.c: 723: break;
 20634  010BB0  D0A6               	goto	i2l1200
 20635  010BB2                     
 20636                           ; BSR set to: 0
 20637                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 20638                           
 20639                           ; BSR set to: 0
 20640  010BB2  C076  FFD9         	movff	i2printf@ap,fsr2l
 20641  010BB6  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 20642  010BBA  CFDE F074          	movff	postinc2,i2printf@cp
 20643  010BBE  CFDD F075          	movff	postdec2,i2printf@cp+1
 20644                           
 20645                           ; BSR set to: 0
 20646  010BC2  0E02               	movlw	2
 20647  010BC4  2776               	addwf	i2printf@ap& (0+255),f,b
 20648  010BC6  0E00               	movlw	0
 20649  010BC8  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 20650                           
 20651                           ; BSR set to: 0
 20652                           ;doprnt.c: 740: if(!cp)
 20653  010BCA  5174               	movf	i2printf@cp& (0+255),w,b
 20654  010BCC  1175               	iorwf	(i2printf@cp+1)& (0+255),w,b
 20655  010BCE  A4D8               	btfss	status,2,c
 20656  010BD0  D004               	goto	i2l1206
 20657                           
 20658                           ; BSR set to: 0
 20659                           ;doprnt.c: 741: cp = "(null)";
 20660  010BD2  0E91               	movlw	low STR_100
 20661  010BD4  6F74               	movwf	i2printf@cp& (0+255),b
 20662  010BD6  0EFF               	movlw	high STR_100
 20663  010BD8  6F75               	movwf	(i2printf@cp+1)& (0+255),b
 20664  010BDA                     i2l1206:
 20665                           
 20666                           ; BSR set to: 0
 20667                           ;doprnt.c: 745: len = 0;
 20668                           
 20669                           ; BSR set to: 0
 20670  010BDA  0E00               	movlw	0
 20671  010BDC  6F73               	movwf	(i2printf@len+1)& (0+255),b
 20672  010BDE  0E00               	movlw	0
 20673  010BE0  6F72               	movwf	i2printf@len& (0+255),b
 20674                           
 20675                           ;doprnt.c: 746: while(cp[len])
 20676  010BE2  D003               	goto	i2l1207
 20677  010BE4                     
 20678                           ;doprnt.c: 747: len++;
 20679                           
 20680                           ; BSR set to: 0
 20681  010BE4  0100               	movlb	0	; () banked
 20682  010BE6  4B72               	infsnz	i2printf@len& (0+255),f,b
 20683  010BE8  2B73               	incf	(i2printf@len+1)& (0+255),f,b
 20684  010BEA                     i2l1207:
 20685                           
 20686                           ; BSR set to: 0
 20687                           
 20688                           ; BSR set to: 0
 20689  010BEA  5172               	movf	i2printf@len& (0+255),w,b
 20690  010BEC  2574               	addwf	i2printf@cp& (0+255),w,b
 20691  010BEE  6F68               	movwf	??i2_printf& (0+255),b
 20692  010BF0  5173               	movf	(i2printf@len+1)& (0+255),w,b
 20693  010BF2  2175               	addwfc	(i2printf@cp+1)& (0+255),w,b
 20694  010BF4  6F69               	movwf	(??i2_printf+1)& (0+255),b
 20695  010BF6  C068  FFF6         	movff	??i2_printf,tblptrl
 20696  010BFA  C069  FFF7         	movff	??i2_printf+1,tblptrh
 20697  010BFE  0E00               	movlw	low (__mediumconst shr (0+16))
 20698  010C00  6EF8               	movwf	tblptru,c
 20699  010C02  0E0D               	movlw	(high __ramtop+-1)
 20700  010C04  64F7               	cpfsgt	tblptrh,c
 20701  010C06  D003               	bra	i2u1616_47
 20702  010C08  0008               	tblrd		*
 20703  010C0A  50F5               	movf	tablat,w,c
 20704  010C0C  D005               	bra	i2u1616_40
 20705  010C0E                     i2u1616_47:
 20706  010C0E  CFF6 FFE9          	movff	tblptrl,fsr0l
 20707  010C12  CFF7 FFEA          	movff	tblptrh,fsr0h
 20708  010C16  50EF               	movf	indf0,w,c
 20709  010C18                     i2u1616_40:
 20710  010C18  0900               	iorlw	0
 20711  010C1A  A4D8               	btfss	status,2,c
 20712  010C1C  D7E3               	goto	i2l1208
 20713  010C1E                     i2u1617_40:
 20714                           
 20715                           ;doprnt.c: 753: if(prec && prec < len)
 20716                           
 20717                           ;doprnt.c: 750: dostring:
 20718  010C1E  0100               	movlb	0	; () banked
 20719  010C20  5187               	movf	i2printf@prec& (0+255),w,b
 20720  010C22  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 20721  010C24  B4D8               	btfsc	status,2,c
 20722  010C26  D021               	goto	i2l1212
 20723                           
 20724                           ; BSR set to: 0
 20725  010C28  5172               	movf	i2printf@len& (0+255),w,b
 20726  010C2A  5D87               	subwf	i2printf@prec& (0+255),w,b
 20727  010C2C  5173               	movf	(i2printf@len+1)& (0+255),w,b
 20728  010C2E  5988               	subwfb	(i2printf@prec+1)& (0+255),w,b
 20729  010C30  B0D8               	btfsc	status,0,c
 20730  010C32  D01B               	goto	i2l1212
 20731                           
 20732                           ; BSR set to: 0
 20733                           ;doprnt.c: 754: len = prec;
 20734  010C34  C087  F072         	movff	i2printf@prec,i2printf@len
 20735  010C38  C088  F073         	movff	i2printf@prec+1,i2printf@len+1
 20736                           
 20737                           ; BSR set to: 0
 20738                           ;doprnt.c: 767: while(len--)
 20739  010C3C  D016               	goto	i2l1212
 20740  010C3E                     i2l13196:
 20741                           
 20742                           ; BSR set to: 0
 20743                           ;doprnt.c: 768: (putch(*cp++) );
 20744  010C3E  C074  FFF6         	movff	i2printf@cp,tblptrl
 20745  010C42  C075  FFF7         	movff	i2printf@cp+1,tblptrh
 20746  010C46  0E00               	movlw	low (__mediumconst shr (0+16))
 20747  010C48  6EF8               	movwf	tblptru,c
 20748  010C4A  0E0D               	movlw	(high __ramtop+-1)
 20749  010C4C  64F7               	cpfsgt	tblptrh,c
 20750  010C4E  D003               	bra	i2u1620_47
 20751  010C50  0008               	tblrd		*
 20752  010C52  50F5               	movf	tablat,w,c
 20753  010C54  D005               	bra	i2u1620_40
 20754  010C56                     i2u1620_47:
 20755  010C56  CFF6 FFE9          	movff	tblptrl,fsr0l
 20756  010C5A  CFF7 FFEA          	movff	tblptrh,fsr0h
 20757  010C5E  50EF               	movf	indf0,w,c
 20758  010C60                     i2u1620_40:
 20759  010C60  ECD6  F0B3         	call	i2_putch
 20760  010C64  0100               	movlb	0	; () banked
 20761  010C66  4B74               	infsnz	i2printf@cp& (0+255),f,b
 20762  010C68  2B75               	incf	(i2printf@cp+1)& (0+255),f,b
 20763  010C6A                     i2l1212:
 20764                           
 20765                           ; BSR set to: 0
 20766                           
 20767                           ; BSR set to: 0
 20768  010C6A  0772               	decf	i2printf@len& (0+255),f,b
 20769  010C6C  A0D8               	btfss	status,0,c
 20770  010C6E  0773               	decf	(i2printf@len+1)& (0+255),f,b
 20771  010C70  2972               	incf	i2printf@len& (0+255),w,b
 20772  010C72  E1E5               	bnz	i2l13196
 20773  010C74  2973               	incf	(i2printf@len+1)& (0+255),w,b
 20774  010C76  B4D8               	btfsc	status,2,c
 20775  010C78  EF98  F08A         	goto	i2u1660_40
 20776  010C7C  D7E0               	goto	i2l1213
 20777  010C7E                     
 20778                           ; BSR set to: 0
 20779                           ;doprnt.c: 805: cp = (char *)&c;
 20780                           
 20781                           ; BSR set to: 0
 20782  010C7E  0E89               	movlw	low i2printf@c
 20783  010C80  6F74               	movwf	i2printf@cp& (0+255),b
 20784  010C82  0E00               	movlw	high i2printf@c
 20785  010C84  6F75               	movwf	(i2printf@cp+1)& (0+255),b
 20786                           
 20787                           ; BSR set to: 0
 20788                           ;doprnt.c: 806: len = 1;
 20789  010C86  0E00               	movlw	0
 20790  010C88  6F73               	movwf	(i2printf@len+1)& (0+255),b
 20791  010C8A  0E01               	movlw	1
 20792  010C8C  6F72               	movwf	i2printf@len& (0+255),b
 20793                           
 20794                           ;doprnt.c: 807: goto dostring;
 20795  010C8E  D7C7               	goto	i2u1617_40
 20796  010C90                     
 20797                           ; BSR set to: 0
 20798                           ;doprnt.c: 818: flag |= 0xC0;
 20799                           
 20800                           ; BSR set to: 0
 20801  010C90  0EC0               	movlw	192
 20802  010C92  1378               	iorwf	i2printf@flag& (0+255),f,b
 20803                           
 20804                           ; BSR set to: 0
 20805                           ;doprnt.c: 822: }
 20806                           
 20807                           ;doprnt.c: 819: break;
 20808  010C94  D034               	goto	i2l1200
 20809  010C96                     i2l1196:
 20810                           
 20811                           ; BSR set to: 0
 20812  010C96  0100               	movlb	0	; () banked
 20813  010C98  5166               	movf	i2printf@f& (0+255),w,b
 20814  010C9A  6F68               	movwf	??i2_printf& (0+255),b
 20815  010C9C  5167               	movf	(i2printf@f+1)& (0+255),w,b
 20816  010C9E  6F69               	movwf	(??i2_printf+1)& (0+255),b
 20817  010CA0  4B66               	infsnz	i2printf@f& (0+255),f,b
 20818  010CA2  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 20819  010CA4  C068  FFF6         	movff	??i2_printf,tblptrl
 20820  010CA8  C069  FFF7         	movff	??i2_printf+1,tblptrh
 20821  010CAC  0E00               	movlw	low (__mediumconst shr (0+16))
 20822  010CAE  6EF8               	movwf	tblptru,c
 20823  010CB0  0E0D               	movlw	(high __ramtop+-1)
 20824  010CB2  64F7               	cpfsgt	tblptrh,c
 20825  010CB4  D003               	bra	i2u1622_47
 20826  010CB6  0008               	tblrd		*
 20827  010CB8  50F5               	movf	tablat,w,c
 20828  010CBA  D005               	bra	i2u1622_40
 20829  010CBC                     i2u1622_47:
 20830  010CBC  CFF6 FFE9          	movff	tblptrl,fsr0l
 20831  010CC0  CFF7 FFEA          	movff	tblptrh,fsr0h
 20832  010CC4  50EF               	movf	indf0,w,c
 20833  010CC6                     i2u1622_40:
 20834  010CC6  0100               	movlb	0	; () banked
 20835  010CC8  6F89               	movwf	i2printf@c& (0+255),b
 20836  010CCA  5189               	movf	i2printf@c& (0+255),w,b
 20837                           
 20838                           ; Switch size 1, requested type "space"
 20839                           ; Number of cases is 8, Range of values is 0 to 120
 20840                           ; switch strategies available:
 20841                           ; Name         Instructions Cycles
 20842                           ; simple_byte           25    13 (average)
 20843                           ;	Chosen strategy is simple_byte
 20844  010CCC  0A00               	xorlw	0	; case 0
 20845  010CCE  B4D8               	btfsc	status,2,c
 20846  010CD0  0012               	return	
 20847  010CD2  0A58               	xorlw	88	; case 88
 20848  010CD4  B4D8               	btfsc	status,2,c
 20849  010CD6  D76B               	goto	i2l1203
 20850  010CD8  0A3C               	xorlw	60	; case 100
 20851  010CDA  B4D8               	btfsc	status,2,c
 20852  010CDC  D010               	goto	i2l1200
 20853  010CDE  0A02               	xorlw	2	; case 102
 20854  010CE0  B4D8               	btfsc	status,2,c
 20855  010CE2  D763               	goto	i2l1199
 20856  010CE4  0A0F               	xorlw	15	; case 105
 20857  010CE6  B4D8               	btfsc	status,2,c
 20858  010CE8  D00A               	goto	i2l1200
 20859  010CEA  0A1A               	xorlw	26	; case 115
 20860  010CEC  B4D8               	btfsc	status,2,c
 20861  010CEE  D761               	goto	i2l1205
 20862  010CF0  0A06               	xorlw	6	; case 117
 20863  010CF2  B4D8               	btfsc	status,2,c
 20864  010CF4  D7CD               	goto	i2l1216
 20865  010CF6  0A0D               	xorlw	13	; case 120
 20866  010CF8  B4D8               	btfsc	status,2,c
 20867  010CFA  D759               	goto	i2l1203
 20868  010CFC  D7C0               	goto	i2l1215
 20869  010CFE                     i2l1200:
 20870                           
 20871                           ; BSR set to: 0
 20872                           ;doprnt.c: 825: if(flag & (0x700)) {
 20873                           
 20874                           ; BSR set to: 0
 20875  010CFE  0E07               	movlw	7
 20876  010D00  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 20877  010D02  B4D8               	btfsc	status,2,c
 20878  010D04  D2C0               	goto	i2l1217
 20879                           
 20880                           ; BSR set to: 0
 20881                           ;doprnt.c: 827: if(flag & 0x1000)
 20882  010D06  A979               	btfss	(i2printf@flag+1)& (0+255),4,b
 20883  010D08  D004               	goto	i2l1218
 20884                           
 20885                           ; BSR set to: 0
 20886                           ;doprnt.c: 829: prec = 6;
 20887  010D0A  0E00               	movlw	0
 20888  010D0C  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 20889  010D0E  0E06               	movlw	6
 20890  010D10  6F87               	movwf	i2printf@prec& (0+255),b
 20891  010D12                     i2l1218:
 20892                           
 20893                           ; BSR set to: 0
 20894                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 20895                           
 20896                           ; BSR set to: 0
 20897  010D12  C076  FFD9         	movff	i2printf@ap,fsr2l
 20898  010D16  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 20899  010D1A  CFDE F080          	movff	postinc2,i2printf@fval
 20900  010D1E  CFDE F081          	movff	postinc2,i2printf@fval+1
 20901  010D22  CFDD F082          	movff	postdec2,i2printf@fval+2
 20902                           
 20903                           ; BSR set to: 0
 20904  010D26  0E03               	movlw	3
 20905  010D28  2776               	addwf	i2printf@ap& (0+255),f,b
 20906  010D2A  0E00               	movlw	0
 20907  010D2C  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 20908                           
 20909                           ; BSR set to: 0
 20910                           ;doprnt.c: 831: if(fval < 0.0) {
 20911  010D2E  AF82               	btfss	(i2printf@fval+2)& (0+255),7,b
 20912  010D30  D011               	goto	i2l1219
 20913                           
 20914                           ; BSR set to: 0
 20915                           ;doprnt.c: 832: fval = -fval;
 20916  010D32  C080  F024         	movff	i2printf@fval,i2___ftneg@f1
 20917  010D36  C081  F025         	movff	i2printf@fval+1,i2___ftneg@f1+1
 20918  010D3A  C082  F026         	movff	i2printf@fval+2,i2___ftneg@f1+2
 20919  010D3E  ECD2  F0B2         	call	i2___ftneg	;wreg free
 20920  010D42  C024  F080         	movff	?i2___ftneg,i2printf@fval
 20921  010D46  C025  F081         	movff	?i2___ftneg+1,i2printf@fval+1
 20922  010D4A  C026  F082         	movff	?i2___ftneg+2,i2printf@fval+2
 20923                           
 20924                           ;doprnt.c: 833: flag |= 0x03;
 20925  010D4E  0E03               	movlw	3
 20926  010D50  0100               	movlb	0	; () banked
 20927  010D52  1378               	iorwf	i2printf@flag& (0+255),f,b
 20928  010D54                     i2l1219:
 20929                           
 20930                           ; BSR set to: 0
 20931                           ;doprnt.c: 834: }
 20932                           ;doprnt.c: 835: exp = 0;
 20933                           
 20934                           ; BSR set to: 0
 20935  010D54  0E00               	movlw	0
 20936  010D56  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 20937  010D58  0E00               	movlw	0
 20938  010D5A  6F7A               	movwf	i2printf@exp& (0+255),b
 20939                           
 20940                           ; BSR set to: 0
 20941                           ;doprnt.c: 836: if( fval!=0) {
 20942  010D5C  5180               	movf	i2printf@fval& (0+255),w,b
 20943  010D5E  1181               	iorwf	(i2printf@fval+1)& (0+255),w,b
 20944  010D60  1182               	iorwf	(i2printf@fval+2)& (0+255),w,b
 20945  010D62  B4D8               	btfsc	status,2,c
 20946  010D64  D086               	goto	i2l1224
 20947                           
 20948                           ; BSR set to: 0
 20949                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 20950  010D66  0E82               	movlw	130
 20951  010D68  6F68               	movwf	??i2_printf& (0+255),b
 20952  010D6A  0EFF               	movlw	255
 20953  010D6C  6F69               	movwf	(??i2_printf+1)& (0+255),b
 20954  010D6E  C080  F06A         	movff	i2printf@fval,??i2_printf+2
 20955  010D72  C081  F06B         	movff	i2printf@fval+1,??i2_printf+3
 20956  010D76  C082  F06C         	movff	i2printf@fval+2,??i2_printf+4
 20957  010D7A  C083  F06D         	movff	i2printf@fval+3,??i2_printf+5
 20958  010D7E  0E10               	movlw	16
 20959  010D80  D005               	goto	i2u1627_40
 20960  010D82                     i2u1627_45:
 20961  010D82  90D8               	bcf	status,0,c
 20962  010D84  336D               	rrcf	(??i2_printf+5)& (0+255),f,b
 20963  010D86  336C               	rrcf	(??i2_printf+4)& (0+255),f,b
 20964  010D88  336B               	rrcf	(??i2_printf+3)& (0+255),f,b
 20965  010D8A  336A               	rrcf	(??i2_printf+2)& (0+255),f,b
 20966  010D8C                     i2u1627_40:
 20967  010D8C  2EE8               	decfsz	wreg,f,c
 20968  010D8E  D7F9               	goto	i2u1627_45
 20969  010D90  516A               	movf	(??i2_printf+2)& (0+255),w,b
 20970  010D92  2568               	addwf	??i2_printf& (0+255),w,b
 20971  010D94  6F7A               	movwf	i2printf@exp& (0+255),b
 20972  010D96  0E00               	movlw	0
 20973  010D98  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 20974  010D9A  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 20975                           
 20976                           ; BSR set to: 0
 20977                           ;doprnt.c: 838: exp--;
 20978  010D9C  077A               	decf	i2printf@exp& (0+255),f,b
 20979  010D9E  A0D8               	btfss	status,0,c
 20980  010DA0  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 20981                           
 20982                           ; BSR set to: 0
 20983                           ;doprnt.c: 839: exp *= 3;
 20984  010DA2  C07A  F00F         	movff	i2printf@exp,i2___wmul@multiplier
 20985  010DA6  C07B  F010         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 20986  010DAA  0E00               	movlw	0
 20987  010DAC  6E12               	movwf	i2___wmul@multiplicand+1,c
 20988  010DAE  0E03               	movlw	3
 20989  010DB0  6E11               	movwf	i2___wmul@multiplicand,c
 20990  010DB2  ECBF  F0B2         	call	i2___wmul	;wreg free
 20991  010DB6  C00F  F07A         	movff	?i2___wmul,i2printf@exp
 20992  010DBA  C010  F07B         	movff	?i2___wmul+1,i2printf@exp+1
 20993                           
 20994                           ;doprnt.c: 840: exp /= 10;
 20995  010DBE  C07A  F007         	movff	i2printf@exp,i2___awdiv@dividend
 20996  010DC2  C07B  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 20997  010DC6  0E00               	movlw	0
 20998  010DC8  6E0A               	movwf	i2___awdiv@divisor+1,c
 20999  010DCA  0E0A               	movlw	10
 21000  010DCC  6E09               	movwf	i2___awdiv@divisor,c
 21001  010DCE  EC05  F0AC         	call	i2___awdiv	;wreg free
 21002  010DD2  C007  F07A         	movff	?i2___awdiv,i2printf@exp
 21003  010DD6  C008  F07B         	movff	?i2___awdiv+1,i2printf@exp+1
 21004                           
 21005                           ;doprnt.c: 841: if(exp < 0)
 21006  010DDA  0100               	movlb	0	; () banked
 21007  010DDC  AF7B               	btfss	(i2printf@exp+1)& (0+255),7,b
 21008  010DDE  D003               	goto	i2l1221
 21009                           
 21010                           ; BSR set to: 0
 21011                           ;doprnt.c: 842: exp--;
 21012  010DE0  077A               	decf	i2printf@exp& (0+255),f,b
 21013  010DE2  A0D8               	btfss	status,0,c
 21014  010DE4  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 21015  010DE6                     i2l1221:
 21016                           
 21017                           ; BSR set to: 0
 21018                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 21019                           
 21020                           ; BSR set to: 0
 21021  010DE6  517A               	movf	i2printf@exp& (0+255),w,b
 21022  010DE8  0800               	sublw	0
 21023  010DEA  EC5E  F094         	call	i2_scale
 21024  010DEE  C036  F07C         	movff	?i2_scale,i2printf@tmpval
 21025  010DF2  C037  F07D         	movff	?i2_scale+1,i2printf@tmpval+1
 21026  010DF6  C038  F07E         	movff	?i2_scale+2,i2printf@tmpval+2
 21027                           
 21028                           ;doprnt.c: 847: tmpval.integ *= fval;
 21029  010DFA  C07C  F027         	movff	i2printf@tmpval,i2___ftmul@f1
 21030  010DFE  C07D  F028         	movff	i2printf@tmpval+1,i2___ftmul@f1+1
 21031  010E02  C07E  F029         	movff	i2printf@tmpval+2,i2___ftmul@f1+2
 21032  010E06  C080  F02A         	movff	i2printf@fval,i2___ftmul@f2
 21033  010E0A  C081  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 21034  010E0E  C082  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 21035  010E12  ECB8  F0A5         	call	i2___ftmul	;wreg free
 21036  010E16  C027  F07C         	movff	?i2___ftmul,i2printf@tmpval
 21037  010E1A  C028  F07D         	movff	?i2___ftmul+1,i2printf@tmpval+1
 21038  010E1E  C029  F07E         	movff	?i2___ftmul+2,i2printf@tmpval+2
 21039                           
 21040                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 21041  010E22  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 21042  010E26  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 21043  010E2A  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 21044  010E2E  0E00               	movlw	0
 21045  010E30  6E2D               	movwf	i2___ftge@ff2,c
 21046  010E32  0E80               	movlw	128
 21047  010E34  6E2E               	movwf	i2___ftge@ff2+1,c
 21048  010E36  0E3F               	movlw	63
 21049  010E38  6E2F               	movwf	i2___ftge@ff2+2,c
 21050  010E3A  ECAD  F0AA         	call	i2___ftge	;wreg free
 21051  010E3E  B0D8               	btfsc	status,0,c
 21052  010E40  D005               	goto	i2l1222
 21053                           
 21054                           ;doprnt.c: 849: exp--;
 21055  010E42  0100               	movlb	0	; () banked
 21056  010E44  077A               	decf	i2printf@exp& (0+255),f,b
 21057  010E46  A0D8               	btfss	status,0,c
 21058  010E48  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 21059  010E4A  D013               	goto	i2l1224
 21060  010E4C                     i2l1222:
 21061                           
 21062                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 21063                           
 21064                           ; BSR set to: 0
 21065  010E4C  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 21066  010E50  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 21067  010E54  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 21068  010E58  0E00               	movlw	0
 21069  010E5A  6E2D               	movwf	i2___ftge@ff2,c
 21070  010E5C  0E20               	movlw	32
 21071  010E5E  6E2E               	movwf	i2___ftge@ff2+1,c
 21072  010E60  0E41               	movlw	65
 21073  010E62  6E2F               	movwf	i2___ftge@ff2+2,c
 21074  010E64  ECAD  F0AA         	call	i2___ftge	;wreg free
 21075  010E68  A0D8               	btfss	status,0,c
 21076  010E6A  D003               	goto	i2l1224
 21077                           
 21078                           ;doprnt.c: 851: exp++;
 21079  010E6C  0100               	movlb	0	; () banked
 21080  010E6E  4B7A               	infsnz	i2printf@exp& (0+255),f,b
 21081  010E70  2B7B               	incf	(i2printf@exp+1)& (0+255),f,b
 21082  010E72                     i2l1224:
 21083                           
 21084                           ;doprnt.c: 852: }
 21085                           ;doprnt.c: 1112: if(prec <= 12)
 21086                           
 21087                           ; BSR set to: 0
 21088                           
 21089                           ; BSR set to: 0
 21090                           
 21091                           ; BSR set to: 0
 21092  010E72  0100               	movlb	0	; () banked
 21093  010E74  BF88               	btfsc	(i2printf@prec+1)& (0+255),7,b
 21094  010E76  D006               	goto	i2u1631_40
 21095  010E78  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 21096  010E7A  E11B               	bnz	i2l13260
 21097  010E7C  0E0D               	movlw	13
 21098  010E7E  5D87               	subwf	i2printf@prec& (0+255),w,b
 21099  010E80  B0D8               	btfsc	status,0,c
 21100  010E82  D017               	goto	i2l1225
 21101  010E84                     i2u1631_40:
 21102                           
 21103                           ; BSR set to: 0
 21104                           ;doprnt.c: 1113: fval += fround(prec);
 21105  010E84  C080  F040         	movff	i2printf@fval,i2___ftadd@f1
 21106  010E88  C081  F041         	movff	i2printf@fval+1,i2___ftadd@f1+1
 21107  010E8C  C082  F042         	movff	i2printf@fval+2,i2___ftadd@f1+2
 21108  010E90  5187               	movf	i2printf@prec& (0+255),w,b
 21109  010E92  EC84  F099         	call	i2_fround
 21110  010E96  C036  F043         	movff	?i2_fround,i2___ftadd@f2
 21111  010E9A  C037  F044         	movff	?i2_fround+1,i2___ftadd@f2+1
 21112  010E9E  C038  F045         	movff	?i2_fround+2,i2___ftadd@f2+2
 21113  010EA2  ECBE  F09F         	call	i2___ftadd	;wreg free
 21114  010EA6  C040  F080         	movff	?i2___ftadd,i2printf@fval
 21115  010EAA  C041  F081         	movff	?i2___ftadd+1,i2printf@fval+1
 21116  010EAE  C042  F082         	movff	?i2___ftadd+2,i2printf@fval+2
 21117  010EB2                     i2l1225:
 21118  010EB2                     i2l13260:
 21119                           
 21120                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 21121  010EB2  0100               	movlb	0	; () banked
 21122  010EB4  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 21123  010EB6  D006               	goto	i2u1632_40
 21124  010EB8  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 21125  010EBA  E120               	bnz	i2l13268
 21126  010EBC  0E0A               	movlw	10
 21127  010EBE  5D7A               	subwf	i2printf@exp& (0+255),w,b
 21128  010EC0  B0D8               	btfsc	status,0,c
 21129  010EC2  D01C               	goto	i2u1635_40
 21130  010EC4                     i2u1632_40:
 21131                           
 21132                           ; BSR set to: 0
 21133  010EC4  5180               	movf	i2printf@fval& (0+255),w,b
 21134  010EC6  1181               	iorwf	(i2printf@fval+1)& (0+255),w,b
 21135  010EC8  1182               	iorwf	(i2printf@fval+2)& (0+255),w,b
 21136  010ECA  B4D8               	btfsc	status,2,c
 21137  010ECC  D056               	goto	i2l1226
 21138                           
 21139                           ; BSR set to: 0
 21140  010ECE  C080  F03D         	movff	i2printf@fval,i2___fttol@f1
 21141  010ED2  C081  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 21142  010ED6  C082  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 21143  010EDA  EC3E  F0A5         	call	i2___fttol	;wreg free
 21144  010EDE  503D               	movf	?i2___fttol,w,c
 21145  010EE0  103E               	iorwf	?i2___fttol+1,w,c
 21146  010EE2  103F               	iorwf	?i2___fttol+2,w,c
 21147  010EE4  1040               	iorwf	?i2___fttol+3,w,c
 21148  010EE6  A4D8               	btfss	status,2,c
 21149  010EE8  D048               	goto	i2l1226
 21150  010EEA  0100               	movlb	0	; () banked
 21151  010EEC  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 21152  010EEE  D045               	goto	i2l1226
 21153  010EF0  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 21154  010EF2  E104               	bnz	i2l13268
 21155  010EF4  0E02               	movlw	2
 21156  010EF6  5D7A               	subwf	i2printf@exp& (0+255),w,b
 21157  010EF8  A0D8               	btfss	status,0,c
 21158  010EFA  D03F               	goto	i2l1226
 21159  010EFC                     i2u1635_40:
 21160  010EFC                     i2l13268:
 21161                           
 21162                           ; BSR set to: 0
 21163                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 21164  010EFC  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 21165  010F00  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 21166  010F04  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 21167  010F08  0E70               	movlw	112
 21168  010F0A  6E2D               	movwf	i2___ftge@ff2,c
 21169  010F0C  0E89               	movlw	137
 21170  010F0E  6E2E               	movwf	i2___ftge@ff2+1,c
 21171  010F10  0E40               	movlw	64
 21172  010F12  6E2F               	movwf	i2___ftge@ff2+2,c
 21173  010F14  ECAD  F0AA         	call	i2___ftge	;wreg free
 21174  010F18  B0D8               	btfsc	status,0,c
 21175  010F1A  D003               	goto	i2l1229
 21176                           
 21177                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 21178  010F1C  0100               	movlb	0	; () banked
 21179  010F1E  0EF7               	movlw	247
 21180  010F20  D002               	goto	L2
 21181  010F22                     i2l1229:
 21182                           
 21183                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 21184                           
 21185                           ; BSR set to: 0
 21186  010F22  0100               	movlb	0	; () banked
 21187  010F24  0EF8               	movlw	248
 21188  010F26                     L2:
 21189  010F26  277A               	addwf	i2printf@exp& (0+255),f,b
 21190  010F28  0EFF               	movlw	255
 21191  010F2A  237B               	addwfc	(i2printf@exp+1)& (0+255),f,b
 21192                           
 21193                           ; BSR set to: 0
 21194                           ;doprnt.c: 1124: }
 21195                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 21196                           
 21197                           ; BSR set to: 0
 21198  010F2C  517A               	movf	i2printf@exp& (0+255),w,b
 21199  010F2E  EC5E  F094         	call	i2_scale
 21200  010F32  C036  F07C         	movff	?i2_scale,i2printf@tmpval
 21201  010F36  C037  F07D         	movff	?i2_scale+1,i2printf@tmpval+1
 21202  010F3A  C038  F07E         	movff	?i2_scale+2,i2printf@tmpval+2
 21203                           
 21204                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 21205  010F3E  C080  F001         	movff	i2printf@fval,i2__tdiv_to_l_@f1
 21206  010F42  C081  F002         	movff	i2printf@fval+1,i2__tdiv_to_l_@f1+1
 21207  010F46  C082  F003         	movff	i2printf@fval+2,i2__tdiv_to_l_@f1+2
 21208  010F4A  C07C  F004         	movff	i2printf@tmpval,i2__tdiv_to_l_@f2
 21209  010F4E  C07D  F005         	movff	i2printf@tmpval+1,i2__tdiv_to_l_@f2+1
 21210  010F52  C07E  F006         	movff	i2printf@tmpval+2,i2__tdiv_to_l_@f2+2
 21211  010F56  ECF7  F0A1         	call	i2__tdiv_to_l_	;wreg free
 21212  010F5A  C001  F083         	movff	?i2__tdiv_to_l_,i2printf@val
 21213  010F5E  C002  F084         	movff	?i2__tdiv_to_l_+1,i2printf@val+1
 21214  010F62  C003  F085         	movff	?i2__tdiv_to_l_+2,i2printf@val+2
 21215  010F66  C004  F086         	movff	?i2__tdiv_to_l_+3,i2printf@val+3
 21216                           
 21217                           ;doprnt.c: 1129: fval = 0.0;
 21218  010F6A  0E00               	movlw	0
 21219  010F6C  0100               	movlb	0	; () banked
 21220  010F6E  6F80               	movwf	i2printf@fval& (0+255),b
 21221  010F70  0E00               	movlw	0
 21222  010F72  6F81               	movwf	(i2printf@fval+1)& (0+255),b
 21223  010F74  0E00               	movlw	0
 21224  010F76  6F82               	movwf	(i2printf@fval+2)& (0+255),b
 21225                           
 21226                           ;doprnt.c: 1130: } else {
 21227  010F78  D033               	goto	i2l1235
 21228  010F7A                     i2l1226:
 21229                           
 21230                           ;doprnt.c: 1131: val = (unsigned long)fval;
 21231                           
 21232                           ; BSR set to: 0
 21233  010F7A  C080  F03D         	movff	i2printf@fval,i2___fttol@f1
 21234  010F7E  C081  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 21235  010F82  C082  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 21236  010F86  EC3E  F0A5         	call	i2___fttol	;wreg free
 21237  010F8A  C03D  F083         	movff	?i2___fttol,i2printf@val
 21238  010F8E  C03E  F084         	movff	?i2___fttol+1,i2printf@val+1
 21239  010F92  C03F  F085         	movff	?i2___fttol+2,i2printf@val+2
 21240  010F96  C040  F086         	movff	?i2___fttol+3,i2printf@val+3
 21241                           
 21242                           ;doprnt.c: 1132: fval -= (double)val;
 21243  010F9A  C080  F060         	movff	i2printf@fval,i2___ftsub@f1
 21244  010F9E  C081  F061         	movff	i2printf@fval+1,i2___ftsub@f1+1
 21245  010FA2  C082  F062         	movff	i2printf@fval+2,i2___ftsub@f1+2
 21246  010FA6  C083  F009         	movff	i2printf@val,i2___lltoft@c
 21247  010FAA  C084  F00A         	movff	i2printf@val+1,i2___lltoft@c+1
 21248  010FAE  C085  F00B         	movff	i2printf@val+2,i2___lltoft@c+2
 21249  010FB2  C086  F00C         	movff	i2printf@val+3,i2___lltoft@c+3
 21250  010FB6  EC6A  F0AF         	call	i2___lltoft	;wreg free
 21251  010FBA  C009  F063         	movff	?i2___lltoft,i2___ftsub@f2
 21252  010FBE  C00A  F064         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 21253  010FC2  C00B  F065         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 21254  010FC6  EC34  F0B1         	call	i2___ftsub	;wreg free
 21255  010FCA  C060  F080         	movff	?i2___ftsub,i2printf@fval
 21256  010FCE  C061  F081         	movff	?i2___ftsub+1,i2printf@fval+1
 21257  010FD2  C062  F082         	movff	?i2___ftsub+2,i2printf@fval+2
 21258                           
 21259                           ;doprnt.c: 1133: exp = 0;
 21260  010FD6  0E00               	movlw	0
 21261  010FD8  0100               	movlb	0	; () banked
 21262  010FDA  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 21263  010FDC  0E00               	movlw	0
 21264  010FDE  6F7A               	movwf	i2printf@exp& (0+255),b
 21265  010FE0                     i2l1235:
 21266                           
 21267                           ; BSR set to: 0
 21268                           ;doprnt.c: 1134: }
 21269                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 21270                           
 21271                           ; BSR set to: 0
 21272  010FE0  0E01               	movlw	1
 21273  010FE2  6F89               	movwf	i2printf@c& (0+255),b
 21274  010FE4                     i2l13288:
 21275                           
 21276                           ; BSR set to: 0
 21277  010FE4  0E0A               	movlw	10
 21278  010FE6  1989               	xorwf	i2printf@c& (0+255),w,b
 21279  010FE8  B4D8               	btfsc	status,2,c
 21280  010FEA  D01B               	goto	i2u1639_40
 21281                           
 21282                           ; BSR set to: 0
 21283                           ;doprnt.c: 1137: if(val < dpowers[c])
 21284                           
 21285                           ; BSR set to: 0
 21286                           
 21287                           ; BSR set to: 0
 21288  010FEC  5189               	movf	i2printf@c& (0+255),w,b
 21289  010FEE  0D04               	mullw	4
 21290  010FF0  0EB5               	movlw	low _dpowers
 21291  010FF2  24F3               	addwf	prodl,w,c
 21292  010FF4  6EF6               	movwf	tblptrl,c
 21293  010FF6  0EF0               	movlw	high _dpowers
 21294  010FF8  20F4               	addwfc	prodh,w,c
 21295  010FFA  6EF7               	movwf	tblptrh,c
 21296  010FFC                     	if	1	;There are 3 active tblptr bytes
 21297  010FFC  6AF8               	clrf	tblptru,c
 21298  010FFE  0E00               	movlw	low (__mediumconst shr (0+16))
 21299  011000  22F8               	addwfc	tblptru,f,c
 21300  011002                     	endif
 21301  011002  0009               	tblrd		*+
 21302  011004  50F5               	movf	tablat,w,c
 21303  011006  5D83               	subwf	i2printf@val& (0+255),w,b
 21304  011008  0009               	tblrd		*+
 21305  01100A  50F5               	movf	tablat,w,c
 21306  01100C  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 21307  01100E  0009               	tblrd		*+
 21308  011010  50F5               	movf	tablat,w,c
 21309  011012  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 21310  011014  0009               	tblrd		*+
 21311  011016  50F5               	movf	tablat,w,c
 21312  011018  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 21313  01101A  A0D8               	btfss	status,0,c
 21314  01101C  D002               	goto	i2u1639_40
 21315                           
 21316                           ; BSR set to: 0
 21317                           
 21318                           ; BSR set to: 0
 21319                           
 21320                           ; BSR set to: 0
 21321                           ;doprnt.c: 1138: break;
 21322  01101E  2B89               	incf	i2printf@c& (0+255),f,b
 21323  011020  D7E1               	goto	i2l13288
 21324  011022                     i2u1639_40:
 21325                           
 21326                           ; BSR set to: 0
 21327                           ;doprnt.c: 1175: {
 21328                           ;doprnt.c: 1188: if(flag & 0x03)
 21329                           
 21330                           ; BSR set to: 0
 21331  011022  0E03               	movlw	3
 21332  011024  1578               	andwf	i2printf@flag& (0+255),w,b
 21333  011026  6F68               	movwf	??i2_printf& (0+255),b
 21334  011028  0E00               	movlw	0
 21335  01102A  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 21336  01102C  6F69               	movwf	(??i2_printf+1)& (0+255),b
 21337  01102E  5168               	movf	??i2_printf& (0+255),w,b
 21338  011030  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 21339  011032  B4D8               	btfsc	status,2,c
 21340  011034  D04D               	goto	i2l1240
 21341                           
 21342                           ; BSR set to: 0
 21343                           ;doprnt.c: 1190: (putch('-') );
 21344  011036  0E2D               	movlw	45
 21345  011038  ECD6  F0B3         	call	i2_putch
 21346                           
 21347                           ;doprnt.c: 1195: }
 21348                           ;doprnt.c: 1196: while(c--) {
 21349  01103C  D049               	goto	i2l1240
 21350  01103E                     
 21351                           ;doprnt.c: 1200: {
 21352                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 21353  01103E  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 21354  011042  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 21355  011046  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 21356  01104A  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 21357  01104E  0100               	movlb	0	; () banked
 21358  011050  5189               	movf	i2printf@c& (0+255),w,b
 21359  011052  0D04               	mullw	4
 21360  011054  0EB5               	movlw	low _dpowers
 21361  011056  24F3               	addwf	prodl,w,c
 21362  011058  6EF6               	movwf	tblptrl,c
 21363  01105A  0EF0               	movlw	high _dpowers
 21364  01105C  20F4               	addwfc	prodh,w,c
 21365  01105E  6EF7               	movwf	tblptrh,c
 21366  011060                     	if	1	;There are 3 active tblptr bytes
 21367  011060  6AF8               	clrf	tblptru,c
 21368  011062  0E00               	movlw	low (__mediumconst shr (0+16))
 21369  011064  22F8               	addwfc	tblptru,f,c
 21370  011066                     	endif
 21371  011066  0009               	tblrd		*+
 21372  011068  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 21373  01106C  0009               	tblrd		*+
 21374  01106E  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 21375  011072  0009               	tblrd		*+
 21376  011074  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 21377  011078  000A               	tblrd		*-
 21378  01107A  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 21379  01107E  EC47  F0AC         	call	i2___lldiv	;wreg free
 21380  011082  C001  F07C         	movff	?i2___lldiv,i2printf@tmpval
 21381  011086  C002  F07D         	movff	?i2___lldiv+1,i2printf@tmpval+1
 21382  01108A  C003  F07E         	movff	?i2___lldiv+2,i2printf@tmpval+2
 21383  01108E  C004  F07F         	movff	?i2___lldiv+3,i2printf@tmpval+3
 21384                           
 21385                           ;doprnt.c: 1202: tmpval.vd %= 10;
 21386  011092  C07C  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 21387  011096  C07D  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 21388  01109A  C07E  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 21389  01109E  C07F  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 21390  0110A2  0E0A               	movlw	10
 21391  0110A4  6E12               	movwf	i2___llmod@divisor,c
 21392  0110A6  0E00               	movlw	0
 21393  0110A8  6E13               	movwf	i2___llmod@divisor+1,c
 21394  0110AA  0E00               	movlw	0
 21395  0110AC  6E14               	movwf	i2___llmod@divisor+2,c
 21396  0110AE  0E00               	movlw	0
 21397  0110B0  6E15               	movwf	i2___llmod@divisor+3,c
 21398  0110B2  EC47  F0AE         	call	i2___llmod	;wreg free
 21399  0110B6  C00E  F07C         	movff	?i2___llmod,i2printf@tmpval
 21400  0110BA  C00F  F07D         	movff	?i2___llmod+1,i2printf@tmpval+1
 21401  0110BE  C010  F07E         	movff	?i2___llmod+2,i2printf@tmpval+2
 21402  0110C2  C011  F07F         	movff	?i2___llmod+3,i2printf@tmpval+3
 21403                           
 21404                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 21405  0110C6  0100               	movlb	0	; () banked
 21406  0110C8  517C               	movf	i2printf@tmpval& (0+255),w,b
 21407  0110CA  0F30               	addlw	48
 21408  0110CC  ECD6  F0B3         	call	i2_putch
 21409  0110D0                     i2l1240:
 21410  0110D0  0100               	movlb	0	; () banked
 21411  0110D2  0789               	decf	i2printf@c& (0+255),f,b
 21412  0110D4  2989               	incf	i2printf@c& (0+255),w,b
 21413  0110D6  B4D8               	btfsc	status,2,c
 21414  0110D8  D008               	goto	i2l1243
 21415  0110DA  D7B1               	goto	i2l1241
 21416  0110DC                     i2l13312:
 21417                           
 21418                           ; BSR set to: 0
 21419                           ;doprnt.c: 1208: (putch('0') );
 21420  0110DC  0E30               	movlw	48
 21421  0110DE  ECD6  F0B3         	call	i2_putch
 21422                           
 21423                           ;doprnt.c: 1209: exp--;
 21424  0110E2  0100               	movlb	0	; () banked
 21425  0110E4  077A               	decf	i2printf@exp& (0+255),f,b
 21426  0110E6  A0D8               	btfss	status,0,c
 21427  0110E8  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 21428  0110EA                     i2l1243:
 21429                           
 21430                           ; BSR set to: 0
 21431                           
 21432                           ; BSR set to: 0
 21433  0110EA  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 21434  0110EC  D005               	goto	i2u1642_40
 21435  0110EE  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 21436  0110F0  E1F5               	bnz	i2l13312
 21437  0110F2  057A               	decf	i2printf@exp& (0+255),w,b
 21438  0110F4  B0D8               	btfsc	status,0,c
 21439  0110F6  D7F2               	goto	i2l1244
 21440  0110F8                     i2u1642_40:
 21441                           
 21442                           ; BSR set to: 0
 21443                           ;doprnt.c: 1210: }
 21444                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 21445                           
 21446                           ; BSR set to: 0
 21447  0110F8  BF88               	btfsc	(i2printf@prec+1)& (0+255),7,b
 21448  0110FA  D009               	goto	i2l1246
 21449  0110FC  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 21450  0110FE  E104               	bnz	i2u1643_40
 21451  011100  0E09               	movlw	9
 21452  011102  5D87               	subwf	i2printf@prec& (0+255),w,b
 21453  011104  A0D8               	btfss	status,0,c
 21454  011106  D003               	goto	i2l1246
 21455  011108                     i2u1643_40:
 21456                           
 21457                           ; BSR set to: 0
 21458                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 21459  011108  0E08               	movlw	8
 21460  01110A  6F89               	movwf	i2printf@c& (0+255),b
 21461  01110C  D002               	goto	i2l1247
 21462  01110E                     i2l1246:
 21463                           
 21464                           ; BSR set to: 0
 21465                           ;doprnt.c: 1213: else
 21466                           ;doprnt.c: 1214: c = prec;
 21467  01110E  C087  F089         	movff	i2printf@prec,i2printf@c
 21468  011112                     i2l1247:
 21469                           
 21470                           ; BSR set to: 0
 21471                           ;doprnt.c: 1215: prec -= c;
 21472                           
 21473                           ; BSR set to: 0
 21474  011112  5189               	movf	i2printf@c& (0+255),w,b
 21475  011114  5F87               	subwf	i2printf@prec& (0+255),f,b
 21476  011116  0E00               	movlw	0
 21477  011118  BF89               	btfsc	i2printf@c& (0+255),7,b
 21478  01111A  0EFF               	movlw	255
 21479  01111C  5B88               	subwfb	(i2printf@prec+1)& (0+255),f,b
 21480                           
 21481                           ; BSR set to: 0
 21482                           ;doprnt.c: 1219: if(c)
 21483  01111E  5189               	movf	i2printf@c& (0+255),w,b
 21484  011120  B4D8               	btfsc	status,2,c
 21485  011122  D003               	goto	i2l1248
 21486                           
 21487                           ; BSR set to: 0
 21488                           ;doprnt.c: 1221: (putch('.') );
 21489  011124  0E2E               	movlw	46
 21490  011126  ECD6  F0B3         	call	i2_putch
 21491  01112A                     i2l1248:
 21492                           
 21493                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 21494  01112A  0100               	movlb	0	; () banked
 21495  01112C  5189               	movf	i2printf@c& (0+255),w,b
 21496  01112E  EC5E  F094         	call	i2_scale
 21497  011132  C036  F06E         	movff	?i2_scale,i2_printf$3532
 21498  011136  C037  F06F         	movff	?i2_scale+1,i2_printf$3532+1
 21499  01113A  C038  F070         	movff	?i2_scale+2,i2_printf$3532+2
 21500                           
 21501                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 21502  01113E  C080  F02A         	movff	i2printf@fval,i2___ftmul@f2
 21503  011142  C081  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 21504  011146  C082  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 21505  01114A  C06E  F027         	movff	i2_printf$3532,i2___ftmul@f1
 21506  01114E  C06F  F028         	movff	i2_printf$3532+1,i2___ftmul@f1+1
 21507  011152  C070  F029         	movff	i2_printf$3532+2,i2___ftmul@f1+2
 21508  011156  ECB8  F0A5         	call	i2___ftmul	;wreg free
 21509  01115A  C027  F03D         	movff	?i2___ftmul,i2___fttol@f1
 21510  01115E  C028  F03E         	movff	?i2___ftmul+1,i2___fttol@f1+1
 21511  011162  C029  F03F         	movff	?i2___ftmul+2,i2___fttol@f1+2
 21512  011166  EC3E  F0A5         	call	i2___fttol	;wreg free
 21513  01116A  C03D  F083         	movff	?i2___fttol,i2printf@val
 21514  01116E  C03E  F084         	movff	?i2___fttol+1,i2printf@val+1
 21515  011172  C03F  F085         	movff	?i2___fttol+2,i2printf@val+2
 21516  011176  C040  F086         	movff	?i2___fttol+3,i2printf@val+3
 21517                           
 21518                           ;doprnt.c: 1228: while(c--) {
 21519  01117A  D073               	goto	i2l1249
 21520  01117C                     
 21521                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 21522  01117C  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 21523  011180  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 21524  011184  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 21525  011188  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 21526  01118C  0100               	movlb	0	; () banked
 21527  01118E  5189               	movf	i2printf@c& (0+255),w,b
 21528  011190  0D04               	mullw	4
 21529  011192  0EB5               	movlw	low _dpowers
 21530  011194  24F3               	addwf	prodl,w,c
 21531  011196  6EF6               	movwf	tblptrl,c
 21532  011198  0EF0               	movlw	high _dpowers
 21533  01119A  20F4               	addwfc	prodh,w,c
 21534  01119C  6EF7               	movwf	tblptrh,c
 21535  01119E                     	if	1	;There are 3 active tblptr bytes
 21536  01119E  6AF8               	clrf	tblptru,c
 21537  0111A0  0E00               	movlw	low (__mediumconst shr (0+16))
 21538  0111A2  22F8               	addwfc	tblptru,f,c
 21539  0111A4                     	endif
 21540  0111A4  0009               	tblrd		*+
 21541  0111A6  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 21542  0111AA  0009               	tblrd		*+
 21543  0111AC  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 21544  0111B0  0009               	tblrd		*+
 21545  0111B2  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 21546  0111B6  000A               	tblrd		*-
 21547  0111B8  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 21548  0111BC  EC47  F0AC         	call	i2___lldiv	;wreg free
 21549  0111C0  C001  F07C         	movff	?i2___lldiv,i2printf@tmpval
 21550  0111C4  C002  F07D         	movff	?i2___lldiv+1,i2printf@tmpval+1
 21551  0111C8  C003  F07E         	movff	?i2___lldiv+2,i2printf@tmpval+2
 21552  0111CC  C004  F07F         	movff	?i2___lldiv+3,i2printf@tmpval+3
 21553                           
 21554                           ;doprnt.c: 1230: tmpval.vd %= 10;
 21555  0111D0  C07C  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 21556  0111D4  C07D  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 21557  0111D8  C07E  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 21558  0111DC  C07F  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 21559  0111E0  0E0A               	movlw	10
 21560  0111E2  6E12               	movwf	i2___llmod@divisor,c
 21561  0111E4  0E00               	movlw	0
 21562  0111E6  6E13               	movwf	i2___llmod@divisor+1,c
 21563  0111E8  0E00               	movlw	0
 21564  0111EA  6E14               	movwf	i2___llmod@divisor+2,c
 21565  0111EC  0E00               	movlw	0
 21566  0111EE  6E15               	movwf	i2___llmod@divisor+3,c
 21567  0111F0  EC47  F0AE         	call	i2___llmod	;wreg free
 21568  0111F4  C00E  F07C         	movff	?i2___llmod,i2printf@tmpval
 21569  0111F8  C00F  F07D         	movff	?i2___llmod+1,i2printf@tmpval+1
 21570  0111FC  C010  F07E         	movff	?i2___llmod+2,i2printf@tmpval+2
 21571  011200  C011  F07F         	movff	?i2___llmod+3,i2printf@tmpval+3
 21572                           
 21573                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 21574  011204  0100               	movlb	0	; () banked
 21575  011206  517C               	movf	i2printf@tmpval& (0+255),w,b
 21576  011208  0F30               	addlw	48
 21577  01120A  ECD6  F0B3         	call	i2_putch
 21578                           
 21579                           ;doprnt.c: 1232: val %= dpowers[c];
 21580  01120E  C083  F00E         	movff	i2printf@val,i2___llmod@dividend
 21581  011212  C084  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 21582  011216  C085  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 21583  01121A  C086  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 21584  01121E  0100               	movlb	0	; () banked
 21585  011220  5189               	movf	i2printf@c& (0+255),w,b
 21586  011222  0D04               	mullw	4
 21587  011224  0EB5               	movlw	low _dpowers
 21588  011226  24F3               	addwf	prodl,w,c
 21589  011228  6EF6               	movwf	tblptrl,c
 21590  01122A  0EF0               	movlw	high _dpowers
 21591  01122C  20F4               	addwfc	prodh,w,c
 21592  01122E  6EF7               	movwf	tblptrh,c
 21593  011230                     	if	1	;There are 3 active tblptr bytes
 21594  011230  6AF8               	clrf	tblptru,c
 21595  011232  0E00               	movlw	low (__mediumconst shr (0+16))
 21596  011234  22F8               	addwfc	tblptru,f,c
 21597  011236                     	endif
 21598  011236  0009               	tblrd		*+
 21599  011238  CFF5 F012          	movff	tablat,i2___llmod@divisor
 21600  01123C  0009               	tblrd		*+
 21601  01123E  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 21602  011242  0009               	tblrd		*+
 21603  011244  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 21604  011248  000A               	tblrd		*-
 21605  01124A  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 21606  01124E  EC47  F0AE         	call	i2___llmod	;wreg free
 21607  011252  C00E  F083         	movff	?i2___llmod,i2printf@val
 21608  011256  C00F  F084         	movff	?i2___llmod+1,i2printf@val+1
 21609  01125A  C010  F085         	movff	?i2___llmod+2,i2printf@val+2
 21610  01125E  C011  F086         	movff	?i2___llmod+3,i2printf@val+3
 21611  011262                     i2l1249:
 21612  011262  0100               	movlb	0	; () banked
 21613  011264  0789               	decf	i2printf@c& (0+255),f,b
 21614  011266  2989               	incf	i2printf@c& (0+255),w,b
 21615  011268  B4D8               	btfsc	status,2,c
 21616  01126A  D008               	goto	i2l1252
 21617  01126C  D787               	goto	i2l1250
 21618  01126E                     
 21619                           ; BSR set to: 0
 21620                           ;doprnt.c: 1236: (putch('0') );
 21621                           
 21622                           ; BSR set to: 0
 21623  01126E  0E30               	movlw	48
 21624  011270  ECD6  F0B3         	call	i2_putch
 21625                           
 21626                           ;doprnt.c: 1237: prec--;
 21627  011274  0100               	movlb	0	; () banked
 21628  011276  0787               	decf	i2printf@prec& (0+255),f,b
 21629  011278  A0D8               	btfss	status,0,c
 21630  01127A  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 21631  01127C                     i2l1252:
 21632                           
 21633                           ; BSR set to: 0
 21634                           
 21635                           ; BSR set to: 0
 21636  01127C  5187               	movf	i2printf@prec& (0+255),w,b
 21637  01127E  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 21638  011280  B4D8               	btfsc	status,2,c
 21639  011282  D156               	goto	i2u1660_40
 21640  011284  D7F4               	goto	i2l1253
 21641  011286                     i2l1217:
 21642                           
 21643                           ; BSR set to: 0
 21644                           ;doprnt.c: 1246: }
 21645                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 21646                           
 21647                           ; BSR set to: 0
 21648  011286  0EC0               	movlw	192
 21649  011288  1578               	andwf	i2printf@flag& (0+255),w,b
 21650  01128A  6F68               	movwf	??i2_printf& (0+255),b
 21651  01128C  0E00               	movlw	0
 21652  01128E  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 21653  011290  6F69               	movwf	(??i2_printf+1)& (0+255),b
 21654  011292  5168               	movf	??i2_printf& (0+255),w,b
 21655  011294  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 21656  011296  A4D8               	btfss	status,2,c
 21657  011298  D01E               	goto	i2l1255
 21658                           
 21659                           ; BSR set to: 0
 21660                           ;doprnt.c: 1253: {
 21661                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 21662  01129A  C076  FFD9         	movff	i2printf@ap,fsr2l
 21663  01129E  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 21664  0112A2  CFDE F083          	movff	postinc2,i2printf@val
 21665  0112A6  CFDD F084          	movff	postdec2,i2printf@val+1
 21666  0112AA  0E00               	movlw	0
 21667  0112AC  BF84               	btfsc	(i2printf@val+1)& (0+255),7,b
 21668  0112AE  0EFF               	movlw	-1
 21669  0112B0  6F85               	movwf	(i2printf@val+2)& (0+255),b
 21670  0112B2  6F86               	movwf	(i2printf@val+3)& (0+255),b
 21671                           
 21672                           ; BSR set to: 0
 21673  0112B4  0E02               	movlw	2
 21674  0112B6  2776               	addwf	i2printf@ap& (0+255),f,b
 21675  0112B8  0E00               	movlw	0
 21676  0112BA  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 21677                           
 21678                           ; BSR set to: 0
 21679                           ;doprnt.c: 1261: if((long)val < 0) {
 21680  0112BC  AF86               	btfss	(i2printf@val+3)& (0+255),7,b
 21681  0112BE  D01D               	goto	i2l1257
 21682                           
 21683                           ; BSR set to: 0
 21684                           ;doprnt.c: 1262: flag |= 0x03;
 21685  0112C0  0E03               	movlw	3
 21686  0112C2  1378               	iorwf	i2printf@flag& (0+255),f,b
 21687                           
 21688                           ; BSR set to: 0
 21689                           ;doprnt.c: 1263: val = -val;
 21690  0112C4  1F86               	comf	(i2printf@val+3)& (0+255),f,b
 21691  0112C6  1F85               	comf	(i2printf@val+2)& (0+255),f,b
 21692  0112C8  1F84               	comf	(i2printf@val+1)& (0+255),f,b
 21693  0112CA  6D83               	negf	i2printf@val& (0+255),b
 21694  0112CC  0E00               	movlw	0
 21695  0112CE  2384               	addwfc	(i2printf@val+1)& (0+255),f,b
 21696  0112D0  2385               	addwfc	(i2printf@val+2)& (0+255),f,b
 21697  0112D2  2386               	addwfc	(i2printf@val+3)& (0+255),f,b
 21698                           
 21699                           ; BSR set to: 0
 21700                           ;doprnt.c: 1264: }
 21701                           ;doprnt.c: 1266: }
 21702  0112D4  D012               	goto	i2l1257
 21703  0112D6                     i2l1255:
 21704                           
 21705                           ; BSR set to: 0
 21706                           ;doprnt.c: 1268: else
 21707                           ;doprnt.c: 1273: {
 21708                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 21709                           
 21710                           ; BSR set to: 0
 21711  0112D6  C076  FFD9         	movff	i2printf@ap,fsr2l
 21712  0112DA  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 21713  0112DE  CFDE F068          	movff	postinc2,??i2_printf
 21714  0112E2  CFDD F069          	movff	postdec2,??i2_printf+1
 21715  0112E6  C068  F083         	movff	??i2_printf,i2printf@val
 21716  0112EA  C069  F084         	movff	??i2_printf+1,i2printf@val+1
 21717  0112EE  6B85               	clrf	(i2printf@val+2)& (0+255),b
 21718  0112F0  6B86               	clrf	(i2printf@val+3)& (0+255),b
 21719                           
 21720                           ; BSR set to: 0
 21721  0112F2  0E02               	movlw	2
 21722  0112F4  2776               	addwf	i2printf@ap& (0+255),f,b
 21723  0112F6  0E00               	movlw	0
 21724  0112F8  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 21725  0112FA                     i2l1257:
 21726                           
 21727                           ; BSR set to: 0
 21728                           ;doprnt.c: 1287: }
 21729                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 21730                           
 21731                           ; BSR set to: 0
 21732  0112FA  5187               	movf	i2printf@prec& (0+255),w,b
 21733  0112FC  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 21734  0112FE  A4D8               	btfss	status,2,c
 21735  011300  D04B               	goto	i2l1259
 21736                           
 21737                           ; BSR set to: 0
 21738  011302  5183               	movf	i2printf@val& (0+255),w,b
 21739  011304  1184               	iorwf	(i2printf@val+1)& (0+255),w,b
 21740  011306  1185               	iorwf	(i2printf@val+2)& (0+255),w,b
 21741  011308  1186               	iorwf	(i2printf@val+3)& (0+255),w,b
 21742  01130A  A4D8               	btfss	status,2,c
 21743  01130C  D045               	goto	i2l1259
 21744                           
 21745                           ; BSR set to: 0
 21746                           ;doprnt.c: 1291: prec++;
 21747  01130E  4B87               	infsnz	i2printf@prec& (0+255),f,b
 21748  011310  2B88               	incf	(i2printf@prec+1)& (0+255),f,b
 21749                           
 21750                           ; BSR set to: 0
 21751                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 21752  011312  D042               	goto	i2l1259
 21753  011314                     
 21754                           ; BSR set to: 0
 21755                           ;doprnt.c: 1302: case 0xC0:
 21756                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 21757                           
 21758                           ; BSR set to: 0
 21759                           
 21760                           ; BSR set to: 0
 21761  011314  0E01               	movlw	1
 21762  011316  6F89               	movwf	i2printf@c& (0+255),b
 21763  011318                     i2l13372:
 21764                           
 21765                           ; BSR set to: 0
 21766  011318  0E0A               	movlw	10
 21767  01131A  1989               	xorwf	i2printf@c& (0+255),w,b
 21768  01131C  B4D8               	btfsc	status,2,c
 21769  01131E  D047               	goto	i2l1265
 21770                           
 21771                           ; BSR set to: 0
 21772                           ;doprnt.c: 1306: if(val < dpowers[c])
 21773                           
 21774                           ; BSR set to: 0
 21775                           
 21776                           ; BSR set to: 0
 21777  011320  5189               	movf	i2printf@c& (0+255),w,b
 21778  011322  0D04               	mullw	4
 21779  011324  0EB5               	movlw	low _dpowers
 21780  011326  24F3               	addwf	prodl,w,c
 21781  011328  6EF6               	movwf	tblptrl,c
 21782  01132A  0EF0               	movlw	high _dpowers
 21783  01132C  20F4               	addwfc	prodh,w,c
 21784  01132E  6EF7               	movwf	tblptrh,c
 21785  011330                     	if	1	;There are 3 active tblptr bytes
 21786  011330  6AF8               	clrf	tblptru,c
 21787  011332  0E00               	movlw	low (__mediumconst shr (0+16))
 21788  011334  22F8               	addwfc	tblptru,f,c
 21789  011336                     	endif
 21790  011336  0009               	tblrd		*+
 21791  011338  50F5               	movf	tablat,w,c
 21792  01133A  5D83               	subwf	i2printf@val& (0+255),w,b
 21793  01133C  0009               	tblrd		*+
 21794  01133E  50F5               	movf	tablat,w,c
 21795  011340  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 21796  011342  0009               	tblrd		*+
 21797  011344  50F5               	movf	tablat,w,c
 21798  011346  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 21799  011348  0009               	tblrd		*+
 21800  01134A  50F5               	movf	tablat,w,c
 21801  01134C  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 21802  01134E  A0D8               	btfss	status,0,c
 21803  011350  D02E               	goto	i2l1265
 21804                           
 21805                           ; BSR set to: 0
 21806                           
 21807                           ; BSR set to: 0
 21808                           
 21809                           ; BSR set to: 0
 21810                           ;doprnt.c: 1307: break;
 21811  011352  2B89               	incf	i2printf@c& (0+255),f,b
 21812  011354  D7E1               	goto	i2l13372
 21813  011356                     
 21814                           ; BSR set to: 0
 21815                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 21816                           
 21817                           ; BSR set to: 0
 21818  011356  0E01               	movlw	1
 21819  011358  6F89               	movwf	i2printf@c& (0+255),b
 21820  01135A                     i2l13386:
 21821                           
 21822                           ; BSR set to: 0
 21823  01135A  0E08               	movlw	8
 21824  01135C  1989               	xorwf	i2printf@c& (0+255),w,b
 21825  01135E  B4D8               	btfsc	status,2,c
 21826  011360  D026               	goto	i2l1265
 21827                           
 21828                           ; BSR set to: 0
 21829                           ;doprnt.c: 1317: if(val < hexpowers[c])
 21830                           
 21831                           ; BSR set to: 0
 21832                           
 21833                           ; BSR set to: 0
 21834  011362  5189               	movf	i2printf@c& (0+255),w,b
 21835  011364  0D04               	mullw	4
 21836  011366  0E2B               	movlw	low _hexpowers
 21837  011368  24F3               	addwf	prodl,w,c
 21838  01136A  6EF6               	movwf	tblptrl,c
 21839  01136C  0EF1               	movlw	high _hexpowers
 21840  01136E  20F4               	addwfc	prodh,w,c
 21841  011370  6EF7               	movwf	tblptrh,c
 21842  011372                     	if	1	;There are 3 active tblptr bytes
 21843  011372  6AF8               	clrf	tblptru,c
 21844  011374  0E00               	movlw	low (__mediumconst shr (0+16))
 21845  011376  22F8               	addwfc	tblptru,f,c
 21846  011378                     	endif
 21847  011378  0009               	tblrd		*+
 21848  01137A  50F5               	movf	tablat,w,c
 21849  01137C  5D83               	subwf	i2printf@val& (0+255),w,b
 21850  01137E  0009               	tblrd		*+
 21851  011380  50F5               	movf	tablat,w,c
 21852  011382  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 21853  011384  0009               	tblrd		*+
 21854  011386  50F5               	movf	tablat,w,c
 21855  011388  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 21856  01138A  0009               	tblrd		*+
 21857  01138C  50F5               	movf	tablat,w,c
 21858  01138E  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 21859  011390  A0D8               	btfss	status,0,c
 21860  011392  D00D               	goto	i2l1265
 21861                           
 21862                           ; BSR set to: 0
 21863                           
 21864                           ; BSR set to: 0
 21865                           
 21866                           ; BSR set to: 0
 21867                           ;doprnt.c: 1318: break;
 21868  011394  2B89               	incf	i2printf@c& (0+255),f,b
 21869  011396  D7E1               	goto	i2l13386
 21870  011398                     i2l1259:
 21871                           
 21872                           ; BSR set to: 0
 21873                           
 21874                           ; BSR set to: 0
 21875  011398  5178               	movf	i2printf@flag& (0+255),w,b
 21876  01139A  0BC0               	andlw	192
 21877                           
 21878                           ; Switch size 1, requested type "space"
 21879                           ; Number of cases is 3, Range of values is 0 to 192
 21880                           ; switch strategies available:
 21881                           ; Name         Instructions Cycles
 21882                           ; simple_byte           10     6 (average)
 21883                           ;	Chosen strategy is simple_byte
 21884  01139C  0A00               	xorlw	0	; case 0
 21885  01139E  B4D8               	btfsc	status,2,c
 21886  0113A0  D7B9               	goto	i2l1260
 21887  0113A2  0A80               	xorlw	128	; case 128
 21888  0113A4  B4D8               	btfsc	status,2,c
 21889  0113A6  D7D7               	goto	i2l1266
 21890  0113A8  0A40               	xorlw	64	; case 192
 21891  0113AA  B4D8               	btfsc	status,2,c
 21892  0113AC  D7B3               	goto	i2l1260
 21893  0113AE                     i2l1265:
 21894                           
 21895                           ; BSR set to: 0
 21896                           ;doprnt.c: 1339: if(c < prec)
 21897                           
 21898                           ; BSR set to: 0
 21899  0113AE  0E80               	movlw	128
 21900  0113B0  BF89               	btfsc	i2printf@c& (0+255),7,b
 21901  0113B2  0E7F               	movlw	127
 21902  0113B4  6F68               	movwf	??i2_printf& (0+255),b
 21903  0113B6  5187               	movf	i2printf@prec& (0+255),w,b
 21904  0113B8  5D89               	subwf	i2printf@c& (0+255),w,b
 21905  0113BA  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 21906  0113BC  0A80               	xorlw	128
 21907  0113BE  5968               	subwfb	??i2_printf& (0+255),w,b
 21908  0113C0  B0D8               	btfsc	status,0,c
 21909  0113C2  D003               	goto	i2l1270
 21910                           
 21911                           ; BSR set to: 0
 21912                           ;doprnt.c: 1340: c = prec;
 21913  0113C4  C087  F089         	movff	i2printf@prec,i2printf@c
 21914  0113C8  D010               	goto	i2l1272
 21915  0113CA                     i2l1270:
 21916                           
 21917                           ; BSR set to: 0
 21918                           ;doprnt.c: 1341: else if(prec < c)
 21919                           
 21920                           ; BSR set to: 0
 21921  0113CA  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 21922  0113CC  0A80               	xorlw	128
 21923  0113CE  6F68               	movwf	??i2_printf& (0+255),b
 21924  0113D0  5189               	movf	i2printf@c& (0+255),w,b
 21925  0113D2  5D87               	subwf	i2printf@prec& (0+255),w,b
 21926  0113D4  0E80               	movlw	128
 21927  0113D6  BF89               	btfsc	i2printf@c& (0+255),7,b
 21928  0113D8  0E7F               	movlw	127
 21929  0113DA  5968               	subwfb	??i2_printf& (0+255),w,b
 21930  0113DC  B0D8               	btfsc	status,0,c
 21931  0113DE  D005               	goto	i2l1272
 21932                           
 21933                           ; BSR set to: 0
 21934                           ;doprnt.c: 1342: prec = c;
 21935  0113E0  5189               	movf	i2printf@c& (0+255),w,b
 21936  0113E2  6F87               	movwf	i2printf@prec& (0+255),b
 21937  0113E4  6B88               	clrf	(i2printf@prec+1)& (0+255),b
 21938  0113E6  BF87               	btfsc	i2printf@prec& (0+255),7,b
 21939  0113E8  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 21940  0113EA                     i2l1272:
 21941                           
 21942                           ; BSR set to: 0
 21943                           ;doprnt.c: 1422: {
 21944                           ;doprnt.c: 1438: if(flag & 0x03)
 21945                           
 21946                           ; BSR set to: 0
 21947                           
 21948                           ; BSR set to: 0
 21949  0113EA  0E03               	movlw	3
 21950  0113EC  1578               	andwf	i2printf@flag& (0+255),w,b
 21951  0113EE  6F68               	movwf	??i2_printf& (0+255),b
 21952  0113F0  0E00               	movlw	0
 21953  0113F2  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 21954  0113F4  6F69               	movwf	(??i2_printf+1)& (0+255),b
 21955  0113F6  5168               	movf	??i2_printf& (0+255),w,b
 21956  0113F8  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 21957  0113FA  B4D8               	btfsc	status,2,c
 21958  0113FC  D090               	goto	i2l1274
 21959                           
 21960                           ; BSR set to: 0
 21961                           ;doprnt.c: 1439: (putch('-') );
 21962  0113FE  0E2D               	movlw	45
 21963  011400  ECD6  F0B3         	call	i2_putch
 21964                           
 21965                           ;doprnt.c: 1469: }
 21966                           ;doprnt.c: 1474: while(prec--) {
 21967  011404  D08C               	goto	i2l1274
 21968  011406                     
 21969                           ;doprnt.c: 1486: case 0xC0:
 21970                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 21971  011406  C087  F068         	movff	i2printf@prec,??i2_printf
 21972  01140A  C088  F069         	movff	i2printf@prec+1,??i2_printf+1
 21973  01140E  0100               	movlb	0	; () banked
 21974  011410  90D8               	bcf	status,0,c
 21975  011412  3768               	rlcf	??i2_printf& (0+255),f,b
 21976  011414  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 21977  011416  90D8               	bcf	status,0,c
 21978  011418  3768               	rlcf	??i2_printf& (0+255),f,b
 21979  01141A  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 21980  01141C  0EB5               	movlw	low _dpowers
 21981  01141E  2568               	addwf	??i2_printf& (0+255),w,b
 21982  011420  6EF6               	movwf	tblptrl,c
 21983  011422  0EF0               	movlw	high _dpowers
 21984  011424  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 21985  011426  6EF7               	movwf	tblptrh,c
 21986  011428                     	if	1	;There are 3 active tblptr bytes
 21987  011428  6AF8               	clrf	tblptru,c
 21988  01142A  0E00               	movlw	low (__mediumconst shr (0+16))
 21989  01142C  22F8               	addwfc	tblptru,f,c
 21990  01142E                     	endif
 21991  01142E  0009               	tblrd		*+
 21992  011430  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 21993  011434  0009               	tblrd		*+
 21994  011436  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 21995  01143A  0009               	tblrd		*+
 21996  01143C  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 21997  011440  000A               	tblrd		*-
 21998  011442  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 21999  011446  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 22000  01144A  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 22001  01144E  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 22002  011452  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 22003  011456  EC47  F0AC         	call	i2___lldiv	;wreg free
 22004  01145A  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 22005  01145E  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 22006  011462  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 22007  011466  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 22008  01146A  0E0A               	movlw	10
 22009  01146C  6E12               	movwf	i2___llmod@divisor,c
 22010  01146E  0E00               	movlw	0
 22011  011470  6E13               	movwf	i2___llmod@divisor+1,c
 22012  011472  0E00               	movlw	0
 22013  011474  6E14               	movwf	i2___llmod@divisor+2,c
 22014  011476  0E00               	movlw	0
 22015  011478  6E15               	movwf	i2___llmod@divisor+3,c
 22016  01147A  EC47  F0AE         	call	i2___llmod	;wreg free
 22017  01147E  500E               	movf	?i2___llmod,w,c
 22018  011480  0F30               	addlw	48
 22019  011482  0100               	movlb	0	; () banked
 22020  011484  6F89               	movwf	i2printf@c& (0+255),b
 22021                           
 22022                           ;doprnt.c: 1491: break;
 22023  011486  D048               	goto	i2l1279
 22024  011488                     
 22025                           ; BSR set to: 0
 22026                           ;doprnt.c: 1499: {
 22027                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 22028                           
 22029                           ; BSR set to: 0
 22030  011488  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 22031  01148C  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 22032  011490  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 22033  011494  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 22034  011498  C087  F068         	movff	i2printf@prec,??i2_printf
 22035  01149C  C088  F069         	movff	i2printf@prec+1,??i2_printf+1
 22036  0114A0  90D8               	bcf	status,0,c
 22037  0114A2  3768               	rlcf	??i2_printf& (0+255),f,b
 22038  0114A4  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 22039  0114A6  90D8               	bcf	status,0,c
 22040  0114A8  3768               	rlcf	??i2_printf& (0+255),f,b
 22041  0114AA  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 22042  0114AC  0E2B               	movlw	low _hexpowers
 22043  0114AE  2568               	addwf	??i2_printf& (0+255),w,b
 22044  0114B0  6EF6               	movwf	tblptrl,c
 22045  0114B2  0EF1               	movlw	high _hexpowers
 22046  0114B4  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 22047  0114B6  6EF7               	movwf	tblptrh,c
 22048  0114B8                     	if	1	;There are 3 active tblptr bytes
 22049  0114B8  6AF8               	clrf	tblptru,c
 22050  0114BA  0E00               	movlw	low (__mediumconst shr (0+16))
 22051  0114BC  22F8               	addwfc	tblptru,f,c
 22052  0114BE                     	endif
 22053  0114BE  0009               	tblrd		*+
 22054  0114C0  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 22055  0114C4  0009               	tblrd		*+
 22056  0114C6  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 22057  0114CA  0009               	tblrd		*+
 22058  0114CC  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 22059  0114D0  000A               	tblrd		*-
 22060  0114D2  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 22061  0114D6  EC47  F0AC         	call	i2___lldiv	;wreg free
 22062  0114DA  5001               	movf	?i2___lldiv,w,c
 22063  0114DC  0B0F               	andlw	15
 22064  0114DE  0100               	movlb	0	; () banked
 22065  0114E0  6F71               	movwf	i2printf@idx& (0+255),b
 22066                           
 22067                           ; BSR set to: 0
 22068                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 22069  0114E2  5171               	movf	i2printf@idx& (0+255),w,b
 22070  0114E4  0D01               	mullw	1
 22071  0114E6  0EA2               	movlw	low STR_101
 22072  0114E8  24F3               	addwf	prodl,w,c
 22073  0114EA  6EF6               	movwf	tblptrl,c
 22074  0114EC  0EFE               	movlw	high STR_101
 22075  0114EE  20F4               	addwfc	prodh,w,c
 22076  0114F0  6EF7               	movwf	tblptrh,c
 22077  0114F2                     	if	1	;There are 3 active tblptr bytes
 22078  0114F2  6AF8               	clrf	tblptru,c
 22079  0114F4  0E00               	movlw	low (__mediumconst shr (0+16))
 22080  0114F6  22F8               	addwfc	tblptru,f,c
 22081  0114F8                     	endif
 22082  0114F8  0008               	tblrd		*
 22083  0114FA  CFF5 F089          	movff	tablat,i2printf@c
 22084                           
 22085                           ; BSR set to: 0
 22086                           ;doprnt.c: 1523: }
 22087                           
 22088                           ;doprnt.c: 1508: }
 22089                           ;doprnt.c: 1510: break;
 22090  0114FE  D00C               	goto	i2l1279
 22091  011500                     i2l13422:
 22092  011500  0100               	movlb	0	; () banked
 22093  011502  5178               	movf	i2printf@flag& (0+255),w,b
 22094  011504  0BC0               	andlw	192
 22095                           
 22096                           ; Switch size 1, requested type "space"
 22097                           ; Number of cases is 3, Range of values is 0 to 192
 22098                           ; switch strategies available:
 22099                           ; Name         Instructions Cycles
 22100                           ; simple_byte           10     6 (average)
 22101                           ;	Chosen strategy is simple_byte
 22102  011506  0A00               	xorlw	0	; case 0
 22103  011508  B4D8               	btfsc	status,2,c
 22104  01150A  D77D               	goto	i2l1277
 22105  01150C  0A80               	xorlw	128	; case 128
 22106  01150E  B4D8               	btfsc	status,2,c
 22107  011510  D7BB               	goto	i2l1280
 22108  011512  0A40               	xorlw	64	; case 192
 22109  011514  B4D8               	btfsc	status,2,c
 22110  011516  D777               	goto	i2l1277
 22111  011518                     i2l1279:
 22112                           
 22113                           ; BSR set to: 0
 22114                           ;doprnt.c: 1524: (putch(c) );
 22115                           
 22116                           ; BSR set to: 0
 22117  011518  5189               	movf	i2printf@c& (0+255),w,b
 22118  01151A  ECD6  F0B3         	call	i2_putch
 22119  01151E                     i2l1274:
 22120  01151E  0100               	movlb	0	; () banked
 22121  011520  0787               	decf	i2printf@prec& (0+255),f,b
 22122  011522  A0D8               	btfss	status,0,c
 22123  011524  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 22124  011526  2987               	incf	i2printf@prec& (0+255),w,b
 22125  011528  E1EB               	bnz	i2l13422
 22126  01152A  2988               	incf	(i2printf@prec+1)& (0+255),w,b
 22127  01152C  A4D8               	btfss	status,2,c
 22128  01152E  D7E8               	goto	i2l1276
 22129  011530                     i2u1660_40:
 22130                           
 22131                           ; BSR set to: 0
 22132                           
 22133                           ; BSR set to: 0
 22134  011530  0100               	movlb	0	; () banked
 22135  011532  5166               	movf	i2printf@f& (0+255),w,b
 22136  011534  6F68               	movwf	??i2_printf& (0+255),b
 22137  011536  5167               	movf	(i2printf@f+1)& (0+255),w,b
 22138  011538  6F69               	movwf	(??i2_printf+1)& (0+255),b
 22139  01153A  4B66               	infsnz	i2printf@f& (0+255),f,b
 22140  01153C  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 22141  01153E  C068  FFF6         	movff	??i2_printf,tblptrl
 22142  011542  C069  FFF7         	movff	??i2_printf+1,tblptrh
 22143  011546  0E00               	movlw	low (__mediumconst shr (0+16))
 22144  011548  6EF8               	movwf	tblptru,c
 22145  01154A  0E0D               	movlw	(high __ramtop+-1)
 22146  01154C  64F7               	cpfsgt	tblptrh,c
 22147  01154E  D003               	bra	i2u1661_47
 22148  011550  0008               	tblrd		*
 22149  011552  50F5               	movf	tablat,w,c
 22150  011554  D005               	bra	i2u1661_40
 22151  011556                     i2u1661_47:
 22152  011556  CFF6 FFE9          	movff	tblptrl,fsr0l
 22153  01155A  CFF7 FFEA          	movff	tblptrh,fsr0h
 22154  01155E  50EF               	movf	indf0,w,c
 22155  011560                     i2u1661_40:
 22156  011560  0100               	movlb	0	; () banked
 22157  011562  6F89               	movwf	i2printf@c& (0+255),b
 22158  011564  5189               	movf	i2printf@c& (0+255),w,b
 22159  011566  B4D8               	btfsc	status,2,c
 22160  011568  0012               	return	
 22161  01156A  EF64  F085         	goto	i2l1189
 22162  01156E                     __end_ofi2_printf:
 22163                           	opt stack 0
 22164                           tosu	equ	0xFFF
 22165                           tosh	equ	0xFFE
 22166                           tosl	equ	0xFFD
 22167                           pclatu	equ	0xFFB
 22168                           pclath	equ	0xFFA
 22169                           tblptru	equ	0xFF8
 22170                           tblptrh	equ	0xFF7
 22171                           tblptrl	equ	0xFF6
 22172                           tablat	equ	0xFF5
 22173                           prodh	equ	0xFF4
 22174                           prodl	equ	0xFF3
 22175                           intcon	equ	0xFF2
 22176                           indf0	equ	0xFEF
 22177                           postinc0	equ	0xFEE
 22178                           fsr0h	equ	0xFEA
 22179                           fsr0l	equ	0xFE9
 22180                           wreg	equ	0xFE8
 22181                           indf1	equ	0xFE7
 22182                           postdec1	equ	0xFE5
 22183                           fsr1h	equ	0xFE2
 22184                           fsr1l	equ	0xFE1
 22185                           bsr	equ	0xFE0
 22186                           indf2	equ	0xFDF
 22187                           postinc2	equ	0xFDE
 22188                           postdec2	equ	0xFDD
 22189                           fsr2h	equ	0xFDA
 22190                           fsr2l	equ	0xFD9
 22191                           status	equ	0xFD8
 22192                           
 22193 ;; *************** function i2_scale *****************
 22194 ;; Defined at:
 22195 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 22196 ;; Parameters:    Size  Location     Type
 22197 ;;  scl             1    wreg     char 
 22198 ;; Auto vars:     Size  Location     Type
 22199 ;;  scl             1   59[COMRAM] char 
 22200 ;; Return value:  Size  Location     Type
 22201 ;;                  3   53[COMRAM] char 
 22202 ;; Registers used:
 22203 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22204 ;; Tracked objects:
 22205 ;;		On entry : 0/0
 22206 ;;		On exit  : 0/0
 22207 ;;		Unchanged: 0/0
 22208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22209 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22210 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22212 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22213 ;;Total ram usage:        7 bytes
 22214 ;; Hardware stack levels used:    1
 22215 ;; Hardware stack levels required when called:    2
 22216 ;; This function calls:
 22217 ;;		i2___awdiv
 22218 ;;		i2___awmod
 22219 ;;		i2___ftmul
 22220 ;;		i2___wmul
 22221 ;; This function is called by:
 22222 ;;		i2_printf
 22223 ;; This function uses a non-reentrant model
 22224 ;;
 22225                           
 22226                           	psect	text79
 22227  0128BC                     __ptext79:
 22228                           	opt stack 0
 22229  0128BC                     i2_scale:
 22230                           	opt stack 13
 22231                           
 22232                           ; BSR set to: 0
 22233                           ;incstack = 0
 22234                           ;i2scale@scl stored from wreg
 22235  0128BC  6E3C               	movwf	i2scale@scl,c
 22236                           
 22237                           ;doprnt.c: 428: if(scl < 0) {
 22238  0128BE  AE3C               	btfss	i2scale@scl,7,c
 22239  0128C0  D113               	goto	i2l1178
 22240                           
 22241                           ;doprnt.c: 429: scl = -scl;
 22242  0128C2  6C3C               	negf	i2scale@scl,c
 22243                           
 22244                           ;doprnt.c: 430: if(scl>=110)
 22245  0128C4  503C               	movf	i2scale@scl,w,c
 22246  0128C6  0A80               	xorlw	128
 22247  0128C8  0F12               	addlw	-238
 22248  0128CA  A0D8               	btfss	status,0,c
 22249  0128CC  D09A               	goto	i2l1179
 22250                           
 22251                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 22252  0128CE  0E00               	movlw	0
 22253  0128D0  6E12               	movwf	i2___wmul@multiplicand+1,c
 22254  0128D2  0E03               	movlw	3
 22255  0128D4  6E11               	movwf	i2___wmul@multiplicand,c
 22256  0128D6  0E00               	movlw	0
 22257  0128D8  6E0A               	movwf	i2___awdiv@divisor+1,c
 22258  0128DA  0E0A               	movlw	10
 22259  0128DC  6E09               	movwf	i2___awdiv@divisor,c
 22260  0128DE  0E00               	movlw	0
 22261  0128E0  6E04               	movwf	i2___awmod@divisor+1,c
 22262  0128E2  0E64               	movlw	100
 22263  0128E4  6E03               	movwf	i2___awmod@divisor,c
 22264  0128E6  503C               	movf	i2scale@scl,w,c
 22265  0128E8  6E01               	movwf	i2___awmod@dividend,c
 22266  0128EA  6A02               	clrf	i2___awmod@dividend+1,c
 22267  0128EC  BE01               	btfsc	i2___awmod@dividend,7,c
 22268  0128EE  0602               	decf	i2___awmod@dividend+1,f,c
 22269  0128F0  EC74  F0AD         	call	i2___awmod	;wreg free
 22270  0128F4  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 22271  0128F8  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 22272  0128FC  EC05  F0AC         	call	i2___awdiv	;wreg free
 22273  012900  0E09               	movlw	9
 22274  012902  2407               	addwf	?i2___awdiv,w,c
 22275  012904  6E0F               	movwf	i2___wmul@multiplier,c
 22276  012906  0E00               	movlw	0
 22277  012908  2008               	addwfc	?i2___awdiv+1,w,c
 22278  01290A  6E10               	movwf	i2___wmul@multiplier+1,c
 22279  01290C  ECBF  F0B2         	call	i2___wmul	;wreg free
 22280  012910  0E04               	movlw	low __npowers_
 22281  012912  240F               	addwf	?i2___wmul,w,c
 22282  012914  6EF6               	movwf	tblptrl,c
 22283  012916  0EF1               	movlw	high __npowers_
 22284  012918  2010               	addwfc	?i2___wmul+1,w,c
 22285  01291A  6EF7               	movwf	tblptrh,c
 22286  01291C                     	if	1	;There are 3 active tblptr bytes
 22287  01291C  6AF8               	clrf	tblptru,c
 22288  01291E  0E00               	movlw	low (__mediumconst shr (0+16))
 22289  012920  22F8               	addwfc	tblptru,f,c
 22290  012922                     	endif
 22291  012922  0009               	tblrd		*+
 22292  012924  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 22293  012928  0009               	tblrd		*+
 22294  01292A  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 22295  01292E  000A               	tblrd		*-
 22296  012930  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 22297  012934  0E00               	movlw	0
 22298  012936  6E0A               	movwf	i2___awdiv@divisor+1,c
 22299  012938  0E64               	movlw	100
 22300  01293A  6E09               	movwf	i2___awdiv@divisor,c
 22301  01293C  503C               	movf	i2scale@scl,w,c
 22302  01293E  6E07               	movwf	i2___awdiv@dividend,c
 22303  012940  6A08               	clrf	i2___awdiv@dividend+1,c
 22304  012942  BE07               	btfsc	i2___awdiv@dividend,7,c
 22305  012944  0608               	decf	i2___awdiv@dividend+1,f,c
 22306  012946  EC05  F0AC         	call	i2___awdiv	;wreg free
 22307  01294A  0E12               	movlw	18
 22308  01294C  2407               	addwf	?i2___awdiv,w,c
 22309  01294E  6E0F               	movwf	i2___wmul@multiplier,c
 22310  012950  0E00               	movlw	0
 22311  012952  2008               	addwfc	?i2___awdiv+1,w,c
 22312  012954  6E10               	movwf	i2___wmul@multiplier+1,c
 22313  012956  0E00               	movlw	0
 22314  012958  6E12               	movwf	i2___wmul@multiplicand+1,c
 22315  01295A  0E03               	movlw	3
 22316  01295C  6E11               	movwf	i2___wmul@multiplicand,c
 22317  01295E  ECBF  F0B2         	call	i2___wmul	;wreg free
 22318  012962  0E04               	movlw	low __npowers_
 22319  012964  240F               	addwf	?i2___wmul,w,c
 22320  012966  6EF6               	movwf	tblptrl,c
 22321  012968  0EF1               	movlw	high __npowers_
 22322  01296A  2010               	addwfc	?i2___wmul+1,w,c
 22323  01296C  6EF7               	movwf	tblptrh,c
 22324  01296E                     	if	1	;There are 3 active tblptr bytes
 22325  01296E  6AF8               	clrf	tblptru,c
 22326  012970  0E00               	movlw	low (__mediumconst shr (0+16))
 22327  012972  22F8               	addwfc	tblptru,f,c
 22328  012974                     	endif
 22329  012974  0009               	tblrd		*+
 22330  012976  CFF5 F027          	movff	tablat,i2___ftmul@f1
 22331  01297A  0009               	tblrd		*+
 22332  01297C  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 22333  012980  000A               	tblrd		*-
 22334  012982  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 22335  012986  ECB8  F0A5         	call	i2___ftmul	;wreg free
 22336  01298A  C027  F039         	movff	?i2___ftmul,i2_scale$3531
 22337  01298E  C028  F03A         	movff	?i2___ftmul+1,i2_scale$3531+1
 22338  012992  C029  F03B         	movff	?i2___ftmul+2,i2_scale$3531+2
 22339                           
 22340                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 22341  012996  C039  F027         	movff	i2_scale$3531,i2___ftmul@f1
 22342  01299A  C03A  F028         	movff	i2_scale$3531+1,i2___ftmul@f1+1
 22343  01299E  C03B  F029         	movff	i2_scale$3531+2,i2___ftmul@f1+2
 22344  0129A2  0E00               	movlw	0
 22345  0129A4  6E12               	movwf	i2___wmul@multiplicand+1,c
 22346  0129A6  0E03               	movlw	3
 22347  0129A8  6E11               	movwf	i2___wmul@multiplicand,c
 22348  0129AA  0E00               	movlw	0
 22349  0129AC  6E04               	movwf	i2___awmod@divisor+1,c
 22350  0129AE  0E0A               	movlw	10
 22351  0129B0  6E03               	movwf	i2___awmod@divisor,c
 22352  0129B2  503C               	movf	i2scale@scl,w,c
 22353  0129B4  6E01               	movwf	i2___awmod@dividend,c
 22354  0129B6  6A02               	clrf	i2___awmod@dividend+1,c
 22355  0129B8  BE01               	btfsc	i2___awmod@dividend,7,c
 22356  0129BA  0602               	decf	i2___awmod@dividend+1,f,c
 22357  0129BC  EC74  F0AD         	call	i2___awmod	;wreg free
 22358  0129C0  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 22359  0129C4  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 22360  0129C8  ECBF  F0B2         	call	i2___wmul	;wreg free
 22361  0129CC  0E04               	movlw	low __npowers_
 22362  0129CE  240F               	addwf	?i2___wmul,w,c
 22363  0129D0  6EF6               	movwf	tblptrl,c
 22364  0129D2  0EF1               	movlw	high __npowers_
 22365  0129D4  2010               	addwfc	?i2___wmul+1,w,c
 22366  0129D6  6EF7               	movwf	tblptrh,c
 22367  0129D8                     	if	1	;There are 3 active tblptr bytes
 22368  0129D8  6AF8               	clrf	tblptru,c
 22369  0129DA  0E00               	movlw	low (__mediumconst shr (0+16))
 22370  0129DC  22F8               	addwfc	tblptru,f,c
 22371  0129DE                     	endif
 22372  0129DE  0009               	tblrd		*+
 22373  0129E0  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 22374  0129E4  0009               	tblrd		*+
 22375  0129E6  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 22376  0129EA  000A               	tblrd		*-
 22377  0129EC  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 22378  0129F0  ECB8  F0A5         	call	i2___ftmul	;wreg free
 22379  0129F4  C027  F036         	movff	?i2___ftmul,?i2_scale
 22380  0129F8  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 22381  0129FC  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 22382  012A00  0012               	return	
 22383  012A02                     i2l1179:
 22384                           
 22385                           ;doprnt.c: 432: else if(scl > 10)
 22386  012A02  503C               	movf	i2scale@scl,w,c
 22387  012A04  0A80               	xorlw	128
 22388  012A06  0F75               	addlw	-139
 22389  012A08  A0D8               	btfss	status,0,c
 22390  012A0A  D059               	goto	i2l1182
 22391                           
 22392                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 22393  012A0C  0E00               	movlw	0
 22394  012A0E  6E0A               	movwf	i2___awdiv@divisor+1,c
 22395  012A10  0E0A               	movlw	10
 22396  012A12  6E09               	movwf	i2___awdiv@divisor,c
 22397  012A14  503C               	movf	i2scale@scl,w,c
 22398  012A16  6E07               	movwf	i2___awdiv@dividend,c
 22399  012A18  6A08               	clrf	i2___awdiv@dividend+1,c
 22400  012A1A  BE07               	btfsc	i2___awdiv@dividend,7,c
 22401  012A1C  0608               	decf	i2___awdiv@dividend+1,f,c
 22402  012A1E  EC05  F0AC         	call	i2___awdiv	;wreg free
 22403  012A22  0E09               	movlw	9
 22404  012A24  2407               	addwf	?i2___awdiv,w,c
 22405  012A26  6E0F               	movwf	i2___wmul@multiplier,c
 22406  012A28  0E00               	movlw	0
 22407  012A2A  2008               	addwfc	?i2___awdiv+1,w,c
 22408  012A2C  6E10               	movwf	i2___wmul@multiplier+1,c
 22409  012A2E  0E00               	movlw	0
 22410  012A30  6E12               	movwf	i2___wmul@multiplicand+1,c
 22411  012A32  0E03               	movlw	3
 22412  012A34  6E11               	movwf	i2___wmul@multiplicand,c
 22413  012A36  ECBF  F0B2         	call	i2___wmul	;wreg free
 22414  012A3A  0E04               	movlw	low __npowers_
 22415  012A3C  240F               	addwf	?i2___wmul,w,c
 22416  012A3E  6EF6               	movwf	tblptrl,c
 22417  012A40  0EF1               	movlw	high __npowers_
 22418  012A42  2010               	addwfc	?i2___wmul+1,w,c
 22419  012A44  6EF7               	movwf	tblptrh,c
 22420  012A46                     	if	1	;There are 3 active tblptr bytes
 22421  012A46  6AF8               	clrf	tblptru,c
 22422  012A48  0E00               	movlw	low (__mediumconst shr (0+16))
 22423  012A4A  22F8               	addwfc	tblptru,f,c
 22424  012A4C                     	endif
 22425  012A4C  0009               	tblrd		*+
 22426  012A4E  CFF5 F027          	movff	tablat,i2___ftmul@f1
 22427  012A52  0009               	tblrd		*+
 22428  012A54  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 22429  012A58  000A               	tblrd		*-
 22430  012A5A  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 22431  012A5E  0E00               	movlw	0
 22432  012A60  6E12               	movwf	i2___wmul@multiplicand+1,c
 22433  012A62  0E03               	movlw	3
 22434  012A64  6E11               	movwf	i2___wmul@multiplicand,c
 22435  012A66  0E00               	movlw	0
 22436  012A68  6E04               	movwf	i2___awmod@divisor+1,c
 22437  012A6A  0E0A               	movlw	10
 22438  012A6C  6E03               	movwf	i2___awmod@divisor,c
 22439  012A6E  503C               	movf	i2scale@scl,w,c
 22440  012A70  6E01               	movwf	i2___awmod@dividend,c
 22441  012A72  6A02               	clrf	i2___awmod@dividend+1,c
 22442  012A74  BE01               	btfsc	i2___awmod@dividend,7,c
 22443  012A76  0602               	decf	i2___awmod@dividend+1,f,c
 22444  012A78  EC74  F0AD         	call	i2___awmod	;wreg free
 22445  012A7C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 22446  012A80  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 22447  012A84  ECBF  F0B2         	call	i2___wmul	;wreg free
 22448  012A88  0E04               	movlw	low __npowers_
 22449  012A8A  240F               	addwf	?i2___wmul,w,c
 22450  012A8C  6EF6               	movwf	tblptrl,c
 22451  012A8E  0EF1               	movlw	high __npowers_
 22452  012A90  2010               	addwfc	?i2___wmul+1,w,c
 22453  012A92  6EF7               	movwf	tblptrh,c
 22454  012A94                     	if	1	;There are 3 active tblptr bytes
 22455  012A94  6AF8               	clrf	tblptru,c
 22456  012A96  0E00               	movlw	low (__mediumconst shr (0+16))
 22457  012A98  22F8               	addwfc	tblptru,f,c
 22458  012A9A                     	endif
 22459  012A9A  0009               	tblrd		*+
 22460  012A9C  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 22461  012AA0  0009               	tblrd		*+
 22462  012AA2  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 22463  012AA6  000A               	tblrd		*-
 22464  012AA8  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 22465  012AAC  ECB8  F0A5         	call	i2___ftmul	;wreg free
 22466  012AB0  C027  F036         	movff	?i2___ftmul,?i2_scale
 22467  012AB4  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 22468  012AB8  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 22469  012ABC  0012               	return	
 22470  012ABE                     i2l1182:
 22471                           
 22472                           ;doprnt.c: 434: return _npowers_[scl];
 22473  012ABE  503C               	movf	i2scale@scl,w,c
 22474  012AC0  0D03               	mullw	3
 22475  012AC2  0E04               	movlw	low __npowers_
 22476  012AC4  24F3               	addwf	prodl,w,c
 22477  012AC6  6EF6               	movwf	tblptrl,c
 22478  012AC8  0EF1               	movlw	high __npowers_
 22479  012ACA  20F4               	addwfc	prodh,w,c
 22480  012ACC  6EF7               	movwf	tblptrh,c
 22481  012ACE                     	if	1	;There are 3 active tblptr bytes
 22482  012ACE  6AF8               	clrf	tblptru,c
 22483  012AD0  0E00               	movlw	low (__mediumconst shr (0+16))
 22484  012AD2  22F8               	addwfc	tblptru,f,c
 22485  012AD4                     	endif
 22486  012AD4  0009               	tblrd		*+
 22487  012AD6  CFF5 F036          	movff	tablat,?i2_scale
 22488  012ADA  0009               	tblrd		*+
 22489  012ADC  CFF5 F037          	movff	tablat,?i2_scale+1
 22490  012AE0  000A               	tblrd		*-
 22491  012AE2  CFF5 F038          	movff	tablat,?i2_scale+2
 22492  012AE6  0012               	return	
 22493  012AE8                     i2l1178:
 22494                           
 22495                           ;doprnt.c: 435: }
 22496                           ;doprnt.c: 436: if(scl>=110)
 22497  012AE8  503C               	movf	i2scale@scl,w,c
 22498  012AEA  0A80               	xorlw	128
 22499  012AEC  0F12               	addlw	-238
 22500  012AEE  A0D8               	btfss	status,0,c
 22501  012AF0  D09A               	goto	i2l1183
 22502                           
 22503                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 22504  012AF2  0E00               	movlw	0
 22505  012AF4  6E12               	movwf	i2___wmul@multiplicand+1,c
 22506  012AF6  0E03               	movlw	3
 22507  012AF8  6E11               	movwf	i2___wmul@multiplicand,c
 22508  012AFA  0E00               	movlw	0
 22509  012AFC  6E0A               	movwf	i2___awdiv@divisor+1,c
 22510  012AFE  0E0A               	movlw	10
 22511  012B00  6E09               	movwf	i2___awdiv@divisor,c
 22512  012B02  0E00               	movlw	0
 22513  012B04  6E04               	movwf	i2___awmod@divisor+1,c
 22514  012B06  0E64               	movlw	100
 22515  012B08  6E03               	movwf	i2___awmod@divisor,c
 22516  012B0A  503C               	movf	i2scale@scl,w,c
 22517  012B0C  6E01               	movwf	i2___awmod@dividend,c
 22518  012B0E  6A02               	clrf	i2___awmod@dividend+1,c
 22519  012B10  BE01               	btfsc	i2___awmod@dividend,7,c
 22520  012B12  0602               	decf	i2___awmod@dividend+1,f,c
 22521  012B14  EC74  F0AD         	call	i2___awmod	;wreg free
 22522  012B18  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 22523  012B1C  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 22524  012B20  EC05  F0AC         	call	i2___awdiv	;wreg free
 22525  012B24  0E09               	movlw	9
 22526  012B26  2407               	addwf	?i2___awdiv,w,c
 22527  012B28  6E0F               	movwf	i2___wmul@multiplier,c
 22528  012B2A  0E00               	movlw	0
 22529  012B2C  2008               	addwfc	?i2___awdiv+1,w,c
 22530  012B2E  6E10               	movwf	i2___wmul@multiplier+1,c
 22531  012B30  ECBF  F0B2         	call	i2___wmul	;wreg free
 22532  012B34  0EDD               	movlw	low __powers_
 22533  012B36  240F               	addwf	?i2___wmul,w,c
 22534  012B38  6EF6               	movwf	tblptrl,c
 22535  012B3A  0EF0               	movlw	high __powers_
 22536  012B3C  2010               	addwfc	?i2___wmul+1,w,c
 22537  012B3E  6EF7               	movwf	tblptrh,c
 22538  012B40                     	if	1	;There are 3 active tblptr bytes
 22539  012B40  6AF8               	clrf	tblptru,c
 22540  012B42  0E00               	movlw	low (__mediumconst shr (0+16))
 22541  012B44  22F8               	addwfc	tblptru,f,c
 22542  012B46                     	endif
 22543  012B46  0009               	tblrd		*+
 22544  012B48  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 22545  012B4C  0009               	tblrd		*+
 22546  012B4E  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 22547  012B52  000A               	tblrd		*-
 22548  012B54  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 22549  012B58  0E00               	movlw	0
 22550  012B5A  6E0A               	movwf	i2___awdiv@divisor+1,c
 22551  012B5C  0E64               	movlw	100
 22552  012B5E  6E09               	movwf	i2___awdiv@divisor,c
 22553  012B60  503C               	movf	i2scale@scl,w,c
 22554  012B62  6E07               	movwf	i2___awdiv@dividend,c
 22555  012B64  6A08               	clrf	i2___awdiv@dividend+1,c
 22556  012B66  BE07               	btfsc	i2___awdiv@dividend,7,c
 22557  012B68  0608               	decf	i2___awdiv@dividend+1,f,c
 22558  012B6A  EC05  F0AC         	call	i2___awdiv	;wreg free
 22559  012B6E  0E12               	movlw	18
 22560  012B70  2407               	addwf	?i2___awdiv,w,c
 22561  012B72  6E0F               	movwf	i2___wmul@multiplier,c
 22562  012B74  0E00               	movlw	0
 22563  012B76  2008               	addwfc	?i2___awdiv+1,w,c
 22564  012B78  6E10               	movwf	i2___wmul@multiplier+1,c
 22565  012B7A  0E00               	movlw	0
 22566  012B7C  6E12               	movwf	i2___wmul@multiplicand+1,c
 22567  012B7E  0E03               	movlw	3
 22568  012B80  6E11               	movwf	i2___wmul@multiplicand,c
 22569  012B82  ECBF  F0B2         	call	i2___wmul	;wreg free
 22570  012B86  0EDD               	movlw	low __powers_
 22571  012B88  240F               	addwf	?i2___wmul,w,c
 22572  012B8A  6EF6               	movwf	tblptrl,c
 22573  012B8C  0EF0               	movlw	high __powers_
 22574  012B8E  2010               	addwfc	?i2___wmul+1,w,c
 22575  012B90  6EF7               	movwf	tblptrh,c
 22576  012B92                     	if	1	;There are 3 active tblptr bytes
 22577  012B92  6AF8               	clrf	tblptru,c
 22578  012B94  0E00               	movlw	low (__mediumconst shr (0+16))
 22579  012B96  22F8               	addwfc	tblptru,f,c
 22580  012B98                     	endif
 22581  012B98  0009               	tblrd		*+
 22582  012B9A  CFF5 F027          	movff	tablat,i2___ftmul@f1
 22583  012B9E  0009               	tblrd		*+
 22584  012BA0  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 22585  012BA4  000A               	tblrd		*-
 22586  012BA6  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 22587  012BAA  ECB8  F0A5         	call	i2___ftmul	;wreg free
 22588  012BAE  C027  F039         	movff	?i2___ftmul,i2_scale$3531
 22589  012BB2  C028  F03A         	movff	?i2___ftmul+1,i2_scale$3531+1
 22590  012BB6  C029  F03B         	movff	?i2___ftmul+2,i2_scale$3531+2
 22591                           
 22592                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 22593  012BBA  C039  F027         	movff	i2_scale$3531,i2___ftmul@f1
 22594  012BBE  C03A  F028         	movff	i2_scale$3531+1,i2___ftmul@f1+1
 22595  012BC2  C03B  F029         	movff	i2_scale$3531+2,i2___ftmul@f1+2
 22596  012BC6  0E00               	movlw	0
 22597  012BC8  6E12               	movwf	i2___wmul@multiplicand+1,c
 22598  012BCA  0E03               	movlw	3
 22599  012BCC  6E11               	movwf	i2___wmul@multiplicand,c
 22600  012BCE  0E00               	movlw	0
 22601  012BD0  6E04               	movwf	i2___awmod@divisor+1,c
 22602  012BD2  0E0A               	movlw	10
 22603  012BD4  6E03               	movwf	i2___awmod@divisor,c
 22604  012BD6  503C               	movf	i2scale@scl,w,c
 22605  012BD8  6E01               	movwf	i2___awmod@dividend,c
 22606  012BDA  6A02               	clrf	i2___awmod@dividend+1,c
 22607  012BDC  BE01               	btfsc	i2___awmod@dividend,7,c
 22608  012BDE  0602               	decf	i2___awmod@dividend+1,f,c
 22609  012BE0  EC74  F0AD         	call	i2___awmod	;wreg free
 22610  012BE4  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 22611  012BE8  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 22612  012BEC  ECBF  F0B2         	call	i2___wmul	;wreg free
 22613  012BF0  0EDD               	movlw	low __powers_
 22614  012BF2  240F               	addwf	?i2___wmul,w,c
 22615  012BF4  6EF6               	movwf	tblptrl,c
 22616  012BF6  0EF0               	movlw	high __powers_
 22617  012BF8  2010               	addwfc	?i2___wmul+1,w,c
 22618  012BFA  6EF7               	movwf	tblptrh,c
 22619  012BFC                     	if	1	;There are 3 active tblptr bytes
 22620  012BFC  6AF8               	clrf	tblptru,c
 22621  012BFE  0E00               	movlw	low (__mediumconst shr (0+16))
 22622  012C00  22F8               	addwfc	tblptru,f,c
 22623  012C02                     	endif
 22624  012C02  0009               	tblrd		*+
 22625  012C04  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 22626  012C08  0009               	tblrd		*+
 22627  012C0A  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 22628  012C0E  000A               	tblrd		*-
 22629  012C10  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 22630  012C14  ECB8  F0A5         	call	i2___ftmul	;wreg free
 22631  012C18  C027  F036         	movff	?i2___ftmul,?i2_scale
 22632  012C1C  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 22633  012C20  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 22634  012C24  0012               	return	
 22635  012C26                     i2l1183:
 22636                           
 22637                           ;doprnt.c: 438: else if(scl > 10)
 22638  012C26  503C               	movf	i2scale@scl,w,c
 22639  012C28  0A80               	xorlw	128
 22640  012C2A  0F75               	addlw	-139
 22641  012C2C  A0D8               	btfss	status,0,c
 22642  012C2E  D059               	goto	i2l1185
 22643                           
 22644                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 22645  012C30  0E00               	movlw	0
 22646  012C32  6E0A               	movwf	i2___awdiv@divisor+1,c
 22647  012C34  0E0A               	movlw	10
 22648  012C36  6E09               	movwf	i2___awdiv@divisor,c
 22649  012C38  503C               	movf	i2scale@scl,w,c
 22650  012C3A  6E07               	movwf	i2___awdiv@dividend,c
 22651  012C3C  6A08               	clrf	i2___awdiv@dividend+1,c
 22652  012C3E  BE07               	btfsc	i2___awdiv@dividend,7,c
 22653  012C40  0608               	decf	i2___awdiv@dividend+1,f,c
 22654  012C42  EC05  F0AC         	call	i2___awdiv	;wreg free
 22655  012C46  0E09               	movlw	9
 22656  012C48  2407               	addwf	?i2___awdiv,w,c
 22657  012C4A  6E0F               	movwf	i2___wmul@multiplier,c
 22658  012C4C  0E00               	movlw	0
 22659  012C4E  2008               	addwfc	?i2___awdiv+1,w,c
 22660  012C50  6E10               	movwf	i2___wmul@multiplier+1,c
 22661  012C52  0E00               	movlw	0
 22662  012C54  6E12               	movwf	i2___wmul@multiplicand+1,c
 22663  012C56  0E03               	movlw	3
 22664  012C58  6E11               	movwf	i2___wmul@multiplicand,c
 22665  012C5A  ECBF  F0B2         	call	i2___wmul	;wreg free
 22666  012C5E  0EDD               	movlw	low __powers_
 22667  012C60  240F               	addwf	?i2___wmul,w,c
 22668  012C62  6EF6               	movwf	tblptrl,c
 22669  012C64  0EF0               	movlw	high __powers_
 22670  012C66  2010               	addwfc	?i2___wmul+1,w,c
 22671  012C68  6EF7               	movwf	tblptrh,c
 22672  012C6A                     	if	1	;There are 3 active tblptr bytes
 22673  012C6A  6AF8               	clrf	tblptru,c
 22674  012C6C  0E00               	movlw	low (__mediumconst shr (0+16))
 22675  012C6E  22F8               	addwfc	tblptru,f,c
 22676  012C70                     	endif
 22677  012C70  0009               	tblrd		*+
 22678  012C72  CFF5 F027          	movff	tablat,i2___ftmul@f1
 22679  012C76  0009               	tblrd		*+
 22680  012C78  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 22681  012C7C  000A               	tblrd		*-
 22682  012C7E  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 22683  012C82  0E00               	movlw	0
 22684  012C84  6E12               	movwf	i2___wmul@multiplicand+1,c
 22685  012C86  0E03               	movlw	3
 22686  012C88  6E11               	movwf	i2___wmul@multiplicand,c
 22687  012C8A  0E00               	movlw	0
 22688  012C8C  6E04               	movwf	i2___awmod@divisor+1,c
 22689  012C8E  0E0A               	movlw	10
 22690  012C90  6E03               	movwf	i2___awmod@divisor,c
 22691  012C92  503C               	movf	i2scale@scl,w,c
 22692  012C94  6E01               	movwf	i2___awmod@dividend,c
 22693  012C96  6A02               	clrf	i2___awmod@dividend+1,c
 22694  012C98  BE01               	btfsc	i2___awmod@dividend,7,c
 22695  012C9A  0602               	decf	i2___awmod@dividend+1,f,c
 22696  012C9C  EC74  F0AD         	call	i2___awmod	;wreg free
 22697  012CA0  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 22698  012CA4  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 22699  012CA8  ECBF  F0B2         	call	i2___wmul	;wreg free
 22700  012CAC  0EDD               	movlw	low __powers_
 22701  012CAE  240F               	addwf	?i2___wmul,w,c
 22702  012CB0  6EF6               	movwf	tblptrl,c
 22703  012CB2  0EF0               	movlw	high __powers_
 22704  012CB4  2010               	addwfc	?i2___wmul+1,w,c
 22705  012CB6  6EF7               	movwf	tblptrh,c
 22706  012CB8                     	if	1	;There are 3 active tblptr bytes
 22707  012CB8  6AF8               	clrf	tblptru,c
 22708  012CBA  0E00               	movlw	low (__mediumconst shr (0+16))
 22709  012CBC  22F8               	addwfc	tblptru,f,c
 22710  012CBE                     	endif
 22711  012CBE  0009               	tblrd		*+
 22712  012CC0  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 22713  012CC4  0009               	tblrd		*+
 22714  012CC6  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 22715  012CCA  000A               	tblrd		*-
 22716  012CCC  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 22717  012CD0  ECB8  F0A5         	call	i2___ftmul	;wreg free
 22718  012CD4  C027  F036         	movff	?i2___ftmul,?i2_scale
 22719  012CD8  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 22720  012CDC  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 22721  012CE0  0012               	return	
 22722  012CE2                     i2l1185:
 22723                           
 22724                           ;doprnt.c: 440: return _powers_[scl];
 22725  012CE2  503C               	movf	i2scale@scl,w,c
 22726  012CE4  0D03               	mullw	3
 22727  012CE6  0EDD               	movlw	low __powers_
 22728  012CE8  24F3               	addwf	prodl,w,c
 22729  012CEA  6EF6               	movwf	tblptrl,c
 22730  012CEC  0EF0               	movlw	high __powers_
 22731  012CEE  20F4               	addwfc	prodh,w,c
 22732  012CF0  6EF7               	movwf	tblptrh,c
 22733  012CF2                     	if	1	;There are 3 active tblptr bytes
 22734  012CF2  6AF8               	clrf	tblptru,c
 22735  012CF4  0E00               	movlw	low (__mediumconst shr (0+16))
 22736  012CF6  22F8               	addwfc	tblptru,f,c
 22737  012CF8                     	endif
 22738  012CF8  0009               	tblrd		*+
 22739  012CFA  CFF5 F036          	movff	tablat,?i2_scale
 22740  012CFE  0009               	tblrd		*+
 22741  012D00  CFF5 F037          	movff	tablat,?i2_scale+1
 22742  012D04  000A               	tblrd		*-
 22743  012D06  CFF5 F038          	movff	tablat,?i2_scale+2
 22744  012D0A  0012               	return	
 22745  012D0C                     __end_ofi2_scale:
 22746                           	opt stack 0
 22747                           tosu	equ	0xFFF
 22748                           tosh	equ	0xFFE
 22749                           tosl	equ	0xFFD
 22750                           pclatu	equ	0xFFB
 22751                           pclath	equ	0xFFA
 22752                           tblptru	equ	0xFF8
 22753                           tblptrh	equ	0xFF7
 22754                           tblptrl	equ	0xFF6
 22755                           tablat	equ	0xFF5
 22756                           prodh	equ	0xFF4
 22757                           prodl	equ	0xFF3
 22758                           intcon	equ	0xFF2
 22759                           indf0	equ	0xFEF
 22760                           postinc0	equ	0xFEE
 22761                           fsr0h	equ	0xFEA
 22762                           fsr0l	equ	0xFE9
 22763                           wreg	equ	0xFE8
 22764                           indf1	equ	0xFE7
 22765                           postdec1	equ	0xFE5
 22766                           fsr1h	equ	0xFE2
 22767                           fsr1l	equ	0xFE1
 22768                           bsr	equ	0xFE0
 22769                           indf2	equ	0xFDF
 22770                           postinc2	equ	0xFDE
 22771                           postdec2	equ	0xFDD
 22772                           fsr2h	equ	0xFDA
 22773                           fsr2l	equ	0xFD9
 22774                           status	equ	0xFD8
 22775                           
 22776 ;; *************** function i2_putch *****************
 22777 ;; Defined at:
 22778 ;;		line 180 in file "mcc_generated_files/eusart2.c"
 22779 ;; Parameters:    Size  Location     Type
 22780 ;;  txData          1    wreg     unsigned char 
 22781 ;; Auto vars:     Size  Location     Type
 22782 ;;  txData          1    1[COMRAM] unsigned char 
 22783 ;; Return value:  Size  Location     Type
 22784 ;;                  1    wreg      void 
 22785 ;; Registers used:
 22786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22787 ;; Tracked objects:
 22788 ;;		On entry : 0/0
 22789 ;;		On exit  : 0/0
 22790 ;;		Unchanged: 0/0
 22791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22793 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22795 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22796 ;;Total ram usage:        1 bytes
 22797 ;; Hardware stack levels used:    1
 22798 ;; Hardware stack levels required when called:    1
 22799 ;; This function calls:
 22800 ;;		i2_EUSART2_Write
 22801 ;; This function is called by:
 22802 ;;		i2_printf
 22803 ;; This function uses a non-reentrant model
 22804 ;;
 22805                           
 22806                           	psect	text80
 22807  0167AC                     __ptext80:
 22808                           	opt stack 0
 22809  0167AC                     i2_putch:
 22810                           	opt stack 14
 22811                           
 22812                           ;incstack = 0
 22813                           ;i2putch@txData stored from wreg
 22814  0167AC  6E02               	movwf	i2putch@txData,c
 22815                           
 22816                           ;eusart2.c: 182: EUSART2_Write(txData);
 22817  0167AE  5002               	movf	i2putch@txData,w,c
 22818  0167B0  ECAD  F0B0         	call	i2_EUSART2_Write
 22819  0167B4  0012               	return		;funcret
 22820  0167B6                     __end_ofi2_putch:
 22821                           	opt stack 0
 22822                           tosu	equ	0xFFF
 22823                           tosh	equ	0xFFE
 22824                           tosl	equ	0xFFD
 22825                           pclatu	equ	0xFFB
 22826                           pclath	equ	0xFFA
 22827                           tblptru	equ	0xFF8
 22828                           tblptrh	equ	0xFF7
 22829                           tblptrl	equ	0xFF6
 22830                           tablat	equ	0xFF5
 22831                           prodh	equ	0xFF4
 22832                           prodl	equ	0xFF3
 22833                           intcon	equ	0xFF2
 22834                           indf0	equ	0xFEF
 22835                           postinc0	equ	0xFEE
 22836                           fsr0h	equ	0xFEA
 22837                           fsr0l	equ	0xFE9
 22838                           wreg	equ	0xFE8
 22839                           indf1	equ	0xFE7
 22840                           postdec1	equ	0xFE5
 22841                           fsr1h	equ	0xFE2
 22842                           fsr1l	equ	0xFE1
 22843                           bsr	equ	0xFE0
 22844                           indf2	equ	0xFDF
 22845                           postinc2	equ	0xFDE
 22846                           postdec2	equ	0xFDD
 22847                           fsr2h	equ	0xFDA
 22848                           fsr2l	equ	0xFD9
 22849                           status	equ	0xFD8
 22850                           
 22851 ;; *************** function i2_EUSART2_Write *****************
 22852 ;; Defined at:
 22853 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 22854 ;; Parameters:    Size  Location     Type
 22855 ;;  txData          1    wreg     unsigned char 
 22856 ;; Auto vars:     Size  Location     Type
 22857 ;;  txData          1    0[COMRAM] unsigned char 
 22858 ;; Return value:  Size  Location     Type
 22859 ;;                  1    wreg      void 
 22860 ;; Registers used:
 22861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22862 ;; Tracked objects:
 22863 ;;		On entry : 0/0
 22864 ;;		On exit  : 0/0
 22865 ;;		Unchanged: 0/0
 22866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22871 ;;Total ram usage:        1 bytes
 22872 ;; Hardware stack levels used:    1
 22873 ;; This function calls:
 22874 ;;		Nothing
 22875 ;; This function is called by:
 22876 ;;		i2_putch
 22877 ;; This function uses a non-reentrant model
 22878 ;;
 22879                           
 22880                           	psect	text81
 22881  01615A                     __ptext81:
 22882                           	opt stack 0
 22883  01615A                     i2_EUSART2_Write:
 22884                           	opt stack 14
 22885                           
 22886                           ;incstack = 0
 22887                           ;i2EUSART2_Write@txData stored from wreg
 22888  01615A  6E01               	movwf	i2EUSART2_Write@txData,c
 22889                           
 22890                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
 22891  01615C  D001               	goto	i2l374
 22892  01615E                     i2l375:
 22893                           
 22894                           ; BSR set to: 1
 22895  01615E  0004               	clrwdt		;# 
 22896  016160                     i2l374:
 22897  016160  0101               	movlb	1	; () banked
 22898  016162  51DC               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 22899  016164  B4D8               	btfsc	status,2,c
 22900  016166  D7FB               	goto	i2l375
 22901                           
 22902                           ; BSR set to: 1
 22903                           ;eusart2.c: 156: }
 22904                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
 22905  016168  010E               	movlb	14	; () banked
 22906  01616A  BD2C               	btfsc	44,6,b	;volatile
 22907  01616C  D003               	goto	i2l377
 22908                           
 22909                           ; BSR set to: 14
 22910                           ;eusart2.c: 159: {
 22911                           ;eusart2.c: 160: TX2REG = txData;
 22912  01616E  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 22913                           
 22914                           ;eusart2.c: 161: }
 22915  016172  D013               	goto	i2l378
 22916  016174                     i2l377:
 22917                           
 22918                           ; BSR set to: 14
 22919                           ;eusart2.c: 162: else
 22920                           ;eusart2.c: 163: {
 22921                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
 22922  016174  9D2C               	bcf	44,6,b	;volatile
 22923                           
 22924                           ; BSR set to: 14
 22925                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
 22926  016176  0101               	movlb	1	; () banked
 22927  016178  51DE               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 22928  01617A  0D01               	mullw	1
 22929  01617C  0E00               	movlw	low _eusart2TxBuffer
 22930  01617E  24F3               	addwf	prodl,w,c
 22931  016180  6ED9               	movwf	fsr2l,c
 22932  016182  0E02               	movlw	high _eusart2TxBuffer
 22933  016184  20F4               	addwfc	prodh,w,c
 22934  016186  6EDA               	movwf	fsr2h,c
 22935  016188  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 22936                           
 22937                           ; BSR set to: 1
 22938  01618C  2BDE               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 22939                           
 22940                           ; BSR set to: 1
 22941                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 22942  01618E  0E7F               	movlw	127
 22943  016190  65DE               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 22944  016192  D002               	goto	i2l379
 22945                           
 22946                           ; BSR set to: 1
 22947                           ;eusart2.c: 167: {
 22948                           ;eusart2.c: 168: eusart2TxHead = 0;
 22949  016194  0E00               	movlw	0
 22950  016196  6FDE               	movwf	_eusart2TxHead& (0+255),b	;volatile
 22951  016198                     i2l379:
 22952                           
 22953                           ; BSR set to: 1
 22954                           ;eusart2.c: 169: }
 22955                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
 22956                           
 22957                           ; BSR set to: 1
 22958  016198  07DC               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 22959  01619A                     i2l378:
 22960                           
 22961                           ;eusart2.c: 171: }
 22962                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
 22963                           
 22964                           ; BSR set to: 1
 22965  01619A  010E               	movlb	14	; () banked
 22966  01619C  8D2C               	bsf	44,6,b	;volatile
 22967                           
 22968                           ; BSR set to: 14
 22969  01619E  0012               	return		;funcret
 22970  0161A0                     __end_ofi2_EUSART2_Write:
 22971                           	opt stack 0
 22972                           tosu	equ	0xFFF
 22973                           tosh	equ	0xFFE
 22974                           tosl	equ	0xFFD
 22975                           pclatu	equ	0xFFB
 22976                           pclath	equ	0xFFA
 22977                           tblptru	equ	0xFF8
 22978                           tblptrh	equ	0xFF7
 22979                           tblptrl	equ	0xFF6
 22980                           tablat	equ	0xFF5
 22981                           prodh	equ	0xFF4
 22982                           prodl	equ	0xFF3
 22983                           intcon	equ	0xFF2
 22984                           indf0	equ	0xFEF
 22985                           postinc0	equ	0xFEE
 22986                           fsr0h	equ	0xFEA
 22987                           fsr0l	equ	0xFE9
 22988                           wreg	equ	0xFE8
 22989                           indf1	equ	0xFE7
 22990                           postdec1	equ	0xFE5
 22991                           fsr1h	equ	0xFE2
 22992                           fsr1l	equ	0xFE1
 22993                           bsr	equ	0xFE0
 22994                           indf2	equ	0xFDF
 22995                           postinc2	equ	0xFDE
 22996                           postdec2	equ	0xFDD
 22997                           fsr2h	equ	0xFDA
 22998                           fsr2l	equ	0xFD9
 22999                           status	equ	0xFD8
 23000                           
 23001 ;; *************** function i2_isdigit *****************
 23002 ;; Defined at:
 23003 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 23004 ;; Parameters:    Size  Location     Type
 23005 ;;  c               1    wreg     unsigned char 
 23006 ;; Auto vars:     Size  Location     Type
 23007 ;;  c               1    2[COMRAM] unsigned char 
 23008 ;; Return value:  Size  Location     Type
 23009 ;;		None               void
 23010 ;; Registers used:
 23011 ;;		wreg, status,2, status,0
 23012 ;; Tracked objects:
 23013 ;;		On entry : 0/0
 23014 ;;		On exit  : 0/0
 23015 ;;		Unchanged: 0/0
 23016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23019 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23020 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23021 ;;Total ram usage:        3 bytes
 23022 ;; Hardware stack levels used:    1
 23023 ;; This function calls:
 23024 ;;		Nothing
 23025 ;; This function is called by:
 23026 ;;		i2_printf
 23027 ;; This function uses a non-reentrant model
 23028 ;;
 23029                           
 23030                           	psect	text82
 23031  01662E                     __ptext82:
 23032                           	opt stack 0
 23033  01662E                     i2_isdigit:
 23034                           	opt stack 15
 23035                           
 23036                           ; BSR set to: 14
 23037                           ;incstack = 0
 23038                           ;i2isdigit@c stored from wreg
 23039  01662E  6E03               	movwf	i2isdigit@c,c
 23040  016630  0E00               	movlw	0
 23041  016632  6E02               	movwf	i2_isdigit$2671,c
 23042  016634  0E3A               	movlw	58
 23043  016636  6003               	cpfslt	i2isdigit@c,c
 23044  016638  D005               	goto	i2l1711
 23045  01663A  0E2F               	movlw	47
 23046  01663C  6403               	cpfsgt	i2isdigit@c,c
 23047  01663E  D002               	goto	i2l1711
 23048  016640  0E01               	movlw	1
 23049  016642  6E02               	movwf	i2_isdigit$2671,c
 23050  016644                     i2l1711:
 23051  016644  C002  F001         	movff	i2_isdigit$2671,??i2_isdigit
 23052  016648  3001               	rrcf	??i2_isdigit,w,c
 23053  01664A  0012               	return	
 23054  01664C                     __end_ofi2_isdigit:
 23055                           	opt stack 0
 23056                           tosu	equ	0xFFF
 23057                           tosh	equ	0xFFE
 23058                           tosl	equ	0xFFD
 23059                           pclatu	equ	0xFFB
 23060                           pclath	equ	0xFFA
 23061                           tblptru	equ	0xFF8
 23062                           tblptrh	equ	0xFF7
 23063                           tblptrl	equ	0xFF6
 23064                           tablat	equ	0xFF5
 23065                           prodh	equ	0xFF4
 23066                           prodl	equ	0xFF3
 23067                           intcon	equ	0xFF2
 23068                           indf0	equ	0xFEF
 23069                           postinc0	equ	0xFEE
 23070                           fsr0h	equ	0xFEA
 23071                           fsr0l	equ	0xFE9
 23072                           wreg	equ	0xFE8
 23073                           indf1	equ	0xFE7
 23074                           postdec1	equ	0xFE5
 23075                           fsr1h	equ	0xFE2
 23076                           fsr1l	equ	0xFE1
 23077                           bsr	equ	0xFE0
 23078                           indf2	equ	0xFDF
 23079                           postinc2	equ	0xFDE
 23080                           postdec2	equ	0xFDD
 23081                           fsr2h	equ	0xFDA
 23082                           fsr2l	equ	0xFD9
 23083                           status	equ	0xFD8
 23084                           
 23085 ;; *************** function i2_fround *****************
 23086 ;; Defined at:
 23087 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 23088 ;; Parameters:    Size  Location     Type
 23089 ;;  prec            1    wreg     unsigned char 
 23090 ;; Auto vars:     Size  Location     Type
 23091 ;;  prec            1   62[COMRAM] unsigned char 
 23092 ;; Return value:  Size  Location     Type
 23093 ;;                  3   53[COMRAM] unsigned char 
 23094 ;; Registers used:
 23095 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23096 ;; Tracked objects:
 23097 ;;		On entry : 0/0
 23098 ;;		On exit  : 0/0
 23099 ;;		Unchanged: 0/0
 23100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23101 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23102 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23104 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23105 ;;Total ram usage:       10 bytes
 23106 ;; Hardware stack levels used:    1
 23107 ;; Hardware stack levels required when called:    2
 23108 ;; This function calls:
 23109 ;;		i2___awdiv
 23110 ;;		i2___awmod
 23111 ;;		i2___ftmul
 23112 ;;		i2___wmul
 23113 ;; This function is called by:
 23114 ;;		i2_printf
 23115 ;; This function uses a non-reentrant model
 23116 ;;
 23117                           
 23118                           	psect	text83
 23119  013308                     __ptext83:
 23120                           	opt stack 0
 23121  013308                     i2_fround:
 23122                           	opt stack 13
 23123                           
 23124                           ;incstack = 0
 23125                           ;i2fround@prec stored from wreg
 23126  013308  6E3F               	movwf	i2fround@prec,c
 23127                           
 23128                           ;doprnt.c: 413: if(prec>=110)
 23129  01330A  0E6D               	movlw	109
 23130  01330C  643F               	cpfsgt	i2fround@prec,c
 23131  01330E  D0A8               	goto	i2l1172
 23132                           
 23133                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 23134  013310  0E00               	movlw	0
 23135  013312  6E12               	movwf	i2___wmul@multiplicand+1,c
 23136  013314  0E03               	movlw	3
 23137  013316  6E11               	movwf	i2___wmul@multiplicand,c
 23138  013318  0E00               	movlw	0
 23139  01331A  6E0A               	movwf	i2___awdiv@divisor+1,c
 23140  01331C  0E0A               	movlw	10
 23141  01331E  6E09               	movwf	i2___awdiv@divisor,c
 23142  013320  0E00               	movlw	0
 23143  013322  6E04               	movwf	i2___awmod@divisor+1,c
 23144  013324  0E64               	movlw	100
 23145  013326  6E03               	movwf	i2___awmod@divisor,c
 23146  013328  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 23147  01332C  6A02               	clrf	i2___awmod@dividend+1,c
 23148  01332E  EC74  F0AD         	call	i2___awmod	;wreg free
 23149  013332  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 23150  013336  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 23151  01333A  EC05  F0AC         	call	i2___awdiv	;wreg free
 23152  01333E  0E09               	movlw	9
 23153  013340  2407               	addwf	?i2___awdiv,w,c
 23154  013342  6E0F               	movwf	i2___wmul@multiplier,c
 23155  013344  0E00               	movlw	0
 23156  013346  2008               	addwfc	?i2___awdiv+1,w,c
 23157  013348  6E10               	movwf	i2___wmul@multiplier+1,c
 23158  01334A  ECBF  F0B2         	call	i2___wmul	;wreg free
 23159  01334E  0E04               	movlw	low __npowers_
 23160  013350  240F               	addwf	?i2___wmul,w,c
 23161  013352  6EF6               	movwf	tblptrl,c
 23162  013354  0EF1               	movlw	high __npowers_
 23163  013356  2010               	addwfc	?i2___wmul+1,w,c
 23164  013358  6EF7               	movwf	tblptrh,c
 23165  01335A                     	if	1	;There are 3 active tblptr bytes
 23166  01335A  6AF8               	clrf	tblptru,c
 23167  01335C  0E00               	movlw	low (__mediumconst shr (0+16))
 23168  01335E  22F8               	addwfc	tblptru,f,c
 23169  013360                     	endif
 23170  013360  0009               	tblrd		*+
 23171  013362  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 23172  013366  0009               	tblrd		*+
 23173  013368  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 23174  01336C  000A               	tblrd		*-
 23175  01336E  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 23176  013372  0E00               	movlw	0
 23177  013374  6E0A               	movwf	i2___awdiv@divisor+1,c
 23178  013376  0E64               	movlw	100
 23179  013378  6E09               	movwf	i2___awdiv@divisor,c
 23180  01337A  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 23181  01337E  6A08               	clrf	i2___awdiv@dividend+1,c
 23182  013380  EC05  F0AC         	call	i2___awdiv	;wreg free
 23183  013384  0E12               	movlw	18
 23184  013386  2407               	addwf	?i2___awdiv,w,c
 23185  013388  6E0F               	movwf	i2___wmul@multiplier,c
 23186  01338A  0E00               	movlw	0
 23187  01338C  2008               	addwfc	?i2___awdiv+1,w,c
 23188  01338E  6E10               	movwf	i2___wmul@multiplier+1,c
 23189  013390  0E00               	movlw	0
 23190  013392  6E12               	movwf	i2___wmul@multiplicand+1,c
 23191  013394  0E03               	movlw	3
 23192  013396  6E11               	movwf	i2___wmul@multiplicand,c
 23193  013398  ECBF  F0B2         	call	i2___wmul	;wreg free
 23194  01339C  0E04               	movlw	low __npowers_
 23195  01339E  240F               	addwf	?i2___wmul,w,c
 23196  0133A0  6EF6               	movwf	tblptrl,c
 23197  0133A2  0EF1               	movlw	high __npowers_
 23198  0133A4  2010               	addwfc	?i2___wmul+1,w,c
 23199  0133A6  6EF7               	movwf	tblptrh,c
 23200  0133A8                     	if	1	;There are 3 active tblptr bytes
 23201  0133A8  6AF8               	clrf	tblptru,c
 23202  0133AA  0E00               	movlw	low (__mediumconst shr (0+16))
 23203  0133AC  22F8               	addwfc	tblptru,f,c
 23204  0133AE                     	endif
 23205  0133AE  0009               	tblrd		*+
 23206  0133B0  CFF5 F027          	movff	tablat,i2___ftmul@f1
 23207  0133B4  0009               	tblrd		*+
 23208  0133B6  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 23209  0133BA  000A               	tblrd		*-
 23210  0133BC  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 23211  0133C0  ECB8  F0A5         	call	i2___ftmul	;wreg free
 23212  0133C4  C027  F03C         	movff	?i2___ftmul,i2_fround$3529
 23213  0133C8  C028  F03D         	movff	?i2___ftmul+1,i2_fround$3529+1
 23214  0133CC  C029  F03E         	movff	?i2___ftmul+2,i2_fround$3529+2
 23215                           
 23216                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 23217  0133D0  0E00               	movlw	0
 23218  0133D2  6E12               	movwf	i2___wmul@multiplicand+1,c
 23219  0133D4  0E03               	movlw	3
 23220  0133D6  6E11               	movwf	i2___wmul@multiplicand,c
 23221  0133D8  0E00               	movlw	0
 23222  0133DA  6E04               	movwf	i2___awmod@divisor+1,c
 23223  0133DC  0E0A               	movlw	10
 23224  0133DE  6E03               	movwf	i2___awmod@divisor,c
 23225  0133E0  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 23226  0133E4  6A02               	clrf	i2___awmod@dividend+1,c
 23227  0133E6  EC74  F0AD         	call	i2___awmod	;wreg free
 23228  0133EA  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 23229  0133EE  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 23230  0133F2  ECBF  F0B2         	call	i2___wmul	;wreg free
 23231  0133F6  0E04               	movlw	low __npowers_
 23232  0133F8  240F               	addwf	?i2___wmul,w,c
 23233  0133FA  6EF6               	movwf	tblptrl,c
 23234  0133FC  0EF1               	movlw	high __npowers_
 23235  0133FE  2010               	addwfc	?i2___wmul+1,w,c
 23236  013400  6EF7               	movwf	tblptrh,c
 23237  013402                     	if	1	;There are 3 active tblptr bytes
 23238  013402  6AF8               	clrf	tblptru,c
 23239  013404  0E00               	movlw	low (__mediumconst shr (0+16))
 23240  013406  22F8               	addwfc	tblptru,f,c
 23241  013408                     	endif
 23242  013408  0009               	tblrd		*+
 23243  01340A  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 23244  01340E  0009               	tblrd		*+
 23245  013410  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 23246  013414  000A               	tblrd		*-
 23247  013416  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 23248  01341A  C03C  F027         	movff	i2_fround$3529,i2___ftmul@f1
 23249  01341E  C03D  F028         	movff	i2_fround$3529+1,i2___ftmul@f1+1
 23250  013422  C03E  F029         	movff	i2_fround$3529+2,i2___ftmul@f1+2
 23251  013426  ECB8  F0A5         	call	i2___ftmul	;wreg free
 23252  01342A  C027  F039         	movff	?i2___ftmul,i2_fround$3530
 23253  01342E  C028  F03A         	movff	?i2___ftmul+1,i2_fround$3530+1
 23254  013432  C029  F03B         	movff	?i2___ftmul+2,i2_fround$3530+2
 23255                           
 23256                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 23257  013436  C039  F027         	movff	i2_fround$3530,i2___ftmul@f1
 23258  01343A  C03A  F028         	movff	i2_fround$3530+1,i2___ftmul@f1+1
 23259  01343E  C03B  F029         	movff	i2_fround$3530+2,i2___ftmul@f1+2
 23260  013442  0E00               	movlw	0
 23261  013444  6E2A               	movwf	i2___ftmul@f2,c
 23262  013446  0E00               	movlw	0
 23263  013448  6E2B               	movwf	i2___ftmul@f2+1,c
 23264  01344A  0E3F               	movlw	63
 23265  01344C  6E2C               	movwf	i2___ftmul@f2+2,c
 23266  01344E  ECB8  F0A5         	call	i2___ftmul	;wreg free
 23267  013452  C027  F036         	movff	?i2___ftmul,?i2_fround
 23268  013456  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 23269  01345A  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 23270  01345E  0012               	return	
 23271  013460                     i2l1172:
 23272                           
 23273                           ;doprnt.c: 415: else if(prec > 10)
 23274  013460  0E0A               	movlw	10
 23275  013462  643F               	cpfsgt	i2fround@prec,c
 23276  013464  D069               	goto	i2l1175
 23277                           
 23278                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 23279  013466  0E00               	movlw	0
 23280  013468  6E12               	movwf	i2___wmul@multiplicand+1,c
 23281  01346A  0E03               	movlw	3
 23282  01346C  6E11               	movwf	i2___wmul@multiplicand,c
 23283  01346E  0E00               	movlw	0
 23284  013470  6E04               	movwf	i2___awmod@divisor+1,c
 23285  013472  0E0A               	movlw	10
 23286  013474  6E03               	movwf	i2___awmod@divisor,c
 23287  013476  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 23288  01347A  6A02               	clrf	i2___awmod@dividend+1,c
 23289  01347C  EC74  F0AD         	call	i2___awmod	;wreg free
 23290  013480  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 23291  013484  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 23292  013488  ECBF  F0B2         	call	i2___wmul	;wreg free
 23293  01348C  0E04               	movlw	low __npowers_
 23294  01348E  240F               	addwf	?i2___wmul,w,c
 23295  013490  6EF6               	movwf	tblptrl,c
 23296  013492  0EF1               	movlw	high __npowers_
 23297  013494  2010               	addwfc	?i2___wmul+1,w,c
 23298  013496  6EF7               	movwf	tblptrh,c
 23299  013498                     	if	1	;There are 3 active tblptr bytes
 23300  013498  6AF8               	clrf	tblptru,c
 23301  01349A  0E00               	movlw	low (__mediumconst shr (0+16))
 23302  01349C  22F8               	addwfc	tblptru,f,c
 23303  01349E                     	endif
 23304  01349E  0009               	tblrd		*+
 23305  0134A0  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 23306  0134A4  0009               	tblrd		*+
 23307  0134A6  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 23308  0134AA  000A               	tblrd		*-
 23309  0134AC  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 23310  0134B0  0E00               	movlw	0
 23311  0134B2  6E0A               	movwf	i2___awdiv@divisor+1,c
 23312  0134B4  0E0A               	movlw	10
 23313  0134B6  6E09               	movwf	i2___awdiv@divisor,c
 23314  0134B8  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 23315  0134BC  6A08               	clrf	i2___awdiv@dividend+1,c
 23316  0134BE  EC05  F0AC         	call	i2___awdiv	;wreg free
 23317  0134C2  0E09               	movlw	9
 23318  0134C4  2407               	addwf	?i2___awdiv,w,c
 23319  0134C6  6E0F               	movwf	i2___wmul@multiplier,c
 23320  0134C8  0E00               	movlw	0
 23321  0134CA  2008               	addwfc	?i2___awdiv+1,w,c
 23322  0134CC  6E10               	movwf	i2___wmul@multiplier+1,c
 23323  0134CE  0E00               	movlw	0
 23324  0134D0  6E12               	movwf	i2___wmul@multiplicand+1,c
 23325  0134D2  0E03               	movlw	3
 23326  0134D4  6E11               	movwf	i2___wmul@multiplicand,c
 23327  0134D6  ECBF  F0B2         	call	i2___wmul	;wreg free
 23328  0134DA  0E04               	movlw	low __npowers_
 23329  0134DC  240F               	addwf	?i2___wmul,w,c
 23330  0134DE  6EF6               	movwf	tblptrl,c
 23331  0134E0  0EF1               	movlw	high __npowers_
 23332  0134E2  2010               	addwfc	?i2___wmul+1,w,c
 23333  0134E4  6EF7               	movwf	tblptrh,c
 23334  0134E6                     	if	1	;There are 3 active tblptr bytes
 23335  0134E6  6AF8               	clrf	tblptru,c
 23336  0134E8  0E00               	movlw	low (__mediumconst shr (0+16))
 23337  0134EA  22F8               	addwfc	tblptru,f,c
 23338  0134EC                     	endif
 23339  0134EC  0009               	tblrd		*+
 23340  0134EE  CFF5 F027          	movff	tablat,i2___ftmul@f1
 23341  0134F2  0009               	tblrd		*+
 23342  0134F4  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 23343  0134F8  000A               	tblrd		*-
 23344  0134FA  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 23345  0134FE  ECB8  F0A5         	call	i2___ftmul	;wreg free
 23346  013502  C027  F03C         	movff	?i2___ftmul,i2_fround$3529
 23347  013506  C028  F03D         	movff	?i2___ftmul+1,i2_fround$3529+1
 23348  01350A  C029  F03E         	movff	?i2___ftmul+2,i2_fround$3529+2
 23349                           
 23350                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 23351  01350E  C03C  F027         	movff	i2_fround$3529,i2___ftmul@f1
 23352  013512  C03D  F028         	movff	i2_fround$3529+1,i2___ftmul@f1+1
 23353  013516  C03E  F029         	movff	i2_fround$3529+2,i2___ftmul@f1+2
 23354  01351A  0E00               	movlw	0
 23355  01351C  6E2A               	movwf	i2___ftmul@f2,c
 23356  01351E  0E00               	movlw	0
 23357  013520  6E2B               	movwf	i2___ftmul@f2+1,c
 23358  013522  0E3F               	movlw	63
 23359  013524  6E2C               	movwf	i2___ftmul@f2+2,c
 23360  013526  ECB8  F0A5         	call	i2___ftmul	;wreg free
 23361  01352A  C027  F036         	movff	?i2___ftmul,?i2_fround
 23362  01352E  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 23363  013532  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 23364  013536  0012               	return	
 23365  013538                     i2l1175:
 23366                           
 23367                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 23368  013538  503F               	movf	i2fround@prec,w,c
 23369  01353A  0D03               	mullw	3
 23370  01353C  0E04               	movlw	low __npowers_
 23371  01353E  24F3               	addwf	prodl,w,c
 23372  013540  6EF6               	movwf	tblptrl,c
 23373  013542  0EF1               	movlw	high __npowers_
 23374  013544  20F4               	addwfc	prodh,w,c
 23375  013546  6EF7               	movwf	tblptrh,c
 23376  013548                     	if	1	;There are 3 active tblptr bytes
 23377  013548  6AF8               	clrf	tblptru,c
 23378  01354A  0E00               	movlw	low (__mediumconst shr (0+16))
 23379  01354C  22F8               	addwfc	tblptru,f,c
 23380  01354E                     	endif
 23381  01354E  0009               	tblrd		*+
 23382  013550  CFF5 F027          	movff	tablat,i2___ftmul@f1
 23383  013554  0009               	tblrd		*+
 23384  013556  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 23385  01355A  000A               	tblrd		*-
 23386  01355C  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 23387  013560  0E00               	movlw	0
 23388  013562  6E2A               	movwf	i2___ftmul@f2,c
 23389  013564  0E00               	movlw	0
 23390  013566  6E2B               	movwf	i2___ftmul@f2+1,c
 23391  013568  0E3F               	movlw	63
 23392  01356A  6E2C               	movwf	i2___ftmul@f2+2,c
 23393  01356C  ECB8  F0A5         	call	i2___ftmul	;wreg free
 23394  013570  C027  F036         	movff	?i2___ftmul,?i2_fround
 23395  013574  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 23396  013578  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 23397  01357C  0012               	return	
 23398  01357E                     __end_ofi2_fround:
 23399                           	opt stack 0
 23400                           tosu	equ	0xFFF
 23401                           tosh	equ	0xFFE
 23402                           tosl	equ	0xFFD
 23403                           pclatu	equ	0xFFB
 23404                           pclath	equ	0xFFA
 23405                           tblptru	equ	0xFF8
 23406                           tblptrh	equ	0xFF7
 23407                           tblptrl	equ	0xFF6
 23408                           tablat	equ	0xFF5
 23409                           prodh	equ	0xFF4
 23410                           prodl	equ	0xFF3
 23411                           intcon	equ	0xFF2
 23412                           indf0	equ	0xFEF
 23413                           postinc0	equ	0xFEE
 23414                           fsr0h	equ	0xFEA
 23415                           fsr0l	equ	0xFE9
 23416                           wreg	equ	0xFE8
 23417                           indf1	equ	0xFE7
 23418                           postdec1	equ	0xFE5
 23419                           fsr1h	equ	0xFE2
 23420                           fsr1l	equ	0xFE1
 23421                           bsr	equ	0xFE0
 23422                           indf2	equ	0xFDF
 23423                           postinc2	equ	0xFDE
 23424                           postdec2	equ	0xFDD
 23425                           fsr2h	equ	0xFDA
 23426                           fsr2l	equ	0xFD9
 23427                           status	equ	0xFD8
 23428                           
 23429 ;; *************** function i2___awmod *****************
 23430 ;; Defined at:
 23431 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 23432 ;; Parameters:    Size  Location     Type
 23433 ;;  dividend        2    0[COMRAM] int 
 23434 ;;  divisor         2    2[COMRAM] int 
 23435 ;; Auto vars:     Size  Location     Type
 23436 ;;  __awmod         1    5[COMRAM] unsigned char 
 23437 ;;  __awmod         1    4[COMRAM] unsigned char 
 23438 ;; Return value:  Size  Location     Type
 23439 ;;                  2    0[COMRAM] int 
 23440 ;; Registers used:
 23441 ;;		wreg, status,2, status,0
 23442 ;; Tracked objects:
 23443 ;;		On entry : 0/0
 23444 ;;		On exit  : 0/0
 23445 ;;		Unchanged: 0/0
 23446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23447 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23450 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23451 ;;Total ram usage:        6 bytes
 23452 ;; Hardware stack levels used:    1
 23453 ;; This function calls:
 23454 ;;		Nothing
 23455 ;; This function is called by:
 23456 ;;		i2_fround
 23457 ;;		i2_scale
 23458 ;; This function uses a non-reentrant model
 23459 ;;
 23460                           
 23461                           	psect	text84
 23462  015AE8                     __ptext84:
 23463                           	opt stack 0
 23464  015AE8                     i2___awmod:
 23465                           	opt stack 14
 23466                           
 23467                           ;incstack = 0
 23468  015AE8  0E00               	movlw	0
 23469  015AEA  6E06               	movwf	i2___awmod@sign,c
 23470  015AEC  AE02               	btfss	i2___awmod@dividend+1,7,c
 23471  015AEE  D006               	goto	i2l1516
 23472  015AF0  6C01               	negf	i2___awmod@dividend,c
 23473  015AF2  1E02               	comf	i2___awmod@dividend+1,f,c
 23474  015AF4  B0D8               	btfsc	status,0,c
 23475  015AF6  2A02               	incf	i2___awmod@dividend+1,f,c
 23476  015AF8  0E01               	movlw	1
 23477  015AFA  6E06               	movwf	i2___awmod@sign,c
 23478  015AFC                     i2l1516:
 23479  015AFC  AE04               	btfss	i2___awmod@divisor+1,7,c
 23480  015AFE  D004               	goto	i2l1517
 23481  015B00  6C03               	negf	i2___awmod@divisor,c
 23482  015B02  1E04               	comf	i2___awmod@divisor+1,f,c
 23483  015B04  B0D8               	btfsc	status,0,c
 23484  015B06  2A04               	incf	i2___awmod@divisor+1,f,c
 23485  015B08                     i2l1517:
 23486  015B08  5003               	movf	i2___awmod@divisor,w,c
 23487  015B0A  1004               	iorwf	i2___awmod@divisor+1,w,c
 23488  015B0C  B4D8               	btfsc	status,2,c
 23489  015B0E  D018               	goto	i2l1524
 23490  015B10  0E01               	movlw	1
 23491  015B12  6E05               	movwf	i2___awmod@counter,c
 23492  015B14  D004               	goto	i2l1519
 23493  015B16  90D8               	bcf	status,0,c
 23494  015B18  3603               	rlcf	i2___awmod@divisor,f,c
 23495  015B1A  3604               	rlcf	i2___awmod@divisor+1,f,c
 23496  015B1C  2A05               	incf	i2___awmod@counter,f,c
 23497  015B1E                     i2l1519:
 23498  015B1E  AE04               	btfss	i2___awmod@divisor+1,7,c
 23499  015B20  D7FA               	goto	i2l1520
 23500  015B22                     i2u1148_40:
 23501  015B22  5003               	movf	i2___awmod@divisor,w,c
 23502  015B24  5C01               	subwf	i2___awmod@dividend,w,c
 23503  015B26  5004               	movf	i2___awmod@divisor+1,w,c
 23504  015B28  5802               	subwfb	i2___awmod@dividend+1,w,c
 23505  015B2A  A0D8               	btfss	status,0,c
 23506  015B2C  D004               	goto	i2l1523
 23507  015B2E  5003               	movf	i2___awmod@divisor,w,c
 23508  015B30  5E01               	subwf	i2___awmod@dividend,f,c
 23509  015B32  5004               	movf	i2___awmod@divisor+1,w,c
 23510  015B34  5A02               	subwfb	i2___awmod@dividend+1,f,c
 23511  015B36                     i2l1523:
 23512  015B36  90D8               	bcf	status,0,c
 23513  015B38  3204               	rrcf	i2___awmod@divisor+1,f,c
 23514  015B3A  3203               	rrcf	i2___awmod@divisor,f,c
 23515  015B3C  2E05               	decfsz	i2___awmod@counter,f,c
 23516  015B3E  D7F1               	goto	i2u1148_40
 23517  015B40                     i2l1524:
 23518  015B40  5006               	movf	i2___awmod@sign,w,c
 23519  015B42  B4D8               	btfsc	status,2,c
 23520  015B44  D004               	goto	i2l1525
 23521  015B46  6C01               	negf	i2___awmod@dividend,c
 23522  015B48  1E02               	comf	i2___awmod@dividend+1,f,c
 23523  015B4A  B0D8               	btfsc	status,0,c
 23524  015B4C  2A02               	incf	i2___awmod@dividend+1,f,c
 23525  015B4E                     i2l1525:
 23526  015B4E  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 23527  015B52  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 23528  015B56  0012               	return	
 23529  015B58                     __end_ofi2___awmod:
 23530                           	opt stack 0
 23531                           tosu	equ	0xFFF
 23532                           tosh	equ	0xFFE
 23533                           tosl	equ	0xFFD
 23534                           pclatu	equ	0xFFB
 23535                           pclath	equ	0xFFA
 23536                           tblptru	equ	0xFF8
 23537                           tblptrh	equ	0xFF7
 23538                           tblptrl	equ	0xFF6
 23539                           tablat	equ	0xFF5
 23540                           prodh	equ	0xFF4
 23541                           prodl	equ	0xFF3
 23542                           intcon	equ	0xFF2
 23543                           indf0	equ	0xFEF
 23544                           postinc0	equ	0xFEE
 23545                           fsr0h	equ	0xFEA
 23546                           fsr0l	equ	0xFE9
 23547                           wreg	equ	0xFE8
 23548                           indf1	equ	0xFE7
 23549                           postdec1	equ	0xFE5
 23550                           fsr1h	equ	0xFE2
 23551                           fsr1l	equ	0xFE1
 23552                           bsr	equ	0xFE0
 23553                           indf2	equ	0xFDF
 23554                           postinc2	equ	0xFDE
 23555                           postdec2	equ	0xFDD
 23556                           fsr2h	equ	0xFDA
 23557                           fsr2l	equ	0xFD9
 23558                           status	equ	0xFD8
 23559                           
 23560 ;; *************** function i2___awdiv *****************
 23561 ;; Defined at:
 23562 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 23563 ;; Parameters:    Size  Location     Type
 23564 ;;  dividend        2    6[COMRAM] int 
 23565 ;;  divisor         2    8[COMRAM] int 
 23566 ;; Auto vars:     Size  Location     Type
 23567 ;;  __awdiv         2   12[COMRAM] int 
 23568 ;;  __awdiv         1   11[COMRAM] unsigned char 
 23569 ;;  __awdiv         1   10[COMRAM] unsigned char 
 23570 ;; Return value:  Size  Location     Type
 23571 ;;                  2    6[COMRAM] int 
 23572 ;; Registers used:
 23573 ;;		wreg, status,2, status,0
 23574 ;; Tracked objects:
 23575 ;;		On entry : 0/0
 23576 ;;		On exit  : 0/0
 23577 ;;		Unchanged: 0/0
 23578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23579 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23580 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23582 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23583 ;;Total ram usage:        8 bytes
 23584 ;; Hardware stack levels used:    1
 23585 ;; This function calls:
 23586 ;;		Nothing
 23587 ;; This function is called by:
 23588 ;;		i2_fround
 23589 ;;		i2_scale
 23590 ;;		i2_printf
 23591 ;; This function uses a non-reentrant model
 23592 ;;
 23593                           
 23594                           	psect	text85
 23595  01580A                     __ptext85:
 23596                           	opt stack 0
 23597  01580A                     i2___awdiv:
 23598                           	opt stack 14
 23599                           
 23600                           ;incstack = 0
 23601  01580A  0E00               	movlw	0
 23602  01580C  6E0C               	movwf	i2___awdiv@sign,c
 23603  01580E  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 23604  015810  D006               	goto	i2l1503
 23605  015812  6C09               	negf	i2___awdiv@divisor,c
 23606  015814  1E0A               	comf	i2___awdiv@divisor+1,f,c
 23607  015816  B0D8               	btfsc	status,0,c
 23608  015818  2A0A               	incf	i2___awdiv@divisor+1,f,c
 23609  01581A  0E01               	movlw	1
 23610  01581C  6E0C               	movwf	i2___awdiv@sign,c
 23611  01581E                     i2l1503:
 23612  01581E  AE08               	btfss	i2___awdiv@dividend+1,7,c
 23613  015820  D006               	goto	i2l1504
 23614  015822  6C07               	negf	i2___awdiv@dividend,c
 23615  015824  1E08               	comf	i2___awdiv@dividend+1,f,c
 23616  015826  B0D8               	btfsc	status,0,c
 23617  015828  2A08               	incf	i2___awdiv@dividend+1,f,c
 23618  01582A  0E01               	movlw	1
 23619  01582C  1A0C               	xorwf	i2___awdiv@sign,f,c
 23620  01582E                     i2l1504:
 23621  01582E  0E00               	movlw	0
 23622  015830  6E0E               	movwf	i2___awdiv@quotient+1,c
 23623  015832  0E00               	movlw	0
 23624  015834  6E0D               	movwf	i2___awdiv@quotient,c
 23625  015836  5009               	movf	i2___awdiv@divisor,w,c
 23626  015838  100A               	iorwf	i2___awdiv@divisor+1,w,c
 23627  01583A  B4D8               	btfsc	status,2,c
 23628  01583C  D01C               	goto	i2l1511
 23629  01583E  0E01               	movlw	1
 23630  015840  6E0B               	movwf	i2___awdiv@counter,c
 23631  015842  D004               	goto	i2l1506
 23632  015844  90D8               	bcf	status,0,c
 23633  015846  3609               	rlcf	i2___awdiv@divisor,f,c
 23634  015848  360A               	rlcf	i2___awdiv@divisor+1,f,c
 23635  01584A  2A0B               	incf	i2___awdiv@counter,f,c
 23636  01584C                     i2l1506:
 23637  01584C  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 23638  01584E  D7FA               	goto	i2l1507
 23639  015850                     i2u1142_40:
 23640  015850  90D8               	bcf	status,0,c
 23641  015852  360D               	rlcf	i2___awdiv@quotient,f,c
 23642  015854  360E               	rlcf	i2___awdiv@quotient+1,f,c
 23643  015856  5009               	movf	i2___awdiv@divisor,w,c
 23644  015858  5C07               	subwf	i2___awdiv@dividend,w,c
 23645  01585A  500A               	movf	i2___awdiv@divisor+1,w,c
 23646  01585C  5808               	subwfb	i2___awdiv@dividend+1,w,c
 23647  01585E  A0D8               	btfss	status,0,c
 23648  015860  D005               	goto	i2l1510
 23649  015862  5009               	movf	i2___awdiv@divisor,w,c
 23650  015864  5E07               	subwf	i2___awdiv@dividend,f,c
 23651  015866  500A               	movf	i2___awdiv@divisor+1,w,c
 23652  015868  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 23653  01586A  800D               	bsf	i2___awdiv@quotient,0,c
 23654  01586C                     i2l1510:
 23655  01586C  90D8               	bcf	status,0,c
 23656  01586E  320A               	rrcf	i2___awdiv@divisor+1,f,c
 23657  015870  3209               	rrcf	i2___awdiv@divisor,f,c
 23658  015872  2E0B               	decfsz	i2___awdiv@counter,f,c
 23659  015874  D7ED               	goto	i2u1142_40
 23660  015876                     i2l1511:
 23661  015876  500C               	movf	i2___awdiv@sign,w,c
 23662  015878  B4D8               	btfsc	status,2,c
 23663  01587A  D004               	goto	i2l1512
 23664  01587C  6C0D               	negf	i2___awdiv@quotient,c
 23665  01587E  1E0E               	comf	i2___awdiv@quotient+1,f,c
 23666  015880  B0D8               	btfsc	status,0,c
 23667  015882  2A0E               	incf	i2___awdiv@quotient+1,f,c
 23668  015884                     i2l1512:
 23669  015884  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 23670  015888  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 23671  01588C  0012               	return	
 23672  01588E                     __end_ofi2___awdiv:
 23673                           	opt stack 0
 23674                           tosu	equ	0xFFF
 23675                           tosh	equ	0xFFE
 23676                           tosl	equ	0xFFD
 23677                           pclatu	equ	0xFFB
 23678                           pclath	equ	0xFFA
 23679                           tblptru	equ	0xFF8
 23680                           tblptrh	equ	0xFF7
 23681                           tblptrl	equ	0xFF6
 23682                           tablat	equ	0xFF5
 23683                           prodh	equ	0xFF4
 23684                           prodl	equ	0xFF3
 23685                           intcon	equ	0xFF2
 23686                           indf0	equ	0xFEF
 23687                           postinc0	equ	0xFEE
 23688                           fsr0h	equ	0xFEA
 23689                           fsr0l	equ	0xFE9
 23690                           wreg	equ	0xFE8
 23691                           indf1	equ	0xFE7
 23692                           postdec1	equ	0xFE5
 23693                           fsr1h	equ	0xFE2
 23694                           fsr1l	equ	0xFE1
 23695                           bsr	equ	0xFE0
 23696                           indf2	equ	0xFDF
 23697                           postinc2	equ	0xFDE
 23698                           postdec2	equ	0xFDD
 23699                           fsr2h	equ	0xFDA
 23700                           fsr2l	equ	0xFD9
 23701                           status	equ	0xFD8
 23702                           
 23703 ;; *************** function i2__tdiv_to_l_ *****************
 23704 ;; Defined at:
 23705 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 23706 ;; Parameters:    Size  Location     Type
 23707 ;;  f1              3    0[COMRAM] float 
 23708 ;;  f2              3    3[COMRAM] float 
 23709 ;; Auto vars:     Size  Location     Type
 23710 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 23711 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 23712 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 23713 ;; Return value:  Size  Location     Type
 23714 ;;                  4    0[COMRAM] unsigned long 
 23715 ;; Registers used:
 23716 ;;		wreg, status,2, status,0
 23717 ;; Tracked objects:
 23718 ;;		On entry : 0/0
 23719 ;;		On exit  : 0/0
 23720 ;;		Unchanged: 0/0
 23721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23722 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23723 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23724 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23725 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23726 ;;Total ram usage:       15 bytes
 23727 ;; Hardware stack levels used:    1
 23728 ;; This function calls:
 23729 ;;		Nothing
 23730 ;; This function is called by:
 23731 ;;		i2_printf
 23732 ;; This function uses a non-reentrant model
 23733 ;;
 23734                           
 23735                           	psect	text86
 23736  0143EE                     __ptext86:
 23737                           	opt stack 0
 23738  0143EE                     i2__tdiv_to_l_:
 23739                           	opt stack 15
 23740                           
 23741                           ;incstack = 0
 23742  0143EE  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 23743  0143F2  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 23744  0143F4  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 23745  0143F6  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 23746  0143F8  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 23747  0143FA  E301               	bnc	u1182_41
 23748  0143FC  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 23749  0143FE                     u1182_41:
 23750  0143FE  5007               	movf	??i2__tdiv_to_l_,w,c
 23751  014400  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 23752  014402  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 23753  014404  A4D8               	btfss	status,2,c
 23754  014406  D009               	goto	i2l1651
 23755  014408  0E00               	movlw	0
 23756  01440A  6E01               	movwf	?i2__tdiv_to_l_,c
 23757  01440C  0E00               	movlw	0
 23758  01440E  6E02               	movwf	?i2__tdiv_to_l_+1,c
 23759  014410  0E00               	movlw	0
 23760  014412  6E03               	movwf	?i2__tdiv_to_l_+2,c
 23761  014414  0E00               	movlw	0
 23762  014416  6E04               	movwf	?i2__tdiv_to_l_+3,c
 23763  014418  0012               	return	
 23764  01441A                     i2l1651:
 23765  01441A  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 23766  01441E  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 23767  014420  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 23768  014422  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 23769  014424  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 23770  014426  E301               	bnc	u1184_41
 23771  014428  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 23772  01442A                     u1184_41:
 23773  01442A  5007               	movf	??i2__tdiv_to_l_,w,c
 23774  01442C  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 23775  01442E  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 23776  014430  A4D8               	btfss	status,2,c
 23777  014432  D009               	goto	i2l1653
 23778  014434  0E00               	movlw	0
 23779  014436  6E01               	movwf	?i2__tdiv_to_l_,c
 23780  014438  0E00               	movlw	0
 23781  01443A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 23782  01443C  0E00               	movlw	0
 23783  01443E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 23784  014440  0E00               	movlw	0
 23785  014442  6E04               	movwf	?i2__tdiv_to_l_+3,c
 23786  014444  0012               	return	
 23787  014446                     i2l1653:
 23788  014446  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 23789  014448  0EFF               	movlw	255
 23790  01444A  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 23791  01444C  0EFF               	movlw	255
 23792  01444E  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 23793  014450  0E00               	movlw	0
 23794  014452  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 23795  014454  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 23796  014456  0EFF               	movlw	255
 23797  014458  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 23798  01445A  0EFF               	movlw	255
 23799  01445C  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 23800  01445E  0E00               	movlw	0
 23801  014460  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 23802  014462  0E00               	movlw	0
 23803  014464  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 23804  014466  0E00               	movlw	0
 23805  014468  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 23806  01446A  0E00               	movlw	0
 23807  01446C  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 23808  01446E  0E00               	movlw	0
 23809  014470  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 23810  014472  0E7F               	movlw	127
 23811  014474  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 23812  014476  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 23813  014478  0F98               	addlw	152
 23814  01447A  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 23815  01447C  0E18               	movlw	24
 23816  01447E  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 23817  014480                     i2l1654:
 23818  014480  90D8               	bcf	status,0,c
 23819  014482  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 23820  014484  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 23821  014486  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 23822  014488  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 23823  01448A  5004               	movf	i2__tdiv_to_l_@f2,w,c
 23824  01448C  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 23825  01448E  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 23826  014490  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 23827  014492  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 23828  014494  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 23829  014496  A0D8               	btfss	status,0,c
 23830  014498  D007               	goto	i2l1655
 23831  01449A  5004               	movf	i2__tdiv_to_l_@f2,w,c
 23832  01449C  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 23833  01449E  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 23834  0144A0  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 23835  0144A2  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 23836  0144A4  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 23837  0144A6  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 23838  0144A8                     i2l1655:
 23839  0144A8  90D8               	bcf	status,0,c
 23840  0144AA  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 23841  0144AC  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 23842  0144AE  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 23843  0144B0  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 23844  0144B2  D7E6               	goto	i2l1654
 23845  0144B4  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 23846  0144B6  D016               	goto	i2l1657
 23847  0144B8  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 23848  0144BA  0A80               	xorlw	128
 23849  0144BC  0F97               	addlw	151
 23850  0144BE  B0D8               	btfsc	status,0,c
 23851  0144C0  D009               	goto	i2l1658
 23852  0144C2  0E00               	movlw	0
 23853  0144C4  6E01               	movwf	?i2__tdiv_to_l_,c
 23854  0144C6  0E00               	movlw	0
 23855  0144C8  6E02               	movwf	?i2__tdiv_to_l_+1,c
 23856  0144CA  0E00               	movlw	0
 23857  0144CC  6E03               	movwf	?i2__tdiv_to_l_+2,c
 23858  0144CE  0E00               	movlw	0
 23859  0144D0  6E04               	movwf	?i2__tdiv_to_l_+3,c
 23860  0144D2  0012               	return	
 23861  0144D4                     i2l1658:
 23862  0144D4  90D8               	bcf	status,0,c
 23863  0144D6  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 23864  0144D8  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 23865  0144DA  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 23866  0144DC  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 23867  0144DE  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 23868  0144E0  D7F9               	goto	i2l1658
 23869  0144E2  D015               	goto	i2u1190_40
 23870  0144E4                     i2l1657:
 23871  0144E4  0E17               	movlw	23
 23872  0144E6  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 23873  0144E8  D00F               	goto	i2l1663
 23874  0144EA  0E00               	movlw	0
 23875  0144EC  6E01               	movwf	?i2__tdiv_to_l_,c
 23876  0144EE  0E00               	movlw	0
 23877  0144F0  6E02               	movwf	?i2__tdiv_to_l_+1,c
 23878  0144F2  0E00               	movlw	0
 23879  0144F4  6E03               	movwf	?i2__tdiv_to_l_+2,c
 23880  0144F6  0E00               	movlw	0
 23881  0144F8  6E04               	movwf	?i2__tdiv_to_l_+3,c
 23882  0144FA  0012               	return	
 23883  0144FC  90D8               	bcf	status,0,c
 23884  0144FE  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 23885  014500  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 23886  014502  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 23887  014504  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 23888  014506  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 23889  014508                     i2l1663:
 23890  014508  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 23891  01450A  A4D8               	btfss	status,2,c
 23892  01450C  D7F7               	goto	i2l1664
 23893  01450E                     i2u1190_40:
 23894  01450E  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 23895  014512  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 23896  014516  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 23897  01451A  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 23898  01451E  0012               	return		;funcret
 23899  014520                     __end_ofi2__tdiv_to_l_:
 23900                           	opt stack 0
 23901                           tosu	equ	0xFFF
 23902                           tosh	equ	0xFFE
 23903                           tosl	equ	0xFFD
 23904                           pclatu	equ	0xFFB
 23905                           pclath	equ	0xFFA
 23906                           tblptru	equ	0xFF8
 23907                           tblptrh	equ	0xFF7
 23908                           tblptrl	equ	0xFF6
 23909                           tablat	equ	0xFF5
 23910                           prodh	equ	0xFF4
 23911                           prodl	equ	0xFF3
 23912                           intcon	equ	0xFF2
 23913                           indf0	equ	0xFEF
 23914                           postinc0	equ	0xFEE
 23915                           fsr0h	equ	0xFEA
 23916                           fsr0l	equ	0xFE9
 23917                           wreg	equ	0xFE8
 23918                           indf1	equ	0xFE7
 23919                           postdec1	equ	0xFE5
 23920                           fsr1h	equ	0xFE2
 23921                           fsr1l	equ	0xFE1
 23922                           bsr	equ	0xFE0
 23923                           indf2	equ	0xFDF
 23924                           postinc2	equ	0xFDE
 23925                           postdec2	equ	0xFDD
 23926                           fsr2h	equ	0xFDA
 23927                           fsr2l	equ	0xFD9
 23928                           status	equ	0xFD8
 23929                           
 23930 ;; *************** function i2__div_to_l_ *****************
 23931 ;; Defined at:
 23932 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 23933 ;; Parameters:    Size  Location     Type
 23934 ;;  f1              3    0[COMRAM] unsigned long 
 23935 ;;  f2              3    3[COMRAM] unsigned long 
 23936 ;; Auto vars:     Size  Location     Type
 23937 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 23938 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 23939 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 23940 ;; Return value:  Size  Location     Type
 23941 ;;                  4    0[COMRAM] unsigned long 
 23942 ;; Registers used:
 23943 ;;		wreg, status,2, status,0
 23944 ;; Tracked objects:
 23945 ;;		On entry : 0/0
 23946 ;;		On exit  : 0/0
 23947 ;;		Unchanged: 0/0
 23948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23949 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23950 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23952 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23953 ;;Total ram usage:       12 bytes
 23954 ;; Hardware stack levels used:    1
 23955 ;; This function calls:
 23956 ;;		Nothing
 23957 ;; This function is called by:
 23958 ;;		i2_printf
 23959 ;; This function uses a non-reentrant model
 23960 ;;
 23961                           
 23962                           	psect	text87
 23963  01464A                     __ptext87:
 23964                           	opt stack 0
 23965  01464A                     i2__div_to_l_:
 23966                           	opt stack 15
 23967                           
 23968                           ;incstack = 0
 23969  01464A  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 23970  01464C  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 23971  01464E  6E0C               	movwf	i2__div_to_l_@exp1,c
 23972  014650  500C               	movf	i2__div_to_l_@exp1,w,c
 23973  014652  A4D8               	btfss	status,2,c
 23974  014654  D009               	goto	i2l1547
 23975  014656  0E00               	movlw	0
 23976  014658  6E01               	movwf	?i2__div_to_l_,c
 23977  01465A  0E00               	movlw	0
 23978  01465C  6E02               	movwf	?i2__div_to_l_+1,c
 23979  01465E  0E00               	movlw	0
 23980  014660  6E03               	movwf	?i2__div_to_l_+2,c
 23981  014662  0E00               	movlw	0
 23982  014664  6E04               	movwf	?i2__div_to_l_+3,c
 23983  014666  0012               	return	
 23984  014668                     i2l1547:
 23985  014668  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 23986  01466A  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 23987  01466C  6E0B               	movwf	i2__div_to_l_@cntr,c
 23988  01466E  500B               	movf	i2__div_to_l_@cntr,w,c
 23989  014670  A4D8               	btfss	status,2,c
 23990  014672  D009               	goto	i2l1549
 23991  014674  0E00               	movlw	0
 23992  014676  6E01               	movwf	?i2__div_to_l_,c
 23993  014678  0E00               	movlw	0
 23994  01467A  6E02               	movwf	?i2__div_to_l_+1,c
 23995  01467C  0E00               	movlw	0
 23996  01467E  6E03               	movwf	?i2__div_to_l_+2,c
 23997  014680  0E00               	movlw	0
 23998  014682  6E04               	movwf	?i2__div_to_l_+3,c
 23999  014684  0012               	return	
 24000  014686                     i2l1549:
 24001  014686  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 24002  014688  0EFF               	movlw	255
 24003  01468A  1601               	andwf	i2__div_to_l_@f1,f,c
 24004  01468C  0EFF               	movlw	255
 24005  01468E  1602               	andwf	i2__div_to_l_@f1+1,f,c
 24006  014690  0EFF               	movlw	255
 24007  014692  1603               	andwf	i2__div_to_l_@f1+2,f,c
 24008  014694  0E00               	movlw	0
 24009  014696  1604               	andwf	i2__div_to_l_@f1+3,f,c
 24010  014698  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 24011  01469A  0EFF               	movlw	255
 24012  01469C  1604               	andwf	i2__div_to_l_@f2,f,c
 24013  01469E  0EFF               	movlw	255
 24014  0146A0  1605               	andwf	i2__div_to_l_@f2+1,f,c
 24015  0146A2  0EFF               	movlw	255
 24016  0146A4  1606               	andwf	i2__div_to_l_@f2+2,f,c
 24017  0146A6  0E00               	movlw	0
 24018  0146A8  1607               	andwf	i2__div_to_l_@f2+3,f,c
 24019  0146AA  0E00               	movlw	0
 24020  0146AC  6E07               	movwf	i2__div_to_l_@quot,c
 24021  0146AE  0E00               	movlw	0
 24022  0146B0  6E08               	movwf	i2__div_to_l_@quot+1,c
 24023  0146B2  0E00               	movlw	0
 24024  0146B4  6E09               	movwf	i2__div_to_l_@quot+2,c
 24025  0146B6  0E00               	movlw	0
 24026  0146B8  6E0A               	movwf	i2__div_to_l_@quot+3,c
 24027  0146BA  0E7F               	movlw	127
 24028  0146BC  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 24029  0146BE  500B               	movf	i2__div_to_l_@cntr,w,c
 24030  0146C0  0FA0               	addlw	160
 24031  0146C2  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 24032  0146C4  0E20               	movlw	32
 24033  0146C6  6E0B               	movwf	i2__div_to_l_@cntr,c
 24034  0146C8  90D8               	bcf	status,0,c
 24035  0146CA  3607               	rlcf	i2__div_to_l_@quot,f,c
 24036  0146CC  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 24037  0146CE  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 24038  0146D0  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 24039  0146D2  5004               	movf	i2__div_to_l_@f2,w,c
 24040  0146D4  5C01               	subwf	i2__div_to_l_@f1,w,c
 24041  0146D6  5005               	movf	i2__div_to_l_@f2+1,w,c
 24042  0146D8  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 24043  0146DA  5006               	movf	i2__div_to_l_@f2+2,w,c
 24044  0146DC  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 24045  0146DE  5007               	movf	i2__div_to_l_@f2+3,w,c
 24046  0146E0  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 24047  0146E2  A0D8               	btfss	status,0,c
 24048  0146E4  D009               	goto	i2l1551
 24049  0146E6  5004               	movf	i2__div_to_l_@f2,w,c
 24050  0146E8  5E01               	subwf	i2__div_to_l_@f1,f,c
 24051  0146EA  5005               	movf	i2__div_to_l_@f2+1,w,c
 24052  0146EC  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 24053  0146EE  5006               	movf	i2__div_to_l_@f2+2,w,c
 24054  0146F0  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 24055  0146F2  5007               	movf	i2__div_to_l_@f2+3,w,c
 24056  0146F4  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 24057  0146F6  8007               	bsf	i2__div_to_l_@quot,0,c
 24058  0146F8                     i2l1551:
 24059  0146F8  90D8               	bcf	status,0,c
 24060  0146FA  3601               	rlcf	i2__div_to_l_@f1,f,c
 24061  0146FC  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 24062  0146FE  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 24063  014700  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 24064  014702  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 24065  014704  D7E1               	goto	i2l1550
 24066  014706  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 24067  014708  D016               	goto	i2l1553
 24068  01470A  500C               	movf	i2__div_to_l_@exp1,w,c
 24069  01470C  0A80               	xorlw	128
 24070  01470E  0F9F               	addlw	159
 24071  014710  B0D8               	btfsc	status,0,c
 24072  014712  D009               	goto	i2l1554
 24073  014714  0E00               	movlw	0
 24074  014716  6E01               	movwf	?i2__div_to_l_,c
 24075  014718  0E00               	movlw	0
 24076  01471A  6E02               	movwf	?i2__div_to_l_+1,c
 24077  01471C  0E00               	movlw	0
 24078  01471E  6E03               	movwf	?i2__div_to_l_+2,c
 24079  014720  0E00               	movlw	0
 24080  014722  6E04               	movwf	?i2__div_to_l_+3,c
 24081  014724  0012               	return	
 24082  014726                     i2l1554:
 24083  014726  90D8               	bcf	status,0,c
 24084  014728  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 24085  01472A  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 24086  01472C  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 24087  01472E  3207               	rrcf	i2__div_to_l_@quot,f,c
 24088  014730  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 24089  014732  D7F9               	goto	i2l1554
 24090  014734  D015               	goto	i2u1181_40
 24091  014736                     i2l1553:
 24092  014736  0E1F               	movlw	31
 24093  014738  640C               	cpfsgt	i2__div_to_l_@exp1,c
 24094  01473A  D00F               	goto	i2l1559
 24095  01473C  0E00               	movlw	0
 24096  01473E  6E01               	movwf	?i2__div_to_l_,c
 24097  014740  0E00               	movlw	0
 24098  014742  6E02               	movwf	?i2__div_to_l_+1,c
 24099  014744  0E00               	movlw	0
 24100  014746  6E03               	movwf	?i2__div_to_l_+2,c
 24101  014748  0E00               	movlw	0
 24102  01474A  6E04               	movwf	?i2__div_to_l_+3,c
 24103  01474C  0012               	return	
 24104  01474E  90D8               	bcf	status,0,c
 24105  014750  3607               	rlcf	i2__div_to_l_@quot,f,c
 24106  014752  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 24107  014754  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 24108  014756  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 24109  014758  060C               	decf	i2__div_to_l_@exp1,f,c
 24110  01475A                     i2l1559:
 24111  01475A  500C               	movf	i2__div_to_l_@exp1,w,c
 24112  01475C  A4D8               	btfss	status,2,c
 24113  01475E  D7F7               	goto	i2l1560
 24114  014760                     i2u1181_40:
 24115  014760  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 24116  014764  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 24117  014768  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 24118  01476C  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 24119  014770  0012               	return		;funcret
 24120  014772                     __end_ofi2__div_to_l_:
 24121                           	opt stack 0
 24122                           tosu	equ	0xFFF
 24123                           tosh	equ	0xFFE
 24124                           tosl	equ	0xFFD
 24125                           pclatu	equ	0xFFB
 24126                           pclath	equ	0xFFA
 24127                           tblptru	equ	0xFF8
 24128                           tblptrh	equ	0xFF7
 24129                           tblptrl	equ	0xFF6
 24130                           tablat	equ	0xFF5
 24131                           prodh	equ	0xFF4
 24132                           prodl	equ	0xFF3
 24133                           intcon	equ	0xFF2
 24134                           indf0	equ	0xFEF
 24135                           postinc0	equ	0xFEE
 24136                           fsr0h	equ	0xFEA
 24137                           fsr0l	equ	0xFE9
 24138                           wreg	equ	0xFE8
 24139                           indf1	equ	0xFE7
 24140                           postdec1	equ	0xFE5
 24141                           fsr1h	equ	0xFE2
 24142                           fsr1l	equ	0xFE1
 24143                           bsr	equ	0xFE0
 24144                           indf2	equ	0xFDF
 24145                           postinc2	equ	0xFDE
 24146                           postdec2	equ	0xFDD
 24147                           fsr2h	equ	0xFDA
 24148                           fsr2l	equ	0xFD9
 24149                           status	equ	0xFD8
 24150                           
 24151 ;; *************** function i2___lltoft *****************
 24152 ;; Defined at:
 24153 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 24154 ;; Parameters:    Size  Location     Type
 24155 ;;  c               4    8[COMRAM] unsigned long 
 24156 ;; Auto vars:     Size  Location     Type
 24157 ;;  __lltoft        1   16[COMRAM] unsigned char 
 24158 ;; Return value:  Size  Location     Type
 24159 ;;                  3    8[COMRAM] float 
 24160 ;; Registers used:
 24161 ;;		wreg, status,2, status,0, cstack
 24162 ;; Tracked objects:
 24163 ;;		On entry : 0/0
 24164 ;;		On exit  : 0/0
 24165 ;;		Unchanged: 0/0
 24166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24167 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24169 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24170 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24171 ;;Total ram usage:        9 bytes
 24172 ;; Hardware stack levels used:    1
 24173 ;; Hardware stack levels required when called:    1
 24174 ;; This function calls:
 24175 ;;		i2___ftpack
 24176 ;; This function is called by:
 24177 ;;		i2_printf
 24178 ;; This function uses a non-reentrant model
 24179 ;;
 24180                           
 24181                           	psect	text88
 24182  015ED4                     __ptext88:
 24183                           	opt stack 0
 24184  015ED4                     i2___lltoft:
 24185                           	opt stack 14
 24186                           
 24187                           ;incstack = 0
 24188  015ED4  0E8E               	movlw	142
 24189  015ED6  6E11               	movwf	i2___lltoft@exp,c
 24190  015ED8  D006               	goto	i2l1758
 24191  015EDA  90D8               	bcf	status,0,c
 24192  015EDC  320C               	rrcf	i2___lltoft@c+3,f,c
 24193  015EDE  320B               	rrcf	i2___lltoft@c+2,f,c
 24194  015EE0  320A               	rrcf	i2___lltoft@c+1,f,c
 24195  015EE2  3209               	rrcf	i2___lltoft@c,f,c
 24196  015EE4  2A11               	incf	i2___lltoft@exp,f,c
 24197  015EE6                     i2l1758:
 24198  015EE6  0E00               	movlw	0
 24199  015EE8  1409               	andwf	i2___lltoft@c,w,c
 24200  015EEA  6E0D               	movwf	??i2___lltoft& (0+255),c
 24201  015EEC  0E00               	movlw	0
 24202  015EEE  140A               	andwf	i2___lltoft@c+1,w,c
 24203  015EF0  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 24204  015EF2  0E00               	movlw	0
 24205  015EF4  140B               	andwf	i2___lltoft@c+2,w,c
 24206  015EF6  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 24207  015EF8  0EFF               	movlw	255
 24208  015EFA  140C               	andwf	i2___lltoft@c+3,w,c
 24209  015EFC  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 24210  015EFE  500D               	movf	??i2___lltoft,w,c
 24211  015F00  100E               	iorwf	??i2___lltoft+1,w,c
 24212  015F02  100F               	iorwf	??i2___lltoft+2,w,c
 24213  015F04  1010               	iorwf	??i2___lltoft+3,w,c
 24214  015F06  A4D8               	btfss	status,2,c
 24215  015F08  D7E8               	goto	i2l1759
 24216  015F0A  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 24217  015F0E  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 24218  015F12  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 24219  015F16  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 24220  015F1A  0E00               	movlw	0
 24221  015F1C  6E05               	movwf	i2___ftpack@sign,c
 24222  015F1E  EC1F  F0A9         	call	i2___ftpack	;wreg free
 24223  015F22  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 24224  015F26  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 24225  015F2A  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 24226  015F2E  0012               	return	
 24227  015F30                     __end_ofi2___lltoft:
 24228                           	opt stack 0
 24229                           tosu	equ	0xFFF
 24230                           tosh	equ	0xFFE
 24231                           tosl	equ	0xFFD
 24232                           pclatu	equ	0xFFB
 24233                           pclath	equ	0xFFA
 24234                           tblptru	equ	0xFF8
 24235                           tblptrh	equ	0xFF7
 24236                           tblptrl	equ	0xFF6
 24237                           tablat	equ	0xFF5
 24238                           prodh	equ	0xFF4
 24239                           prodl	equ	0xFF3
 24240                           intcon	equ	0xFF2
 24241                           indf0	equ	0xFEF
 24242                           postinc0	equ	0xFEE
 24243                           fsr0h	equ	0xFEA
 24244                           fsr0l	equ	0xFE9
 24245                           wreg	equ	0xFE8
 24246                           indf1	equ	0xFE7
 24247                           postdec1	equ	0xFE5
 24248                           fsr1h	equ	0xFE2
 24249                           fsr1l	equ	0xFE1
 24250                           bsr	equ	0xFE0
 24251                           indf2	equ	0xFDF
 24252                           postinc2	equ	0xFDE
 24253                           postdec2	equ	0xFDD
 24254                           fsr2h	equ	0xFDA
 24255                           fsr2l	equ	0xFD9
 24256                           status	equ	0xFD8
 24257                           
 24258 ;; *************** function i2___llmod *****************
 24259 ;; Defined at:
 24260 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 24261 ;; Parameters:    Size  Location     Type
 24262 ;;  dividend        4   13[COMRAM] unsigned long 
 24263 ;;  divisor         4   17[COMRAM] unsigned long 
 24264 ;; Auto vars:     Size  Location     Type
 24265 ;;  __llmod         1   21[COMRAM] unsigned char 
 24266 ;; Return value:  Size  Location     Type
 24267 ;;                  4   13[COMRAM] unsigned long 
 24268 ;; Registers used:
 24269 ;;		wreg, status,2, status,0
 24270 ;; Tracked objects:
 24271 ;;		On entry : 0/0
 24272 ;;		On exit  : 0/0
 24273 ;;		Unchanged: 0/0
 24274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24275 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24276 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24278 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24279 ;;Total ram usage:        9 bytes
 24280 ;; Hardware stack levels used:    1
 24281 ;; This function calls:
 24282 ;;		Nothing
 24283 ;; This function is called by:
 24284 ;;		i2_printf
 24285 ;; This function uses a non-reentrant model
 24286 ;;
 24287                           
 24288                           	psect	text89
 24289  015C8E                     __ptext89:
 24290                           	opt stack 0
 24291  015C8E                     i2___llmod:
 24292                           	opt stack 15
 24293                           
 24294                           ;incstack = 0
 24295  015C8E  5012               	movf	i2___llmod@divisor,w,c
 24296  015C90  1013               	iorwf	i2___llmod@divisor+1,w,c
 24297  015C92  1014               	iorwf	i2___llmod@divisor+2,w,c
 24298  015C94  1015               	iorwf	i2___llmod@divisor+3,w,c
 24299  015C96  B4D8               	btfsc	status,2,c
 24300  015C98  D024               	goto	i2l1752
 24301  015C9A  0E01               	movlw	1
 24302  015C9C  6E16               	movwf	i2___llmod@counter,c
 24303  015C9E  D006               	goto	i2l1747
 24304  015CA0  90D8               	bcf	status,0,c
 24305  015CA2  3612               	rlcf	i2___llmod@divisor,f,c
 24306  015CA4  3613               	rlcf	i2___llmod@divisor+1,f,c
 24307  015CA6  3614               	rlcf	i2___llmod@divisor+2,f,c
 24308  015CA8  3615               	rlcf	i2___llmod@divisor+3,f,c
 24309  015CAA  2A16               	incf	i2___llmod@counter,f,c
 24310  015CAC                     i2l1747:
 24311  015CAC  AE15               	btfss	i2___llmod@divisor+3,7,c
 24312  015CAE  D7F8               	goto	i2l1748
 24313  015CB0                     i2u1197_40:
 24314  015CB0  5012               	movf	i2___llmod@divisor,w,c
 24315  015CB2  5C0E               	subwf	i2___llmod@dividend,w,c
 24316  015CB4  5013               	movf	i2___llmod@divisor+1,w,c
 24317  015CB6  580F               	subwfb	i2___llmod@dividend+1,w,c
 24318  015CB8  5014               	movf	i2___llmod@divisor+2,w,c
 24319  015CBA  5810               	subwfb	i2___llmod@dividend+2,w,c
 24320  015CBC  5015               	movf	i2___llmod@divisor+3,w,c
 24321  015CBE  5811               	subwfb	i2___llmod@dividend+3,w,c
 24322  015CC0  A0D8               	btfss	status,0,c
 24323  015CC2  D008               	goto	i2l1751
 24324  015CC4  5012               	movf	i2___llmod@divisor,w,c
 24325  015CC6  5E0E               	subwf	i2___llmod@dividend,f,c
 24326  015CC8  5013               	movf	i2___llmod@divisor+1,w,c
 24327  015CCA  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 24328  015CCC  5014               	movf	i2___llmod@divisor+2,w,c
 24329  015CCE  5A10               	subwfb	i2___llmod@dividend+2,f,c
 24330  015CD0  5015               	movf	i2___llmod@divisor+3,w,c
 24331  015CD2  5A11               	subwfb	i2___llmod@dividend+3,f,c
 24332  015CD4                     i2l1751:
 24333  015CD4  90D8               	bcf	status,0,c
 24334  015CD6  3215               	rrcf	i2___llmod@divisor+3,f,c
 24335  015CD8  3214               	rrcf	i2___llmod@divisor+2,f,c
 24336  015CDA  3213               	rrcf	i2___llmod@divisor+1,f,c
 24337  015CDC  3212               	rrcf	i2___llmod@divisor,f,c
 24338  015CDE  2E16               	decfsz	i2___llmod@counter,f,c
 24339  015CE0  D7E7               	goto	i2u1197_40
 24340  015CE2                     i2l1752:
 24341  015CE2  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 24342  015CE6  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 24343  015CEA  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 24344  015CEE  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 24345  015CF2  0012               	return		;funcret
 24346  015CF4                     __end_ofi2___llmod:
 24347                           	opt stack 0
 24348                           tosu	equ	0xFFF
 24349                           tosh	equ	0xFFE
 24350                           tosl	equ	0xFFD
 24351                           pclatu	equ	0xFFB
 24352                           pclath	equ	0xFFA
 24353                           tblptru	equ	0xFF8
 24354                           tblptrh	equ	0xFF7
 24355                           tblptrl	equ	0xFF6
 24356                           tablat	equ	0xFF5
 24357                           prodh	equ	0xFF4
 24358                           prodl	equ	0xFF3
 24359                           intcon	equ	0xFF2
 24360                           indf0	equ	0xFEF
 24361                           postinc0	equ	0xFEE
 24362                           fsr0h	equ	0xFEA
 24363                           fsr0l	equ	0xFE9
 24364                           wreg	equ	0xFE8
 24365                           indf1	equ	0xFE7
 24366                           postdec1	equ	0xFE5
 24367                           fsr1h	equ	0xFE2
 24368                           fsr1l	equ	0xFE1
 24369                           bsr	equ	0xFE0
 24370                           indf2	equ	0xFDF
 24371                           postinc2	equ	0xFDE
 24372                           postdec2	equ	0xFDD
 24373                           fsr2h	equ	0xFDA
 24374                           fsr2l	equ	0xFD9
 24375                           status	equ	0xFD8
 24376                           
 24377 ;; *************** function i2___lldiv *****************
 24378 ;; Defined at:
 24379 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 24380 ;; Parameters:    Size  Location     Type
 24381 ;;  dividend        4    0[COMRAM] unsigned long 
 24382 ;;  divisor         4    4[COMRAM] unsigned long 
 24383 ;; Auto vars:     Size  Location     Type
 24384 ;;  __lldiv         4    8[COMRAM] unsigned long 
 24385 ;;  __lldiv         1   12[COMRAM] unsigned char 
 24386 ;; Return value:  Size  Location     Type
 24387 ;;                  4    0[COMRAM] unsigned long 
 24388 ;; Registers used:
 24389 ;;		wreg, status,2, status,0
 24390 ;; Tracked objects:
 24391 ;;		On entry : 0/0
 24392 ;;		On exit  : 0/0
 24393 ;;		Unchanged: 0/0
 24394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24395 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24396 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24398 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24399 ;;Total ram usage:       13 bytes
 24400 ;; Hardware stack levels used:    1
 24401 ;; This function calls:
 24402 ;;		Nothing
 24403 ;; This function is called by:
 24404 ;;		i2_printf
 24405 ;; This function uses a non-reentrant model
 24406 ;;
 24407                           
 24408                           	psect	text90
 24409  01588E                     __ptext90:
 24410                           	opt stack 0
 24411  01588E                     i2___lldiv:
 24412                           	opt stack 15
 24413                           
 24414                           ;incstack = 0
 24415  01588E  0E00               	movlw	0
 24416  015890  6E09               	movwf	i2___lldiv@quotient,c
 24417  015892  0E00               	movlw	0
 24418  015894  6E0A               	movwf	i2___lldiv@quotient+1,c
 24419  015896  0E00               	movlw	0
 24420  015898  6E0B               	movwf	i2___lldiv@quotient+2,c
 24421  01589A  0E00               	movlw	0
 24422  01589C  6E0C               	movwf	i2___lldiv@quotient+3,c
 24423  01589E  5005               	movf	i2___lldiv@divisor,w,c
 24424  0158A0  1006               	iorwf	i2___lldiv@divisor+1,w,c
 24425  0158A2  1007               	iorwf	i2___lldiv@divisor+2,w,c
 24426  0158A4  1008               	iorwf	i2___lldiv@divisor+3,w,c
 24427  0158A6  B4D8               	btfsc	status,2,c
 24428  0158A8  D02A               	goto	i2l1742
 24429  0158AA  0E01               	movlw	1
 24430  0158AC  6E0D               	movwf	i2___lldiv@counter,c
 24431  0158AE  D006               	goto	i2l1737
 24432  0158B0  90D8               	bcf	status,0,c
 24433  0158B2  3605               	rlcf	i2___lldiv@divisor,f,c
 24434  0158B4  3606               	rlcf	i2___lldiv@divisor+1,f,c
 24435  0158B6  3607               	rlcf	i2___lldiv@divisor+2,f,c
 24436  0158B8  3608               	rlcf	i2___lldiv@divisor+3,f,c
 24437  0158BA  2A0D               	incf	i2___lldiv@counter,f,c
 24438  0158BC                     i2l1737:
 24439  0158BC  AE08               	btfss	i2___lldiv@divisor+3,7,c
 24440  0158BE  D7F8               	goto	i2l1738
 24441  0158C0                     i2u1194_40:
 24442  0158C0  90D8               	bcf	status,0,c
 24443  0158C2  3609               	rlcf	i2___lldiv@quotient,f,c
 24444  0158C4  360A               	rlcf	i2___lldiv@quotient+1,f,c
 24445  0158C6  360B               	rlcf	i2___lldiv@quotient+2,f,c
 24446  0158C8  360C               	rlcf	i2___lldiv@quotient+3,f,c
 24447  0158CA  5005               	movf	i2___lldiv@divisor,w,c
 24448  0158CC  5C01               	subwf	i2___lldiv@dividend,w,c
 24449  0158CE  5006               	movf	i2___lldiv@divisor+1,w,c
 24450  0158D0  5802               	subwfb	i2___lldiv@dividend+1,w,c
 24451  0158D2  5007               	movf	i2___lldiv@divisor+2,w,c
 24452  0158D4  5803               	subwfb	i2___lldiv@dividend+2,w,c
 24453  0158D6  5008               	movf	i2___lldiv@divisor+3,w,c
 24454  0158D8  5804               	subwfb	i2___lldiv@dividend+3,w,c
 24455  0158DA  A0D8               	btfss	status,0,c
 24456  0158DC  D009               	goto	i2l1741
 24457  0158DE  5005               	movf	i2___lldiv@divisor,w,c
 24458  0158E0  5E01               	subwf	i2___lldiv@dividend,f,c
 24459  0158E2  5006               	movf	i2___lldiv@divisor+1,w,c
 24460  0158E4  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 24461  0158E6  5007               	movf	i2___lldiv@divisor+2,w,c
 24462  0158E8  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 24463  0158EA  5008               	movf	i2___lldiv@divisor+3,w,c
 24464  0158EC  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 24465  0158EE  8009               	bsf	i2___lldiv@quotient,0,c
 24466  0158F0                     i2l1741:
 24467  0158F0  90D8               	bcf	status,0,c
 24468  0158F2  3208               	rrcf	i2___lldiv@divisor+3,f,c
 24469  0158F4  3207               	rrcf	i2___lldiv@divisor+2,f,c
 24470  0158F6  3206               	rrcf	i2___lldiv@divisor+1,f,c
 24471  0158F8  3205               	rrcf	i2___lldiv@divisor,f,c
 24472  0158FA  2E0D               	decfsz	i2___lldiv@counter,f,c
 24473  0158FC  D7E1               	goto	i2u1194_40
 24474  0158FE                     i2l1742:
 24475  0158FE  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 24476  015902  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 24477  015906  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 24478  01590A  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 24479  01590E  0012               	return		;funcret
 24480  015910                     __end_ofi2___lldiv:
 24481                           	opt stack 0
 24482                           tosu	equ	0xFFF
 24483                           tosh	equ	0xFFE
 24484                           tosl	equ	0xFFD
 24485                           pclatu	equ	0xFFB
 24486                           pclath	equ	0xFFA
 24487                           tblptru	equ	0xFF8
 24488                           tblptrh	equ	0xFF7
 24489                           tblptrl	equ	0xFF6
 24490                           tablat	equ	0xFF5
 24491                           prodh	equ	0xFF4
 24492                           prodl	equ	0xFF3
 24493                           intcon	equ	0xFF2
 24494                           indf0	equ	0xFEF
 24495                           postinc0	equ	0xFEE
 24496                           fsr0h	equ	0xFEA
 24497                           fsr0l	equ	0xFE9
 24498                           wreg	equ	0xFE8
 24499                           indf1	equ	0xFE7
 24500                           postdec1	equ	0xFE5
 24501                           fsr1h	equ	0xFE2
 24502                           fsr1l	equ	0xFE1
 24503                           bsr	equ	0xFE0
 24504                           indf2	equ	0xFDF
 24505                           postinc2	equ	0xFDE
 24506                           postdec2	equ	0xFDD
 24507                           fsr2h	equ	0xFDA
 24508                           fsr2l	equ	0xFD9
 24509                           status	equ	0xFD8
 24510                           
 24511 ;; *************** function _ADCC_ISR *****************
 24512 ;; Defined at:
 24513 ;;		line 297 in file "mcc_generated_files/adcc.c"
 24514 ;; Parameters:    Size  Location     Type
 24515 ;;		None
 24516 ;; Auto vars:     Size  Location     Type
 24517 ;;		None
 24518 ;; Return value:  Size  Location     Type
 24519 ;;                  1    wreg      void 
 24520 ;; Registers used:
 24521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24522 ;; Tracked objects:
 24523 ;;		On entry : 0/0
 24524 ;;		On exit  : 0/0
 24525 ;;		Unchanged: 0/0
 24526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24531 ;;Total ram usage:        0 bytes
 24532 ;; Hardware stack levels used:    1
 24533 ;; Hardware stack levels required when called:    8
 24534 ;; This function calls:
 24535 ;;		Absolute function
 24536 ;;		_ADCC_DefaultInterruptHandler
 24537 ;;		_ADC_postProcessingCallback
 24538 ;; This function is called by:
 24539 ;;		_INTERRUPT_InterruptManagerHigh
 24540 ;; This function uses a non-reentrant model
 24541 ;;
 24542                           
 24543                           	psect	text91
 24544  01650A                     __ptext91:
 24545                           	opt stack 0
 24546  01650A                     _ADCC_ISR:
 24547                           	opt stack 9
 24548                           
 24549                           ;adcc.c: 300: PIR1bits.ADIF = 0;
 24550                           
 24551                           ;incstack = 0
 24552  01650A  010E               	movlb	14	; () banked
 24553  01650C  9134               	bcf	52,0,b	;volatile
 24554                           
 24555                           ; BSR set to: 14
 24556                           ;adcc.c: 302: if (ADCC_ADI_InterruptHandler)
 24557  01650E  0100               	movlb	0	; () banked
 24558  016510  51E0               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 24559  016512  11E1               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 24560  016514  11E2               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 24561  016516  B4D8               	btfsc	status,2,c
 24562  016518  0012               	return	
 24563                           
 24564                           ; BSR set to: 0
 24565                           ;adcc.c: 303: ADCC_ADI_InterruptHandler();
 24566  01651A  D801               	call	i2u1666_48
 24567  01651C  0012               	return	
 24568  01651E                     i2u1666_48:
 24569  01651E  0005               	push	
 24570  016520  6EFA               	movwf	pclath,c
 24571  016522  51E0               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 24572  016524  6EFD               	movwf	tosl,c
 24573  016526  51E1               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 24574  016528  6EFE               	movwf	tosh,c
 24575  01652A  51E2               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 24576  01652C  6EFF               	movwf	tosu,c
 24577  01652E  50FA               	movf	pclath,w,c
 24578  016530  0012               	return		;indir
 24579  016532                     __end_of_ADCC_ISR:
 24580                           	opt stack 0
 24581                           tosu	equ	0xFFF
 24582                           tosh	equ	0xFFE
 24583                           tosl	equ	0xFFD
 24584                           pclatu	equ	0xFFB
 24585                           pclath	equ	0xFFA
 24586                           tblptru	equ	0xFF8
 24587                           tblptrh	equ	0xFF7
 24588                           tblptrl	equ	0xFF6
 24589                           tablat	equ	0xFF5
 24590                           prodh	equ	0xFF4
 24591                           prodl	equ	0xFF3
 24592                           intcon	equ	0xFF2
 24593                           indf0	equ	0xFEF
 24594                           postinc0	equ	0xFEE
 24595                           fsr0h	equ	0xFEA
 24596                           fsr0l	equ	0xFE9
 24597                           wreg	equ	0xFE8
 24598                           indf1	equ	0xFE7
 24599                           postdec1	equ	0xFE5
 24600                           fsr1h	equ	0xFE2
 24601                           fsr1l	equ	0xFE1
 24602                           bsr	equ	0xFE0
 24603                           indf2	equ	0xFDF
 24604                           postinc2	equ	0xFDE
 24605                           postdec2	equ	0xFDD
 24606                           fsr2h	equ	0xFDA
 24607                           fsr2l	equ	0xFD9
 24608                           status	equ	0xFD8
 24609                           
 24610 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 24611 ;; Defined at:
 24612 ;;		line 310 in file "mcc_generated_files/adcc.c"
 24613 ;; Parameters:    Size  Location     Type
 24614 ;;		None
 24615 ;; Auto vars:     Size  Location     Type
 24616 ;;		None
 24617 ;; Return value:  Size  Location     Type
 24618 ;;                  1    wreg      void 
 24619 ;; Registers used:
 24620 ;;		None
 24621 ;; Tracked objects:
 24622 ;;		On entry : 0/0
 24623 ;;		On exit  : 0/0
 24624 ;;		Unchanged: 0/0
 24625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24630 ;;Total ram usage:        0 bytes
 24631 ;; Hardware stack levels used:    1
 24632 ;; This function calls:
 24633 ;;		Nothing
 24634 ;; This function is called by:
 24635 ;;		_ADCC_Initialize
 24636 ;;		_ADCC_ISR
 24637 ;; This function uses a non-reentrant model
 24638 ;;
 24639                           
 24640                           	psect	text92
 24641  0167C4                     __ptext92:
 24642                           	opt stack 0
 24643  0167C4                     _ADCC_DefaultInterruptHandler:
 24644                           	opt stack 16
 24645                           
 24646                           ;incstack = 0
 24647  0167C4  0012               	return		;funcret
 24648  0167C6                     __end_of_ADCC_DefaultInterruptHandler:
 24649                           	opt stack 0
 24650                           tosu	equ	0xFFF
 24651                           tosh	equ	0xFFE
 24652                           tosl	equ	0xFFD
 24653                           pclatu	equ	0xFFB
 24654                           pclath	equ	0xFFA
 24655                           tblptru	equ	0xFF8
 24656                           tblptrh	equ	0xFF7
 24657                           tblptrl	equ	0xFF6
 24658                           tablat	equ	0xFF5
 24659                           prodh	equ	0xFF4
 24660                           prodl	equ	0xFF3
 24661                           intcon	equ	0xFF2
 24662                           indf0	equ	0xFEF
 24663                           postinc0	equ	0xFEE
 24664                           fsr0h	equ	0xFEA
 24665                           fsr0l	equ	0xFE9
 24666                           wreg	equ	0xFE8
 24667                           indf1	equ	0xFE7
 24668                           postdec1	equ	0xFE5
 24669                           fsr1h	equ	0xFE2
 24670                           fsr1l	equ	0xFE1
 24671                           bsr	equ	0xFE0
 24672                           indf2	equ	0xFDF
 24673                           postinc2	equ	0xFDE
 24674                           postdec2	equ	0xFDD
 24675                           fsr2h	equ	0xFDA
 24676                           fsr2l	equ	0xFD9
 24677                           status	equ	0xFD8
 24678                           
 24679 ;; *************** function _ADC_postProcessingCallback *****************
 24680 ;; Defined at:
 24681 ;;		line 147 in file "main.c"
 24682 ;; Parameters:    Size  Location     Type
 24683 ;;		None
 24684 ;; Auto vars:     Size  Location     Type
 24685 ;;  currentADCCh    1   79[BANK0 ] enum E17421
 24686 ;; Return value:  Size  Location     Type
 24687 ;;                  1    wreg      void 
 24688 ;; Registers used:
 24689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24690 ;; Tracked objects:
 24691 ;;		On entry : 0/0
 24692 ;;		On exit  : 0/0
 24693 ;;		Unchanged: 0/0
 24694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24696 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24698 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24699 ;;Total ram usage:       16 bytes
 24700 ;; Hardware stack levels used:    1
 24701 ;; Hardware stack levels required when called:    7
 24702 ;; This function calls:
 24703 ;;		_ADCC_GetConversionResult
 24704 ;;		___lwtoft
 24705 ;;		_currentMeasuredToPeak
 24706 ;;		_peakToRMS
 24707 ;;		i2___ftadd
 24708 ;;		i2___ftdiv
 24709 ;;		i2___ftmul
 24710 ;;		i2___ftneg
 24711 ;; This function is called by:
 24712 ;;		_main
 24713 ;;		_ADCC_ISR
 24714 ;; This function uses a non-reentrant model
 24715 ;;
 24716                           
 24717                           	psect	text93
 24718  011EEA                     __ptext93:
 24719                           	opt stack 0
 24720  011EEA                     _ADC_postProcessingCallback:
 24721                           	opt stack 9
 24722                           
 24723                           ;main.c: 149: adcc_channel_t currentADCChannel = ADPCH;
 24724                           
 24725                           ;incstack = 0
 24726  011EEA  CF5F F0AF          	movff	3935,ADC_postProcessingCallback@currentADCChannel	;volatile
 24727                           
 24728                           ;main.c: 151: switch (currentADCChannel) {
 24729  011EEE  D291               	goto	i2l882
 24730  011EF0                     
 24731                           ;main.c: 154: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 24732  011EF0  EC5D  F0B3         	call	_ADCC_GetConversionResult	;wreg free
 24733  011EF4  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 24734  011EF8  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 24735  011EFC  ECE4  F0B2         	call	___lwtoft	;wreg free
 24736  011F00  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 24737  011F04  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 24738  011F08  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 24739  011F0C  0E68               	movlw	104
 24740  011F0E  6E2A               	movwf	i2___ftmul@f2,c
 24741  011F10  0E53               	movlw	83
 24742  011F12  6E2B               	movwf	i2___ftmul@f2+1,c
 24743  011F14  0E3B               	movlw	59
 24744  011F16  6E2C               	movwf	i2___ftmul@f2+2,c
 24745  011F18  ECB8  F0A5         	call	i2___ftmul	;wreg free
 24746  011F1C  C027  F0DD         	movff	?i2___ftmul,_AVSS_ADC_Result	;volatile
 24747  011F20  C028  F0DE         	movff	?i2___ftmul+1,_AVSS_ADC_Result+1	;volatile
 24748  011F24  C029  F0DF         	movff	?i2___ftmul+2,_AVSS_ADC_Result+2	;volatile
 24749                           
 24750                           ;main.c: 155: break;
 24751  011F28  0012               	return	
 24752  011F2A                     
 24753                           ;main.c: 159: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 24754  011F2A  0E68               	movlw	104
 24755  011F2C  6E2A               	movwf	i2___ftmul@f2,c
 24756  011F2E  0E53               	movlw	83
 24757  011F30  6E2B               	movwf	i2___ftmul@f2+1,c
 24758  011F32  0E3B               	movlw	59
 24759  011F34  6E2C               	movwf	i2___ftmul@f2+2,c
 24760  011F36  EC5D  F0B3         	call	_ADCC_GetConversionResult	;wreg free
 24761  011F3A  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 24762  011F3E  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 24763  011F42  ECE4  F0B2         	call	___lwtoft	;wreg free
 24764  011F46  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 24765  011F4A  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 24766  011F4E  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 24767  011F52  ECB8  F0A5         	call	i2___ftmul	;wreg free
 24768  011F56  C027  F040         	movff	?i2___ftmul,i2___ftadd@f1
 24769  011F5A  C028  F041         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 24770  011F5E  C029  F042         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 24771  011F62  C0DD  F043         	movff	_AVSS_ADC_Result,i2___ftadd@f2	;volatile
 24772  011F66  C0DE  F044         	movff	_AVSS_ADC_Result+1,i2___ftadd@f2+1	;volatile
 24773  011F6A  C0DF  F045         	movff	_AVSS_ADC_Result+2,i2___ftadd@f2+2	;volatile
 24774  011F6E  ECBE  F09F         	call	i2___ftadd	;wreg free
 24775  011F72  C040  F0EC         	movff	?i2___ftadd,_FVR_ADC_Result	;volatile
 24776  011F76  C041  F0ED         	movff	?i2___ftadd+1,_FVR_ADC_Result+1	;volatile
 24777  011F7A  C042  F0EE         	movff	?i2___ftadd+2,_FVR_ADC_Result+2	;volatile
 24778                           
 24779                           ;main.c: 160: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 24780  011F7E  0E12               	movlw	18
 24781  011F80  6E15               	movwf	i2___ftdiv@f1,c
 24782  011F82  0E03               	movlw	3
 24783  011F84  6E16               	movwf	i2___ftdiv@f1+1,c
 24784  011F86  0E40               	movlw	64
 24785  011F88  6E17               	movwf	i2___ftdiv@f1+2,c
 24786  011F8A  C0EC  F018         	movff	_FVR_ADC_Result,i2___ftdiv@f2	;volatile
 24787  011F8E  C0ED  F019         	movff	_FVR_ADC_Result+1,i2___ftdiv@f2+1	;volatile
 24788  011F92  C0EE  F01A         	movff	_FVR_ADC_Result+2,i2___ftdiv@f2+2	;volatile
 24789  011F96  ECA6  F0A6         	call	i2___ftdiv	;wreg free
 24790  011F9A  C015  F0DA         	movff	?i2___ftdiv,_ADC_Result_Scaling	;volatile
 24791  011F9E  C016  F0DB         	movff	?i2___ftdiv+1,_ADC_Result_Scaling+1	;volatile
 24792  011FA2  C017  F0DC         	movff	?i2___ftdiv+2,_ADC_Result_Scaling+2	;volatile
 24793                           
 24794                           ;main.c: 161: break;
 24795  011FA6  0012               	return	
 24796  011FA8                     
 24797                           ;main.c: 165: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 24798  011FA8  C0DA  F02A         	movff	_ADC_Result_Scaling,i2___ftmul@f2	;volatile
 24799  011FAC  C0DB  F02B         	movff	_ADC_Result_Scaling+1,i2___ftmul@f2+1	;volatile
 24800  011FB0  C0DC  F02C         	movff	_ADC_Result_Scaling+2,i2___ftmul@f2+2	;volatile
 24801  011FB4  EC5D  F0B3         	call	_ADCC_GetConversionResult	;wreg free
 24802  011FB8  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 24803  011FBC  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 24804  011FC0  ECE4  F0B2         	call	___lwtoft	;wreg free
 24805  011FC4  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 24806  011FC8  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 24807  011FCC  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 24808  011FD0  ECB8  F0A5         	call	i2___ftmul	;wreg free
 24809  011FD4  C027  F0B3         	movff	?i2___ftmul,_ADC_postProcessingCallback$3518
 24810  011FD8  C028  F0B4         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3518+1
 24811  011FDC  C029  F0B5         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3518+2
 24812                           
 24813                           ;main.c: 165: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 24814  011FE0  C0B3  F027         	movff	_ADC_postProcessingCallback$3518,i2___ftmul@f1
 24815  011FE4  C0B4  F028         	movff	_ADC_postProcessingCallback$3518+1,i2___ftmul@f1+1
 24816  011FE8  C0B5  F029         	movff	_ADC_postProcessingCallback$3518+2,i2___ftmul@f1+2
 24817  011FEC  0E68               	movlw	104
 24818  011FEE  6E2A               	movwf	i2___ftmul@f2,c
 24819  011FF0  0ED3               	movlw	211
 24820  011FF2  6E2B               	movwf	i2___ftmul@f2+1,c
 24821  011FF4  0E3B               	movlw	59
 24822  011FF6  6E2C               	movwf	i2___ftmul@f2+2,c
 24823  011FF8  ECB8  F0A5         	call	i2___ftmul	;wreg free
 24824  011FFC  C027  F0D7         	movff	?i2___ftmul,_POS3P3_ADC_Result	;volatile
 24825  012000  C028  F0D8         	movff	?i2___ftmul+1,_POS3P3_ADC_Result+1	;volatile
 24826  012004  C029  F0D9         	movff	?i2___ftmul+2,_POS3P3_ADC_Result+2	;volatile
 24827                           
 24828                           ;main.c: 166: break;
 24829  012008  0012               	return	
 24830  01200A                     
 24831                           ;main.c: 169: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 24832  01200A  0EC0               	movlw	192
 24833  01200C  6E18               	movwf	i2___ftdiv@f2,c
 24834  01200E  0E7F               	movlw	127
 24835  012010  6E19               	movwf	i2___ftdiv@f2+1,c
 24836  012012  0E44               	movlw	68
 24837  012014  6E1A               	movwf	i2___ftdiv@f2+2,c
 24838  012016  C0D7  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 24839  01201A  C0D8  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 24840  01201E  C0D9  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 24841  012022  ECA6  F0A6         	call	i2___ftdiv	;wreg free
 24842  012026  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 24843  01202A  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 24844  01202E  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 24845  012032  EC5D  F0B3         	call	_ADCC_GetConversionResult	;wreg free
 24846  012036  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 24847  01203A  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 24848  01203E  ECE4  F0B2         	call	___lwtoft	;wreg free
 24849  012042  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 24850  012046  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 24851  01204A  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 24852  01204E  ECB8  F0A5         	call	i2___ftmul	;wreg free
 24853  012052  C027  F0B3         	movff	?i2___ftmul,_ADC_postProcessingCallback$3518
 24854  012056  C028  F0B4         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3518+1
 24855  01205A  C029  F0B5         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3518+2
 24856                           
 24857                           ;main.c: 169: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 24858  01205E  C0B3  F027         	movff	_ADC_postProcessingCallback$3518,i2___ftmul@f1
 24859  012062  C0B4  F028         	movff	_ADC_postProcessingCallback$3518+1,i2___ftmul@f1+1
 24860  012066  C0B5  F029         	movff	_ADC_postProcessingCallback$3518+2,i2___ftmul@f1+2
 24861  01206A  0E5E               	movlw	94
 24862  01206C  6E2A               	movwf	i2___ftmul@f2,c
 24863  01206E  0EF2               	movlw	242
 24864  012070  6E2B               	movwf	i2___ftmul@f2+1,c
 24865  012072  0E3F               	movlw	63
 24866  012074  6E2C               	movwf	i2___ftmul@f2+2,c
 24867  012076  ECB8  F0A5         	call	i2___ftmul	;wreg free
 24868  01207A  C027  F0CE         	movff	?i2___ftmul,_Imeas	;volatile
 24869  01207E  C028  F0CF         	movff	?i2___ftmul+1,_Imeas+1	;volatile
 24870  012082  C029  F0D0         	movff	?i2___ftmul+2,_Imeas+2	;volatile
 24871                           
 24872                           ;main.c: 173: if (LATGbits.LATG0 != 1) {
 24873  012086  B07F               	btfsc	3967,0,c	;volatile
 24874  012088  D089               	goto	i2l888
 24875                           
 24876                           ;main.c: 178: if (load_enable) {
 24877  01208A  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 24878  01208C  D029               	goto	i2l889
 24879                           
 24880                           ;main.c: 181: if (dimming_period < 0x7FEE) {
 24881  01208E  0EEE               	movlw	238
 24882  012090  0100               	movlb	0	; () banked
 24883  012092  5DF8               	subwf	_dimming_period& (0+255),w,b	;volatile
 24884  012094  0E7F               	movlw	127
 24885  012096  59F9               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 24886  012098  B0D8               	btfsc	status,0,c
 24887  01209A  D007               	goto	i2l890
 24888                           
 24889                           ; BSR set to: 0
 24890                           ;main.c: 183: Ipk = Imeas;
 24891  01209C  C0CE  F0D1         	movff	_Imeas,_Ipk	;volatile
 24892  0120A0  C0CF  F0D2         	movff	_Imeas+1,_Ipk+1	;volatile
 24893  0120A4  C0D0  F0D3         	movff	_Imeas+2,_Ipk+2	;volatile
 24894                           
 24895                           ;main.c: 185: }
 24896  0120A8  D014               	goto	i2l891
 24897  0120AA                     i2l890:
 24898                           
 24899                           ; BSR set to: 0
 24900                           ;main.c: 188: else {
 24901                           ;main.c: 190: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 24902                           
 24903                           ; BSR set to: 0
 24904  0120AA  C0CE  F073         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 24905  0120AE  C0CF  F074         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 24906  0120B2  C0D0  F075         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 24907  0120B6  C0FA  F076         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 24908  0120BA  C0FB  F077         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 24909  0120BE  C0FC  F078         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 24910  0120C2  ECDD  F0AE         	call	_currentMeasuredToPeak	;wreg free
 24911  0120C6  C073  F0D1         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 24912  0120CA  C074  F0D2         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 24913  0120CE  C075  F0D3         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 24914  0120D2                     i2l891:
 24915                           
 24916                           ;main.c: 192: }
 24917                           ;main.c: 194: Vpk = Vpk_const;
 24918  0120D2  C0F2  F0D4         	movff	_Vpk_const,_Vpk	;volatile
 24919  0120D6  C0F3  F0D5         	movff	_Vpk_const+1,_Vpk+1	;volatile
 24920  0120DA  C0F4  F0D6         	movff	_Vpk_const+2,_Vpk+2	;volatile
 24921                           
 24922                           ;main.c: 196: }
 24923  0120DE  D00D               	goto	i2l892
 24924  0120E0                     i2l889:
 24925                           
 24926                           ;main.c: 198: else {
 24927                           ;main.c: 200: Ipk = 0.0;
 24928  0120E0  0E00               	movlw	0
 24929  0120E2  0100               	movlb	0	; () banked
 24930  0120E4  6FD1               	movwf	_Ipk& (0+255),b	;volatile
 24931  0120E6  0E00               	movlw	0
 24932  0120E8  6FD2               	movwf	(_Ipk+1)& (0+255),b	;volatile
 24933  0120EA  0E00               	movlw	0
 24934  0120EC  6FD3               	movwf	(_Ipk+2)& (0+255),b	;volatile
 24935                           
 24936                           ;main.c: 201: Vpk = 0.0;
 24937  0120EE  0E00               	movlw	0
 24938  0120F0  6FD4               	movwf	_Vpk& (0+255),b	;volatile
 24939  0120F2  0E00               	movlw	0
 24940  0120F4  6FD5               	movwf	(_Vpk+1)& (0+255),b	;volatile
 24941  0120F6  0E00               	movlw	0
 24942  0120F8  6FD6               	movwf	(_Vpk+2)& (0+255),b	;volatile
 24943  0120FA                     i2l892:
 24944                           
 24945                           ;main.c: 203: }
 24946                           ;main.c: 205: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset;
 24947                           
 24948                           ; BSR set to: 0
 24949  0120FA  C0FA  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 24950  0120FE  C0FB  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 24951  012102  C0FC  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 24952  012106  C0D1  F094         	movff	_Ipk,peakToRMS@Peak	;volatile
 24953  01210A  C0D2  F095         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 24954  01210E  C0D3  F096         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 24955  012112  EC23  F09D         	call	_peakToRMS	;wreg free
 24956  012116  C094  F0B0         	movff	?_peakToRMS,_ADC_postProcessingCallback$3519
 24957  01211A  C095  F0B1         	movff	?_peakToRMS+1,_ADC_postProcessingCallback$3519+1
 24958  01211E  C096  F0B2         	movff	?_peakToRMS+2,_ADC_postProcessingCallback$3519+2
 24959                           
 24960                           ;main.c: 203: }
 24961                           ;main.c: 205: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset;
 24962  012122  C0B0  F040         	movff	_ADC_postProcessingCallback$3519,i2___ftadd@f1
 24963  012126  C0B1  F041         	movff	_ADC_postProcessingCallback$3519+1,i2___ftadd@f1+1
 24964  01212A  C0B2  F042         	movff	_ADC_postProcessingCallback$3519+2,i2___ftadd@f1+2
 24965  01212E  C0EF  F043         	movff	_Irms_offset,i2___ftadd@f2
 24966  012132  C0F0  F044         	movff	_Irms_offset+1,i2___ftadd@f2+1
 24967  012136  C0F1  F045         	movff	_Irms_offset+2,i2___ftadd@f2+2
 24968  01213A  ECBE  F09F         	call	i2___ftadd	;wreg free
 24969  01213E  C040  F0CB         	movff	?i2___ftadd,_Irms	;volatile
 24970  012142  C041  F0CC         	movff	?i2___ftadd+1,_Irms+1	;volatile
 24971  012146  C042  F0CD         	movff	?i2___ftadd+2,_Irms+2	;volatile
 24972                           
 24973                           ;main.c: 206: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 24974  01214A  C0D4  F094         	movff	_Vpk,peakToRMS@Peak	;volatile
 24975  01214E  C0D5  F095         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 24976  012152  C0D6  F096         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 24977  012156  C0FA  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 24978  01215A  C0FB  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 24979  01215E  C0FC  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 24980  012162  EC23  F09D         	call	_peakToRMS	;wreg free
 24981  012166  C094  F0C8         	movff	?_peakToRMS,_Vrms	;volatile
 24982  01216A  C095  F0C9         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 24983  01216E  C096  F0CA         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 24984                           
 24985                           ;main.c: 207: Avg_Power = Vrms * Irms;
 24986  012172  C0C8  F027         	movff	_Vrms,i2___ftmul@f1	;volatile
 24987  012176  C0C9  F028         	movff	_Vrms+1,i2___ftmul@f1+1	;volatile
 24988  01217A  C0CA  F029         	movff	_Vrms+2,i2___ftmul@f1+2	;volatile
 24989  01217E  C0CB  F02A         	movff	_Irms,i2___ftmul@f2	;volatile
 24990  012182  C0CC  F02B         	movff	_Irms+1,i2___ftmul@f2+1	;volatile
 24991  012186  C0CD  F02C         	movff	_Irms+2,i2___ftmul@f2+2	;volatile
 24992  01218A  ECB8  F0A5         	call	i2___ftmul	;wreg free
 24993  01218E  C027  F1C1         	movff	?i2___ftmul,_Avg_Power	;volatile
 24994  012192  C028  F1C2         	movff	?i2___ftmul+1,_Avg_Power+1	;volatile
 24995  012196  C029  F1C3         	movff	?i2___ftmul+2,_Avg_Power+2	;volatile
 24996                           
 24997                           ;main.c: 209: }
 24998  01219A  0012               	return	
 24999  01219C                     i2l888:
 25000                           
 25001                           ;main.c: 212: else {
 25002                           ;main.c: 214: Ipk = Imeas;
 25003  01219C  C0CE  F0D1         	movff	_Imeas,_Ipk	;volatile
 25004  0121A0  C0CF  F0D2         	movff	_Imeas+1,_Ipk+1	;volatile
 25005  0121A4  C0D0  F0D3         	movff	_Imeas+2,_Ipk+2	;volatile
 25006                           
 25007                           ;main.c: 215: Irms = peakToRMS(Ipk, 0.0) + Irms_offset;
 25008  0121A8  0E00               	movlw	0
 25009  0121AA  0100               	movlb	0	; () banked
 25010  0121AC  6F97               	movwf	peakToRMS@Angle& (0+255),b
 25011  0121AE  0E00               	movlw	0
 25012  0121B0  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 25013  0121B2  0E00               	movlw	0
 25014  0121B4  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 25015  0121B6  C0D1  F094         	movff	_Ipk,peakToRMS@Peak	;volatile
 25016  0121BA  C0D2  F095         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 25017  0121BE  C0D3  F096         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 25018  0121C2  EC23  F09D         	call	_peakToRMS	;wreg free
 25019  0121C6  C094  F0B0         	movff	?_peakToRMS,_ADC_postProcessingCallback$3519
 25020  0121CA  C095  F0B1         	movff	?_peakToRMS+1,_ADC_postProcessingCallback$3519+1
 25021  0121CE  C096  F0B2         	movff	?_peakToRMS+2,_ADC_postProcessingCallback$3519+2
 25022                           
 25023                           ;main.c: 215: Irms = peakToRMS(Ipk, 0.0) + Irms_offset;
 25024  0121D2  C0B0  F040         	movff	_ADC_postProcessingCallback$3519,i2___ftadd@f1
 25025  0121D6  C0B1  F041         	movff	_ADC_postProcessingCallback$3519+1,i2___ftadd@f1+1
 25026  0121DA  C0B2  F042         	movff	_ADC_postProcessingCallback$3519+2,i2___ftadd@f1+2
 25027  0121DE  C0EF  F043         	movff	_Irms_offset,i2___ftadd@f2
 25028  0121E2  C0F0  F044         	movff	_Irms_offset+1,i2___ftadd@f2+1
 25029  0121E6  C0F1  F045         	movff	_Irms_offset+2,i2___ftadd@f2+2
 25030  0121EA  ECBE  F09F         	call	i2___ftadd	;wreg free
 25031  0121EE  C040  F0CB         	movff	?i2___ftadd,_Irms	;volatile
 25032  0121F2  C041  F0CC         	movff	?i2___ftadd+1,_Irms+1	;volatile
 25033  0121F6  C042  F0CD         	movff	?i2___ftadd+2,_Irms+2	;volatile
 25034                           
 25035                           ;main.c: 216: Vrms = peakToRMS(Vpk_const, 0.0);
 25036  0121FA  C0F2  F094         	movff	_Vpk_const,peakToRMS@Peak
 25037  0121FE  C0F3  F095         	movff	_Vpk_const+1,peakToRMS@Peak+1
 25038  012202  C0F4  F096         	movff	_Vpk_const+2,peakToRMS@Peak+2
 25039  012206  0E00               	movlw	0
 25040  012208  0100               	movlb	0	; () banked
 25041  01220A  6F97               	movwf	peakToRMS@Angle& (0+255),b
 25042  01220C  0E00               	movlw	0
 25043  01220E  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 25044  012210  0E00               	movlw	0
 25045  012212  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 25046  012214  EC23  F09D         	call	_peakToRMS	;wreg free
 25047  012218  C094  F0C8         	movff	?_peakToRMS,_Vrms	;volatile
 25048  01221C  C095  F0C9         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 25049  012220  C096  F0CA         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 25050                           
 25051                           ;main.c: 217: Avg_Power = Vrms * Irms;
 25052  012224  C0C8  F027         	movff	_Vrms,i2___ftmul@f1	;volatile
 25053  012228  C0C9  F028         	movff	_Vrms+1,i2___ftmul@f1+1	;volatile
 25054  01222C  C0CA  F029         	movff	_Vrms+2,i2___ftmul@f1+2	;volatile
 25055  012230  C0CB  F02A         	movff	_Irms,i2___ftmul@f2	;volatile
 25056  012234  C0CC  F02B         	movff	_Irms+1,i2___ftmul@f2+1	;volatile
 25057  012238  C0CD  F02C         	movff	_Irms+2,i2___ftmul@f2+2	;volatile
 25058  01223C  ECB8  F0A5         	call	i2___ftmul	;wreg free
 25059  012240  C027  F1C1         	movff	?i2___ftmul,_Avg_Power	;volatile
 25060  012244  C028  F1C2         	movff	?i2___ftmul+1,_Avg_Power+1	;volatile
 25061  012248  C029  F1C3         	movff	?i2___ftmul+2,_Avg_Power+2	;volatile
 25062                           
 25063                           ;main.c: 219: }
 25064                           ;main.c: 220: break;
 25065  01224C  0012               	return	
 25066  01224E                     
 25067                           ;main.c: 224: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 25068  01224E  0EC0               	movlw	192
 25069  012250  6E18               	movwf	i2___ftdiv@f2,c
 25070  012252  0E7F               	movlw	127
 25071  012254  6E19               	movwf	i2___ftdiv@f2+1,c
 25072  012256  0E44               	movlw	68
 25073  012258  6E1A               	movwf	i2___ftdiv@f2+2,c
 25074  01225A  C0D7  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 25075  01225E  C0D8  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 25076  012262  C0D9  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 25077  012266  ECA6  F0A6         	call	i2___ftdiv	;wreg free
 25078  01226A  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 25079  01226E  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 25080  012272  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 25081  012276  EC5D  F0B3         	call	_ADCC_GetConversionResult	;wreg free
 25082  01227A  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 25083  01227E  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 25084  012282  ECE4  F0B2         	call	___lwtoft	;wreg free
 25085  012286  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 25086  01228A  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 25087  01228E  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 25088  012292  ECB8  F0A5         	call	i2___ftmul	;wreg free
 25089  012296  C027  F0B3         	movff	?i2___ftmul,_ADC_postProcessingCallback$3518
 25090  01229A  C028  F0B4         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3518+1
 25091  01229E  C029  F0B5         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3518+2
 25092                           
 25093                           ;main.c: 224: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 25094  0122A2  C0B3  F027         	movff	_ADC_postProcessingCallback$3518,i2___ftmul@f1
 25095  0122A6  C0B4  F028         	movff	_ADC_postProcessingCallback$3518+1,i2___ftmul@f1+1
 25096  0122AA  C0B5  F029         	movff	_ADC_postProcessingCallback$3518+2,i2___ftmul@f1+2
 25097  0122AE  0EF8               	movlw	248
 25098  0122B0  6E2A               	movwf	i2___ftmul@f2,c
 25099  0122B2  0E80               	movlw	128
 25100  0122B4  6E2B               	movwf	i2___ftmul@f2+1,c
 25101  0122B6  0E40               	movlw	64
 25102  0122B8  6E2C               	movwf	i2___ftmul@f2+2,c
 25103  0122BA  ECB8  F0A5         	call	i2___ftmul	;wreg free
 25104  0122BE  C027  F1C7         	movff	?i2___ftmul,_POS12_ADC_Result	;volatile
 25105  0122C2  C028  F1C8         	movff	?i2___ftmul+1,_POS12_ADC_Result+1	;volatile
 25106  0122C6  C029  F1C9         	movff	?i2___ftmul+2,_POS12_ADC_Result+2	;volatile
 25107                           
 25108                           ;main.c: 225: break;
 25109  0122CA  0012               	return	
 25110  0122CC                     
 25111                           ;main.c: 229: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 25112  0122CC  0E00               	movlw	0
 25113  0122CE  6E18               	movwf	i2___ftdiv@f2,c
 25114  0122D0  0E00               	movlw	0
 25115  0122D2  6E19               	movwf	i2___ftdiv@f2+1,c
 25116  0122D4  0E40               	movlw	64
 25117  0122D6  6E1A               	movwf	i2___ftdiv@f2+2,c
 25118  0122D8  C0D7  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 25119  0122DC  C0D8  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 25120  0122E0  C0D9  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 25121  0122E4  ECA6  F0A6         	call	i2___ftdiv	;wreg free
 25122  0122E8  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 25123  0122EC  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 25124  0122F0  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 25125  0122F4  0E00               	movlw	0
 25126  0122F6  6E43               	movwf	i2___ftadd@f2,c
 25127  0122F8  0E80               	movlw	128
 25128  0122FA  6E44               	movwf	i2___ftadd@f2+1,c
 25129  0122FC  0E3F               	movlw	63
 25130  0122FE  6E45               	movwf	i2___ftadd@f2+2,c
 25131  012300  0EC0               	movlw	192
 25132  012302  6E18               	movwf	i2___ftdiv@f2,c
 25133  012304  0E7F               	movlw	127
 25134  012306  6E19               	movwf	i2___ftdiv@f2+1,c
 25135  012308  0E44               	movlw	68
 25136  01230A  6E1A               	movwf	i2___ftdiv@f2+2,c
 25137  01230C  EC5D  F0B3         	call	_ADCC_GetConversionResult	;wreg free
 25138  012310  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 25139  012314  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 25140  012318  ECE4  F0B2         	call	___lwtoft	;wreg free
 25141  01231C  C009  F015         	movff	?___lwtoft,i2___ftdiv@f1
 25142  012320  C00A  F016         	movff	?___lwtoft+1,i2___ftdiv@f1+1
 25143  012324  C00B  F017         	movff	?___lwtoft+2,i2___ftdiv@f1+2
 25144  012328  ECA6  F0A6         	call	i2___ftdiv	;wreg free
 25145  01232C  C015  F024         	movff	?i2___ftdiv,i2___ftneg@f1
 25146  012330  C016  F025         	movff	?i2___ftdiv+1,i2___ftneg@f1+1
 25147  012334  C017  F026         	movff	?i2___ftdiv+2,i2___ftneg@f1+2
 25148  012338  ECD2  F0B2         	call	i2___ftneg	;wreg free
 25149  01233C  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 25150  012340  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 25151  012344  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 25152  012348  ECBE  F09F         	call	i2___ftadd	;wreg free
 25153  01234C  C040  F027         	movff	?i2___ftadd,i2___ftmul@f1
 25154  012350  C041  F028         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 25155  012354  C042  F029         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 25156  012358  ECB8  F0A5         	call	i2___ftmul	;wreg free
 25157  01235C  C027  F0A6         	movff	?i2___ftmul,_ADC_postProcessingCallback$3520
 25158  012360  C028  F0A7         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3520+1
 25159  012364  C029  F0A8         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3520+2
 25160                           
 25161                           ;main.c: 229: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 25162  012368  0E04               	movlw	4
 25163  01236A  6E18               	movwf	i2___ftdiv@f2,c
 25164  01236C  0EAD               	movlw	173
 25165  01236E  6E19               	movwf	i2___ftdiv@f2+1,c
 25166  012370  0E3A               	movlw	58
 25167  012372  6E1A               	movwf	i2___ftdiv@f2+2,c
 25168  012374  0EB4               	movlw	180
 25169  012376  6E43               	movwf	i2___ftadd@f2,c
 25170  012378  0E28               	movlw	40
 25171  01237A  6E44               	movwf	i2___ftadd@f2+1,c
 25172  01237C  0E3F               	movlw	63
 25173  01237E  6E45               	movwf	i2___ftadd@f2+2,c
 25174  012380  C0A6  F024         	movff	_ADC_postProcessingCallback$3520,i2___ftneg@f1
 25175  012384  C0A7  F025         	movff	_ADC_postProcessingCallback$3520+1,i2___ftneg@f1+1
 25176  012388  C0A8  F026         	movff	_ADC_postProcessingCallback$3520+2,i2___ftneg@f1+2
 25177  01238C  ECD2  F0B2         	call	i2___ftneg	;wreg free
 25178  012390  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 25179  012394  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 25180  012398  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 25181  01239C  ECBE  F09F         	call	i2___ftadd	;wreg free
 25182  0123A0  C040  F015         	movff	?i2___ftadd,i2___ftdiv@f1
 25183  0123A4  C041  F016         	movff	?i2___ftadd+1,i2___ftdiv@f1+1
 25184  0123A8  C042  F017         	movff	?i2___ftadd+2,i2___ftdiv@f1+2
 25185  0123AC  ECA6  F0A6         	call	i2___ftdiv	;wreg free
 25186  0123B0  C015  F0A9         	movff	?i2___ftdiv,_ADC_postProcessingCallback$3521
 25187  0123B4  C016  F0AA         	movff	?i2___ftdiv+1,_ADC_postProcessingCallback$3521+1
 25188  0123B8  C017  F0AB         	movff	?i2___ftdiv+2,_ADC_postProcessingCallback$3521+2
 25189                           
 25190                           ;main.c: 229: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 25191  0123BC  C0F5  F043         	movff	_Temp_ADC_Offset,i2___ftadd@f2	;volatile
 25192  0123C0  C0F6  F044         	movff	_Temp_ADC_Offset+1,i2___ftadd@f2+1	;volatile
 25193  0123C4  C0F7  F045         	movff	_Temp_ADC_Offset+2,i2___ftadd@f2+2	;volatile
 25194  0123C8  C0A9  F040         	movff	_ADC_postProcessingCallback$3521,i2___ftadd@f1
 25195  0123CC  C0AA  F041         	movff	_ADC_postProcessingCallback$3521+1,i2___ftadd@f1+1
 25196  0123D0  C0AB  F042         	movff	_ADC_postProcessingCallback$3521+2,i2___ftadd@f1+2
 25197  0123D4  ECBE  F09F         	call	i2___ftadd	;wreg free
 25198  0123D8  C040  F0AC         	movff	?i2___ftadd,_ADC_postProcessingCallback$3522
 25199  0123DC  C041  F0AD         	movff	?i2___ftadd+1,_ADC_postProcessingCallback$3522+1
 25200  0123E0  C042  F0AE         	movff	?i2___ftadd+2,_ADC_postProcessingCallback$3522+2
 25201                           
 25202                           ;main.c: 229: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 25203  0123E4  C0AC  F040         	movff	_ADC_postProcessingCallback$3522,i2___ftadd@f1
 25204  0123E8  C0AD  F041         	movff	_ADC_postProcessingCallback$3522+1,i2___ftadd@f1+1
 25205  0123EC  C0AE  F042         	movff	_ADC_postProcessingCallback$3522+2,i2___ftadd@f1+2
 25206  0123F0  0E00               	movlw	0
 25207  0123F2  6E43               	movwf	i2___ftadd@f2,c
 25208  0123F4  0E20               	movlw	32
 25209  0123F6  6E44               	movwf	i2___ftadd@f2+1,c
 25210  0123F8  0EC2               	movlw	194
 25211  0123FA  6E45               	movwf	i2___ftadd@f2+2,c
 25212  0123FC  ECBE  F09F         	call	i2___ftadd	;wreg free
 25213  012400  C040  F1C4         	movff	?i2___ftadd,_Temp_ADC_Result	;volatile
 25214  012404  C041  F1C5         	movff	?i2___ftadd+1,_Temp_ADC_Result+1	;volatile
 25215  012408  C042  F1C6         	movff	?i2___ftadd+2,_Temp_ADC_Result+2	;volatile
 25216                           
 25217                           ;main.c: 230: break;
 25218  01240C  0012               	return	
 25219  01240E                     i2l896:
 25220                           
 25221                           ; BSR set to: 0
 25222                           ;main.c: 234: LATFbits.LATF3 = 1;
 25223  01240E  867E               	bsf	3966,3,c	;volatile
 25224                           
 25225                           ; BSR set to: 0
 25226                           ;main.c: 237: }
 25227                           
 25228                           ;main.c: 235: break;
 25229  012410  0012               	return	
 25230  012412                     i2l882:
 25231                           
 25232                           ; BSR set to: 0
 25233  012412  0100               	movlb	0	; () banked
 25234  012414  51AF               	movf	ADC_postProcessingCallback@currentADCChannel& (0+255),w,b
 25235                           
 25236                           ; Switch size 1, requested type "space"
 25237                           ; Number of cases is 6, Range of values is 0 to 63
 25238                           ; switch strategies available:
 25239                           ; Name         Instructions Cycles
 25240                           ; simple_byte           19    10 (average)
 25241                           ;	Chosen strategy is simple_byte
 25242  012416  0A00               	xorlw	0	; case 0
 25243  012418  B4D8               	btfsc	status,2,c
 25244  01241A  D5F7               	goto	i2l887
 25245  01241C  0A04               	xorlw	4	; case 4
 25246  01241E  B4D8               	btfsc	status,2,c
 25247  012420  D716               	goto	i2l894
 25248  012422  0A26               	xorlw	38	; case 34
 25249  012424  B4D8               	btfsc	status,2,c
 25250  012426  D5C0               	goto	i2l886
 25251  012428  0A1E               	xorlw	30	; case 60
 25252  01242A  B4D8               	btfsc	status,2,c
 25253  01242C  D561               	goto	i2l883
 25254  01242E  0A01               	xorlw	1	; case 61
 25255  012430  B4D8               	btfsc	status,2,c
 25256  012432  D74C               	goto	i2l895
 25257  012434  0A02               	xorlw	2	; case 63
 25258  012436  B4D8               	btfsc	status,2,c
 25259  012438  D578               	goto	i2l885
 25260  01243A  D7E9               	goto	i2l896
 25261  01243C                     __end_of_ADC_postProcessingCallback:
 25262                           	opt stack 0
 25263                           tosu	equ	0xFFF
 25264                           tosh	equ	0xFFE
 25265                           tosl	equ	0xFFD
 25266                           pclatu	equ	0xFFB
 25267                           pclath	equ	0xFFA
 25268                           tblptru	equ	0xFF8
 25269                           tblptrh	equ	0xFF7
 25270                           tblptrl	equ	0xFF6
 25271                           tablat	equ	0xFF5
 25272                           prodh	equ	0xFF4
 25273                           prodl	equ	0xFF3
 25274                           intcon	equ	0xFF2
 25275                           indf0	equ	0xFEF
 25276                           postinc0	equ	0xFEE
 25277                           fsr0h	equ	0xFEA
 25278                           fsr0l	equ	0xFE9
 25279                           wreg	equ	0xFE8
 25280                           indf1	equ	0xFE7
 25281                           postdec1	equ	0xFE5
 25282                           fsr1h	equ	0xFE2
 25283                           fsr1l	equ	0xFE1
 25284                           bsr	equ	0xFE0
 25285                           indf2	equ	0xFDF
 25286                           postinc2	equ	0xFDE
 25287                           postdec2	equ	0xFDD
 25288                           fsr2h	equ	0xFDA
 25289                           fsr2l	equ	0xFD9
 25290                           status	equ	0xFD8
 25291                           
 25292 ;; *************** function _peakToRMS *****************
 25293 ;; Defined at:
 25294 ;;		line 90 in file "main.c"
 25295 ;; Parameters:    Size  Location     Type
 25296 ;;  Peak            3   52[BANK0 ] void 
 25297 ;;  Angle           3   55[BANK0 ] void 
 25298 ;; Auto vars:     Size  Location     Type
 25299 ;;  RMS             3   67[BANK0 ] void 
 25300 ;; Return value:  Size  Location     Type
 25301 ;;                  3   52[BANK0 ] void 
 25302 ;; Registers used:
 25303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25304 ;; Tracked objects:
 25305 ;;		On entry : 0/0
 25306 ;;		On exit  : 0/0
 25307 ;;		Unchanged: 0/0
 25308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25309 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25310 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25312 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25313 ;;Total ram usage:       18 bytes
 25314 ;; Hardware stack levels used:    1
 25315 ;; Hardware stack levels required when called:    6
 25316 ;; This function calls:
 25317 ;;		_acos
 25318 ;;		_sin
 25319 ;;		_sqrt
 25320 ;;		i2___ftadd
 25321 ;;		i2___ftdiv
 25322 ;;		i2___ftmul
 25323 ;;		i2___ftneg
 25324 ;; This function is called by:
 25325 ;;		_ADC_postProcessingCallback
 25326 ;; This function uses a non-reentrant model
 25327 ;;
 25328                           
 25329                           	psect	text94
 25330  013A46                     __ptext94:
 25331                           	opt stack 0
 25332  013A46                     _peakToRMS:
 25333                           	opt stack 9
 25334                           
 25335                           ;main.c: 93: double RMS = 0.0;
 25336                           
 25337                           ;incstack = 0
 25338  013A46  0E00               	movlw	0
 25339  013A48  0100               	movlb	0	; () banked
 25340  013A4A  6FA3               	movwf	peakToRMS@RMS& (0+255),b
 25341  013A4C  0E00               	movlw	0
 25342  013A4E  6FA4               	movwf	(peakToRMS@RMS+1)& (0+255),b
 25343  013A50  0E00               	movlw	0
 25344  013A52  6FA5               	movwf	(peakToRMS@RMS+2)& (0+255),b
 25345                           
 25346                           ; BSR set to: 0
 25347                           ;main.c: 96: RMS = 2.0 * acos(-1.0);
 25348  013A54  0E00               	movlw	0
 25349  013A56  6F8E               	movwf	acos@x& (0+255),b
 25350  013A58  0E80               	movlw	128
 25351  013A5A  6F8F               	movwf	(acos@x+1)& (0+255),b
 25352  013A5C  0EBF               	movlw	191
 25353  013A5E  6F90               	movwf	(acos@x+2)& (0+255),b
 25354  013A60  ECC4  F0AF         	call	_acos	;wreg free
 25355  013A64  C08E  F0A0         	movff	?_acos,_peakToRMS$3515
 25356  013A68  C08F  F0A1         	movff	?_acos+1,_peakToRMS$3515+1
 25357  013A6C  C090  F0A2         	movff	?_acos+2,_peakToRMS$3515+2
 25358                           
 25359                           ;main.c: 96: RMS = 2.0 * acos(-1.0);
 25360  013A70  C0A0  F027         	movff	_peakToRMS$3515,i2___ftmul@f1
 25361  013A74  C0A1  F028         	movff	_peakToRMS$3515+1,i2___ftmul@f1+1
 25362  013A78  C0A2  F029         	movff	_peakToRMS$3515+2,i2___ftmul@f1+2
 25363  013A7C  0E00               	movlw	0
 25364  013A7E  6E2A               	movwf	i2___ftmul@f2,c
 25365  013A80  0E00               	movlw	0
 25366  013A82  6E2B               	movwf	i2___ftmul@f2+1,c
 25367  013A84  0E40               	movlw	64
 25368  013A86  6E2C               	movwf	i2___ftmul@f2+2,c
 25369  013A88  ECB8  F0A5         	call	i2___ftmul	;wreg free
 25370  013A8C  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 25371  013A90  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 25372  013A94  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 25373                           
 25374                           ;main.c: 97: RMS = RMS - (2.0 * Angle);
 25375  013A98  0E00               	movlw	0
 25376  013A9A  6E2A               	movwf	i2___ftmul@f2,c
 25377  013A9C  0E00               	movlw	0
 25378  013A9E  6E2B               	movwf	i2___ftmul@f2+1,c
 25379  013AA0  0E40               	movlw	64
 25380  013AA2  6E2C               	movwf	i2___ftmul@f2+2,c
 25381  013AA4  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 25382  013AA8  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 25383  013AAC  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 25384  013AB0  ECB8  F0A5         	call	i2___ftmul	;wreg free
 25385  013AB4  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 25386  013AB8  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 25387  013ABC  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 25388  013AC0  ECD2  F0B2         	call	i2___ftneg	;wreg free
 25389  013AC4  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 25390  013AC8  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 25391  013ACC  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 25392  013AD0  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 25393  013AD4  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 25394  013AD8  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 25395  013ADC  ECBE  F09F         	call	i2___ftadd	;wreg free
 25396  013AE0  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 25397  013AE4  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 25398  013AE8  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 25399                           
 25400                           ;main.c: 98: RMS = RMS + sin(2.0 * Angle);
 25401  013AEC  0E00               	movlw	0
 25402  013AEE  6E2A               	movwf	i2___ftmul@f2,c
 25403  013AF0  0E00               	movlw	0
 25404  013AF2  6E2B               	movwf	i2___ftmul@f2+1,c
 25405  013AF4  0E40               	movlw	64
 25406  013AF6  6E2C               	movwf	i2___ftmul@f2+2,c
 25407  013AF8  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 25408  013AFC  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 25409  013B00  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 25410  013B04  ECB8  F0A5         	call	i2___ftmul	;wreg free
 25411  013B08  C027  F09A         	movff	?i2___ftmul,_peakToRMS$3516
 25412  013B0C  C028  F09B         	movff	?i2___ftmul+1,_peakToRMS$3516+1
 25413  013B10  C029  F09C         	movff	?i2___ftmul+2,_peakToRMS$3516+2
 25414                           
 25415                           ;main.c: 98: RMS = RMS + sin(2.0 * Angle);
 25416  013B14  C09A  F066         	movff	_peakToRMS$3516,sin@f
 25417  013B18  C09B  F067         	movff	_peakToRMS$3516+1,sin@f+1
 25418  013B1C  C09C  F068         	movff	_peakToRMS$3516+2,sin@f+2
 25419  013B20  ECF4  F09B         	call	_sin	;wreg free
 25420  013B24  C066  F09D         	movff	?_sin,_peakToRMS$3517
 25421  013B28  C067  F09E         	movff	?_sin+1,_peakToRMS$3517+1
 25422  013B2C  C068  F09F         	movff	?_sin+2,_peakToRMS$3517+2
 25423                           
 25424                           ;main.c: 98: RMS = RMS + sin(2.0 * Angle);
 25425  013B30  C09D  F040         	movff	_peakToRMS$3517,i2___ftadd@f1
 25426  013B34  C09E  F041         	movff	_peakToRMS$3517+1,i2___ftadd@f1+1
 25427  013B38  C09F  F042         	movff	_peakToRMS$3517+2,i2___ftadd@f1+2
 25428  013B3C  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 25429  013B40  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 25430  013B44  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 25431  013B48  ECBE  F09F         	call	i2___ftadd	;wreg free
 25432  013B4C  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 25433  013B50  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 25434  013B54  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 25435                           
 25436                           ;main.c: 99: RMS = RMS / (4.0 * acos(-1.0));
 25437  013B58  0E00               	movlw	0
 25438  013B5A  0100               	movlb	0	; () banked
 25439  013B5C  6F8E               	movwf	acos@x& (0+255),b
 25440  013B5E  0E80               	movlw	128
 25441  013B60  6F8F               	movwf	(acos@x+1)& (0+255),b
 25442  013B62  0EBF               	movlw	191
 25443  013B64  6F90               	movwf	(acos@x+2)& (0+255),b
 25444  013B66  ECC4  F0AF         	call	_acos	;wreg free
 25445  013B6A  C08E  F0A0         	movff	?_acos,_peakToRMS$3515
 25446  013B6E  C08F  F0A1         	movff	?_acos+1,_peakToRMS$3515+1
 25447  013B72  C090  F0A2         	movff	?_acos+2,_peakToRMS$3515+2
 25448                           
 25449                           ;main.c: 99: RMS = RMS / (4.0 * acos(-1.0));
 25450  013B76  C0A3  F015         	movff	peakToRMS@RMS,i2___ftdiv@f1
 25451  013B7A  C0A4  F016         	movff	peakToRMS@RMS+1,i2___ftdiv@f1+1
 25452  013B7E  C0A5  F017         	movff	peakToRMS@RMS+2,i2___ftdiv@f1+2
 25453  013B82  0E00               	movlw	0
 25454  013B84  6E2A               	movwf	i2___ftmul@f2,c
 25455  013B86  0E80               	movlw	128
 25456  013B88  6E2B               	movwf	i2___ftmul@f2+1,c
 25457  013B8A  0E40               	movlw	64
 25458  013B8C  6E2C               	movwf	i2___ftmul@f2+2,c
 25459  013B8E  C0A0  F027         	movff	_peakToRMS$3515,i2___ftmul@f1
 25460  013B92  C0A1  F028         	movff	_peakToRMS$3515+1,i2___ftmul@f1+1
 25461  013B96  C0A2  F029         	movff	_peakToRMS$3515+2,i2___ftmul@f1+2
 25462  013B9A  ECB8  F0A5         	call	i2___ftmul	;wreg free
 25463  013B9E  C027  F018         	movff	?i2___ftmul,i2___ftdiv@f2
 25464  013BA2  C028  F019         	movff	?i2___ftmul+1,i2___ftdiv@f2+1
 25465  013BA6  C029  F01A         	movff	?i2___ftmul+2,i2___ftdiv@f2+2
 25466  013BAA  ECA6  F0A6         	call	i2___ftdiv	;wreg free
 25467  013BAE  C015  F0A3         	movff	?i2___ftdiv,peakToRMS@RMS
 25468  013BB2  C016  F0A4         	movff	?i2___ftdiv+1,peakToRMS@RMS+1
 25469  013BB6  C017  F0A5         	movff	?i2___ftdiv+2,peakToRMS@RMS+2
 25470                           
 25471                           ;main.c: 100: RMS = sqrt(RMS);
 25472  013BBA  C0A3  F066         	movff	peakToRMS@RMS,sqrt@a
 25473  013BBE  C0A4  F067         	movff	peakToRMS@RMS+1,sqrt@a+1
 25474  013BC2  C0A5  F068         	movff	peakToRMS@RMS+2,sqrt@a+2
 25475  013BC6  EC94  F0A0         	call	_sqrt	;wreg free
 25476  013BCA  C066  F0A3         	movff	?_sqrt,peakToRMS@RMS
 25477  013BCE  C067  F0A4         	movff	?_sqrt+1,peakToRMS@RMS+1
 25478  013BD2  C068  F0A5         	movff	?_sqrt+2,peakToRMS@RMS+2
 25479                           
 25480                           ;main.c: 101: RMS = Peak * RMS;
 25481  013BD6  C094  F027         	movff	peakToRMS@Peak,i2___ftmul@f1
 25482  013BDA  C095  F028         	movff	peakToRMS@Peak+1,i2___ftmul@f1+1
 25483  013BDE  C096  F029         	movff	peakToRMS@Peak+2,i2___ftmul@f1+2
 25484  013BE2  C0A3  F02A         	movff	peakToRMS@RMS,i2___ftmul@f2
 25485  013BE6  C0A4  F02B         	movff	peakToRMS@RMS+1,i2___ftmul@f2+1
 25486  013BEA  C0A5  F02C         	movff	peakToRMS@RMS+2,i2___ftmul@f2+2
 25487  013BEE  ECB8  F0A5         	call	i2___ftmul	;wreg free
 25488  013BF2  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 25489  013BF6  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 25490  013BFA  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 25491                           
 25492                           ;main.c: 102: return RMS;
 25493  013BFE  C0A3  F094         	movff	peakToRMS@RMS,?_peakToRMS
 25494  013C02  C0A4  F095         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 25495  013C06  C0A5  F096         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 25496  013C0A  0012               	return	
 25497  013C0C                     __end_of_peakToRMS:
 25498                           	opt stack 0
 25499                           tosu	equ	0xFFF
 25500                           tosh	equ	0xFFE
 25501                           tosl	equ	0xFFD
 25502                           pclatu	equ	0xFFB
 25503                           pclath	equ	0xFFA
 25504                           tblptru	equ	0xFF8
 25505                           tblptrh	equ	0xFF7
 25506                           tblptrl	equ	0xFF6
 25507                           tablat	equ	0xFF5
 25508                           prodh	equ	0xFF4
 25509                           prodl	equ	0xFF3
 25510                           intcon	equ	0xFF2
 25511                           indf0	equ	0xFEF
 25512                           postinc0	equ	0xFEE
 25513                           fsr0h	equ	0xFEA
 25514                           fsr0l	equ	0xFE9
 25515                           wreg	equ	0xFE8
 25516                           indf1	equ	0xFE7
 25517                           postdec1	equ	0xFE5
 25518                           fsr1h	equ	0xFE2
 25519                           fsr1l	equ	0xFE1
 25520                           bsr	equ	0xFE0
 25521                           indf2	equ	0xFDF
 25522                           postinc2	equ	0xFDE
 25523                           postdec2	equ	0xFDD
 25524                           fsr2h	equ	0xFDA
 25525                           fsr2l	equ	0xFD9
 25526                           status	equ	0xFD8
 25527                           
 25528 ;; *************** function _acos *****************
 25529 ;; Defined at:
 25530 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 25531 ;; Parameters:    Size  Location     Type
 25532 ;;  x               3   46[BANK0 ] void 
 25533 ;; Auto vars:     Size  Location     Type
 25534 ;;		None
 25535 ;; Return value:  Size  Location     Type
 25536 ;;                  3   46[BANK0 ] void 
 25537 ;; Registers used:
 25538 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25539 ;; Tracked objects:
 25540 ;;		On entry : 0/0
 25541 ;;		On exit  : 0/0
 25542 ;;		Unchanged: 0/0
 25543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25544 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25545 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25547 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25548 ;;Total ram usage:        6 bytes
 25549 ;; Hardware stack levels used:    1
 25550 ;; Hardware stack levels required when called:    5
 25551 ;; This function calls:
 25552 ;;		_asin
 25553 ;;		i2___ftadd
 25554 ;;		i2___ftneg
 25555 ;; This function is called by:
 25556 ;;		_peakToRMS
 25557 ;; This function uses a non-reentrant model
 25558 ;;
 25559                           
 25560                           	psect	text95
 25561  015F88                     __ptext95:
 25562                           	opt stack 0
 25563  015F88                     _acos:
 25564                           	opt stack 9
 25565                           
 25566                           ;incstack = 0
 25567  015F88  C08E  F079         	movff	acos@x,asin@x
 25568  015F8C  C08F  F07A         	movff	acos@x+1,asin@x+1
 25569  015F90  C090  F07B         	movff	acos@x+2,asin@x+2
 25570  015F94  ECBF  F09A         	call	_asin	;wreg free
 25571  015F98  C079  F091         	movff	?_asin,_acos$3523
 25572  015F9C  C07A  F092         	movff	?_asin+1,_acos$3523+1
 25573  015FA0  C07B  F093         	movff	?_asin+2,_acos$3523+2
 25574  015FA4  C091  F024         	movff	_acos$3523,i2___ftneg@f1
 25575  015FA8  C092  F025         	movff	_acos$3523+1,i2___ftneg@f1+1
 25576  015FAC  C093  F026         	movff	_acos$3523+2,i2___ftneg@f1+2
 25577  015FB0  ECD2  F0B2         	call	i2___ftneg	;wreg free
 25578  015FB4  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 25579  015FB8  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 25580  015FBC  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 25581  015FC0  0E10               	movlw	16
 25582  015FC2  6E43               	movwf	i2___ftadd@f2,c
 25583  015FC4  0EC9               	movlw	201
 25584  015FC6  6E44               	movwf	i2___ftadd@f2+1,c
 25585  015FC8  0E3F               	movlw	63
 25586  015FCA  6E45               	movwf	i2___ftadd@f2+2,c
 25587  015FCC  ECBE  F09F         	call	i2___ftadd	;wreg free
 25588  015FD0  C040  F08E         	movff	?i2___ftadd,?_acos
 25589  015FD4  C041  F08F         	movff	?i2___ftadd+1,?_acos+1
 25590  015FD8  C042  F090         	movff	?i2___ftadd+2,?_acos+2
 25591  015FDC  0012               	return	
 25592  015FDE                     __end_of_acos:
 25593                           	opt stack 0
 25594                           tosu	equ	0xFFF
 25595                           tosh	equ	0xFFE
 25596                           tosl	equ	0xFFD
 25597                           pclatu	equ	0xFFB
 25598                           pclath	equ	0xFFA
 25599                           tblptru	equ	0xFF8
 25600                           tblptrh	equ	0xFF7
 25601                           tblptrl	equ	0xFF6
 25602                           tablat	equ	0xFF5
 25603                           prodh	equ	0xFF4
 25604                           prodl	equ	0xFF3
 25605                           intcon	equ	0xFF2
 25606                           indf0	equ	0xFEF
 25607                           postinc0	equ	0xFEE
 25608                           fsr0h	equ	0xFEA
 25609                           fsr0l	equ	0xFE9
 25610                           wreg	equ	0xFE8
 25611                           indf1	equ	0xFE7
 25612                           postdec1	equ	0xFE5
 25613                           fsr1h	equ	0xFE2
 25614                           fsr1l	equ	0xFE1
 25615                           bsr	equ	0xFE0
 25616                           indf2	equ	0xFDF
 25617                           postinc2	equ	0xFDE
 25618                           postdec2	equ	0xFDD
 25619                           fsr2h	equ	0xFDA
 25620                           fsr2l	equ	0xFD9
 25621                           status	equ	0xFD8
 25622                           
 25623 ;; *************** function _asin *****************
 25624 ;; Defined at:
 25625 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 25626 ;; Parameters:    Size  Location     Type
 25627 ;;  x               3   25[BANK0 ] void 
 25628 ;; Auto vars:     Size  Location     Type
 25629 ;;  y               3   40[BANK0 ] void 
 25630 ;;  sgn             3   28[BANK0 ] void 
 25631 ;; Return value:  Size  Location     Type
 25632 ;;                  3   25[BANK0 ] void 
 25633 ;; Registers used:
 25634 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25635 ;; Tracked objects:
 25636 ;;		On entry : 0/0
 25637 ;;		On exit  : 0/0
 25638 ;;		Unchanged: 0/0
 25639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25640 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25641 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25643 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25644 ;;Total ram usage:       21 bytes
 25645 ;; Hardware stack levels used:    1
 25646 ;; Hardware stack levels required when called:    4
 25647 ;; This function calls:
 25648 ;;		_atan
 25649 ;;		_fabs
 25650 ;;		_sqrt
 25651 ;;		i2___ftadd
 25652 ;;		i2___ftdiv
 25653 ;;		i2___ftge
 25654 ;;		i2___ftmul
 25655 ;;		i2___ftneg
 25656 ;; This function is called by:
 25657 ;;		_acos
 25658 ;; This function uses a non-reentrant model
 25659 ;;
 25660                           
 25661                           	psect	text96
 25662  01357E                     __ptext96:
 25663                           	opt stack 0
 25664  01357E                     _asin:
 25665                           	opt stack 9
 25666                           
 25667                           ;incstack = 0
 25668  01357E  0E00               	movlw	0
 25669  013580  6E2A               	movwf	i2___ftge@ff1,c
 25670  013582  0E80               	movlw	128
 25671  013584  6E2B               	movwf	i2___ftge@ff1+1,c
 25672  013586  0E3F               	movlw	63
 25673  013588  6E2C               	movwf	i2___ftge@ff1+2,c
 25674  01358A  C079  F027         	movff	asin@x,fabs@d
 25675  01358E  C07A  F028         	movff	asin@x+1,fabs@d+1
 25676  013592  C07B  F029         	movff	asin@x+2,fabs@d+2
 25677  013596  EC30  F0B2         	call	_fabs	;wreg free
 25678  01359A  C027  F02D         	movff	?_fabs,i2___ftge@ff2
 25679  01359E  C028  F02E         	movff	?_fabs+1,i2___ftge@ff2+1
 25680  0135A2  C029  F02F         	movff	?_fabs+2,i2___ftge@ff2+2
 25681  0135A6  ECAD  F0AA         	call	i2___ftge	;wreg free
 25682  0135AA  B0D8               	btfsc	status,0,c
 25683  0135AC  D00C               	goto	i2l1427
 25684  0135AE  0E00               	movlw	0
 25685  0135B0  0100               	movlb	0	; () banked
 25686  0135B2  6FE7               	movwf	(_errno+1)& (0+255),b
 25687  0135B4  0E21               	movlw	33
 25688  0135B6  6FE6               	movwf	_errno& (0+255),b
 25689  0135B8  0E00               	movlw	0
 25690  0135BA  6F79               	movwf	?_asin& (0+255),b
 25691  0135BC  0E00               	movlw	0
 25692  0135BE  6F7A               	movwf	(?_asin+1)& (0+255),b
 25693  0135C0  0E00               	movlw	0
 25694  0135C2  6F7B               	movwf	(?_asin+2)& (0+255),b
 25695                           
 25696                           ; BSR set to: 0
 25697  0135C4  0012               	return	
 25698  0135C6                     i2l1427:
 25699                           
 25700                           ; BSR set to: 0
 25701  0135C6  0E00               	movlw	0
 25702  0135C8  0100               	movlb	0	; () banked
 25703  0135CA  6F7C               	movwf	asin@sgn& (0+255),b
 25704  0135CC  0E80               	movlw	128
 25705  0135CE  6F7D               	movwf	(asin@sgn+1)& (0+255),b
 25706  0135D0  0E3F               	movlw	63
 25707  0135D2  6F7E               	movwf	(asin@sgn+2)& (0+255),b
 25708                           
 25709                           ; BSR set to: 0
 25710  0135D4  C079  F02A         	movff	asin@x,i2___ftmul@f2
 25711  0135D8  C07A  F02B         	movff	asin@x+1,i2___ftmul@f2+1
 25712  0135DC  C07B  F02C         	movff	asin@x+2,i2___ftmul@f2+2
 25713  0135E0  C079  F027         	movff	asin@x,i2___ftmul@f1
 25714  0135E4  C07A  F028         	movff	asin@x+1,i2___ftmul@f1+1
 25715  0135E8  C07B  F029         	movff	asin@x+2,i2___ftmul@f1+2
 25716  0135EC  ECB8  F0A5         	call	i2___ftmul	;wreg free
 25717  0135F0  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 25718  0135F4  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 25719  0135F8  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 25720  0135FC  ECD2  F0B2         	call	i2___ftneg	;wreg free
 25721  013600  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 25722  013604  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 25723  013608  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 25724  01360C  0E00               	movlw	0
 25725  01360E  6E43               	movwf	i2___ftadd@f2,c
 25726  013610  0E80               	movlw	128
 25727  013612  6E44               	movwf	i2___ftadd@f2+1,c
 25728  013614  0E3F               	movlw	63
 25729  013616  6E45               	movwf	i2___ftadd@f2+2,c
 25730  013618  ECBE  F09F         	call	i2___ftadd	;wreg free
 25731  01361C  C040  F07F         	movff	?i2___ftadd,_asin$3524
 25732  013620  C041  F080         	movff	?i2___ftadd+1,_asin$3524+1
 25733  013624  C042  F081         	movff	?i2___ftadd+2,_asin$3524+2
 25734  013628  C07F  F066         	movff	_asin$3524,sqrt@a
 25735  01362C  C080  F067         	movff	_asin$3524+1,sqrt@a+1
 25736  013630  C081  F068         	movff	_asin$3524+2,sqrt@a+2
 25737  013634  EC94  F0A0         	call	_sqrt	;wreg free
 25738  013638  C066  F088         	movff	?_sqrt,asin@y
 25739  01363C  C067  F089         	movff	?_sqrt+1,asin@y+1
 25740  013640  C068  F08A         	movff	?_sqrt+2,asin@y+2
 25741  013644  C079  F027         	movff	asin@x,fabs@d
 25742  013648  C07A  F028         	movff	asin@x+1,fabs@d+1
 25743  01364C  C07B  F029         	movff	asin@x+2,fabs@d+2
 25744  013650  EC30  F0B2         	call	_fabs	;wreg free
 25745  013654  C027  F02A         	movff	?_fabs,i2___ftge@ff1
 25746  013658  C028  F02B         	movff	?_fabs+1,i2___ftge@ff1+1
 25747  01365C  C029  F02C         	movff	?_fabs+2,i2___ftge@ff1+2
 25748  013660  0EC3               	movlw	195
 25749  013662  6E2D               	movwf	i2___ftge@ff2,c
 25750  013664  0E35               	movlw	53
 25751  013666  6E2E               	movwf	i2___ftge@ff2+1,c
 25752  013668  0E3F               	movlw	63
 25753  01366A  6E2F               	movwf	i2___ftge@ff2+2,c
 25754  01366C  ECAD  F0AA         	call	i2___ftge	;wreg free
 25755  013670  B0D8               	btfsc	status,0,c
 25756  013672  D023               	goto	i2l1429
 25757  013674  C079  F015         	movff	asin@x,i2___ftdiv@f1
 25758  013678  C07A  F016         	movff	asin@x+1,i2___ftdiv@f1+1
 25759  01367C  C07B  F017         	movff	asin@x+2,i2___ftdiv@f1+2
 25760  013680  C088  F018         	movff	asin@y,i2___ftdiv@f2
 25761  013684  C089  F019         	movff	asin@y+1,i2___ftdiv@f2+1
 25762  013688  C08A  F01A         	movff	asin@y+2,i2___ftdiv@f2+2
 25763  01368C  ECA6  F0A6         	call	i2___ftdiv	;wreg free
 25764  013690  C015  F08B         	movff	?i2___ftdiv,_asin$3525
 25765  013694  C016  F08C         	movff	?i2___ftdiv+1,_asin$3525+1
 25766  013698  C017  F08D         	movff	?i2___ftdiv+2,_asin$3525+2
 25767  01369C  C08B  F058         	movff	_asin$3525,atan@f
 25768  0136A0  C08C  F059         	movff	_asin$3525+1,atan@f+1
 25769  0136A4  C08D  F05A         	movff	_asin$3525+2,atan@f+2
 25770  0136A8  EC06  F09E         	call	_atan	;wreg free
 25771  0136AC  C058  F079         	movff	?_atan,?_asin
 25772  0136B0  C059  F07A         	movff	?_atan+1,?_asin+1
 25773  0136B4  C05A  F07B         	movff	?_atan+2,?_asin+2
 25774  0136B8  0012               	return	
 25775  0136BA                     i2l1429:
 25776  0136BA  0100               	movlb	0	; () banked
 25777  0136BC  AF7B               	btfss	(asin@x+2)& (0+255),7,b
 25778  0136BE  D055               	goto	i2l1430
 25779                           
 25780                           ; BSR set to: 0
 25781  0136C0  C079  F018         	movff	asin@x,i2___ftdiv@f2
 25782  0136C4  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 25783  0136C8  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 25784  0136CC  C088  F024         	movff	asin@y,i2___ftneg@f1
 25785  0136D0  C089  F025         	movff	asin@y+1,i2___ftneg@f1+1
 25786  0136D4  C08A  F026         	movff	asin@y+2,i2___ftneg@f1+2
 25787  0136D8  ECD2  F0B2         	call	i2___ftneg	;wreg free
 25788  0136DC  C024  F015         	movff	?i2___ftneg,i2___ftdiv@f1
 25789  0136E0  C025  F016         	movff	?i2___ftneg+1,i2___ftdiv@f1+1
 25790  0136E4  C026  F017         	movff	?i2___ftneg+2,i2___ftdiv@f1+2
 25791  0136E8  ECA6  F0A6         	call	i2___ftdiv	;wreg free
 25792  0136EC  C015  F08B         	movff	?i2___ftdiv,_asin$3525
 25793  0136F0  C016  F08C         	movff	?i2___ftdiv+1,_asin$3525+1
 25794  0136F4  C017  F08D         	movff	?i2___ftdiv+2,_asin$3525+2
 25795  0136F8  C08B  F058         	movff	_asin$3525,atan@f
 25796  0136FC  C08C  F059         	movff	_asin$3525+1,atan@f+1
 25797  013700  C08D  F05A         	movff	_asin$3525+2,atan@f+2
 25798  013704  EC06  F09E         	call	_atan	;wreg free
 25799  013708  C058  F085         	movff	?_atan,_asin$3526
 25800  01370C  C059  F086         	movff	?_atan+1,_asin$3526+1
 25801  013710  C05A  F087         	movff	?_atan+2,_asin$3526+2
 25802  013714  0E10               	movlw	16
 25803  013716  6E43               	movwf	i2___ftadd@f2,c
 25804  013718  0EC9               	movlw	201
 25805  01371A  6E44               	movwf	i2___ftadd@f2+1,c
 25806  01371C  0E3F               	movlw	63
 25807  01371E  6E45               	movwf	i2___ftadd@f2+2,c
 25808  013720  C085  F024         	movff	_asin$3526,i2___ftneg@f1
 25809  013724  C086  F025         	movff	_asin$3526+1,i2___ftneg@f1+1
 25810  013728  C087  F026         	movff	_asin$3526+2,i2___ftneg@f1+2
 25811  01372C  ECD2  F0B2         	call	i2___ftneg	;wreg free
 25812  013730  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 25813  013734  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 25814  013738  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 25815  01373C  ECBE  F09F         	call	i2___ftadd	;wreg free
 25816  013740  C040  F082         	movff	?i2___ftadd,_asin$3527
 25817  013744  C041  F083         	movff	?i2___ftadd+1,_asin$3527+1
 25818  013748  C042  F084         	movff	?i2___ftadd+2,_asin$3527+2
 25819  01374C  C082  F024         	movff	_asin$3527,i2___ftneg@f1
 25820  013750  C083  F025         	movff	_asin$3527+1,i2___ftneg@f1+1
 25821  013754  C084  F026         	movff	_asin$3527+2,i2___ftneg@f1+2
 25822  013758  ECD2  F0B2         	call	i2___ftneg	;wreg free
 25823  01375C  C024  F079         	movff	?i2___ftneg,?_asin
 25824  013760  C025  F07A         	movff	?i2___ftneg+1,?_asin+1
 25825  013764  C026  F07B         	movff	?i2___ftneg+2,?_asin+2
 25826  013768  0012               	return	
 25827  01376A                     i2l1430:
 25828  01376A  C079  F018         	movff	asin@x,i2___ftdiv@f2
 25829  01376E  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 25830  013772  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 25831  013776  C088  F015         	movff	asin@y,i2___ftdiv@f1
 25832  01377A  C089  F016         	movff	asin@y+1,i2___ftdiv@f1+1
 25833  01377E  C08A  F017         	movff	asin@y+2,i2___ftdiv@f1+2
 25834  013782  ECA6  F0A6         	call	i2___ftdiv	;wreg free
 25835  013786  C015  F08B         	movff	?i2___ftdiv,_asin$3525
 25836  01378A  C016  F08C         	movff	?i2___ftdiv+1,_asin$3525+1
 25837  01378E  C017  F08D         	movff	?i2___ftdiv+2,_asin$3525+2
 25838  013792  C08B  F058         	movff	_asin$3525,atan@f
 25839  013796  C08C  F059         	movff	_asin$3525+1,atan@f+1
 25840  01379A  C08D  F05A         	movff	_asin$3525+2,atan@f+2
 25841  01379E  EC06  F09E         	call	_atan	;wreg free
 25842  0137A2  C058  F085         	movff	?_atan,_asin$3526
 25843  0137A6  C059  F086         	movff	?_atan+1,_asin$3526+1
 25844  0137AA  C05A  F087         	movff	?_atan+2,_asin$3526+2
 25845  0137AE  C085  F024         	movff	_asin$3526,i2___ftneg@f1
 25846  0137B2  C086  F025         	movff	_asin$3526+1,i2___ftneg@f1+1
 25847  0137B6  C087  F026         	movff	_asin$3526+2,i2___ftneg@f1+2
 25848  0137BA  ECD2  F0B2         	call	i2___ftneg	;wreg free
 25849  0137BE  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 25850  0137C2  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 25851  0137C6  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 25852  0137CA  0E10               	movlw	16
 25853  0137CC  6E43               	movwf	i2___ftadd@f2,c
 25854  0137CE  0EC9               	movlw	201
 25855  0137D0  6E44               	movwf	i2___ftadd@f2+1,c
 25856  0137D2  0E3F               	movlw	63
 25857  0137D4  6E45               	movwf	i2___ftadd@f2+2,c
 25858  0137D6  ECBE  F09F         	call	i2___ftadd	;wreg free
 25859  0137DA  C040  F079         	movff	?i2___ftadd,?_asin
 25860  0137DE  C041  F07A         	movff	?i2___ftadd+1,?_asin+1
 25861  0137E2  C042  F07B         	movff	?i2___ftadd+2,?_asin+2
 25862  0137E6  0012               	return	
 25863  0137E8                     __end_of_asin:
 25864                           	opt stack 0
 25865                           tosu	equ	0xFFF
 25866                           tosh	equ	0xFFE
 25867                           tosl	equ	0xFFD
 25868                           pclatu	equ	0xFFB
 25869                           pclath	equ	0xFFA
 25870                           tblptru	equ	0xFF8
 25871                           tblptrh	equ	0xFF7
 25872                           tblptrl	equ	0xFF6
 25873                           tablat	equ	0xFF5
 25874                           prodh	equ	0xFF4
 25875                           prodl	equ	0xFF3
 25876                           intcon	equ	0xFF2
 25877                           indf0	equ	0xFEF
 25878                           postinc0	equ	0xFEE
 25879                           fsr0h	equ	0xFEA
 25880                           fsr0l	equ	0xFE9
 25881                           wreg	equ	0xFE8
 25882                           indf1	equ	0xFE7
 25883                           postdec1	equ	0xFE5
 25884                           fsr1h	equ	0xFE2
 25885                           fsr1l	equ	0xFE1
 25886                           bsr	equ	0xFE0
 25887                           indf2	equ	0xFDF
 25888                           postinc2	equ	0xFDE
 25889                           postdec2	equ	0xFDD
 25890                           fsr2h	equ	0xFDA
 25891                           fsr2l	equ	0xFD9
 25892                           status	equ	0xFD8
 25893                           
 25894 ;; *************** function _sqrt *****************
 25895 ;; Defined at:
 25896 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 25897 ;; Parameters:    Size  Location     Type
 25898 ;;  a               3    6[BANK0 ] void 
 25899 ;; Auto vars:     Size  Location     Type
 25900 ;;  x               3   22[BANK0 ] void 
 25901 ;;  q               3   19[BANK0 ] void 
 25902 ;;  z               3   16[BANK0 ] void 
 25903 ;;  og              3   12[BANK0 ] void 
 25904 ;;  i               1   15[BANK0 ] unsigned char 
 25905 ;; Return value:  Size  Location     Type
 25906 ;;                  3    6[BANK0 ] unsigned char 
 25907 ;; Registers used:
 25908 ;;		wreg, status,2, status,0, cstack
 25909 ;; Tracked objects:
 25910 ;;		On entry : 0/0
 25911 ;;		On exit  : 0/0
 25912 ;;		Unchanged: 0/0
 25913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25914 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25915 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25916 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25917 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25918 ;;Total ram usage:       19 bytes
 25919 ;; Hardware stack levels used:    1
 25920 ;; Hardware stack levels required when called:    3
 25921 ;; This function calls:
 25922 ;;		i2___ftge
 25923 ;;		i2___ftmul
 25924 ;;		i2___ftsub
 25925 ;; This function is called by:
 25926 ;;		_peakToRMS
 25927 ;;		_asin
 25928 ;; This function uses a non-reentrant model
 25929 ;;
 25930                           
 25931                           	psect	text97
 25932  014128                     __ptext97:
 25933                           	opt stack 0
 25934  014128                     _sqrt:
 25935                           	opt stack 11
 25936                           
 25937                           ;incstack = 0
 25938  014128  0E00               	movlw	0
 25939  01412A  6E2A               	movwf	i2___ftge@ff1,c
 25940  01412C  0E00               	movlw	0
 25941  01412E  6E2B               	movwf	i2___ftge@ff1+1,c
 25942  014130  0E00               	movlw	0
 25943  014132  6E2C               	movwf	i2___ftge@ff1+2,c
 25944  014134  C066  F02D         	movff	sqrt@a,i2___ftge@ff2
 25945  014138  C067  F02E         	movff	sqrt@a+1,i2___ftge@ff2+1
 25946  01413C  C068  F02F         	movff	sqrt@a+2,i2___ftge@ff2+2
 25947  014140  ECAD  F0AA         	call	i2___ftge	;wreg free
 25948  014144  A0D8               	btfss	status,0,c
 25949  014146  D00E               	goto	i2l1955
 25950  014148  0100               	movlb	0	; () banked
 25951  01414A  AF68               	btfss	(sqrt@a+2)& (0+255),7,b
 25952  01414C  D004               	goto	i2l1956
 25953                           
 25954                           ; BSR set to: 0
 25955  01414E  0E00               	movlw	0
 25956  014150  6FE7               	movwf	(_errno+1)& (0+255),b
 25957  014152  0E21               	movlw	33
 25958  014154  6FE6               	movwf	_errno& (0+255),b
 25959  014156                     i2l1956:
 25960                           
 25961                           ; BSR set to: 0
 25962  014156  0E00               	movlw	0
 25963  014158  6F66               	movwf	?_sqrt& (0+255),b
 25964  01415A  0E00               	movlw	0
 25965  01415C  6F67               	movwf	(?_sqrt+1)& (0+255),b
 25966  01415E  0E00               	movlw	0
 25967  014160  6F68               	movwf	(?_sqrt+2)& (0+255),b
 25968                           
 25969                           ; BSR set to: 0
 25970  014162  0012               	return	
 25971  014164                     i2l1955:
 25972  014164  C066  F070         	movff	sqrt@a,sqrt@z
 25973  014168  C067  F071         	movff	sqrt@a+1,sqrt@z+1
 25974  01416C  C068  F072         	movff	sqrt@a+2,sqrt@z+2
 25975  014170  C066  F069         	movff	sqrt@a,??_sqrt
 25976  014174  C067  F06A         	movff	sqrt@a+1,??_sqrt+1
 25977  014178  C068  F06B         	movff	sqrt@a+2,??_sqrt+2
 25978  01417C  0100               	movlb	0	; () banked
 25979  01417E  1F69               	comf	??_sqrt& (0+255),f,b
 25980  014180  1F6A               	comf	(??_sqrt+1)& (0+255),f,b
 25981  014182  1F6B               	comf	(??_sqrt+2)& (0+255),f,b
 25982  014184  2B69               	incf	??_sqrt& (0+255),f,b
 25983  014186  0E00               	movlw	0
 25984  014188  236A               	addwfc	(??_sqrt+1)& (0+255),f,b
 25985  01418A  236B               	addwfc	(??_sqrt+2)& (0+255),f,b
 25986  01418C  0EC8               	movlw	200
 25987  01418E  2569               	addwf	??_sqrt& (0+255),w,b
 25988  014190  6F76               	movwf	sqrt@x& (0+255),b
 25989  014192  0E6E               	movlw	110
 25990  014194  216A               	addwfc	(??_sqrt+1)& (0+255),w,b
 25991  014196  6F77               	movwf	(sqrt@x+1)& (0+255),b
 25992  014198  0EBE               	movlw	190
 25993  01419A  216B               	addwfc	(??_sqrt+2)& (0+255),w,b
 25994  01419C  6F78               	movwf	(sqrt@x+2)& (0+255),b
 25995                           
 25996                           ; BSR set to: 0
 25997  01419E  90D8               	bcf	status,0,c
 25998  0141A0  3378               	rrcf	(sqrt@x+2)& (0+255),f,b
 25999  0141A2  3377               	rrcf	(sqrt@x+1)& (0+255),f,b
 26000  0141A4  3376               	rrcf	sqrt@x& (0+255),f,b
 26001                           
 26002                           ; BSR set to: 0
 26003  0141A6  0E00               	movlw	0
 26004  0141A8  5F70               	subwf	sqrt@z& (0+255),f,b
 26005  0141AA  0E80               	movlw	128
 26006  0141AC  5B71               	subwfb	(sqrt@z+1)& (0+255),f,b
 26007  0141AE  0E00               	movlw	0
 26008  0141B0  5B72               	subwfb	(sqrt@z+2)& (0+255),f,b
 26009                           
 26010                           ; BSR set to: 0
 26011  0141B2  0E04               	movlw	4
 26012  0141B4  6F6F               	movwf	sqrt@i& (0+255),b
 26013  0141B6                     
 26014                           ; BSR set to: 0
 26015                           
 26016                           ; BSR set to: 0
 26017  0141B6  C076  F06C         	movff	sqrt@x,sqrt@og
 26018  0141BA  C077  F06D         	movff	sqrt@x+1,sqrt@og+1
 26019  0141BE  C078  F06E         	movff	sqrt@x+2,sqrt@og+2
 26020                           
 26021                           ; BSR set to: 0
 26022  0141C2  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 26023  0141C6  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 26024  0141CA  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 26025  0141CE  C070  F02A         	movff	sqrt@z,i2___ftmul@f2
 26026  0141D2  C071  F02B         	movff	sqrt@z+1,i2___ftmul@f2+1
 26027  0141D6  C072  F02C         	movff	sqrt@z+2,i2___ftmul@f2+2
 26028  0141DA  ECB8  F0A5         	call	i2___ftmul	;wreg free
 26029  0141DE  C027  F073         	movff	?i2___ftmul,sqrt@q
 26030  0141E2  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 26031  0141E6  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 26032  0141EA  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 26033  0141EE  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 26034  0141F2  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 26035  0141F6  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 26036  0141FA  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 26037  0141FE  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 26038  014202  ECB8  F0A5         	call	i2___ftmul	;wreg free
 26039  014206  C027  F073         	movff	?i2___ftmul,sqrt@q
 26040  01420A  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 26041  01420E  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 26042  014212  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 26043  014216  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 26044  01421A  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 26045  01421E  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 26046  014222  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 26047  014226  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 26048  01422A  ECB8  F0A5         	call	i2___ftmul	;wreg free
 26049  01422E  C027  F073         	movff	?i2___ftmul,sqrt@q
 26050  014232  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 26051  014236  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 26052  01423A  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 26053  01423E  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 26054  014242  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 26055  014246  0E00               	movlw	0
 26056  014248  6E2A               	movwf	i2___ftmul@f2,c
 26057  01424A  0EC0               	movlw	192
 26058  01424C  6E2B               	movwf	i2___ftmul@f2+1,c
 26059  01424E  0E3F               	movlw	63
 26060  014250  6E2C               	movwf	i2___ftmul@f2+2,c
 26061  014252  ECB8  F0A5         	call	i2___ftmul	;wreg free
 26062  014256  C027  F076         	movff	?i2___ftmul,sqrt@x
 26063  01425A  C028  F077         	movff	?i2___ftmul+1,sqrt@x+1
 26064  01425E  C029  F078         	movff	?i2___ftmul+2,sqrt@x+2
 26065  014262  C076  F060         	movff	sqrt@x,i2___ftsub@f1
 26066  014266  C077  F061         	movff	sqrt@x+1,i2___ftsub@f1+1
 26067  01426A  C078  F062         	movff	sqrt@x+2,i2___ftsub@f1+2
 26068  01426E  C073  F063         	movff	sqrt@q,i2___ftsub@f2
 26069  014272  C074  F064         	movff	sqrt@q+1,i2___ftsub@f2+1
 26070  014276  C075  F065         	movff	sqrt@q+2,i2___ftsub@f2+2
 26071  01427A  EC34  F0B1         	call	i2___ftsub	;wreg free
 26072  01427E  C060  F076         	movff	?i2___ftsub,sqrt@x
 26073  014282  C061  F077         	movff	?i2___ftsub+1,sqrt@x+1
 26074  014286  C062  F078         	movff	?i2___ftsub+2,sqrt@x+2
 26075  01428A  0100               	movlb	0	; () banked
 26076  01428C  2F6F               	decfsz	sqrt@i& (0+255),f,b
 26077  01428E  D793               	goto	i2l1958
 26078                           
 26079                           ; BSR set to: 0
 26080                           
 26081                           ; BSR set to: 0
 26082  014290  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 26083  014294  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 26084  014298  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 26085  01429C  C066  F02A         	movff	sqrt@a,i2___ftmul@f2
 26086  0142A0  C067  F02B         	movff	sqrt@a+1,i2___ftmul@f2+1
 26087  0142A4  C068  F02C         	movff	sqrt@a+2,i2___ftmul@f2+2
 26088  0142A8  ECB8  F0A5         	call	i2___ftmul	;wreg free
 26089  0142AC  C027  F066         	movff	?i2___ftmul,?_sqrt
 26090  0142B0  C028  F067         	movff	?i2___ftmul+1,?_sqrt+1
 26091  0142B4  C029  F068         	movff	?i2___ftmul+2,?_sqrt+2
 26092  0142B8  0012               	return	
 26093  0142BA                     __end_of_sqrt:
 26094                           	opt stack 0
 26095                           tosu	equ	0xFFF
 26096                           tosh	equ	0xFFE
 26097                           tosl	equ	0xFFD
 26098                           pclatu	equ	0xFFB
 26099                           pclath	equ	0xFFA
 26100                           tblptru	equ	0xFF8
 26101                           tblptrh	equ	0xFF7
 26102                           tblptrl	equ	0xFF6
 26103                           tablat	equ	0xFF5
 26104                           prodh	equ	0xFF4
 26105                           prodl	equ	0xFF3
 26106                           intcon	equ	0xFF2
 26107                           indf0	equ	0xFEF
 26108                           postinc0	equ	0xFEE
 26109                           fsr0h	equ	0xFEA
 26110                           fsr0l	equ	0xFE9
 26111                           wreg	equ	0xFE8
 26112                           indf1	equ	0xFE7
 26113                           postdec1	equ	0xFE5
 26114                           fsr1h	equ	0xFE2
 26115                           fsr1l	equ	0xFE1
 26116                           bsr	equ	0xFE0
 26117                           indf2	equ	0xFDF
 26118                           postinc2	equ	0xFDE
 26119                           postdec2	equ	0xFDD
 26120                           fsr2h	equ	0xFDA
 26121                           fsr2l	equ	0xFD9
 26122                           status	equ	0xFD8
 26123                           
 26124 ;; *************** function _atan *****************
 26125 ;; Defined at:
 26126 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 26127 ;; Parameters:    Size  Location     Type
 26128 ;;  f               3   87[COMRAM] unsigned char 
 26129 ;; Auto vars:     Size  Location     Type
 26130 ;;  val             3   10[BANK0 ] unsigned char 
 26131 ;;  val_squared     3    7[BANK0 ] unsigned char 
 26132 ;;  x               3    3[BANK0 ] unsigned char 
 26133 ;;  y               3    0[BANK0 ] unsigned char 
 26134 ;;  recip           1    6[BANK0 ] unsigned char 
 26135 ;; Return value:  Size  Location     Type
 26136 ;;                  3   87[COMRAM] unsigned char 
 26137 ;; Registers used:
 26138 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26139 ;; Tracked objects:
 26140 ;;		On entry : 0/0
 26141 ;;		On exit  : 0/0
 26142 ;;		Unchanged: 0/0
 26143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26144 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26145 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26147 ;;      Totals:         3      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26148 ;;Total ram usage:       16 bytes
 26149 ;; Hardware stack levels used:    1
 26150 ;; Hardware stack levels required when called:    3
 26151 ;; This function calls:
 26152 ;;		_eval_poly
 26153 ;;		_fabs
 26154 ;;		i2___ftadd
 26155 ;;		i2___ftdiv
 26156 ;;		i2___ftge
 26157 ;;		i2___ftmul
 26158 ;;		i2___ftneg
 26159 ;; This function is called by:
 26160 ;;		_asin
 26161 ;; This function uses a non-reentrant model
 26162 ;;
 26163                           
 26164                           	psect	text98
 26165  013C0C                     __ptext98:
 26166                           	opt stack 0
 26167  013C0C                     _atan:
 26168                           	opt stack 9
 26169                           
 26170                           ;incstack = 0
 26171  013C0C  C058  F027         	movff	atan@f,fabs@d
 26172  013C10  C059  F028         	movff	atan@f+1,fabs@d+1
 26173  013C14  C05A  F029         	movff	atan@f+2,fabs@d+2
 26174  013C18  EC30  F0B2         	call	_fabs	;wreg free
 26175  013C1C  C027  F06A         	movff	?_fabs,atan@val
 26176  013C20  C028  F06B         	movff	?_fabs+1,atan@val+1
 26177  013C24  C029  F06C         	movff	?_fabs+2,atan@val+2
 26178  013C28  0100               	movlb	0	; () banked
 26179  013C2A  516A               	movf	atan@val& (0+255),w,b
 26180  013C2C  116B               	iorwf	(atan@val+1)& (0+255),w,b
 26181  013C2E  116C               	iorwf	(atan@val+2)& (0+255),w,b
 26182  013C30  A4D8               	btfss	status,2,c
 26183  013C32  D007               	goto	i2l1446
 26184                           
 26185                           ; BSR set to: 0
 26186  013C34  0E00               	movlw	0
 26187  013C36  6E58               	movwf	?_atan,c
 26188  013C38  0E00               	movlw	0
 26189  013C3A  6E59               	movwf	?_atan+1,c
 26190  013C3C  0E00               	movlw	0
 26191  013C3E  6E5A               	movwf	?_atan+2,c
 26192                           
 26193                           ; BSR set to: 0
 26194  013C40  0012               	return	
 26195  013C42                     i2l1446:
 26196                           
 26197                           ; BSR set to: 0
 26198                           
 26199                           ; BSR set to: 0
 26200  013C42  0E00               	movlw	0
 26201  013C44  6E2A               	movwf	i2___ftge@ff1,c
 26202  013C46  0E80               	movlw	128
 26203  013C48  6E2B               	movwf	i2___ftge@ff1+1,c
 26204  013C4A  0E3F               	movlw	63
 26205  013C4C  6E2C               	movwf	i2___ftge@ff1+2,c
 26206  013C4E  C06A  F02D         	movff	atan@val,i2___ftge@ff2
 26207  013C52  C06B  F02E         	movff	atan@val+1,i2___ftge@ff2+1
 26208  013C56  C06C  F02F         	movff	atan@val+2,i2___ftge@ff2+2
 26209  013C5A  ECAD  F0AA         	call	i2___ftge	;wreg free
 26210  013C5E  B0D8               	btfsc	status,0,c
 26211  013C60  D002               	goto	i2u1570_40
 26212  013C62  0E01               	movlw	1
 26213  013C64  D001               	goto	i2u1571_40
 26214  013C66                     i2u1570_40:
 26215  013C66  0E00               	movlw	0
 26216  013C68                     i2u1571_40:
 26217  013C68  0100               	movlb	0	; () banked
 26218  013C6A  6F66               	movwf	atan@recip& (0+255),b
 26219  013C6C  5166               	movf	atan@recip& (0+255),w,b
 26220  013C6E  B4D8               	btfsc	status,2,c
 26221  013C70  D014               	goto	i2l1448
 26222                           
 26223                           ; BSR set to: 0
 26224  013C72  0E00               	movlw	0
 26225  013C74  6E15               	movwf	i2___ftdiv@f1,c
 26226  013C76  0E80               	movlw	128
 26227  013C78  6E16               	movwf	i2___ftdiv@f1+1,c
 26228  013C7A  0E3F               	movlw	63
 26229  013C7C  6E17               	movwf	i2___ftdiv@f1+2,c
 26230  013C7E  C06A  F018         	movff	atan@val,i2___ftdiv@f2
 26231  013C82  C06B  F019         	movff	atan@val+1,i2___ftdiv@f2+1
 26232  013C86  C06C  F01A         	movff	atan@val+2,i2___ftdiv@f2+2
 26233  013C8A  ECA6  F0A6         	call	i2___ftdiv	;wreg free
 26234  013C8E  C015  F06A         	movff	?i2___ftdiv,atan@val
 26235  013C92  C016  F06B         	movff	?i2___ftdiv+1,atan@val+1
 26236  013C96  C017  F06C         	movff	?i2___ftdiv+2,atan@val+2
 26237  013C9A                     i2l1448:
 26238  013C9A  C06A  F027         	movff	atan@val,i2___ftmul@f1
 26239  013C9E  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 26240  013CA2  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 26241  013CA6  C06A  F02A         	movff	atan@val,i2___ftmul@f2
 26242  013CAA  C06B  F02B         	movff	atan@val+1,i2___ftmul@f2+1
 26243  013CAE  C06C  F02C         	movff	atan@val+2,i2___ftmul@f2+2
 26244  013CB2  ECB8  F0A5         	call	i2___ftmul	;wreg free
 26245  013CB6  C027  F067         	movff	?i2___ftmul,atan@val_squared
 26246  013CBA  C028  F068         	movff	?i2___ftmul+1,atan@val_squared+1
 26247  013CBE  C029  F069         	movff	?i2___ftmul+2,atan@val_squared+2
 26248  013CC2  C067  F04C         	movff	atan@val_squared,eval_poly@x
 26249  013CC6  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 26250  013CCA  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 26251  013CCE  0E6C               	movlw	low atan@coeff_b
 26252  013CD0  6E4F               	movwf	eval_poly@d,c
 26253  013CD2  0EF1               	movlw	high atan@coeff_b
 26254  013CD4  6E50               	movwf	eval_poly@d+1,c
 26255  013CD6  0E00               	movlw	0
 26256  013CD8  6E52               	movwf	eval_poly@n+1,c
 26257  013CDA  0E04               	movlw	4
 26258  013CDC  6E51               	movwf	eval_poly@n,c
 26259  013CDE  EC88  F0A7         	call	_eval_poly	;wreg free
 26260  013CE2  C04C  F060         	movff	?_eval_poly,atan@y
 26261  013CE6  C04D  F061         	movff	?_eval_poly+1,atan@y+1
 26262  013CEA  C04E  F062         	movff	?_eval_poly+2,atan@y+2
 26263  013CEE  C067  F04C         	movff	atan@val_squared,eval_poly@x
 26264  013CF2  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 26265  013CF6  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 26266  013CFA  0E4B               	movlw	low atan@coeff_a
 26267  013CFC  6E4F               	movwf	eval_poly@d,c
 26268  013CFE  0EF1               	movlw	high atan@coeff_a
 26269  013D00  6E50               	movwf	eval_poly@d+1,c
 26270  013D02  0E00               	movlw	0
 26271  013D04  6E52               	movwf	eval_poly@n+1,c
 26272  013D06  0E05               	movlw	5
 26273  013D08  6E51               	movwf	eval_poly@n,c
 26274  013D0A  EC88  F0A7         	call	_eval_poly	;wreg free
 26275  013D0E  C04C  F063         	movff	?_eval_poly,atan@x
 26276  013D12  C04D  F064         	movff	?_eval_poly+1,atan@x+1
 26277  013D16  C04E  F065         	movff	?_eval_poly+2,atan@x+2
 26278  013D1A  C06A  F027         	movff	atan@val,i2___ftmul@f1
 26279  013D1E  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 26280  013D22  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 26281  013D26  C060  F018         	movff	atan@y,i2___ftdiv@f2
 26282  013D2A  C061  F019         	movff	atan@y+1,i2___ftdiv@f2+1
 26283  013D2E  C062  F01A         	movff	atan@y+2,i2___ftdiv@f2+2
 26284  013D32  C063  F015         	movff	atan@x,i2___ftdiv@f1
 26285  013D36  C064  F016         	movff	atan@x+1,i2___ftdiv@f1+1
 26286  013D3A  C065  F017         	movff	atan@x+2,i2___ftdiv@f1+2
 26287  013D3E  ECA6  F0A6         	call	i2___ftdiv	;wreg free
 26288  013D42  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 26289  013D46  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 26290  013D4A  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 26291  013D4E  ECB8  F0A5         	call	i2___ftmul	;wreg free
 26292  013D52  C027  F06A         	movff	?i2___ftmul,atan@val
 26293  013D56  C028  F06B         	movff	?i2___ftmul+1,atan@val+1
 26294  013D5A  C029  F06C         	movff	?i2___ftmul+2,atan@val+2
 26295  013D5E  0100               	movlb	0	; () banked
 26296  013D60  5166               	movf	atan@recip& (0+255),w,b
 26297  013D62  B4D8               	btfsc	status,2,c
 26298  013D64  D01C               	goto	i2l1449
 26299                           
 26300                           ; BSR set to: 0
 26301  013D66  C06A  F024         	movff	atan@val,i2___ftneg@f1
 26302  013D6A  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 26303  013D6E  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 26304  013D72  ECD2  F0B2         	call	i2___ftneg	;wreg free
 26305  013D76  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 26306  013D7A  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 26307  013D7E  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 26308  013D82  0E10               	movlw	16
 26309  013D84  6E43               	movwf	i2___ftadd@f2,c
 26310  013D86  0EC9               	movlw	201
 26311  013D88  6E44               	movwf	i2___ftadd@f2+1,c
 26312  013D8A  0E3F               	movlw	63
 26313  013D8C  6E45               	movwf	i2___ftadd@f2+2,c
 26314  013D8E  ECBE  F09F         	call	i2___ftadd	;wreg free
 26315  013D92  C040  F06A         	movff	?i2___ftadd,atan@val
 26316  013D96  C041  F06B         	movff	?i2___ftadd+1,atan@val+1
 26317  013D9A  C042  F06C         	movff	?i2___ftadd+2,atan@val+2
 26318  013D9E                     i2l1449:
 26319  013D9E  BE5A               	btfsc	atan@f+2,7,c
 26320  013DA0  D007               	goto	i2l1451
 26321  013DA2  C06A  F058         	movff	atan@val,?_atan
 26322  013DA6  C06B  F059         	movff	atan@val+1,?_atan+1
 26323  013DAA  C06C  F05A         	movff	atan@val+2,?_atan+2
 26324  013DAE  0012               	return	
 26325  013DB0                     i2l1451:
 26326  013DB0  C06A  F024         	movff	atan@val,i2___ftneg@f1
 26327  013DB4  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 26328  013DB8  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 26329  013DBC  ECD2  F0B2         	call	i2___ftneg	;wreg free
 26330  013DC0  C024  F058         	movff	?i2___ftneg,?_atan
 26331  013DC4  C025  F059         	movff	?i2___ftneg+1,?_atan+1
 26332  013DC8  C026  F05A         	movff	?i2___ftneg+2,?_atan+2
 26333  013DCC  0012               	return	
 26334  013DCE                     __end_of_atan:
 26335                           	opt stack 0
 26336                           tosu	equ	0xFFF
 26337                           tosh	equ	0xFFE
 26338                           tosl	equ	0xFFD
 26339                           pclatu	equ	0xFFB
 26340                           pclath	equ	0xFFA
 26341                           tblptru	equ	0xFF8
 26342                           tblptrh	equ	0xFF7
 26343                           tblptrl	equ	0xFF6
 26344                           tablat	equ	0xFF5
 26345                           prodh	equ	0xFF4
 26346                           prodl	equ	0xFF3
 26347                           intcon	equ	0xFF2
 26348                           indf0	equ	0xFEF
 26349                           postinc0	equ	0xFEE
 26350                           fsr0h	equ	0xFEA
 26351                           fsr0l	equ	0xFE9
 26352                           wreg	equ	0xFE8
 26353                           indf1	equ	0xFE7
 26354                           postdec1	equ	0xFE5
 26355                           fsr1h	equ	0xFE2
 26356                           fsr1l	equ	0xFE1
 26357                           bsr	equ	0xFE0
 26358                           indf2	equ	0xFDF
 26359                           postinc2	equ	0xFDE
 26360                           postdec2	equ	0xFDD
 26361                           fsr2h	equ	0xFDA
 26362                           fsr2l	equ	0xFD9
 26363                           status	equ	0xFD8
 26364                           
 26365 ;; *************** function _fabs *****************
 26366 ;; Defined at:
 26367 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 26368 ;; Parameters:    Size  Location     Type
 26369 ;;  d               3   38[COMRAM] unsigned char 
 26370 ;; Auto vars:     Size  Location     Type
 26371 ;;		None
 26372 ;; Return value:  Size  Location     Type
 26373 ;;                  3   38[COMRAM] unsigned char 
 26374 ;; Registers used:
 26375 ;;		wreg, status,2, status,0, cstack
 26376 ;; Tracked objects:
 26377 ;;		On entry : 0/0
 26378 ;;		On exit  : 0/0
 26379 ;;		Unchanged: 0/0
 26380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26381 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26384 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26385 ;;Total ram usage:        3 bytes
 26386 ;; Hardware stack levels used:    1
 26387 ;; Hardware stack levels required when called:    1
 26388 ;; This function calls:
 26389 ;;		i2___ftneg
 26390 ;; This function is called by:
 26391 ;;		_asin
 26392 ;;		_atan
 26393 ;; This function uses a non-reentrant model
 26394 ;;
 26395                           
 26396                           	psect	text99
 26397  016460                     __ptext99:
 26398                           	opt stack 0
 26399  016460                     _fabs:
 26400                           	opt stack 11
 26401                           
 26402                           ;incstack = 0
 26403  016460  AE29               	btfss	fabs@d+2,7,c
 26404  016462  D00F               	goto	i2l1543
 26405  016464  C027  F024         	movff	fabs@d,i2___ftneg@f1
 26406  016468  C028  F025         	movff	fabs@d+1,i2___ftneg@f1+1
 26407  01646C  C029  F026         	movff	fabs@d+2,i2___ftneg@f1+2
 26408  016470  ECD2  F0B2         	call	i2___ftneg	;wreg free
 26409  016474  C024  F027         	movff	?i2___ftneg,?_fabs
 26410  016478  C025  F028         	movff	?i2___ftneg+1,?_fabs+1
 26411  01647C  C026  F029         	movff	?i2___ftneg+2,?_fabs+2
 26412  016480  0012               	return	
 26413  016482                     i2l1543:
 26414  016482  C027  F027         	movff	fabs@d,?_fabs
 26415  016486  C028  F028         	movff	fabs@d+1,?_fabs+1
 26416  01648A  C029  F029         	movff	fabs@d+2,?_fabs+2
 26417  01648E  0012               	return		;funcret
 26418  016490                     __end_of_fabs:
 26419                           	opt stack 0
 26420                           tosu	equ	0xFFF
 26421                           tosh	equ	0xFFE
 26422                           tosl	equ	0xFFD
 26423                           pclatu	equ	0xFFB
 26424                           pclath	equ	0xFFA
 26425                           tblptru	equ	0xFF8
 26426                           tblptrh	equ	0xFF7
 26427                           tblptrl	equ	0xFF6
 26428                           tablat	equ	0xFF5
 26429                           prodh	equ	0xFF4
 26430                           prodl	equ	0xFF3
 26431                           intcon	equ	0xFF2
 26432                           indf0	equ	0xFEF
 26433                           postinc0	equ	0xFEE
 26434                           fsr0h	equ	0xFEA
 26435                           fsr0l	equ	0xFE9
 26436                           wreg	equ	0xFE8
 26437                           indf1	equ	0xFE7
 26438                           postdec1	equ	0xFE5
 26439                           fsr1h	equ	0xFE2
 26440                           fsr1l	equ	0xFE1
 26441                           bsr	equ	0xFE0
 26442                           indf2	equ	0xFDF
 26443                           postinc2	equ	0xFDE
 26444                           postdec2	equ	0xFDD
 26445                           fsr2h	equ	0xFDA
 26446                           fsr2l	equ	0xFD9
 26447                           status	equ	0xFD8
 26448                           
 26449 ;; *************** function _currentMeasuredToPeak *****************
 26450 ;; Defined at:
 26451 ;;		line 107 in file "main.c"
 26452 ;; Parameters:    Size  Location     Type
 26453 ;;  Measured        3   19[BANK0 ] unsigned char 
 26454 ;;  Angle           3   22[BANK0 ] unsigned char 
 26455 ;; Auto vars:     Size  Location     Type
 26456 ;;  Peak            3   25[BANK0 ] unsigned char 
 26457 ;; Return value:  Size  Location     Type
 26458 ;;                  3   19[BANK0 ] unsigned char 
 26459 ;; Registers used:
 26460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26461 ;; Tracked objects:
 26462 ;;		On entry : 0/0
 26463 ;;		On exit  : 0/0
 26464 ;;		Unchanged: 0/0
 26465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26466 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26467 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26469 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26470 ;;Total ram usage:        9 bytes
 26471 ;; Hardware stack levels used:    1
 26472 ;; Hardware stack levels required when called:    4
 26473 ;; This function calls:
 26474 ;;		_sin
 26475 ;;		i2___ftdiv
 26476 ;; This function is called by:
 26477 ;;		_ADC_postProcessingCallback
 26478 ;; This function uses a non-reentrant model
 26479 ;;
 26480                           
 26481                           	psect	text100
 26482  015DBA                     __ptext100:
 26483                           	opt stack 0
 26484  015DBA                     _currentMeasuredToPeak:
 26485                           	opt stack 11
 26486                           
 26487                           ;main.c: 110: double Peak = 0.0;
 26488                           
 26489                           ;incstack = 0
 26490  015DBA  0E00               	movlw	0
 26491  015DBC  0100               	movlb	0	; () banked
 26492  015DBE  6F79               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 26493  015DC0  0E00               	movlw	0
 26494  015DC2  6F7A               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 26495  015DC4  0E00               	movlw	0
 26496  015DC6  6F7B               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 26497                           
 26498                           ; BSR set to: 0
 26499                           ;main.c: 113: Peak = sin(Angle);
 26500  015DC8  C076  F066         	movff	currentMeasuredToPeak@Angle,sin@f
 26501  015DCC  C077  F067         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 26502  015DD0  C078  F068         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 26503  015DD4  ECF4  F09B         	call	_sin	;wreg free
 26504  015DD8  C066  F079         	movff	?_sin,currentMeasuredToPeak@Peak
 26505  015DDC  C067  F07A         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 26506  015DE0  C068  F07B         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 26507                           
 26508                           ;main.c: 114: Peak = Measured / Peak;
 26509  015DE4  C073  F015         	movff	currentMeasuredToPeak@Measured,i2___ftdiv@f1
 26510  015DE8  C074  F016         	movff	currentMeasuredToPeak@Measured+1,i2___ftdiv@f1+1
 26511  015DEC  C075  F017         	movff	currentMeasuredToPeak@Measured+2,i2___ftdiv@f1+2
 26512  015DF0  C079  F018         	movff	currentMeasuredToPeak@Peak,i2___ftdiv@f2
 26513  015DF4  C07A  F019         	movff	currentMeasuredToPeak@Peak+1,i2___ftdiv@f2+1
 26514  015DF8  C07B  F01A         	movff	currentMeasuredToPeak@Peak+2,i2___ftdiv@f2+2
 26515  015DFC  ECA6  F0A6         	call	i2___ftdiv	;wreg free
 26516  015E00  C015  F079         	movff	?i2___ftdiv,currentMeasuredToPeak@Peak
 26517  015E04  C016  F07A         	movff	?i2___ftdiv+1,currentMeasuredToPeak@Peak+1
 26518  015E08  C017  F07B         	movff	?i2___ftdiv+2,currentMeasuredToPeak@Peak+2
 26519                           
 26520                           ;main.c: 115: return Peak;
 26521  015E0C  C079  F073         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 26522  015E10  C07A  F074         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 26523  015E14  C07B  F075         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 26524  015E18  0012               	return	
 26525  015E1A                     __end_of_currentMeasuredToPeak:
 26526                           	opt stack 0
 26527                           tosu	equ	0xFFF
 26528                           tosh	equ	0xFFE
 26529                           tosl	equ	0xFFD
 26530                           pclatu	equ	0xFFB
 26531                           pclath	equ	0xFFA
 26532                           tblptru	equ	0xFF8
 26533                           tblptrh	equ	0xFF7
 26534                           tblptrl	equ	0xFF6
 26535                           tablat	equ	0xFF5
 26536                           prodh	equ	0xFF4
 26537                           prodl	equ	0xFF3
 26538                           intcon	equ	0xFF2
 26539                           indf0	equ	0xFEF
 26540                           postinc0	equ	0xFEE
 26541                           fsr0h	equ	0xFEA
 26542                           fsr0l	equ	0xFE9
 26543                           wreg	equ	0xFE8
 26544                           indf1	equ	0xFE7
 26545                           postdec1	equ	0xFE5
 26546                           fsr1h	equ	0xFE2
 26547                           fsr1l	equ	0xFE1
 26548                           bsr	equ	0xFE0
 26549                           indf2	equ	0xFDF
 26550                           postinc2	equ	0xFDE
 26551                           postdec2	equ	0xFDD
 26552                           fsr2h	equ	0xFDA
 26553                           fsr2l	equ	0xFD9
 26554                           status	equ	0xFD8
 26555                           
 26556 ;; *************** function _sin *****************
 26557 ;; Defined at:
 26558 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 26559 ;; Parameters:    Size  Location     Type
 26560 ;;  f               3    6[BANK0 ] unsigned char 
 26561 ;; Auto vars:     Size  Location     Type
 26562 ;;  x2              3   15[BANK0 ] unsigned char 
 26563 ;;  y               3    9[BANK0 ] unsigned char 
 26564 ;;  sgn             1   18[BANK0 ] unsigned char 
 26565 ;; Return value:  Size  Location     Type
 26566 ;;                  3    6[BANK0 ] unsigned char 
 26567 ;; Registers used:
 26568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26569 ;; Tracked objects:
 26570 ;;		On entry : 0/0
 26571 ;;		On exit  : 0/0
 26572 ;;		Unchanged: 0/0
 26573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26574 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26575 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26577 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26578 ;;Total ram usage:       13 bytes
 26579 ;; Hardware stack levels used:    1
 26580 ;; Hardware stack levels required when called:    3
 26581 ;; This function calls:
 26582 ;;		_eval_poly
 26583 ;;		_floor
 26584 ;;		i2___ftadd
 26585 ;;		i2___ftdiv
 26586 ;;		i2___ftge
 26587 ;;		i2___ftmul
 26588 ;;		i2___ftneg
 26589 ;;		i2___ftsub
 26590 ;; This function is called by:
 26591 ;;		_peakToRMS
 26592 ;;		_currentMeasuredToPeak
 26593 ;; This function uses a non-reentrant model
 26594 ;;
 26595                           
 26596                           	psect	text101
 26597  0137E8                     __ptext101:
 26598                           	opt stack 0
 26599  0137E8                     _sin:
 26600                           	opt stack 11
 26601                           
 26602                           ;incstack = 0
 26603  0137E8  0E00               	movlw	0
 26604  0137EA  0100               	movlb	0	; () banked
 26605  0137EC  6F72               	movwf	sin@sgn& (0+255),b
 26606                           
 26607                           ; BSR set to: 0
 26608  0137EE  AF68               	btfss	(sin@f+2)& (0+255),7,b
 26609  0137F0  D011               	goto	i2l1826
 26610                           
 26611                           ; BSR set to: 0
 26612  0137F2  C066  F024         	movff	sin@f,i2___ftneg@f1
 26613  0137F6  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 26614  0137FA  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 26615  0137FE  ECD2  F0B2         	call	i2___ftneg	;wreg free
 26616  013802  C024  F066         	movff	?i2___ftneg,sin@f
 26617  013806  C025  F067         	movff	?i2___ftneg+1,sin@f+1
 26618  01380A  C026  F068         	movff	?i2___ftneg+2,sin@f+2
 26619  01380E  0E01               	movlw	1
 26620  013810  0100               	movlb	0	; () banked
 26621  013812  6F72               	movwf	sin@sgn& (0+255),b
 26622  013814                     i2l1826:
 26623                           
 26624                           ; BSR set to: 0
 26625                           
 26626                           ; BSR set to: 0
 26627  013814  C066  F027         	movff	sin@f,i2___ftmul@f1
 26628  013818  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 26629  01381C  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 26630  013820  0EFA               	movlw	250
 26631  013822  6E2A               	movwf	i2___ftmul@f2,c
 26632  013824  0E22               	movlw	34
 26633  013826  6E2B               	movwf	i2___ftmul@f2+1,c
 26634  013828  0E3E               	movlw	62
 26635  01382A  6E2C               	movwf	i2___ftmul@f2+2,c
 26636  01382C  ECB8  F0A5         	call	i2___ftmul	;wreg free
 26637  013830  C027  F066         	movff	?i2___ftmul,sin@f
 26638  013834  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 26639  013838  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 26640  01383C  C066  F060         	movff	sin@f,i2___ftsub@f1
 26641  013840  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 26642  013844  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 26643  013848  C066  F056         	movff	sin@f,floor@x
 26644  01384C  C067  F057         	movff	sin@f+1,floor@x+1
 26645  013850  C068  F058         	movff	sin@f+2,floor@x+2
 26646  013854  EC19  F0A7         	call	_floor	;wreg free
 26647  013858  C056  F063         	movff	?_floor,i2___ftsub@f2
 26648  01385C  C057  F064         	movff	?_floor+1,i2___ftsub@f2+1
 26649  013860  C058  F065         	movff	?_floor+2,i2___ftsub@f2+2
 26650  013864  EC34  F0B1         	call	i2___ftsub	;wreg free
 26651  013868  C060  F066         	movff	?i2___ftsub,sin@f
 26652  01386C  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 26653  013870  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 26654  013874  C066  F027         	movff	sin@f,i2___ftmul@f1
 26655  013878  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 26656  01387C  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 26657  013880  0E00               	movlw	0
 26658  013882  6E2A               	movwf	i2___ftmul@f2,c
 26659  013884  0E80               	movlw	128
 26660  013886  6E2B               	movwf	i2___ftmul@f2+1,c
 26661  013888  0E40               	movlw	64
 26662  01388A  6E2C               	movwf	i2___ftmul@f2+2,c
 26663  01388C  ECB8  F0A5         	call	i2___ftmul	;wreg free
 26664  013890  C027  F066         	movff	?i2___ftmul,sin@f
 26665  013894  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 26666  013898  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 26667  01389C  0E00               	movlw	0
 26668  01389E  6E2A               	movwf	i2___ftge@ff1,c
 26669  0138A0  0E00               	movlw	0
 26670  0138A2  6E2B               	movwf	i2___ftge@ff1+1,c
 26671  0138A4  0E40               	movlw	64
 26672  0138A6  6E2C               	movwf	i2___ftge@ff1+2,c
 26673  0138A8  C066  F02D         	movff	sin@f,i2___ftge@ff2
 26674  0138AC  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 26675  0138B0  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 26676  0138B4  ECAD  F0AA         	call	i2___ftge	;wreg free
 26677  0138B8  B0D8               	btfsc	status,0,c
 26678  0138BA  D01D               	goto	i2l1827
 26679  0138BC  C066  F060         	movff	sin@f,i2___ftsub@f1
 26680  0138C0  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 26681  0138C4  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 26682  0138C8  0E00               	movlw	0
 26683  0138CA  0100               	movlb	0	; () banked
 26684  0138CC  6F63               	movwf	i2___ftsub@f2& (0+255),b
 26685  0138CE  0E00               	movlw	0
 26686  0138D0  6F64               	movwf	(i2___ftsub@f2+1)& (0+255),b
 26687  0138D2  0E40               	movlw	64
 26688  0138D4  6F65               	movwf	(i2___ftsub@f2+2)& (0+255),b
 26689  0138D6  EC34  F0B1         	call	i2___ftsub	;wreg free
 26690  0138DA  C060  F066         	movff	?i2___ftsub,sin@f
 26691  0138DE  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 26692  0138E2  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 26693  0138E6  0100               	movlb	0	; () banked
 26694  0138E8  5172               	movf	sin@sgn& (0+255),w,b
 26695  0138EA  A4D8               	btfss	status,2,c
 26696  0138EC  D002               	goto	i2u1594_40
 26697  0138EE  0E01               	movlw	1
 26698  0138F0  D001               	goto	i2u1595_40
 26699  0138F2                     i2u1594_40:
 26700  0138F2  0E00               	movlw	0
 26701  0138F4                     i2u1595_40:
 26702  0138F4  6F72               	movwf	sin@sgn& (0+255),b
 26703  0138F6                     i2l1827:
 26704                           
 26705                           ; BSR set to: 0
 26706  0138F6  0E00               	movlw	0
 26707  0138F8  6E2A               	movwf	i2___ftge@ff1,c
 26708  0138FA  0E80               	movlw	128
 26709  0138FC  6E2B               	movwf	i2___ftge@ff1+1,c
 26710  0138FE  0E3F               	movlw	63
 26711  013900  6E2C               	movwf	i2___ftge@ff1+2,c
 26712  013902  C066  F02D         	movff	sin@f,i2___ftge@ff2
 26713  013906  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 26714  01390A  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 26715  01390E  ECAD  F0AA         	call	i2___ftge	;wreg free
 26716  013912  B0D8               	btfsc	status,0,c
 26717  013914  D01C               	goto	i2l1828
 26718  013916  C066  F024         	movff	sin@f,i2___ftneg@f1
 26719  01391A  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 26720  01391E  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 26721  013922  ECD2  F0B2         	call	i2___ftneg	;wreg free
 26722  013926  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 26723  01392A  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 26724  01392E  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 26725  013932  0E00               	movlw	0
 26726  013934  6E43               	movwf	i2___ftadd@f2,c
 26727  013936  0E00               	movlw	0
 26728  013938  6E44               	movwf	i2___ftadd@f2+1,c
 26729  01393A  0E40               	movlw	64
 26730  01393C  6E45               	movwf	i2___ftadd@f2+2,c
 26731  01393E  ECBE  F09F         	call	i2___ftadd	;wreg free
 26732  013942  C040  F066         	movff	?i2___ftadd,sin@f
 26733  013946  C041  F067         	movff	?i2___ftadd+1,sin@f+1
 26734  01394A  C042  F068         	movff	?i2___ftadd+2,sin@f+2
 26735  01394E                     i2l1828:
 26736  01394E  C066  F027         	movff	sin@f,i2___ftmul@f1
 26737  013952  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 26738  013956  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 26739  01395A  C066  F02A         	movff	sin@f,i2___ftmul@f2
 26740  01395E  C067  F02B         	movff	sin@f+1,i2___ftmul@f2+1
 26741  013962  C068  F02C         	movff	sin@f+2,i2___ftmul@f2+2
 26742  013966  ECB8  F0A5         	call	i2___ftmul	;wreg free
 26743  01396A  C027  F06F         	movff	?i2___ftmul,sin@x2
 26744  01396E  C028  F070         	movff	?i2___ftmul+1,sin@x2+1
 26745  013972  C029  F071         	movff	?i2___ftmul+2,sin@x2+2
 26746  013976  C06F  F04C         	movff	sin@x2,eval_poly@x
 26747  01397A  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 26748  01397E  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 26749  013982  0E7B               	movlw	low sin@coeff_b
 26750  013984  6E4F               	movwf	eval_poly@d,c
 26751  013986  0EF1               	movlw	high sin@coeff_b
 26752  013988  6E50               	movwf	eval_poly@d+1,c
 26753  01398A  0E00               	movlw	0
 26754  01398C  6E52               	movwf	eval_poly@n+1,c
 26755  01398E  0E03               	movlw	3
 26756  013990  6E51               	movwf	eval_poly@n,c
 26757  013992  EC88  F0A7         	call	_eval_poly	;wreg free
 26758  013996  C04C  F069         	movff	?_eval_poly,sin@y
 26759  01399A  C04D  F06A         	movff	?_eval_poly+1,sin@y+1
 26760  01399E  C04E  F06B         	movff	?_eval_poly+2,sin@y+2
 26761  0139A2  C069  F018         	movff	sin@y,i2___ftdiv@f2
 26762  0139A6  C06A  F019         	movff	sin@y+1,i2___ftdiv@f2+1
 26763  0139AA  C06B  F01A         	movff	sin@y+2,i2___ftdiv@f2+2
 26764  0139AE  0E00               	movlw	0
 26765  0139B0  6E52               	movwf	eval_poly@n+1,c
 26766  0139B2  0E04               	movlw	4
 26767  0139B4  6E51               	movwf	eval_poly@n,c
 26768  0139B6  0E5D               	movlw	low sin@coeff_a
 26769  0139B8  6E4F               	movwf	eval_poly@d,c
 26770  0139BA  0EF1               	movlw	high sin@coeff_a
 26771  0139BC  6E50               	movwf	eval_poly@d+1,c
 26772  0139BE  C06F  F04C         	movff	sin@x2,eval_poly@x
 26773  0139C2  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 26774  0139C6  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 26775  0139CA  EC88  F0A7         	call	_eval_poly	;wreg free
 26776  0139CE  C04C  F015         	movff	?_eval_poly,i2___ftdiv@f1
 26777  0139D2  C04D  F016         	movff	?_eval_poly+1,i2___ftdiv@f1+1
 26778  0139D6  C04E  F017         	movff	?_eval_poly+2,i2___ftdiv@f1+2
 26779  0139DA  ECA6  F0A6         	call	i2___ftdiv	;wreg free
 26780  0139DE  C015  F06C         	movff	?i2___ftdiv,_sin$3528
 26781  0139E2  C016  F06D         	movff	?i2___ftdiv+1,_sin$3528+1
 26782  0139E6  C017  F06E         	movff	?i2___ftdiv+2,_sin$3528+2
 26783  0139EA  C066  F027         	movff	sin@f,i2___ftmul@f1
 26784  0139EE  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 26785  0139F2  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 26786  0139F6  C06C  F02A         	movff	_sin$3528,i2___ftmul@f2
 26787  0139FA  C06D  F02B         	movff	_sin$3528+1,i2___ftmul@f2+1
 26788  0139FE  C06E  F02C         	movff	_sin$3528+2,i2___ftmul@f2+2
 26789  013A02  ECB8  F0A5         	call	i2___ftmul	;wreg free
 26790  013A06  C027  F066         	movff	?i2___ftmul,sin@f
 26791  013A0A  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 26792  013A0E  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 26793  013A12  0100               	movlb	0	; () banked
 26794  013A14  5172               	movf	sin@sgn& (0+255),w,b
 26795  013A16  B4D8               	btfsc	status,2,c
 26796  013A18  D00F               	goto	i2l1829
 26797                           
 26798                           ; BSR set to: 0
 26799  013A1A  C066  F024         	movff	sin@f,i2___ftneg@f1
 26800  013A1E  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 26801  013A22  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 26802  013A26  ECD2  F0B2         	call	i2___ftneg	;wreg free
 26803  013A2A  C024  F066         	movff	?i2___ftneg,?_sin
 26804  013A2E  C025  F067         	movff	?i2___ftneg+1,?_sin+1
 26805  013A32  C026  F068         	movff	?i2___ftneg+2,?_sin+2
 26806  013A36  0012               	return	
 26807  013A38                     i2l1829:
 26808                           
 26809                           ; BSR set to: 0
 26810  013A38  C066  F066         	movff	sin@f,?_sin
 26811  013A3C  C067  F067         	movff	sin@f+1,?_sin+1
 26812  013A40  C068  F068         	movff	sin@f+2,?_sin+2
 26813  013A44  0012               	return		;funcret
 26814  013A46                     __end_of_sin:
 26815                           	opt stack 0
 26816                           tosu	equ	0xFFF
 26817                           tosh	equ	0xFFE
 26818                           tosl	equ	0xFFD
 26819                           pclatu	equ	0xFFB
 26820                           pclath	equ	0xFFA
 26821                           tblptru	equ	0xFF8
 26822                           tblptrh	equ	0xFF7
 26823                           tblptrl	equ	0xFF6
 26824                           tablat	equ	0xFF5
 26825                           prodh	equ	0xFF4
 26826                           prodl	equ	0xFF3
 26827                           intcon	equ	0xFF2
 26828                           indf0	equ	0xFEF
 26829                           postinc0	equ	0xFEE
 26830                           fsr0h	equ	0xFEA
 26831                           fsr0l	equ	0xFE9
 26832                           wreg	equ	0xFE8
 26833                           indf1	equ	0xFE7
 26834                           postdec1	equ	0xFE5
 26835                           fsr1h	equ	0xFE2
 26836                           fsr1l	equ	0xFE1
 26837                           bsr	equ	0xFE0
 26838                           indf2	equ	0xFDF
 26839                           postinc2	equ	0xFDE
 26840                           postdec2	equ	0xFDD
 26841                           fsr2h	equ	0xFDA
 26842                           fsr2l	equ	0xFD9
 26843                           status	equ	0xFD8
 26844                           
 26845 ;; *************** function i2___ftsub *****************
 26846 ;; Defined at:
 26847 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 26848 ;; Parameters:    Size  Location     Type
 26849 ;;  f1              3    0[BANK0 ] float 
 26850 ;;  f2              3    3[BANK0 ] float 
 26851 ;; Auto vars:     Size  Location     Type
 26852 ;;		None
 26853 ;; Return value:  Size  Location     Type
 26854 ;;                  3    0[BANK0 ] float 
 26855 ;; Registers used:
 26856 ;;		wreg, status,2, status,0, cstack
 26857 ;; Tracked objects:
 26858 ;;		On entry : 0/0
 26859 ;;		On exit  : 0/0
 26860 ;;		Unchanged: 0/0
 26861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26862 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26865 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26866 ;;Total ram usage:        6 bytes
 26867 ;; Hardware stack levels used:    1
 26868 ;; Hardware stack levels required when called:    2
 26869 ;; This function calls:
 26870 ;;		i2___ftadd
 26871 ;; This function is called by:
 26872 ;;		_sin
 26873 ;;		_sqrt
 26874 ;;		i2_printf
 26875 ;; This function uses a non-reentrant model
 26876 ;;
 26877                           
 26878                           	psect	text102
 26879  016268                     __ptext102:
 26880                           	opt stack 0
 26881  016268                     i2___ftsub:
 26882                           	opt stack 13
 26883                           
 26884                           ;incstack = 0
 26885  016268  0100               	movlb	0	; () banked
 26886  01626A  5163               	movf	i2___ftsub@f2& (0+255),w,b
 26887  01626C  1164               	iorwf	(i2___ftsub@f2+1)& (0+255),w,b
 26888  01626E  1165               	iorwf	(i2___ftsub@f2+2)& (0+255),w,b
 26889  016270  B4D8               	btfsc	status,2,c
 26890  016272  D006               	goto	i2l1692
 26891                           
 26892                           ; BSR set to: 0
 26893  016274  0E00               	movlw	0
 26894  016276  1B63               	xorwf	i2___ftsub@f2& (0+255),f,b
 26895  016278  0E00               	movlw	0
 26896  01627A  1B64               	xorwf	(i2___ftsub@f2+1)& (0+255),f,b
 26897  01627C  0E80               	movlw	128
 26898  01627E  1B65               	xorwf	(i2___ftsub@f2+2)& (0+255),f,b
 26899  016280                     i2l1692:
 26900                           
 26901                           ; BSR set to: 0
 26902                           
 26903                           ; BSR set to: 0
 26904  016280  C060  F040         	movff	i2___ftsub@f1,i2___ftadd@f1
 26905  016284  C061  F041         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 26906  016288  C062  F042         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 26907  01628C  C063  F043         	movff	i2___ftsub@f2,i2___ftadd@f2
 26908  016290  C064  F044         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 26909  016294  C065  F045         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 26910  016298  ECBE  F09F         	call	i2___ftadd	;wreg free
 26911  01629C  C040  F060         	movff	?i2___ftadd,?i2___ftsub
 26912  0162A0  C041  F061         	movff	?i2___ftadd+1,?i2___ftsub+1
 26913  0162A4  C042  F062         	movff	?i2___ftadd+2,?i2___ftsub+2
 26914  0162A8  0012               	return	
 26915  0162AA                     __end_ofi2___ftsub:
 26916                           	opt stack 0
 26917                           tosu	equ	0xFFF
 26918                           tosh	equ	0xFFE
 26919                           tosl	equ	0xFFD
 26920                           pclatu	equ	0xFFB
 26921                           pclath	equ	0xFFA
 26922                           tblptru	equ	0xFF8
 26923                           tblptrh	equ	0xFF7
 26924                           tblptrl	equ	0xFF6
 26925                           tablat	equ	0xFF5
 26926                           prodh	equ	0xFF4
 26927                           prodl	equ	0xFF3
 26928                           intcon	equ	0xFF2
 26929                           indf0	equ	0xFEF
 26930                           postinc0	equ	0xFEE
 26931                           fsr0h	equ	0xFEA
 26932                           fsr0l	equ	0xFE9
 26933                           wreg	equ	0xFE8
 26934                           indf1	equ	0xFE7
 26935                           postdec1	equ	0xFE5
 26936                           fsr1h	equ	0xFE2
 26937                           fsr1l	equ	0xFE1
 26938                           bsr	equ	0xFE0
 26939                           indf2	equ	0xFDF
 26940                           postinc2	equ	0xFDE
 26941                           postdec2	equ	0xFDD
 26942                           fsr2h	equ	0xFDA
 26943                           fsr2l	equ	0xFD9
 26944                           status	equ	0xFD8
 26945                           
 26946 ;; *************** function i2___ftneg *****************
 26947 ;; Defined at:
 26948 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 26949 ;; Parameters:    Size  Location     Type
 26950 ;;  f1              3   35[COMRAM] float 
 26951 ;; Auto vars:     Size  Location     Type
 26952 ;;		None
 26953 ;; Return value:  Size  Location     Type
 26954 ;;                  3   35[COMRAM] float 
 26955 ;; Registers used:
 26956 ;;		wreg, status,2, status,0
 26957 ;; Tracked objects:
 26958 ;;		On entry : 0/0
 26959 ;;		On exit  : 0/0
 26960 ;;		Unchanged: 0/0
 26961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26962 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26965 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26966 ;;Total ram usage:        3 bytes
 26967 ;; Hardware stack levels used:    1
 26968 ;; This function calls:
 26969 ;;		Nothing
 26970 ;; This function is called by:
 26971 ;;		_peakToRMS
 26972 ;;		_ADC_postProcessingCallback
 26973 ;;		_acos
 26974 ;;		_asin
 26975 ;;		_atan
 26976 ;;		_fabs
 26977 ;;		_sin
 26978 ;;		i2_printf
 26979 ;; This function uses a non-reentrant model
 26980 ;;
 26981                           
 26982                           	psect	text103
 26983  0165A4                     __ptext103:
 26984                           	opt stack 0
 26985  0165A4                     i2___ftneg:
 26986                           	opt stack 15
 26987                           
 26988                           ;incstack = 0
 26989  0165A4  5024               	movf	i2___ftneg@f1,w,c
 26990  0165A6  1025               	iorwf	i2___ftneg@f1+1,w,c
 26991  0165A8  1026               	iorwf	i2___ftneg@f1+2,w,c
 26992  0165AA  B4D8               	btfsc	status,2,c
 26993  0165AC  D006               	goto	i2l1686
 26994  0165AE  0E00               	movlw	0
 26995  0165B0  1A24               	xorwf	i2___ftneg@f1,f,c
 26996  0165B2  0E00               	movlw	0
 26997  0165B4  1A25               	xorwf	i2___ftneg@f1+1,f,c
 26998  0165B6  0E80               	movlw	128
 26999  0165B8  1A26               	xorwf	i2___ftneg@f1+2,f,c
 27000  0165BA                     i2l1686:
 27001  0165BA  C024  F024         	movff	i2___ftneg@f1,?i2___ftneg
 27002  0165BE  C025  F025         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 27003  0165C2  C026  F026         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 27004  0165C6  0012               	return		;funcret
 27005  0165C8                     __end_ofi2___ftneg:
 27006                           	opt stack 0
 27007                           tosu	equ	0xFFF
 27008                           tosh	equ	0xFFE
 27009                           tosl	equ	0xFFD
 27010                           pclatu	equ	0xFFB
 27011                           pclath	equ	0xFFA
 27012                           tblptru	equ	0xFF8
 27013                           tblptrh	equ	0xFF7
 27014                           tblptrl	equ	0xFF6
 27015                           tablat	equ	0xFF5
 27016                           prodh	equ	0xFF4
 27017                           prodl	equ	0xFF3
 27018                           intcon	equ	0xFF2
 27019                           indf0	equ	0xFEF
 27020                           postinc0	equ	0xFEE
 27021                           fsr0h	equ	0xFEA
 27022                           fsr0l	equ	0xFE9
 27023                           wreg	equ	0xFE8
 27024                           indf1	equ	0xFE7
 27025                           postdec1	equ	0xFE5
 27026                           fsr1h	equ	0xFE2
 27027                           fsr1l	equ	0xFE1
 27028                           bsr	equ	0xFE0
 27029                           indf2	equ	0xFDF
 27030                           postinc2	equ	0xFDE
 27031                           postdec2	equ	0xFDD
 27032                           fsr2h	equ	0xFDA
 27033                           fsr2l	equ	0xFD9
 27034                           status	equ	0xFD8
 27035                           
 27036 ;; *************** function i2___ftdiv *****************
 27037 ;; Defined at:
 27038 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 27039 ;; Parameters:    Size  Location     Type
 27040 ;;  f1              3   20[COMRAM] float 
 27041 ;;  f2              3   23[COMRAM] float 
 27042 ;; Auto vars:     Size  Location     Type
 27043 ;;  __ftdiv         3   31[COMRAM] float 
 27044 ;;  __ftdiv         1   34[COMRAM] unsigned char 
 27045 ;;  __ftdiv         1   30[COMRAM] unsigned char 
 27046 ;;  __ftdiv         1   29[COMRAM] unsigned char 
 27047 ;; Return value:  Size  Location     Type
 27048 ;;                  3   20[COMRAM] float 
 27049 ;; Registers used:
 27050 ;;		wreg, status,2, status,0, cstack
 27051 ;; Tracked objects:
 27052 ;;		On entry : 0/0
 27053 ;;		On exit  : 0/0
 27054 ;;		Unchanged: 0/0
 27055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27056 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27057 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27058 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27059 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27060 ;;Total ram usage:       15 bytes
 27061 ;; Hardware stack levels used:    1
 27062 ;; Hardware stack levels required when called:    1
 27063 ;; This function calls:
 27064 ;;		i2___ftpack
 27065 ;; This function is called by:
 27066 ;;		_peakToRMS
 27067 ;;		_currentMeasuredToPeak
 27068 ;;		_ADC_postProcessingCallback
 27069 ;;		_asin
 27070 ;;		_atan
 27071 ;;		_sin
 27072 ;; This function uses a non-reentrant model
 27073 ;;
 27074                           
 27075                           	psect	text104
 27076  014D4C                     __ptext104:
 27077                           	opt stack 0
 27078  014D4C                     i2___ftdiv:
 27079                           	opt stack 14
 27080                           
 27081                           ;incstack = 0
 27082  014D4C  C017  F01B         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 27083  014D50  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 27084  014D52  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 27085  014D54  3416               	rlcf	i2___ftdiv@f1+1,w,c
 27086  014D56  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 27087  014D58  E301               	bnc	u1556_41
 27088  014D5A  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 27089  014D5C                     u1556_41:
 27090  014D5C  501B               	movf	??i2___ftdiv,w,c
 27091  014D5E  6E1F               	movwf	i2___ftdiv@exp,c
 27092  014D60  501F               	movf	i2___ftdiv@exp,w,c
 27093  014D62  A4D8               	btfss	status,2,c
 27094  014D64  D007               	goto	i2l1643
 27095  014D66  0E00               	movlw	0
 27096  014D68  6E15               	movwf	?i2___ftdiv,c
 27097  014D6A  0E00               	movlw	0
 27098  014D6C  6E16               	movwf	?i2___ftdiv+1,c
 27099  014D6E  0E00               	movlw	0
 27100  014D70  6E17               	movwf	?i2___ftdiv+2,c
 27101  014D72  0012               	return	
 27102  014D74                     i2l1643:
 27103  014D74  C01A  F01B         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 27104  014D78  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 27105  014D7A  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 27106  014D7C  3419               	rlcf	i2___ftdiv@f2+1,w,c
 27107  014D7E  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 27108  014D80  E301               	bnc	u1558_41
 27109  014D82  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 27110  014D84                     u1558_41:
 27111  014D84  501B               	movf	??i2___ftdiv,w,c
 27112  014D86  6E23               	movwf	i2___ftdiv@sign,c
 27113  014D88  5023               	movf	i2___ftdiv@sign,w,c
 27114  014D8A  A4D8               	btfss	status,2,c
 27115  014D8C  D007               	goto	i2l1645
 27116  014D8E  0E00               	movlw	0
 27117  014D90  6E15               	movwf	?i2___ftdiv,c
 27118  014D92  0E00               	movlw	0
 27119  014D94  6E16               	movwf	?i2___ftdiv+1,c
 27120  014D96  0E00               	movlw	0
 27121  014D98  6E17               	movwf	?i2___ftdiv+2,c
 27122  014D9A  0012               	return	
 27123  014D9C                     i2l1645:
 27124  014D9C  0E00               	movlw	0
 27125  014D9E  6E20               	movwf	i2___ftdiv@f3,c
 27126  014DA0  0E00               	movlw	0
 27127  014DA2  6E21               	movwf	i2___ftdiv@f3+1,c
 27128  014DA4  0E00               	movlw	0
 27129  014DA6  6E22               	movwf	i2___ftdiv@f3+2,c
 27130  014DA8  5023               	movf	i2___ftdiv@sign,w,c
 27131  014DAA  0F89               	addlw	137
 27132  014DAC  5E1F               	subwf	i2___ftdiv@exp,f,c
 27133  014DAE  C017  F023         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 27134  014DB2  501A               	movf	i2___ftdiv@f2+2,w,c
 27135  014DB4  1A23               	xorwf	i2___ftdiv@sign,f,c
 27136  014DB6  0E80               	movlw	128
 27137  014DB8  1623               	andwf	i2___ftdiv@sign,f,c
 27138  014DBA  8E16               	bsf	i2___ftdiv@f1+1,7,c
 27139  014DBC  0EFF               	movlw	255
 27140  014DBE  1615               	andwf	i2___ftdiv@f1,f,c
 27141  014DC0  0EFF               	movlw	255
 27142  014DC2  1616               	andwf	i2___ftdiv@f1+1,f,c
 27143  014DC4  0E00               	movlw	0
 27144  014DC6  1617               	andwf	i2___ftdiv@f1+2,f,c
 27145  014DC8  8E19               	bsf	i2___ftdiv@f2+1,7,c
 27146  014DCA  0EFF               	movlw	255
 27147  014DCC  1618               	andwf	i2___ftdiv@f2,f,c
 27148  014DCE  0EFF               	movlw	255
 27149  014DD0  1619               	andwf	i2___ftdiv@f2+1,f,c
 27150  014DD2  0E00               	movlw	0
 27151  014DD4  161A               	andwf	i2___ftdiv@f2+2,f,c
 27152  014DD6  0E18               	movlw	24
 27153  014DD8  6E1E               	movwf	i2___ftdiv@cntr,c
 27154  014DDA  90D8               	bcf	status,0,c
 27155  014DDC  3620               	rlcf	i2___ftdiv@f3,f,c
 27156  014DDE  3621               	rlcf	i2___ftdiv@f3+1,f,c
 27157  014DE0  3622               	rlcf	i2___ftdiv@f3+2,f,c
 27158  014DE2  5018               	movf	i2___ftdiv@f2,w,c
 27159  014DE4  5C15               	subwf	i2___ftdiv@f1,w,c
 27160  014DE6  5019               	movf	i2___ftdiv@f2+1,w,c
 27161  014DE8  5816               	subwfb	i2___ftdiv@f1+1,w,c
 27162  014DEA  501A               	movf	i2___ftdiv@f2+2,w,c
 27163  014DEC  5817               	subwfb	i2___ftdiv@f1+2,w,c
 27164  014DEE  A0D8               	btfss	status,0,c
 27165  014DF0  D007               	goto	i2l1647
 27166  014DF2  5018               	movf	i2___ftdiv@f2,w,c
 27167  014DF4  5E15               	subwf	i2___ftdiv@f1,f,c
 27168  014DF6  5019               	movf	i2___ftdiv@f2+1,w,c
 27169  014DF8  5A16               	subwfb	i2___ftdiv@f1+1,f,c
 27170  014DFA  501A               	movf	i2___ftdiv@f2+2,w,c
 27171  014DFC  5A17               	subwfb	i2___ftdiv@f1+2,f,c
 27172  014DFE  8020               	bsf	i2___ftdiv@f3,0,c
 27173  014E00                     i2l1647:
 27174  014E00  90D8               	bcf	status,0,c
 27175  014E02  3615               	rlcf	i2___ftdiv@f1,f,c
 27176  014E04  3616               	rlcf	i2___ftdiv@f1+1,f,c
 27177  014E06  3617               	rlcf	i2___ftdiv@f1+2,f,c
 27178  014E08  2E1E               	decfsz	i2___ftdiv@cntr,f,c
 27179  014E0A  D7E7               	goto	i2l1646
 27180  014E0C  C020  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 27181  014E10  C021  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 27182  014E14  C022  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 27183  014E18  C01F  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 27184  014E1C  C023  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 27185  014E20  EC1F  F0A9         	call	i2___ftpack	;wreg free
 27186  014E24  C001  F015         	movff	?i2___ftpack,?i2___ftdiv
 27187  014E28  C002  F016         	movff	?i2___ftpack+1,?i2___ftdiv+1
 27188  014E2C  C003  F017         	movff	?i2___ftpack+2,?i2___ftdiv+2
 27189  014E30  0012               	return	
 27190  014E32                     __end_ofi2___ftdiv:
 27191                           	opt stack 0
 27192                           tosu	equ	0xFFF
 27193                           tosh	equ	0xFFE
 27194                           tosl	equ	0xFFD
 27195                           pclatu	equ	0xFFB
 27196                           pclath	equ	0xFFA
 27197                           tblptru	equ	0xFF8
 27198                           tblptrh	equ	0xFF7
 27199                           tblptrl	equ	0xFF6
 27200                           tablat	equ	0xFF5
 27201                           prodh	equ	0xFF4
 27202                           prodl	equ	0xFF3
 27203                           intcon	equ	0xFF2
 27204                           indf0	equ	0xFEF
 27205                           postinc0	equ	0xFEE
 27206                           fsr0h	equ	0xFEA
 27207                           fsr0l	equ	0xFE9
 27208                           wreg	equ	0xFE8
 27209                           indf1	equ	0xFE7
 27210                           postdec1	equ	0xFE5
 27211                           fsr1h	equ	0xFE2
 27212                           fsr1l	equ	0xFE1
 27213                           bsr	equ	0xFE0
 27214                           indf2	equ	0xFDF
 27215                           postinc2	equ	0xFDE
 27216                           postdec2	equ	0xFDD
 27217                           fsr2h	equ	0xFDA
 27218                           fsr2l	equ	0xFD9
 27219                           status	equ	0xFD8
 27220                           
 27221 ;; *************** function _floor *****************
 27222 ;; Defined at:
 27223 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 27224 ;; Parameters:    Size  Location     Type
 27225 ;;  x               3   85[COMRAM] float 
 27226 ;; Auto vars:     Size  Location     Type
 27227 ;;  i               3   88[COMRAM] float 
 27228 ;;  expon           2   91[COMRAM] int 
 27229 ;; Return value:  Size  Location     Type
 27230 ;;                  3   85[COMRAM] int 
 27231 ;; Registers used:
 27232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27233 ;; Tracked objects:
 27234 ;;		On entry : 0/0
 27235 ;;		On exit  : 0/0
 27236 ;;		Unchanged: 0/0
 27237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27238 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27239 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27241 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27242 ;;Total ram usage:        8 bytes
 27243 ;; Hardware stack levels used:    1
 27244 ;; Hardware stack levels required when called:    2
 27245 ;; This function calls:
 27246 ;;		___altoft
 27247 ;;		_frexp
 27248 ;;		i2___ftadd
 27249 ;;		i2___ftge
 27250 ;;		i2___fttol
 27251 ;; This function is called by:
 27252 ;;		_sin
 27253 ;; This function uses a non-reentrant model
 27254 ;;
 27255                           
 27256                           	psect	text105
 27257  014E32                     __ptext105:
 27258                           	opt stack 0
 27259  014E32                     _floor:
 27260                           	opt stack 11
 27261                           
 27262                           ;incstack = 0
 27263  014E32  C056  F001         	movff	floor@x,frexp@value
 27264  014E36  C057  F002         	movff	floor@x+1,frexp@value+1
 27265  014E3A  C058  F003         	movff	floor@x+2,frexp@value+2
 27266  014E3E  0E5C               	movlw	low floor@expon
 27267  014E40  6E04               	movwf	frexp@eptr,c
 27268  014E42  0E00               	movlw	high floor@expon
 27269  014E44  6E05               	movwf	frexp@eptr+1,c
 27270  014E46  EC88  F0AC         	call	_frexp	;wreg free
 27271  014E4A  AE5D               	btfss	floor@expon+1,7,c
 27272  014E4C  D010               	goto	i2l2037
 27273  014E4E  AE58               	btfss	floor@x+2,7,c
 27274  014E50  D007               	goto	i2l2038
 27275  014E52  0E00               	movlw	0
 27276  014E54  6E56               	movwf	?_floor,c
 27277  014E56  0E80               	movlw	128
 27278  014E58  6E57               	movwf	?_floor+1,c
 27279  014E5A  0EBF               	movlw	191
 27280  014E5C  6E58               	movwf	?_floor+2,c
 27281  014E5E  0012               	return	
 27282  014E60                     i2l2038:
 27283  014E60  0E00               	movlw	0
 27284  014E62  6E56               	movwf	?_floor,c
 27285  014E64  0E00               	movlw	0
 27286  014E66  6E57               	movwf	?_floor+1,c
 27287  014E68  0E00               	movlw	0
 27288  014E6A  6E58               	movwf	?_floor+2,c
 27289  014E6C  0012               	return	
 27290  014E6E                     i2l2037:
 27291  014E6E  505D               	movf	floor@expon+1,w,c
 27292  014E70  E104               	bnz	i2u1590_40
 27293  014E72  0E15               	movlw	21
 27294  014E74  5C5C               	subwf	floor@expon,w,c
 27295  014E76  A0D8               	btfss	status,0,c
 27296  014E78  D007               	goto	i2l2040
 27297  014E7A                     i2u1590_40:
 27298  014E7A  C056  F056         	movff	floor@x,?_floor
 27299  014E7E  C057  F057         	movff	floor@x+1,?_floor+1
 27300  014E82  C058  F058         	movff	floor@x+2,?_floor+2
 27301  014E86  0012               	return	
 27302  014E88                     i2l2040:
 27303  014E88  C056  F03D         	movff	floor@x,i2___fttol@f1
 27304  014E8C  C057  F03E         	movff	floor@x+1,i2___fttol@f1+1
 27305  014E90  C058  F03F         	movff	floor@x+2,i2___fttol@f1+2
 27306  014E94  EC3E  F0A5         	call	i2___fttol	;wreg free
 27307  014E98  C03D  F04C         	movff	?i2___fttol,___altoft@c
 27308  014E9C  C03E  F04D         	movff	?i2___fttol+1,___altoft@c+1
 27309  014EA0  C03F  F04E         	movff	?i2___fttol+2,___altoft@c+2
 27310  014EA4  C040  F04F         	movff	?i2___fttol+3,___altoft@c+3
 27311  014EA8  ECC4  F0AC         	call	___altoft	;wreg free
 27312  014EAC  C04C  F059         	movff	?___altoft,floor@i
 27313  014EB0  C04D  F05A         	movff	?___altoft+1,floor@i+1
 27314  014EB4  C04E  F05B         	movff	?___altoft+2,floor@i+2
 27315  014EB8  C056  F02A         	movff	floor@x,i2___ftge@ff1
 27316  014EBC  C057  F02B         	movff	floor@x+1,i2___ftge@ff1+1
 27317  014EC0  C058  F02C         	movff	floor@x+2,i2___ftge@ff1+2
 27318  014EC4  C059  F02D         	movff	floor@i,i2___ftge@ff2
 27319  014EC8  C05A  F02E         	movff	floor@i+1,i2___ftge@ff2+1
 27320  014ECC  C05B  F02F         	movff	floor@i+2,i2___ftge@ff2+2
 27321  014ED0  ECAD  F0AA         	call	i2___ftge	;wreg free
 27322  014ED4  B0D8               	btfsc	status,0,c
 27323  014ED6  D015               	goto	i2l2041
 27324  014ED8  C059  F040         	movff	floor@i,i2___ftadd@f1
 27325  014EDC  C05A  F041         	movff	floor@i+1,i2___ftadd@f1+1
 27326  014EE0  C05B  F042         	movff	floor@i+2,i2___ftadd@f1+2
 27327  014EE4  0E00               	movlw	0
 27328  014EE6  6E43               	movwf	i2___ftadd@f2,c
 27329  014EE8  0E80               	movlw	128
 27330  014EEA  6E44               	movwf	i2___ftadd@f2+1,c
 27331  014EEC  0EBF               	movlw	191
 27332  014EEE  6E45               	movwf	i2___ftadd@f2+2,c
 27333  014EF0  ECBE  F09F         	call	i2___ftadd	;wreg free
 27334  014EF4  C040  F056         	movff	?i2___ftadd,?_floor
 27335  014EF8  C041  F057         	movff	?i2___ftadd+1,?_floor+1
 27336  014EFC  C042  F058         	movff	?i2___ftadd+2,?_floor+2
 27337  014F00  0012               	return	
 27338  014F02                     i2l2041:
 27339  014F02  C059  F056         	movff	floor@i,?_floor
 27340  014F06  C05A  F057         	movff	floor@i+1,?_floor+1
 27341  014F0A  C05B  F058         	movff	floor@i+2,?_floor+2
 27342  014F0E  0012               	return		;funcret
 27343  014F10                     __end_of_floor:
 27344                           	opt stack 0
 27345                           tosu	equ	0xFFF
 27346                           tosh	equ	0xFFE
 27347                           tosl	equ	0xFFD
 27348                           pclatu	equ	0xFFB
 27349                           pclath	equ	0xFFA
 27350                           tblptru	equ	0xFF8
 27351                           tblptrh	equ	0xFF7
 27352                           tblptrl	equ	0xFF6
 27353                           tablat	equ	0xFF5
 27354                           prodh	equ	0xFF4
 27355                           prodl	equ	0xFF3
 27356                           intcon	equ	0xFF2
 27357                           indf0	equ	0xFEF
 27358                           postinc0	equ	0xFEE
 27359                           fsr0h	equ	0xFEA
 27360                           fsr0l	equ	0xFE9
 27361                           wreg	equ	0xFE8
 27362                           indf1	equ	0xFE7
 27363                           postdec1	equ	0xFE5
 27364                           fsr1h	equ	0xFE2
 27365                           fsr1l	equ	0xFE1
 27366                           bsr	equ	0xFE0
 27367                           indf2	equ	0xFDF
 27368                           postinc2	equ	0xFDE
 27369                           postdec2	equ	0xFDD
 27370                           fsr2h	equ	0xFDA
 27371                           fsr2l	equ	0xFD9
 27372                           status	equ	0xFD8
 27373                           
 27374 ;; *************** function i2___fttol *****************
 27375 ;; Defined at:
 27376 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 27377 ;; Parameters:    Size  Location     Type
 27378 ;;  f1              3   60[COMRAM] float 
 27379 ;; Auto vars:     Size  Location     Type
 27380 ;;  __fttol         4   70[COMRAM] unsigned long 
 27381 ;;  __fttol         1   74[COMRAM] unsigned char 
 27382 ;;  __fttol         1   69[COMRAM] unsigned char 
 27383 ;; Return value:  Size  Location     Type
 27384 ;;                  4   60[COMRAM] long 
 27385 ;; Registers used:
 27386 ;;		wreg, status,2, status,0
 27387 ;; Tracked objects:
 27388 ;;		On entry : 0/0
 27389 ;;		On exit  : 0/0
 27390 ;;		Unchanged: 0/0
 27391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27392 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27393 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27394 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27395 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27396 ;;Total ram usage:       15 bytes
 27397 ;; Hardware stack levels used:    1
 27398 ;; This function calls:
 27399 ;;		Nothing
 27400 ;; This function is called by:
 27401 ;;		_floor
 27402 ;;		i2_printf
 27403 ;; This function uses a non-reentrant model
 27404 ;;
 27405                           
 27406                           	psect	text106
 27407  014A7C                     __ptext106:
 27408                           	opt stack 0
 27409  014A7C                     i2___fttol:
 27410                           	opt stack 15
 27411                           
 27412                           ;incstack = 0
 27413  014A7C  C03F  F041         	movff	i2___fttol@f1+2,??i2___fttol
 27414  014A80  6A42               	clrf	(??i2___fttol+1)& (0+255),c
 27415  014A82  6A43               	clrf	(??i2___fttol+2)& (0+255),c
 27416  014A84  343E               	rlcf	i2___fttol@f1+1,w,c
 27417  014A86  3641               	rlcf	??i2___fttol& (0+255),f,c
 27418  014A88  E301               	bnc	u1577_41
 27419  014A8A  8042               	bsf	(??i2___fttol+1)& (0+255),0,c
 27420  014A8C                     u1577_41:
 27421  014A8C  5041               	movf	??i2___fttol,w,c
 27422  014A8E  6E4B               	movwf	i2___fttol@exp1,c
 27423  014A90  504B               	movf	i2___fttol@exp1,w,c
 27424  014A92  A4D8               	btfss	status,2,c
 27425  014A94  D009               	goto	i2l1696
 27426  014A96  0E00               	movlw	0
 27427  014A98  6E3D               	movwf	?i2___fttol,c
 27428  014A9A  0E00               	movlw	0
 27429  014A9C  6E3E               	movwf	?i2___fttol+1,c
 27430  014A9E  0E00               	movlw	0
 27431  014AA0  6E3F               	movwf	?i2___fttol+2,c
 27432  014AA2  0E00               	movlw	0
 27433  014AA4  6E40               	movwf	?i2___fttol+3,c
 27434  014AA6  0012               	return	
 27435  014AA8                     i2l1696:
 27436  014AA8  0E17               	movlw	23
 27437  014AAA  6E41               	movwf	??i2___fttol& (0+255),c
 27438  014AAC  C03D  F042         	movff	i2___fttol@f1,??i2___fttol+1
 27439  014AB0  C03E  F043         	movff	i2___fttol@f1+1,??i2___fttol+2
 27440  014AB4  C03F  F044         	movff	i2___fttol@f1+2,??i2___fttol+3
 27441  014AB8  2841               	incf	??i2___fttol,w,c
 27442  014ABA  6E45               	movwf	(??i2___fttol+4)& (0+255),c
 27443  014ABC  D004               	goto	i2u1579_40
 27444  014ABE                     i2u1579_45:
 27445  014ABE  90D8               	bcf	status,0,c
 27446  014AC0  3244               	rrcf	??i2___fttol+3,f,c
 27447  014AC2  3243               	rrcf	??i2___fttol+2,f,c
 27448  014AC4  3242               	rrcf	??i2___fttol+1,f,c
 27449  014AC6                     i2u1579_40:
 27450  014AC6  2E45               	decfsz	(??i2___fttol+4)& (0+255),f,c
 27451  014AC8  D7FA               	goto	i2u1579_45
 27452  014ACA  5042               	movf	??i2___fttol+1,w,c
 27453  014ACC  6E46               	movwf	i2___fttol@sign1,c
 27454  014ACE  8E3E               	bsf	i2___fttol@f1+1,7,c
 27455  014AD0  0EFF               	movlw	255
 27456  014AD2  163D               	andwf	i2___fttol@f1,f,c
 27457  014AD4  0EFF               	movlw	255
 27458  014AD6  163E               	andwf	i2___fttol@f1+1,f,c
 27459  014AD8  0E00               	movlw	0
 27460  014ADA  163F               	andwf	i2___fttol@f1+2,f,c
 27461  014ADC  503D               	movf	i2___fttol@f1,w,c
 27462  014ADE  6E47               	movwf	i2___fttol@lval,c
 27463  014AE0  503E               	movf	i2___fttol@f1+1,w,c
 27464  014AE2  6E48               	movwf	i2___fttol@lval+1,c
 27465  014AE4  503F               	movf	i2___fttol@f1+2,w,c
 27466  014AE6  6E49               	movwf	i2___fttol@lval+2,c
 27467  014AE8  6A4A               	clrf	i2___fttol@lval+3,c
 27468  014AEA  0E8E               	movlw	142
 27469  014AEC  5E4B               	subwf	i2___fttol@exp1,f,c
 27470  014AEE  AE4B               	btfss	i2___fttol@exp1,7,c
 27471  014AF0  D016               	goto	i2l1698
 27472  014AF2  504B               	movf	i2___fttol@exp1,w,c
 27473  014AF4  0A80               	xorlw	128
 27474  014AF6  0F8F               	addlw	143
 27475  014AF8  B0D8               	btfsc	status,0,c
 27476  014AFA  D009               	goto	i2l1699
 27477  014AFC  0E00               	movlw	0
 27478  014AFE  6E3D               	movwf	?i2___fttol,c
 27479  014B00  0E00               	movlw	0
 27480  014B02  6E3E               	movwf	?i2___fttol+1,c
 27481  014B04  0E00               	movlw	0
 27482  014B06  6E3F               	movwf	?i2___fttol+2,c
 27483  014B08  0E00               	movlw	0
 27484  014B0A  6E40               	movwf	?i2___fttol+3,c
 27485  014B0C  0012               	return	
 27486  014B0E                     i2l1699:
 27487  014B0E  90D8               	bcf	status,0,c
 27488  014B10  324A               	rrcf	i2___fttol@lval+3,f,c
 27489  014B12  3249               	rrcf	i2___fttol@lval+2,f,c
 27490  014B14  3248               	rrcf	i2___fttol@lval+1,f,c
 27491  014B16  3247               	rrcf	i2___fttol@lval,f,c
 27492  014B18  3E4B               	incfsz	i2___fttol@exp1,f,c
 27493  014B1A  D7F9               	goto	i2l1699
 27494  014B1C  D015               	goto	i2u1583_40
 27495  014B1E                     i2l1698:
 27496  014B1E  0E17               	movlw	23
 27497  014B20  644B               	cpfsgt	i2___fttol@exp1,c
 27498  014B22  D00F               	goto	i2l1704
 27499  014B24  0E00               	movlw	0
 27500  014B26  6E3D               	movwf	?i2___fttol,c
 27501  014B28  0E00               	movlw	0
 27502  014B2A  6E3E               	movwf	?i2___fttol+1,c
 27503  014B2C  0E00               	movlw	0
 27504  014B2E  6E3F               	movwf	?i2___fttol+2,c
 27505  014B30  0E00               	movlw	0
 27506  014B32  6E40               	movwf	?i2___fttol+3,c
 27507  014B34  0012               	return	
 27508  014B36  90D8               	bcf	status,0,c
 27509  014B38  3647               	rlcf	i2___fttol@lval,f,c
 27510  014B3A  3648               	rlcf	i2___fttol@lval+1,f,c
 27511  014B3C  3649               	rlcf	i2___fttol@lval+2,f,c
 27512  014B3E  364A               	rlcf	i2___fttol@lval+3,f,c
 27513  014B40  064B               	decf	i2___fttol@exp1,f,c
 27514  014B42                     i2l1704:
 27515  014B42  504B               	movf	i2___fttol@exp1,w,c
 27516  014B44  A4D8               	btfss	status,2,c
 27517  014B46  D7F7               	goto	i2l1705
 27518  014B48                     i2u1583_40:
 27519  014B48  5046               	movf	i2___fttol@sign1,w,c
 27520  014B4A  B4D8               	btfsc	status,2,c
 27521  014B4C  D008               	goto	i2l1707
 27522  014B4E  1E4A               	comf	i2___fttol@lval+3,f,c
 27523  014B50  1E49               	comf	i2___fttol@lval+2,f,c
 27524  014B52  1E48               	comf	i2___fttol@lval+1,f,c
 27525  014B54  6C47               	negf	i2___fttol@lval,c
 27526  014B56  0E00               	movlw	0
 27527  014B58  2248               	addwfc	i2___fttol@lval+1,f,c
 27528  014B5A  2249               	addwfc	i2___fttol@lval+2,f,c
 27529  014B5C  224A               	addwfc	i2___fttol@lval+3,f,c
 27530  014B5E                     i2l1707:
 27531  014B5E  C047  F03D         	movff	i2___fttol@lval,?i2___fttol
 27532  014B62  C048  F03E         	movff	i2___fttol@lval+1,?i2___fttol+1
 27533  014B66  C049  F03F         	movff	i2___fttol@lval+2,?i2___fttol+2
 27534  014B6A  C04A  F040         	movff	i2___fttol@lval+3,?i2___fttol+3
 27535  014B6E  0012               	return	
 27536  014B70                     __end_ofi2___fttol:
 27537                           	opt stack 0
 27538                           tosu	equ	0xFFF
 27539                           tosh	equ	0xFFE
 27540                           tosl	equ	0xFFD
 27541                           pclatu	equ	0xFFB
 27542                           pclath	equ	0xFFA
 27543                           tblptru	equ	0xFF8
 27544                           tblptrh	equ	0xFF7
 27545                           tblptrl	equ	0xFF6
 27546                           tablat	equ	0xFF5
 27547                           prodh	equ	0xFF4
 27548                           prodl	equ	0xFF3
 27549                           intcon	equ	0xFF2
 27550                           indf0	equ	0xFEF
 27551                           postinc0	equ	0xFEE
 27552                           fsr0h	equ	0xFEA
 27553                           fsr0l	equ	0xFE9
 27554                           wreg	equ	0xFE8
 27555                           indf1	equ	0xFE7
 27556                           postdec1	equ	0xFE5
 27557                           fsr1h	equ	0xFE2
 27558                           fsr1l	equ	0xFE1
 27559                           bsr	equ	0xFE0
 27560                           indf2	equ	0xFDF
 27561                           postinc2	equ	0xFDE
 27562                           postdec2	equ	0xFDD
 27563                           fsr2h	equ	0xFDA
 27564                           fsr2l	equ	0xFD9
 27565                           status	equ	0xFD8
 27566                           
 27567 ;; *************** function i2___ftge *****************
 27568 ;; Defined at:
 27569 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 27570 ;; Parameters:    Size  Location     Type
 27571 ;;  ff1             3   41[COMRAM] float 
 27572 ;;  ff2             3   44[COMRAM] float 
 27573 ;; Auto vars:     Size  Location     Type
 27574 ;;		None
 27575 ;; Return value:  Size  Location     Type
 27576 ;;		None               void
 27577 ;; Registers used:
 27578 ;;		wreg, status,2, status,0
 27579 ;; Tracked objects:
 27580 ;;		On entry : 0/0
 27581 ;;		On exit  : 0/0
 27582 ;;		Unchanged: 0/0
 27583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27584 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27586 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27587 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27588 ;;Total ram usage:        9 bytes
 27589 ;; Hardware stack levels used:    1
 27590 ;; This function calls:
 27591 ;;		Nothing
 27592 ;; This function is called by:
 27593 ;;		_asin
 27594 ;;		_atan
 27595 ;;		_sin
 27596 ;;		_sqrt
 27597 ;;		_floor
 27598 ;;		i2_printf
 27599 ;; This function uses a non-reentrant model
 27600 ;;
 27601                           
 27602                           	psect	text107
 27603  01555A                     __ptext107:
 27604                           	opt stack 0
 27605  01555A                     i2___ftge:
 27606                           	opt stack 15
 27607                           
 27608                           ;incstack = 0
 27609  01555A  AE2C               	btfss	i2___ftge@ff1+2,7,c
 27610  01555C  D016               	goto	i2l1668
 27611  01555E  C02A  F030         	movff	i2___ftge@ff1,??i2___ftge
 27612  015562  C02B  F031         	movff	i2___ftge@ff1+1,??i2___ftge+1
 27613  015566  C02C  F032         	movff	i2___ftge@ff1+2,??i2___ftge+2
 27614  01556A  1E30               	comf	??i2___ftge,f,c
 27615  01556C  1E31               	comf	??i2___ftge+1,f,c
 27616  01556E  1E32               	comf	??i2___ftge+2,f,c
 27617  015570  2A30               	incf	??i2___ftge,f,c
 27618  015572  0E00               	movlw	0
 27619  015574  2231               	addwfc	??i2___ftge+1,f,c
 27620  015576  2232               	addwfc	??i2___ftge+2,f,c
 27621  015578  0E00               	movlw	0
 27622  01557A  2430               	addwf	??i2___ftge,w,c
 27623  01557C  6E2A               	movwf	i2___ftge@ff1,c
 27624  01557E  0E00               	movlw	0
 27625  015580  2031               	addwfc	??i2___ftge+1,w,c
 27626  015582  6E2B               	movwf	i2___ftge@ff1+1,c
 27627  015584  0E80               	movlw	128
 27628  015586  2032               	addwfc	??i2___ftge+2,w,c
 27629  015588  6E2C               	movwf	i2___ftge@ff1+2,c
 27630  01558A                     i2l1668:
 27631  01558A  AE2F               	btfss	i2___ftge@ff2+2,7,c
 27632  01558C  D016               	goto	i2l1669
 27633  01558E  C02D  F030         	movff	i2___ftge@ff2,??i2___ftge
 27634  015592  C02E  F031         	movff	i2___ftge@ff2+1,??i2___ftge+1
 27635  015596  C02F  F032         	movff	i2___ftge@ff2+2,??i2___ftge+2
 27636  01559A  1E30               	comf	??i2___ftge,f,c
 27637  01559C  1E31               	comf	??i2___ftge+1,f,c
 27638  01559E  1E32               	comf	??i2___ftge+2,f,c
 27639  0155A0  2A30               	incf	??i2___ftge,f,c
 27640  0155A2  0E00               	movlw	0
 27641  0155A4  2231               	addwfc	??i2___ftge+1,f,c
 27642  0155A6  2232               	addwfc	??i2___ftge+2,f,c
 27643  0155A8  0E00               	movlw	0
 27644  0155AA  2430               	addwf	??i2___ftge,w,c
 27645  0155AC  6E2D               	movwf	i2___ftge@ff2,c
 27646  0155AE  0E00               	movlw	0
 27647  0155B0  2031               	addwfc	??i2___ftge+1,w,c
 27648  0155B2  6E2E               	movwf	i2___ftge@ff2+1,c
 27649  0155B4  0E80               	movlw	128
 27650  0155B6  2032               	addwfc	??i2___ftge+2,w,c
 27651  0155B8  6E2F               	movwf	i2___ftge@ff2+2,c
 27652  0155BA                     i2l1669:
 27653  0155BA  0E00               	movlw	0
 27654  0155BC  1A2A               	xorwf	i2___ftge@ff1,f,c
 27655  0155BE  0E00               	movlw	0
 27656  0155C0  1A2B               	xorwf	i2___ftge@ff1+1,f,c
 27657  0155C2  0E80               	movlw	128
 27658  0155C4  1A2C               	xorwf	i2___ftge@ff1+2,f,c
 27659  0155C6  0E00               	movlw	0
 27660  0155C8  1A2D               	xorwf	i2___ftge@ff2,f,c
 27661  0155CA  0E00               	movlw	0
 27662  0155CC  1A2E               	xorwf	i2___ftge@ff2+1,f,c
 27663  0155CE  0E80               	movlw	128
 27664  0155D0  1A2F               	xorwf	i2___ftge@ff2+2,f,c
 27665  0155D2  502D               	movf	i2___ftge@ff2,w,c
 27666  0155D4  5C2A               	subwf	i2___ftge@ff1,w,c
 27667  0155D6  502E               	movf	i2___ftge@ff2+1,w,c
 27668  0155D8  582B               	subwfb	i2___ftge@ff1+1,w,c
 27669  0155DA  502F               	movf	i2___ftge@ff2+2,w,c
 27670  0155DC  582C               	subwfb	i2___ftge@ff1+2,w,c
 27671  0155DE  B0D8               	btfsc	status,0,c
 27672  0155E0  D002               	goto	i2l12468
 27673  0155E2  90D8               	bcf	status,0,c
 27674  0155E4  0012               	return	
 27675  0155E6                     i2l12468:
 27676  0155E6  80D8               	bsf	status,0,c
 27677  0155E8  0012               	return	
 27678  0155EA                     __end_ofi2___ftge:
 27679                           	opt stack 0
 27680                           tosu	equ	0xFFF
 27681                           tosh	equ	0xFFE
 27682                           tosl	equ	0xFFD
 27683                           pclatu	equ	0xFFB
 27684                           pclath	equ	0xFFA
 27685                           tblptru	equ	0xFF8
 27686                           tblptrh	equ	0xFF7
 27687                           tblptrl	equ	0xFF6
 27688                           tablat	equ	0xFF5
 27689                           prodh	equ	0xFF4
 27690                           prodl	equ	0xFF3
 27691                           intcon	equ	0xFF2
 27692                           indf0	equ	0xFEF
 27693                           postinc0	equ	0xFEE
 27694                           fsr0h	equ	0xFEA
 27695                           fsr0l	equ	0xFE9
 27696                           wreg	equ	0xFE8
 27697                           indf1	equ	0xFE7
 27698                           postdec1	equ	0xFE5
 27699                           fsr1h	equ	0xFE2
 27700                           fsr1l	equ	0xFE1
 27701                           bsr	equ	0xFE0
 27702                           indf2	equ	0xFDF
 27703                           postinc2	equ	0xFDE
 27704                           postdec2	equ	0xFDD
 27705                           fsr2h	equ	0xFDA
 27706                           fsr2l	equ	0xFD9
 27707                           status	equ	0xFD8
 27708                           
 27709 ;; *************** function _frexp *****************
 27710 ;; Defined at:
 27711 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 27712 ;; Parameters:    Size  Location     Type
 27713 ;;  value           3    0[COMRAM] float 
 27714 ;;  eptr            2    3[COMRAM] PTR int 
 27715 ;;		 -> floor@expon(2), 
 27716 ;; Auto vars:     Size  Location     Type
 27717 ;;		None
 27718 ;; Return value:  Size  Location     Type
 27719 ;;                  3    0[COMRAM] PTR int 
 27720 ;; Registers used:
 27721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27722 ;; Tracked objects:
 27723 ;;		On entry : 0/0
 27724 ;;		On exit  : 0/0
 27725 ;;		Unchanged: 0/0
 27726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27727 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27730 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27731 ;;Total ram usage:        7 bytes
 27732 ;; Hardware stack levels used:    1
 27733 ;; This function calls:
 27734 ;;		Nothing
 27735 ;; This function is called by:
 27736 ;;		_floor
 27737 ;; This function uses a non-reentrant model
 27738 ;;
 27739                           
 27740                           	psect	text108
 27741  015910                     __ptext108:
 27742                           	opt stack 0
 27743  015910                     _frexp:
 27744                           	opt stack 12
 27745                           
 27746                           ;incstack = 0
 27747  015910  5001               	movf	frexp@value,w,c
 27748  015912  1002               	iorwf	frexp@value+1,w,c
 27749  015914  1003               	iorwf	frexp@value+2,w,c
 27750  015916  A4D8               	btfss	status,2,c
 27751  015918  D009               	goto	i2l2046
 27752  01591A  C004  FFD9         	movff	frexp@eptr,fsr2l
 27753  01591E  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 27754  015922  0E00               	movlw	0
 27755  015924  6EDE               	movwf	postinc2,c
 27756  015926  0E00               	movlw	0
 27757  015928  6EDD               	movwf	postdec2,c
 27758                           
 27759                           ;	Return value of _frexp is never used
 27760  01592A  0012               	return	
 27761  01592C                     i2l2046:
 27762  01592C  5003               	movf	frexp@value+2,w,c
 27763  01592E  0B7F               	andlw	127
 27764  015930  6E06               	movwf	??_frexp& (0+255),c
 27765  015932  6A07               	clrf	(??_frexp+1)& (0+255),c
 27766  015934  90D8               	bcf	status,0,c
 27767  015936  3606               	rlcf	??_frexp,f,c
 27768  015938  3607               	rlcf	??_frexp+1,f,c
 27769  01593A  C004  FFD9         	movff	frexp@eptr,fsr2l
 27770  01593E  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 27771  015942  C006  FFDE         	movff	??_frexp,postinc2
 27772  015946  C007  FFDD         	movff	??_frexp+1,postdec2
 27773  01594A  AE02               	btfss	frexp@value+1,7,c
 27774  01594C  D003               	goto	i2u1576_40
 27775  01594E  6A06               	clrf	??_frexp& (0+255),c
 27776  015950  2A06               	incf	??_frexp& (0+255),f,c
 27777  015952  D001               	goto	i2u1576_48
 27778  015954                     i2u1576_40:
 27779  015954  6A06               	clrf	??_frexp& (0+255),c
 27780  015956                     i2u1576_48:
 27781  015956  5006               	movf	??_frexp,w,c
 27782  015958  C004  FFD9         	movff	frexp@eptr,fsr2l
 27783  01595C  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 27784  015960  12DE               	iorwf	postinc2,f,c
 27785  015962  0E00               	movlw	0
 27786  015964  12DD               	iorwf	postdec2,f,c
 27787  015966  C004  FFD9         	movff	frexp@eptr,fsr2l
 27788  01596A  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 27789  01596E  0E82               	movlw	130
 27790  015970  26DE               	addwf	postinc2,f,c
 27791  015972  0EFF               	movlw	255
 27792  015974  22DD               	addwfc	postdec2,f,c
 27793  015976  8003               	bsf	frexp@value+2,0,c
 27794  015978  8203               	bsf	frexp@value+2,1,c
 27795  01597A  8403               	bsf	frexp@value+2,2,c
 27796  01597C  8603               	bsf	frexp@value+2,3,c
 27797  01597E  8803               	bsf	frexp@value+2,4,c
 27798  015980  8A03               	bsf	frexp@value+2,5,c
 27799  015982  9C03               	bcf	frexp@value+2,6,c
 27800  015984  9E02               	bcf	frexp@value+1,7,c
 27801  015986  0012               	return	
 27802  015988                     __end_of_frexp:
 27803                           	opt stack 0
 27804                           tosu	equ	0xFFF
 27805                           tosh	equ	0xFFE
 27806                           tosl	equ	0xFFD
 27807                           pclatu	equ	0xFFB
 27808                           pclath	equ	0xFFA
 27809                           tblptru	equ	0xFF8
 27810                           tblptrh	equ	0xFF7
 27811                           tblptrl	equ	0xFF6
 27812                           tablat	equ	0xFF5
 27813                           prodh	equ	0xFF4
 27814                           prodl	equ	0xFF3
 27815                           intcon	equ	0xFF2
 27816                           indf0	equ	0xFEF
 27817                           postinc0	equ	0xFEE
 27818                           fsr0h	equ	0xFEA
 27819                           fsr0l	equ	0xFE9
 27820                           wreg	equ	0xFE8
 27821                           indf1	equ	0xFE7
 27822                           postdec1	equ	0xFE5
 27823                           fsr1h	equ	0xFE2
 27824                           fsr1l	equ	0xFE1
 27825                           bsr	equ	0xFE0
 27826                           indf2	equ	0xFDF
 27827                           postinc2	equ	0xFDE
 27828                           postdec2	equ	0xFDD
 27829                           fsr2h	equ	0xFDA
 27830                           fsr2l	equ	0xFD9
 27831                           status	equ	0xFD8
 27832                           
 27833 ;; *************** function ___altoft *****************
 27834 ;; Defined at:
 27835 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 27836 ;; Parameters:    Size  Location     Type
 27837 ;;  c               4   75[COMRAM] long 
 27838 ;; Auto vars:     Size  Location     Type
 27839 ;;  sign            1   84[COMRAM] unsigned char 
 27840 ;;  exp             1   83[COMRAM] unsigned char 
 27841 ;; Return value:  Size  Location     Type
 27842 ;;                  3   75[COMRAM] float 
 27843 ;; Registers used:
 27844 ;;		wreg, status,2, status,0, cstack
 27845 ;; Tracked objects:
 27846 ;;		On entry : 0/0
 27847 ;;		On exit  : 0/0
 27848 ;;		Unchanged: 0/0
 27849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27850 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27851 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27852 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27853 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27854 ;;Total ram usage:       10 bytes
 27855 ;; Hardware stack levels used:    1
 27856 ;; Hardware stack levels required when called:    1
 27857 ;; This function calls:
 27858 ;;		i2___ftpack
 27859 ;; This function is called by:
 27860 ;;		_floor
 27861 ;; This function uses a non-reentrant model
 27862 ;;
 27863                           
 27864                           	psect	text109
 27865  015988                     __ptext109:
 27866                           	opt stack 0
 27867  015988                     ___altoft:
 27868                           	opt stack 11
 27869                           
 27870                           ;incstack = 0
 27871  015988  0E00               	movlw	0
 27872  01598A  6E55               	movwf	___altoft@sign,c
 27873  01598C  0E8E               	movlw	142
 27874  01598E  6E54               	movwf	___altoft@exp,c
 27875  015990  AE4F               	btfss	___altoft@c+3,7,c
 27876  015992  D011               	goto	i2l1373
 27877  015994  1E4F               	comf	___altoft@c+3,f,c
 27878  015996  1E4E               	comf	___altoft@c+2,f,c
 27879  015998  1E4D               	comf	___altoft@c+1,f,c
 27880  01599A  6C4C               	negf	___altoft@c,c
 27881  01599C  0E00               	movlw	0
 27882  01599E  224D               	addwfc	___altoft@c+1,f,c
 27883  0159A0  224E               	addwfc	___altoft@c+2,f,c
 27884  0159A2  224F               	addwfc	___altoft@c+3,f,c
 27885  0159A4  0E01               	movlw	1
 27886  0159A6  6E55               	movwf	___altoft@sign,c
 27887  0159A8  D006               	goto	i2l1373
 27888  0159AA  90D8               	bcf	status,0,c
 27889  0159AC  324F               	rrcf	___altoft@c+3,f,c
 27890  0159AE  324E               	rrcf	___altoft@c+2,f,c
 27891  0159B0  324D               	rrcf	___altoft@c+1,f,c
 27892  0159B2  324C               	rrcf	___altoft@c,f,c
 27893  0159B4  2A54               	incf	___altoft@exp,f,c
 27894  0159B6                     i2l1373:
 27895  0159B6  0E00               	movlw	0
 27896  0159B8  144C               	andwf	___altoft@c,w,c
 27897  0159BA  6E50               	movwf	??___altoft& (0+255),c
 27898  0159BC  0E00               	movlw	0
 27899  0159BE  144D               	andwf	___altoft@c+1,w,c
 27900  0159C0  6E51               	movwf	(??___altoft+1)& (0+255),c
 27901  0159C2  0E00               	movlw	0
 27902  0159C4  144E               	andwf	___altoft@c+2,w,c
 27903  0159C6  6E52               	movwf	(??___altoft+2)& (0+255),c
 27904  0159C8  0EFF               	movlw	255
 27905  0159CA  144F               	andwf	___altoft@c+3,w,c
 27906  0159CC  6E53               	movwf	(??___altoft+3)& (0+255),c
 27907  0159CE  5050               	movf	??___altoft,w,c
 27908  0159D0  1051               	iorwf	??___altoft+1,w,c
 27909  0159D2  1052               	iorwf	??___altoft+2,w,c
 27910  0159D4  1053               	iorwf	??___altoft+3,w,c
 27911  0159D6  A4D8               	btfss	status,2,c
 27912  0159D8  D7E8               	goto	i2l1374
 27913  0159DA  C04C  F001         	movff	___altoft@c,i2___ftpack@arg
 27914  0159DE  C04D  F002         	movff	___altoft@c+1,i2___ftpack@arg+1
 27915  0159E2  C04E  F003         	movff	___altoft@c+2,i2___ftpack@arg+2
 27916  0159E6  C054  F004         	movff	___altoft@exp,i2___ftpack@exp
 27917  0159EA  C055  F005         	movff	___altoft@sign,i2___ftpack@sign
 27918  0159EE  EC1F  F0A9         	call	i2___ftpack	;wreg free
 27919  0159F2  C001  F04C         	movff	?i2___ftpack,?___altoft
 27920  0159F6  C002  F04D         	movff	?i2___ftpack+1,?___altoft+1
 27921  0159FA  C003  F04E         	movff	?i2___ftpack+2,?___altoft+2
 27922  0159FE  0012               	return	
 27923  015A00                     __end_of___altoft:
 27924                           	opt stack 0
 27925                           tosu	equ	0xFFF
 27926                           tosh	equ	0xFFE
 27927                           tosl	equ	0xFFD
 27928                           pclatu	equ	0xFFB
 27929                           pclath	equ	0xFFA
 27930                           tblptru	equ	0xFF8
 27931                           tblptrh	equ	0xFF7
 27932                           tblptrl	equ	0xFF6
 27933                           tablat	equ	0xFF5
 27934                           prodh	equ	0xFF4
 27935                           prodl	equ	0xFF3
 27936                           intcon	equ	0xFF2
 27937                           indf0	equ	0xFEF
 27938                           postinc0	equ	0xFEE
 27939                           fsr0h	equ	0xFEA
 27940                           fsr0l	equ	0xFE9
 27941                           wreg	equ	0xFE8
 27942                           indf1	equ	0xFE7
 27943                           postdec1	equ	0xFE5
 27944                           fsr1h	equ	0xFE2
 27945                           fsr1l	equ	0xFE1
 27946                           bsr	equ	0xFE0
 27947                           indf2	equ	0xFDF
 27948                           postinc2	equ	0xFDE
 27949                           postdec2	equ	0xFDD
 27950                           fsr2h	equ	0xFDA
 27951                           fsr2l	equ	0xFD9
 27952                           status	equ	0xFD8
 27953                           
 27954 ;; *************** function _eval_poly *****************
 27955 ;; Defined at:
 27956 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 27957 ;; Parameters:    Size  Location     Type
 27958 ;;  x               3   75[COMRAM] float 
 27959 ;;  d               2   78[COMRAM] PTR const 
 27960 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), atan@coeff_a(18), atan@coeff_b(15), 
 27961 ;;  n               2   80[COMRAM] int 
 27962 ;; Auto vars:     Size  Location     Type
 27963 ;;  res             3   84[COMRAM] int 
 27964 ;; Return value:  Size  Location     Type
 27965 ;;                  3   75[COMRAM] int 
 27966 ;; Registers used:
 27967 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27968 ;; Tracked objects:
 27969 ;;		On entry : 0/0
 27970 ;;		On exit  : 0/0
 27971 ;;		Unchanged: 0/0
 27972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27973 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27974 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27975 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27976 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27977 ;;Total ram usage:       12 bytes
 27978 ;; Hardware stack levels used:    1
 27979 ;; Hardware stack levels required when called:    2
 27980 ;; This function calls:
 27981 ;;		i2___ftadd
 27982 ;;		i2___ftmul
 27983 ;;		i2___wmul
 27984 ;; This function is called by:
 27985 ;;		_atan
 27986 ;;		_sin
 27987 ;; This function uses a non-reentrant model
 27988 ;;
 27989                           
 27990                           	psect	text110
 27991  014F10                     __ptext110:
 27992                           	opt stack 0
 27993  014F10                     _eval_poly:
 27994                           	opt stack 11
 27995                           
 27996                           ;incstack = 0
 27997  014F10  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 27998  014F14  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 27999  014F18  0E00               	movlw	0
 28000  014F1A  6E12               	movwf	i2___wmul@multiplicand+1,c
 28001  014F1C  0E03               	movlw	3
 28002  014F1E  6E11               	movwf	i2___wmul@multiplicand,c
 28003  014F20  ECBF  F0B2         	call	i2___wmul	;wreg free
 28004  014F24  C04F  F053         	movff	eval_poly@d,??_eval_poly
 28005  014F28  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 28006  014F2C  500F               	movf	?i2___wmul,w,c
 28007  014F2E  2653               	addwf	??_eval_poly,f,c
 28008  014F30  5010               	movf	?i2___wmul+1,w,c
 28009  014F32  2254               	addwfc	??_eval_poly+1,f,c
 28010  014F34  C053  FFF6         	movff	??_eval_poly,tblptrl
 28011  014F38  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 28012  014F3C                     	if	0	;tblptru may be non-zero
 28013  014F3C                     	endif
 28014  014F3C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28015  014F3C  0E00               	movlw	low (__mediumconst shr (0+16))
 28016  014F3E  6EF8               	movwf	tblptru,c
 28017  014F40                     	endif
 28018  014F40  0009               	tblrd		*+
 28019  014F42  CFF5 F055          	movff	tablat,eval_poly@res
 28020  014F46  0009               	tblrd		*+
 28021  014F48  CFF5 F056          	movff	tablat,eval_poly@res+1
 28022  014F4C  000A               	tblrd		*-
 28023  014F4E  CFF5 F057          	movff	tablat,eval_poly@res+2
 28024  014F52  D040               	goto	i2l1537
 28025  014F54  C055  F02A         	movff	eval_poly@res,i2___ftmul@f2
 28026  014F58  C056  F02B         	movff	eval_poly@res+1,i2___ftmul@f2+1
 28027  014F5C  C057  F02C         	movff	eval_poly@res+2,i2___ftmul@f2+2
 28028  014F60  C04C  F027         	movff	eval_poly@x,i2___ftmul@f1
 28029  014F64  C04D  F028         	movff	eval_poly@x+1,i2___ftmul@f1+1
 28030  014F68  C04E  F029         	movff	eval_poly@x+2,i2___ftmul@f1+2
 28031  014F6C  ECB8  F0A5         	call	i2___ftmul	;wreg free
 28032  014F70  C027  F040         	movff	?i2___ftmul,i2___ftadd@f1
 28033  014F74  C028  F041         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 28034  014F78  C029  F042         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 28035  014F7C  0E00               	movlw	0
 28036  014F7E  6E12               	movwf	i2___wmul@multiplicand+1,c
 28037  014F80  0E03               	movlw	3
 28038  014F82  6E11               	movwf	i2___wmul@multiplicand,c
 28039  014F84  0651               	decf	eval_poly@n,f,c
 28040  014F86  A0D8               	btfss	status,0,c
 28041  014F88  0652               	decf	eval_poly@n+1,f,c
 28042  014F8A  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 28043  014F8E  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 28044  014F92  ECBF  F0B2         	call	i2___wmul	;wreg free
 28045  014F96  C04F  F053         	movff	eval_poly@d,??_eval_poly
 28046  014F9A  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 28047  014F9E  500F               	movf	?i2___wmul,w,c
 28048  014FA0  2653               	addwf	??_eval_poly,f,c
 28049  014FA2  5010               	movf	?i2___wmul+1,w,c
 28050  014FA4  2254               	addwfc	??_eval_poly+1,f,c
 28051  014FA6  C053  FFF6         	movff	??_eval_poly,tblptrl
 28052  014FAA  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 28053  014FAE                     	if	0	;tblptru may be non-zero
 28054  014FAE                     	endif
 28055  014FAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28056  014FAE  0E00               	movlw	low (__mediumconst shr (0+16))
 28057  014FB0  6EF8               	movwf	tblptru,c
 28058  014FB2                     	endif
 28059  014FB2  0009               	tblrd		*+
 28060  014FB4  CFF5 F043          	movff	tablat,i2___ftadd@f2
 28061  014FB8  0009               	tblrd		*+
 28062  014FBA  CFF5 F044          	movff	tablat,i2___ftadd@f2+1
 28063  014FBE  000A               	tblrd		*-
 28064  014FC0  CFF5 F045          	movff	tablat,i2___ftadd@f2+2
 28065  014FC4  ECBE  F09F         	call	i2___ftadd	;wreg free
 28066  014FC8  C040  F055         	movff	?i2___ftadd,eval_poly@res
 28067  014FCC  C041  F056         	movff	?i2___ftadd+1,eval_poly@res+1
 28068  014FD0  C042  F057         	movff	?i2___ftadd+2,eval_poly@res+2
 28069  014FD4                     i2l1537:
 28070  014FD4  5051               	movf	eval_poly@n,w,c
 28071  014FD6  1052               	iorwf	eval_poly@n+1,w,c
 28072  014FD8  A4D8               	btfss	status,2,c
 28073  014FDA  D7BC               	goto	i2l1538
 28074  014FDC  C055  F04C         	movff	eval_poly@res,?_eval_poly
 28075  014FE0  C056  F04D         	movff	eval_poly@res+1,?_eval_poly+1
 28076  014FE4  C057  F04E         	movff	eval_poly@res+2,?_eval_poly+2
 28077  014FE8  0012               	return		;funcret
 28078  014FEA                     __end_of_eval_poly:
 28079                           	opt stack 0
 28080                           tosu	equ	0xFFF
 28081                           tosh	equ	0xFFE
 28082                           tosl	equ	0xFFD
 28083                           pclatu	equ	0xFFB
 28084                           pclath	equ	0xFFA
 28085                           tblptru	equ	0xFF8
 28086                           tblptrh	equ	0xFF7
 28087                           tblptrl	equ	0xFF6
 28088                           tablat	equ	0xFF5
 28089                           prodh	equ	0xFF4
 28090                           prodl	equ	0xFF3
 28091                           intcon	equ	0xFF2
 28092                           indf0	equ	0xFEF
 28093                           postinc0	equ	0xFEE
 28094                           fsr0h	equ	0xFEA
 28095                           fsr0l	equ	0xFE9
 28096                           wreg	equ	0xFE8
 28097                           indf1	equ	0xFE7
 28098                           postdec1	equ	0xFE5
 28099                           fsr1h	equ	0xFE2
 28100                           fsr1l	equ	0xFE1
 28101                           bsr	equ	0xFE0
 28102                           indf2	equ	0xFDF
 28103                           postinc2	equ	0xFDE
 28104                           postdec2	equ	0xFDD
 28105                           fsr2h	equ	0xFDA
 28106                           fsr2l	equ	0xFD9
 28107                           status	equ	0xFD8
 28108                           
 28109 ;; *************** function i2___wmul *****************
 28110 ;; Defined at:
 28111 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 28112 ;; Parameters:    Size  Location     Type
 28113 ;;  multiplier      2   14[COMRAM] unsigned int 
 28114 ;;  multiplicand    2   16[COMRAM] unsigned int 
 28115 ;; Auto vars:     Size  Location     Type
 28116 ;;  __wmul          2   18[COMRAM] unsigned int 
 28117 ;; Return value:  Size  Location     Type
 28118 ;;                  2   14[COMRAM] unsigned int 
 28119 ;; Registers used:
 28120 ;;		wreg, status,2, status,0, prodl, prodh
 28121 ;; Tracked objects:
 28122 ;;		On entry : 0/0
 28123 ;;		On exit  : 0/0
 28124 ;;		Unchanged: 0/0
 28125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28127 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28129 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28130 ;;Total ram usage:        6 bytes
 28131 ;; Hardware stack levels used:    1
 28132 ;; This function calls:
 28133 ;;		Nothing
 28134 ;; This function is called by:
 28135 ;;		_eval_poly
 28136 ;;		i2_fround
 28137 ;;		i2_scale
 28138 ;;		i2_printf
 28139 ;; This function uses a non-reentrant model
 28140 ;;
 28141                           
 28142                           	psect	text111
 28143  01657E                     __ptext111:
 28144                           	opt stack 0
 28145  01657E                     i2___wmul:
 28146                           	opt stack 14
 28147                           
 28148                           ;incstack = 0
 28149  01657E  500F               	movf	i2___wmul@multiplier,w,c
 28150  016580  0211               	mulwf	i2___wmul@multiplicand,c
 28151  016582  CFF3 F013          	movff	prodl,i2___wmul@product
 28152  016586  CFF4 F014          	movff	prodh,i2___wmul@product+1
 28153  01658A  500F               	movf	i2___wmul@multiplier,w,c
 28154  01658C  0212               	mulwf	i2___wmul@multiplicand+1,c
 28155  01658E  50F3               	movf	prodl,w,c
 28156  016590  2614               	addwf	i2___wmul@product+1,f,c
 28157  016592  5010               	movf	i2___wmul@multiplier+1,w,c
 28158  016594  0211               	mulwf	i2___wmul@multiplicand,c
 28159  016596  50F3               	movf	prodl,w,c
 28160  016598  2614               	addwf	i2___wmul@product+1,f,c
 28161  01659A  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 28162  01659E  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 28163  0165A2  0012               	return	
 28164  0165A4                     __end_ofi2___wmul:
 28165                           	opt stack 0
 28166                           tosu	equ	0xFFF
 28167                           tosh	equ	0xFFE
 28168                           tosl	equ	0xFFD
 28169                           pclatu	equ	0xFFB
 28170                           pclath	equ	0xFFA
 28171                           tblptru	equ	0xFF8
 28172                           tblptrh	equ	0xFF7
 28173                           tblptrl	equ	0xFF6
 28174                           tablat	equ	0xFF5
 28175                           prodh	equ	0xFF4
 28176                           prodl	equ	0xFF3
 28177                           intcon	equ	0xFF2
 28178                           indf0	equ	0xFEF
 28179                           postinc0	equ	0xFEE
 28180                           fsr0h	equ	0xFEA
 28181                           fsr0l	equ	0xFE9
 28182                           wreg	equ	0xFE8
 28183                           indf1	equ	0xFE7
 28184                           postdec1	equ	0xFE5
 28185                           fsr1h	equ	0xFE2
 28186                           fsr1l	equ	0xFE1
 28187                           bsr	equ	0xFE0
 28188                           indf2	equ	0xFDF
 28189                           postinc2	equ	0xFDE
 28190                           postdec2	equ	0xFDD
 28191                           fsr2h	equ	0xFDA
 28192                           fsr2l	equ	0xFD9
 28193                           status	equ	0xFD8
 28194                           
 28195 ;; *************** function i2___ftmul *****************
 28196 ;; Defined at:
 28197 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 28198 ;; Parameters:    Size  Location     Type
 28199 ;;  f1              3   38[COMRAM] float 
 28200 ;;  f2              3   41[COMRAM] float 
 28201 ;; Auto vars:     Size  Location     Type
 28202 ;;  __ftmul         3   48[COMRAM] unsigned um
 28203 ;;  __ftmul         1   52[COMRAM] unsigned char 
 28204 ;;  __ftmul         1   51[COMRAM] unsigned char 
 28205 ;;  __ftmul         1   47[COMRAM] unsigned char 
 28206 ;; Return value:  Size  Location     Type
 28207 ;;                  3   38[COMRAM] float 
 28208 ;; Registers used:
 28209 ;;		wreg, status,2, status,0, cstack
 28210 ;; Tracked objects:
 28211 ;;		On entry : 0/0
 28212 ;;		On exit  : 0/0
 28213 ;;		Unchanged: 0/0
 28214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28215 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28216 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28217 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28218 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28219 ;;Total ram usage:       15 bytes
 28220 ;; Hardware stack levels used:    1
 28221 ;; Hardware stack levels required when called:    1
 28222 ;; This function calls:
 28223 ;;		i2___ftpack
 28224 ;; This function is called by:
 28225 ;;		_peakToRMS
 28226 ;;		_ADC_postProcessingCallback
 28227 ;;		_asin
 28228 ;;		_atan
 28229 ;;		_eval_poly
 28230 ;;		_sin
 28231 ;;		_sqrt
 28232 ;;		i2_fround
 28233 ;;		i2_scale
 28234 ;;		i2_printf
 28235 ;; This function uses a non-reentrant model
 28236 ;;
 28237                           
 28238                           	psect	text112
 28239  014B70                     __ptext112:
 28240                           	opt stack 0
 28241  014B70                     i2___ftmul:
 28242                           	opt stack 13
 28243                           
 28244                           ;incstack = 0
 28245  014B70  C029  F02D         	movff	i2___ftmul@f1+2,??i2___ftmul
 28246  014B74  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 28247  014B76  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 28248  014B78  3428               	rlcf	i2___ftmul@f1+1,w,c
 28249  014B7A  362D               	rlcf	??i2___ftmul& (0+255),f,c
 28250  014B7C  E301               	bnc	u1547_41
 28251  014B7E  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 28252  014B80                     u1547_41:
 28253  014B80  502D               	movf	??i2___ftmul,w,c
 28254  014B82  6E30               	movwf	i2___ftmul@exp,c
 28255  014B84  5030               	movf	i2___ftmul@exp,w,c
 28256  014B86  A4D8               	btfss	status,2,c
 28257  014B88  D007               	goto	i2l1675
 28258  014B8A  0E00               	movlw	0
 28259  014B8C  6E27               	movwf	?i2___ftmul,c
 28260  014B8E  0E00               	movlw	0
 28261  014B90  6E28               	movwf	?i2___ftmul+1,c
 28262  014B92  0E00               	movlw	0
 28263  014B94  6E29               	movwf	?i2___ftmul+2,c
 28264  014B96  0012               	return	
 28265  014B98                     i2l1675:
 28266  014B98  C02C  F02D         	movff	i2___ftmul@f2+2,??i2___ftmul
 28267  014B9C  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 28268  014B9E  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 28269  014BA0  342B               	rlcf	i2___ftmul@f2+1,w,c
 28270  014BA2  362D               	rlcf	??i2___ftmul& (0+255),f,c
 28271  014BA4  E301               	bnc	u1549_41
 28272  014BA6  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 28273  014BA8                     u1549_41:
 28274  014BA8  502D               	movf	??i2___ftmul,w,c
 28275  014BAA  6E35               	movwf	i2___ftmul@sign,c
 28276  014BAC  5035               	movf	i2___ftmul@sign,w,c
 28277  014BAE  A4D8               	btfss	status,2,c
 28278  014BB0  D007               	goto	i2l1677
 28279  014BB2  0E00               	movlw	0
 28280  014BB4  6E27               	movwf	?i2___ftmul,c
 28281  014BB6  0E00               	movlw	0
 28282  014BB8  6E28               	movwf	?i2___ftmul+1,c
 28283  014BBA  0E00               	movlw	0
 28284  014BBC  6E29               	movwf	?i2___ftmul+2,c
 28285  014BBE  0012               	return	
 28286  014BC0                     i2l1677:
 28287  014BC0  5035               	movf	i2___ftmul@sign,w,c
 28288  014BC2  0F7B               	addlw	123
 28289  014BC4  2630               	addwf	i2___ftmul@exp,f,c
 28290  014BC6  C029  F035         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 28291  014BCA  502C               	movf	i2___ftmul@f2+2,w,c
 28292  014BCC  1A35               	xorwf	i2___ftmul@sign,f,c
 28293  014BCE  0E80               	movlw	128
 28294  014BD0  1635               	andwf	i2___ftmul@sign,f,c
 28295  014BD2  8E28               	bsf	i2___ftmul@f1+1,7,c
 28296  014BD4  8E2B               	bsf	i2___ftmul@f2+1,7,c
 28297  014BD6  0EFF               	movlw	255
 28298  014BD8  162A               	andwf	i2___ftmul@f2,f,c
 28299  014BDA  0EFF               	movlw	255
 28300  014BDC  162B               	andwf	i2___ftmul@f2+1,f,c
 28301  014BDE  0E00               	movlw	0
 28302  014BE0  162C               	andwf	i2___ftmul@f2+2,f,c
 28303  014BE2  0E00               	movlw	0
 28304  014BE4  6E31               	movwf	i2___ftmul@f3_as_product,c
 28305  014BE6  0E00               	movlw	0
 28306  014BE8  6E32               	movwf	i2___ftmul@f3_as_product+1,c
 28307  014BEA  0E00               	movlw	0
 28308  014BEC  6E33               	movwf	i2___ftmul@f3_as_product+2,c
 28309  014BEE  0E07               	movlw	7
 28310  014BF0  6E34               	movwf	i2___ftmul@cntr,c
 28311  014BF2  A027               	btfss	i2___ftmul@f1,0,c
 28312  014BF4  D006               	goto	i2l1679
 28313  014BF6  502A               	movf	i2___ftmul@f2,w,c
 28314  014BF8  2631               	addwf	i2___ftmul@f3_as_product,f,c
 28315  014BFA  502B               	movf	i2___ftmul@f2+1,w,c
 28316  014BFC  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 28317  014BFE  502C               	movf	i2___ftmul@f2+2,w,c
 28318  014C00  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 28319  014C02                     i2l1679:
 28320  014C02  90D8               	bcf	status,0,c
 28321  014C04  3229               	rrcf	i2___ftmul@f1+2,f,c
 28322  014C06  3228               	rrcf	i2___ftmul@f1+1,f,c
 28323  014C08  3227               	rrcf	i2___ftmul@f1,f,c
 28324  014C0A  90D8               	bcf	status,0,c
 28325  014C0C  362A               	rlcf	i2___ftmul@f2,f,c
 28326  014C0E  362B               	rlcf	i2___ftmul@f2+1,f,c
 28327  014C10  362C               	rlcf	i2___ftmul@f2+2,f,c
 28328  014C12  2E34               	decfsz	i2___ftmul@cntr,f,c
 28329  014C14  D7EE               	goto	i2l1678
 28330  014C16  0E09               	movlw	9
 28331  014C18  6E34               	movwf	i2___ftmul@cntr,c
 28332  014C1A  A027               	btfss	i2___ftmul@f1,0,c
 28333  014C1C  D006               	goto	i2l1682
 28334  014C1E  502A               	movf	i2___ftmul@f2,w,c
 28335  014C20  2631               	addwf	i2___ftmul@f3_as_product,f,c
 28336  014C22  502B               	movf	i2___ftmul@f2+1,w,c
 28337  014C24  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 28338  014C26  502C               	movf	i2___ftmul@f2+2,w,c
 28339  014C28  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 28340  014C2A                     i2l1682:
 28341  014C2A  90D8               	bcf	status,0,c
 28342  014C2C  3229               	rrcf	i2___ftmul@f1+2,f,c
 28343  014C2E  3228               	rrcf	i2___ftmul@f1+1,f,c
 28344  014C30  3227               	rrcf	i2___ftmul@f1,f,c
 28345  014C32  90D8               	bcf	status,0,c
 28346  014C34  3233               	rrcf	i2___ftmul@f3_as_product+2,f,c
 28347  014C36  3232               	rrcf	i2___ftmul@f3_as_product+1,f,c
 28348  014C38  3231               	rrcf	i2___ftmul@f3_as_product,f,c
 28349  014C3A  2E34               	decfsz	i2___ftmul@cntr,f,c
 28350  014C3C  D7EE               	goto	i2l1681
 28351  014C3E  C031  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 28352  014C42  C032  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 28353  014C46  C033  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 28354  014C4A  C030  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 28355  014C4E  C035  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 28356  014C52  EC1F  F0A9         	call	i2___ftpack	;wreg free
 28357  014C56  C001  F027         	movff	?i2___ftpack,?i2___ftmul
 28358  014C5A  C002  F028         	movff	?i2___ftpack+1,?i2___ftmul+1
 28359  014C5E  C003  F029         	movff	?i2___ftpack+2,?i2___ftmul+2
 28360  014C62  0012               	return	
 28361  014C64                     __end_ofi2___ftmul:
 28362                           	opt stack 0
 28363                           tosu	equ	0xFFF
 28364                           tosh	equ	0xFFE
 28365                           tosl	equ	0xFFD
 28366                           pclatu	equ	0xFFB
 28367                           pclath	equ	0xFFA
 28368                           tblptru	equ	0xFF8
 28369                           tblptrh	equ	0xFF7
 28370                           tblptrl	equ	0xFF6
 28371                           tablat	equ	0xFF5
 28372                           prodh	equ	0xFF4
 28373                           prodl	equ	0xFF3
 28374                           intcon	equ	0xFF2
 28375                           indf0	equ	0xFEF
 28376                           postinc0	equ	0xFEE
 28377                           fsr0h	equ	0xFEA
 28378                           fsr0l	equ	0xFE9
 28379                           wreg	equ	0xFE8
 28380                           indf1	equ	0xFE7
 28381                           postdec1	equ	0xFE5
 28382                           fsr1h	equ	0xFE2
 28383                           fsr1l	equ	0xFE1
 28384                           bsr	equ	0xFE0
 28385                           indf2	equ	0xFDF
 28386                           postinc2	equ	0xFDE
 28387                           postdec2	equ	0xFDD
 28388                           fsr2h	equ	0xFDA
 28389                           fsr2l	equ	0xFD9
 28390                           status	equ	0xFD8
 28391                           
 28392 ;; *************** function i2___ftadd *****************
 28393 ;; Defined at:
 28394 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 28395 ;; Parameters:    Size  Location     Type
 28396 ;;  f1              3   63[COMRAM] float 
 28397 ;;  f2              3   66[COMRAM] float 
 28398 ;; Auto vars:     Size  Location     Type
 28399 ;;  __ftadd         1   74[COMRAM] unsigned char 
 28400 ;;  __ftadd         1   73[COMRAM] unsigned char 
 28401 ;;  __ftadd         1   72[COMRAM] unsigned char 
 28402 ;; Return value:  Size  Location     Type
 28403 ;;                  3   63[COMRAM] float 
 28404 ;; Registers used:
 28405 ;;		wreg, status,2, status,0, cstack
 28406 ;; Tracked objects:
 28407 ;;		On entry : 0/0
 28408 ;;		On exit  : 0/0
 28409 ;;		Unchanged: 0/0
 28410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28411 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28412 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28413 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28414 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28415 ;;Total ram usage:       12 bytes
 28416 ;; Hardware stack levels used:    1
 28417 ;; Hardware stack levels required when called:    1
 28418 ;; This function calls:
 28419 ;;		i2___ftpack
 28420 ;; This function is called by:
 28421 ;;		_peakToRMS
 28422 ;;		_ADC_postProcessingCallback
 28423 ;;		_acos
 28424 ;;		_asin
 28425 ;;		_atan
 28426 ;;		_eval_poly
 28427 ;;		_sin
 28428 ;;		_floor
 28429 ;;		i2_printf
 28430 ;;		i2___ftsub
 28431 ;; This function uses a non-reentrant model
 28432 ;;
 28433                           
 28434                           	psect	text113
 28435  013F7C                     __ptext113:
 28436                           	opt stack 0
 28437  013F7C                     i2___ftadd:
 28438                           	opt stack 13
 28439                           
 28440                           ;incstack = 0
 28441  013F7C  C042  F046         	movff	i2___ftadd@f1+2,??i2___ftadd
 28442  013F80  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 28443  013F82  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 28444  013F84  3441               	rlcf	i2___ftadd@f1+1,w,c
 28445  013F86  3646               	rlcf	??i2___ftadd& (0+255),f,c
 28446  013F88  E301               	bnc	u1526_41
 28447  013F8A  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 28448  013F8C                     u1526_41:
 28449  013F8C  5046               	movf	??i2___ftadd,w,c
 28450  013F8E  6E4B               	movwf	i2___ftadd@exp1,c
 28451  013F90  C045  F046         	movff	i2___ftadd@f2+2,??i2___ftadd
 28452  013F94  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 28453  013F96  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 28454  013F98  3444               	rlcf	i2___ftadd@f2+1,w,c
 28455  013F9A  3646               	rlcf	??i2___ftadd& (0+255),f,c
 28456  013F9C  E301               	bnc	u1527_41
 28457  013F9E  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 28458  013FA0                     u1527_41:
 28459  013FA0  5046               	movf	??i2___ftadd,w,c
 28460  013FA2  6E4A               	movwf	i2___ftadd@exp2,c
 28461  013FA4  504B               	movf	i2___ftadd@exp1,w,c
 28462  013FA6  B4D8               	btfsc	status,2,c
 28463  013FA8  D00B               	goto	i2u1530_40
 28464  013FAA  504A               	movf	i2___ftadd@exp2,w,c
 28465  013FAC  5C4B               	subwf	i2___ftadd@exp1,w,c
 28466  013FAE  B0D8               	btfsc	status,0,c
 28467  013FB0  D00E               	goto	i2l1610
 28468  013FB2  504B               	movf	i2___ftadd@exp1,w,c
 28469  013FB4  0800               	sublw	0
 28470  013FB6  244A               	addwf	i2___ftadd@exp2,w,c
 28471  013FB8  6E46               	movwf	??i2___ftadd& (0+255),c
 28472  013FBA  0E18               	movlw	24
 28473  013FBC  6446               	cpfsgt	??i2___ftadd,c
 28474  013FBE  D007               	goto	i2l1610
 28475  013FC0                     i2u1530_40:
 28476  013FC0  C043  F040         	movff	i2___ftadd@f2,?i2___ftadd
 28477  013FC4  C044  F041         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 28478  013FC8  C045  F042         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 28479  013FCC  0012               	return	
 28480  013FCE                     i2l1610:
 28481  013FCE  504A               	movf	i2___ftadd@exp2,w,c
 28482  013FD0  B4D8               	btfsc	status,2,c
 28483  013FD2  D00B               	goto	i2u1533_40
 28484  013FD4  504B               	movf	i2___ftadd@exp1,w,c
 28485  013FD6  5C4A               	subwf	i2___ftadd@exp2,w,c
 28486  013FD8  B0D8               	btfsc	status,0,c
 28487  013FDA  D00E               	goto	i2l1614
 28488  013FDC  504A               	movf	i2___ftadd@exp2,w,c
 28489  013FDE  0800               	sublw	0
 28490  013FE0  244B               	addwf	i2___ftadd@exp1,w,c
 28491  013FE2  6E46               	movwf	??i2___ftadd& (0+255),c
 28492  013FE4  0E18               	movlw	24
 28493  013FE6  6446               	cpfsgt	??i2___ftadd,c
 28494  013FE8  D007               	goto	i2l1614
 28495  013FEA                     i2u1533_40:
 28496  013FEA  C040  F040         	movff	i2___ftadd@f1,?i2___ftadd
 28497  013FEE  C041  F041         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 28498  013FF2  C042  F042         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 28499  013FF6  0012               	return	
 28500  013FF8                     i2l1614:
 28501  013FF8  0E06               	movlw	6
 28502  013FFA  6E49               	movwf	i2___ftadd@sign,c
 28503  013FFC  BE42               	btfsc	i2___ftadd@f1+2,7,c
 28504  013FFE  8E49               	bsf	i2___ftadd@sign,7,c
 28505  014000  BE45               	btfsc	i2___ftadd@f2+2,7,c
 28506  014002  8C49               	bsf	i2___ftadd@sign,6,c
 28507  014004  8E41               	bsf	i2___ftadd@f1+1,7,c
 28508  014006  0EFF               	movlw	255
 28509  014008  1640               	andwf	i2___ftadd@f1,f,c
 28510  01400A  0EFF               	movlw	255
 28511  01400C  1641               	andwf	i2___ftadd@f1+1,f,c
 28512  01400E  0E00               	movlw	0
 28513  014010  1642               	andwf	i2___ftadd@f1+2,f,c
 28514  014012  8E44               	bsf	i2___ftadd@f2+1,7,c
 28515  014014  0EFF               	movlw	255
 28516  014016  1643               	andwf	i2___ftadd@f2,f,c
 28517  014018  0EFF               	movlw	255
 28518  01401A  1644               	andwf	i2___ftadd@f2+1,f,c
 28519  01401C  0E00               	movlw	0
 28520  01401E  1645               	andwf	i2___ftadd@f2+2,f,c
 28521  014020  504A               	movf	i2___ftadd@exp2,w,c
 28522  014022  5C4B               	subwf	i2___ftadd@exp1,w,c
 28523  014024  B0D8               	btfsc	status,0,c
 28524  014026  D01B               	goto	i2l1619
 28525  014028                     i2u1536_40:
 28526  014028  90D8               	bcf	status,0,c
 28527  01402A  3643               	rlcf	i2___ftadd@f2,f,c
 28528  01402C  3644               	rlcf	i2___ftadd@f2+1,f,c
 28529  01402E  3645               	rlcf	i2___ftadd@f2+2,f,c
 28530  014030  064A               	decf	i2___ftadd@exp2,f,c
 28531  014032  504B               	movf	i2___ftadd@exp1,w,c
 28532  014034  184A               	xorwf	i2___ftadd@exp2,w,c
 28533  014036  B4D8               	btfsc	status,2,c
 28534  014038  D00D               	goto	i2l1624
 28535  01403A  0649               	decf	i2___ftadd@sign,f,c
 28536  01403C  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 28537  014040  0E07               	movlw	7
 28538  014042  1646               	andwf	??i2___ftadd,f,c
 28539  014044  B4D8               	btfsc	status,2,c
 28540  014046  D006               	goto	i2l1624
 28541  014048  D7EF               	goto	i2u1536_40
 28542  01404A  90D8               	bcf	status,0,c
 28543  01404C  3242               	rrcf	i2___ftadd@f1+2,f,c
 28544  01404E  3241               	rrcf	i2___ftadd@f1+1,f,c
 28545  014050  3240               	rrcf	i2___ftadd@f1,f,c
 28546  014052  2A4B               	incf	i2___ftadd@exp1,f,c
 28547  014054                     i2l1624:
 28548  014054  504A               	movf	i2___ftadd@exp2,w,c
 28549  014056  184B               	xorwf	i2___ftadd@exp1,w,c
 28550  014058  B4D8               	btfsc	status,2,c
 28551  01405A  D01F               	goto	i2u1543_40
 28552  01405C  D7F6               	goto	i2l1625
 28553  01405E                     i2l1619:
 28554  01405E  504B               	movf	i2___ftadd@exp1,w,c
 28555  014060  5C4A               	subwf	i2___ftadd@exp2,w,c
 28556  014062  B0D8               	btfsc	status,0,c
 28557  014064  D01A               	goto	i2u1543_40
 28558  014066                     i2u1540_40:
 28559  014066  90D8               	bcf	status,0,c
 28560  014068  3640               	rlcf	i2___ftadd@f1,f,c
 28561  01406A  3641               	rlcf	i2___ftadd@f1+1,f,c
 28562  01406C  3642               	rlcf	i2___ftadd@f1+2,f,c
 28563  01406E  064B               	decf	i2___ftadd@exp1,f,c
 28564  014070  504B               	movf	i2___ftadd@exp1,w,c
 28565  014072  184A               	xorwf	i2___ftadd@exp2,w,c
 28566  014074  B4D8               	btfsc	status,2,c
 28567  014076  D00D               	goto	i2l1633
 28568  014078  0649               	decf	i2___ftadd@sign,f,c
 28569  01407A  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 28570  01407E  0E07               	movlw	7
 28571  014080  1646               	andwf	??i2___ftadd,f,c
 28572  014082  B4D8               	btfsc	status,2,c
 28573  014084  D006               	goto	i2l1633
 28574  014086  D7EF               	goto	i2u1540_40
 28575  014088  90D8               	bcf	status,0,c
 28576  01408A  3245               	rrcf	i2___ftadd@f2+2,f,c
 28577  01408C  3244               	rrcf	i2___ftadd@f2+1,f,c
 28578  01408E  3243               	rrcf	i2___ftadd@f2,f,c
 28579  014090  2A4A               	incf	i2___ftadd@exp2,f,c
 28580  014092                     i2l1633:
 28581  014092  504A               	movf	i2___ftadd@exp2,w,c
 28582  014094  184B               	xorwf	i2___ftadd@exp1,w,c
 28583  014096  A4D8               	btfss	status,2,c
 28584  014098  D7F7               	goto	i2l1634
 28585  01409A                     i2u1543_40:
 28586  01409A  AE49               	btfss	i2___ftadd@sign,7,c
 28587  01409C  D00C               	goto	i2l1636
 28588  01409E  0EFF               	movlw	255
 28589  0140A0  1A40               	xorwf	i2___ftadd@f1,f,c
 28590  0140A2  0EFF               	movlw	255
 28591  0140A4  1A41               	xorwf	i2___ftadd@f1+1,f,c
 28592  0140A6  0EFF               	movlw	255
 28593  0140A8  1A42               	xorwf	i2___ftadd@f1+2,f,c
 28594  0140AA  0E01               	movlw	1
 28595  0140AC  2640               	addwf	i2___ftadd@f1,f,c
 28596  0140AE  0E00               	movlw	0
 28597  0140B0  2241               	addwfc	i2___ftadd@f1+1,f,c
 28598  0140B2  0E00               	movlw	0
 28599  0140B4  2242               	addwfc	i2___ftadd@f1+2,f,c
 28600  0140B6                     i2l1636:
 28601  0140B6  AC49               	btfss	i2___ftadd@sign,6,c
 28602  0140B8  D00C               	goto	i2l1637
 28603  0140BA  0EFF               	movlw	255
 28604  0140BC  1A43               	xorwf	i2___ftadd@f2,f,c
 28605  0140BE  0EFF               	movlw	255
 28606  0140C0  1A44               	xorwf	i2___ftadd@f2+1,f,c
 28607  0140C2  0EFF               	movlw	255
 28608  0140C4  1A45               	xorwf	i2___ftadd@f2+2,f,c
 28609  0140C6  0E01               	movlw	1
 28610  0140C8  2643               	addwf	i2___ftadd@f2,f,c
 28611  0140CA  0E00               	movlw	0
 28612  0140CC  2244               	addwfc	i2___ftadd@f2+1,f,c
 28613  0140CE  0E00               	movlw	0
 28614  0140D0  2245               	addwfc	i2___ftadd@f2+2,f,c
 28615  0140D2                     i2l1637:
 28616  0140D2  0E00               	movlw	0
 28617  0140D4  6E49               	movwf	i2___ftadd@sign,c
 28618  0140D6  5040               	movf	i2___ftadd@f1,w,c
 28619  0140D8  2643               	addwf	i2___ftadd@f2,f,c
 28620  0140DA  5041               	movf	i2___ftadd@f1+1,w,c
 28621  0140DC  2244               	addwfc	i2___ftadd@f2+1,f,c
 28622  0140DE  5042               	movf	i2___ftadd@f1+2,w,c
 28623  0140E0  2245               	addwfc	i2___ftadd@f2+2,f,c
 28624  0140E2  AE45               	btfss	i2___ftadd@f2+2,7,c
 28625  0140E4  D00E               	goto	i2l1638
 28626  0140E6  0EFF               	movlw	255
 28627  0140E8  1A43               	xorwf	i2___ftadd@f2,f,c
 28628  0140EA  0EFF               	movlw	255
 28629  0140EC  1A44               	xorwf	i2___ftadd@f2+1,f,c
 28630  0140EE  0EFF               	movlw	255
 28631  0140F0  1A45               	xorwf	i2___ftadd@f2+2,f,c
 28632  0140F2  0E01               	movlw	1
 28633  0140F4  2643               	addwf	i2___ftadd@f2,f,c
 28634  0140F6  0E00               	movlw	0
 28635  0140F8  2244               	addwfc	i2___ftadd@f2+1,f,c
 28636  0140FA  0E00               	movlw	0
 28637  0140FC  2245               	addwfc	i2___ftadd@f2+2,f,c
 28638  0140FE  0E01               	movlw	1
 28639  014100  6E49               	movwf	i2___ftadd@sign,c
 28640  014102                     i2l1638:
 28641  014102  C043  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 28642  014106  C044  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 28643  01410A  C045  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 28644  01410E  C04B  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 28645  014112  C049  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 28646  014116  EC1F  F0A9         	call	i2___ftpack	;wreg free
 28647  01411A  C001  F040         	movff	?i2___ftpack,?i2___ftadd
 28648  01411E  C002  F041         	movff	?i2___ftpack+1,?i2___ftadd+1
 28649  014122  C003  F042         	movff	?i2___ftpack+2,?i2___ftadd+2
 28650  014126  0012               	return	
 28651  014128                     __end_ofi2___ftadd:
 28652                           	opt stack 0
 28653                           tosu	equ	0xFFF
 28654                           tosh	equ	0xFFE
 28655                           tosl	equ	0xFFD
 28656                           pclatu	equ	0xFFB
 28657                           pclath	equ	0xFFA
 28658                           tblptru	equ	0xFF8
 28659                           tblptrh	equ	0xFF7
 28660                           tblptrl	equ	0xFF6
 28661                           tablat	equ	0xFF5
 28662                           prodh	equ	0xFF4
 28663                           prodl	equ	0xFF3
 28664                           intcon	equ	0xFF2
 28665                           indf0	equ	0xFEF
 28666                           postinc0	equ	0xFEE
 28667                           fsr0h	equ	0xFEA
 28668                           fsr0l	equ	0xFE9
 28669                           wreg	equ	0xFE8
 28670                           indf1	equ	0xFE7
 28671                           postdec1	equ	0xFE5
 28672                           fsr1h	equ	0xFE2
 28673                           fsr1l	equ	0xFE1
 28674                           bsr	equ	0xFE0
 28675                           indf2	equ	0xFDF
 28676                           postinc2	equ	0xFDE
 28677                           postdec2	equ	0xFDD
 28678                           fsr2h	equ	0xFDA
 28679                           fsr2l	equ	0xFD9
 28680                           status	equ	0xFD8
 28681                           
 28682 ;; *************** function ___lwtoft *****************
 28683 ;; Defined at:
 28684 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 28685 ;; Parameters:    Size  Location     Type
 28686 ;;  c               2    8[COMRAM] unsigned int 
 28687 ;; Auto vars:     Size  Location     Type
 28688 ;;		None
 28689 ;; Return value:  Size  Location     Type
 28690 ;;                  3    8[COMRAM] float 
 28691 ;; Registers used:
 28692 ;;		wreg, status,2, status,0, cstack
 28693 ;; Tracked objects:
 28694 ;;		On entry : 0/0
 28695 ;;		On exit  : 0/0
 28696 ;;		Unchanged: 0/0
 28697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28698 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28701 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28702 ;;Total ram usage:        3 bytes
 28703 ;; Hardware stack levels used:    1
 28704 ;; Hardware stack levels required when called:    1
 28705 ;; This function calls:
 28706 ;;		i2___ftpack
 28707 ;; This function is called by:
 28708 ;;		_ADC_postProcessingCallback
 28709 ;; This function uses a non-reentrant model
 28710 ;;
 28711                           
 28712                           	psect	text114
 28713  0165C8                     __ptext114:
 28714                           	opt stack 0
 28715  0165C8                     ___lwtoft:
 28716                           	opt stack 14
 28717                           
 28718                           ;incstack = 0
 28719  0165C8  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 28720  0165CC  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 28721  0165D0  6A03               	clrf	i2___ftpack@arg+2,c
 28722  0165D2  0E8E               	movlw	142
 28723  0165D4  6E04               	movwf	i2___ftpack@exp,c
 28724  0165D6  0E00               	movlw	0
 28725  0165D8  6E05               	movwf	i2___ftpack@sign,c
 28726  0165DA  EC1F  F0A9         	call	i2___ftpack	;wreg free
 28727  0165DE  C001  F009         	movff	?i2___ftpack,?___lwtoft
 28728  0165E2  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 28729  0165E6  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 28730  0165EA  0012               	return	
 28731  0165EC                     __end_of___lwtoft:
 28732                           	opt stack 0
 28733                           tosu	equ	0xFFF
 28734                           tosh	equ	0xFFE
 28735                           tosl	equ	0xFFD
 28736                           pclatu	equ	0xFFB
 28737                           pclath	equ	0xFFA
 28738                           tblptru	equ	0xFF8
 28739                           tblptrh	equ	0xFF7
 28740                           tblptrl	equ	0xFF6
 28741                           tablat	equ	0xFF5
 28742                           prodh	equ	0xFF4
 28743                           prodl	equ	0xFF3
 28744                           intcon	equ	0xFF2
 28745                           indf0	equ	0xFEF
 28746                           postinc0	equ	0xFEE
 28747                           fsr0h	equ	0xFEA
 28748                           fsr0l	equ	0xFE9
 28749                           wreg	equ	0xFE8
 28750                           indf1	equ	0xFE7
 28751                           postdec1	equ	0xFE5
 28752                           fsr1h	equ	0xFE2
 28753                           fsr1l	equ	0xFE1
 28754                           bsr	equ	0xFE0
 28755                           indf2	equ	0xFDF
 28756                           postinc2	equ	0xFDE
 28757                           postdec2	equ	0xFDD
 28758                           fsr2h	equ	0xFDA
 28759                           fsr2l	equ	0xFD9
 28760                           status	equ	0xFD8
 28761                           
 28762 ;; *************** function i2___ftpack *****************
 28763 ;; Defined at:
 28764 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 28765 ;; Parameters:    Size  Location     Type
 28766 ;;  arg             3    0[COMRAM] unsigned um
 28767 ;;  exp             1    3[COMRAM] unsigned char 
 28768 ;;  sign            1    4[COMRAM] unsigned char 
 28769 ;; Auto vars:     Size  Location     Type
 28770 ;;		None
 28771 ;; Return value:  Size  Location     Type
 28772 ;;                  3    0[COMRAM] float 
 28773 ;; Registers used:
 28774 ;;		wreg, status,2, status,0
 28775 ;; Tracked objects:
 28776 ;;		On entry : 0/0
 28777 ;;		On exit  : 0/0
 28778 ;;		Unchanged: 0/0
 28779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28780 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28782 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28783 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28784 ;;Total ram usage:        8 bytes
 28785 ;; Hardware stack levels used:    1
 28786 ;; This function calls:
 28787 ;;		Nothing
 28788 ;; This function is called by:
 28789 ;;		___altoft
 28790 ;;		___lwtoft
 28791 ;;		i2___ftadd
 28792 ;;		i2___ftdiv
 28793 ;;		i2___ftmul
 28794 ;;		i2___lltoft
 28795 ;; This function uses a non-reentrant model
 28796 ;;
 28797                           
 28798                           	psect	text115
 28799  01523E                     __ptext115:
 28800                           	opt stack 0
 28801  01523E                     i2___ftpack:
 28802                           	opt stack 13
 28803                           
 28804                           ;incstack = 0
 28805  01523E  5004               	movf	i2___ftpack@exp,w,c
 28806  015240  B4D8               	btfsc	status,2,c
 28807  015242  D005               	goto	i2u1519_40
 28808  015244  5001               	movf	i2___ftpack@arg,w,c
 28809  015246  1002               	iorwf	i2___ftpack@arg+1,w,c
 28810  015248  1003               	iorwf	i2___ftpack@arg+2,w,c
 28811  01524A  A4D8               	btfss	status,2,c
 28812  01524C  D00C               	goto	i2l1579
 28813  01524E                     i2u1519_40:
 28814  01524E  0E00               	movlw	0
 28815  015250  6E01               	movwf	?i2___ftpack,c
 28816  015252  0E00               	movlw	0
 28817  015254  6E02               	movwf	?i2___ftpack+1,c
 28818  015256  0E00               	movlw	0
 28819  015258  6E03               	movwf	?i2___ftpack+2,c
 28820  01525A  0012               	return	
 28821  01525C  2A04               	incf	i2___ftpack@exp,f,c
 28822  01525E  90D8               	bcf	status,0,c
 28823  015260  3203               	rrcf	i2___ftpack@arg+2,f,c
 28824  015262  3202               	rrcf	i2___ftpack@arg+1,f,c
 28825  015264  3201               	rrcf	i2___ftpack@arg,f,c
 28826  015266                     i2l1579:
 28827  015266  0E00               	movlw	0
 28828  015268  1401               	andwf	i2___ftpack@arg,w,c
 28829  01526A  6E06               	movwf	??i2___ftpack& (0+255),c
 28830  01526C  0E00               	movlw	0
 28831  01526E  1402               	andwf	i2___ftpack@arg+1,w,c
 28832  015270  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 28833  015272  0EFE               	movlw	254
 28834  015274  1403               	andwf	i2___ftpack@arg+2,w,c
 28835  015276  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 28836  015278  5006               	movf	??i2___ftpack,w,c
 28837  01527A  1007               	iorwf	??i2___ftpack+1,w,c
 28838  01527C  1008               	iorwf	??i2___ftpack+2,w,c
 28839  01527E  B4D8               	btfsc	status,2,c
 28840  015280  D00C               	goto	i2l1582
 28841  015282  D7EC               	goto	i2l1580
 28842  015284  2A04               	incf	i2___ftpack@exp,f,c
 28843  015286  0E01               	movlw	1
 28844  015288  2601               	addwf	i2___ftpack@arg,f,c
 28845  01528A  0E00               	movlw	0
 28846  01528C  2202               	addwfc	i2___ftpack@arg+1,f,c
 28847  01528E  0E00               	movlw	0
 28848  015290  2203               	addwfc	i2___ftpack@arg+2,f,c
 28849  015292  90D8               	bcf	status,0,c
 28850  015294  3203               	rrcf	i2___ftpack@arg+2,f,c
 28851  015296  3202               	rrcf	i2___ftpack@arg+1,f,c
 28852  015298  3201               	rrcf	i2___ftpack@arg,f,c
 28853  01529A                     i2l1582:
 28854  01529A  0E00               	movlw	0
 28855  01529C  1401               	andwf	i2___ftpack@arg,w,c
 28856  01529E  6E06               	movwf	??i2___ftpack& (0+255),c
 28857  0152A0  0E00               	movlw	0
 28858  0152A2  1402               	andwf	i2___ftpack@arg+1,w,c
 28859  0152A4  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 28860  0152A6  0EFF               	movlw	255
 28861  0152A8  1403               	andwf	i2___ftpack@arg+2,w,c
 28862  0152AA  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 28863  0152AC  5006               	movf	??i2___ftpack,w,c
 28864  0152AE  1007               	iorwf	??i2___ftpack+1,w,c
 28865  0152B0  1008               	iorwf	??i2___ftpack+2,w,c
 28866  0152B2  B4D8               	btfsc	status,2,c
 28867  0152B4  D006               	goto	i2l1585
 28868  0152B6  D7E6               	goto	i2l1583
 28869  0152B8  0604               	decf	i2___ftpack@exp,f,c
 28870  0152BA  90D8               	bcf	status,0,c
 28871  0152BC  3601               	rlcf	i2___ftpack@arg,f,c
 28872  0152BE  3602               	rlcf	i2___ftpack@arg+1,f,c
 28873  0152C0  3603               	rlcf	i2___ftpack@arg+2,f,c
 28874  0152C2                     i2l1585:
 28875  0152C2  BE02               	btfsc	i2___ftpack@arg+1,7,c
 28876  0152C4  D003               	goto	i2u1523_40
 28877  0152C6  0E02               	movlw	2
 28878  0152C8  6004               	cpfslt	i2___ftpack@exp,c
 28879  0152CA  D7F6               	goto	i2l1586
 28880  0152CC                     i2u1523_40:
 28881  0152CC  A004               	btfss	i2___ftpack@exp,0,c
 28882  0152CE  9E02               	bcf	i2___ftpack@arg+1,7,c
 28883  0152D0  90D8               	bcf	status,0,c
 28884  0152D2  3204               	rrcf	i2___ftpack@exp,f,c
 28885  0152D4  5004               	movf	i2___ftpack@exp,w,c
 28886  0152D6  1203               	iorwf	i2___ftpack@arg+2,f,c
 28887  0152D8  5005               	movf	i2___ftpack@sign,w,c
 28888  0152DA  A4D8               	btfss	status,2,c
 28889  0152DC  8E03               	bsf	i2___ftpack@arg+2,7,c
 28890  0152DE  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 28891  0152E2  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 28892  0152E6  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 28893  0152EA  0012               	return	
 28894  0152EC                     __end_ofi2___ftpack:
 28895                           	opt stack 0
 28896                           tosu	equ	0xFFF
 28897                           tosh	equ	0xFFE
 28898                           tosl	equ	0xFFD
 28899                           pclatu	equ	0xFFB
 28900                           pclath	equ	0xFFA
 28901                           tblptru	equ	0xFF8
 28902                           tblptrh	equ	0xFF7
 28903                           tblptrl	equ	0xFF6
 28904                           tablat	equ	0xFF5
 28905                           prodh	equ	0xFF4
 28906                           prodl	equ	0xFF3
 28907                           intcon	equ	0xFF2
 28908                           indf0	equ	0xFEF
 28909                           postinc0	equ	0xFEE
 28910                           fsr0h	equ	0xFEA
 28911                           fsr0l	equ	0xFE9
 28912                           wreg	equ	0xFE8
 28913                           indf1	equ	0xFE7
 28914                           postdec1	equ	0xFE5
 28915                           fsr1h	equ	0xFE2
 28916                           fsr1l	equ	0xFE1
 28917                           bsr	equ	0xFE0
 28918                           indf2	equ	0xFDF
 28919                           postinc2	equ	0xFDE
 28920                           postdec2	equ	0xFDD
 28921                           fsr2h	equ	0xFDA
 28922                           fsr2l	equ	0xFD9
 28923                           status	equ	0xFD8
 28924                           
 28925 ;; *************** function _ADCC_GetConversionResult *****************
 28926 ;; Defined at:
 28927 ;;		line 130 in file "mcc_generated_files/adcc.c"
 28928 ;; Parameters:    Size  Location     Type
 28929 ;;		None
 28930 ;; Auto vars:     Size  Location     Type
 28931 ;;		None
 28932 ;; Return value:  Size  Location     Type
 28933 ;;                  2    0[COMRAM] unsigned int 
 28934 ;; Registers used:
 28935 ;;		wreg, status,2, status,0
 28936 ;; Tracked objects:
 28937 ;;		On entry : 0/0
 28938 ;;		On exit  : 0/0
 28939 ;;		Unchanged: 0/0
 28940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28943 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28944 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28945 ;;Total ram usage:        4 bytes
 28946 ;; Hardware stack levels used:    1
 28947 ;; This function calls:
 28948 ;;		Nothing
 28949 ;; This function is called by:
 28950 ;;		_ADC_postProcessingCallback
 28951 ;; This function uses a non-reentrant model
 28952 ;;
 28953                           
 28954                           	psect	text116
 28955  0166BA                     __ptext116:
 28956                           	opt stack 0
 28957  0166BA                     _ADCC_GetConversionResult:
 28958                           	opt stack 15
 28959                           
 28960                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 28961                           
 28962                           ;incstack = 0
 28963  0166BA  5064               	movf	3940,w,c	;volatile
 28964  0166BC  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 28965  0166BE  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 28966  0166C0  5063               	movf	3939,w,c	;volatile
 28967  0166C2  2403               	addwf	??_ADCC_GetConversionResult,w,c
 28968  0166C4  6E01               	movwf	?_ADCC_GetConversionResult,c
 28969  0166C6  0E00               	movlw	0
 28970  0166C8  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 28971  0166CA  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 28972  0166CC  0012               	return	
 28973  0166CE                     __end_of_ADCC_GetConversionResult:
 28974                           	opt stack 0
 28975                           tosu	equ	0xFFF
 28976                           tosh	equ	0xFFE
 28977                           tosl	equ	0xFFD
 28978                           pclatu	equ	0xFFB
 28979                           pclath	equ	0xFFA
 28980                           tblptru	equ	0xFF8
 28981                           tblptrh	equ	0xFF7
 28982                           tblptrl	equ	0xFF6
 28983                           tablat	equ	0xFF5
 28984                           prodh	equ	0xFF4
 28985                           prodl	equ	0xFF3
 28986                           intcon	equ	0xFF2
 28987                           indf0	equ	0xFEF
 28988                           postinc0	equ	0xFEE
 28989                           fsr0h	equ	0xFEA
 28990                           fsr0l	equ	0xFE9
 28991                           wreg	equ	0xFE8
 28992                           indf1	equ	0xFE7
 28993                           postdec1	equ	0xFE5
 28994                           fsr1h	equ	0xFE2
 28995                           fsr1l	equ	0xFE1
 28996                           bsr	equ	0xFE0
 28997                           indf2	equ	0xFDF
 28998                           postinc2	equ	0xFDE
 28999                           postdec2	equ	0xFDD
 29000                           fsr2h	equ	0xFDA
 29001                           fsr2l	equ	0xFD9
 29002                           status	equ	0xFD8
 29003                           tosu	equ	0xFFF
 29004                           tosh	equ	0xFFE
 29005                           tosl	equ	0xFFD
 29006                           pclatu	equ	0xFFB
 29007                           pclath	equ	0xFFA
 29008                           tblptru	equ	0xFF8
 29009                           tblptrh	equ	0xFF7
 29010                           tblptrl	equ	0xFF6
 29011                           tablat	equ	0xFF5
 29012                           prodh	equ	0xFF4
 29013                           prodl	equ	0xFF3
 29014                           intcon	equ	0xFF2
 29015                           indf0	equ	0xFEF
 29016                           postinc0	equ	0xFEE
 29017                           fsr0h	equ	0xFEA
 29018                           fsr0l	equ	0xFE9
 29019                           wreg	equ	0xFE8
 29020                           indf1	equ	0xFE7
 29021                           postdec1	equ	0xFE5
 29022                           fsr1h	equ	0xFE2
 29023                           fsr1l	equ	0xFE1
 29024                           bsr	equ	0xFE0
 29025                           indf2	equ	0xFDF
 29026                           postinc2	equ	0xFDE
 29027                           postdec2	equ	0xFDD
 29028                           fsr2h	equ	0xFDA
 29029                           fsr2l	equ	0xFD9
 29030                           status	equ	0xFD8
 29031                           
 29032                           	psect	text117
 29033  000000                     __ptext117:
 29034                           	opt stack 0
 29035                           tosu	equ	0xFFF
 29036                           tosh	equ	0xFFE
 29037                           tosl	equ	0xFFD
 29038                           pclatu	equ	0xFFB
 29039                           pclath	equ	0xFFA
 29040                           tblptru	equ	0xFF8
 29041                           tblptrh	equ	0xFF7
 29042                           tblptrl	equ	0xFF6
 29043                           tablat	equ	0xFF5
 29044                           prodh	equ	0xFF4
 29045                           prodl	equ	0xFF3
 29046                           intcon	equ	0xFF2
 29047                           indf0	equ	0xFEF
 29048                           postinc0	equ	0xFEE
 29049                           fsr0h	equ	0xFEA
 29050                           fsr0l	equ	0xFE9
 29051                           wreg	equ	0xFE8
 29052                           indf1	equ	0xFE7
 29053                           postdec1	equ	0xFE5
 29054                           fsr1h	equ	0xFE2
 29055                           fsr1l	equ	0xFE1
 29056                           bsr	equ	0xFE0
 29057                           indf2	equ	0xFDF
 29058                           postinc2	equ	0xFDE
 29059                           postdec2	equ	0xFDD
 29060                           fsr2h	equ	0xFDA
 29061                           fsr2l	equ	0xFD9
 29062                           status	equ	0xFD8
 29063                           
 29064                           	psect	rparam
 29065  0000                     tosu	equ	0xFFF
 29066                           tosh	equ	0xFFE
 29067                           tosl	equ	0xFFD
 29068                           pclatu	equ	0xFFB
 29069                           pclath	equ	0xFFA
 29070                           tblptru	equ	0xFF8
 29071                           tblptrh	equ	0xFF7
 29072                           tblptrl	equ	0xFF6
 29073                           tablat	equ	0xFF5
 29074                           prodh	equ	0xFF4
 29075                           prodl	equ	0xFF3
 29076                           intcon	equ	0xFF2
 29077                           indf0	equ	0xFEF
 29078                           postinc0	equ	0xFEE
 29079                           fsr0h	equ	0xFEA
 29080                           fsr0l	equ	0xFE9
 29081                           wreg	equ	0xFE8
 29082                           indf1	equ	0xFE7
 29083                           postdec1	equ	0xFE5
 29084                           fsr1h	equ	0xFE2
 29085                           fsr1l	equ	0xFE1
 29086                           bsr	equ	0xFE0
 29087                           indf2	equ	0xFDF
 29088                           postinc2	equ	0xFDE
 29089                           postdec2	equ	0xFDD
 29090                           fsr2h	equ	0xFDA
 29091                           fsr2l	equ	0xFD9
 29092                           status	equ	0xFD8
 29093                           
 29094                           	psect	temp
 29095  00005F                     btemp:
 29096                           	opt stack 0
 29097  00005F                     	ds	1
 29098  0000                     int$flags	set	btemp
 29099  0000                     wtemp6	set	btemp+1
 29100                           tosu	equ	0xFFF
 29101                           tosh	equ	0xFFE
 29102                           tosl	equ	0xFFD
 29103                           pclatu	equ	0xFFB
 29104                           pclath	equ	0xFFA
 29105                           tblptru	equ	0xFF8
 29106                           tblptrh	equ	0xFF7
 29107                           tblptrl	equ	0xFF6
 29108                           tablat	equ	0xFF5
 29109                           prodh	equ	0xFF4
 29110                           prodl	equ	0xFF3
 29111                           intcon	equ	0xFF2
 29112                           indf0	equ	0xFEF
 29113                           postinc0	equ	0xFEE
 29114                           fsr0h	equ	0xFEA
 29115                           fsr0l	equ	0xFE9
 29116                           wreg	equ	0xFE8
 29117                           indf1	equ	0xFE7
 29118                           postdec1	equ	0xFE5
 29119                           fsr1h	equ	0xFE2
 29120                           fsr1l	equ	0xFE1
 29121                           bsr	equ	0xFE0
 29122                           indf2	equ	0xFDF
 29123                           postinc2	equ	0xFDE
 29124                           postdec2	equ	0xFDD
 29125                           fsr2h	equ	0xFDA
 29126                           fsr2l	equ	0xFD9
 29127                           status	equ	0xFD8


Data Sizes:
    Strings     3703
    Constant    210
    Data        14
    BSS         333
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    104     158
    BANK1           256    185     223
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_79(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(COMRAM[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_79(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_79(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_79(CODE[25]), line(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_99(CODE[10]), STR_98(CODE[13]), STR_97(CODE[12]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 12
		 -> getDeviceIDString@returnString(BANK1[12]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 12
		 -> getDeviceIDString@returnString(BANK1[12]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_90(CODE[5]), STR_88(CODE[14]), STR_86(CODE[16]), STR_77(CODE[13]), 
		 -> STR_75(CODE[12]), STR_73(CODE[16]), STR_71(CODE[15]), STR_69(CODE[15]), 
		 -> STR_67(CODE[21]), STR_65(CODE[21]), STR_63(CODE[26]), STR_61(CODE[14]), 
		 -> STR_59(CODE[13]), STR_57(CODE[18]), STR_55(CODE[15]), STR_53(CODE[16]), 
		 -> STR_51(CODE[11]), STR_48(CODE[4]), STR_47(CODE[6]), STR_44(CODE[6]), 
		 -> STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 18
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), atan@coeff_a(CODE[18]), atan@coeff_b(CODE[15]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK1[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 3561
		 -> STR_100(CODE[7]), printf@c(BANK1[1]), RAM(DATA[3561]), TRIAC_Firing_Angle(BANK0[3]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 1565
		 -> STR_96(CODE[30]), STR_95(CODE[23]), STR_94(CODE[39]), STR_93(CODE[37]), 
		 -> STR_92(CODE[33]), STR_91(CODE[1565]), STR_89(CODE[53]), STR_87(CODE[58]), 
		 -> STR_85(CODE[71]), STR_84(CODE[63]), STR_83(CODE[37]), STR_82(CODE[46]), 
		 -> STR_81(CODE[102]), STR_80(CODE[86]), STR_78(CODE[25]), STR_76(CODE[42]), 
		 -> STR_74(CODE[41]), STR_72(CODE[40]), STR_70(CODE[56]), STR_68(CODE[34]), 
		 -> STR_66(CODE[34]), STR_64(CODE[32]), STR_62(CODE[37]), STR_60(CODE[56]), 
		 -> STR_58(CODE[34]), STR_56(CODE[34]), STR_54(CODE[35]), STR_52(CODE[82]), 
		 -> STR_50(CODE[47]), STR_49(CODE[17]), STR_46(CODE[4]), STR_45(CODE[5]), 
		 -> STR_43(CODE[4]), STR_42(CODE[5]), STR_40(CODE[3]), terminal_textAttributes@output_buff(BANK1[15]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[372]), STR_3(CODE[4]), 
		 -> STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 12
		 -> getDeviceIDString@returnString(BANK1[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    sp__getDeviceIDString	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_postProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_postProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___ftmul
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    _atan->_eval_poly
    _fabs->i2___ftneg
    _sin->_floor
    i2___ftsub->_floor
    i2___ftneg->i2___ftdiv
    i2___ftdiv->i2___wmul
    _floor->___altoft
    i2___fttol->i2_scale
    i2___ftge->_fabs
    ___altoft->i2___fttol
    _eval_poly->i2___ftadd
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftneg
    i2___ftadd->i2_fround
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___ftsub
    _ADCC_ISR->_ADC_postProcessingCallback
    _ADC_postProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_sqrt
    _sqrt->i2___ftsub
    _currentMeasuredToPeak->_sin
    _sin->i2___ftsub

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _getDeviceIDString->_strcpy
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___ftdiv->___ftadd
    ___awtoft->___ftpack
    _terminal_clearTerminal->_printf
    _printf->___fttol
    _scale->___ftmul
    _putch->_EUSART2_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___wmul
    ___ftneg->___awtoft
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  664682
                                            183 BANK1      2     2      0
        _ADCC_SetADIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   83805
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  400409
                                            174 BANK1      9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       14    12      2  399681
                                            160 BANK1     14    12      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                             ___wmul
                               _atoi
                        _getDeviceID
                  _getDeviceIDString
                             _printf
                             _strcmp
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0   95034
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2   95034
                                            142 BANK1     18    16      2
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   83805
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    3913
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   16    14      2     900
                                             29 BANK1     16    14      2
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4     649
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2     515
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4     515
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     363
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    4401
                                             43 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    5143
                                             55 BANK1     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3086
                                             31 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   83805
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              45    37      8   83805
                                            100 BANK1     42    34      8
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                7     4      3   18366
                                             85 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      93
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              10     7      3   18087
                                             85 BANK1     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3878
                                             37 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    9561
                                             70 BANK1     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    2053
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2245
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     634
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     904
                                             23 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    3055
                                             31 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     952
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     961
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     696
                                             85 BANK1     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    7384
                                             55 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    6638
                                             43 BANK1     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2863
                                             23 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3    1070
                                             35 BANK1      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6    1508
                                             23 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR7_ISR                                            0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_IsConversionDone                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                     18    18      0  343939
                                             86 BANK0     18    18      0
                   Absolute function *
                           _ADCC_ISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0   66396
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                           39    37      2   66396
                                              6 BANK0     36    34      2
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (16) i2_scale                                             7     4      3   13741
                                             53 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (17) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) i2_fround                                           10     7      3   13246
                                             53 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (16) i2__div_to_l_                                       12     6      6     692
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (16) i2___lltoft                                          9     5      4    1976
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (16) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            0     0      0  277303
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
         _ADC_postProcessingCallback *
 ---------------------------------------------------------------------------------
 (15) _ADC_postProcessingCallback                         16    16      0  277303
                                             70 BANK0     16    16      0
           _ADCC_GetConversionResult
                           ___lwtoft
              _currentMeasuredToPeak
                          _peakToRMS
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) _peakToRMS                                          18    12      6  189961
                                             52 BANK0     18    12      6
                               _acos
                                _sin
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _acos                                                6     3      3   91105
                                             46 BANK0      6     3      3
                               _asin
                          i2___ftadd
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (18) _asin                                               21    18      3   83414
                                             25 BANK0     21    18      3
                               _atan
                               _fabs
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _sqrt                                               19    16      3   17495
                                              6 BANK0     19    16      3
                           i2___ftge
                          i2___ftmul
                          i2___ftneg (ARG)
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (19) _atan                                               16    13      3   42301
                                             87 COMRAM     3     0      3
                                              0 BANK0     13    13      0
                          _eval_poly
                               _fabs
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (19) _fabs                                                3     0      3    1601
                                             38 COMRAM     3     0      3
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) _currentMeasuredToPeak                               9     3      6   64973
                                             19 BANK0      9     3      6
                                _sin
                          i2___ftdiv
 ---------------------------------------------------------------------------------
 (17) _sin                                                13    10      3   60281
                                              6 BANK0     13    10      3
                          _eval_poly
                              _floor
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (16) i2___ftsub                                           6     0      6    6906
                                              0 BANK0      6     0      6
                              _floor (ARG)
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftneg                                           3     0      3    1064
                                             35 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                         i2___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftdiv                                          15     9      6    4194
                                             20 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (18) _floor                                               8     5      3   12419
                                             85 COMRAM     8     5      3
                           ___altoft
                              _frexp
                          i2___ftadd
                           i2___ftge
                          i2___fttol
 ---------------------------------------------------------------------------------
 (16) i2___fttol                                          15    11      4     941
                                             60 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftge                                            9     3      6    1550
                                             41 COMRAM     9     3      6
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (19) _frexp                                               7     2      5     630
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (19) ___altoft                                           10     6      4    2236
                                             75 COMRAM    10     6      4
                         i2___ftpack
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (18) _eval_poly                                          12     5      7   18610
                                             75 COMRAM    12     5      7
                          i2___ftadd
                          i2___ftdiv (ARG)
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4    2657
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftmul                                          15     9      6    7746
                                             38 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftdiv (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftadd                                          12     6      6    6259
                                             63 COMRAM    12     6      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (16) ___lwtoft                                            3     0      3    2521
                                              8 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (18) i2___ftpack                                          8     3      5    1722
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _strcpy
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       ___awtoft
         ___ftpack
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _atoi
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _isdigit
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _strcpy
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _strcpy
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcmp
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _strcpy
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _strcpy
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftge
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
             ___ftsub
               ___ftadd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
             ___fttol
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lltoft
               ___ftpack
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _strcpy
             _isdigit (ARG)
             _putch (ARG)
               _EUSART2_Write
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _strcat
           _strncpy
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _strcpy
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _strcpy
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_IsConversionDone
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADC_postProcessingCallback *
       _ADCC_GetConversionResult
       ___lwtoft
         _ADCC_GetConversionResult (ARG)
         i2___ftpack (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___ftadd
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               _fabs
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftdiv
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _fabs
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _sqrt
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftsub (ARG)
                 _floor (ARG)
                   ___altoft
                     i2___ftpack
                     i2___fttol (ARG)
                       i2___ftmul (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2_scale (ARG)
                         i2___awdiv
                           i2___awmod (ARG)
                         i2___awmod
                         i2___ftmul
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftneg (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftdiv (ARG)
                               _ADCC_GetConversionResult (ARG)
                               ___lwtoft (ARG)
                                 _ADCC_GetConversionResult (ARG)
                                 i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___wmul (ARG)
                                 i2___awdiv (ARG)
                                   i2___awmod (ARG)
                                 i2___awmod (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___wmul
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                   _frexp
                   i2___ftadd
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                     i2_fround (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                   i2___ftge
                     _fabs (ARG)
                       i2___ftneg
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                   i2___fttol
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2_scale (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                 i2___ftadd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___lltoft (ARG)
                   i2___ftpack
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         _sqrt
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub (ARG)
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftadd
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftdiv
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftge
         _fabs (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftsub
         _floor (ARG)
           ___altoft
             i2___ftpack
             i2___fttol (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           _frexp
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___fttol
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2_scale (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
         i2___ftadd (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lltoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___lltoft
         i2___ftpack
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B9      DF       7       87.1%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     68      9E       5       98.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2DB       8        0.0%
DATA                 0      0     2DB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Nov 03 15:21:12 2018

                                 ___altoft@exp 0054               __end_of_TMR5_SetInterruptHandler 6768  
                                  __CFG_CP$OFF 000000                                  ___altoft@sign 0055  
                                           l55 667E                                   ___awdiv@sign 0122  
                       __end_of_FVR_Initialize 67BE                                             bsr 000FE0  
                          ___wmul@multiplicand 0127                         ?_terminal_printNewline 0001  
                            ??_TMR5_WriteTimer 0003                                     i2___ftpack 523E  
               __end_of_heartbeatTimerCallback 62E8                                   ___ftadd@exp1 0136  
                                 ___ftadd@exp2 0135                                     i2___lltoft 5ED4  
                                 ___ftadd@sign 0134                                            l370 61D2  
                                          l374 611A                                            l375 6118  
                                          l367 61AA                                            l368 61A8  
                                          l377 612E                                            l378 6154  
                                          l379 6152                                            l923 5A6A  
                                          l962 4792                                            l964 47CE  
                                          l965 47B2                                            l991 2DD8  
                                          l967 4816                                            l992 2D30  
                                          l968 47E8                                            l993 2E02  
                                          l994 2D48                                            l995 2D60  
                                          l996 2D78                                            l997 2D90  
                                          l998 2DA8                                            l999 2DC0  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                          _Ipk 00D1                                            _Vpk 00D4  
                    __end_of_getDeviceIDString 5700                                            _sin 37E8  
                   currentMeasuredToPeak@Angle 0076                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 011C                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                 ?_ADCC_SetADIInterruptHandler 0117                                   __CFG_LVP$OFF 000000  
          __size_of_ADC_postProcessingCallback 0552                                   __CFG_ZCD$OFF 000000  
                                 ___ftdiv@cntr 0140                                   ___ftdiv@sign 0145  
                                         l1000 2EF2                                           l1001 2E1A  
                                         l1002 2F28                                           l1010 2EDA  
                                         l1011 3018                                           l1003 2E32  
                                         l1020 2FE8                                           l1012 2F40  
                                         l1004 2E4A                                           l1013 304E  
                                         l1021 3000                                           l1005 2E62  
                                         l1101 182E                                           l1014 2F58  
                                         l1006 2E7A                                           l1015 2F70  
                                         l1007 2E92                                           l1111 19E6  
                                         l1103 1886                                           l1200 0246  
                                         l1016 2F88                                           l1008 2EAA  
                                         l1017 2FA0                                           l1009 2EC2  
                                         l1121 1D6C                                           l1113 1A34  
                                         l1105 18DE                                           l1018 2FB8  
                                         l1122 1B5E                                           l1203 00F6  
                                         l1019 2FD0                                           l1131 1E24  
                                         l1115 1A82                                           l1107 1936  
                                         l1212 01B2                                           l1124 1C18  
                                         l1221 0330                                           l1213 0186  
                                         l1205 00FA                                           l1117 1AD4  
                                         l1109 198E                                           l1222 0398  
                                         l1206 0122                                           l1215 01C6  
                                         l1207 0132                                           l2007 5654  
                                         l1119 1B26                                           l1240 0618  
                                         l1224 03BE                                           l1216 01D8  
                                         l1208 012C                                           l1144 56C0  
                                         l2008 55EC                                           l1217 07D0  
                                         l1241 0584                                           l1225 03FC  
                                         l1145 5678                                           l2009 5628  
                                         l1129 1DC8                                           l1250 06C4  
                                         l1226 04C0                                           l1218 025A  
                                         l1146 56EE                                           l1243 0632  
                                         l1235 0526                                           l1219 029C  
                                         l1147 5690                                           l1172 31DE  
                                         l1260 085E                                           l1252 07C6  
                                         l1244 0624                                           l1148 56A8  
                                         l1253 07B8                                           l1229 046A  
                                         l2061 633E                                           l1093 16CE  
                                         l1085 15AC                                           l1510 5764  
                                         l1182 2656                                           l1270 0914  
                                         l1246 0656                                           l1190 0020  
                                         l1511 576E                                           l1503 5716  
                                         l1175 32C0                                           l1183 27CC  
                                         l1255 0820                                           l1247 065A  
                                         l1191 00E4                                           l1095 1726  
                                         l1087 15E8                                           l1512 577C  
                                         l1504 5726                                           l1520 5AA6  
                                         l1280 09D4                                           l1272 0934  
                                         l1248 0672                                           l1192 00B8  
                                         l1185 2890                                           l1265 08F8  
                                         l1257 0844                                           l1249 07AC  
                                         l1193 0064                                           l1097 177E  
                                         l1089 1660                                           l1610 3E22  
                                         l1506 5744                                           l1178 2682  
                                         l1274 0A6A                                           l1266 08A0  
                                         l2066 553E                                           l1507 573C  
                                         l1523 5AC6                                           l1179 2592  
                                         l1259 08E2                                           l1531 62FE  
                                         l2067 54CC                                           l1099 17D6  
                                         l1524 5AD0                                           l1516 5A8C  
                                         l1276 0A4C                                           l1196 01DE  
                                         l2068 5536                                           l1525 5ADE  
                                         l1517 5A98                                           l1277 0950  
                                         l1189 000E                                           l1614 3E4C  
                                         l1550 45A0                                           l1551 45D0  
                                         l1519 5AAE                                           l1711 6606  
                                         l1279 0A64                                           l1199 00F2  
                                         l1624 3EA8                                           l1704 4958  
                                         l1560 4626                                           l1633 3EE6  
                                         l1625 3E9E                                           l1705 494C  
                                         l1553 460E                                           l1634 3EDC  
                                         l1554 45FE                                           l1490 5084  
                                         l1619 3EB2                                           l1707 4974  
                                         l1547 4540                                           l1651 42E8  
                                         l1643 4C8E                                           l1491 5046  
                                         l1580 51AE                                           l1636 3F0A  
                                         l1484 4FF2                                           l1637 3F26  
                                         l1741 57EA                                           l1549 455E  
                                         l1653 4314                                           l1645 4CB6  
                                         l1493 50B8                                           l1485 4FEC  
                                         l1582 51EC                                           l1638 3F56  
                                         l1742 57F8                                           l1654 434E  
                                         l1646 4CF4                                           l1583 51D6  
                                         l1751 5C08                                           l1559 4632  
                                         l1663 43D6                                           l1655 4376  
                                         l1647 4D1A                                           l1487 5034  
                                         l1752 5C16                                           l1664 43CA  
                                         l1585 5214                                           l1737 57B6  
                                         l1657 43B2                                           l1681 4A32  
                                         l1586 520A                                           l1738 57AA  
                                         l1658 43A2                                           l1682 4A42  
                                         l1579 51B8                                           l1747 5BE0  
                                         l1675 49B0                                           l1668 546A  
                                         l1692 623E                                           l1748 5BD4  
                                         l1669 549A                                           l1677 49D8  
                                         l1686 654A                                           l1758 5E2E  
                                         l1678 4A0A                           _ADCC_StartConversion 6792  
                                         l1759 5E22                                           l1679 4A1A  
                                         l1696 48BC                                           l1698 4934  
                                         l1962 608C                                           l1699 4924  
                                         l1971 5FEA                                           l1963 6086  
                                         l1980 6364                                           l1972 5FE0  
                                         l1965 60A6                                           l1966 609C  
                                         l1992 5B62                                           l1985 5F40  
                                         l1993 5B92                                           l1986 5F3A  
                                         l1979 636E                                           l1995 5BAE  
                                         l1996 5B9E                                           l8360 54C6  
                                         l9430 0444                                           l9422 03FC  
                                         l9450 052A                                           l9612 5B9E  
                                         ?_sin 0066                                           l9534 0862  
                                         l9358 0186                                           l9474 0624  
                                         l9548 08A4                                           l9584 0A4C  
                                         l9826 54CC                          __size_ofi2__div_to_l_ 0128  
                                         STR_1 FFC4                                           STR_2 FFAF  
                                         STR_3 FFB8                                           STR_4 F7A4  
                                         STR_6 FFAF                                           STR_7 FFB8  
                                         STR_9 FFBC                                           _LATA 000F79  
                                         _LATB 000F7A                                           _LATC 000F7B  
                                         _LATD 000F7C                                           _LATE 000F7D  
                                         _LATF 000F7E                                           _LATG 000F7F  
                                         _LATH 000F80                                   printf@tmpval 0180  
                                         _T6PR 000FB0                                           _PMD0 000E4C  
                                         _PMD1 000E4D                                           _PMD2 000E4E  
                                         _PMD3 000E4F                                           _PMD4 000E50  
                                         _PMD5 000E51                                           u9050 51A0  
                                         u9090 521E                                           u9500 3E3E  
                                         u9431 3DE0                                           u9600 3EEE  
                                         u9441 3DF4                                           u9530 3E7C  
                                         u9470 3E14                                           u9641 4998  
                                         u9570 3EBA                                           u9810 5AB2  
                                         _PLLR 007230                                           u9661 49C0  
                                         u9750 5748                                           _TMR6 000FAF  
                                         _WPUA 000E91                                           _WPUB 000E99  
                                         _WPUC 000EA1                                           _WPUD 000EA6  
                                         _WPUE 000EAE                                           _WPUF 000EB3  
                                         _WPUG 000EBB                                           _WPUH 000EC0  
                        ??_EUSART2_Receive_ISR 005E                               __end_of_ADCC_ISR 6532  
                                         _Irms 00CB                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write 6112                                           _Vrms 00C8  
                                         _acos 5F88                                           _fabs 6460  
                                         _atan 3C0C                                           _asin 357E  
                                         _atoi 4FEA                                           _main 5A00  
                                         _line 02C0                                   ___ftpack@arg 0117  
                                 ___ftpack@exp 011A                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 005F  
                                         _sqrt 4128                                   i2___ftadd@f1 0040  
                                 i2___ftadd@f2 0043                                           sin@f 0066  
                                 i2___ftge@ff1 002A                                           sin@y 0069  
                                 i2___ftge@ff2 002D                                           prodh 000FF4  
                                         prodl 000FF3                                           start 00FE  
                              _timer5ReloadVal 01D6                                   i2___ftdiv@f1 0015  
                                 i2___ftdiv@f2 0018                                   i2___ftdiv@f3 0020  
                              __end_ofi2_scale 2D0C                   __end_of_EUSART2_Transmit_ISR 63C6  
                                 i2___ftneg@f1 0024                                __end_ofi2_putch 67B6  
                                __CFG_CSWEN$ON 000000                                   ___ftmul@cntr 0153  
                                 i2___ftmul@f1 0027                                   i2___ftmul@f2 002A  
                                 ___param_bank 000000                     ??_TMR7_SetInterruptHandler 011A  
                                 ___ftmul@sign 0154                                   i2___ftsub@f1 0060  
                                 i2___ftsub@f2 0063                                   i2___fttol@f1 003D  
                     __size_ofi2_EUSART2_Write 0046                                   ___fttol@exp1 0163  
                              _timer7ReloadVal 01D8                                   i2___lltoft@c 0009  
                                 ___fttol@lval 015F                                          ??_sin 005E  
                              ?_FVR_Initialize 0001                 __size_of_OSCILLATOR_Initialize 001C  
                __end_of_OSCILLATOR_Initialize 6684                       ?_terminal_textAttributes 018E  
                            ??_TMR7_WriteTimer 0102                                          l10082 5080  
                                        l11078 4782                                          l11088 47A8  
                                        l10672 1BC0                                          l10656 1B4E  
                                        l10674 1C18                                          l10666 1B8C  
                                        l13612 56DA                                          l13614 56E4  
                                        ?_acos 008E                                          ?_fabs 0027  
                                        ?_atan 0058                                          ?_asin 0079  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_atoi 012B  
                                        ?_main 0001                                          _ADCLK 000F57  
                                        _ADCNT 000F67                                          _ADPCH 000F5F  
                                        _ADREF 000F58                                __end_of___awdiv 5786  
                                        _ADPRE 000F5E                                __end_of___ftadd 3F7C  
                                        STR_10 FFC0                                          STR_11 FFF5  
                                        STR_12 FFC9                                          STR_20 FFC8  
                                        STR_13 FFCC                                          STR_21 FFCB  
                                        STR_30 FF6D                                          STR_14 FFDE  
                                        STR_22 FFD1                                          STR_15 FFE4  
                                        STR_23 FFD7                                          STR_31 FFCE  
                                        STR_40 FA6A                                          STR_16 FFF0  
                                        STR_24 FFDD                                          STR_32 FFD4  
                                        STR_17 FFF8                                          STR_25 FFE3  
                                        STR_33 FFDA                                          STR_41 FFA4  
                                        STR_18 FFC9                                          STR_42 FFAF  
                                        STR_26 FFE9                                          STR_34 FFE0  
                                        STR_50 FB8B                                          STR_43 FFB8  
                                        STR_19 FFFA                                          STR_27 FFEF  
                                        STR_35 FFE6                                          STR_51 FF7C  
                                        STR_28 FFEF                                          STR_36 FFEC  
                                        STR_44 FF9E                                          STR_60 FB1E  
                                        STR_52 F9D4                                __end_of___awmod 5AE8  
                                        STR_29 FFFA                                          STR_45 FFAF  
                                        STR_37 FFF2                                          STR_61 FF21  
                                        STR_53 FEC4                                          STR_38 FFF2  
                                        STR_46 FFB8                                          STR_54 FCF9  
                                        STR_62 FC8A                                          STR_70 FAE6  
                                        STR_39 FFFC                                          STR_47 FF98  
                                        STR_71 FF12                                          STR_55 FEF4  
                                        STR_63 FE03                                          STR_48 FFB4  
                                        STR_64 FDC5                                          STR_56 FD82  
                                        STR_72 FC3B                                          STR_80 F97E  
                                        _ADRPT 000F66                                          STR_73 FEE4  
                                        STR_49 FEB3                                          STR_57 FE90  
                                        STR_65 FE7B                                          STR_81 F918  
                                        STR_90 FFAA                                          STR_66 FD3E  
                                        STR_58 FD1C                                          STR_74 FC12  
                                        STR_82 FBBA                                          STR_75 FF70  
                                        STR_59 FF4A                                          STR_67 FE66  
                                        STR_83 FCD4                                          STR_91 F187  
                                        STR_92 FDA4                                          STR_68 FD60  
                                        STR_76 FBE8                                          STR_84 FA6D  
                                        STR_77 FF57                                          STR_69 FF03  
                                        STR_93 FCAF                                          STR_85 FA26  
                                        STR_86 FED4                                          STR_78 FE1D  
                                        STR_94 FC63                                          STR_95 FE4F  
                                        STR_79 FE36                                          STR_87 FAAC  
                                        STR_88 FF2F                                          STR_96 FDE5  
                                        STR_97 FF64                                          STR_89 FB56  
                                        STR_98 FF3D                                          STR_99 FF87  
                              __end_of___ftdiv 4D4C                                __end_of___ftneg 6558  
                              __end_of___lldiv 580A                                          ?_sqrt 0066  
                                        u10120 43DC                                          u10041 42CC  
                                        u10061 42F8                                          u10331 48A0  
                                        u10420 57BA                                __end_of___ftmul 4A7C  
                                        u10350 48DA                                          u10190 4638  
                                        u11070 0A7C                                          u11080 0AAC  
                                        u10600 00DA                                          u11320 54FE  
                                        u10450 5BE4                                          u13010 47A8  
                                        u10355 48D2                                ___awdiv@divisor 011F  
                                        u10390 495E                                          u10630 0160  
                                        u11087 0AA2                                          u10607 00D0  
                                        u10640 0166                                          u11520 6022  
                                        u11280 5F62                                __end_of___llmod 5C28  
                                        u10570 004C                                          u12090 1626  
                              __end_of___ftsub 6268                                          u10900 0650  
                                        u10820 0444                                          u10740 02D4  
                                        u12260 1B8C                                __end_of___fttol 4986  
                                        u10637 0156                                          u11621 4C76  
                                        u10670 01A8                                          u10590 009C  
                                        u11550 566C                                          u12270 1BB2  
                                        u11287 5F58                                          u12280 1BC0  
                                        u10745 02CA                                          u10577 0042  
                                        u11641 4C9E                                          u10690 020E  
                                        u10860 0568                                          u10780 03CE  
                                        u10677 019E                                          u10597 0092  
                                        u10790 040E                                          u10697 0204  
                                        u10890 0640                                          _T5CLK 000FC6  
                                        _T5CON 000FC3                                          _T7CLK 000F33  
                                        _T6CON 000FB1                                 __CFG_DEBUG$OFF 000000  
                                        _T7CON 000F30                                          _T6HLT 000FB2  
                                        u16927 5A0C                                          i1l213 007C  
                                        i1l215 009C                                          i1l217 00A6  
                                        i2l202 512C                                          i2l204 5138  
                                        i2l206 5142                                          i1l390 63BC  
                                        i2l400 533E                                          i2l402 538E  
                                        i1l626 6570                                          i1l389 63C0  
                                        i1l901 5D5E                                          i1l910 5D8E  
                                        i1l904 5D6E                                          i1l913 5D9E  
                                        i1l907 5D7E                                          i2l700 6696  
                                        i1l916 5DAE                                          _T6TMR 000FAF  
                                        i2l374 6160                                          i2l375 615E  
                                        i2l377 6174                                          i2l378 619A  
                                        _T6RST 000FB4                                          i2l379 6198  
                                        i2l395 52F6                                          i2l396 5318  
                                        i2l397 533A                                          i1l878 62E4  
                                        i2l882 2412                                          i2l890 20AA  
                                        i2l891 20D2                                          i2l883 1EF0  
                                        i2l892 20FA                                ___awdiv@counter 0121  
                                        i2l885 1F2A                                          i2l894 224E  
                                        i2l886 1FA8                                          i2l895 22CC  
                                        i2l887 200A                                          i2l896 240E  
                                        i2l888 219C                                          i2l889 20E0  
                                        _OSCEN 000E47                                          _TMR5H 000FC2  
                                        _TMR5L 000FC1                                          _TMR7H 000F2F  
                                        _TMR7L 000F2E                                   i2__div_to_l_ 464A  
                                        _TRISA 000F81                                          _TRISB 000F82  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                           __end_ofsin@coeff_a F16C                             __end_ofsin@coeff_b F187  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                          _Imeas 00CE  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                                __CFG_WRT4$OFF 000000                                  __CFG_WRT5$OFF 000000  
                                 ___lltoft@exp 0127                                  __CFG_WRT6$OFF 000000  
                      ??_ADCC_IsConversionDone 0100                                  __CFG_WRT7$OFF 000000  
            __size_of_TMR6_SetInterruptHandler 000E                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                      ?_TMR6_SetInterruptHandler 0117  
                               __CFG_EBTR6$OFF 000000                                 __CFG_EBTR7$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                               __end_of_TMR5_ISR 642E  
                             __end_of_TMR6_ISR 650A                               __end_of_TMR7_ISR 63FA  
                               __CFG_EBTRB$OFF 000000                                     i2isdigit@c 0003  
                                ___awtoft@sign 0122                      ??_terminal_ringBufferPull 01AE  
                              __end_of_dpowers F0DD                                          acos@x 008E  
                                        fabs@d 0027                                     i2scale@scl 003C  
                                        _floor 4E32                                          _frexp 5910  
                                        _errno 00E6                          ?_ADCC_StartConversion 0001  
                                        _scale 243C                                __end_of_isdigit 660E  
                                        atan@f 0058                                          atan@x 0063  
                                        atan@y 0060                             __CFG_MCLRE$EXTMCLR 000000  
                                ___ftpack@sign 011B                                          asin@x 0079  
                                        asin@y 0088                                          atoi@a 0130  
                                        atoi@s 012B                                          _putch 6730  
                               __pbitbssCOMRAM 02F0                                 ?_EUSART2_Write 0001  
                                        pclath 000FFA                                          sin@x2 006F  
                                        tablat 000FF5                               __end_ofi2___ftge 55EA  
                             __end_ofi2___wmul 65A4                                 ??_EUSART2_Read 0117  
                                        sqrt@a 0066                                          sqrt@i 006F  
                                        sqrt@q 0073                                          sqrt@x 0076  
                                        sqrt@z 0070                                          status 000FD8  
                                        wtemp6 0060                                __end_of_strncmp 555A  
                              __end_of_strncpy 5BC0                               __end_ofi2_fround 357E  
               ?_INTERRUPT_InterruptManagerLow 0001                                  i2___ftdiv@exp 001F  
                           __size_ofi2___awdiv 0084                             __size_ofi2___ftadd 01AC  
                           __size_ofi2___awmod 0070                             __size_ofi2___ftdiv 00E6  
                           __size_ofi2___ftneg 0024                             __size_ofi2___lldiv 0082  
                           __size_ofi2___ftmul 00F4                             __size_ofi2___llmod 0066  
                           __size_ofi2___ftsub 0042                             __size_ofi2___fttol 00F4  
                             __end_ofi2_printf 156E                 ??_TMR6_DefaultInterruptHandler 0100  
        __end_of_EUSART2_SetTxInterruptHandler 6776         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler 6768                                _TMR5_Initialize 60C8  
                              __initialization 5E78                              i2___lldiv@divisor 0005  
                                 __end_of_acos 5FDE                                   __end_of_fabs 6490  
                                 __end_of_atan 3DCE                                   __end_of_asin 37E8  
                                 __end_of_atoi 50C2                                   __end_of_main 5A76  
                            i2___lldiv@counter 000D                                  i2___ftmul@exp 0030  
                                 __end_of_sqrt 42BA                                     i2printf@ap 0076  
                                   i2printf@cp 0074                          __end_of_ringBufferLUT 1EEA  
                               __CFG_SCANE$OFF 000000                        FLASH_ReadByte@flashAddr 0117  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                                  ?i2___ftpack 0001                                         ??_acos 005E  
                                       ??_fabs 002A                                         ??_atan 005B  
                                  ?i2___lltoft 0009                                         ??_asin 005E  
                                       ??_atoi 012D                                         ??_main 01B7  
                                ___fttol@sign1 015E                       _TMR5_SetInterruptHandler 675A  
                                       ??_sqrt 0069                                  __activetblptr 000003  
                      __size_of_FLASH_ReadByte 001A                        __size_of_FLASH_ReadWord 0042  
                   __size_of_getDeviceIDString 008A                           __size_of__tdiv_to_l_ 0134  
                              _TMR6_Initialize 642E                             _TRIAC_Firing_Angle 00FA  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize 5C8E                                         _ADCON0 000F60  
                                       _ADCON1 000F59                                         _ADCON2 000F5A  
                                       _ADCON3 000F5B                       _eusart2TxBufferRemaining 01DC  
                                       ?_floor 0056                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                                         ?_frexp 0001  
                             __end_of___altoft 5A00                               ___llmod@dividend 0124  
                                       _ADLTHH 000F6B                                         ?_scale 0155  
                                       STR_100 FF91                                         _ADLTHL 000F6A  
                                       STR_101 FEA2                                         _ADRESH 000F64  
                                       _ADRESL 000F63                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                               ___awdiv@dividend 011D  
                                       _ADUTHL 000F6C                               __end_of___awtoft 6322  
                                       _ANSELA 000E92                                         ?_putch 0001  
                                       _ANSELB 000E9A                                         _ANSELD 000EA7  
                                       _ANSELE 000EAF                                         _ANSELF 000EB4  
                             __end_of___ftpack 523E                                         _ANSELG 000EBC  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _T7GATE 000F32                                         _RC2REG 000EF1  
                                       _T7GCON 000F31                               __end_of___lltoft 5E78  
                                       _RC2STA 000EF5                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _ODCOND 000EA5                                         _ODCONE 000EAD  
                                       _ODCONF 000EB2                                         _ODCONG 000EBA  
                                       _ODCONH 000EBF                                         i2l1200 0CFE  
                                       i2l1203 0BAE                                         i2l1212 0C6A  
                                       i2l1221 0DE6                                         i2l1213 0C3E  
                                       i2l1205 0BB2                                         i2l1222 0E4C  
                                       i2l1206 0BDA                                         i2l1215 0C7E  
                                       i2l1207 0BEA                                         i2l2040 4E88  
                                       i2l1240 10D0                                         i2l1224 0E72  
                                       i2l1216 0C90                                         i2l1208 0BE4  
                                       i2l2041 4F02                                         i2l1217 1286  
                                       i2l1241 103E                                         i2l1225 0EB2  
                                       i2l1250 117C                                         i2l1226 0F7A  
                                       i2l1218 0D12                                         i2l1243 10EA  
                                       i2l1235 0FE0                                         i2l1219 0D54  
                                       i2l1172 3460                                         i2l1260 1314  
                                       i2l1252 127C                                         i2l1244 10DC  
                                       i2l2037 4E6E                                         i2l1253 126E  
                                       i2l1229 0F22                                         i2l2046 592C  
                                       i2l2038 4E60                                         i2l1430 376A  
                                       i2l1510 586C                                         i2l1182 2ABE  
                                       i2l1270 13CA                                         i2l1246 110E  
                                       i2l1190 0ADA                                         i2l1511 5876  
                                       i2l1503 581E                                         i2l1175 3538  
                                       i2l1183 2C26                                         i2l1255 12D6  
                                       i2l1247 1112                                         i2l1191 0B9C  
                                       i2l1512 5884                                         i2l1504 582E  
                                       i2l1520 5B16                                         i2l1280 1488  
                                       i2l1272 13EA                                         i2l1248 112A  
                                       i2l1192 0B70                                         i2l1185 2CE2  
                                       i2l1265 13AE                                         i2l1257 12FA  
                                       i2l1249 1262                                         i2l1193 0B1E  
                                       i2l1610 3FCE                                         i2l1506 584C  
                                       i2l1178 2AE8                                         i2l1274 151E  
                                       i2l1266 1356                                         i2l1451 3DB0  
                                       i2l1427 35C6                                         i2l1507 5844  
                                       i2l1523 5B36                                         i2l1179 2A02  
                                       i2l1259 1398                                         i2l1524 5B40  
                                       i2l1516 5AFC                                         i2l1276 1500  
                                       i2l1196 0C96                                         i2l1373 59B6  
                                       i2l1429 36BA                                         i2l1525 5B4E  
                                       i2l1517 5B08                                         i2l1277 1406  
                                       i2l1189 0AC8                                         i2l1614 3FF8  
                                       i2l1374 59AA                                         i2l1446 3C42  
                                       i2l1550 46C8                                         i2l1543 6482  
                                       i2l1551 46F8                                         i2l1519 5B1E  
                                       i2l1711 6644                                         i2l1279 1518  
                                       i2l1199 0BAA                                         i2l1624 4054  
                                       i2l1704 4B42                                         i2l1448 3C9A  
                                       i2l1560 474E                                         i2l1633 4092  
                                       i2l1625 404A                                         i2l1537 4FD4  
                                       i2l1705 4B36                                         i2l1449 3D9E  
                                       i2l1553 4736                                         i2l1634 4088  
                                       i2l1538 4F54                                         i2l1554 4726  
                                       i2l1619 405E                                         i2l1707 4B5E  
                                       i2l1643 4D74                                         i2l1547 4668  
                                       i2l1651 441A                                         i2l1580 525C  
                                       i2l1636 40B6                                         i2l1637 40D2  
                                       i2l1645 4D9C                                         i2l1741 58F0  
                                       i2l1549 4686                                         i2l1653 4446  
                                       i2l1582 529A                                         i2l1638 4102  
                                       i2l1646 4DDA                                         i2l1742 58FE  
                                       i2l1654 4480                                         i2l1583 5284  
                                       i2l1647 4E00                                         i2l1751 5CD4  
                                       i2l1559 475A                                         i2l1663 4508  
                                       i2l1655 44A8                                         i2l1752 5CE2  
                                       i2l1664 44FC                                         i2l1585 52C2  
                                       i2l1681 4C1A                                         i2l1737 58BC  
                                       i2l1657 44E4                                         i2l1586 52B8  
                                       i2l1682 4C2A                                         i2l1826 3814  
                                       i2l1738 58B0                                         i2l1658 44D4  
                                       i2l1579 5266                                         i2l1675 4B98  
                                       i2l1827 38F6                                         i2l1747 5CAC  
                                       i2l1668 558A                                         i2l1692 6280  
                                       i2l1828 394E                                         i2l1748 5CA0  
                                       i2l1677 4BC0                                         i2l1669 55BA  
                                       i2l1829 3A38                                         i2l1678 4BF2  
                                       i2l1686 65BA                                         i2l1758 5EE6  
                                       i2l1679 4C02                                         i2l1759 5EDA  
                                       i2l1696 4AA8                                         i2l1698 4B1E  
                                       i2l1699 4B0E                                         i2l1955 4164  
                                       i2l1956 4156                                         i2l1958 41B6  
                                       _RG7PPS 000E89                                         _TABLAT 000FF5  
                                i2putch@txData 0002                                         _FVRCON 000EC4  
                                    ??i2_scale 0039                               __end_of___lwtoft 65EC  
                      TMR7_WriteTimer@timerVal 0100                                         _OSCFRQ 000E49  
                                       _NVMDAT 000F76                                      ??i2_putch 0002  
                                       _RX2PPS 000E11                                         _TX2REG 000EF2  
                                       _TX2STA 000EF6             __end_of_ADC_postProcessingCallback 243C  
                   _ADC_postProcessingCallback 1EEA                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                                 __CFG_XINST$OFF 000000  
                              _TMR7_Initialize 602E                                   i2_scale$3531 0039  
                             __end_of__powers_ F104           __size_of_ADCC_SetADIInterruptHandler 000E  
              __end_of_terminal_ringBufferPull 488E                                         ___ftge 5438  
                                       ___wmul 64BA                                      ??___awdiv 0121  
                                    ??___ftadd 0131                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 011B                                      ??___ftdiv 013D  
                                    ??___ftneg 0126                                      ??___lldiv 011F  
                                    ??___ftmul 014C                                      ??___llmod 012C  
                                    ??___ftsub 013D                                      ??___fttol 0159  
                     ??_terminal_setCursorHome 018E                                         _fround 3074  
                                       clear_0 5EA0                                         clear_1 5EB2  
                                       clear_2 5EC2                           _eusart2RxStringReady 07E8  
                             ___awdiv@quotient 0123                                ___awmod@divisor 0119  
                              ___awmod@counter 011B                                         _printf 0000  
                                       _strcat 607C                                         _strchr 6322  
                                       _strcmp 5FDE                                         _strcpy 635A  
                                    ?_ADCC_ISR 0001                                         _strlen 5F30  
                               i2___awdiv@sign 000C                                         _strstr 55EA  
                                       floor@i 0059                                         floor@x 0056  
                        ___ftmul@f3_as_product 0150                               _background_color 00E8  
                              _ADCC_Initialize 5CF4                              ??i2_EUSART2_Write 0001  
                               _PMD_Initialize 664C                        FLASH_ReadWord@flashAddr 011B  
                                    ??_isdigit 0117                              __end_ofi2___awdiv 588E  
                            __end_ofi2___ftadd 4128                              __end_ofi2___awmod 5B58  
                            __end_ofi2___ftdiv 4E32                                 i2___ftadd@exp1 004B  
                               i2___ftadd@exp2 004A                              __end_ofi2___ftneg 65C8  
                            __end_ofi2___lldiv 5910                                         sin@sgn 0072  
                            __end_ofi2___ftmul 4C64                              __end_ofi2___llmod 5CF4  
                            __end_ofi2___ftsub 62AA                              __end_ofi2___fttol 4B70  
                               i2___ftadd@sign 0049                                   __mediumconst F0B4  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                           _EUSART2_Transmit_ISR 6390  
                       ??_ADCC_StartConversion 0100                                 i2___awmod@sign 0006  
                                       sqrt@og 006C                                ??_EUSART2_Write 0117  
     TMR5_SetInterruptHandler@InterruptHandler 0117       TMR7_SetInterruptHandler@InterruptHandler 0117  
  ADCC_SetADIInterruptHandler@InterruptHandler 0117       TMR6_SetInterruptHandler@InterruptHandler 0117  
                               peakToRMS@Angle 0097                                      ??_strncmp 0123  
                                    ??_strncpy 011D        terminal_textAttributes@background_color 018E  
                __size_of_INTERRUPT_Initialize 0012                                _eusart2RxBuffer 0280  
                      __end_of_TMR5_Initialize 6112                              __end_ofi2_isdigit 664C  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00B6  
                            _SYSTEM_Initialize 6490           __end_of_TMR7_DefaultInterruptHandler 67C0  
        __size_of_TMR7_DefaultInterruptHandler 0002                   _TMR7_DefaultInterruptHandler 67BE  
                               i2___ftdiv@cntr 001E                                _eusart2TxBuffer 0200  
                                   __accesstop 0060                        __end_of__initialization 5ECA  
                                   ___altoft@c 004C                                 i2___ftdiv@sign 0023  
                                   ___ftadd@f1 012B                                     ___ftadd@f2 012E  
                          __size_ofi2___ftpack 00AE                                 i2printf@tmpval 007C  
                                   ___ftge@ff1 0117                                     ___ftge@ff2 011A  
                           ?_SYSTEM_Initialize 0001                            __size_ofi2___lltoft 005C  
                                 eval_poly@res 0055                                  ___rparam_used 000001  
                                   ___ftdiv@f1 0137                                     ___ftdiv@f2 013A  
                                   ___ftdiv@f3 0141                                _TMR5_WriteTimer 6684  
                                   ___ftneg@f1 0123                                     ___awtoft@c 011F  
                               i2___ftpack@arg 0001                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                                 i2___ftpack@exp 0004  
                           i2__tdiv_to_l_@cntr 000E                              i2___llmod@counter 0016  
                           i2__tdiv_to_l_@quot 000A                                     ___ftmul@f1 0146  
                                   ___ftmul@f2 0149              terminal_ringBufferPull@charNumber 01B1  
                                   ___ftsub@f1 0137                                     ___ftsub@f2 013A  
                                   ___fttol@f1 0155                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                        ??_terminal_printNewline 018E  
                                 __pidataBANK0 6722                            ??_SYSTEM_Initialize 011C  
                                   ___lltoft@c 011F                                      ?_TMR5_ISR 0001  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                                __end_of_floor 4F10                                  __end_of_frexp 5988  
                               i2___ftmul@cntr 0034                                  __end_of_scale 28BC  
                               i2___ftmul@sign 0035                 ?_EUSART2_SetTxInterruptHandler 0117  
                                __end_of_putch 673E                                    i2printf@idx 0071  
                     ??_terminal_clearTerminal 018E                                    i2printf@len 0072  
                                  i2printf@exp 007A                                    i2printf@val 0083  
                      __end_of_TMR6_Initialize 6460                         __end_of_PMD_Initialize 6668  
                               i2___fttol@exp1 004B                                     ___lwtoft@c 0009  
                               i2___fttol@lval 0047                                      ?i2___ftge 002A  
                                   ??_ADCC_ISR 005E                           __end_of_EUSART2_Read 61E4  
                                    ?i2___wmul 000F                                  i2__tdiv_to_l_ 43EE  
                                   __div_to_l_ 4520                                      ?i2_fround 0036  
                        ?_EUSART2_Transmit_ISR 0001                                      ?i2_printf 0066  
                  ADCC_StartConversion@channel 0100                                __div_to_l_@exp1 0122  
                                      ??_floor 0059                                __div_to_l_@cntr 0121  
                                      ??_frexp 0006                                        ??_scale 0158  
                    __end_of_SYSTEM_Initialize 64BA                                 i2___lltoft@exp 0011  
                              __div_to_l_@quot 011D                                        ??_putch 0118  
                                 peakToRMS@RMS 00A3                             i2___lldiv@quotient 0009  
                                _eusart2RxHead 00EB                                  _eusart2TxHead 01DE  
                                   __pbssBANK0 00C8                                     __pbssBANK1 01B9  
                                   __pbssBANK2 0200                                  _eusart2RxTail 01DB  
                                _eusart2TxTail 01DD                             __size_of_eval_poly 00DA  
                             i2__tdiv_to_l_@f1 0001                               i2__tdiv_to_l_@f2 0004  
                      __end_of_TMR7_Initialize 607C                             __size_of_peakToRMS 01C6  
                ?_TMR7_DefaultInterruptHandler 0001                                  __div_to_l_@f1 0117  
                                __div_to_l_@f2 011A                          EUSART2_Read@readValue 0117  
                              _TMR7_WriteTimer 6558                               ??_FVR_Initialize 0117  
                               _peakToRMS$3515 00A0                                 _peakToRMS$3516 009A  
                               _peakToRMS$3517 009D                          ringBufferLUT@arg_buff 01A7  
                                  _Irms_offset 00EF                                        ?___ftge 0117  
            terminal_ringBufferPull@index_2114 01B3                                        ?___wmul 0125  
                        _currentMeasuredToPeak 5DBA                                __CFG_PPS1WAY$ON 000000  
             __end_of_TMR6_SetInterruptHandler 675A                        __end_of_ADCC_Initialize 5D58  
                                   ??_TMR5_ISR 0003                                     ??_TMR6_ISR 0101  
                                   ??_TMR7_ISR 0102                                        _ADFLTRH 000F73  
                                      _ADFLTRL 000F72                                      ?___altoft 004C  
                                      ?_fround 0155                                        _ADPREVH 000F62  
                                      _ADPREVL 000F61                                      ?___awtoft 011F  
                                    ?___ftpack 0117                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                __size_of_terminal_setCursorHome 0010  
                                      ?_printf 0164                                ?_PMD_Initialize 0001  
                                    ?___lltoft 011F                                 ?i2__tdiv_to_l_ 0001  
                                   ??i2___ftge 0030                                        ?_strcat 0117  
                                      ?_strchr 0117                                        ?_strcmp 0117  
                                      ?_strcpy 0117                                        ?_strlen 0117  
                               _FLASH_ReadByte 66A0                                      ?___lwtoft 0009  
                                      ?_strstr 0126                                     ??i2___wmul 0013  
                               _FLASH_ReadWord 61E4                                        u1182_41 43FE  
                                      u1184_41 442A                                        u1526_41 3F8C  
                                      u1527_41 3FA0                                        u1547_41 4B80  
                                      u1556_41 4D5C                                        u1549_41 4BA8  
                                      u1558_41 4D84                                        i2l13312 10DC  
                                      i2l13260 0EB2                                        i2l13422 1500  
                                      i2l12468 55E6                                        i2l13372 1318  
                                      i2l13268 0EFC                                        i2l13196 0C3E  
                                      i2l13288 0FE4                                        i2l13386 135A  
                                      u1577_41 4A8C                                        _SP2BRGH 000EF4  
                                   ??i2_fround 0039                                        _SP2BRGL 000EF3  
                                      _OSCCON1 000E43                                        _OSCCON3 000E45  
                  __end_of_EUSART2_Receive_ISR 5396                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                   ??i2_printf 0068                                        _NVMADRH 000F75  
                                      _NVMADRL 000F74                                        _OSCTUNE 000E48  
                                      _NVMCON2 000F78                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE                 __size_of_ADCC_IsConversionDone 000C  
                __end_of_ADCC_IsConversionDone 67AC                       _acquisitionTimerCallback 5D58  
                      __end_of_TMR5_WriteTimer 66A0               __size_of_terminal_textAttributes 0368  
                                      i2_scale 28BC                               ?_TMR5_Initialize 0001  
                                      i2_putch 67AC           __end_of_terminal_textAttributesReset 66E0  
        __size_of_terminal_textAttributesReset 0012                   _terminal_textAttributesReset 66CE  
                            __end_of__npowers_ F12B                                        __Hparam 0000  
                                   _scale$3335 0158                                        __Lparam 0000  
                   ??_TMR5_SetInterruptHandler 011A                                __size_of___ftge 0092  
                                      ___awdiv 5700                                        ___ftadd 3DCE  
                                      ___awmod 5A76                                        ___ftdiv 4C64  
                                      ___ftneg 6532                                        ___lldiv 5786  
                              __size_of___wmul 0028                                        ___ftmul 4986  
                                      ___llmod 5BC0                                        ___ftsub 6226  
                                      ___fttol 488E                                     ??___altoft 0050  
                       __end_of_FLASH_ReadByte 66BA                         __end_of_FLASH_ReadWord 6226  
                                      __pcinit 5E78                                   ??i2___ftpack 0006  
                                   ??___awtoft 0122                                     ??___ftpack 011C  
                            __end_of_eval_poly 4FEA                                __size_of_fround 0294  
                             ?_TMR6_Initialize 0001                        i2___ftmul@f3_as_product 0031  
                                      __ramtop 0E00                __size_of_terminal_clearTerminal 0010  
                                 ??i2___lltoft 000D                                     ??___lltoft 0123  
                                      __ptext0 5A00                                        __ptext1 66F2  
                                      __ptext2 4772                                        __ptext3 156E  
                                      __ptext4 66CE                                        __ptext5 2D0C  
                                      __ptext6 5B58                                        __ptext7 607C  
                                      __ptext8 6702                                        __ptext9 55EA  
                            __end_of_peakToRMS 3C0C                                __size_of_printf 0ABA  
                currentMeasuredToPeak@Measured 0073                                     ??___lwtoft 000C  
                   ringBufferLUT@angle_degrees 01A4                                __size_of_strcat 004C  
                                i2_fround$3530 0039                                __size_of_strchr 0038  
                                i2_fround$3529 003C                                __size_of_strcmp 0050  
                              __size_of_strcpy 0036                                __size_of_strlen 0058  
                            __end_of_hexpowers F14B                                    ?__div_to_l_ 0117  
                              __size_of_strstr 008C                                        _dpowers F0B5  
                        _OSCILLATOR_Initialize 6668                         ??_EUSART2_Transmit_ISR 0100  
                                 i2fround@prec 003F                                        _isdigit 65EC  
                              atan@val_squared 0067                                   __size_of_sin 025E  
                             ___awmod@dividend 0117    ADC_postProcessingCallback@currentADCChannel 00AF  
                     ??_PIN_MANAGER_Initialize 0117                                        atan@val 006A  
                                    _T5CONbits 000FC3              __size_of_TMR7_SetInterruptHandler 000E  
                    ?_TMR7_SetInterruptHandler 0117                                      _T6CONbits 000FB1  
                                      asin@sgn 007C                                      _T7CONbits 000F30  
                      ringBufferLUT@percentage 01AC                                      _T6HLTbits 000FB2  
                   __size_of_SYSTEM_Initialize 002A                          i2EUSART2_Write@txData 0001  
                                      _strncmp 54CA                                 __pintcode_body 50C2  
                                      _strncpy 5B58                           end_of_initialization 5ECA  
                      __end_of_TMR7_WriteTimer 657E                         _terminal_setCursorHome 66F2  
                             ?_TMR7_Initialize 0001                                        int_func 50C2  
                          i2___wmul@multiplier 000F                                      _T6RSTbits 000FB4  
                  ?_ADC_postProcessingCallback 0001                                      i1u1670_28 63E6  
                                    i1u1668_28 64F6                                      i2u1142_40 5850  
                                    i1u1688_28 0086                                      i2u1148_40 5B22  
                                    i2u1181_40 4760                                      i2u1190_40 450E  
                           __end_ofi2___ftpack 52EC                                      i2u1530_40 3FC0  
                                    i2u1194_40 58C0                                      i2u1610_40 0B06  
                                    i2u1610_47 0AFC                                      i2u1523_40 52CC  
                                    i2u1540_40 4066                                      i2u1620_40 0C60  
                                    i2u1612_40 0B54                                      i2u1620_47 0C56  
                                    i2u1612_47 0B4A                                      i2u1533_40 3FEA  
                                    i2u1197_40 5CB0                                      i2u1613_40 0B92  
                                    i2u1613_47 0B88                                      i2u1622_40 0CC6  
                                    i2u1622_47 0CBC                                      i2u1519_40 524E  
                                    i2u1543_40 409A                                      i2u1631_40 0E84  
                                    i2u1536_40 4028                                      i2u1632_40 0EC4  
                                    i2u1616_40 0C18                                      i2u1616_47 0C0E  
                                    i2u1617_40 0C1E                                      i2u1570_40 3C66  
                                    i2u1642_40 10F8                                      i2u1571_40 3C68  
                                    i2u1643_40 1108                                      i2u1635_40 0EFC  
                                    i2u1627_40 0D8C                                      i2u1627_45 0D82  
                                    i2u1660_40 1530                                      i2u1661_40 1560  
                                    i2u1661_47 1556                                      i2u1590_40 4E7A  
                                    i2u1583_40 4B48                                      i2u1639_40 1022  
                                    i2u1576_40 5954                                      i2u1576_48 5956  
                                    i2u1664_48 641A                                      i2u1594_40 38F2  
                                    i2u1674_40 532E                                      i2u1579_40 4AC6  
                                    i2u1595_40 38F4                                      i2u1666_48 651E  
                                    i2u1579_45 4ABE                             __end_ofi2___lltoft 5F30  
                                    i2u1679_48 5116                                ___lldiv@divisor 011B  
                              ___lldiv@counter 0123                             _EUSART2_Initialize 5C28  
                ?_terminal_textAttributesReset 0001                         ?_currentMeasuredToPeak 0073  
                  getDeviceIDString@inputDevID 011D                                i2_EUSART2_Write 615A  
                                ??_getDeviceID 0124                                        printf@c 018D  
                                      printf@f 0164                       ??_heartbeatTimerCallback 0100  
               ??_TMR7_DefaultInterruptHandler 0100                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 0044  
                             ?_ADCC_Initialize 0001                                 __tdiv_to_l_@f1 0117  
                               __tdiv_to_l_@f2 011A                                ??i2__tdiv_to_l_ 0007  
                                      strcmp@r 011C                          __CFG_WDTCPS$WDTCPS_11 000000  
                              ?_FLASH_ReadByte 0117                            ?_EUSART2_Initialize 0001  
                                      strlen@s 0117                   terminal_ringBufferPull@index 01B5  
                                ??__tdiv_to_l_ 011D                                ?_FLASH_ReadWord 011B  
                     _TMR6_SetInterruptHandler 674C                          _TMR5_InterruptHandler 01CA  
                     ?_terminal_ringBufferPull 0001                           __CFG_WDTCCS$LFINTOSC 000000  
                            __size_of_ADCC_ISR 0028            __end_of_ADCC_SetADIInterruptHandler 6792  
                  _ADCC_SetADIInterruptHandler 6784                                      i2___awdiv 580A  
                                    i2___ftadd 3F7C                                      i2___awmod 5AE8  
                             __CFG_FEXTOSC$ECH 000000                                      i2___ftdiv 4D4C  
                                    i2___ftneg 65A4                                      i2___lldiv 588E  
                                    i2___ftmul 4B70                                      i2___llmod 5C8E  
                                    i2___ftsub 6268                                      i2___fttol 4A7C  
                             ?_TMR5_WriteTimer 0001                           ??_EUSART2_Initialize 011A  
                       _terminal_clearTerminal 6712                        TMR5_WriteTimer@timerVal 0001  
                       __size_of_ringBufferLUT 097C                  ??_ADCC_SetADIInterruptHandler 011A  
                                  ___ftdiv@exp 0144                                   _EUSART2_Read 61A0  
                           i2___llmod@dividend 000E                             i2___awdiv@dividend 0007  
                              i2___ftpack@sign 0005                                      i2_isdigit 662E  
                          __size_of__div_to_l_ 012A                                    ___ftmul@exp 014F  
                                    _Avg_Power 01C1                   __end_of_INTERRUPT_Initialize 66F2  
               ??_ADCC_DefaultInterruptHandler 0001                 __size_of_terminal_printNewline 0010  
                               __end_of___ftge 54CA                  __end_of_terminal_printNewline 6712  
                               __end_of___wmul 64E2                              __size_of_TMR5_ISR 0034  
                            __size_of_TMR6_ISR 0028                              __size_of_TMR7_ISR 0034  
                       ?_OSCILLATOR_Initialize 0001                                  __pbitbssBANK0 07E8  
                          __end_of_getDeviceID 662E                                 __end_of_fround 3308  
            __size_of_ADCC_GetConversionResult 0014                      ?_ADCC_GetConversionResult 0001  
                                   floor@expon 005C                               i2___wmul@product 0013  
                               __end_of_printf 0ABA                                  i2_printf$3532 006E  
                               __end_of_strcat 60C8                                 __end_of_strchr 635A  
                               __end_of_strcmp 602E                                   i2printf@flag 0078  
                               __end_of_strcpy 6390                                 __end_of_strlen 5F88  
                                 i2printf@fval 0080                                 __end_of_strstr 5676  
                                 i2printf@prec 0087                            start_initialization 5E78  
                            __size_ofi2___ftge 0090                                     eval_poly@d 004F  
                                   eval_poly@n 0051                                     eval_poly@x 004C  
                           i2___awdiv@quotient 000D                              __size_ofi2___wmul 0026  
         __end_of_TMR5_DefaultInterruptHandler 67C4          __size_of_TMR5_DefaultInterruptHandler 0002  
                 _TMR5_DefaultInterruptHandler 67C2                __size_of_PIN_MANAGER_Initialize 00A2  
                          __end_of__tdiv_to_l_ 43EE                                    __end_of_sin 3A46  
                                    i2printf@c 0089                                      i2printf@f 0066  
              _ADC_postProcessingCallback$3520 00A6                _ADC_postProcessingCallback$3521 00A9  
              _ADC_postProcessingCallback$3522 00AC                _ADC_postProcessingCallback$3518 00B3  
              _ADC_postProcessingCallback$3519 00B0                                i2___fttol@sign1 0046  
                      _terminal_textAttributes 2D0C  EUSART2_SetRxInterruptHandler@interruptHandler 0117  
EUSART2_SetTxInterruptHandler@interruptHandler 0117                              __size_ofi2_fround 0276  
                                   ?i2___awdiv 0007                                     ?i2___ftadd 0040  
                                   ?i2___awmod 0001                                     ?i2___ftdiv 0015  
                                   ?i2___ftneg 0024                                     ?i2___lldiv 0001  
                                   ?i2___ftmul 0027                                     ?i2___llmod 000E  
                                   ?i2___ftsub 0060                                     ?i2___fttol 003D  
                __size_of_ADCC_StartConversion 000E                                    putch@txData 0118  
                            __size_ofi2_printf 0AB4                          __end_of_EUSART2_Write 615A  
                             ?_TMR7_WriteTimer 0100                                     frexp@value 0001  
           terminal_textAttributes@output_buff 0191                        __end_ofi2_EUSART2_Write 61A0  
                              ___llmod@divisor 0128                                ___llmod@counter 012C  
                                   ?i2_isdigit 0001                                 _FVR_ADC_Result 00EC  
                             __CFG_LPBOREN$OFF 000000                               ??_PMD_Initialize 0117  
                                     ??___ftge 011D                                       ??___wmul 0129  
              __size_of_heartbeatTimerCallback 003E                                    __pdataBANK0 00EF  
                                     ??_fround 0158                                  _ringBufferLUT 156E  
               ??_terminal_textAttributesReset 01A0                                       ??_printf 016C  
                            _POS3P3_ADC_Result 00D7                                       ??_strcat 011B  
                   ??_acquisitionTimerCallback 0101                                       ??_strchr 011B  
                                     ??_strcmp 011B                                       ??_strcpy 011B  
                                     ??_strlen 0119                                  peakToRMS@Peak 0094  
                                     ??_strstr 012A                              __size_of___altoft 0078  
                                    _Vpk_const 00F2                                     fround@prec 015E  
                               _eusart2RxCount 01DA                                  ?i2__div_to_l_ 0001  
                            __size_of___awtoft 003A                              __size_of___ftpack 00B0  
                                    _acos$3523 0091                              __size_of___lltoft 005E  
                            __size_of___lwtoft 0024                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                                   _isdigit$2671 0118  
                ?_TMR5_DefaultInterruptHandler 0001                            EUSART2_Write@txData 0117  
                                 _load_on_time 01B9                                       ?i2_scale 0036  
              ??_EUSART2_SetRxInterruptHandler 011A                                      _asin$3524 007F  
                                    _asin$3525 008B                                      _asin$3526 0085  
                                    _asin$3527 0082                                       ?i2_putch 0001  
                                   sin@coeff_a F15D                                     sin@coeff_b F17B  
                        _TMR6_InterruptHandler 01D0                         _PIN_MANAGER_Initialize 5396  
                                    __pintcode 0008                                    _getDeviceID 660E  
                                __pmediumconst F0B4                                       ?___awdiv 011D  
                                    __ptext100 5DBA                                      __ptext101 37E8  
                                    __ptext110 4F10                                      __ptext102 6268  
                                    __ptext111 657E                                      __ptext103 65A4  
                                    __ptext112 4B70                                      __ptext104 4D4C  
                                    __ptext113 3F7C                                      __ptext105 4E32  
                                    __ptext114 65C8                                      __ptext106 4A7C  
                                    __ptext115 523E                                      __ptext107 555A  
                                    __ptext116 66BA                                      __ptext108 5910  
                                    __ptext117 0000                                      __ptext109 5988  
                                     ?___ftadd 012B                                       ?___awmod 0117  
                                     ?___ftdiv 0137               __end_of_TMR7_SetInterruptHandler 674C  
                                     ?___ftneg 0123                                       ?___lldiv 0117  
                                     ?___ftmul 0146                                       ?___llmod 0124  
                                     ?___ftsub 0137                                      __npowers_ F104  
                                     ?___fttol 0155                                 ?_ringBufferLUT 01A0  
            _EUSART2_TxDefaultInterruptHandler 01D3                                    __pintcodelo 0018  
                                  __tdiv_to_l_ 42BA                                       _ADCC_ISR 650A  
                               ??i2__div_to_l_ 0007                  getDeviceIDString@returnString 0121  
                                 ??__div_to_l_ 011D                               _POS12_ADC_Result 01C7  
                                     _BAUD2CON 000EF7                                       ?_isdigit 0001  
                                  _dev_on_time 01BD                                      _eval_poly 4F10  
                    ??_terminal_textAttributes 0190                                      _attribute 00EA  
                                    _peakToRMS 3A46                               __CFG_WDTE$NSLEEP 000000  
                      ?_terminal_setCursorHome 0001                                      _hexpowers F12B  
                       _heartbeatTimerCallback 62AA                                 _dimming_period 00F8  
                                  ??i2___awdiv 000B                                    ??i2___ftadd 0046  
                                  ??i2___awmod 0005                                 __size_of_floor 00DE  
                                  ??i2___ftdiv 001B                                 __size_of_frexp 0078  
                                  ??i2___ftneg 0027                                    ??i2___lldiv 0009  
                                  ??i2___ftmul 002D                                 __size_of_scale 0480  
                                  ??i2___llmod 0016                                    ??i2___ftsub 005E  
                                  ??i2___fttol 0041                                       ?_strncmp 011D  
                                     ?_strncpy 0117                                 __size_of_putch 000E  
                         _INTERRUPT_Initialize 66E0                                       _T6CLKCON 000FB3  
                        _ADCC_IsConversionDone 67A0         terminal_textAttributes@input_attribute 018F  
                 __size_of_EUSART2_Receive_ISR 00AA                                 ___wmul@product 0129  
                    currentMeasuredToPeak@Peak 0079                               ?i2_EUSART2_Write 0001  
                                     _LATFbits 000F7E                                       _LATGbits 000F7F  
                      ??_currentMeasuredToPeak 005E                                    strncpy@from 0119  
                                    atan@recip 0066                                       _IPR1bits 000E20  
                                     _IPR3bits 000E22                                       _PIE1bits 000E2A  
                                  strncpy@size 011B                                       _IPR5bits 000E24  
                                     _PIE3bits 000E2C                                       _PIE5bits 000E2E  
                                  ??i2_isdigit 0001                                       i1u710_20 67A8  
                                     _PIR1bits 000E34                             __end_of__div_to_l_ 464A  
                             ??_FLASH_ReadByte 011B                                       _PIR3bits 000E36  
                                     i1u766_20 62B6                                       i1u767_28 62BA  
                                     _PIR5bits 000E38                                       _PIR8bits 000E3B  
                             ??_FLASH_ReadWord 011F                     ??_TMR6_SetInterruptHandler 011A  
                     __size_of_TMR5_Initialize 004A                                       _TMR5_ISR 63FA  
                                     _TMR6_ISR 64E2                                       _TMR7_ISR 63C6  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0004  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                     _ADCON3bits 000F5B  
                            ___wmul@multiplier 0125                                       i2___ftge 555A  
                                     i2___wmul 657E                        __size_of_FVR_Initialize 0008  
                                   printf@flag 017C                                     printf@fval 0188  
                                   printf@prec 018B                                     ?_eval_poly 004C  
               __end_of_terminal_setCursorHome 6702                              i2___awdiv@divisor 0009  
                                     i2_fround 3308              __size_of_TMR5_SetInterruptHandler 000E  
                                   ?_peakToRMS 0094                              i2___awdiv@counter 000B  
                    ?_TMR5_SetInterruptHandler 0117                  __size_of_EUSART2_Transmit_ISR 0036  
                                     i2_printf 0ABA                            __end_ofatan@coeff_a F15D  
                          __end_ofatan@coeff_b F17B                       __size_of_TMR6_Initialize 0032  
                      ?_terminal_clearTerminal 0001                                      copy_data0 5E8C  
                        ?_INTERRUPT_Initialize 0001                             i2___awmod@dividend 0001  
             __size_of_terminal_ringBufferPull 011C                               __size_ofi2_scale 0450  
               ??_TMR5_DefaultInterruptHandler 0001                               __size_ofi2_putch 000A  
                                    frexp@eptr 0004                __end_of_terminal_textAttributes 3074  
                                   _ADSTATbits 000F65                                       __Hrparam 0000  
             __end_of_ADCC_GetConversionResult 66CE                        __CFG_RSTOSC$EXTOSC_4PLL 000000  
        __end_of_EUSART2_SetRxInterruptHandler 6784         __size_of_EUSART2_SetRxInterruptHandler 000E  
                _EUSART2_SetRxInterruptHandler 6776                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                                ??_ringBufferLUT 01A2  
                     __size_of_TMR7_Initialize 004E                               _foreground_color 00E9  
                      ??_OSCILLATOR_Initialize 0117                               __size_of___awdiv 0086  
                             __size_of___ftadd 01AE                               __size_of___awmod 0072  
                             __size_of___ftdiv 00E8                               __size_of___ftneg 0026  
                        i2___wmul@multiplicand 0011                               __size_of___lldiv 0084  
                                     ___altoft 5988                               __size_of___ftmul 00F6  
                             __size_of___llmod 0068                               __size_of___ftsub 0042  
                             __size_of___fttol 00F8                                    _load_enable 02F0  
                                     ___awtoft 62E8                                       ___ftpack 518E  
             __end_of_acquisitionTimerCallback 5DBA                                    _fround$3333 015B  
                                  _fround$3334 0158                                       ___lltoft 5E1A  
                        __end_ofi2__tdiv_to_l_ 4520                                       ___lwtoft 65C8  
                     _TMR7_SetInterruptHandler 673E                          _TMR7_InterruptHandler 01CD  
                           _ADC_Result_Scaling 00DA        terminal_textAttributes@foreground_color 0190  
                     __size_of_ADCC_Initialize 0064                                     strcat@from 0119  
              ??_INTERRUPT_InterruptManagerLow 0102                 __end_of_terminal_clearTerminal 6722  
                             __size_of_isdigit 0022                                       __ptext10 54CA  
                                     __ptext11 5F30                                       __ptext20 4C64  
                                     __ptext12 6322                                       __ptext21 62E8  
                                     __ptext13 5FDE                                       __ptext30 64BA  
                                     __ptext22 61A0                                       __ptext14 5676  
                                     __ptext31 4986                                       __ptext23 6712  
                                     __ptext15 635A                                       __ptext40 6226  
                                     __ptext32 5A76                                       __ptext24 0000  
                                     __ptext16 660E                                       __ptext41 3DCE  
                                     __ptext33 5700                                       __ptext25 243C  
                                     __ptext17 61E4                                       __ptext50 60C8  
                                     __ptext42 518E                                       __ptext34 42BA  
                                     __ptext26 6730                                       __ptext18 66A0  
                                     __ptext51 675A                                       __ptext43 6532  
                                     __ptext35 4520                                       __ptext27 6112  
                                     __ptext19 4FEA                                       __ptext60 5CF4  
                                     __ptext52 664C                                       __ptext44 5438  
                                     __ptext36 5E1A                                       __ptext28 65EC  
                                     __ptext61 6784                                       __ptext53 5396  
                                     __ptext45 6490                                       __ptext37 5BC0  
                                     __ptext29 3074                                       __ptext70 67C0  
                                     __ptext54 6668                                       __ptext46 602E  
                                     __ptext38 5786                                       __ptext71 62AA  
                                     __ptext63 63C6                                       __ptext55 66E0  
                                     __ptext47 673E                                       __ptext39 488E  
                                     __ptext80 67AC                                       __ptext72 6390  
                                     __ptext64 67BE                                       __ptext56 67B6  
                                     __ptext48 642E                                       __ptext81 615A  
                                     __ptext65 5D58                                       __ptext57 5C28  
                                     __ptext49 674C                                       __ptext90 588E  
                                     __ptext82 662E                                       __ptext74 63FA  
                                     __ptext66 6792                                       __ptext58 6768  
                                     __ptext91 650A                                       __ptext83 3308  
                                     __ptext75 6684                                       __ptext67 67A0  
                                     __ptext59 6776                                       __ptext92 67C4  
                                     __ptext84 5AE8                                       __ptext76 67C2  
                                     __ptext68 6558                                       __ptext93 1EEA  
                                     __ptext85 580A                                       __ptext77 52EC  
                                     __ptext69 64E2                                       __ptext94 3A46  
                                     __ptext86 43EE                                       __ptext78 0ABA  
                                     __ptext95 5F88                                       __ptext87 464A  
                                     __ptext79 28BC                                       __ptext96 357E  
                                     __ptext88 5ED4                                       __ptext97 4128  
                                     __ptext89 5C8E                                       __ptext98 3C0C  
                                     __ptext99 6460                                       _sin$3528 006C  
                                     __powers_ F0DD                         ?_ADCC_IsConversionDone 0001  
                              _Temp_ADC_Offset 00F5                               __size_of_strncmp 0090  
                             __size_of_strncpy 0068                    __size_of_EUSART2_Initialize 0066  
                                   strcpy@from 0119                                 i2_isdigit$2671 0002  
                              _Temp_ADC_Result 01C4                                  __size_of_acos 0056  
                                __size_of_fabs 0030                                  __size_of_atan 01C2  
                                __size_of_asin 026A                                  __size_of_atoi 00D8  
                                __size_of_main 0076                                     _T5GCONbits 000FC4  
                                __size_of_sqrt 0192                           __end_ofi2__div_to_l_ 4772  
                                   strncmp@len 0121                           __CFG_WDTCWS$WDTCWS_7 000000  
                                   _T7GCONbits 000F31                             __CFG_BORV$VBOR_190 000000  
                     __size_of_TMR5_WriteTimer 001C                      _ADCC_ADI_InterruptHandler 00E0  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion 67A0  
                                     int$flags 005F                                       atoi@sign 012F  
                                    printf@idx 0175                                      printf@len 0176  
                                    printf@exp 017E                                      printf@val 0184  
                                  atan@coeff_a F14B                                    atan@coeff_b F16C  
                            ??_TMR5_Initialize 011A                          _terminal_printNewline 6702  
                            i2___awmod@divisor 0003                              i2___awmod@counter 0005  
                                   _INTCONbits 000FF2                                    ??_eval_poly 0053  
                                  _NVMCON1bits 000F77                                    ??_peakToRMS 005E  
                                   _FVRCONbits 000EC4                                       isdigit@c 0119  
                       ??_INTERRUPT_Initialize 0117                                       scale@scl 015B  
         __end_of_TMR6_DefaultInterruptHandler 67C2          __size_of_TMR6_DefaultInterruptHandler 0002  
                 _TMR6_DefaultInterruptHandler 67C0           __end_of_ADCC_DefaultInterruptHandler 67C6  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler 67C4  
                                     intlevel1 0000                                       intlevel2 0000  
                             __tdiv_to_l_@exp1 0125                               __tdiv_to_l_@cntr 0124  
                             __tdiv_to_l_@quot 0120                                      strchr@chr 0119  
                                    strchr@ptr 0117                             ringBufferLUT@index 01AA  
                             ___lldiv@dividend 0117                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 011A                              __CFG_CLKOUTEN$OFF 000000  
                                    strncmp@s1 011D                                      strncmp@s2 011F  
                              _AVSS_ADC_Result 00DD                                      strncpy@cp 011D  
                                    strncpy@to 0117                       __size_of_TMR7_WriteTimer 0026  
                                 ?_getDeviceID 0122                                       printf@ap 017A  
                                     printf@cp 0178                       _ADCC_GetConversionResult 66BA  
               ?_EUSART2_SetRxInterruptHandler 0117                                   ?__tdiv_to_l_ 0117  
                       __size_of_EUSART2_Write 0048                            _EUSART2_Receive_ISR 52EC  
       __end_of_INTERRUPT_InterruptManagerHigh 518E        __size_of_INTERRUPT_InterruptManagerHigh 5186  
               _INTERRUPT_InterruptManagerHigh 0008                              ??_TMR7_Initialize 011A  
                                  _printf$3336 0172                                 _FVR_Initialize 67B6  
                                     strcat@cp 011B                                       strcat@to 0117  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 0117  
                                     strcmp@s2 0119                              ringBufferLUT@line 01A0  
                             ___lldiv@quotient 011F                                       strcpy@cp 011B  
                                     strlen@cp 011B                                       strcpy@to 0117  
                            _getDeviceIDString 5676                                       strstr@s1 0126  
                                     strstr@s2 0128                                     _TX2STAbits 000EF6  
                           ?_getDeviceIDString 011D          __end_of_INTERRUPT_InterruptManagerLow 00FE  
       __size_of_INTERRUPT_InterruptManagerLow 00E6                  _INTERRUPT_InterruptManagerLow 0018  
               __end_of_PIN_MANAGER_Initialize 5438                              ??_ADCC_Initialize 011A  
                            i2__div_to_l_@exp1 000C                              i2__div_to_l_@cntr 000B  
                      _terminal_ringBufferPull 4772                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0007  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 0062  
                ?_ADCC_DefaultInterruptHandler 0001                      ?_acquisitionTimerCallback 0001  
                 ??_ADC_postProcessingCallback 005E                            ??_getDeviceIDString 011F  
            _EUSART2_RxDefaultInterruptHandler 00E3                 __size_of_currentMeasuredToPeak 0060  
                __end_of_currentMeasuredToPeak 5E1A  
