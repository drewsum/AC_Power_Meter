

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Oct 28 11:43:45 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   109                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   110  0000                     
   111                           ; Version 1.45 (B)
   112                           ; Generated 30/01/2018 GMT
   113                           ; 
   114                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   115                           ; All rights reserved.
   116                           ; 
   117                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   118                           ; 
   119                           ; Redistribution and use in source and binary forms, with or without modification, are
   120                           ; permitted provided that the following conditions are met:
   121                           ; 
   122                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   123                           ;        conditions and the following disclaimer.
   124                           ; 
   125                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   126                           ;        of conditions and the following disclaimer in the documentation and/or other
   127                           ;        materials provided with the distribution.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC18LF67K40 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145  0000                     
   146                           	psect	idataBANK0
   147  01463A                     __pidataBANK0:
   148                           	opt stack 0
   149                           
   150                           ;initializer for _Temp_ADC_Offset
   151  01463A  B4                 	db	180
   152  01463B  85                 	db	133
   153  01463C  C3                 	db	195
   154                           
   155                           	psect	mediumconst
   156  00F978                     __pmediumconst:
   157                           	opt stack 0
   158  00F978  00                 	db	0
   159  00F979                     _dpowers:
   160                           	opt stack 0
   161  00F979  0001               	dw	1
   162  00F97B  0000               	dw	0
   163  00F97D  000A               	dw	10
   164  00F97F  0000               	dw	0
   165  00F981  0064               	dw	100
   166  00F983  0000               	dw	0
   167  00F985  03E8               	dw	1000
   168  00F987  0000               	dw	0
   169  00F989  2710               	dw	10000
   170  00F98B  0000               	dw	0
   171  00F98D  86A0               	dw	34464
   172  00F98F  0001               	dw	1
   173  00F991  4240               	dw	16960
   174  00F993  000F               	dw	15
   175  00F995  9680               	dw	38528
   176  00F997  0098               	dw	152
   177  00F999  E100               	dw	57600
   178  00F99B  05F5               	dw	1525
   179  00F99D  CA00               	dw	51712
   180  00F99F  3B9A               	dw	15258
   181  00F9A1                     __end_of_dpowers:
   182                           	opt stack 0
   183  00F9A1                     __powers_:
   184                           	opt stack 0
   185  00F9A1  00                 	db	0
   186  00F9A2  80                 	db	128
   187  00F9A3  3F                 	db	63
   188  00F9A4  00                 	db	0
   189  00F9A5  20                 	db	32
   190  00F9A6  41                 	db	65
   191  00F9A7  00                 	db	0
   192  00F9A8  C8                 	db	200
   193  00F9A9  42                 	db	66
   194  00F9AA  00                 	db	0
   195  00F9AB  7A                 	db	122
   196  00F9AC  44                 	db	68
   197  00F9AD  40                 	db	64
   198  00F9AE  1C                 	db	28
   199  00F9AF  46                 	db	70
   200  00F9B0  50                 	db	80
   201  00F9B1  C3                 	db	195
   202  00F9B2  47                 	db	71
   203  00F9B3  24                 	db	36
   204  00F9B4  74                 	db	116
   205  00F9B5  49                 	db	73
   206  00F9B6  97                 	db	151
   207  00F9B7  18                 	db	24
   208  00F9B8  4B                 	db	75
   209  00F9B9  BC                 	db	188
   210  00F9BA  BE                 	db	190
   211  00F9BB  4C                 	db	76
   212  00F9BC  6B                 	db	107
   213  00F9BD  6E                 	db	110
   214  00F9BE  4E                 	db	78
   215  00F9BF  03                 	db	3
   216  00F9C0  15                 	db	21
   217  00F9C1  50                 	db	80
   218  00F9C2  79                 	db	121
   219  00F9C3  AD                 	db	173
   220  00F9C4  60                 	db	96
   221  00F9C5  F3                 	db	243
   222  00F9C6  49                 	db	73
   223  00F9C7  71                 	db	113
   224  00F9C8                     __end_of__powers_:
   225                           	opt stack 0
   226  00F9C8                     __npowers_:
   227                           	opt stack 0
   228  00F9C8  00                 	db	0
   229  00F9C9  80                 	db	128
   230  00F9CA  3F                 	db	63
   231  00F9CB  CD                 	db	205
   232  00F9CC  CC                 	db	204
   233  00F9CD  3D                 	db	61
   234  00F9CE  D7                 	db	215
   235  00F9CF  23                 	db	35
   236  00F9D0  3C                 	db	60
   237  00F9D1  12                 	db	18
   238  00F9D2  83                 	db	131
   239  00F9D3  3A                 	db	58
   240  00F9D4  B7                 	db	183
   241  00F9D5  D1                 	db	209
   242  00F9D6  38                 	db	56
   243  00F9D7  C6                 	db	198
   244  00F9D8  27                 	db	39
   245  00F9D9  37                 	db	55
   246  00F9DA  38                 	db	56
   247  00F9DB  86                 	db	134
   248  00F9DC  35                 	db	53
   249  00F9DD  C0                 	db	192
   250  00F9DE  D6                 	db	214
   251  00F9DF  33                 	db	51
   252  00F9E0  CC                 	db	204
   253  00F9E1  2B                 	db	43
   254  00F9E2  32                 	db	50
   255  00F9E3  70                 	db	112
   256  00F9E4  89                 	db	137
   257  00F9E5  30                 	db	48
   258  00F9E6  E7                 	db	231
   259  00F9E7  DB                 	db	219
   260  00F9E8  2E                 	db	46
   261  00F9E9  E5                 	db	229
   262  00F9EA  3C                 	db	60
   263  00F9EB  1E                 	db	30
   264  00F9EC  42                 	db	66
   265  00F9ED  A2                 	db	162
   266  00F9EE  0D                 	db	13
   267  00F9EF                     __end_of__npowers_:
   268                           	opt stack 0
   269  0000                     _FVRCONbits	set	3780
   270  0000                     _FVRCON	set	3780
   271  0000                     _RC2REG	set	3825
   272  0000                     _RC2STAbits	set	3829
   273  0000                     _TX2REG	set	3826
   274  0000                     _TX2STAbits	set	3830
   275  0000                     _SP2BRGH	set	3828
   276  0000                     _SP2BRGL	set	3827
   277  0000                     _TX2STA	set	3830
   278  0000                     _RC2STA	set	3829
   279  0000                     _BAUD2CON	set	3831
   280  0000                     _PIR5bits	set	3640
   281  0000                     _PIE5bits	set	3630
   282  0000                     _PIR1bits	set	3636
   283  0000                     _PIE1bits	set	3626
   284  0000                     _PIR3bits	set	3638
   285  0000                     _PIE3bits	set	3628
   286  0000                     _IPR5bits	set	3620
   287  0000                     _IPR1bits	set	3616
   288  0000                     _IPR3bits	set	3618
   289  0000                     _RX2PPS	set	3601
   290  0000                     _RG7PPS	set	3721
   291  0000                     _SLRCONH	set	3774
   292  0000                     _SLRCONG	set	3769
   293  0000                     _SLRCONF	set	3761
   294  0000                     _SLRCONE	set	3756
   295  0000                     _SLRCOND	set	3748
   296  0000                     _SLRCONC	set	3743
   297  0000                     _SLRCONB	set	3735
   298  0000                     _SLRCONA	set	3727
   299  0000                     _ODCOND	set	3749
   300  0000                     _ODCONC	set	3744
   301  0000                     _ODCONH	set	3775
   302  0000                     _ODCONB	set	3736
   303  0000                     _ODCONG	set	3770
   304  0000                     _ODCONA	set	3728
   305  0000                     _ODCONF	set	3762
   306  0000                     _ODCONE	set	3757
   307  0000                     _WPUH	set	3776
   308  0000                     _WPUC	set	3745
   309  0000                     _WPUA	set	3729
   310  0000                     _WPUG	set	3771
   311  0000                     _WPUB	set	3737
   312  0000                     _WPUE	set	3758
   313  0000                     _WPUF	set	3763
   314  0000                     _WPUD	set	3750
   315  0000                     _ANSELA	set	3730
   316  0000                     _ANSELF	set	3764
   317  0000                     _ANSELG	set	3772
   318  0000                     _ANSELE	set	3759
   319  0000                     _ANSELB	set	3738
   320  0000                     _ANSELD	set	3751
   321  0000                     _PMD5	set	3665
   322  0000                     _PMD4	set	3664
   323  0000                     _PMD3	set	3663
   324  0000                     _PMD2	set	3662
   325  0000                     _PMD1	set	3661
   326  0000                     _PMD0	set	3660
   327  0000                     _OSCTUNE	set	3656
   328  0000                     _OSCFRQ	set	3657
   329  0000                     _OSCEN	set	3655
   330  0000                     _OSCCON3	set	3653
   331  0000                     _OSCCON1	set	3651
   332  0000                     _PLLR	set	29232
   333  0000                     _T7GCONbits	set	3889
   334  0000                     _T7CONbits	set	3888
   335  0000                     _T7CON	set	3888
   336  0000                     _TMR7L	set	3886
   337  0000                     _TMR7H	set	3887
   338  0000                     _T7CLK	set	3891
   339  0000                     _T7GATE	set	3890
   340  0000                     _T7GCON	set	3889
   341  0000                     _ADCON1bits	set	3929
   342  0000                     _ADCON2bits	set	3930
   343  0000                     _ADPRE	set	3934
   344  0000                     _ADCON3bits	set	3931
   345  0000                     _ADACQ	set	3932
   346  0000                     _ADCLK	set	3927
   347  0000                     _ADACT	set	3926
   348  0000                     _ADREF	set	3928
   349  0000                     _ADCON3	set	3931
   350  0000                     _ADCON2	set	3930
   351  0000                     _ADCON1	set	3929
   352  0000                     _ADCAP	set	3933
   353  0000                     _ADPCH	set	3935
   354  0000                     _LATFbits	set	3966
   355  0000                     _ADERRL	set	3950
   356  0000                     _ADERRH	set	3951
   357  0000                     _ADPREVL	set	3937
   358  0000                     _ADPREVH	set	3938
   359  0000                     _ADFLTRL	set	3954
   360  0000                     _ADFLTRH	set	3955
   361  0000                     _ADSTATbits	set	3941
   362  0000                     _ADACCL	set	3952
   363  0000                     _ADACCH	set	3953
   364  0000                     _ADCNT	set	3943
   365  0000                     _ADRESL	set	3939
   366  0000                     _ADRESH	set	3940
   367  0000                     _ADCON0bits	set	3936
   368  0000                     _ADCON0	set	3936
   369  0000                     _ADSTAT	set	3941
   370  0000                     _ADRPT	set	3942
   371  0000                     _ADSTPTH	set	3945
   372  0000                     _ADSTPTL	set	3944
   373  0000                     _ADUTHH	set	3949
   374  0000                     _ADUTHL	set	3948
   375  0000                     _ADLTHH	set	3947
   376  0000                     _ADLTHL	set	3946
   377  0000                     _PR6	set	4016
   378  0000                     _TMR6	set	4015
   379  0000                     _T6CONbits	set	4017
   380  0000                     _T6RSTbits	set	4020
   381  0000                     _T6HLTbits	set	4018
   382  0000                     _T6CON	set	4017
   383  0000                     _T6TMR	set	4015
   384  0000                     _T6PR	set	4016
   385  0000                     _T6RST	set	4020
   386  0000                     _T6HLT	set	4018
   387  0000                     _T6CLKCON	set	4019
   388  0000                     _INTCONbits	set	4082
   389  0000                     _TRISD	set	3972
   390  0000                     _TRISC	set	3971
   391  0000                     _TRISH	set	3976
   392  0000                     _TRISB	set	3970
   393  0000                     _TRISG	set	3975
   394  0000                     _TRISA	set	3969
   395  0000                     _TRISF	set	3974
   396  0000                     _TRISE	set	3973
   397  0000                     _LATH	set	3968
   398  0000                     _LATC	set	3963
   399  0000                     _LATG	set	3967
   400  0000                     _LATB	set	3962
   401  0000                     _LATF	set	3966
   402  0000                     _LATA	set	3961
   403  0000                     _LATD	set	3964
   404  0000                     _LATE	set	3965
   405  00F9EF                     STR_62:
   406  00F9EF  4C                 	db	76	;'L'
   407  00F9F0  69                 	db	105	;'i'
   408  00F9F1  73                 	db	115	;'s'
   409  00F9F2  74                 	db	116	;'t'
   410  00F9F3  20                 	db	32
   411  00F9F4  6F                 	db	111	;'o'
   412  00F9F5  66                 	db	102	;'f'
   413  00F9F6  20                 	db	32
   414  00F9F7  73                 	db	115	;'s'
   415  00F9F8  75                 	db	117	;'u'
   416  00F9F9  70                 	db	112	;'p'
   417  00F9FA  70                 	db	112	;'p'
   418  00F9FB  6F                 	db	111	;'o'
   419  00F9FC  72                 	db	114	;'r'
   420  00F9FD  74                 	db	116	;'t'
   421  00F9FE  65                 	db	101	;'e'
   422  00F9FF  64                 	db	100	;'d'
   423  00FA00  20                 	db	32
   424  00FA01  63                 	db	99	;'c'
   425  00FA02  6F                 	db	111	;'o'
   426  00FA03  6D                 	db	109	;'m'
   427  00FA04  6D                 	db	109	;'m'
   428  00FA05  61                 	db	97	;'a'
   429  00FA06  6E                 	db	110	;'n'
   430  00FA07  64                 	db	100	;'d'
   431  00FA08  73                 	db	115	;'s'
   432  00FA09  3A                 	db	58	;':'
   433  00FA0A  0A                 	db	10
   434  00FA0B  0D                 	db	13
   435  00FA0C  20                 	db	32
   436  00FA0D  20                 	db	32
   437  00FA0E  20                 	db	32
   438  00FA0F  52                 	db	82	;'R'
   439  00FA10  65                 	db	101	;'e'
   440  00FA11  73                 	db	115	;'s'
   441  00FA12  65                 	db	101	;'e'
   442  00FA13  74                 	db	116	;'t'
   443  00FA14  3A                 	db	58	;':'
   444  00FA15  20                 	db	32
   445  00FA16  43                 	db	67	;'C'
   446  00FA17  6C                 	db	108	;'l'
   447  00FA18  65                 	db	101	;'e'
   448  00FA19  61                 	db	97	;'a'
   449  00FA1A  72                 	db	114	;'r'
   450  00FA1B  73                 	db	115	;'s'
   451  00FA1C  20                 	db	32
   452  00FA1D  74                 	db	116	;'t'
   453  00FA1E  68                 	db	104	;'h'
   454  00FA1F  65                 	db	101	;'e'
   455  00FA20  20                 	db	32
   456  00FA21  74                 	db	116	;'t'
   457  00FA22  65                 	db	101	;'e'
   458  00FA23  72                 	db	114	;'r'
   459  00FA24  6D                 	db	109	;'m'
   460  00FA25  69                 	db	105	;'i'
   461  00FA26  6E                 	db	110	;'n'
   462  00FA27  61                 	db	97	;'a'
   463  00FA28  6C                 	db	108	;'l'
   464  00FA29  20                 	db	32
   465  00FA2A  61                 	db	97	;'a'
   466  00FA2B  6E                 	db	110	;'n'
   467  00FA2C  64                 	db	100	;'d'
   468  00FA2D  20                 	db	32
   469  00FA2E  72                 	db	114	;'r'
   470  00FA2F  65                 	db	101	;'e'
   471  00FA30  73                 	db	115	;'s'
   472  00FA31  65                 	db	101	;'e'
   473  00FA32  74                 	db	116	;'t'
   474  00FA33  73                 	db	115	;'s'
   475  00FA34  20                 	db	32
   476  00FA35  74                 	db	116	;'t'
   477  00FA36  68                 	db	104	;'h'
   478  00FA37  65                 	db	101	;'e'
   479  00FA38  20                 	db	32
   480  00FA39  6D                 	db	109	;'m'
   481  00FA3A  69                 	db	105	;'i'
   482  00FA3B  63                 	db	99	;'c'
   483  00FA3C  72                 	db	114	;'r'
   484  00FA3D  6F                 	db	111	;'o'
   485  00FA3E  0A                 	db	10
   486  00FA3F  0D                 	db	13
   487  00FA40  20                 	db	32
   488  00FA41  20                 	db	32
   489  00FA42  20                 	db	32
   490  00FA43  43                 	db	67	;'C'
   491  00FA44  6C                 	db	108	;'l'
   492  00FA45  65                 	db	101	;'e'
   493  00FA46  61                 	db	97	;'a'
   494  00FA47  72                 	db	114	;'r'
   495  00FA48  3A                 	db	58	;':'
   496  00FA49  20                 	db	32
   497  00FA4A  43                 	db	67	;'C'
   498  00FA4B  6C                 	db	108	;'l'
   499  00FA4C  65                 	db	101	;'e'
   500  00FA4D  61                 	db	97	;'a'
   501  00FA4E  72                 	db	114	;'r'
   502  00FA4F  73                 	db	115	;'s'
   503  00FA50  20                 	db	32
   504  00FA51  74                 	db	116	;'t'
   505  00FA52  68                 	db	104	;'h'
   506  00FA53  65                 	db	101	;'e'
   507  00FA54  20                 	db	32
   508  00FA55  74                 	db	116	;'t'
   509  00FA56  65                 	db	101	;'e'
   510  00FA57  72                 	db	114	;'r'
   511  00FA58  6D                 	db	109	;'m'
   512  00FA59  69                 	db	105	;'i'
   513  00FA5A  6E                 	db	110	;'n'
   514  00FA5B  61                 	db	97	;'a'
   515  00FA5C  6C                 	db	108	;'l'
   516  00FA5D  20                 	db	32
   517  00FA5E  62                 	db	98	;'b'
   518  00FA5F  75                 	db	117	;'u'
   519  00FA60  74                 	db	116	;'t'
   520  00FA61  20                 	db	32
   521  00FA62  64                 	db	100	;'d'
   522  00FA63  6F                 	db	111	;'o'
   523  00FA64  65                 	db	101	;'e'
   524  00FA65  73                 	db	115	;'s'
   525  00FA66  6E                 	db	110	;'n'
   526  00FA67  27                 	db	39
   527  00FA68  74                 	db	116	;'t'
   528  00FA69  20                 	db	32
   529  00FA6A  72                 	db	114	;'r'
   530  00FA6B  65                 	db	101	;'e'
   531  00FA6C  73                 	db	115	;'s'
   532  00FA6D  65                 	db	101	;'e'
   533  00FA6E  74                 	db	116	;'t'
   534  00FA6F  20                 	db	32
   535  00FA70  74                 	db	116	;'t'
   536  00FA71  68                 	db	104	;'h'
   537  00FA72  65                 	db	101	;'e'
   538  00FA73  20                 	db	32
   539  00FA74  6D                 	db	109	;'m'
   540  00FA75  69                 	db	105	;'i'
   541  00FA76  63                 	db	99	;'c'
   542  00FA77  72                 	db	114	;'r'
   543  00FA78  6F                 	db	111	;'o'
   544  00FA79  0A                 	db	10
   545  00FA7A  0D                 	db	13
   546  00FA7B  20                 	db	32
   547  00FA7C  20                 	db	32
   548  00FA7D  20                 	db	32
   549  00FA7E  2A                 	db	42
   550  00FA7F  49                 	db	73	;'I'
   551  00FA80  44                 	db	68	;'D'
   552  00FA81  4E                 	db	78	;'N'
   553  00FA82  3F                 	db	63	;'?'
   554  00FA83  3A                 	db	58	;':'
   555  00FA84  20                 	db	32
   556  00FA85  52                 	db	82	;'R'
   557  00FA86  65                 	db	101	;'e'
   558  00FA87  74                 	db	116	;'t'
   559  00FA88  75                 	db	117	;'u'
   560  00FA89  72                 	db	114	;'r'
   561  00FA8A  6E                 	db	110	;'n'
   562  00FA8B  73                 	db	115	;'s'
   563  00FA8C  20                 	db	32
   564  00FA8D  64                 	db	100	;'d'
   565  00FA8E  65                 	db	101	;'e'
   566  00FA8F  76                 	db	118	;'v'
   567  00FA90  69                 	db	105	;'i'
   568  00FA91  63                 	db	99	;'c'
   569  00FA92  65                 	db	101	;'e'
   570  00FA93  20                 	db	32
   571  00FA94  69                 	db	105	;'i'
   572  00FA95  64                 	db	100	;'d'
   573  00FA96  65                 	db	101	;'e'
   574  00FA97  6E                 	db	110	;'n'
   575  00FA98  74                 	db	116	;'t'
   576  00FA99  69                 	db	105	;'i'
   577  00FA9A  66                 	db	102	;'f'
   578  00FA9B  69                 	db	105	;'i'
   579  00FA9C  63                 	db	99	;'c'
   580  00FA9D  61                 	db	97	;'a'
   581  00FA9E  74                 	db	116	;'t'
   582  00FA9F  69                 	db	105	;'i'
   583  00FAA0  6F                 	db	111	;'o'
   584  00FAA1  6E                 	db	110	;'n'
   585  00FAA2  0A                 	db	10
   586  00FAA3  0D                 	db	13
   587  00FAA4  20                 	db	32
   588  00FAA5  20                 	db	32
   589  00FAA6  20                 	db	32
   590  00FAA7  4D                 	db	77	;'M'
   591  00FAA8  65                 	db	101	;'e'
   592  00FAA9  61                 	db	97	;'a'
   593  00FAAA  73                 	db	115	;'s'
   594  00FAAB  75                 	db	117	;'u'
   595  00FAAC  72                 	db	114	;'r'
   596  00FAAD  65                 	db	101	;'e'
   597  00FAAE  20                 	db	32
   598  00FAAF  50                 	db	80	;'P'
   599  00FAB0  4F                 	db	79	;'O'
   600  00FAB1  53                 	db	83	;'S'
   601  00FAB2  33                 	db	51	;'3'
   602  00FAB3  50                 	db	80	;'P'
   603  00FAB4  33                 	db	51	;'3'
   604  00FAB5  3F                 	db	63	;'?'
   605  00FAB6  3A                 	db	58	;':'
   606  00FAB7  20                 	db	32
   607  00FAB8  52                 	db	82	;'R'
   608  00FAB9  65                 	db	101	;'e'
   609  00FABA  74                 	db	116	;'t'
   610  00FABB  75                 	db	117	;'u'
   611  00FABC  72                 	db	114	;'r'
   612  00FABD  6E                 	db	110	;'n'
   613  00FABE  73                 	db	115	;'s'
   614  00FABF  20                 	db	32
   615  00FAC0  2B                 	db	43
   616  00FAC1  33                 	db	51	;'3'
   617  00FAC2  2E                 	db	46
   618  00FAC3  33                 	db	51	;'3'
   619  00FAC4  56                 	db	86	;'V'
   620  00FAC5  20                 	db	32
   621  00FAC6  41                 	db	65	;'A'
   622  00FAC7  44                 	db	68	;'D'
   623  00FAC8  43                 	db	67	;'C'
   624  00FAC9  20                 	db	32
   625  00FACA  43                 	db	67	;'C'
   626  00FACB  6F                 	db	111	;'o'
   627  00FACC  6E                 	db	110	;'n'
   628  00FACD  76                 	db	118	;'v'
   629  00FACE  65                 	db	101	;'e'
   630  00FACF  72                 	db	114	;'r'
   631  00FAD0  73                 	db	115	;'s'
   632  00FAD1  69                 	db	105	;'i'
   633  00FAD2  6F                 	db	111	;'o'
   634  00FAD3  6E                 	db	110	;'n'
   635  00FAD4  20                 	db	32
   636  00FAD5  69                 	db	105	;'i'
   637  00FAD6  6E                 	db	110	;'n'
   638  00FAD7  20                 	db	32
   639  00FAD8  76                 	db	118	;'v'
   640  00FAD9  6F                 	db	111	;'o'
   641  00FADA  6C                 	db	108	;'l'
   642  00FADB  74                 	db	116	;'t'
   643  00FADC  73                 	db	115	;'s'
   644  00FADD  0A                 	db	10
   645  00FADE  0D                 	db	13
   646  00FADF  20                 	db	32
   647  00FAE0  20                 	db	32
   648  00FAE1  20                 	db	32
   649  00FAE2  4D                 	db	77	;'M'
   650  00FAE3  65                 	db	101	;'e'
   651  00FAE4  61                 	db	97	;'a'
   652  00FAE5  73                 	db	115	;'s'
   653  00FAE6  75                 	db	117	;'u'
   654  00FAE7  72                 	db	114	;'r'
   655  00FAE8  65                 	db	101	;'e'
   656  00FAE9  20                 	db	32
   657  00FAEA  50                 	db	80	;'P'
   658  00FAEB  4F                 	db	79	;'O'
   659  00FAEC  53                 	db	83	;'S'
   660  00FAED  31                 	db	49	;'1'
   661  00FAEE  32                 	db	50	;'2'
   662  00FAEF  3F                 	db	63	;'?'
   663  00FAF0  3A                 	db	58	;':'
   664  00FAF1  20                 	db	32
   665  00FAF2  52                 	db	82	;'R'
   666  00FAF3  65                 	db	101	;'e'
   667  00FAF4  74                 	db	116	;'t'
   668  00FAF5  75                 	db	117	;'u'
   669  00FAF6  72                 	db	114	;'r'
   670  00FAF7  6E                 	db	110	;'n'
   671  00FAF8  73                 	db	115	;'s'
   672  00FAF9  20                 	db	32
   673  00FAFA  2B                 	db	43
   674  00FAFB  31                 	db	49	;'1'
   675  00FAFC  32                 	db	50	;'2'
   676  00FAFD  56                 	db	86	;'V'
   677  00FAFE  20                 	db	32
   678  00FAFF  41                 	db	65	;'A'
   679  00FB00  44                 	db	68	;'D'
   680  00FB01  43                 	db	67	;'C'
   681  00FB02  20                 	db	32
   682  00FB03  43                 	db	67	;'C'
   683  00FB04  6F                 	db	111	;'o'
   684  00FB05  6E                 	db	110	;'n'
   685  00FB06  76                 	db	118	;'v'
   686  00FB07  65                 	db	101	;'e'
   687  00FB08  72                 	db	114	;'r'
   688  00FB09  73                 	db	115	;'s'
   689  00FB0A  69                 	db	105	;'i'
   690  00FB0B  6F                 	db	111	;'o'
   691  00FB0C  6E                 	db	110	;'n'
   692  00FB0D  20                 	db	32
   693  00FB0E  69                 	db	105	;'i'
   694  00FB0F  6E                 	db	110	;'n'
   695  00FB10  20                 	db	32
   696  00FB11  76                 	db	118	;'v'
   697  00FB12  6F                 	db	111	;'o'
   698  00FB13  6C                 	db	108	;'l'
   699  00FB14  74                 	db	116	;'t'
   700  00FB15  73                 	db	115	;'s'
   701  00FB16  0A                 	db	10
   702  00FB17  0D                 	db	13
   703  00FB18  20                 	db	32
   704  00FB19  20                 	db	32
   705  00FB1A  20                 	db	32
   706  00FB1B  4D                 	db	77	;'M'
   707  00FB1C  65                 	db	101	;'e'
   708  00FB1D  61                 	db	97	;'a'
   709  00FB1E  73                 	db	115	;'s'
   710  00FB1F  75                 	db	117	;'u'
   711  00FB20  72                 	db	114	;'r'
   712  00FB21  65                 	db	101	;'e'
   713  00FB22  20                 	db	32
   714  00FB23  44                 	db	68	;'D'
   715  00FB24  69                 	db	105	;'i'
   716  00FB25  65                 	db	101	;'e'
   717  00FB26  20                 	db	32
   718  00FB27  54                 	db	84	;'T'
   719  00FB28  65                 	db	101	;'e'
   720  00FB29  6D                 	db	109	;'m'
   721  00FB2A  70                 	db	112	;'p'
   722  00FB2B  3F                 	db	63	;'?'
   723  00FB2C  3A                 	db	58	;':'
   724  00FB2D  20                 	db	32
   725  00FB2E  52                 	db	82	;'R'
   726  00FB2F  65                 	db	101	;'e'
   727  00FB30  74                 	db	116	;'t'
   728  00FB31  75                 	db	117	;'u'
   729  00FB32  72                 	db	114	;'r'
   730  00FB33  6E                 	db	110	;'n'
   731  00FB34  73                 	db	115	;'s'
   732  00FB35  20                 	db	32
   733  00FB36  74                 	db	116	;'t'
   734  00FB37  68                 	db	104	;'h'
   735  00FB38  65                 	db	101	;'e'
   736  00FB39  20                 	db	32
   737  00FB3A  6D                 	db	109	;'m'
   738  00FB3B  69                 	db	105	;'i'
   739  00FB3C  63                 	db	99	;'c'
   740  00FB3D  72                 	db	114	;'r'
   741  00FB3E  6F                 	db	111	;'o'
   742  00FB3F  63                 	db	99	;'c'
   743  00FB40  6F                 	db	111	;'o'
   744  00FB41  6E                 	db	110	;'n'
   745  00FB42  74                 	db	116	;'t'
   746  00FB43  72                 	db	114	;'r'
   747  00FB44  6F                 	db	111	;'o'
   748  00FB45  6C                 	db	108	;'l'
   749  00FB46  6C                 	db	108	;'l'
   750  00FB47  65                 	db	101	;'e'
   751  00FB48  72                 	db	114	;'r'
   752  00FB49  20                 	db	32
   753  00FB4A  64                 	db	100	;'d'
   754  00FB4B  69                 	db	105	;'i'
   755  00FB4C  65                 	db	101	;'e'
   756  00FB4D  20                 	db	32
   757  00FB4E  74                 	db	116	;'t'
   758  00FB4F  65                 	db	101	;'e'
   759  00FB50  6D                 	db	109	;'m'
   760  00FB51  70                 	db	112	;'p'
   761  00FB52  65                 	db	101	;'e'
   762  00FB53  72                 	db	114	;'r'
   763  00FB54  61                 	db	97	;'a'
   764  00FB55  74                 	db	116	;'t'
   765  00FB56  75                 	db	117	;'u'
   766  00FB57  72                 	db	114	;'r'
   767  00FB58  65                 	db	101	;'e'
   768  00FB59  20                 	db	32
   769  00FB5A  69                 	db	105	;'i'
   770  00FB5B  6E                 	db	110	;'n'
   771  00FB5C  20                 	db	32
   772  00FB5D  64                 	db	100	;'d'
   773  00FB5E  65                 	db	101	;'e'
   774  00FB5F  67                 	db	103	;'g'
   775  00FB60  72                 	db	114	;'r'
   776  00FB61  65                 	db	101	;'e'
   777  00FB62  65                 	db	101	;'e'
   778  00FB63  73                 	db	115	;'s'
   779  00FB64  20                 	db	32
   780  00FB65  43                 	db	67	;'C'
   781  00FB66  0A                 	db	10
   782  00FB67  0D                 	db	13
   783  00FB68  20                 	db	32
   784  00FB69  20                 	db	32
   785  00FB6A  20                 	db	32
   786  00FB6B  4D                 	db	77	;'M'
   787  00FB6C  65                 	db	101	;'e'
   788  00FB6D  61                 	db	97	;'a'
   789  00FB6E  73                 	db	115	;'s'
   790  00FB6F  75                 	db	117	;'u'
   791  00FB70  72                 	db	114	;'r'
   792  00FB71  65                 	db	101	;'e'
   793  00FB72  20                 	db	32
   794  00FB73  46                 	db	70	;'F'
   795  00FB74  56                 	db	86	;'V'
   796  00FB75  52                 	db	82	;'R'
   797  00FB76  3F                 	db	63	;'?'
   798  00FB77  3A                 	db	58	;':'
   799  00FB78  20                 	db	32
   800  00FB79  52                 	db	82	;'R'
   801  00FB7A  65                 	db	101	;'e'
   802  00FB7B  74                 	db	116	;'t'
   803  00FB7C  75                 	db	117	;'u'
   804  00FB7D  72                 	db	114	;'r'
   805  00FB7E  6E                 	db	110	;'n'
   806  00FB7F  73                 	db	115	;'s'
   807  00FB80  20                 	db	32
   808  00FB81  74                 	db	116	;'t'
   809  00FB82  68                 	db	104	;'h'
   810  00FB83  65                 	db	101	;'e'
   811  00FB84  20                 	db	32
   812  00FB85  69                 	db	105	;'i'
   813  00FB86  6E                 	db	110	;'n'
   814  00FB87  74                 	db	116	;'t'
   815  00FB88  65                 	db	101	;'e'
   816  00FB89  72                 	db	114	;'r'
   817  00FB8A  6E                 	db	110	;'n'
   818  00FB8B  61                 	db	97	;'a'
   819  00FB8C  6C                 	db	108	;'l'
   820  00FB8D  20                 	db	32
   821  00FB8E  66                 	db	102	;'f'
   822  00FB8F  69                 	db	105	;'i'
   823  00FB90  78                 	db	120	;'x'
   824  00FB91  65                 	db	101	;'e'
   825  00FB92  64                 	db	100	;'d'
   826  00FB93  20                 	db	32
   827  00FB94  76                 	db	118	;'v'
   828  00FB95  6F                 	db	111	;'o'
   829  00FB96  6C                 	db	108	;'l'
   830  00FB97  74                 	db	116	;'t'
   831  00FB98  61                 	db	97	;'a'
   832  00FB99  67                 	db	103	;'g'
   833  00FB9A  65                 	db	101	;'e'
   834  00FB9B  20                 	db	32
   835  00FB9C  72                 	db	114	;'r'
   836  00FB9D  65                 	db	101	;'e'
   837  00FB9E  66                 	db	102	;'f'
   838  00FB9F  65                 	db	101	;'e'
   839  00FBA0  72                 	db	114	;'r'
   840  00FBA1  65                 	db	101	;'e'
   841  00FBA2  6E                 	db	110	;'n'
   842  00FBA3  63                 	db	99	;'c'
   843  00FBA4  65                 	db	101	;'e'
   844  00FBA5  20                 	db	32
   845  00FBA6  62                 	db	98	;'b'
   846  00FBA7  75                 	db	117	;'u'
   847  00FBA8  66                 	db	102	;'f'
   848  00FBA9  66                 	db	102	;'f'
   849  00FBAA  65                 	db	101	;'e'
   850  00FBAB  72                 	db	114	;'r'
   851  00FBAC  20                 	db	32
   852  00FBAD  31                 	db	49	;'1'
   853  00FBAE  20                 	db	32
   854  00FBAF  6F                 	db	111	;'o'
   855  00FBB0  75                 	db	117	;'u'
   856  00FBB1  74                 	db	116	;'t'
   857  00FBB2  70                 	db	112	;'p'
   858  00FBB3  75                 	db	117	;'u'
   859  00FBB4  74                 	db	116	;'t'
   860  00FBB5  20                 	db	32
   861  00FBB6  69                 	db	105	;'i'
   862  00FBB7  6E                 	db	110	;'n'
   863  00FBB8  20                 	db	32
   864  00FBB9  76                 	db	118	;'v'
   865  00FBBA  6F                 	db	111	;'o'
   866  00FBBB  6C                 	db	108	;'l'
   867  00FBBC  74                 	db	116	;'t'
   868  00FBBD  73                 	db	115	;'s'
   869  00FBBE  0A                 	db	10
   870  00FBBF  0D                 	db	13
   871  00FBC0  20                 	db	32
   872  00FBC1  20                 	db	32
   873  00FBC2  20                 	db	32
   874  00FBC3  4F                 	db	79	;'O'
   875  00FBC4  6E                 	db	110	;'n'
   876  00FBC5  20                 	db	32
   877  00FBC6  54                 	db	84	;'T'
   878  00FBC7  69                 	db	105	;'i'
   879  00FBC8  6D                 	db	109	;'m'
   880  00FBC9  65                 	db	101	;'e'
   881  00FBCA  3F                 	db	63	;'?'
   882  00FBCB  3A                 	db	58	;':'
   883  00FBCC  20                 	db	32
   884  00FBCD  52                 	db	82	;'R'
   885  00FBCE  65                 	db	101	;'e'
   886  00FBCF  74                 	db	116	;'t'
   887  00FBD0  75                 	db	117	;'u'
   888  00FBD1  72                 	db	114	;'r'
   889  00FBD2  6E                 	db	110	;'n'
   890  00FBD3  73                 	db	115	;'s'
   891  00FBD4  20                 	db	32
   892  00FBD5  64                 	db	100	;'d'
   893  00FBD6  65                 	db	101	;'e'
   894  00FBD7  76                 	db	118	;'v'
   895  00FBD8  69                 	db	105	;'i'
   896  00FBD9  63                 	db	99	;'c'
   897  00FBDA  65                 	db	101	;'e'
   898  00FBDB  20                 	db	32
   899  00FBDC  6F                 	db	111	;'o'
   900  00FBDD  6E                 	db	110	;'n'
   901  00FBDE  20                 	db	32
   902  00FBDF  74                 	db	116	;'t'
   903  00FBE0  69                 	db	105	;'i'
   904  00FBE1  6D                 	db	109	;'m'
   905  00FBE2  65                 	db	101	;'e'
   906  00FBE3  20                 	db	32
   907  00FBE4  73                 	db	115	;'s'
   908  00FBE5  69                 	db	105	;'i'
   909  00FBE6  6E                 	db	110	;'n'
   910  00FBE7  63                 	db	99	;'c'
   911  00FBE8  65                 	db	101	;'e'
   912  00FBE9  20                 	db	32
   913  00FBEA  6C                 	db	108	;'l'
   914  00FBEB  61                 	db	97	;'a'
   915  00FBEC  73                 	db	115	;'s'
   916  00FBED  74                 	db	116	;'t'
   917  00FBEE  20                 	db	32
   918  00FBEF  64                 	db	100	;'d'
   919  00FBF0  65                 	db	101	;'e'
   920  00FBF1  76                 	db	118	;'v'
   921  00FBF2  69                 	db	105	;'i'
   922  00FBF3  63                 	db	99	;'c'
   923  00FBF4  65                 	db	101	;'e'
   924  00FBF5  20                 	db	32
   925  00FBF6  72                 	db	114	;'r'
   926  00FBF7  65                 	db	101	;'e'
   927  00FBF8  73                 	db	115	;'s'
   928  00FBF9  65                 	db	101	;'e'
   929  00FBFA  74                 	db	116	;'t'
   930  00FBFB  0A                 	db	10
   931  00FBFC  0D                 	db	13
   932  00FBFD  20                 	db	32
   933  00FBFE  20                 	db	32
   934  00FBFF  20                 	db	32
   935  00FC00  48                 	db	72	;'H'
   936  00FC01  65                 	db	101	;'e'
   937  00FC02  6C                 	db	108	;'l'
   938  00FC03  70                 	db	112	;'p'
   939  00FC04  3A                 	db	58	;':'
   940  00FC05  20                 	db	32
   941  00FC06  54                 	db	84	;'T'
   942  00FC07  68                 	db	104	;'h'
   943  00FC08  69                 	db	105	;'i'
   944  00FC09  73                 	db	115	;'s'
   945  00FC0A  20                 	db	32
   946  00FC0B  6D                 	db	109	;'m'
   947  00FC0C  65                 	db	101	;'e'
   948  00FC0D  73                 	db	115	;'s'
   949  00FC0E  73                 	db	115	;'s'
   950  00FC0F  61                 	db	97	;'a'
   951  00FC10  67                 	db	103	;'g'
   952  00FC11  65                 	db	101	;'e'
   953  00FC12  2C                 	db	44
   954  00FC13  20                 	db	32
   955  00FC14  6C                 	db	108	;'l'
   956  00FC15  69                 	db	105	;'i'
   957  00FC16  73                 	db	115	;'s'
   958  00FC17  74                 	db	116	;'t'
   959  00FC18  73                 	db	115	;'s'
   960  00FC19  20                 	db	32
   961  00FC1A  63                 	db	99	;'c'
   962  00FC1B  6F                 	db	111	;'o'
   963  00FC1C  6D                 	db	109	;'m'
   964  00FC1D  6D                 	db	109	;'m'
   965  00FC1E  61                 	db	97	;'a'
   966  00FC1F  6E                 	db	110	;'n'
   967  00FC20  64                 	db	100	;'d'
   968  00FC21  73                 	db	115	;'s'
   969  00FC22  0A                 	db	10
   970  00FC23  0D                 	db	13
   971  00FC24  00                 	db	0
   972  00FC25  20                 	db	32
   973  00FC26  20                 	db	32
   974  00FC27  20                 	db	32
   975  00FC28  20                 	db	32
   976  00FC29  42                 	db	66	;'B'
   977  00FC2A  6F                 	db	111	;'o'
   978  00FC2B  6F                 	db	111	;'o'
   979  00FC2C  74                 	db	116	;'t'
   980  00FC2D  20                 	db	32
   981  00FC2E  63                 	db	99	;'c'
   982  00FC2F  6F                 	db	111	;'o'
   983  00FC30  6D                 	db	109	;'m'
   984  00FC31  70                 	db	112	;'p'
   985  00FC32  6C                 	db	108	;'l'
   986  00FC33  65                 	db	101	;'e'
   987  00FC34  74                 	db	116	;'t'
   988  00FC35  65                 	db	101	;'e'
   989  00FC36  0A                 	db	10
   990  00FC37  0D                 	db	13
   991  00FC38  20                 	db	32
   992  00FC39  20                 	db	32
   993  00FC3A  20                 	db	32
   994  00FC3B  20                 	db	32
   995  00FC3C  50                 	db	80	;'P'
   996  00FC3D  49                 	db	73	;'I'
   997  00FC3E  43                 	db	67	;'C'
   998  00FC3F  31                 	db	49	;'1'
   999  00FC40  38                 	db	56	;'8'
  1000  00FC41  46                 	db	70	;'F'
  1001  00FC42  36                 	db	54	;'6'
  1002  00FC43  37                 	db	55	;'7'
  1003  00FC44  4B                 	db	75	;'K'
  1004  00FC45  34                 	db	52	;'4'
  1005  00FC46  30                 	db	48	;'0'
  1006  00FC47  20                 	db	32
  1007  00FC48  6D                 	db	109	;'m'
  1008  00FC49  54                 	db	84	;'T'
  1009  00FC4A  6F                 	db	111	;'o'
  1010  00FC4B  75                 	db	117	;'u'
  1011  00FC4C  63                 	db	99	;'c'
  1012  00FC4D  68                 	db	104	;'h'
  1013  00FC4E  20                 	db	32
  1014  00FC4F  54                 	db	84	;'T'
  1015  00FC50  65                 	db	101	;'e'
  1016  00FC51  73                 	db	115	;'s'
  1017  00FC52  74                 	db	116	;'t'
  1018  00FC53  20                 	db	32
  1019  00FC54  42                 	db	66	;'B'
  1020  00FC55  6F                 	db	111	;'o'
  1021  00FC56  61                 	db	97	;'a'
  1022  00FC57  72                 	db	114	;'r'
  1023  00FC58  64                 	db	100	;'d'
  1024  00FC59  0A                 	db	10
  1025  00FC5A  0D                 	db	13
  1026  00FC5B  20                 	db	32
  1027  00FC5C  20                 	db	32
  1028  00FC5D  20                 	db	32
  1029  00FC5E  20                 	db	32
  1030  00FC5F  45                 	db	69	;'E'
  1031  00FC60  76                 	db	118	;'v'
  1032  00FC61  61                 	db	97	;'a'
  1033  00FC62  6C                 	db	108	;'l'
  1034  00FC63  75                 	db	117	;'u'
  1035  00FC64  61                 	db	97	;'a'
  1036  00FC65  74                 	db	116	;'t'
  1037  00FC66  65                 	db	101	;'e'
  1038  00FC67  73                 	db	115	;'s'
  1039  00FC68  20                 	db	32
  1040  00FC69  74                 	db	116	;'t'
  1041  00FC6A  68                 	db	104	;'h'
  1042  00FC6B  65                 	db	101	;'e'
  1043  00FC6C  20                 	db	32
  1044  00FC6D  6D                 	db	109	;'m'
  1045  00FC6E  54                 	db	84	;'T'
  1046  00FC6F  6F                 	db	111	;'o'
  1047  00FC70  75                 	db	117	;'u'
  1048  00FC71  63                 	db	99	;'c'
  1049  00FC72  68                 	db	104	;'h'
  1050  00FC73  20                 	db	32
  1051  00FC74  63                 	db	99	;'c'
  1052  00FC75  61                 	db	97	;'a'
  1053  00FC76  70                 	db	112	;'p'
  1054  00FC77  61                 	db	97	;'a'
  1055  00FC78  63                 	db	99	;'c'
  1056  00FC79  69                 	db	105	;'i'
  1057  00FC7A  74                 	db	116	;'t'
  1058  00FC7B  69                 	db	105	;'i'
  1059  00FC7C  76                 	db	118	;'v'
  1060  00FC7D  65                 	db	101	;'e'
  1061  00FC7E  20                 	db	32
  1062  00FC7F  74                 	db	116	;'t'
  1063  00FC80  6F                 	db	111	;'o'
  1064  00FC81  75                 	db	117	;'u'
  1065  00FC82  63                 	db	99	;'c'
  1066  00FC83  68                 	db	104	;'h'
  1067  00FC84  20                 	db	32
  1068  00FC85  6C                 	db	108	;'l'
  1069  00FC86  69                 	db	105	;'i'
  1070  00FC87  62                 	db	98	;'b'
  1071  00FC88  72                 	db	114	;'r'
  1072  00FC89  61                 	db	97	;'a'
  1073  00FC8A  72                 	db	114	;'r'
  1074  00FC8B  79                 	db	121	;'y'
  1075  00FC8C  20                 	db	32
  1076  00FC8D  64                 	db	100	;'d'
  1077  00FC8E  69                 	db	105	;'i'
  1078  00FC8F  73                 	db	115	;'s'
  1079  00FC90  74                 	db	116	;'t'
  1080  00FC91  72                 	db	114	;'r'
  1081  00FC92  69                 	db	105	;'i'
  1082  00FC93  62                 	db	98	;'b'
  1083  00FC94  75                 	db	117	;'u'
  1084  00FC95  74                 	db	116	;'t'
  1085  00FC96  65                 	db	101	;'e'
  1086  00FC97  64                 	db	100	;'d'
  1087  00FC98  20                 	db	32
  1088  00FC99  62                 	db	98	;'b'
  1089  00FC9A  79                 	db	121	;'y'
  1090  00FC9B  20                 	db	32
  1091  00FC9C  4D                 	db	77	;'M'
  1092  00FC9D  69                 	db	105	;'i'
  1093  00FC9E  63                 	db	99	;'c'
  1094  00FC9F  72                 	db	114	;'r'
  1095  00FCA0  6F                 	db	111	;'o'
  1096  00FCA1  63                 	db	99	;'c'
  1097  00FCA2  68                 	db	104	;'h'
  1098  00FCA3  69                 	db	105	;'i'
  1099  00FCA4  70                 	db	112	;'p'
  1100  00FCA5  0A                 	db	10
  1101  00FCA6  0D                 	db	13
  1102  00FCA7  20                 	db	32
  1103  00FCA8  20                 	db	32
  1104  00FCA9  20                 	db	32
  1105  00FCAA  20                 	db	32
  1106  00FCAB  53                 	db	83	;'S'
  1107  00FCAC  65                 	db	101	;'e'
  1108  00FCAD  74                 	db	116	;'t'
  1109  00FCAE  73                 	db	115	;'s'
  1110  00FCAF  20                 	db	32
  1111  00FCB0  74                 	db	116	;'t'
  1112  00FCB1  68                 	db	104	;'h'
  1113  00FCB2  65                 	db	101	;'e'
  1114  00FCB3  20                 	db	32
  1115  00FCB4  73                 	db	115	;'s'
  1116  00FCB5  74                 	db	116	;'t'
  1117  00FCB6  61                 	db	97	;'a'
  1118  00FCB7  74                 	db	116	;'t'
  1119  00FCB8  65                 	db	101	;'e'
  1120  00FCB9  20                 	db	32
  1121  00FCBA  6F                 	db	111	;'o'
  1122  00FCBB  66                 	db	102	;'f'
  1123  00FCBC  20                 	db	32
  1124  00FCBD  66                 	db	102	;'f'
  1125  00FCBE  69                 	db	105	;'i'
  1126  00FCBF  76                 	db	118	;'v'
  1127  00FCC0  65                 	db	101	;'e'
  1128  00FCC1  20                 	db	32
  1129  00FCC2  4C                 	db	76	;'L'
  1130  00FCC3  45                 	db	69	;'E'
  1131  00FCC4  44                 	db	68	;'D'
  1132  00FCC5  73                 	db	115	;'s'
  1133  00FCC6  20                 	db	32
  1134  00FCC7  62                 	db	98	;'b'
  1135  00FCC8  61                 	db	97	;'a'
  1136  00FCC9  73                 	db	115	;'s'
  1137  00FCCA  65                 	db	101	;'e'
  1138  00FCCB  64                 	db	100	;'d'
  1139  00FCCC  20                 	db	32
  1140  00FCCD  6F                 	db	111	;'o'
  1141  00FCCE  6E                 	db	110	;'n'
  1142  00FCCF  20                 	db	32
  1143  00FCD0  6D                 	db	109	;'m'
  1144  00FCD1  54                 	db	84	;'T'
  1145  00FCD2  6F                 	db	111	;'o'
  1146  00FCD3  75                 	db	117	;'u'
  1147  00FCD4  63                 	db	99	;'c'
  1148  00FCD5  68                 	db	104	;'h'
  1149  00FCD6  20                 	db	32
  1150  00FCD7  63                 	db	99	;'c'
  1151  00FCD8  61                 	db	97	;'a'
  1152  00FCD9  70                 	db	112	;'p'
  1153  00FCDA  61                 	db	97	;'a'
  1154  00FCDB  63                 	db	99	;'c'
  1155  00FCDC  69                 	db	105	;'i'
  1156  00FCDD  74                 	db	116	;'t'
  1157  00FCDE  69                 	db	105	;'i'
  1158  00FCDF  76                 	db	118	;'v'
  1159  00FCE0  65                 	db	101	;'e'
  1160  00FCE1  20                 	db	32
  1161  00FCE2  70                 	db	112	;'p'
  1162  00FCE3  75                 	db	117	;'u'
  1163  00FCE4  73                 	db	115	;'s'
  1164  00FCE5  68                 	db	104	;'h'
  1165  00FCE6  62                 	db	98	;'b'
  1166  00FCE7  75                 	db	117	;'u'
  1167  00FCE8  74                 	db	116	;'t'
  1168  00FCE9  74                 	db	116	;'t'
  1169  00FCEA  6F                 	db	111	;'o'
  1170  00FCEB  6E                 	db	110	;'n'
  1171  00FCEC  73                 	db	115	;'s'
  1172  00FCED  0A                 	db	10
  1173  00FCEE  0D                 	db	13
  1174  00FCEF  20                 	db	32
  1175  00FCF0  20                 	db	32
  1176  00FCF1  20                 	db	32
  1177  00FCF2  20                 	db	32
  1178  00FCF3  42                 	db	66	;'B'
  1179  00FCF4  61                 	db	97	;'a'
  1180  00FCF5  75                 	db	117	;'u'
  1181  00FCF6  64                 	db	100	;'d'
  1182  00FCF7  20                 	db	32
  1183  00FCF8  72                 	db	114	;'r'
  1184  00FCF9  61                 	db	97	;'a'
  1185  00FCFA  74                 	db	116	;'t'
  1186  00FCFB  65                 	db	101	;'e'
  1187  00FCFC  3A                 	db	58	;':'
  1188  00FCFD  20                 	db	32
  1189  00FCFE  31                 	db	49	;'1'
  1190  00FCFF  31                 	db	49	;'1'
  1191  00FD00  35                 	db	53	;'5'
  1192  00FD01  32                 	db	50	;'2'
  1193  00FD02  30                 	db	48	;'0'
  1194  00FD03  30                 	db	48	;'0'
  1195  00FD04  20                 	db	32
  1196  00FD05  62                 	db	98	;'b'
  1197  00FD06  70                 	db	112	;'p'
  1198  00FD07  73                 	db	115	;'s'
  1199  00FD08  0A                 	db	10
  1200  00FD09  0D                 	db	13
  1201  00FD0A  20                 	db	32
  1202  00FD0B  20                 	db	32
  1203  00FD0C  20                 	db	32
  1204  00FD0D  20                 	db	32
  1205  00FD0E  4E                 	db	78	;'N'
  1206  00FD0F  6F                 	db	111	;'o'
  1207  00FD10  20                 	db	32
  1208  00FD11  70                 	db	112	;'p'
  1209  00FD12  61                 	db	97	;'a'
  1210  00FD13  72                 	db	114	;'r'
  1211  00FD14  69                 	db	105	;'i'
  1212  00FD15  74                 	db	116	;'t'
  1213  00FD16  79                 	db	121	;'y'
  1214  00FD17  2C                 	db	44
  1215  00FD18  20                 	db	32
  1216  00FD19  38                 	db	56	;'8'
  1217  00FD1A  20                 	db	32
  1218  00FD1B  62                 	db	98	;'b'
  1219  00FD1C  69                 	db	105	;'i'
  1220  00FD1D  74                 	db	116	;'t'
  1221  00FD1E  73                 	db	115	;'s'
  1222  00FD1F  2C                 	db	44
  1223  00FD20  20                 	db	32
  1224  00FD21  6E                 	db	110	;'n'
  1225  00FD22  6F                 	db	111	;'o'
  1226  00FD23  20                 	db	32
  1227  00FD24  66                 	db	102	;'f'
  1228  00FD25  6C                 	db	108	;'l'
  1229  00FD26  6F                 	db	111	;'o'
  1230  00FD27  77                 	db	119	;'w'
  1231  00FD28  20                 	db	32
  1232  00FD29  63                 	db	99	;'c'
  1233  00FD2A  6F                 	db	111	;'o'
  1234  00FD2B  6E                 	db	110	;'n'
  1235  00FD2C  74                 	db	116	;'t'
  1236  00FD2D  72                 	db	114	;'r'
  1237  00FD2E  6F                 	db	111	;'o'
  1238  00FD2F  6C                 	db	108	;'l'
  1239  00FD30  2C                 	db	44
  1240  00FD31  20                 	db	32
  1241  00FD32  31                 	db	49	;'1'
  1242  00FD33  20                 	db	32
  1243  00FD34  73                 	db	115	;'s'
  1244  00FD35  74                 	db	116	;'t'
  1245  00FD36  6F                 	db	111	;'o'
  1246  00FD37  70                 	db	112	;'p'
  1247  00FD38  20                 	db	32
  1248  00FD39  62                 	db	98	;'b'
  1249  00FD3A  69                 	db	105	;'i'
  1250  00FD3B  74                 	db	116	;'t'
  1251  00FD3C  0A                 	db	10
  1252  00FD3D  0D                 	db	13
  1253  00FD3E  20                 	db	32
  1254  00FD3F  20                 	db	32
  1255  00FD40  20                 	db	32
  1256  00FD41  20                 	db	32
  1257  00FD42  43                 	db	67	;'C'
  1258  00FD43  6F                 	db	111	;'o'
  1259  00FD44  6D                 	db	109	;'m'
  1260  00FD45  6D                 	db	109	;'m'
  1261  00FD46  61                 	db	97	;'a'
  1262  00FD47  6E                 	db	110	;'n'
  1263  00FD48  64                 	db	100	;'d'
  1264  00FD49  73                 	db	115	;'s'
  1265  00FD4A  20                 	db	32
  1266  00FD4B  61                 	db	97	;'a'
  1267  00FD4C  72                 	db	114	;'r'
  1268  00FD4D  65                 	db	101	;'e'
  1269  00FD4E  20                 	db	32
  1270  00FD4F  63                 	db	99	;'c'
  1271  00FD50  61                 	db	97	;'a'
  1272  00FD51  73                 	db	115	;'s'
  1273  00FD52  65                 	db	101	;'e'
  1274  00FD53  20                 	db	32
  1275  00FD54  73                 	db	115	;'s'
  1276  00FD55  65                 	db	101	;'e'
  1277  00FD56  6E                 	db	110	;'n'
  1278  00FD57  73                 	db	115	;'s'
  1279  00FD58  69                 	db	105	;'i'
  1280  00FD59  74                 	db	116	;'t'
  1281  00FD5A  69                 	db	105	;'i'
  1282  00FD5B  76                 	db	118	;'v'
  1283  00FD5C  65                 	db	101	;'e'
  1284  00FD5D  0A                 	db	10
  1285  00FD5E  0D                 	db	13
  1286  00FD5F  20                 	db	32
  1287  00FD60  20                 	db	32
  1288  00FD61  20                 	db	32
  1289  00FD62  20                 	db	32
  1290  00FD63  45                 	db	69	;'E'
  1291  00FD64  6E                 	db	110	;'n'
  1292  00FD65  74                 	db	116	;'t'
  1293  00FD66  65                 	db	101	;'e'
  1294  00FD67  72                 	db	114	;'r'
  1295  00FD68  20                 	db	32
  1296  00FD69  61                 	db	97	;'a'
  1297  00FD6A  20                 	db	32
  1298  00FD6B  63                 	db	99	;'c'
  1299  00FD6C  6F                 	db	111	;'o'
  1300  00FD6D  6D                 	db	109	;'m'
  1301  00FD6E  6D                 	db	109	;'m'
  1302  00FD6F  61                 	db	97	;'a'
  1303  00FD70  6E                 	db	110	;'n'
  1304  00FD71  64                 	db	100	;'d'
  1305  00FD72  2C                 	db	44
  1306  00FD73  20                 	db	32
  1307  00FD74  6F                 	db	111	;'o'
  1308  00FD75  72                 	db	114	;'r'
  1309  00FD76  20                 	db	32
  1310  00FD77  65                 	db	101	;'e'
  1311  00FD78  6E                 	db	110	;'n'
  1312  00FD79  74                 	db	116	;'t'
  1313  00FD7A  65                 	db	101	;'e'
  1314  00FD7B  72                 	db	114	;'r'
  1315  00FD7C  20                 	db	32
  1316  00FD7D  48                 	db	72	;'H'
  1317  00FD7E  65                 	db	101	;'e'
  1318  00FD7F  6C                 	db	108	;'l'
  1319  00FD80  70                 	db	112	;'p'
  1320  00FD81  20                 	db	32
  1321  00FD82  66                 	db	102	;'f'
  1322  00FD83  6F                 	db	111	;'o'
  1323  00FD84  72                 	db	114	;'r'
  1324  00FD85  20                 	db	32
  1325  00FD86  6C                 	db	108	;'l'
  1326  00FD87  69                 	db	105	;'i'
  1327  00FD88  73                 	db	115	;'s'
  1328  00FD89  74                 	db	116	;'t'
  1329  00FD8A  20                 	db	32
  1330  00FD8B  6F                 	db	111	;'o'
  1331  00FD8C  66                 	db	102	;'f'
  1332  00FD8D  20                 	db	32
  1333  00FD8E  63                 	db	99	;'c'
  1334  00FD8F  6F                 	db	111	;'o'
  1335  00FD90  6D                 	db	109	;'m'
  1336  00FD91  6D                 	db	109	;'m'
  1337  00FD92  61                 	db	97	;'a'
  1338  00FD93  6E                 	db	110	;'n'
  1339  00FD94  64                 	db	100	;'d'
  1340  00FD95  73                 	db	115	;'s'
  1341  00FD96  0A                 	db	10
  1342  00FD97  0D                 	db	13
  1343  00FD98  00                 	db	0
  1344  00FD99                     STR_60:
  1345  00FD99  44                 	db	68	;'D'
  1346  00FD9A  65                 	db	101	;'e'
  1347  00FD9B  76                 	db	118	;'v'
  1348  00FD9C  69                 	db	105	;'i'
  1349  00FD9D  63                 	db	99	;'c'
  1350  00FD9E  65                 	db	101	;'e'
  1351  00FD9F  20                 	db	32
  1352  00FDA0  6F                 	db	111	;'o'
  1353  00FDA1  6E                 	db	110	;'n'
  1354  00FDA2  20                 	db	32
  1355  00FDA3  74                 	db	116	;'t'
  1356  00FDA4  69                 	db	105	;'i'
  1357  00FDA5  6D                 	db	109	;'m'
  1358  00FDA6  65                 	db	101	;'e'
  1359  00FDA7  20                 	db	32
  1360  00FDA8  73                 	db	115	;'s'
  1361  00FDA9  69                 	db	105	;'i'
  1362  00FDAA  6E                 	db	110	;'n'
  1363  00FDAB  63                 	db	99	;'c'
  1364  00FDAC  65                 	db	101	;'e'
  1365  00FDAD  20                 	db	32
  1366  00FDAE  6C                 	db	108	;'l'
  1367  00FDAF  61                 	db	97	;'a'
  1368  00FDB0  73                 	db	115	;'s'
  1369  00FDB1  74                 	db	116	;'t'
  1370  00FDB2  20                 	db	32
  1371  00FDB3  72                 	db	114	;'r'
  1372  00FDB4  65                 	db	101	;'e'
  1373  00FDB5  73                 	db	115	;'s'
  1374  00FDB6  65                 	db	101	;'e'
  1375  00FDB7  74                 	db	116	;'t'
  1376  00FDB8  20                 	db	32
  1377  00FDB9  63                 	db	99	;'c'
  1378  00FDBA  6F                 	db	111	;'o'
  1379  00FDBB  6E                 	db	110	;'n'
  1380  00FDBC  64                 	db	100	;'d'
  1381  00FDBD  69                 	db	105	;'i'
  1382  00FDBE  74                 	db	116	;'t'
  1383  00FDBF  69                 	db	105	;'i'
  1384  00FDC0  6F                 	db	111	;'o'
  1385  00FDC1  6E                 	db	110	;'n'
  1386  00FDC2  20                 	db	32
  1387  00FDC3  69                 	db	105	;'i'
  1388  00FDC4  73                 	db	115	;'s'
  1389  00FDC5  20                 	db	32
  1390  00FDC6  25                 	db	37
  1391  00FDC7  64                 	db	100	;'d'
  1392  00FDC8  20                 	db	32
  1393  00FDC9  73                 	db	115	;'s'
  1394  00FDCA  65                 	db	101	;'e'
  1395  00FDCB  63                 	db	99	;'c'
  1396  00FDCC  6F                 	db	111	;'o'
  1397  00FDCD  6E                 	db	110	;'n'
  1398  00FDCE  64                 	db	100	;'d'
  1399  00FDCF  73                 	db	115	;'s'
  1400  00FDD0  0A                 	db	10
  1401  00FDD1  0D                 	db	13
  1402  00FDD2  00                 	db	0
  1403  00FDD3                     STR_58:
  1404  00FDD3  46                 	db	70	;'F'
  1405  00FDD4  69                 	db	105	;'i'
  1406  00FDD5  78                 	db	120	;'x'
  1407  00FDD6  65                 	db	101	;'e'
  1408  00FDD7  64                 	db	100	;'d'
  1409  00FDD8  20                 	db	32
  1410  00FDD9  56                 	db	86	;'V'
  1411  00FDDA  6F                 	db	111	;'o'
  1412  00FDDB  6C                 	db	108	;'l'
  1413  00FDDC  74                 	db	116	;'t'
  1414  00FDDD  61                 	db	97	;'a'
  1415  00FDDE  67                 	db	103	;'g'
  1416  00FDDF  65                 	db	101	;'e'
  1417  00FDE0  20                 	db	32
  1418  00FDE1  52                 	db	82	;'R'
  1419  00FDE2  65                 	db	101	;'e'
  1420  00FDE3  66                 	db	102	;'f'
  1421  00FDE4  65                 	db	101	;'e'
  1422  00FDE5  72                 	db	114	;'r'
  1423  00FDE6  65                 	db	101	;'e'
  1424  00FDE7  6E                 	db	110	;'n'
  1425  00FDE8  63                 	db	99	;'c'
  1426  00FDE9  65                 	db	101	;'e'
  1427  00FDEA  20                 	db	32
  1428  00FDEB  42                 	db	66	;'B'
  1429  00FDEC  75                 	db	117	;'u'
  1430  00FDED  66                 	db	102	;'f'
  1431  00FDEE  66                 	db	102	;'f'
  1432  00FDEF  65                 	db	101	;'e'
  1433  00FDF0  72                 	db	114	;'r'
  1434  00FDF1  20                 	db	32
  1435  00FDF2  31                 	db	49	;'1'
  1436  00FDF3  20                 	db	32
  1437  00FDF4  6D                 	db	109	;'m'
  1438  00FDF5  65                 	db	101	;'e'
  1439  00FDF6  61                 	db	97	;'a'
  1440  00FDF7  73                 	db	115	;'s'
  1441  00FDF8  75                 	db	117	;'u'
  1442  00FDF9  72                 	db	114	;'r'
  1443  00FDFA  65                 	db	101	;'e'
  1444  00FDFB  64                 	db	100	;'d'
  1445  00FDFC  20                 	db	32
  1446  00FDFD  61                 	db	97	;'a'
  1447  00FDFE  73                 	db	115	;'s'
  1448  00FDFF  20                 	db	32
  1449  00FE00  25                 	db	37
  1450  00FE01  66                 	db	102	;'f'
  1451  00FE02  20                 	db	32
  1452  00FE03  56                 	db	86	;'V'
  1453  00FE04  6F                 	db	111	;'o'
  1454  00FE05  6C                 	db	108	;'l'
  1455  00FE06  74                 	db	116	;'t'
  1456  00FE07  73                 	db	115	;'s'
  1457  00FE08  0A                 	db	10
  1458  00FE09  0D                 	db	13
  1459  00FE0A  00                 	db	0
  1460  00FE0B                     STR_50:
  1461  00FE0B  4D                 	db	77	;'M'
  1462  00FE0C  61                 	db	97	;'a'
  1463  00FE0D  72                 	db	114	;'r'
  1464  00FE0E  71                 	db	113	;'q'
  1465  00FE0F  75                 	db	117	;'u'
  1466  00FE10  65                 	db	101	;'e'
  1467  00FE11  74                 	db	116	;'t'
  1468  00FE12  74                 	db	116	;'t'
  1469  00FE13  65                 	db	101	;'e'
  1470  00FE14  20                 	db	32
  1471  00FE15  55                 	db	85	;'U'
  1472  00FE16  6E                 	db	110	;'n'
  1473  00FE17  69                 	db	105	;'i'
  1474  00FE18  76                 	db	118	;'v'
  1475  00FE19  65                 	db	101	;'e'
  1476  00FE1A  72                 	db	114	;'r'
  1477  00FE1B  73                 	db	115	;'s'
  1478  00FE1C  69                 	db	105	;'i'
  1479  00FE1D  74                 	db	116	;'t'
  1480  00FE1E  79                 	db	121	;'y'
  1481  00FE1F  20                 	db	32
  1482  00FE20  45                 	db	69	;'E'
  1483  00FE21  4C                 	db	76	;'L'
  1484  00FE22  45                 	db	69	;'E'
  1485  00FE23  4E                 	db	78	;'N'
  1486  00FE24  20                 	db	32
  1487  00FE25  33                 	db	51	;'3'
  1488  00FE26  30                 	db	48	;'0'
  1489  00FE27  33                 	db	51	;'3'
  1490  00FE28  35                 	db	53	;'5'
  1491  00FE29  20                 	db	32
  1492  00FE2A  46                 	db	70	;'F'
  1493  00FE2B  69                 	db	105	;'i'
  1494  00FE2C  6E                 	db	110	;'n'
  1495  00FE2D  61                 	db	97	;'a'
  1496  00FE2E  6C                 	db	108	;'l'
  1497  00FE2F  20                 	db	32
  1498  00FE30  50                 	db	80	;'P'
  1499  00FE31  72                 	db	114	;'r'
  1500  00FE32  6F                 	db	111	;'o'
  1501  00FE33  6A                 	db	106	;'j'
  1502  00FE34  65                 	db	101	;'e'
  1503  00FE35  63                 	db	99	;'c'
  1504  00FE36  74                 	db	116	;'t'
  1505  00FE37  0A                 	db	10
  1506  00FE38  0D                 	db	13
  1507  00FE39  00                 	db	0
  1508  00FE3A                     STR_65:
  1509  00FE3A  4D                 	db	77	;'M'
  1510  00FE3B  65                 	db	101	;'e'
  1511  00FE3C  61                 	db	97	;'a'
  1512  00FE3D  73                 	db	115	;'s'
  1513  00FE3E  75                 	db	117	;'u'
  1514  00FE3F  72                 	db	114	;'r'
  1515  00FE40  65                 	db	101	;'e'
  1516  00FE41  6D                 	db	109	;'m'
  1517  00FE42  65                 	db	101	;'e'
  1518  00FE43  6E                 	db	110	;'n'
  1519  00FE44  74                 	db	116	;'t'
  1520  00FE45  73                 	db	115	;'s'
  1521  00FE46  20                 	db	32
  1522  00FE47  72                 	db	114	;'r'
  1523  00FE48  65                 	db	101	;'e'
  1524  00FE49  73                 	db	115	;'s'
  1525  00FE4A  70                 	db	112	;'p'
  1526  00FE4B  6F                 	db	111	;'o'
  1527  00FE4C  6E                 	db	110	;'n'
  1528  00FE4D  73                 	db	115	;'s'
  1529  00FE4E  65                 	db	101	;'e'
  1530  00FE4F  73                 	db	115	;'s'
  1531  00FE50  20                 	db	32
  1532  00FE51  61                 	db	97	;'a'
  1533  00FE52  70                 	db	112	;'p'
  1534  00FE53  70                 	db	112	;'p'
  1535  00FE54  65                 	db	101	;'e'
  1536  00FE55  61                 	db	97	;'a'
  1537  00FE56  72                 	db	114	;'r'
  1538  00FE57  20                 	db	32
  1539  00FE58  69                 	db	105	;'i'
  1540  00FE59  6E                 	db	110	;'n'
  1541  00FE5A  20                 	db	32
  1542  00FE5B  63                 	db	99	;'c'
  1543  00FE5C  79                 	db	121	;'y'
  1544  00FE5D  61                 	db	97	;'a'
  1545  00FE5E  6E                 	db	110	;'n'
  1546  00FE5F  0A                 	db	10
  1547  00FE60  0D                 	db	13
  1548  00FE61  00                 	db	0
  1549  00FE62                     STR_52:
  1550  00FE62  2B                 	db	43
  1551  00FE63  33                 	db	51	;'3'
  1552  00FE64  2E                 	db	46
  1553  00FE65  33                 	db	51	;'3'
  1554  00FE66  56                 	db	86	;'V'
  1555  00FE67  20                 	db	32
  1556  00FE68  72                 	db	114	;'r'
  1557  00FE69  61                 	db	97	;'a'
  1558  00FE6A  69                 	db	105	;'i'
  1559  00FE6B  6C                 	db	108	;'l'
  1560  00FE6C  20                 	db	32
  1561  00FE6D  6D                 	db	109	;'m'
  1562  00FE6E  65                 	db	101	;'e'
  1563  00FE6F  61                 	db	97	;'a'
  1564  00FE70  73                 	db	115	;'s'
  1565  00FE71  75                 	db	117	;'u'
  1566  00FE72  72                 	db	114	;'r'
  1567  00FE73  65                 	db	101	;'e'
  1568  00FE74  64                 	db	100	;'d'
  1569  00FE75  20                 	db	32
  1570  00FE76  61                 	db	97	;'a'
  1571  00FE77  73                 	db	115	;'s'
  1572  00FE78  20                 	db	32
  1573  00FE79  2B                 	db	43
  1574  00FE7A  25                 	db	37
  1575  00FE7B  66                 	db	102	;'f'
  1576  00FE7C  20                 	db	32
  1577  00FE7D  56                 	db	86	;'V'
  1578  00FE7E  6F                 	db	111	;'o'
  1579  00FE7F  6C                 	db	108	;'l'
  1580  00FE80  74                 	db	116	;'t'
  1581  00FE81  73                 	db	115	;'s'
  1582  00FE82  0A                 	db	10
  1583  00FE83  0D                 	db	13
  1584  00FE84  00                 	db	0
  1585  00FE85                     STR_56:
  1586  00FE85  44                 	db	68	;'D'
  1587  00FE86  69                 	db	105	;'i'
  1588  00FE87  65                 	db	101	;'e'
  1589  00FE88  20                 	db	32
  1590  00FE89  54                 	db	84	;'T'
  1591  00FE8A  65                 	db	101	;'e'
  1592  00FE8B  6D                 	db	109	;'m'
  1593  00FE8C  70                 	db	112	;'p'
  1594  00FE8D  65                 	db	101	;'e'
  1595  00FE8E  72                 	db	114	;'r'
  1596  00FE8F  61                 	db	97	;'a'
  1597  00FE90  74                 	db	116	;'t'
  1598  00FE91  75                 	db	117	;'u'
  1599  00FE92  72                 	db	114	;'r'
  1600  00FE93  65                 	db	101	;'e'
  1601  00FE94  20                 	db	32
  1602  00FE95  6D                 	db	109	;'m'
  1603  00FE96  65                 	db	101	;'e'
  1604  00FE97  61                 	db	97	;'a'
  1605  00FE98  73                 	db	115	;'s'
  1606  00FE99  75                 	db	117	;'u'
  1607  00FE9A  72                 	db	114	;'r'
  1608  00FE9B  65                 	db	101	;'e'
  1609  00FE9C  64                 	db	100	;'d'
  1610  00FE9D  20                 	db	32
  1611  00FE9E  61                 	db	97	;'a'
  1612  00FE9F  73                 	db	115	;'s'
  1613  00FEA0  20                 	db	32
  1614  00FEA1  25                 	db	37
  1615  00FEA2  66                 	db	102	;'f'
  1616  00FEA3  43                 	db	67	;'C'
  1617  00FEA4  0A                 	db	10
  1618  00FEA5  0D                 	db	13
  1619  00FEA6  00                 	db	0
  1620  00FEA7                     STR_54:
  1621  00FEA7  2B                 	db	43
  1622  00FEA8  31                 	db	49	;'1'
  1623  00FEA9  32                 	db	50	;'2'
  1624  00FEAA  56                 	db	86	;'V'
  1625  00FEAB  20                 	db	32
  1626  00FEAC  72                 	db	114	;'r'
  1627  00FEAD  61                 	db	97	;'a'
  1628  00FEAE  69                 	db	105	;'i'
  1629  00FEAF  6C                 	db	108	;'l'
  1630  00FEB0  20                 	db	32
  1631  00FEB1  6D                 	db	109	;'m'
  1632  00FEB2  65                 	db	101	;'e'
  1633  00FEB3  61                 	db	97	;'a'
  1634  00FEB4  73                 	db	115	;'s'
  1635  00FEB5  75                 	db	117	;'u'
  1636  00FEB6  72                 	db	114	;'r'
  1637  00FEB7  65                 	db	101	;'e'
  1638  00FEB8  64                 	db	100	;'d'
  1639  00FEB9  20                 	db	32
  1640  00FEBA  61                 	db	97	;'a'
  1641  00FEBB  73                 	db	115	;'s'
  1642  00FEBC  20                 	db	32
  1643  00FEBD  2B                 	db	43
  1644  00FEBE  25                 	db	37
  1645  00FEBF  66                 	db	102	;'f'
  1646  00FEC0  20                 	db	32
  1647  00FEC1  56                 	db	86	;'V'
  1648  00FEC2  6F                 	db	111	;'o'
  1649  00FEC3  6C                 	db	108	;'l'
  1650  00FEC4  74                 	db	116	;'t'
  1651  00FEC5  73                 	db	115	;'s'
  1652  00FEC6  0A                 	db	10
  1653  00FEC7  0D                 	db	13
  1654  00FEC8  00                 	db	0
  1655  00FEC9                     STR_63:
  1656  00FEC9  48                 	db	72	;'H'
  1657  00FECA  65                 	db	101	;'e'
  1658  00FECB  6C                 	db	108	;'l'
  1659  00FECC  70                 	db	112	;'p'
  1660  00FECD  20                 	db	32
  1661  00FECE  6D                 	db	109	;'m'
  1662  00FECF  65                 	db	101	;'e'
  1663  00FED0  73                 	db	115	;'s'
  1664  00FED1  73                 	db	115	;'s'
  1665  00FED2  61                 	db	97	;'a'
  1666  00FED3  67                 	db	103	;'g'
  1667  00FED4  65                 	db	101	;'e'
  1668  00FED5  73                 	db	115	;'s'
  1669  00FED6  20                 	db	32
  1670  00FED7  61                 	db	97	;'a'
  1671  00FED8  70                 	db	112	;'p'
  1672  00FED9  70                 	db	112	;'p'
  1673  00FEDA  65                 	db	101	;'e'
  1674  00FEDB  61                 	db	97	;'a'
  1675  00FEDC  72                 	db	114	;'r'
  1676  00FEDD  20                 	db	32
  1677  00FEDE  69                 	db	105	;'i'
  1678  00FEDF  6E                 	db	110	;'n'
  1679  00FEE0  20                 	db	32
  1680  00FEE1  79                 	db	121	;'y'
  1681  00FEE2  65                 	db	101	;'e'
  1682  00FEE3  6C                 	db	108	;'l'
  1683  00FEE4  6C                 	db	108	;'l'
  1684  00FEE5  6F                 	db	111	;'o'
  1685  00FEE6  77                 	db	119	;'w'
  1686  00FEE7  0A                 	db	10
  1687  00FEE8  0D                 	db	13
  1688  00FEE9  00                 	db	0
  1689  00FEEA                     STR_67:
  1690  00FEEA  55                 	db	85	;'U'
  1691  00FEEB  73                 	db	115	;'s'
  1692  00FEEC  65                 	db	101	;'e'
  1693  00FEED  72                 	db	114	;'r'
  1694  00FEEE  20                 	db	32
  1695  00FEEF  69                 	db	105	;'i'
  1696  00FEF0  6E                 	db	110	;'n'
  1697  00FEF1  70                 	db	112	;'p'
  1698  00FEF2  75                 	db	117	;'u'
  1699  00FEF3  74                 	db	116	;'t'
  1700  00FEF4  20                 	db	32
  1701  00FEF5  61                 	db	97	;'a'
  1702  00FEF6  70                 	db	112	;'p'
  1703  00FEF7  70                 	db	112	;'p'
  1704  00FEF8  65                 	db	101	;'e'
  1705  00FEF9  61                 	db	97	;'a'
  1706  00FEFA  72                 	db	114	;'r'
  1707  00FEFB  73                 	db	115	;'s'
  1708  00FEFC  20                 	db	32
  1709  00FEFD  69                 	db	105	;'i'
  1710  00FEFE  6E                 	db	110	;'n'
  1711  00FEFF  20                 	db	32
  1712  00FF00  77                 	db	119	;'w'
  1713  00FF01  68                 	db	104	;'h'
  1714  00FF02  69                 	db	105	;'i'
  1715  00FF03  74                 	db	116	;'t'
  1716  00FF04  65                 	db	101	;'e'
  1717  00FF05  0A                 	db	10
  1718  00FF06  0D                 	db	13
  1719  00FF07  00                 	db	0
  1720  00FF08                     STR_64:
  1721  00FF08  49                 	db	73	;'I'
  1722  00FF09  44                 	db	68	;'D'
  1723  00FF0A  4E                 	db	78	;'N'
  1724  00FF0B  20                 	db	32
  1725  00FF0C  73                 	db	115	;'s'
  1726  00FF0D  74                 	db	116	;'t'
  1727  00FF0E  72                 	db	114	;'r'
  1728  00FF0F  69                 	db	105	;'i'
  1729  00FF10  6E                 	db	110	;'n'
  1730  00FF11  67                 	db	103	;'g'
  1731  00FF12  20                 	db	32
  1732  00FF13  61                 	db	97	;'a'
  1733  00FF14  70                 	db	112	;'p'
  1734  00FF15  70                 	db	112	;'p'
  1735  00FF16  65                 	db	101	;'e'
  1736  00FF17  61                 	db	97	;'a'
  1737  00FF18  72                 	db	114	;'r'
  1738  00FF19  73                 	db	115	;'s'
  1739  00FF1A  20                 	db	32
  1740  00FF1B  69                 	db	105	;'i'
  1741  00FF1C  6E                 	db	110	;'n'
  1742  00FF1D  20                 	db	32
  1743  00FF1E  67                 	db	103	;'g'
  1744  00FF1F  72                 	db	114	;'r'
  1745  00FF20  65                 	db	101	;'e'
  1746  00FF21  65                 	db	101	;'e'
  1747  00FF22  6E                 	db	110	;'n'
  1748  00FF23  0A                 	db	10
  1749  00FF24  0D                 	db	13
  1750  00FF25  00                 	db	0
  1751  00FF26                     STR_66:
  1752  00FF26  45                 	db	69	;'E'
  1753  00FF27  72                 	db	114	;'r'
  1754  00FF28  72                 	db	114	;'r'
  1755  00FF29  6F                 	db	111	;'o'
  1756  00FF2A  72                 	db	114	;'r'
  1757  00FF2B  73                 	db	115	;'s'
  1758  00FF2C  20                 	db	32
  1759  00FF2D  61                 	db	97	;'a'
  1760  00FF2E  70                 	db	112	;'p'
  1761  00FF2F  70                 	db	112	;'p'
  1762  00FF30  65                 	db	101	;'e'
  1763  00FF31  61                 	db	97	;'a'
  1764  00FF32  72                 	db	114	;'r'
  1765  00FF33  20                 	db	32
  1766  00FF34  69                 	db	105	;'i'
  1767  00FF35  6E                 	db	110	;'n'
  1768  00FF36  20                 	db	32
  1769  00FF37  72                 	db	114	;'r'
  1770  00FF38  65                 	db	101	;'e'
  1771  00FF39  64                 	db	100	;'d'
  1772  00FF3A  0A                 	db	10
  1773  00FF3B  0D                 	db	13
  1774  00FF3C  00                 	db	0
  1775  00FF3D                     STR_55:
  1776  00FF3D  4D                 	db	77	;'M'
  1777  00FF3E  65                 	db	101	;'e'
  1778  00FF3F  61                 	db	97	;'a'
  1779  00FF40  73                 	db	115	;'s'
  1780  00FF41  75                 	db	117	;'u'
  1781  00FF42  72                 	db	114	;'r'
  1782  00FF43  65                 	db	101	;'e'
  1783  00FF44  20                 	db	32
  1784  00FF45  44                 	db	68	;'D'
  1785  00FF46  69                 	db	105	;'i'
  1786  00FF47  65                 	db	101	;'e'
  1787  00FF48  20                 	db	32
  1788  00FF49  54                 	db	84	;'T'
  1789  00FF4A  65                 	db	101	;'e'
  1790  00FF4B  6D                 	db	109	;'m'
  1791  00FF4C  70                 	db	112	;'p'
  1792  00FF4D  3F                 	db	63	;'?'
  1793  00FF4E  00                 	db	0
  1794  00FF4F                     STR_49:
  1795  00FF4F  41                 	db	65	;'A'
  1796  00FF50  43                 	db	67	;'C'
  1797  00FF51  20                 	db	32
  1798  00FF52  50                 	db	80	;'P'
  1799  00FF53  6F                 	db	111	;'o'
  1800  00FF54  77                 	db	119	;'w'
  1801  00FF55  65                 	db	101	;'e'
  1802  00FF56  72                 	db	114	;'r'
  1803  00FF57  20                 	db	32
  1804  00FF58  4D                 	db	77	;'M'
  1805  00FF59  65                 	db	101	;'e'
  1806  00FF5A  74                 	db	116	;'t'
  1807  00FF5B  65                 	db	101	;'e'
  1808  00FF5C  72                 	db	114	;'r'
  1809  00FF5D  0A                 	db	10
  1810  00FF5E  0D                 	db	13
  1811  00FF5F  00                 	db	0
  1812  00FF60                     STR_51:
  1813  00FF60  4D                 	db	77	;'M'
  1814  00FF61  65                 	db	101	;'e'
  1815  00FF62  61                 	db	97	;'a'
  1816  00FF63  73                 	db	115	;'s'
  1817  00FF64  75                 	db	117	;'u'
  1818  00FF65  72                 	db	114	;'r'
  1819  00FF66  65                 	db	101	;'e'
  1820  00FF67  20                 	db	32
  1821  00FF68  50                 	db	80	;'P'
  1822  00FF69  4F                 	db	79	;'O'
  1823  00FF6A  53                 	db	83	;'S'
  1824  00FF6B  33                 	db	51	;'3'
  1825  00FF6C  50                 	db	80	;'P'
  1826  00FF6D  33                 	db	51	;'3'
  1827  00FF6E  3F                 	db	63	;'?'
  1828  00FF6F  00                 	db	0
  1829  00FF70                     STR_53:
  1830  00FF70  4D                 	db	77	;'M'
  1831  00FF71  65                 	db	101	;'e'
  1832  00FF72  61                 	db	97	;'a'
  1833  00FF73  73                 	db	115	;'s'
  1834  00FF74  75                 	db	117	;'u'
  1835  00FF75  72                 	db	114	;'r'
  1836  00FF76  65                 	db	101	;'e'
  1837  00FF77  20                 	db	32
  1838  00FF78  50                 	db	80	;'P'
  1839  00FF79  4F                 	db	79	;'O'
  1840  00FF7A  53                 	db	83	;'S'
  1841  00FF7B  31                 	db	49	;'1'
  1842  00FF7C  32                 	db	50	;'2'
  1843  00FF7D  3F                 	db	63	;'?'
  1844  00FF7E  00                 	db	0
  1845  00FF7F                     STR_57:
  1846  00FF7F  4D                 	db	77	;'M'
  1847  00FF80  65                 	db	101	;'e'
  1848  00FF81  61                 	db	97	;'a'
  1849  00FF82  73                 	db	115	;'s'
  1850  00FF83  75                 	db	117	;'u'
  1851  00FF84  72                 	db	114	;'r'
  1852  00FF85  65                 	db	101	;'e'
  1853  00FF86  20                 	db	32
  1854  00FF87  46                 	db	70	;'F'
  1855  00FF88  56                 	db	86	;'V'
  1856  00FF89  52                 	db	82	;'R'
  1857  00FF8A  3F                 	db	63	;'?'
  1858  00FF8B  00                 	db	0
  1859  00FF8C                     STR_59:
  1860  00FF8C  4F                 	db	79	;'O'
  1861  00FF8D  6E                 	db	110	;'n'
  1862  00FF8E  20                 	db	32
  1863  00FF8F  54                 	db	84	;'T'
  1864  00FF90  69                 	db	105	;'i'
  1865  00FF91  6D                 	db	109	;'m'
  1866  00FF92  65                 	db	101	;'e'
  1867  00FF93  3F                 	db	63	;'?'
  1868  00FF94  00                 	db	0
  1869  00FF95                     STR_47:
  1870  00FF95  2A                 	db	42
  1871  00FF96  49                 	db	73	;'I'
  1872  00FF97  44                 	db	68	;'D'
  1873  00FF98  4E                 	db	78	;'N'
  1874  00FF99  3F                 	db	63	;'?'
  1875  00FF9A  00                 	db	0
  1876  00FF9B                     STR_44:
  1877  00FF9B  43                 	db	67	;'C'
  1878  00FF9C  6C                 	db	108	;'l'
  1879  00FF9D  65                 	db	101	;'e'
  1880  00FF9E  61                 	db	97	;'a'
  1881  00FF9F  72                 	db	114	;'r'
  1882  00FFA0  00                 	db	0
  1883  00FFA1                     STR_41:
  1884  00FFA1  52                 	db	82	;'R'
  1885  00FFA2  65                 	db	101	;'e'
  1886  00FFA3  73                 	db	115	;'s'
  1887  00FFA4  65                 	db	101	;'e'
  1888  00FFA5  74                 	db	116	;'t'
  1889  00FFA6  00                 	db	0
  1890  00FFA7                     STR_61:
  1891  00FFA7  48                 	db	72	;'H'
  1892  00FFA8  65                 	db	101	;'e'
  1893  00FFA9  6C                 	db	108	;'l'
  1894  00FFAA  70                 	db	112	;'p'
  1895  00FFAB  00                 	db	0
  1896  00FFAC                     STR_2:
  1897  00FFAC  1B                 	db	27
  1898  00FFAD  5B                 	db	91	;'['
  1899  00FFAE  32                 	db	50	;'2'
  1900  00FFAF  4A                 	db	74	;'J'
  1901  00FFB0  00                 	db	0
  1902  00FFB1                     STR_48:
  1903  00FFB1  49                 	db	73	;'I'
  1904  00FFB2  44                 	db	68	;'D'
  1905  00FFB3  4E                 	db	78	;'N'
  1906  00FFB4  00                 	db	0
  1907  00FFB5                     STR_3:
  1908  00FFB5  1B                 	db	27
  1909  00FFB6  5B                 	db	91	;'['
  1910  00FFB7  48                 	db	72	;'H'
  1911  00FFB8  00                 	db	0
  1912  00FFB9  1B                 	db	27
  1913  00FFBA  5B                 	db	91	;'['
  1914  00FFBB  73                 	db	115	;'s'
  1915  00FFBC  00                 	db	0
  1916  00FFBD  1B                 	db	27
  1917  00FFBE  5B                 	db	91	;'['
  1918  00FFBF  75                 	db	117	;'u'
  1919  00FFC0  00                 	db	0
  1920  00FFC1                     STR_1:
  1921  00FFC1  1B                 	db	27
  1922  00FFC2  5B                 	db	91	;'['
  1923  00FFC3  4B                 	db	75	;'K'
  1924  00FFC4  00                 	db	0
  1925  00FFC5                     STR_20:
  1926  00FFC5  33                 	db	51	;'3'
  1927  00FFC6  30                 	db	48	;'0'
  1928  00FFC7  00                 	db	0
  1929  00FFC8                     STR_30:
  1930  00FFC8  34                 	db	52	;'4'
  1931  00FFC9  30                 	db	48	;'0'
  1932  00FFCA  00                 	db	0
  1933  00FFCB                     STR_21:
  1934  00FFCB  33                 	db	51	;'3'
  1935  00FFCC  31                 	db	49	;'1'
  1936  00FFCD  00                 	db	0
  1937  00FFCE                     STR_31:
  1938  00FFCE  34                 	db	52	;'4'
  1939  00FFCF  31                 	db	49	;'1'
  1940  00FFD0  00                 	db	0
  1941  00FFD1                     STR_22:
  1942  00FFD1  33                 	db	51	;'3'
  1943  00FFD2  32                 	db	50	;'2'
  1944  00FFD3  00                 	db	0
  1945  00FFD4                     STR_32:
  1946  00FFD4  34                 	db	52	;'4'
  1947  00FFD5  32                 	db	50	;'2'
  1948  00FFD6  00                 	db	0
  1949  00FFD7                     STR_23:
  1950  00FFD7  33                 	db	51	;'3'
  1951  00FFD8  33                 	db	51	;'3'
  1952  00FFD9  00                 	db	0
  1953  00FFDA                     STR_33:
  1954  00FFDA  34                 	db	52	;'4'
  1955  00FFDB  33                 	db	51	;'3'
  1956  00FFDC  00                 	db	0
  1957  00FFDD                     STR_24:
  1958  00FFDD  33                 	db	51	;'3'
  1959  00FFDE  34                 	db	52	;'4'
  1960  00FFDF  00                 	db	0
  1961  00FFE0                     STR_34:
  1962  00FFE0  34                 	db	52	;'4'
  1963  00FFE1  34                 	db	52	;'4'
  1964  00FFE2  00                 	db	0
  1965  00FFE3                     STR_25:
  1966  00FFE3  33                 	db	51	;'3'
  1967  00FFE4  35                 	db	53	;'5'
  1968  00FFE5  00                 	db	0
  1969  00FFE6                     STR_35:
  1970  00FFE6  34                 	db	52	;'4'
  1971  00FFE7  35                 	db	53	;'5'
  1972  00FFE8  00                 	db	0
  1973  00FFE9                     STR_26:
  1974  00FFE9  33                 	db	51	;'3'
  1975  00FFEA  36                 	db	54	;'6'
  1976  00FFEB  00                 	db	0
  1977  00FFEC                     STR_36:
  1978  00FFEC  34                 	db	52	;'4'
  1979  00FFED  36                 	db	54	;'6'
  1980  00FFEE  00                 	db	0
  1981  00FFEF                     STR_27:
  1982  00FFEF  33                 	db	51	;'3'
  1983  00FFF0  37                 	db	55	;'7'
  1984  00FFF1  00                 	db	0
  1985  00FFF2                     STR_37:
  1986  00FFF2  34                 	db	52	;'4'
  1987  00FFF3  37                 	db	55	;'7'
  1988  00FFF4  00                 	db	0
  1989  00FFF5                     STR_11:
  1990  00FFF5  1B                 	db	27
  1991  00FFF6  5B                 	db	91	;'['
  1992  00FFF7  00                 	db	0
  1993  00FFF8                     STR_17:
  1994  00FFF8  38                 	db	56	;'8'
  1995  00FFF9  00                 	db	0
  1996  00FFFA                     STR_19:
  1997  00FFFA  3B                 	db	59	;';'
  1998  00FFFB  00                 	db	0
  1999  00FFFC                     STR_39:
  2000  00FFFC  6D                 	db	109	;'m'
  2001  00FFFD  00                 	db	0
  2002  0000                     
  2003                           ; #config settings
  2004  00FFFE  00                 	db	0	; dummy byte at the end
  2005  0000                     
  2006                           	psect	cinit
  2007  013FE2                     __pcinit:
  2008                           	opt stack 0
  2009  013FE2                     start_initialization:
  2010                           	opt stack 0
  2011  013FE2                     __initialization:
  2012                           	opt stack 0
  2013                           
  2014                           ; Initialize objects allocated to BANK0 (3 bytes)
  2015                           ; load TBLPTR registers with __pidataBANK0
  2016  013FE2  0E3A               	movlw	low __pidataBANK0
  2017  013FE4  6EF6               	movwf	tblptrl,c
  2018  013FE6  0E46               	movlw	high __pidataBANK0
  2019  013FE8  6EF7               	movwf	tblptrh,c
  2020  013FEA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  2021  013FEC  6EF8               	movwf	tblptru,c
  2022  013FEE  0009               	tblrd		*+	;fetch initializer
  2023  013FF0  CFF5 F0BC          	movff	tablat,__pdataBANK0
  2024  013FF4  0009               	tblrd		*+	;fetch initializer
  2025  013FF6  CFF5 F0BD          	movff	tablat,__pdataBANK0+1
  2026  013FFA  0009               	tblrd		*+	;fetch initializer
  2027  013FFC  CFF5 F0BE          	movff	tablat,__pdataBANK0+2
  2028                           
  2029                           ; Clear objects allocated to BANK2 (64 bytes)
  2030  014000  EE02  F000         	lfsr	0,__pbssBANK2
  2031  014004  0E40               	movlw	64
  2032  014006                     clear_0:
  2033  014006  6AEE               	clrf	postinc0,c
  2034  014008  06E8               	decf	wreg,f,c
  2035  01400A  E1FD               	bnz	clear_0
  2036                           
  2037                           ; Clear objects allocated to BANK1 (138 bytes)
  2038  01400C  EE01  F000         	lfsr	0,__pbssBANK1
  2039  014010  0E8A               	movlw	138
  2040  014012                     clear_1:
  2041  014012  6AEE               	clrf	postinc0,c
  2042  014014  06E8               	decf	wreg,f,c
  2043  014016  E1FD               	bnz	clear_1
  2044                           
  2045                           ; Clear objects allocated to BANK0 (22 bytes)
  2046  014018  EE00  F0A6         	lfsr	0,__pbssBANK0
  2047  01401C  0E16               	movlw	22
  2048  01401E                     clear_2:
  2049  01401E  6AEE               	clrf	postinc0,c
  2050  014020  06E8               	decf	wreg,f,c
  2051  014022  E1FD               	bnz	clear_2
  2052                           
  2053                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  2054  014024  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  2055                           
  2056                           ; Clear objects allocated to COMRAM (13 bytes)
  2057  014026  EE00  F051         	lfsr	0,__pbssCOMRAM
  2058  01402A  0E0D               	movlw	13
  2059  01402C                     clear_3:
  2060  01402C  6AEE               	clrf	postinc0,c
  2061  01402E  06E8               	decf	wreg,f,c
  2062  014030  E1FD               	bnz	clear_3
  2063  014032                     end_of_initialization:
  2064                           	opt stack 0
  2065  014032                     __end_of__initialization:
  2066                           	opt stack 0
  2067  014032  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2068  014034  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2069  014036  0100               	movlb	0
  2070  014038  EF8C  F09E         	goto	_main	;jump to C main() function
  2071                           tblptru	equ	0xFF8
  2072                           tblptrh	equ	0xFF7
  2073                           tblptrl	equ	0xFF6
  2074                           tablat	equ	0xFF5
  2075                           postinc0	equ	0xFEE
  2076                           wreg	equ	0xFE8
  2077                           
  2078                           	psect	bitbssCOMRAM
  2079  0002F0                     __pbitbssCOMRAM:
  2080                           	opt stack 0
  2081  0002F0                     _eusart2RxStringReady:
  2082                           	opt stack 0
  2083  0002F0                     	ds	1
  2084                           tblptru	equ	0xFF8
  2085                           tblptrh	equ	0xFF7
  2086                           tblptrl	equ	0xFF6
  2087                           tablat	equ	0xFF5
  2088                           postinc0	equ	0xFEE
  2089                           wreg	equ	0xFE8
  2090                           
  2091                           	psect	bssCOMRAM
  2092  000051                     __pbssCOMRAM:
  2093                           	opt stack 0
  2094  000051                     _POS3P3_ADC_Result:
  2095                           	opt stack 0
  2096  000051                     	ds	3
  2097  000054                     _ADCC_ADI_InterruptHandler:
  2098                           	opt stack 0
  2099  000054                     	ds	3
  2100  000057                     _background_color:
  2101                           	opt stack 0
  2102  000057                     	ds	1
  2103  000058                     _foreground_color:
  2104                           	opt stack 0
  2105  000058                     	ds	1
  2106  000059                     _attribute:
  2107                           	opt stack 0
  2108  000059                     	ds	1
  2109  00005A                     _eusart2RxHead:
  2110                           	opt stack 0
  2111  00005A                     	ds	1
  2112  00005B                     _FVR_ADC_Result:
  2113                           	opt stack 0
  2114  00005B                     	ds	3
  2115                           tblptru	equ	0xFF8
  2116                           tblptrh	equ	0xFF7
  2117                           tblptrl	equ	0xFF6
  2118                           tablat	equ	0xFF5
  2119                           postinc0	equ	0xFEE
  2120                           wreg	equ	0xFE8
  2121                           
  2122                           	psect	bssBANK0
  2123  0000A6                     __pbssBANK0:
  2124                           	opt stack 0
  2125  0000A6                     _ADC_Result_Scaling:
  2126                           	opt stack 0
  2127  0000A6                     	ds	3
  2128  0000A9                     _TMR7_InterruptHandler:
  2129                           	opt stack 0
  2130  0000A9                     	ds	3
  2131  0000AC                     _TMR6_InterruptHandler:
  2132                           	opt stack 0
  2133  0000AC                     	ds	3
  2134  0000AF                     _EUSART2_RxDefaultInterruptHandler:
  2135                           	opt stack 0
  2136  0000AF                     	ds	3
  2137  0000B2                     _EUSART2_TxDefaultInterruptHandler:
  2138                           	opt stack 0
  2139  0000B2                     	ds	3
  2140  0000B5                     _timer7ReloadVal:
  2141                           	opt stack 0
  2142  0000B5                     	ds	2
  2143  0000B7                     _eusart2RxCount:
  2144                           	opt stack 0
  2145  0000B7                     	ds	1
  2146  0000B8                     _eusart2RxTail:
  2147                           	opt stack 0
  2148  0000B8                     	ds	1
  2149  0000B9                     _eusart2TxBufferRemaining:
  2150                           	opt stack 0
  2151  0000B9                     	ds	1
  2152  0000BA                     _eusart2TxTail:
  2153                           	opt stack 0
  2154  0000BA                     	ds	1
  2155  0000BB                     _eusart2TxHead:
  2156                           	opt stack 0
  2157  0000BB                     	ds	1
  2158                           tblptru	equ	0xFF8
  2159                           tblptrh	equ	0xFF7
  2160                           tblptrl	equ	0xFF6
  2161                           tablat	equ	0xFF5
  2162                           postinc0	equ	0xFEE
  2163                           wreg	equ	0xFE8
  2164                           
  2165                           	psect	dataBANK0
  2166  0000BC                     __pdataBANK0:
  2167                           	opt stack 0
  2168  0000BC                     _Temp_ADC_Offset:
  2169                           	opt stack 0
  2170  0000BC                     	ds	3
  2171                           tblptru	equ	0xFF8
  2172                           tblptrh	equ	0xFF7
  2173                           tblptrl	equ	0xFF6
  2174                           tablat	equ	0xFF5
  2175                           postinc0	equ	0xFEE
  2176                           wreg	equ	0xFE8
  2177                           
  2178                           	psect	bssBANK1
  2179  000100                     __pbssBANK1:
  2180                           	opt stack 0
  2181  000100                     _eusart2RxBuffer:
  2182                           	opt stack 0
  2183  000100                     	ds	64
  2184  000140                     _on_time:
  2185                           	opt stack 0
  2186  000140                     	ds	4
  2187  000144                     _Temp_ADC_Result:
  2188                           	opt stack 0
  2189  000144                     	ds	3
  2190  000147                     _POS12_ADC_Result:
  2191                           	opt stack 0
  2192  000147                     	ds	3
  2193  00014A                     _line:
  2194                           	opt stack 0
  2195  00014A                     	ds	64
  2196                           tblptru	equ	0xFF8
  2197                           tblptrh	equ	0xFF7
  2198                           tblptrl	equ	0xFF6
  2199                           tablat	equ	0xFF5
  2200                           postinc0	equ	0xFEE
  2201                           wreg	equ	0xFE8
  2202                           
  2203                           	psect	bssBANK2
  2204  000200                     __pbssBANK2:
  2205                           	opt stack 0
  2206  000200                     _eusart2TxBuffer:
  2207                           	opt stack 0
  2208  000200                     	ds	64
  2209                           tblptru	equ	0xFF8
  2210                           tblptrh	equ	0xFF7
  2211                           tblptrl	equ	0xFF6
  2212                           tablat	equ	0xFF5
  2213                           postinc0	equ	0xFEE
  2214                           wreg	equ	0xFE8
  2215                           
  2216                           	psect	cstackBANK2
  2217  000240                     __pcstackBANK2:
  2218                           	opt stack 0
  2219  000240                     terminal_ringBufferPull@charNumber:
  2220                           	opt stack 0
  2221                           
  2222                           ; 2 bytes @ 0x0
  2223  000240                     	ds	2
  2224  000242                     terminal_ringBufferPull@index_1652:
  2225                           	opt stack 0
  2226                           
  2227                           ; 2 bytes @ 0x2
  2228  000242                     	ds	2
  2229  000244                     terminal_ringBufferPull@index:
  2230                           	opt stack 0
  2231                           
  2232                           ; 2 bytes @ 0x4
  2233  000244                     	ds	2
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           postinc0	equ	0xFEE
  2239                           wreg	equ	0xFE8
  2240                           
  2241                           	psect	cstackBANK1
  2242  00018A                     __pcstackBANK1:
  2243                           	opt stack 0
  2244  00018A                     ??__tdiv_to_l_:
  2245  00018A                     ??___ftpack:
  2246  00018A                     ??___ftge:
  2247  00018A                     ?___awdiv:
  2248                           	opt stack 0
  2249  00018A                     ?___lldiv:
  2250                           	opt stack 0
  2251  00018A                     ___awdiv@dividend:
  2252                           	opt stack 0
  2253  00018A                     strncpy@cp:
  2254                           	opt stack 0
  2255  00018A                     __div_to_l_@quot:
  2256                           	opt stack 0
  2257  00018A                     ___lldiv@dividend:
  2258                           	opt stack 0
  2259                           
  2260                           ; 4 bytes @ 0x0
  2261  00018A                     	ds	2
  2262  00018C                     ___awdiv@divisor:
  2263                           	opt stack 0
  2264                           
  2265                           ; 2 bytes @ 0x2
  2266  00018C                     	ds	1
  2267  00018D                     ?___lltoft:
  2268                           	opt stack 0
  2269  00018D                     __tdiv_to_l_@quot:
  2270                           	opt stack 0
  2271  00018D                     ___lltoft@c:
  2272                           	opt stack 0
  2273                           
  2274                           ; 4 bytes @ 0x3
  2275  00018D                     	ds	1
  2276  00018E                     ___awdiv@counter:
  2277                           	opt stack 0
  2278  00018E                     __div_to_l_@cntr:
  2279                           	opt stack 0
  2280  00018E                     ___lldiv@divisor:
  2281                           	opt stack 0
  2282                           
  2283                           ; 4 bytes @ 0x4
  2284  00018E                     	ds	1
  2285  00018F                     ___awdiv@sign:
  2286                           	opt stack 0
  2287  00018F                     __div_to_l_@exp1:
  2288                           	opt stack 0
  2289                           
  2290                           ; 1 bytes @ 0x5
  2291  00018F                     	ds	1
  2292  000190                     ___awdiv@quotient:
  2293                           	opt stack 0
  2294                           
  2295                           ; 2 bytes @ 0x6
  2296  000190                     	ds	1
  2297  000191                     ??___lltoft:
  2298  000191                     __tdiv_to_l_@cntr:
  2299                           	opt stack 0
  2300                           
  2301                           ; 1 bytes @ 0x7
  2302  000191                     	ds	1
  2303  000192                     ?___wmul:
  2304                           	opt stack 0
  2305  000192                     ?___llmod:
  2306                           	opt stack 0
  2307  000192                     __tdiv_to_l_@exp1:
  2308                           	opt stack 0
  2309  000192                     ___wmul@multiplier:
  2310                           	opt stack 0
  2311  000192                     ___llmod@dividend:
  2312                           	opt stack 0
  2313                           
  2314                           ; 4 bytes @ 0x8
  2315  000192                     	ds	2
  2316  000194                     ___wmul@multiplicand:
  2317                           	opt stack 0
  2318                           
  2319                           ; 2 bytes @ 0xA
  2320  000194                     	ds	2
  2321  000196                     ___wmul@product:
  2322                           	opt stack 0
  2323  000196                     ___llmod@divisor:
  2324                           	opt stack 0
  2325                           
  2326                           ; 4 bytes @ 0xC
  2327  000196                     	ds	2
  2328  000198                     ?___ftmul:
  2329                           	opt stack 0
  2330  000198                     ___ftmul@f1:
  2331                           	opt stack 0
  2332                           
  2333                           ; 3 bytes @ 0xE
  2334  000198                     	ds	3
  2335  00019B                     ___ftmul@f2:
  2336                           	opt stack 0
  2337                           
  2338                           ; 3 bytes @ 0x11
  2339  00019B                     	ds	3
  2340  00019E                     ??___ftmul:
  2341                           
  2342                           ; 1 bytes @ 0x14
  2343  00019E                     	ds	3
  2344  0001A1                     ___ftmul@exp:
  2345                           	opt stack 0
  2346                           
  2347                           ; 1 bytes @ 0x17
  2348  0001A1                     	ds	1
  2349  0001A2                     ___ftmul@f3_as_product:
  2350                           	opt stack 0
  2351                           
  2352                           ; 3 bytes @ 0x18
  2353  0001A2                     	ds	3
  2354  0001A5                     ___ftmul@cntr:
  2355                           	opt stack 0
  2356                           
  2357                           ; 1 bytes @ 0x1B
  2358  0001A5                     	ds	1
  2359  0001A6                     ___ftmul@sign:
  2360                           	opt stack 0
  2361                           
  2362                           ; 1 bytes @ 0x1C
  2363  0001A6                     	ds	1
  2364  0001A7                     ?_fround:
  2365                           	opt stack 0
  2366  0001A7                     ?_scale:
  2367                           	opt stack 0
  2368  0001A7                     ?___fttol:
  2369                           	opt stack 0
  2370  0001A7                     ___fttol@f1:
  2371                           	opt stack 0
  2372                           
  2373                           ; 3 bytes @ 0x1D
  2374  0001A7                     	ds	3
  2375  0001AA                     _fround$2620:
  2376                           	opt stack 0
  2377  0001AA                     _scale$2621:
  2378                           	opt stack 0
  2379                           
  2380                           ; 3 bytes @ 0x20
  2381  0001AA                     	ds	1
  2382  0001AB                     ??___fttol:
  2383                           
  2384                           ; 1 bytes @ 0x21
  2385  0001AB                     	ds	2
  2386  0001AD                     scale@scl:
  2387                           	opt stack 0
  2388  0001AD                     _fround$2619:
  2389                           	opt stack 0
  2390                           
  2391                           ; 3 bytes @ 0x23
  2392  0001AD                     	ds	3
  2393  0001B0                     fround@prec:
  2394                           	opt stack 0
  2395  0001B0                     ___fttol@sign1:
  2396                           	opt stack 0
  2397                           
  2398                           ; 1 bytes @ 0x26
  2399  0001B0                     	ds	1
  2400  0001B1                     ?___ftadd:
  2401                           	opt stack 0
  2402  0001B1                     ___ftadd@f1:
  2403                           	opt stack 0
  2404  0001B1                     ___fttol@lval:
  2405                           	opt stack 0
  2406                           
  2407                           ; 4 bytes @ 0x27
  2408  0001B1                     	ds	3
  2409  0001B4                     ___ftadd@f2:
  2410                           	opt stack 0
  2411                           
  2412                           ; 3 bytes @ 0x2A
  2413  0001B4                     	ds	1
  2414  0001B5                     ___fttol@exp1:
  2415                           	opt stack 0
  2416                           
  2417                           ; 1 bytes @ 0x2B
  2418  0001B5                     	ds	2
  2419  0001B7                     ??___ftadd:
  2420                           
  2421                           ; 1 bytes @ 0x2D
  2422  0001B7                     	ds	3
  2423  0001BA                     ___ftadd@sign:
  2424                           	opt stack 0
  2425                           
  2426                           ; 1 bytes @ 0x30
  2427  0001BA                     	ds	1
  2428  0001BB                     ___ftadd@exp2:
  2429                           	opt stack 0
  2430                           
  2431                           ; 1 bytes @ 0x31
  2432  0001BB                     	ds	1
  2433  0001BC                     ___ftadd@exp1:
  2434                           	opt stack 0
  2435                           
  2436                           ; 1 bytes @ 0x32
  2437  0001BC                     	ds	1
  2438  0001BD                     ?___ftsub:
  2439                           	opt stack 0
  2440  0001BD                     ___ftsub@f1:
  2441                           	opt stack 0
  2442                           
  2443                           ; 3 bytes @ 0x33
  2444  0001BD                     	ds	3
  2445  0001C0                     ___ftsub@f2:
  2446                           	opt stack 0
  2447                           
  2448                           ; 3 bytes @ 0x36
  2449  0001C0                     	ds	3
  2450  0001C3                     ?_printf:
  2451                           	opt stack 0
  2452  0001C3                     printf@f:
  2453                           	opt stack 0
  2454                           
  2455                           ; 2 bytes @ 0x39
  2456  0001C3                     	ds	6
  2457  0001C9                     ??_printf:
  2458                           
  2459                           ; 1 bytes @ 0x3F
  2460  0001C9                     	ds	6
  2461  0001CF                     _printf$2622:
  2462                           	opt stack 0
  2463                           
  2464                           ; 3 bytes @ 0x45
  2465  0001CF                     	ds	3
  2466  0001D2                     printf@ap:
  2467                           	opt stack 0
  2468                           
  2469                           ; 2 bytes @ 0x48
  2470  0001D2                     	ds	2
  2471  0001D4                     printf@flag:
  2472                           	opt stack 0
  2473                           
  2474                           ; 2 bytes @ 0x4A
  2475  0001D4                     	ds	2
  2476  0001D6                     printf@prec:
  2477                           	opt stack 0
  2478                           
  2479                           ; 2 bytes @ 0x4C
  2480  0001D6                     	ds	2
  2481  0001D8                     printf@val:
  2482                           	opt stack 0
  2483                           
  2484                           ; 4 bytes @ 0x4E
  2485  0001D8                     	ds	4
  2486  0001DC                     printf@exp:
  2487                           	opt stack 0
  2488                           
  2489                           ; 2 bytes @ 0x52
  2490  0001DC                     	ds	2
  2491  0001DE                     printf@tmpval:
  2492                           	opt stack 0
  2493                           
  2494                           ; 4 bytes @ 0x54
  2495  0001DE                     	ds	4
  2496  0001E2                     printf@fval:
  2497                           	opt stack 0
  2498                           
  2499                           ; 3 bytes @ 0x58
  2500  0001E2                     	ds	3
  2501  0001E5                     printf@c:
  2502                           	opt stack 0
  2503                           
  2504                           ; 1 bytes @ 0x5B
  2505  0001E5                     	ds	1
  2506  0001E6                     terminal_textAttributes@background_color:
  2507                           	opt stack 0
  2508                           
  2509                           ; 1 bytes @ 0x5C
  2510  0001E6                     	ds	1
  2511  0001E7                     terminal_textAttributes@input_attribute:
  2512                           	opt stack 0
  2513                           
  2514                           ; 1 bytes @ 0x5D
  2515  0001E7                     	ds	1
  2516  0001E8                     terminal_textAttributes@foreground_color:
  2517                           	opt stack 0
  2518                           
  2519                           ; 1 bytes @ 0x5E
  2520  0001E8                     	ds	1
  2521  0001E9                     terminal_textAttributes@output_buff:
  2522                           	opt stack 0
  2523                           
  2524                           ; 15 bytes @ 0x5F
  2525  0001E9                     	ds	15
  2526  0001F8                     ringBufferLUT@line:
  2527                           	opt stack 0
  2528                           
  2529                           ; 2 bytes @ 0x6E
  2530  0001F8                     	ds	2
  2531  0001FA                     ??_terminal_ringBufferPull:
  2532                           
  2533                           ; 1 bytes @ 0x70
  2534  0001FA                     	ds	3
  2535  0001FD                     ??_main:
  2536                           
  2537                           ; 1 bytes @ 0x73
  2538  0001FD                     	ds	2
  2539                           tblptru	equ	0xFF8
  2540                           tblptrh	equ	0xFF7
  2541                           tblptrl	equ	0xFF6
  2542                           tablat	equ	0xFF5
  2543                           postinc0	equ	0xFEE
  2544                           wreg	equ	0xFE8
  2545                           
  2546                           	psect	cstackBANK0
  2547  000060                     __pcstackBANK0:
  2548                           	opt stack 0
  2549  000060                     i2_printf$2786:
  2550                           	opt stack 0
  2551                           
  2552                           ; 3 bytes @ 0x0
  2553  000060                     	ds	3
  2554  000063                     i2printf@ap:
  2555                           	opt stack 0
  2556                           
  2557                           ; 2 bytes @ 0x3
  2558  000063                     	ds	2
  2559  000065                     i2printf@flag:
  2560                           	opt stack 0
  2561                           
  2562                           ; 2 bytes @ 0x5
  2563  000065                     	ds	2
  2564  000067                     i2printf@prec:
  2565                           	opt stack 0
  2566                           
  2567                           ; 2 bytes @ 0x7
  2568  000067                     	ds	2
  2569  000069                     i2printf@val:
  2570                           	opt stack 0
  2571                           
  2572                           ; 4 bytes @ 0x9
  2573  000069                     	ds	4
  2574  00006D                     i2printf@exp:
  2575                           	opt stack 0
  2576                           
  2577                           ; 2 bytes @ 0xD
  2578  00006D                     	ds	2
  2579  00006F                     i2printf@tmpval:
  2580                           	opt stack 0
  2581                           
  2582                           ; 4 bytes @ 0xF
  2583  00006F                     	ds	4
  2584  000073                     i2printf@fval:
  2585                           	opt stack 0
  2586                           
  2587                           ; 3 bytes @ 0x13
  2588  000073                     	ds	3
  2589  000076                     i2printf@c:
  2590                           	opt stack 0
  2591                           
  2592                           ; 1 bytes @ 0x16
  2593  000076                     	ds	1
  2594  000077                     ??_INTERRUPT_InterruptManagerHigh:
  2595                           
  2596                           ; 1 bytes @ 0x17
  2597  000077                     	ds	18
  2598  000089                     ??_heartbeatTimerCallback:
  2599  000089                     ADCC_StartConversion@channel:
  2600                           	opt stack 0
  2601  000089                     TMR7_WriteTimer@timerVal:
  2602                           	opt stack 0
  2603                           
  2604                           ; 2 bytes @ 0x29
  2605  000089                     	ds	1
  2606  00008A                     
  2607                           ; 1 bytes @ 0x2A
  2608  00008A                     	ds	1
  2609  00008B                     ??_INTERRUPT_InterruptManagerLow:
  2610  00008B                     
  2611                           ; 1 bytes @ 0x2B
  2612  00008B                     	ds	21
  2613  0000A0                     ?_strlen:
  2614                           	opt stack 0
  2615  0000A0                     ?_strcmp:
  2616                           	opt stack 0
  2617  0000A0                     ?___awmod:
  2618                           	opt stack 0
  2619  0000A0                     ?___ftpack:
  2620                           	opt stack 0
  2621  0000A0                     ?___ftneg:
  2622                           	opt stack 0
  2623  0000A0                     ?__tdiv_to_l_:
  2624                           	opt stack 0
  2625  0000A0                     ?__div_to_l_:
  2626                           	opt stack 0
  2627  0000A0                     EUSART2_Read@readValue:
  2628                           	opt stack 0
  2629  0000A0                     EUSART2_Write@txData:
  2630                           	opt stack 0
  2631  0000A0                     ___awmod@dividend:
  2632                           	opt stack 0
  2633  0000A0                     strcat@to:
  2634                           	opt stack 0
  2635  0000A0                     strcmp@s1:
  2636                           	opt stack 0
  2637  0000A0                     strlen@s:
  2638                           	opt stack 0
  2639  0000A0                     strncpy@to:
  2640                           	opt stack 0
  2641  0000A0                     TMR6_SetInterruptHandler@InterruptHandler:
  2642                           	opt stack 0
  2643  0000A0                     EUSART2_SetTxInterruptHandler@interruptHandler:
  2644                           	opt stack 0
  2645  0000A0                     EUSART2_SetRxInterruptHandler@interruptHandler:
  2646                           	opt stack 0
  2647  0000A0                     ADCC_SetADIInterruptHandler@InterruptHandler:
  2648                           	opt stack 0
  2649  0000A0                     TMR7_SetInterruptHandler@InterruptHandler:
  2650                           	opt stack 0
  2651  0000A0                     __div_to_l_@f1:
  2652                           	opt stack 0
  2653  0000A0                     ___ftpack@arg:
  2654                           	opt stack 0
  2655  0000A0                     __tdiv_to_l_@f1:
  2656                           	opt stack 0
  2657  0000A0                     ___ftge@ff1:
  2658                           	opt stack 0
  2659  0000A0                     ___ftneg@f1:
  2660                           	opt stack 0
  2661  0000A0                     ___lldiv@quotient:
  2662                           	opt stack 0
  2663                           
  2664                           ; 4 bytes @ 0x40
  2665  0000A0                     	ds	1
  2666  0000A1                     putch@txData:
  2667                           	opt stack 0
  2668                           
  2669                           ; 1 bytes @ 0x41
  2670  0000A1                     	ds	1
  2671  0000A2                     ??_strlen:
  2672  0000A2                     ___awmod@divisor:
  2673                           	opt stack 0
  2674  0000A2                     strcat@from:
  2675                           	opt stack 0
  2676  0000A2                     strcmp@s2:
  2677                           	opt stack 0
  2678  0000A2                     strncpy@from:
  2679                           	opt stack 0
  2680                           
  2681                           ; 2 bytes @ 0x42
  2682  0000A2                     	ds	1
  2683  0000A3                     ??_TMR7_Initialize:
  2684  0000A3                     ___ftpack@exp:
  2685                           	opt stack 0
  2686  0000A3                     __div_to_l_@f2:
  2687                           	opt stack 0
  2688  0000A3                     __tdiv_to_l_@f2:
  2689                           	opt stack 0
  2690  0000A3                     ___ftge@ff2:
  2691                           	opt stack 0
  2692                           
  2693                           ; 3 bytes @ 0x43
  2694  0000A3                     	ds	1
  2695  0000A4                     ??_strcmp:
  2696  0000A4                     ___awmod@counter:
  2697                           	opt stack 0
  2698  0000A4                     ___ftpack@sign:
  2699                           	opt stack 0
  2700  0000A4                     ___lldiv@counter:
  2701                           	opt stack 0
  2702  0000A4                     strcat@cp:
  2703                           	opt stack 0
  2704  0000A4                     strlen@cp:
  2705                           	opt stack 0
  2706  0000A4                     strncpy@size:
  2707                           	opt stack 0
  2708                           
  2709                           ; 2 bytes @ 0x44
  2710  0000A4                     	ds	1
  2711  0000A5                     ___awmod@sign:
  2712                           	opt stack 0
  2713  0000A5                     ___llmod@counter:
  2714                           	opt stack 0
  2715  0000A5                     ___lltoft@exp:
  2716                           	opt stack 0
  2717  0000A5                     strcmp@r:
  2718                           	opt stack 0
  2719                           
  2720                           ; 1 bytes @ 0x45
  2721  0000A5                     	ds	1
  2722  0000A6                     tblptru	equ	0xFF8
  2723                           tblptrh	equ	0xFF7
  2724                           tblptrl	equ	0xFF6
  2725                           tablat	equ	0xFF5
  2726                           postinc0	equ	0xFEE
  2727                           wreg	equ	0xFE8
  2728                           
  2729                           ; 1 bytes @ 0x46
  2730                           
  2731                           	psect	cstackCOMRAM
  2732  000001                     __pcstackCOMRAM:
  2733                           	opt stack 0
  2734  000001                     ?_ADCC_GetConversionResult:
  2735                           	opt stack 0
  2736  000001                     ?i2___awmod:
  2737                           	opt stack 0
  2738  000001                     ?i2___ftpack:
  2739                           	opt stack 0
  2740  000001                     ?i2__div_to_l_:
  2741                           	opt stack 0
  2742  000001                     ?i2__tdiv_to_l_:
  2743                           	opt stack 0
  2744  000001                     ?i2___lldiv:
  2745                           	opt stack 0
  2746  000001                     i2EUSART2_Write@txData:
  2747                           	opt stack 0
  2748  000001                     i2___awmod@dividend:
  2749                           	opt stack 0
  2750  000001                     i2__div_to_l_@f1:
  2751                           	opt stack 0
  2752  000001                     i2___ftpack@arg:
  2753                           	opt stack 0
  2754  000001                     i2__tdiv_to_l_@f1:
  2755                           	opt stack 0
  2756  000001                     i2___ftge@ff1:
  2757                           	opt stack 0
  2758  000001                     i2___lldiv@dividend:
  2759                           	opt stack 0
  2760                           
  2761                           ; 4 bytes @ 0x0
  2762  000001                     	ds	1
  2763  000002                     i2putch@txData:
  2764                           	opt stack 0
  2765                           
  2766                           ; 1 bytes @ 0x1
  2767  000002                     	ds	1
  2768  000003                     ??_ADCC_GetConversionResult:
  2769  000003                     i2___awmod@divisor:
  2770                           	opt stack 0
  2771                           
  2772                           ; 2 bytes @ 0x2
  2773  000003                     	ds	1
  2774  000004                     i2___ftpack@exp:
  2775                           	opt stack 0
  2776  000004                     i2__div_to_l_@f2:
  2777                           	opt stack 0
  2778  000004                     i2__tdiv_to_l_@f2:
  2779                           	opt stack 0
  2780  000004                     i2___ftge@ff2:
  2781                           	opt stack 0
  2782                           
  2783                           ; 3 bytes @ 0x3
  2784  000004                     	ds	1
  2785  000005                     i2___awmod@counter:
  2786                           	opt stack 0
  2787  000005                     i2___ftpack@sign:
  2788                           	opt stack 0
  2789  000005                     i2___lldiv@divisor:
  2790                           	opt stack 0
  2791                           
  2792                           ; 4 bytes @ 0x4
  2793  000005                     	ds	1
  2794  000006                     ??i2___ftpack:
  2795  000006                     i2___awmod@sign:
  2796                           	opt stack 0
  2797                           
  2798                           ; 1 bytes @ 0x5
  2799  000006                     	ds	1
  2800  000007                     ??i2__tdiv_to_l_:
  2801  000007                     ??i2___ftge:
  2802  000007                     ?i2___awdiv:
  2803                           	opt stack 0
  2804  000007                     i2___awdiv@dividend:
  2805                           	opt stack 0
  2806  000007                     i2__div_to_l_@quot:
  2807                           	opt stack 0
  2808                           
  2809                           ; 4 bytes @ 0x6
  2810  000007                     	ds	2
  2811  000009                     ?___lwtoft:
  2812                           	opt stack 0
  2813  000009                     ?i2___lltoft:
  2814                           	opt stack 0
  2815  000009                     ___lwtoft@c:
  2816                           	opt stack 0
  2817  000009                     i2___awdiv@divisor:
  2818                           	opt stack 0
  2819  000009                     i2___lldiv@quotient:
  2820                           	opt stack 0
  2821  000009                     i2___lltoft@c:
  2822                           	opt stack 0
  2823                           
  2824                           ; 4 bytes @ 0x8
  2825  000009                     	ds	1
  2826  00000A                     i2__tdiv_to_l_@quot:
  2827                           	opt stack 0
  2828                           
  2829                           ; 4 bytes @ 0x9
  2830  00000A                     	ds	1
  2831  00000B                     i2___awdiv@counter:
  2832                           	opt stack 0
  2833  00000B                     i2__div_to_l_@cntr:
  2834                           	opt stack 0
  2835                           
  2836                           ; 1 bytes @ 0xA
  2837  00000B                     	ds	1
  2838  00000C                     ?___ftdiv:
  2839                           	opt stack 0
  2840  00000C                     i2___awdiv@sign:
  2841                           	opt stack 0
  2842  00000C                     i2__div_to_l_@exp1:
  2843                           	opt stack 0
  2844  00000C                     ___ftdiv@f1:
  2845                           	opt stack 0
  2846                           
  2847                           ; 3 bytes @ 0xB
  2848  00000C                     	ds	1
  2849  00000D                     ??i2___lltoft:
  2850  00000D                     i2___lldiv@counter:
  2851                           	opt stack 0
  2852  00000D                     i2___awdiv@quotient:
  2853                           	opt stack 0
  2854                           
  2855                           ; 2 bytes @ 0xC
  2856  00000D                     	ds	1
  2857  00000E                     ?i2___llmod:
  2858                           	opt stack 0
  2859  00000E                     i2__tdiv_to_l_@cntr:
  2860                           	opt stack 0
  2861  00000E                     i2___llmod@dividend:
  2862                           	opt stack 0
  2863                           
  2864                           ; 4 bytes @ 0xD
  2865  00000E                     	ds	1
  2866  00000F                     ?i2___wmul:
  2867                           	opt stack 0
  2868  00000F                     i2__tdiv_to_l_@exp1:
  2869                           	opt stack 0
  2870  00000F                     i2___wmul@multiplier:
  2871                           	opt stack 0
  2872  00000F                     ___ftdiv@f2:
  2873                           	opt stack 0
  2874                           
  2875                           ; 3 bytes @ 0xE
  2876  00000F                     	ds	2
  2877  000011                     i2___lltoft@exp:
  2878                           	opt stack 0
  2879  000011                     i2___wmul@multiplicand:
  2880                           	opt stack 0
  2881                           
  2882                           ; 2 bytes @ 0x10
  2883  000011                     	ds	1
  2884  000012                     ??___ftdiv:
  2885  000012                     i2___llmod@divisor:
  2886                           	opt stack 0
  2887                           
  2888                           ; 4 bytes @ 0x11
  2889  000012                     	ds	1
  2890  000013                     i2___wmul@product:
  2891                           	opt stack 0
  2892                           
  2893                           ; 2 bytes @ 0x12
  2894  000013                     	ds	2
  2895  000015                     ___ftdiv@cntr:
  2896                           	opt stack 0
  2897                           
  2898                           ; 1 bytes @ 0x14
  2899  000015                     	ds	1
  2900  000016                     i2___llmod@counter:
  2901                           	opt stack 0
  2902  000016                     ___ftdiv@f3:
  2903                           	opt stack 0
  2904                           
  2905                           ; 3 bytes @ 0x15
  2906  000016                     	ds	3
  2907  000019                     ___ftdiv@exp:
  2908                           	opt stack 0
  2909                           
  2910                           ; 1 bytes @ 0x18
  2911  000019                     	ds	1
  2912  00001A                     ___ftdiv@sign:
  2913                           	opt stack 0
  2914                           
  2915                           ; 1 bytes @ 0x19
  2916  00001A                     	ds	1
  2917  00001B                     ?i2___ftneg:
  2918                           	opt stack 0
  2919  00001B                     i2___ftneg@f1:
  2920                           	opt stack 0
  2921                           
  2922                           ; 3 bytes @ 0x1A
  2923  00001B                     	ds	3
  2924  00001E                     ?i2___ftmul:
  2925                           	opt stack 0
  2926  00001E                     i2___ftmul@f1:
  2927                           	opt stack 0
  2928                           
  2929                           ; 3 bytes @ 0x1D
  2930  00001E                     	ds	3
  2931  000021                     i2___ftmul@f2:
  2932                           	opt stack 0
  2933                           
  2934                           ; 3 bytes @ 0x20
  2935  000021                     	ds	3
  2936  000024                     ??i2___ftmul:
  2937                           
  2938                           ; 1 bytes @ 0x23
  2939  000024                     	ds	3
  2940  000027                     i2___ftmul@exp:
  2941                           	opt stack 0
  2942                           
  2943                           ; 1 bytes @ 0x26
  2944  000027                     	ds	1
  2945  000028                     i2___ftmul@f3_as_product:
  2946                           	opt stack 0
  2947                           
  2948                           ; 3 bytes @ 0x27
  2949  000028                     	ds	3
  2950  00002B                     i2___ftmul@cntr:
  2951                           	opt stack 0
  2952                           
  2953                           ; 1 bytes @ 0x2A
  2954  00002B                     	ds	1
  2955  00002C                     i2___ftmul@sign:
  2956                           	opt stack 0
  2957                           
  2958                           ; 1 bytes @ 0x2B
  2959  00002C                     	ds	1
  2960  00002D                     ?i2_fround:
  2961                           	opt stack 0
  2962  00002D                     ?i2_scale:
  2963                           	opt stack 0
  2964  00002D                     ?i2___fttol:
  2965                           	opt stack 0
  2966  00002D                     i2___fttol@f1:
  2967                           	opt stack 0
  2968                           
  2969                           ; 3 bytes @ 0x2C
  2970  00002D                     	ds	3
  2971  000030                     i2_fround$2784:
  2972                           	opt stack 0
  2973  000030                     i2_scale$2785:
  2974                           	opt stack 0
  2975                           
  2976                           ; 3 bytes @ 0x2F
  2977  000030                     	ds	1
  2978  000031                     ??i2___fttol:
  2979                           
  2980                           ; 1 bytes @ 0x30
  2981  000031                     	ds	2
  2982  000033                     i2scale@scl:
  2983                           	opt stack 0
  2984  000033                     i2_fround$2783:
  2985                           	opt stack 0
  2986                           
  2987                           ; 3 bytes @ 0x32
  2988  000033                     	ds	3
  2989  000036                     i2fround@prec:
  2990                           	opt stack 0
  2991  000036                     i2___fttol@sign1:
  2992                           	opt stack 0
  2993                           
  2994                           ; 1 bytes @ 0x35
  2995  000036                     	ds	1
  2996  000037                     ?i2___ftadd:
  2997                           	opt stack 0
  2998  000037                     i2___ftadd@f1:
  2999                           	opt stack 0
  3000  000037                     i2___fttol@lval:
  3001                           	opt stack 0
  3002                           
  3003                           ; 4 bytes @ 0x36
  3004  000037                     	ds	3
  3005  00003A                     i2___ftadd@f2:
  3006                           	opt stack 0
  3007                           
  3008                           ; 3 bytes @ 0x39
  3009  00003A                     	ds	1
  3010  00003B                     i2___fttol@exp1:
  3011                           	opt stack 0
  3012                           
  3013                           ; 1 bytes @ 0x3A
  3014  00003B                     	ds	2
  3015  00003D                     ??i2___ftadd:
  3016                           
  3017                           ; 1 bytes @ 0x3C
  3018  00003D                     	ds	3
  3019  000040                     i2___ftadd@sign:
  3020                           	opt stack 0
  3021                           
  3022                           ; 1 bytes @ 0x3F
  3023  000040                     	ds	1
  3024  000041                     i2___ftadd@exp2:
  3025                           	opt stack 0
  3026                           
  3027                           ; 1 bytes @ 0x40
  3028  000041                     	ds	1
  3029  000042                     i2___ftadd@exp1:
  3030                           	opt stack 0
  3031                           
  3032                           ; 1 bytes @ 0x41
  3033  000042                     	ds	1
  3034  000043                     ?i2___ftsub:
  3035                           	opt stack 0
  3036  000043                     i2___ftsub@f1:
  3037                           	opt stack 0
  3038  000043                     _ADC_postProcessingCallback$2780:
  3039                           	opt stack 0
  3040                           
  3041                           ; 3 bytes @ 0x42
  3042  000043                     	ds	3
  3043  000046                     i2___ftsub@f2:
  3044                           	opt stack 0
  3045  000046                     _ADC_postProcessingCallback$2781:
  3046                           	opt stack 0
  3047                           
  3048                           ; 3 bytes @ 0x45
  3049  000046                     	ds	3
  3050  000049                     ?i2_printf:
  3051                           	opt stack 0
  3052  000049                     i2printf@f:
  3053                           	opt stack 0
  3054  000049                     _ADC_postProcessingCallback$2782:
  3055                           	opt stack 0
  3056                           
  3057                           ; 3 bytes @ 0x48
  3058  000049                     	ds	2
  3059  00004B                     ??i2_printf:
  3060                           
  3061                           ; 1 bytes @ 0x4A
  3062  00004B                     	ds	1
  3063  00004C                     ADC_postProcessingCallback@currentADCChannel:
  3064                           	opt stack 0
  3065                           
  3066                           ; 1 bytes @ 0x4B
  3067  00004C                     	ds	1
  3068  00004D                     _ADC_postProcessingCallback$2779:
  3069                           	opt stack 0
  3070                           
  3071                           ; 3 bytes @ 0x4C
  3072  00004D                     	ds	3
  3073  000050                     
  3074                           ; 1 bytes @ 0x4F
  3075  000050                     	ds	1
  3076  000051                     tblptru	equ	0xFF8
  3077                           tblptrh	equ	0xFF7
  3078                           tblptrl	equ	0xFF6
  3079                           tablat	equ	0xFF5
  3080                           postinc0	equ	0xFEE
  3081                           wreg	equ	0xFE8
  3082                           
  3083                           ; 1 bytes @ 0x50
  3084 ;;
  3085 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3086 ;;
  3087 ;; *************** function _main *****************
  3088 ;; Defined at:
  3089 ;;		line 158 in file "main.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;		None
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3105 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3106 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3107 ;;Total ram usage:        2 bytes
  3108 ;; Hardware stack levels required when called:   18
  3109 ;; This function calls:
  3110 ;;		_ADCC_SetADIInterruptHandler
  3111 ;;		_SYSTEM_Initialize
  3112 ;;		_TMR6_SetInterruptHandler
  3113 ;;		_TMR7_SetInterruptHandler
  3114 ;;		_terminal_clearTerminal
  3115 ;;		_terminal_ringBufferPull
  3116 ;;		_terminal_setCursorHome
  3117 ;;		_terminal_textAttributesReset
  3118 ;; This function is called by:
  3119 ;;		Startup code after reset
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text0
  3124  013D18                     __ptext0:
  3125                           	opt stack 0
  3126  013D18                     _main:
  3127                           	opt stack 13
  3128                           
  3129                           ;main.c: 163: _delay((unsigned long)((250)*(64000000/4000.0)));
  3130                           
  3131                           ;incstack = 0
  3132  013D18  0E15               	movlw	21
  3133  013D1A  0101               	movlb	1	; () banked
  3134  013D1C  6FFE               	movwf	(??_main+1)& (0+255),b
  3135  013D1E  0E4B               	movlw	75
  3136  013D20  6FFD               	movwf	??_main& (0+255),b
  3137  013D22  0EBE               	movlw	190
  3138  013D24                     u8647:
  3139  013D24  2EE8               	decfsz	wreg,f,c
  3140  013D26  D7FE               	bra	u8647
  3141  013D28  2FFD               	decfsz	??_main& (0+255),f,b
  3142  013D2A  D7FC               	bra	u8647
  3143  013D2C  2FFE               	decfsz	(??_main+1)& (0+255),f,b
  3144  013D2E  D7FA               	bra	u8647
  3145  013D30  F000               	nop	
  3146                           
  3147                           ;main.c: 166: SYSTEM_Initialize();
  3148  013D32  EC1E  F0A2         	call	_SYSTEM_Initialize	;wreg free
  3149                           
  3150                           ;main.c: 169: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  3151  013D36  0E96               	movlw	low _heartbeatTimerCallback
  3152  013D38  0100               	movlb	0	; () banked
  3153  013D3A  6FA0               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  3154  013D3C  0E43               	movlw	high _heartbeatTimerCallback
  3155  013D3E  6FA1               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3156  013D40  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  3157  013D42  6FA2               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  3158  013D44  ECEB  F0A2         	call	_TMR6_SetInterruptHandler	;wreg free
  3159                           
  3160                           ;main.c: 172: ADCC_SetADIInterruptHandler(ADC_postProcessingCallback);
  3161  013D48  0EDE               	movlw	low _ADC_postProcessingCallback
  3162  013D4A  0100               	movlb	0	; () banked
  3163  013D4C  6FA0               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  3164  013D4E  0E1E               	movlw	high _ADC_postProcessingCallback
  3165  013D50  6FA1               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  3166  013D52  0E01               	movlw	low (_ADC_postProcessingCallback shr (0+16))
  3167  013D54  6FA2               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  3168  013D56  EC00  F0A3         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3169                           
  3170                           ;main.c: 175: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  3171  013D5A  0E3A               	movlw	low _acquisitionTimerCallback
  3172  013D5C  0100               	movlb	0	; () banked
  3173  013D5E  6FA0               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  3174  013D60  0E42               	movlw	high _acquisitionTimerCallback
  3175  013D62  6FA1               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3176  013D64  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  3177  013D66  6FA2               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  3178  013D68  ECE4  F0A2         	call	_TMR7_SetInterruptHandler	;wreg free
  3179                           
  3180                           ;main.c: 178: (INTCONbits.GIEH = 1);
  3181  013D6C  8EF2               	bsf	intcon,7,c	;volatile
  3182                           
  3183                           ;main.c: 181: (INTCONbits.GIEL = 1);
  3184  013D6E  8CF2               	bsf	intcon,6,c	;volatile
  3185                           
  3186                           ;main.c: 185: terminal_clearTerminal();
  3187  013D70  ECCD  F0A2         	call	_terminal_clearTerminal	;wreg free
  3188                           
  3189                           ;main.c: 186: terminal_setCursorHome();
  3190  013D74  ECBD  F0A2         	call	_terminal_setCursorHome	;wreg free
  3191                           
  3192                           ;main.c: 187: terminal_textAttributesReset();
  3193  013D78  ECB4  F0A2         	call	_terminal_textAttributesReset	;wreg free
  3194  013D7C                     
  3195                           ;main.c: 191: {
  3196                           ;main.c: 194: if (eusart2RxStringReady) {
  3197  013D7C  A05E               	btfss	_eusart2RxStringReady/(0+8),_eusart2RxStringReady& (0+7),c	;volatile
  3198  013D7E  D7FE               	goto	l726
  3199                           
  3200                           ;main.c: 196: terminal_ringBufferPull();
  3201  013D80  EC4A  F096         	call	_terminal_ringBufferPull	;wreg free
  3202  013D84  D7FB               	goto	l726
  3203  013D86                     __end_of_main:
  3204                           	opt stack 0
  3205                           tblptru	equ	0xFF8
  3206                           tblptrh	equ	0xFF7
  3207                           tblptrl	equ	0xFF6
  3208                           tablat	equ	0xFF5
  3209                           intcon	equ	0xFF2
  3210                           postinc0	equ	0xFEE
  3211                           wreg	equ	0xFE8
  3212                           
  3213 ;; *************** function _terminal_setCursorHome *****************
  3214 ;; Defined at:
  3215 ;;		line 85 in file "ring_buffer_interface.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;		None
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;		None
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      void 
  3222 ;; Registers used:
  3223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3233 ;;Total ram usage:        0 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:   14
  3236 ;; This function calls:
  3237 ;;		_printf
  3238 ;; This function is called by:
  3239 ;;		_main
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text1
  3244  01457A                     __ptext1:
  3245                           	opt stack 0
  3246  01457A                     _terminal_setCursorHome:
  3247                           	opt stack 16
  3248                           
  3249                           ;ring_buffer_interface.c: 86: printf("\033[H");
  3250                           
  3251                           ;incstack = 0
  3252  01457A  0EB5               	movlw	low STR_3
  3253  01457C  0101               	movlb	1	; () banked
  3254  01457E  6FC3               	movwf	printf@f& (0+255),b
  3255  014580  0EFF               	movlw	high STR_3
  3256  014582  6FC4               	movwf	(printf@f+1)& (0+255),b
  3257  014584  EC00  F080         	call	_printf	;wreg free
  3258  014588  0012               	return		;funcret
  3259  01458A                     __end_of_terminal_setCursorHome:
  3260                           	opt stack 0
  3261                           tblptru	equ	0xFF8
  3262                           tblptrh	equ	0xFF7
  3263                           tblptrl	equ	0xFF6
  3264                           tablat	equ	0xFF5
  3265                           intcon	equ	0xFF2
  3266                           postinc0	equ	0xFEE
  3267                           wreg	equ	0xFE8
  3268                           
  3269 ;; *************** function _terminal_ringBufferPull *****************
  3270 ;; Defined at:
  3271 ;;		line 12 in file "ring_buffer_interface.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;		None
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  index           2    2[BANK2 ] int 
  3276 ;;  index           2    4[BANK2 ] int 
  3277 ;;  charNumber      2    0[BANK2 ] int 
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  1    wreg      void 
  3280 ;; Registers used:
  3281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3288 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0
  3289 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3290 ;;      Totals:         0       0       3       6       0       0       0       0       0       0       0       0       
      +0       0       0
  3291 ;;Total ram usage:        9 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:   17
  3294 ;; This function calls:
  3295 ;;		_EUSART2_Read
  3296 ;;		_ringBufferLUT
  3297 ;;		_strlen
  3298 ;; This function is called by:
  3299 ;;		_main
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text2
  3304  012C94                     __ptext2:
  3305                           	opt stack 0
  3306  012C94                     _terminal_ringBufferPull:
  3307                           	opt stack 13
  3308                           
  3309                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  3310                           
  3311                           ;incstack = 0
  3312  012C94  C0B7  F240         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  3313  012C98  0102               	movlb	2	; () banked
  3314  012C9A  6B41               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  3315                           
  3316                           ; BSR set to: 2
  3317                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  3318  012C9C  0E00               	movlw	0
  3319  012C9E  6F45               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  3320  012CA0  0E00               	movlw	0
  3321  012CA2  6F44               	movwf	terminal_ringBufferPull@index& (0+255),b
  3322  012CA4                     l6980:
  3323                           
  3324                           ; BSR set to: 2
  3325  012CA4  BF45               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  3326  012CA6  D006               	goto	l765
  3327  012CA8  5145               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  3328  012CAA  E10F               	bnz	l6990
  3329  012CAC  0E40               	movlw	64
  3330  012CAE  5D44               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  3331  012CB0  B0D8               	btfsc	status,0,c
  3332  012CB2  D00B               	goto	u7930
  3333  012CB4                     l765:
  3334                           
  3335                           ; BSR set to: 2
  3336                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  3337                           
  3338                           ; BSR set to: 2
  3339  012CB4  0E4A               	movlw	low _line
  3340  012CB6  2544               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  3341  012CB8  6ED9               	movwf	fsr2l,c
  3342  012CBA  0E01               	movlw	high _line
  3343  012CBC  2145               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  3344  012CBE  6EDA               	movwf	fsr2h,c
  3345  012CC0  0E00               	movlw	0
  3346  012CC2  6EDF               	movwf	indf2,c
  3347                           
  3348                           ; BSR set to: 2
  3349  012CC4  4B44               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  3350  012CC6  2B45               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  3351  012CC8  D7ED               	goto	l6980
  3352  012CCA                     u7930:
  3353  012CCA                     l6990:
  3354                           
  3355                           ; BSR set to: 2
  3356                           ;ring_buffer_interface.c: 21: }
  3357                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  3358  012CCA  0E00               	movlw	0
  3359  012CCC  6F43               	movwf	(terminal_ringBufferPull@index_1652+1)& (0+255),b
  3360  012CCE  0E00               	movlw	0
  3361  012CD0  6F42               	movwf	terminal_ringBufferPull@index_1652& (0+255),b
  3362  012CD2  D00F               	goto	l767
  3363  012CD4                     
  3364                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  3365                           
  3366                           ; BSR set to: 2
  3367  012CD4  ECDA  F0A0         	call	_EUSART2_Read	;wreg free
  3368  012CD8  0101               	movlb	1	; () banked
  3369  012CDA  6FFA               	movwf	??_terminal_ringBufferPull& (0+255),b
  3370  012CDC  0E4A               	movlw	low _line
  3371  012CDE  0102               	movlb	2	; () banked
  3372  012CE0  2542               	addwf	terminal_ringBufferPull@index_1652& (0+255),w,b
  3373  012CE2  6ED9               	movwf	fsr2l,c
  3374  012CE4  0E01               	movlw	high _line
  3375  012CE6  2143               	addwfc	(terminal_ringBufferPull@index_1652+1)& (0+255),w,b
  3376  012CE8  6EDA               	movwf	fsr2h,c
  3377  012CEA  C1FA  FFDF         	movff	??_terminal_ringBufferPull,indf2
  3378                           
  3379                           ; BSR set to: 2
  3380  012CEE  4B42               	infsnz	terminal_ringBufferPull@index_1652& (0+255),f,b
  3381  012CF0  2B43               	incf	(terminal_ringBufferPull@index_1652+1)& (0+255),f,b
  3382  012CF2                     l767:
  3383                           
  3384                           ; BSR set to: 2
  3385                           
  3386                           ; BSR set to: 2
  3387  012CF2  5140               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  3388  012CF4  5D42               	subwf	terminal_ringBufferPull@index_1652& (0+255),w,b
  3389  012CF6  5143               	movf	(terminal_ringBufferPull@index_1652+1)& (0+255),w,b
  3390  012CF8  0A80               	xorlw	128
  3391  012CFA  0101               	movlb	1	; () banked
  3392  012CFC  6FFA               	movwf	??_terminal_ringBufferPull& (0+255),b
  3393  012CFE  0102               	movlb	2	; () banked
  3394  012D00  5141               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  3395  012D02  0A80               	xorlw	128
  3396  012D04  0101               	movlb	1	; () banked
  3397  012D06  59FA               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  3398  012D08  A0D8               	btfss	status,0,c
  3399  012D0A  D7E4               	goto	l768
  3400                           
  3401                           ; BSR set to: 1
  3402                           ;ring_buffer_interface.c: 28: }
  3403                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  3404  012D0C  C05A  F0B8         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  3405                           
  3406                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  3407                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  3408  012D10  D01C               	goto	l770
  3409  012D12                     
  3410                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  3411                           
  3412                           ; BSR set to: 1
  3413  012D12  0EFF               	movlw	255
  3414  012D14  0101               	movlb	1	; () banked
  3415  012D16  6FFA               	movwf	??_terminal_ringBufferPull& (0+255),b
  3416  012D18  0EFF               	movlw	255
  3417  012D1A  6FFB               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  3418  012D1C  0E4A               	movlw	low _line
  3419  012D1E  0100               	movlb	0	; () banked
  3420  012D20  6FA0               	movwf	strlen@s& (0+255),b
  3421  012D22  0E01               	movlw	high _line
  3422  012D24  6FA1               	movwf	(strlen@s+1)& (0+255),b
  3423  012D26  EC5E  F0A1         	call	_strlen	;wreg free
  3424  012D2A  0101               	movlb	1	; () banked
  3425  012D2C  51FA               	movf	??_terminal_ringBufferPull& (0+255),w,b
  3426  012D2E  0100               	movlb	0	; () banked
  3427  012D30  27A0               	addwf	?_strlen& (0+255),f,b
  3428  012D32  0101               	movlb	1	; () banked
  3429  012D34  51FB               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  3430  012D36  0100               	movlb	0	; () banked
  3431  012D38  23A1               	addwfc	(?_strlen+1)& (0+255),f,b
  3432  012D3A  0E4A               	movlw	low _line
  3433  012D3C  25A0               	addwf	?_strlen& (0+255),w,b
  3434  012D3E  6ED9               	movwf	fsr2l,c
  3435  012D40  0E01               	movlw	high _line
  3436  012D42  21A1               	addwfc	(?_strlen+1)& (0+255),w,b
  3437  012D44  6EDA               	movwf	fsr2h,c
  3438  012D46  0E00               	movlw	0
  3439  012D48  6EDF               	movwf	indf2,c
  3440  012D4A                     l770:
  3441  012D4A  0EFF               	movlw	255
  3442  012D4C  0101               	movlb	1	; () banked
  3443  012D4E  6FFA               	movwf	??_terminal_ringBufferPull& (0+255),b
  3444  012D50  0EFF               	movlw	255
  3445  012D52  6FFB               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  3446  012D54  0E4A               	movlw	low _line
  3447  012D56  0100               	movlb	0	; () banked
  3448  012D58  6FA0               	movwf	strlen@s& (0+255),b
  3449  012D5A  0E01               	movlw	high _line
  3450  012D5C  6FA1               	movwf	(strlen@s+1)& (0+255),b
  3451  012D5E  EC5E  F0A1         	call	_strlen	;wreg free
  3452  012D62  0101               	movlb	1	; () banked
  3453  012D64  51FA               	movf	??_terminal_ringBufferPull& (0+255),w,b
  3454  012D66  0100               	movlb	0	; () banked
  3455  012D68  27A0               	addwf	?_strlen& (0+255),f,b
  3456  012D6A  0101               	movlb	1	; () banked
  3457  012D6C  51FB               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  3458  012D6E  0100               	movlb	0	; () banked
  3459  012D70  23A1               	addwfc	(?_strlen+1)& (0+255),f,b
  3460  012D72  0E4A               	movlw	low _line
  3461  012D74  25A0               	addwf	?_strlen& (0+255),w,b
  3462  012D76  6ED9               	movwf	fsr2l,c
  3463  012D78  0E01               	movlw	high _line
  3464  012D7A  21A1               	addwfc	(?_strlen+1)& (0+255),w,b
  3465  012D7C  6EDA               	movwf	fsr2h,c
  3466  012D7E  0E0A               	movlw	10
  3467  012D80  18DE               	xorwf	postinc2,w,c
  3468  012D82  B4D8               	btfsc	status,2,c
  3469  012D84  D7C6               	goto	l771
  3470                           
  3471                           ; BSR set to: 0
  3472  012D86  0EFF               	movlw	255
  3473  012D88  0101               	movlb	1	; () banked
  3474  012D8A  6FFA               	movwf	??_terminal_ringBufferPull& (0+255),b
  3475  012D8C  0EFF               	movlw	255
  3476  012D8E  6FFB               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  3477  012D90  0E4A               	movlw	low _line
  3478  012D92  0100               	movlb	0	; () banked
  3479  012D94  6FA0               	movwf	strlen@s& (0+255),b
  3480  012D96  0E01               	movlw	high _line
  3481  012D98  6FA1               	movwf	(strlen@s+1)& (0+255),b
  3482  012D9A  EC5E  F0A1         	call	_strlen	;wreg free
  3483  012D9E  0101               	movlb	1	; () banked
  3484  012DA0  51FA               	movf	??_terminal_ringBufferPull& (0+255),w,b
  3485  012DA2  0100               	movlb	0	; () banked
  3486  012DA4  27A0               	addwf	?_strlen& (0+255),f,b
  3487  012DA6  0101               	movlb	1	; () banked
  3488  012DA8  51FB               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  3489  012DAA  0100               	movlb	0	; () banked
  3490  012DAC  23A1               	addwfc	(?_strlen+1)& (0+255),f,b
  3491  012DAE  0E4A               	movlw	low _line
  3492  012DB0  25A0               	addwf	?_strlen& (0+255),w,b
  3493  012DB2  6ED9               	movwf	fsr2l,c
  3494  012DB4  0E01               	movlw	high _line
  3495  012DB6  21A1               	addwfc	(?_strlen+1)& (0+255),w,b
  3496  012DB8  6EDA               	movwf	fsr2h,c
  3497  012DBA  0E0D               	movlw	13
  3498  012DBC  18DE               	xorwf	postinc2,w,c
  3499  012DBE  B4D8               	btfsc	status,2,c
  3500  012DC0  D7A8               	goto	l771
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;ring_buffer_interface.c: 40: }
  3504                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  3505  012DC2  905E               	bcf	_eusart2RxStringReady/(0+8),_eusart2RxStringReady& (0+7),c	;volatile
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  3509  012DC4  0E4A               	movlw	low _line
  3510  012DC6  0101               	movlb	1	; () banked
  3511  012DC8  6FF8               	movwf	ringBufferLUT@line& (0+255),b
  3512  012DCA  0E01               	movlw	high _line
  3513  012DCC  6FF9               	movwf	(ringBufferLUT@line+1)& (0+255),b
  3514  012DCE  ECFF  F08B         	call	_ringBufferLUT	;wreg free
  3515  012DD2  0012               	return		;funcret
  3516  012DD4                     __end_of_terminal_ringBufferPull:
  3517                           	opt stack 0
  3518                           tblptru	equ	0xFF8
  3519                           tblptrh	equ	0xFF7
  3520                           tblptrl	equ	0xFF6
  3521                           tablat	equ	0xFF5
  3522                           intcon	equ	0xFF2
  3523                           postinc0	equ	0xFEE
  3524                           wreg	equ	0xFE8
  3525                           indf2	equ	0xFDF
  3526                           postinc2	equ	0xFDE
  3527                           fsr2h	equ	0xFDA
  3528                           fsr2l	equ	0xFD9
  3529                           status	equ	0xFD8
  3530                           
  3531 ;; *************** function _strlen *****************
  3532 ;; Defined at:
  3533 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;  s               2   64[BANK0 ] PTR const unsigned char 
  3536 ;;		 -> line(64), 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  cp              2   68[BANK0 ] PTR const unsigned char 
  3539 ;;		 -> line(64), 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  2   64[BANK0 ] unsigned int 
  3542 ;; Registers used:
  3543 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3549 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3550 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;Total ram usage:        6 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:   10
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_terminal_ringBufferPull
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text3
  3564  0142BC                     __ptext3:
  3565                           	opt stack 0
  3566  0142BC                     _strlen:
  3567                           	opt stack 19
  3568                           
  3569                           ;incstack = 0
  3570  0142BC  C0A0  F0A4         	movff	strlen@s,strlen@cp
  3571  0142C0  C0A1  F0A5         	movff	strlen@s+1,strlen@cp+1
  3572  0142C4  D003               	goto	l1584
  3573  0142C6  0100               	movlb	0	; () banked
  3574  0142C8  4BA4               	infsnz	strlen@cp& (0+255),f,b
  3575  0142CA  2BA5               	incf	(strlen@cp+1)& (0+255),f,b
  3576  0142CC                     l1584:
  3577                           
  3578                           ; BSR set to: 0
  3579  0142CC  C0A4  FFD9         	movff	strlen@cp,fsr2l
  3580  0142D0  C0A5  FFDA         	movff	strlen@cp+1,fsr2h
  3581  0142D4  50DF               	movf	indf2,w,c
  3582  0142D6  A4D8               	btfss	status,2,c
  3583  0142D8  D7F6               	goto	l1585
  3584  0142DA  C0A0  F0A2         	movff	strlen@s,??_strlen
  3585  0142DE  C0A1  F0A3         	movff	strlen@s+1,??_strlen+1
  3586  0142E2  0100               	movlb	0	; () banked
  3587  0142E4  1FA2               	comf	??_strlen& (0+255),f,b
  3588  0142E6  1FA3               	comf	(??_strlen+1)& (0+255),f,b
  3589  0142E8  4BA2               	infsnz	??_strlen& (0+255),f,b
  3590  0142EA  2BA3               	incf	(??_strlen+1)& (0+255),f,b
  3591  0142EC  51A4               	movf	strlen@cp& (0+255),w,b
  3592  0142EE  25A2               	addwf	??_strlen& (0+255),w,b
  3593  0142F0  6FA0               	movwf	?_strlen& (0+255),b
  3594  0142F2  51A5               	movf	(strlen@cp+1)& (0+255),w,b
  3595  0142F4  21A3               	addwfc	(??_strlen+1)& (0+255),w,b
  3596  0142F6  6FA1               	movwf	(?_strlen+1)& (0+255),b
  3597  0142F8  0012               	return	
  3598  0142FA                     __end_of_strlen:
  3599                           	opt stack 0
  3600                           tblptru	equ	0xFF8
  3601                           tblptrh	equ	0xFF7
  3602                           tblptrl	equ	0xFF6
  3603                           tablat	equ	0xFF5
  3604                           intcon	equ	0xFF2
  3605                           postinc0	equ	0xFEE
  3606                           wreg	equ	0xFE8
  3607                           indf2	equ	0xFDF
  3608                           postinc2	equ	0xFDE
  3609                           fsr2h	equ	0xFDA
  3610                           fsr2l	equ	0xFD9
  3611                           status	equ	0xFD8
  3612                           
  3613 ;; *************** function _ringBufferLUT *****************
  3614 ;; Defined at:
  3615 ;;		line 19 in file "ring_buffer_LUT.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  line            2  110[BANK1 ] PTR unsigned char 
  3618 ;;		 -> line(64), 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;		None
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  1    wreg      void 
  3623 ;; Registers used:
  3624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3630 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3633 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3634 ;;Total ram usage:        2 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; Hardware stack levels required when called:   16
  3637 ;; This function calls:
  3638 ;;		_printf
  3639 ;;		_strcmp
  3640 ;;		_terminal_printNewline
  3641 ;;		_terminal_textAttributes
  3642 ;;		_terminal_textAttributesReset
  3643 ;; This function is called by:
  3644 ;;		_terminal_ringBufferPull
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text4
  3649  0117FE                     __ptext4:
  3650                           	opt stack 0
  3651  0117FE                     _ringBufferLUT:
  3652                           	opt stack 13
  3653                           
  3654                           ;ring_buffer_LUT.c: 25: if((0 == strcmp(line, "Reset"))) {
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;incstack = 0
  3658  0117FE  C1F8  F0A0         	movff	ringBufferLUT@line,strcmp@s1
  3659  011802  C1F9  F0A1         	movff	ringBufferLUT@line+1,strcmp@s1+1
  3660  011806  0EA1               	movlw	low STR_41
  3661  011808  0100               	movlb	0	; () banked
  3662  01180A  6FA2               	movwf	strcmp@s2& (0+255),b
  3663  01180C  0EFF               	movlw	high STR_41
  3664  01180E  6FA3               	movwf	(strcmp@s2+1)& (0+255),b
  3665  011810  EC1E  F0A0         	call	_strcmp	;wreg free
  3666  011814  0100               	movlb	0	; () banked
  3667  011816  51A0               	movf	?_strcmp& (0+255),w,b
  3668  011818  11A1               	iorwf	(?_strcmp+1)& (0+255),w,b
  3669  01181A  A4D8               	btfss	status,2,c
  3670  01181C  D010               	goto	l860
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;ring_buffer_LUT.c: 28: printf("\033[2J");
  3674  01181E  0EAC               	movlw	low STR_2
  3675  011820  0101               	movlb	1	; () banked
  3676  011822  6FC3               	movwf	printf@f& (0+255),b
  3677  011824  0EFF               	movlw	high STR_2
  3678  011826  6FC4               	movwf	(printf@f+1)& (0+255),b
  3679  011828  EC00  F080         	call	_printf	;wreg free
  3680                           
  3681                           ;ring_buffer_LUT.c: 31: printf("\033[H");
  3682  01182C  0EB5               	movlw	low STR_3
  3683  01182E  0101               	movlb	1	; () banked
  3684  011830  6FC3               	movwf	printf@f& (0+255),b
  3685  011832  0EFF               	movlw	high STR_3
  3686  011834  6FC4               	movwf	(printf@f+1)& (0+255),b
  3687  011836  EC00  F080         	call	_printf	;wreg free
  3688  01183A  00FF               	reset		;# 
  3689                           
  3690                           ;ring_buffer_LUT.c: 36: }
  3691  01183C  0012               	return	
  3692  01183E                     l860:
  3693                           
  3694                           ;ring_buffer_LUT.c: 39: else if((0 == strcmp(line, "Clear"))) {
  3695  01183E  C1F8  F0A0         	movff	ringBufferLUT@line,strcmp@s1
  3696  011842  C1F9  F0A1         	movff	ringBufferLUT@line+1,strcmp@s1+1
  3697  011846  0E9B               	movlw	low STR_44
  3698  011848  0100               	movlb	0	; () banked
  3699  01184A  6FA2               	movwf	strcmp@s2& (0+255),b
  3700  01184C  0EFF               	movlw	high STR_44
  3701  01184E  6FA3               	movwf	(strcmp@s2+1)& (0+255),b
  3702  011850  EC1E  F0A0         	call	_strcmp	;wreg free
  3703  011854  0100               	movlb	0	; () banked
  3704  011856  51A0               	movf	?_strcmp& (0+255),w,b
  3705  011858  11A1               	iorwf	(?_strcmp+1)& (0+255),w,b
  3706  01185A  A4D8               	btfss	status,2,c
  3707  01185C  D00F               	goto	l862
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;ring_buffer_LUT.c: 42: printf("\033[2J");
  3711  01185E  0EAC               	movlw	low STR_2
  3712  011860  0101               	movlb	1	; () banked
  3713  011862  6FC3               	movwf	printf@f& (0+255),b
  3714  011864  0EFF               	movlw	high STR_2
  3715  011866  6FC4               	movwf	(printf@f+1)& (0+255),b
  3716  011868  EC00  F080         	call	_printf	;wreg free
  3717                           
  3718                           ;ring_buffer_LUT.c: 45: printf("\033[H");
  3719  01186C  0EB5               	movlw	low STR_3
  3720  01186E  0101               	movlb	1	; () banked
  3721  011870  6FC3               	movwf	printf@f& (0+255),b
  3722  011872  0EFF               	movlw	high STR_3
  3723  011874  6FC4               	movwf	(printf@f+1)& (0+255),b
  3724  011876  EC00  F080         	call	_printf	;wreg free
  3725                           
  3726                           ;ring_buffer_LUT.c: 47: }
  3727  01187A  0012               	return	
  3728  01187C                     l862:
  3729                           
  3730                           ;ring_buffer_LUT.c: 50: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  3731  01187C  C1F8  F0A0         	movff	ringBufferLUT@line,strcmp@s1
  3732  011880  C1F9  F0A1         	movff	ringBufferLUT@line+1,strcmp@s1+1
  3733  011884  0E95               	movlw	low STR_47
  3734  011886  0100               	movlb	0	; () banked
  3735  011888  6FA2               	movwf	strcmp@s2& (0+255),b
  3736  01188A  0EFF               	movlw	high STR_47
  3737  01188C  6FA3               	movwf	(strcmp@s2+1)& (0+255),b
  3738  01188E  EC1E  F0A0         	call	_strcmp	;wreg free
  3739  011892  0100               	movlb	0	; () banked
  3740  011894  51A0               	movf	?_strcmp& (0+255),w,b
  3741  011896  11A1               	iorwf	(?_strcmp+1)& (0+255),w,b
  3742  011898  B4D8               	btfsc	status,2,c
  3743  01189A  D00F               	goto	u7790
  3744                           
  3745                           ; BSR set to: 0
  3746  01189C  C1F8  F0A0         	movff	ringBufferLUT@line,strcmp@s1
  3747  0118A0  C1F9  F0A1         	movff	ringBufferLUT@line+1,strcmp@s1+1
  3748  0118A4  0EB1               	movlw	low STR_48
  3749  0118A6  6FA2               	movwf	strcmp@s2& (0+255),b
  3750  0118A8  0EFF               	movlw	high STR_48
  3751  0118AA  6FA3               	movwf	(strcmp@s2+1)& (0+255),b
  3752  0118AC  EC1E  F0A0         	call	_strcmp	;wreg free
  3753  0118B0  0100               	movlb	0	; () banked
  3754  0118B2  51A0               	movf	?_strcmp& (0+255),w,b
  3755  0118B4  11A1               	iorwf	(?_strcmp+1)& (0+255),w,b
  3756  0118B6  A4D8               	btfss	status,2,c
  3757  0118B8  D01D               	goto	l864
  3758  0118BA                     u7790:
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;ring_buffer_LUT.c: 53: terminal_printNewline();
  3762                           
  3763                           ; BSR set to: 0
  3764  0118BA  ECC5  F0A2         	call	_terminal_printNewline	;wreg free
  3765                           
  3766                           ;ring_buffer_LUT.c: 55: terminal_textAttributes(GREEN, BLACK, NORMAL);
  3767  0118BE  0E00               	movlw	0
  3768  0118C0  0101               	movlb	1	; () banked
  3769  0118C2  6FE6               	movwf	terminal_textAttributes@background_color& (0+255),b
  3770  0118C4  0E00               	movlw	0
  3771  0118C6  6FE7               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  3772  0118C8  0E02               	movlw	2
  3773  0118CA  ECBB  F08D         	call	_terminal_textAttributes
  3774                           
  3775                           ;ring_buffer_LUT.c: 57: printf("AC Power Meter\n\r");
  3776  0118CE  0E4F               	movlw	low STR_49
  3777  0118D0  0101               	movlb	1	; () banked
  3778  0118D2  6FC3               	movwf	printf@f& (0+255),b
  3779  0118D4  0EFF               	movlw	high STR_49
  3780  0118D6  6FC4               	movwf	(printf@f+1)& (0+255),b
  3781  0118D8  EC00  F080         	call	_printf	;wreg free
  3782                           
  3783                           ;ring_buffer_LUT.c: 58: printf("Marquette University ELEN 3035 Final Project\n\r");
  3784  0118DC  0E0B               	movlw	low STR_50
  3785  0118DE  0101               	movlb	1	; () banked
  3786  0118E0  6FC3               	movwf	printf@f& (0+255),b
  3787  0118E2  0EFE               	movlw	high STR_50
  3788  0118E4  6FC4               	movwf	(printf@f+1)& (0+255),b
  3789  0118E6  EC00  F080         	call	_printf	;wreg free
  3790                           
  3791                           ;ring_buffer_LUT.c: 60: terminal_textAttributesReset();
  3792  0118EA  ECB4  F0A2         	call	_terminal_textAttributesReset	;wreg free
  3793                           
  3794                           ;ring_buffer_LUT.c: 62: terminal_printNewline();
  3795  0118EE  ECC5  F0A2         	call	_terminal_printNewline	;wreg free
  3796                           
  3797                           ;ring_buffer_LUT.c: 64: }
  3798  0118F2  0012               	return	
  3799  0118F4                     l864:
  3800                           
  3801                           ;ring_buffer_LUT.c: 67: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  3802  0118F4  C1F8  F0A0         	movff	ringBufferLUT@line,strcmp@s1
  3803  0118F8  C1F9  F0A1         	movff	ringBufferLUT@line+1,strcmp@s1+1
  3804  0118FC  0E60               	movlw	low STR_51
  3805  0118FE  0100               	movlb	0	; () banked
  3806  011900  6FA2               	movwf	strcmp@s2& (0+255),b
  3807  011902  0EFF               	movlw	high STR_51
  3808  011904  6FA3               	movwf	(strcmp@s2+1)& (0+255),b
  3809  011906  EC1E  F0A0         	call	_strcmp	;wreg free
  3810  01190A  0100               	movlb	0	; () banked
  3811  01190C  51A0               	movf	?_strcmp& (0+255),w,b
  3812  01190E  11A1               	iorwf	(?_strcmp+1)& (0+255),w,b
  3813  011910  A4D8               	btfss	status,2,c
  3814  011912  D01C               	goto	l868
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;ring_buffer_LUT.c: 70: terminal_printNewline();
  3818  011914  ECC5  F0A2         	call	_terminal_printNewline	;wreg free
  3819                           
  3820                           ;ring_buffer_LUT.c: 72: terminal_textAttributes(CYAN, BLACK, NORMAL);
  3821  011918  0E00               	movlw	0
  3822  01191A  0101               	movlb	1	; () banked
  3823  01191C  6FE6               	movwf	terminal_textAttributes@background_color& (0+255),b
  3824  01191E  0E00               	movlw	0
  3825  011920  6FE7               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  3826  011922  0E06               	movlw	6
  3827  011924  ECBB  F08D         	call	_terminal_textAttributes
  3828                           
  3829                           ;ring_buffer_LUT.c: 73: printf("+3.3V rail measured as +%f Volts\n\r", POS3P3_ADC_Result
      +                          );
  3830  011928  0E62               	movlw	low STR_52
  3831  01192A  0101               	movlb	1	; () banked
  3832  01192C  6FC3               	movwf	printf@f& (0+255),b
  3833  01192E  0EFE               	movlw	high STR_52
  3834  011930  6FC4               	movwf	(printf@f+1)& (0+255),b
  3835  011932  C051  F1C5         	movff	_POS3P3_ADC_Result,?_printf+2
  3836  011936  C052  F1C6         	movff	_POS3P3_ADC_Result+1,?_printf+3
  3837  01193A  C053  F1C7         	movff	_POS3P3_ADC_Result+2,?_printf+4
  3838  01193E  EC00  F080         	call	_printf	;wreg free
  3839                           
  3840                           ;ring_buffer_LUT.c: 75: terminal_textAttributesReset();
  3841  011942  ECB4  F0A2         	call	_terminal_textAttributesReset	;wreg free
  3842                           
  3843                           ;ring_buffer_LUT.c: 77: terminal_printNewline();
  3844  011946  ECC5  F0A2         	call	_terminal_printNewline	;wreg free
  3845                           
  3846                           ;ring_buffer_LUT.c: 80: }
  3847  01194A  0012               	return	
  3848  01194C                     l868:
  3849                           
  3850                           ;ring_buffer_LUT.c: 83: else if((0 == strcmp(line, "Measure POS12?"))) {
  3851  01194C  C1F8  F0A0         	movff	ringBufferLUT@line,strcmp@s1
  3852  011950  C1F9  F0A1         	movff	ringBufferLUT@line+1,strcmp@s1+1
  3853  011954  0E70               	movlw	low STR_53
  3854  011956  0100               	movlb	0	; () banked
  3855  011958  6FA2               	movwf	strcmp@s2& (0+255),b
  3856  01195A  0EFF               	movlw	high STR_53
  3857  01195C  6FA3               	movwf	(strcmp@s2+1)& (0+255),b
  3858  01195E  EC1E  F0A0         	call	_strcmp	;wreg free
  3859  011962  0100               	movlb	0	; () banked
  3860  011964  51A0               	movf	?_strcmp& (0+255),w,b
  3861  011966  11A1               	iorwf	(?_strcmp+1)& (0+255),w,b
  3862  011968  A4D8               	btfss	status,2,c
  3863  01196A  D01C               	goto	l870
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;ring_buffer_LUT.c: 86: terminal_printNewline();
  3867  01196C  ECC5  F0A2         	call	_terminal_printNewline	;wreg free
  3868                           
  3869                           ;ring_buffer_LUT.c: 88: terminal_textAttributes(CYAN, BLACK, NORMAL);
  3870  011970  0E00               	movlw	0
  3871  011972  0101               	movlb	1	; () banked
  3872  011974  6FE6               	movwf	terminal_textAttributes@background_color& (0+255),b
  3873  011976  0E00               	movlw	0
  3874  011978  6FE7               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  3875  01197A  0E06               	movlw	6
  3876  01197C  ECBB  F08D         	call	_terminal_textAttributes
  3877                           
  3878                           ;ring_buffer_LUT.c: 89: printf("+12V rail measured as +%f Volts\n\r", POS12_ADC_Result);
  3879  011980  0EA7               	movlw	low STR_54
  3880  011982  0101               	movlb	1	; () banked
  3881  011984  6FC3               	movwf	printf@f& (0+255),b
  3882  011986  0EFE               	movlw	high STR_54
  3883  011988  6FC4               	movwf	(printf@f+1)& (0+255),b
  3884  01198A  C147  F1C5         	movff	_POS12_ADC_Result,?_printf+2
  3885  01198E  C148  F1C6         	movff	_POS12_ADC_Result+1,?_printf+3
  3886  011992  C149  F1C7         	movff	_POS12_ADC_Result+2,?_printf+4
  3887  011996  EC00  F080         	call	_printf	;wreg free
  3888                           
  3889                           ;ring_buffer_LUT.c: 91: terminal_textAttributesReset();
  3890  01199A  ECB4  F0A2         	call	_terminal_textAttributesReset	;wreg free
  3891                           
  3892                           ;ring_buffer_LUT.c: 93: terminal_printNewline();
  3893  01199E  ECC5  F0A2         	call	_terminal_printNewline	;wreg free
  3894                           
  3895                           ;ring_buffer_LUT.c: 96: }
  3896  0119A2  0012               	return	
  3897  0119A4                     l870:
  3898                           
  3899                           ;ring_buffer_LUT.c: 99: else if((0 == strcmp(line, "Measure Die Temp?"))) {
  3900  0119A4  C1F8  F0A0         	movff	ringBufferLUT@line,strcmp@s1
  3901  0119A8  C1F9  F0A1         	movff	ringBufferLUT@line+1,strcmp@s1+1
  3902  0119AC  0E3D               	movlw	low STR_55
  3903  0119AE  0100               	movlb	0	; () banked
  3904  0119B0  6FA2               	movwf	strcmp@s2& (0+255),b
  3905  0119B2  0EFF               	movlw	high STR_55
  3906  0119B4  6FA3               	movwf	(strcmp@s2+1)& (0+255),b
  3907  0119B6  EC1E  F0A0         	call	_strcmp	;wreg free
  3908  0119BA  0100               	movlb	0	; () banked
  3909  0119BC  51A0               	movf	?_strcmp& (0+255),w,b
  3910  0119BE  11A1               	iorwf	(?_strcmp+1)& (0+255),w,b
  3911  0119C0  A4D8               	btfss	status,2,c
  3912  0119C2  D01C               	goto	l872
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;ring_buffer_LUT.c: 102: terminal_printNewline();
  3916  0119C4  ECC5  F0A2         	call	_terminal_printNewline	;wreg free
  3917                           
  3918                           ;ring_buffer_LUT.c: 104: terminal_textAttributes(CYAN, BLACK, NORMAL);
  3919  0119C8  0E00               	movlw	0
  3920  0119CA  0101               	movlb	1	; () banked
  3921  0119CC  6FE6               	movwf	terminal_textAttributes@background_color& (0+255),b
  3922  0119CE  0E00               	movlw	0
  3923  0119D0  6FE7               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  3924  0119D2  0E06               	movlw	6
  3925  0119D4  ECBB  F08D         	call	_terminal_textAttributes
  3926                           
  3927                           ;ring_buffer_LUT.c: 105: printf("Die Temperature measured as %fC\n\r", Temp_ADC_Result);
  3928  0119D8  0E85               	movlw	low STR_56
  3929  0119DA  0101               	movlb	1	; () banked
  3930  0119DC  6FC3               	movwf	printf@f& (0+255),b
  3931  0119DE  0EFE               	movlw	high STR_56
  3932  0119E0  6FC4               	movwf	(printf@f+1)& (0+255),b
  3933  0119E2  C144  F1C5         	movff	_Temp_ADC_Result,?_printf+2
  3934  0119E6  C145  F1C6         	movff	_Temp_ADC_Result+1,?_printf+3
  3935  0119EA  C146  F1C7         	movff	_Temp_ADC_Result+2,?_printf+4
  3936  0119EE  EC00  F080         	call	_printf	;wreg free
  3937                           
  3938                           ;ring_buffer_LUT.c: 107: terminal_textAttributesReset();
  3939  0119F2  ECB4  F0A2         	call	_terminal_textAttributesReset	;wreg free
  3940                           
  3941                           ;ring_buffer_LUT.c: 109: terminal_printNewline();
  3942  0119F6  ECC5  F0A2         	call	_terminal_printNewline	;wreg free
  3943                           
  3944                           ;ring_buffer_LUT.c: 112: }
  3945  0119FA  0012               	return	
  3946  0119FC                     l872:
  3947                           
  3948                           ;ring_buffer_LUT.c: 115: else if((0 == strcmp(line, "Measure FVR?"))) {
  3949  0119FC  C1F8  F0A0         	movff	ringBufferLUT@line,strcmp@s1
  3950  011A00  C1F9  F0A1         	movff	ringBufferLUT@line+1,strcmp@s1+1
  3951  011A04  0E7F               	movlw	low STR_57
  3952  011A06  0100               	movlb	0	; () banked
  3953  011A08  6FA2               	movwf	strcmp@s2& (0+255),b
  3954  011A0A  0EFF               	movlw	high STR_57
  3955  011A0C  6FA3               	movwf	(strcmp@s2+1)& (0+255),b
  3956  011A0E  EC1E  F0A0         	call	_strcmp	;wreg free
  3957  011A12  0100               	movlb	0	; () banked
  3958  011A14  51A0               	movf	?_strcmp& (0+255),w,b
  3959  011A16  11A1               	iorwf	(?_strcmp+1)& (0+255),w,b
  3960  011A18  A4D8               	btfss	status,2,c
  3961  011A1A  D01C               	goto	l874
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;ring_buffer_LUT.c: 118: terminal_printNewline();
  3965  011A1C  ECC5  F0A2         	call	_terminal_printNewline	;wreg free
  3966                           
  3967                           ;ring_buffer_LUT.c: 120: terminal_textAttributes(CYAN, BLACK, NORMAL);
  3968  011A20  0E00               	movlw	0
  3969  011A22  0101               	movlb	1	; () banked
  3970  011A24  6FE6               	movwf	terminal_textAttributes@background_color& (0+255),b
  3971  011A26  0E00               	movlw	0
  3972  011A28  6FE7               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  3973  011A2A  0E06               	movlw	6
  3974  011A2C  ECBB  F08D         	call	_terminal_textAttributes
  3975                           
  3976                           ;ring_buffer_LUT.c: 121: printf("Fixed Voltage Reference Buffer 1 measured as %f Volts\n
      +                          \r", FVR_ADC_Result);
  3977  011A30  0ED3               	movlw	low STR_58
  3978  011A32  0101               	movlb	1	; () banked
  3979  011A34  6FC3               	movwf	printf@f& (0+255),b
  3980  011A36  0EFD               	movlw	high STR_58
  3981  011A38  6FC4               	movwf	(printf@f+1)& (0+255),b
  3982  011A3A  C05B  F1C5         	movff	_FVR_ADC_Result,?_printf+2
  3983  011A3E  C05C  F1C6         	movff	_FVR_ADC_Result+1,?_printf+3
  3984  011A42  C05D  F1C7         	movff	_FVR_ADC_Result+2,?_printf+4
  3985  011A46  EC00  F080         	call	_printf	;wreg free
  3986                           
  3987                           ;ring_buffer_LUT.c: 123: terminal_textAttributesReset();
  3988  011A4A  ECB4  F0A2         	call	_terminal_textAttributesReset	;wreg free
  3989                           
  3990                           ;ring_buffer_LUT.c: 125: terminal_printNewline();
  3991  011A4E  ECC5  F0A2         	call	_terminal_printNewline	;wreg free
  3992                           
  3993                           ;ring_buffer_LUT.c: 128: }
  3994  011A52  0012               	return	
  3995  011A54                     l874:
  3996                           
  3997                           ;ring_buffer_LUT.c: 131: else if((0 == strcmp(line, "On Time?"))) {
  3998  011A54  C1F8  F0A0         	movff	ringBufferLUT@line,strcmp@s1
  3999  011A58  C1F9  F0A1         	movff	ringBufferLUT@line+1,strcmp@s1+1
  4000  011A5C  0E8C               	movlw	low STR_59
  4001  011A5E  0100               	movlb	0	; () banked
  4002  011A60  6FA2               	movwf	strcmp@s2& (0+255),b
  4003  011A62  0EFF               	movlw	high STR_59
  4004  011A64  6FA3               	movwf	(strcmp@s2+1)& (0+255),b
  4005  011A66  EC1E  F0A0         	call	_strcmp	;wreg free
  4006  011A6A  0100               	movlb	0	; () banked
  4007  011A6C  51A0               	movf	?_strcmp& (0+255),w,b
  4008  011A6E  11A1               	iorwf	(?_strcmp+1)& (0+255),w,b
  4009  011A70  A4D8               	btfss	status,2,c
  4010  011A72  D01E               	goto	l876
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;ring_buffer_LUT.c: 134: terminal_printNewline();
  4014  011A74  ECC5  F0A2         	call	_terminal_printNewline	;wreg free
  4015                           
  4016                           ;ring_buffer_LUT.c: 136: terminal_textAttributes(CYAN, BLACK, NORMAL);
  4017  011A78  0E00               	movlw	0
  4018  011A7A  0101               	movlb	1	; () banked
  4019  011A7C  6FE6               	movwf	terminal_textAttributes@background_color& (0+255),b
  4020  011A7E  0E00               	movlw	0
  4021  011A80  6FE7               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  4022  011A82  0E06               	movlw	6
  4023  011A84  ECBB  F08D         	call	_terminal_textAttributes
  4024                           
  4025                           ;ring_buffer_LUT.c: 137: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", on_time);
  4026  011A88  0E99               	movlw	low STR_60
  4027  011A8A  0101               	movlb	1	; () banked
  4028  011A8C  6FC3               	movwf	printf@f& (0+255),b
  4029  011A8E  0EFD               	movlw	high STR_60
  4030  011A90  6FC4               	movwf	(printf@f+1)& (0+255),b
  4031  011A92  C140  F1C5         	movff	_on_time,?_printf+2
  4032  011A96  C141  F1C6         	movff	_on_time+1,?_printf+3
  4033  011A9A  C142  F1C7         	movff	_on_time+2,?_printf+4
  4034  011A9E  C143  F1C8         	movff	_on_time+3,?_printf+5
  4035  011AA2  EC00  F080         	call	_printf	;wreg free
  4036                           
  4037                           ;ring_buffer_LUT.c: 139: terminal_textAttributesReset();
  4038  011AA6  ECB4  F0A2         	call	_terminal_textAttributesReset	;wreg free
  4039                           
  4040                           ;ring_buffer_LUT.c: 141: terminal_printNewline();
  4041  011AAA  ECC5  F0A2         	call	_terminal_printNewline	;wreg free
  4042                           
  4043                           ;ring_buffer_LUT.c: 144: }
  4044  011AAE  0012               	return	
  4045  011AB0                     l876:
  4046                           
  4047                           ;ring_buffer_LUT.c: 147: else if((0 == strcmp(line, "Help"))) {
  4048  011AB0  C1F8  F0A0         	movff	ringBufferLUT@line,strcmp@s1
  4049  011AB4  C1F9  F0A1         	movff	ringBufferLUT@line+1,strcmp@s1+1
  4050  011AB8  0EA7               	movlw	low STR_61
  4051  011ABA  0100               	movlb	0	; () banked
  4052  011ABC  6FA2               	movwf	strcmp@s2& (0+255),b
  4053  011ABE  0EFF               	movlw	high STR_61
  4054  011AC0  6FA3               	movwf	(strcmp@s2+1)& (0+255),b
  4055  011AC2  EC1E  F0A0         	call	_strcmp	;wreg free
  4056  011AC6  0100               	movlb	0	; () banked
  4057  011AC8  51A0               	movf	?_strcmp& (0+255),w,b
  4058  011ACA  11A1               	iorwf	(?_strcmp+1)& (0+255),w,b
  4059  011ACC  A4D8               	btfss	status,2,c
  4060  011ACE  0012               	return	
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;ring_buffer_LUT.c: 150: terminal_printNewline();
  4064  011AD0  ECC5  F0A2         	call	_terminal_printNewline	;wreg free
  4065                           
  4066                           ;ring_buffer_LUT.c: 152: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  4067  011AD4  0E00               	movlw	0
  4068  011AD6  0101               	movlb	1	; () banked
  4069  011AD8  6FE6               	movwf	terminal_textAttributes@background_color& (0+255),b
  4070  011ADA  0E00               	movlw	0
  4071  011ADC  6FE7               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  4072  011ADE  0E03               	movlw	3
  4073  011AE0  ECBB  F08D         	call	_terminal_textAttributes
  4074                           
  4075                           ;ring_buffer_LUT.c: 153: printf("List of supported commands:\n\r"
  4076                           ;ring_buffer_LUT.c: 154: "   Reset: Clears the terminal and resets the micro\n\r"
  4077                           ;ring_buffer_LUT.c: 155: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
  4078                           ;ring_buffer_LUT.c: 156: "   *IDN?: Returns device identification\n\r"
  4079                           ;ring_buffer_LUT.c: 157: "   Measure POS3P3?: Returns +3.3V ADC Conversion in volts\n\r"
  4080                           ;ring_buffer_LUT.c: 158: "   Measure POS12?: Returns +12V ADC Conversion in volts\n\r"
  4081                           ;ring_buffer_LUT.c: 159: "   Measure Die Temp?: Returns the microcontroller die temperat
      +                          ure in degrees C\n\r"
  4082  011AE4  0EEF               	movlw	low STR_62
  4083  011AE6  0101               	movlb	1	; () banked
  4084  011AE8  6FC3               	movwf	printf@f& (0+255),b
  4085  011AEA  0EF9               	movlw	high STR_62
  4086  011AEC  6FC4               	movwf	(printf@f+1)& (0+255),b
  4087  011AEE  EC00  F080         	call	_printf	;wreg free
  4088                           
  4089                           ;ring_buffer_LUT.c: 165: terminal_printNewline();
  4090  011AF2  ECC5  F0A2         	call	_terminal_printNewline	;wreg free
  4091                           
  4092                           ;ring_buffer_LUT.c: 166: printf("Help messages appear in yellow\n\r");
  4093  011AF6  0EC9               	movlw	low STR_63
  4094  011AF8  0101               	movlb	1	; () banked
  4095  011AFA  6FC3               	movwf	printf@f& (0+255),b
  4096  011AFC  0EFE               	movlw	high STR_63
  4097  011AFE  6FC4               	movwf	(printf@f+1)& (0+255),b
  4098  011B00  EC00  F080         	call	_printf	;wreg free
  4099                           
  4100                           ;ring_buffer_LUT.c: 168: terminal_textAttributes(GREEN, BLACK, NORMAL);
  4101  011B04  0E00               	movlw	0
  4102  011B06  0101               	movlb	1	; () banked
  4103  011B08  6FE6               	movwf	terminal_textAttributes@background_color& (0+255),b
  4104  011B0A  0E00               	movlw	0
  4105  011B0C  6FE7               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  4106  011B0E  0E02               	movlw	2
  4107  011B10  ECBB  F08D         	call	_terminal_textAttributes
  4108                           
  4109                           ;ring_buffer_LUT.c: 169: printf("IDN string appears in green\n\r");
  4110  011B14  0E08               	movlw	low STR_64
  4111  011B16  0101               	movlb	1	; () banked
  4112  011B18  6FC3               	movwf	printf@f& (0+255),b
  4113  011B1A  0EFF               	movlw	high STR_64
  4114  011B1C  6FC4               	movwf	(printf@f+1)& (0+255),b
  4115  011B1E  EC00  F080         	call	_printf	;wreg free
  4116                           
  4117                           ;ring_buffer_LUT.c: 170: terminal_textAttributes(CYAN, BLACK, NORMAL);
  4118  011B22  0E00               	movlw	0
  4119  011B24  0101               	movlb	1	; () banked
  4120  011B26  6FE6               	movwf	terminal_textAttributes@background_color& (0+255),b
  4121  011B28  0E00               	movlw	0
  4122  011B2A  6FE7               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  4123  011B2C  0E06               	movlw	6
  4124  011B2E  ECBB  F08D         	call	_terminal_textAttributes
  4125                           
  4126                           ;ring_buffer_LUT.c: 171: printf("Measurements responses appear in cyan\n\r");
  4127  011B32  0E3A               	movlw	low STR_65
  4128  011B34  0101               	movlb	1	; () banked
  4129  011B36  6FC3               	movwf	printf@f& (0+255),b
  4130  011B38  0EFE               	movlw	high STR_65
  4131  011B3A  6FC4               	movwf	(printf@f+1)& (0+255),b
  4132  011B3C  EC00  F080         	call	_printf	;wreg free
  4133                           
  4134                           ;ring_buffer_LUT.c: 172: terminal_textAttributes(RED, BLACK, NORMAL);
  4135  011B40  0E00               	movlw	0
  4136  011B42  0101               	movlb	1	; () banked
  4137  011B44  6FE6               	movwf	terminal_textAttributes@background_color& (0+255),b
  4138  011B46  0E00               	movlw	0
  4139  011B48  6FE7               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  4140  011B4A  0E01               	movlw	1
  4141  011B4C  ECBB  F08D         	call	_terminal_textAttributes
  4142                           
  4143                           ;ring_buffer_LUT.c: 173: printf("Errors appear in red\n\r");
  4144  011B50  0E26               	movlw	low STR_66
  4145  011B52  0101               	movlb	1	; () banked
  4146  011B54  6FC3               	movwf	printf@f& (0+255),b
  4147  011B56  0EFF               	movlw	high STR_66
  4148  011B58  6FC4               	movwf	(printf@f+1)& (0+255),b
  4149  011B5A  EC00  F080         	call	_printf	;wreg free
  4150                           
  4151                           ;ring_buffer_LUT.c: 174: terminal_textAttributesReset();
  4152  011B5E  ECB4  F0A2         	call	_terminal_textAttributesReset	;wreg free
  4153                           
  4154                           ;ring_buffer_LUT.c: 175: printf("User input appears in white\n\r");
  4155  011B62  0EEA               	movlw	low STR_67
  4156  011B64  0101               	movlb	1	; () banked
  4157  011B66  6FC3               	movwf	printf@f& (0+255),b
  4158  011B68  0EFE               	movlw	high STR_67
  4159  011B6A  6FC4               	movwf	(printf@f+1)& (0+255),b
  4160  011B6C  EC00  F080         	call	_printf	;wreg free
  4161                           
  4162                           ;ring_buffer_LUT.c: 178: terminal_printNewline();
  4163  011B70  ECC5  F0A2         	call	_terminal_printNewline	;wreg free
  4164  011B74  0012               	return	
  4165  011B76                     __end_of_ringBufferLUT:
  4166                           	opt stack 0
  4167                           tblptru	equ	0xFF8
  4168                           tblptrh	equ	0xFF7
  4169                           tblptrl	equ	0xFF6
  4170                           tablat	equ	0xFF5
  4171                           intcon	equ	0xFF2
  4172                           postinc0	equ	0xFEE
  4173                           wreg	equ	0xFE8
  4174                           indf2	equ	0xFDF
  4175                           postinc2	equ	0xFDE
  4176                           fsr2h	equ	0xFDA
  4177                           fsr2l	equ	0xFD9
  4178                           status	equ	0xFD8
  4179                           
  4180 ;; *************** function _terminal_textAttributesReset *****************
  4181 ;; Defined at:
  4182 ;;		line 223 in file "ring_buffer_interface.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;		None
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;		None
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      void 
  4189 ;; Registers used:
  4190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4200 ;;Total ram usage:        0 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:   15
  4203 ;; This function calls:
  4204 ;;		_terminal_textAttributes
  4205 ;; This function is called by:
  4206 ;;		_main
  4207 ;;		_ringBufferLUT
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text5
  4212  014568                     __ptext5:
  4213                           	opt stack 0
  4214  014568                     _terminal_textAttributesReset:
  4215                           	opt stack 15
  4216                           
  4217                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
  4218                           
  4219                           ;incstack = 0
  4220  014568  0E00               	movlw	0
  4221  01456A  0101               	movlb	1	; () banked
  4222  01456C  6FE6               	movwf	terminal_textAttributes@background_color& (0+255),b
  4223  01456E  0E00               	movlw	0
  4224  014570  6FE7               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  4225  014572  0E07               	movlw	7
  4226  014574  ECBB  F08D         	call	_terminal_textAttributes
  4227  014578  0012               	return		;funcret
  4228  01457A                     __end_of_terminal_textAttributesReset:
  4229                           	opt stack 0
  4230                           tblptru	equ	0xFF8
  4231                           tblptrh	equ	0xFF7
  4232                           tblptrl	equ	0xFF6
  4233                           tablat	equ	0xFF5
  4234                           intcon	equ	0xFF2
  4235                           postinc0	equ	0xFEE
  4236                           wreg	equ	0xFE8
  4237                           indf2	equ	0xFDF
  4238                           postinc2	equ	0xFDE
  4239                           fsr2h	equ	0xFDA
  4240                           fsr2l	equ	0xFD9
  4241                           status	equ	0xFD8
  4242                           
  4243 ;; *************** function _terminal_textAttributes *****************
  4244 ;; Defined at:
  4245 ;;		line 115 in file "ring_buffer_interface.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  foreground_c    1    wreg     enum E17812
  4248 ;;  background_c    1   92[BANK1 ] enum E17812
  4249 ;;  input_attrib    1   93[BANK1 ] enum E17804
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;  foreground_c    1   94[BANK1 ] enum E17812
  4252 ;;  output_buff    15   95[BANK1 ] unsigned char [15]
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4262 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4265 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4266 ;;Total ram usage:       18 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:   14
  4269 ;; This function calls:
  4270 ;;		_printf
  4271 ;;		_strcat
  4272 ;;		_strncpy
  4273 ;; This function is called by:
  4274 ;;		_terminal_textAttributesReset
  4275 ;;		_ringBufferLUT
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text6
  4280  011B76                     __ptext6:
  4281                           	opt stack 0
  4282  011B76                     _terminal_textAttributes:
  4283                           	opt stack 15
  4284                           
  4285                           ;incstack = 0
  4286                           ;terminal_textAttributes@foreground_color stored from wreg
  4287  011B76  0101               	movlb	1	; () banked
  4288  011B78  6FE8               	movwf	terminal_textAttributes@foreground_color& (0+255),b
  4289                           
  4290                           ;ring_buffer_interface.c: 119: char output_buff[15];
  4291                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
  4292  011B7A  0EE9               	movlw	low terminal_textAttributes@output_buff
  4293  011B7C  0100               	movlb	0	; () banked
  4294  011B7E  6FA0               	movwf	strncpy@to& (0+255),b
  4295  011B80  0E01               	movlw	high terminal_textAttributes@output_buff
  4296  011B82  6FA1               	movwf	(strncpy@to+1)& (0+255),b
  4297  011B84  0EF5               	movlw	low STR_11
  4298  011B86  6FA2               	movwf	strncpy@from& (0+255),b
  4299  011B88  0EFF               	movlw	high STR_11
  4300  011B8A  6FA3               	movwf	(strncpy@from+1)& (0+255),b
  4301  011B8C  0E00               	movlw	0
  4302  011B8E  6FA5               	movwf	(strncpy@size+1)& (0+255),b
  4303  011B90  0E0F               	movlw	15
  4304  011B92  6FA4               	movwf	strncpy@size& (0+255),b
  4305  011B94  ECC3  F09E         	call	_strncpy	;wreg free
  4306                           
  4307                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
  4308  011B98  D054               	goto	l794
  4309  011B9A                     
  4310                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
  4311  011B9A  0EE9               	movlw	low terminal_textAttributes@output_buff
  4312  011B9C  0100               	movlb	0	; () banked
  4313  011B9E  6FA0               	movwf	strcat@to& (0+255),b
  4314  011BA0  0E01               	movlw	high terminal_textAttributes@output_buff
  4315  011BA2  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4316  011BA4  0EC6               	movlw	low (STR_20+1)
  4317  011BA6  6FA2               	movwf	strcat@from& (0+255),b
  4318  011BA8  0EFF               	movlw	high (STR_20+1)
  4319  011BAA  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4320  011BAC  EC6D  F0A0         	call	_strcat	;wreg free
  4321                           
  4322                           ;ring_buffer_interface.c: 127: break;
  4323  011BB0  D05D               	goto	l796
  4324  011BB2                     
  4325                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
  4326  011BB2  0EE9               	movlw	low terminal_textAttributes@output_buff
  4327  011BB4  0100               	movlb	0	; () banked
  4328  011BB6  6FA0               	movwf	strcat@to& (0+255),b
  4329  011BB8  0E01               	movlw	high terminal_textAttributes@output_buff
  4330  011BBA  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4331  011BBC  0ECC               	movlw	low (STR_21+1)
  4332  011BBE  6FA2               	movwf	strcat@from& (0+255),b
  4333  011BC0  0EFF               	movlw	high (STR_21+1)
  4334  011BC2  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4335  011BC4  EC6D  F0A0         	call	_strcat	;wreg free
  4336                           
  4337                           ;ring_buffer_interface.c: 130: break;
  4338  011BC8  D051               	goto	l796
  4339  011BCA                     
  4340                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
  4341  011BCA  0EE9               	movlw	low terminal_textAttributes@output_buff
  4342  011BCC  0100               	movlb	0	; () banked
  4343  011BCE  6FA0               	movwf	strcat@to& (0+255),b
  4344  011BD0  0E01               	movlw	high terminal_textAttributes@output_buff
  4345  011BD2  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4346  011BD4  0EDE               	movlw	low (STR_24+1)
  4347  011BD6  6FA2               	movwf	strcat@from& (0+255),b
  4348  011BD8  0EFF               	movlw	high (STR_24+1)
  4349  011BDA  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4350  011BDC  EC6D  F0A0         	call	_strcat	;wreg free
  4351                           
  4352                           ;ring_buffer_interface.c: 133: break;
  4353  011BE0  D045               	goto	l796
  4354  011BE2                     
  4355                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
  4356  011BE2  0EE9               	movlw	low terminal_textAttributes@output_buff
  4357  011BE4  0100               	movlb	0	; () banked
  4358  011BE6  6FA0               	movwf	strcat@to& (0+255),b
  4359  011BE8  0E01               	movlw	high terminal_textAttributes@output_buff
  4360  011BEA  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4361  011BEC  0EE4               	movlw	low (STR_25+1)
  4362  011BEE  6FA2               	movwf	strcat@from& (0+255),b
  4363  011BF0  0EFF               	movlw	high (STR_25+1)
  4364  011BF2  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4365  011BF4  EC6D  F0A0         	call	_strcat	;wreg free
  4366                           
  4367                           ;ring_buffer_interface.c: 136: break;
  4368  011BF8  D039               	goto	l796
  4369  011BFA                     
  4370                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
  4371  011BFA  0EE9               	movlw	low terminal_textAttributes@output_buff
  4372  011BFC  0100               	movlb	0	; () banked
  4373  011BFE  6FA0               	movwf	strcat@to& (0+255),b
  4374  011C00  0E01               	movlw	high terminal_textAttributes@output_buff
  4375  011C02  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4376  011C04  0EF0               	movlw	low (STR_27+1)
  4377  011C06  6FA2               	movwf	strcat@from& (0+255),b
  4378  011C08  0EFF               	movlw	high (STR_27+1)
  4379  011C0A  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4380  011C0C  EC6D  F0A0         	call	_strcat	;wreg free
  4381                           
  4382                           ;ring_buffer_interface.c: 139: break;
  4383  011C10  D02D               	goto	l796
  4384  011C12                     
  4385                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
  4386  011C12  0EE9               	movlw	low terminal_textAttributes@output_buff
  4387  011C14  0100               	movlb	0	; () banked
  4388  011C16  6FA0               	movwf	strcat@to& (0+255),b
  4389  011C18  0E01               	movlw	high terminal_textAttributes@output_buff
  4390  011C1A  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4391  011C1C  0EF8               	movlw	low STR_17
  4392  011C1E  6FA2               	movwf	strcat@from& (0+255),b
  4393  011C20  0EFF               	movlw	high STR_17
  4394  011C22  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4395  011C24  EC6D  F0A0         	call	_strcat	;wreg free
  4396                           
  4397                           ;ring_buffer_interface.c: 142: break;
  4398  011C28  D021               	goto	l796
  4399  011C2A                     
  4400                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
  4401  011C2A  0EE9               	movlw	low terminal_textAttributes@output_buff
  4402  011C2C  0100               	movlb	0	; () banked
  4403  011C2E  6FA0               	movwf	strcat@to& (0+255),b
  4404  011C30  0E01               	movlw	high terminal_textAttributes@output_buff
  4405  011C32  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4406  011C34  0EC6               	movlw	low (STR_20+1)
  4407  011C36  6FA2               	movwf	strcat@from& (0+255),b
  4408  011C38  0EFF               	movlw	high (STR_20+1)
  4409  011C3A  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4410  011C3C  EC6D  F0A0         	call	_strcat	;wreg free
  4411                           
  4412                           ;ring_buffer_interface.c: 147: }
  4413                           
  4414                           ;ring_buffer_interface.c: 146: break;
  4415  011C40  D015               	goto	l796
  4416  011C42                     l794:
  4417  011C42  0101               	movlb	1	; () banked
  4418  011C44  51E7               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
  4419                           
  4420                           ; Switch size 1, requested type "space"
  4421                           ; Number of cases is 6, Range of values is 0 to 5
  4422                           ; switch strategies available:
  4423                           ; Name         Instructions Cycles
  4424                           ; simple_byte           19    10 (average)
  4425                           ;	Chosen strategy is simple_byte
  4426  011C46  0A00               	xorlw	0	; case 0
  4427  011C48  B4D8               	btfsc	status,2,c
  4428  011C4A  D7A7               	goto	l795
  4429  011C4C  0A01               	xorlw	1	; case 1
  4430  011C4E  B4D8               	btfsc	status,2,c
  4431  011C50  D7B0               	goto	l797
  4432  011C52  0A03               	xorlw	3	; case 2
  4433  011C54  B4D8               	btfsc	status,2,c
  4434  011C56  D7B9               	goto	l798
  4435  011C58  0A01               	xorlw	1	; case 3
  4436  011C5A  B4D8               	btfsc	status,2,c
  4437  011C5C  D7C2               	goto	l799
  4438  011C5E  0A07               	xorlw	7	; case 4
  4439  011C60  B4D8               	btfsc	status,2,c
  4440  011C62  D7CB               	goto	l800
  4441  011C64  0A01               	xorlw	1	; case 5
  4442  011C66  B4D8               	btfsc	status,2,c
  4443  011C68  D7D4               	goto	l801
  4444  011C6A  D7DF               	goto	l802
  4445  011C6C                     l796:
  4446                           
  4447                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
  4448                           
  4449                           ; BSR set to: 1
  4450  011C6C  0EE9               	movlw	low terminal_textAttributes@output_buff
  4451  011C6E  0100               	movlb	0	; () banked
  4452  011C70  6FA0               	movwf	strcat@to& (0+255),b
  4453  011C72  0E01               	movlw	high terminal_textAttributes@output_buff
  4454  011C74  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4455  011C76  0EFA               	movlw	low STR_19
  4456  011C78  6FA2               	movwf	strcat@from& (0+255),b
  4457  011C7A  0EFF               	movlw	high STR_19
  4458  011C7C  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4459  011C7E  EC6D  F0A0         	call	_strcat	;wreg free
  4460                           
  4461                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
  4462  011C82  D06C               	goto	l803
  4463  011C84                     
  4464                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
  4465  011C84  0EE9               	movlw	low terminal_textAttributes@output_buff
  4466  011C86  0100               	movlb	0	; () banked
  4467  011C88  6FA0               	movwf	strcat@to& (0+255),b
  4468  011C8A  0E01               	movlw	high terminal_textAttributes@output_buff
  4469  011C8C  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4470  011C8E  0EC5               	movlw	low STR_20
  4471  011C90  6FA2               	movwf	strcat@from& (0+255),b
  4472  011C92  0EFF               	movlw	high STR_20
  4473  011C94  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4474  011C96  EC6D  F0A0         	call	_strcat	;wreg free
  4475                           
  4476                           ;ring_buffer_interface.c: 155: break;
  4477  011C9A  D07B               	goto	l805
  4478  011C9C                     
  4479                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
  4480  011C9C  0EE9               	movlw	low terminal_textAttributes@output_buff
  4481  011C9E  0100               	movlb	0	; () banked
  4482  011CA0  6FA0               	movwf	strcat@to& (0+255),b
  4483  011CA2  0E01               	movlw	high terminal_textAttributes@output_buff
  4484  011CA4  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4485  011CA6  0ECB               	movlw	low STR_21
  4486  011CA8  6FA2               	movwf	strcat@from& (0+255),b
  4487  011CAA  0EFF               	movlw	high STR_21
  4488  011CAC  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4489  011CAE  EC6D  F0A0         	call	_strcat	;wreg free
  4490                           
  4491                           ;ring_buffer_interface.c: 158: break;
  4492  011CB2  D06F               	goto	l805
  4493  011CB4                     
  4494                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
  4495  011CB4  0EE9               	movlw	low terminal_textAttributes@output_buff
  4496  011CB6  0100               	movlb	0	; () banked
  4497  011CB8  6FA0               	movwf	strcat@to& (0+255),b
  4498  011CBA  0E01               	movlw	high terminal_textAttributes@output_buff
  4499  011CBC  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4500  011CBE  0ED1               	movlw	low STR_22
  4501  011CC0  6FA2               	movwf	strcat@from& (0+255),b
  4502  011CC2  0EFF               	movlw	high STR_22
  4503  011CC4  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4504  011CC6  EC6D  F0A0         	call	_strcat	;wreg free
  4505                           
  4506                           ;ring_buffer_interface.c: 161: break;
  4507  011CCA  D063               	goto	l805
  4508  011CCC                     
  4509                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
  4510  011CCC  0EE9               	movlw	low terminal_textAttributes@output_buff
  4511  011CCE  0100               	movlb	0	; () banked
  4512  011CD0  6FA0               	movwf	strcat@to& (0+255),b
  4513  011CD2  0E01               	movlw	high terminal_textAttributes@output_buff
  4514  011CD4  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4515  011CD6  0ED7               	movlw	low STR_23
  4516  011CD8  6FA2               	movwf	strcat@from& (0+255),b
  4517  011CDA  0EFF               	movlw	high STR_23
  4518  011CDC  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4519  011CDE  EC6D  F0A0         	call	_strcat	;wreg free
  4520                           
  4521                           ;ring_buffer_interface.c: 164: break;
  4522  011CE2  D057               	goto	l805
  4523  011CE4                     
  4524                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
  4525  011CE4  0EE9               	movlw	low terminal_textAttributes@output_buff
  4526  011CE6  0100               	movlb	0	; () banked
  4527  011CE8  6FA0               	movwf	strcat@to& (0+255),b
  4528  011CEA  0E01               	movlw	high terminal_textAttributes@output_buff
  4529  011CEC  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4530  011CEE  0EDD               	movlw	low STR_24
  4531  011CF0  6FA2               	movwf	strcat@from& (0+255),b
  4532  011CF2  0EFF               	movlw	high STR_24
  4533  011CF4  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4534  011CF6  EC6D  F0A0         	call	_strcat	;wreg free
  4535                           
  4536                           ;ring_buffer_interface.c: 167: break;
  4537  011CFA  D04B               	goto	l805
  4538  011CFC                     
  4539                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
  4540  011CFC  0EE9               	movlw	low terminal_textAttributes@output_buff
  4541  011CFE  0100               	movlb	0	; () banked
  4542  011D00  6FA0               	movwf	strcat@to& (0+255),b
  4543  011D02  0E01               	movlw	high terminal_textAttributes@output_buff
  4544  011D04  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4545  011D06  0EE3               	movlw	low STR_25
  4546  011D08  6FA2               	movwf	strcat@from& (0+255),b
  4547  011D0A  0EFF               	movlw	high STR_25
  4548  011D0C  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4549  011D0E  EC6D  F0A0         	call	_strcat	;wreg free
  4550                           
  4551                           ;ring_buffer_interface.c: 170: break;
  4552  011D12  D03F               	goto	l805
  4553  011D14                     
  4554                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
  4555  011D14  0EE9               	movlw	low terminal_textAttributes@output_buff
  4556  011D16  0100               	movlb	0	; () banked
  4557  011D18  6FA0               	movwf	strcat@to& (0+255),b
  4558  011D1A  0E01               	movlw	high terminal_textAttributes@output_buff
  4559  011D1C  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4560  011D1E  0EE9               	movlw	low STR_26
  4561  011D20  6FA2               	movwf	strcat@from& (0+255),b
  4562  011D22  0EFF               	movlw	high STR_26
  4563  011D24  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4564  011D26  EC6D  F0A0         	call	_strcat	;wreg free
  4565                           
  4566                           ;ring_buffer_interface.c: 173: break;
  4567  011D2A  D033               	goto	l805
  4568  011D2C                     
  4569                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
  4570  011D2C  0EE9               	movlw	low terminal_textAttributes@output_buff
  4571  011D2E  0100               	movlb	0	; () banked
  4572  011D30  6FA0               	movwf	strcat@to& (0+255),b
  4573  011D32  0E01               	movlw	high terminal_textAttributes@output_buff
  4574  011D34  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4575  011D36  0EEF               	movlw	low STR_27
  4576  011D38  6FA2               	movwf	strcat@from& (0+255),b
  4577  011D3A  0EFF               	movlw	high STR_27
  4578  011D3C  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4579  011D3E  EC6D  F0A0         	call	_strcat	;wreg free
  4580                           
  4581                           ;ring_buffer_interface.c: 176: break;
  4582  011D42  D027               	goto	l805
  4583  011D44                     
  4584                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
  4585  011D44  0EE9               	movlw	low terminal_textAttributes@output_buff
  4586  011D46  0100               	movlb	0	; () banked
  4587  011D48  6FA0               	movwf	strcat@to& (0+255),b
  4588  011D4A  0E01               	movlw	high terminal_textAttributes@output_buff
  4589  011D4C  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4590  011D4E  0EEF               	movlw	low STR_27
  4591  011D50  6FA2               	movwf	strcat@from& (0+255),b
  4592  011D52  0EFF               	movlw	high STR_27
  4593  011D54  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4594  011D56  EC6D  F0A0         	call	_strcat	;wreg free
  4595                           
  4596                           ;ring_buffer_interface.c: 181: }
  4597                           
  4598                           ;ring_buffer_interface.c: 180: break;
  4599  011D5A  D01B               	goto	l805
  4600  011D5C                     l803:
  4601  011D5C  0101               	movlb	1	; () banked
  4602  011D5E  51E8               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
  4603                           
  4604                           ; Switch size 1, requested type "space"
  4605                           ; Number of cases is 8, Range of values is 0 to 7
  4606                           ; switch strategies available:
  4607                           ; Name         Instructions Cycles
  4608                           ; simple_byte           25    13 (average)
  4609                           ;	Chosen strategy is simple_byte
  4610  011D60  0A00               	xorlw	0	; case 0
  4611  011D62  B4D8               	btfsc	status,2,c
  4612  011D64  D78F               	goto	l804
  4613  011D66  0A01               	xorlw	1	; case 1
  4614  011D68  B4D8               	btfsc	status,2,c
  4615  011D6A  D798               	goto	l806
  4616  011D6C  0A03               	xorlw	3	; case 2
  4617  011D6E  B4D8               	btfsc	status,2,c
  4618  011D70  D7A1               	goto	l807
  4619  011D72  0A01               	xorlw	1	; case 3
  4620  011D74  B4D8               	btfsc	status,2,c
  4621  011D76  D7AA               	goto	l808
  4622  011D78  0A07               	xorlw	7	; case 4
  4623  011D7A  B4D8               	btfsc	status,2,c
  4624  011D7C  D7B3               	goto	l809
  4625  011D7E  0A01               	xorlw	1	; case 5
  4626  011D80  B4D8               	btfsc	status,2,c
  4627  011D82  D7BC               	goto	l810
  4628  011D84  0A03               	xorlw	3	; case 6
  4629  011D86  B4D8               	btfsc	status,2,c
  4630  011D88  D7C5               	goto	l811
  4631  011D8A  0A01               	xorlw	1	; case 7
  4632  011D8C  B4D8               	btfsc	status,2,c
  4633  011D8E  D7CE               	goto	l812
  4634  011D90  D7D9               	goto	l813
  4635  011D92                     l805:
  4636                           
  4637                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
  4638                           
  4639                           ; BSR set to: 1
  4640  011D92  0EE9               	movlw	low terminal_textAttributes@output_buff
  4641  011D94  0100               	movlb	0	; () banked
  4642  011D96  6FA0               	movwf	strcat@to& (0+255),b
  4643  011D98  0E01               	movlw	high terminal_textAttributes@output_buff
  4644  011D9A  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4645  011D9C  0EFA               	movlw	low STR_19
  4646  011D9E  6FA2               	movwf	strcat@from& (0+255),b
  4647  011DA0  0EFF               	movlw	high STR_19
  4648  011DA2  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4649  011DA4  EC6D  F0A0         	call	_strcat	;wreg free
  4650                           
  4651                           ;ring_buffer_interface.c: 185: switch (background_color) {
  4652  011DA8  D06C               	goto	l814
  4653  011DAA                     
  4654                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
  4655  011DAA  0EE9               	movlw	low terminal_textAttributes@output_buff
  4656  011DAC  0100               	movlb	0	; () banked
  4657  011DAE  6FA0               	movwf	strcat@to& (0+255),b
  4658  011DB0  0E01               	movlw	high terminal_textAttributes@output_buff
  4659  011DB2  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4660  011DB4  0EC8               	movlw	low STR_30
  4661  011DB6  6FA2               	movwf	strcat@from& (0+255),b
  4662  011DB8  0EFF               	movlw	high STR_30
  4663  011DBA  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4664  011DBC  EC6D  F0A0         	call	_strcat	;wreg free
  4665                           
  4666                           ;ring_buffer_interface.c: 189: break;
  4667  011DC0  D07B               	goto	l816
  4668  011DC2                     
  4669                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
  4670  011DC2  0EE9               	movlw	low terminal_textAttributes@output_buff
  4671  011DC4  0100               	movlb	0	; () banked
  4672  011DC6  6FA0               	movwf	strcat@to& (0+255),b
  4673  011DC8  0E01               	movlw	high terminal_textAttributes@output_buff
  4674  011DCA  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4675  011DCC  0ECE               	movlw	low STR_31
  4676  011DCE  6FA2               	movwf	strcat@from& (0+255),b
  4677  011DD0  0EFF               	movlw	high STR_31
  4678  011DD2  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4679  011DD4  EC6D  F0A0         	call	_strcat	;wreg free
  4680                           
  4681                           ;ring_buffer_interface.c: 192: break;
  4682  011DD8  D06F               	goto	l816
  4683  011DDA                     
  4684                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
  4685  011DDA  0EE9               	movlw	low terminal_textAttributes@output_buff
  4686  011DDC  0100               	movlb	0	; () banked
  4687  011DDE  6FA0               	movwf	strcat@to& (0+255),b
  4688  011DE0  0E01               	movlw	high terminal_textAttributes@output_buff
  4689  011DE2  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4690  011DE4  0ED4               	movlw	low STR_32
  4691  011DE6  6FA2               	movwf	strcat@from& (0+255),b
  4692  011DE8  0EFF               	movlw	high STR_32
  4693  011DEA  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4694  011DEC  EC6D  F0A0         	call	_strcat	;wreg free
  4695                           
  4696                           ;ring_buffer_interface.c: 195: break;
  4697  011DF0  D063               	goto	l816
  4698  011DF2                     
  4699                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
  4700  011DF2  0EE9               	movlw	low terminal_textAttributes@output_buff
  4701  011DF4  0100               	movlb	0	; () banked
  4702  011DF6  6FA0               	movwf	strcat@to& (0+255),b
  4703  011DF8  0E01               	movlw	high terminal_textAttributes@output_buff
  4704  011DFA  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4705  011DFC  0EDA               	movlw	low STR_33
  4706  011DFE  6FA2               	movwf	strcat@from& (0+255),b
  4707  011E00  0EFF               	movlw	high STR_33
  4708  011E02  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4709  011E04  EC6D  F0A0         	call	_strcat	;wreg free
  4710                           
  4711                           ;ring_buffer_interface.c: 198: break;
  4712  011E08  D057               	goto	l816
  4713  011E0A                     
  4714                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
  4715  011E0A  0EE9               	movlw	low terminal_textAttributes@output_buff
  4716  011E0C  0100               	movlb	0	; () banked
  4717  011E0E  6FA0               	movwf	strcat@to& (0+255),b
  4718  011E10  0E01               	movlw	high terminal_textAttributes@output_buff
  4719  011E12  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4720  011E14  0EE0               	movlw	low STR_34
  4721  011E16  6FA2               	movwf	strcat@from& (0+255),b
  4722  011E18  0EFF               	movlw	high STR_34
  4723  011E1A  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4724  011E1C  EC6D  F0A0         	call	_strcat	;wreg free
  4725                           
  4726                           ;ring_buffer_interface.c: 201: break;
  4727  011E20  D04B               	goto	l816
  4728  011E22                     
  4729                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
  4730  011E22  0EE9               	movlw	low terminal_textAttributes@output_buff
  4731  011E24  0100               	movlb	0	; () banked
  4732  011E26  6FA0               	movwf	strcat@to& (0+255),b
  4733  011E28  0E01               	movlw	high terminal_textAttributes@output_buff
  4734  011E2A  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4735  011E2C  0EE6               	movlw	low STR_35
  4736  011E2E  6FA2               	movwf	strcat@from& (0+255),b
  4737  011E30  0EFF               	movlw	high STR_35
  4738  011E32  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4739  011E34  EC6D  F0A0         	call	_strcat	;wreg free
  4740                           
  4741                           ;ring_buffer_interface.c: 204: break;
  4742  011E38  D03F               	goto	l816
  4743  011E3A                     
  4744                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
  4745  011E3A  0EE9               	movlw	low terminal_textAttributes@output_buff
  4746  011E3C  0100               	movlb	0	; () banked
  4747  011E3E  6FA0               	movwf	strcat@to& (0+255),b
  4748  011E40  0E01               	movlw	high terminal_textAttributes@output_buff
  4749  011E42  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4750  011E44  0EEC               	movlw	low STR_36
  4751  011E46  6FA2               	movwf	strcat@from& (0+255),b
  4752  011E48  0EFF               	movlw	high STR_36
  4753  011E4A  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4754  011E4C  EC6D  F0A0         	call	_strcat	;wreg free
  4755                           
  4756                           ;ring_buffer_interface.c: 207: break;
  4757  011E50  D033               	goto	l816
  4758  011E52                     
  4759                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
  4760  011E52  0EE9               	movlw	low terminal_textAttributes@output_buff
  4761  011E54  0100               	movlb	0	; () banked
  4762  011E56  6FA0               	movwf	strcat@to& (0+255),b
  4763  011E58  0E01               	movlw	high terminal_textAttributes@output_buff
  4764  011E5A  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4765  011E5C  0EF2               	movlw	low STR_37
  4766  011E5E  6FA2               	movwf	strcat@from& (0+255),b
  4767  011E60  0EFF               	movlw	high STR_37
  4768  011E62  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4769  011E64  EC6D  F0A0         	call	_strcat	;wreg free
  4770                           
  4771                           ;ring_buffer_interface.c: 210: break;
  4772  011E68  D027               	goto	l816
  4773  011E6A                     
  4774                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
  4775  011E6A  0EE9               	movlw	low terminal_textAttributes@output_buff
  4776  011E6C  0100               	movlb	0	; () banked
  4777  011E6E  6FA0               	movwf	strcat@to& (0+255),b
  4778  011E70  0E01               	movlw	high terminal_textAttributes@output_buff
  4779  011E72  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4780  011E74  0EF2               	movlw	low STR_37
  4781  011E76  6FA2               	movwf	strcat@from& (0+255),b
  4782  011E78  0EFF               	movlw	high STR_37
  4783  011E7A  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4784  011E7C  EC6D  F0A0         	call	_strcat	;wreg free
  4785                           
  4786                           ;ring_buffer_interface.c: 215: }
  4787                           
  4788                           ;ring_buffer_interface.c: 214: break;
  4789  011E80  D01B               	goto	l816
  4790  011E82                     l814:
  4791  011E82  0101               	movlb	1	; () banked
  4792  011E84  51E6               	movf	terminal_textAttributes@background_color& (0+255),w,b
  4793                           
  4794                           ; Switch size 1, requested type "space"
  4795                           ; Number of cases is 8, Range of values is 0 to 7
  4796                           ; switch strategies available:
  4797                           ; Name         Instructions Cycles
  4798                           ; simple_byte           25    13 (average)
  4799                           ;	Chosen strategy is simple_byte
  4800  011E86  0A00               	xorlw	0	; case 0
  4801  011E88  B4D8               	btfsc	status,2,c
  4802  011E8A  D78F               	goto	l815
  4803  011E8C  0A01               	xorlw	1	; case 1
  4804  011E8E  B4D8               	btfsc	status,2,c
  4805  011E90  D798               	goto	l817
  4806  011E92  0A03               	xorlw	3	; case 2
  4807  011E94  B4D8               	btfsc	status,2,c
  4808  011E96  D7A1               	goto	l818
  4809  011E98  0A01               	xorlw	1	; case 3
  4810  011E9A  B4D8               	btfsc	status,2,c
  4811  011E9C  D7AA               	goto	l819
  4812  011E9E  0A07               	xorlw	7	; case 4
  4813  011EA0  B4D8               	btfsc	status,2,c
  4814  011EA2  D7B3               	goto	l820
  4815  011EA4  0A01               	xorlw	1	; case 5
  4816  011EA6  B4D8               	btfsc	status,2,c
  4817  011EA8  D7BC               	goto	l821
  4818  011EAA  0A03               	xorlw	3	; case 6
  4819  011EAC  B4D8               	btfsc	status,2,c
  4820  011EAE  D7C5               	goto	l822
  4821  011EB0  0A01               	xorlw	1	; case 7
  4822  011EB2  B4D8               	btfsc	status,2,c
  4823  011EB4  D7CE               	goto	l823
  4824  011EB6  D7D9               	goto	l824
  4825  011EB8                     l816:
  4826                           
  4827                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
  4828                           
  4829                           ; BSR set to: 1
  4830  011EB8  0EE9               	movlw	low terminal_textAttributes@output_buff
  4831  011EBA  0100               	movlb	0	; () banked
  4832  011EBC  6FA0               	movwf	strcat@to& (0+255),b
  4833  011EBE  0E01               	movlw	high terminal_textAttributes@output_buff
  4834  011EC0  6FA1               	movwf	(strcat@to+1)& (0+255),b
  4835  011EC2  0EFC               	movlw	low STR_39
  4836  011EC4  6FA2               	movwf	strcat@from& (0+255),b
  4837  011EC6  0EFF               	movlw	high STR_39
  4838  011EC8  6FA3               	movwf	(strcat@from+1)& (0+255),b
  4839  011ECA  EC6D  F0A0         	call	_strcat	;wreg free
  4840                           
  4841                           ;ring_buffer_interface.c: 219: printf(output_buff);
  4842  011ECE  0EE9               	movlw	low terminal_textAttributes@output_buff
  4843  011ED0  0101               	movlb	1	; () banked
  4844  011ED2  6FC3               	movwf	printf@f& (0+255),b
  4845  011ED4  0E01               	movlw	high terminal_textAttributes@output_buff
  4846  011ED6  6FC4               	movwf	(printf@f+1)& (0+255),b
  4847  011ED8  EC00  F080         	call	_printf	;wreg free
  4848  011EDC  0012               	return		;funcret
  4849  011EDE                     __end_of_terminal_textAttributes:
  4850                           	opt stack 0
  4851                           tblptru	equ	0xFF8
  4852                           tblptrh	equ	0xFF7
  4853                           tblptrl	equ	0xFF6
  4854                           tablat	equ	0xFF5
  4855                           intcon	equ	0xFF2
  4856                           postinc0	equ	0xFEE
  4857                           wreg	equ	0xFE8
  4858                           indf2	equ	0xFDF
  4859                           postinc2	equ	0xFDE
  4860                           fsr2h	equ	0xFDA
  4861                           fsr2l	equ	0xFD9
  4862                           status	equ	0xFD8
  4863                           
  4864 ;; *************** function _strncpy *****************
  4865 ;; Defined at:
  4866 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  to              2   64[BANK0 ] PTR unsigned char 
  4869 ;;		 -> terminal_textAttributes@output_buff(15), 
  4870 ;;  from            2   66[BANK0 ] PTR const unsigned char 
  4871 ;;		 -> STR_11(3), 
  4872 ;;  size            2   68[BANK0 ] unsigned int 
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;  cp              2    0[BANK1 ] PTR unsigned char 
  4875 ;;		 -> terminal_textAttributes@output_buff(15), 
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  2   64[BANK0 ] PTR unsigned char 
  4878 ;; Registers used:
  4879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/0
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4885 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4886 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4888 ;;      Totals:         0       6       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4889 ;;Total ram usage:        8 bytes
  4890 ;; Hardware stack levels used:    1
  4891 ;; Hardware stack levels required when called:   10
  4892 ;; This function calls:
  4893 ;;		Nothing
  4894 ;; This function is called by:
  4895 ;;		_terminal_textAttributes
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           	psect	text7
  4900  013D86                     __ptext7:
  4901                           	opt stack 0
  4902  013D86                     _strncpy:
  4903                           	opt stack 18
  4904                           
  4905                           ;incstack = 0
  4906  013D86  C0A0  F18A         	movff	strncpy@to,strncpy@cp
  4907  013D8A  C0A1  F18B         	movff	strncpy@to+1,strncpy@cp+1
  4908  013D8E  D019               	goto	l1592
  4909  013D90  0100               	movlb	0	; () banked
  4910  013D92  07A4               	decf	strncpy@size& (0+255),f,b
  4911  013D94  A0D8               	btfss	status,0,c
  4912  013D96  07A5               	decf	(strncpy@size+1)& (0+255),f,b
  4913                           
  4914                           ; BSR set to: 0
  4915  013D98  C0A2  FFF6         	movff	strncpy@from,tblptrl
  4916  013D9C  C0A3  FFF7         	movff	strncpy@from+1,tblptrh
  4917  013DA0  4BA2               	infsnz	strncpy@from& (0+255),f,b
  4918  013DA2  2BA3               	incf	(strncpy@from+1)& (0+255),f,b
  4919  013DA4                     	if	0	;tblptru may be non-zero
  4920  013DA4                     	endif
  4921  013DA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4922  013DA4  0E00               	movlw	low (__mediumconst shr (0+16))
  4923  013DA6  6EF8               	movwf	tblptru,c
  4924  013DA8                     	endif
  4925  013DA8  C18A  FFD9         	movff	strncpy@cp,fsr2l
  4926  013DAC  C18B  FFDA         	movff	strncpy@cp+1,fsr2h
  4927  013DB0  0101               	movlb	1	; () banked
  4928  013DB2  4B8A               	infsnz	strncpy@cp& (0+255),f,b
  4929  013DB4  2B8B               	incf	(strncpy@cp+1)& (0+255),f,b
  4930  013DB6  0008               	tblrd		*
  4931  013DB8  CFF5 FFDF          	movff	tablat,indf2
  4932  013DBC  50DF               	movf	indf2,w,c
  4933  013DBE  B4D8               	btfsc	status,2,c
  4934  013DC0  D00F               	goto	l1594
  4935  013DC2                     l1592:
  4936                           
  4937                           ; BSR set to: 1
  4938                           
  4939                           ; BSR set to: 1
  4940  013DC2  0100               	movlb	0	; () banked
  4941  013DC4  51A4               	movf	strncpy@size& (0+255),w,b
  4942  013DC6  11A5               	iorwf	(strncpy@size+1)& (0+255),w,b
  4943  013DC8  B4D8               	btfsc	status,2,c
  4944  013DCA  D00A               	goto	l1594
  4945  013DCC  D7E1               	goto	l1591
  4946  013DCE                     l6778:
  4947                           
  4948                           ; BSR set to: 0
  4949  013DCE  C18A  FFD9         	movff	strncpy@cp,fsr2l
  4950  013DD2  C18B  FFDA         	movff	strncpy@cp+1,fsr2h
  4951  013DD6  0E00               	movlw	0
  4952  013DD8  6EDF               	movwf	indf2,c
  4953                           
  4954                           ; BSR set to: 0
  4955  013DDA  0101               	movlb	1	; () banked
  4956  013DDC  4B8A               	infsnz	strncpy@cp& (0+255),f,b
  4957  013DDE  2B8B               	incf	(strncpy@cp+1)& (0+255),f,b
  4958  013DE0                     l1594:
  4959                           
  4960                           ; BSR set to: 1
  4961  013DE0  0100               	movlb	0	; () banked
  4962  013DE2  07A4               	decf	strncpy@size& (0+255),f,b
  4963  013DE4  A0D8               	btfss	status,0,c
  4964  013DE6  07A5               	decf	(strncpy@size+1)& (0+255),f,b
  4965  013DE8  29A4               	incf	strncpy@size& (0+255),w,b
  4966  013DEA  E1F1               	bnz	l6778
  4967  013DEC  29A5               	incf	(strncpy@size+1)& (0+255),w,b
  4968  013DEE  B4D8               	btfsc	status,2,c
  4969  013DF0  0012               	return	
  4970  013DF2  D7ED               	goto	l1595
  4971  013DF4                     __end_of_strncpy:
  4972                           	opt stack 0
  4973                           tblptru	equ	0xFF8
  4974                           tblptrh	equ	0xFF7
  4975                           tblptrl	equ	0xFF6
  4976                           tablat	equ	0xFF5
  4977                           intcon	equ	0xFF2
  4978                           postinc0	equ	0xFEE
  4979                           wreg	equ	0xFE8
  4980                           indf2	equ	0xFDF
  4981                           postinc2	equ	0xFDE
  4982                           fsr2h	equ	0xFDA
  4983                           fsr2l	equ	0xFD9
  4984                           status	equ	0xFD8
  4985                           
  4986 ;; *************** function _strcat *****************
  4987 ;; Defined at:
  4988 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;  to              2   64[BANK0 ] PTR unsigned char 
  4991 ;;		 -> terminal_textAttributes@output_buff(15), 
  4992 ;;  from            2   66[BANK0 ] PTR const unsigned char 
  4993 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
  4994 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
  4995 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
  4996 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
  4997 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
  4998 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  4999 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;  cp              2   68[BANK0 ] PTR unsigned char 
  5002 ;;		 -> terminal_textAttributes@output_buff(15), 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  2   64[BANK0 ] PTR unsigned char 
  5005 ;; Registers used:
  5006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5012 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5013 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5015 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5016 ;;Total ram usage:        6 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:   10
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_terminal_textAttributes
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text8
  5027  0140DA                     __ptext8:
  5028                           	opt stack 0
  5029  0140DA                     _strcat:
  5030                           	opt stack 18
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;incstack = 0
  5034  0140DA  C0A0  F0A4         	movff	strcat@to,strcat@cp
  5035  0140DE  C0A1  F0A5         	movff	strcat@to+1,strcat@cp+1
  5036  0140E2  D003               	goto	l1567
  5037  0140E4  0100               	movlb	0	; () banked
  5038  0140E6  4BA4               	infsnz	strcat@cp& (0+255),f,b
  5039  0140E8  2BA5               	incf	(strcat@cp+1)& (0+255),f,b
  5040  0140EA                     l1567:
  5041                           
  5042                           ; BSR set to: 0
  5043  0140EA  C0A4  FFD9         	movff	strcat@cp,fsr2l
  5044  0140EE  C0A5  FFDA         	movff	strcat@cp+1,fsr2h
  5045  0140F2  50DF               	movf	indf2,w,c
  5046  0140F4  B4D8               	btfsc	status,2,c
  5047  0140F6  D006               	goto	l1570
  5048  0140F8  D7F5               	goto	l1568
  5049  0140FA  0100               	movlb	0	; () banked
  5050  0140FC  4BA4               	infsnz	strcat@cp& (0+255),f,b
  5051  0140FE  2BA5               	incf	(strcat@cp+1)& (0+255),f,b
  5052  014100  4BA2               	infsnz	strcat@from& (0+255),f,b
  5053  014102  2BA3               	incf	(strcat@from+1)& (0+255),f,b
  5054  014104                     l1570:
  5055                           
  5056                           ; BSR set to: 0
  5057  014104  C0A2  FFF6         	movff	strcat@from,tblptrl
  5058  014108  C0A3  FFF7         	movff	strcat@from+1,tblptrh
  5059  01410C                     	if	0	;tblptru may be non-zero
  5060  01410C                     	endif
  5061  01410C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5062  01410C  0E00               	movlw	low (__mediumconst shr (0+16))
  5063  01410E  6EF8               	movwf	tblptru,c
  5064  014110                     	endif
  5065  014110  C0A4  FFD9         	movff	strcat@cp,fsr2l
  5066  014114  C0A5  FFDA         	movff	strcat@cp+1,fsr2h
  5067  014118  0008               	tblrd		*
  5068  01411A  CFF5 FFDF          	movff	tablat,indf2
  5069  01411E  50DF               	movf	indf2,w,c
  5070  014120  B4D8               	btfsc	status,2,c
  5071  014122  0012               	return	
  5072  014124  D7EA               	goto	l1571
  5073  014126                     __end_of_strcat:
  5074                           	opt stack 0
  5075                           tblptru	equ	0xFF8
  5076                           tblptrh	equ	0xFF7
  5077                           tblptrl	equ	0xFF6
  5078                           tablat	equ	0xFF5
  5079                           intcon	equ	0xFF2
  5080                           postinc0	equ	0xFEE
  5081                           wreg	equ	0xFE8
  5082                           indf2	equ	0xFDF
  5083                           postinc2	equ	0xFDE
  5084                           fsr2h	equ	0xFDA
  5085                           fsr2l	equ	0xFD9
  5086                           status	equ	0xFD8
  5087                           
  5088 ;; *************** function _terminal_printNewline *****************
  5089 ;; Defined at:
  5090 ;;		line 230 in file "ring_buffer_interface.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;		None
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;		None
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  1    wreg      void 
  5097 ;; Registers used:
  5098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5108 ;;Total ram usage:        0 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:   14
  5111 ;; This function calls:
  5112 ;;		_printf
  5113 ;; This function is called by:
  5114 ;;		_ringBufferLUT
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           	psect	text9
  5119  01458A                     __ptext9:
  5120                           	opt stack 0
  5121  01458A                     _terminal_printNewline:
  5122                           	opt stack 14
  5123                           
  5124                           ;ring_buffer_interface.c: 232: printf("\n\r");
  5125                           
  5126                           ;incstack = 0
  5127  01458A  0EA4               	movlw	low (STR_56+31)
  5128  01458C  0101               	movlb	1	; () banked
  5129  01458E  6FC3               	movwf	printf@f& (0+255),b
  5130  014590  0EFE               	movlw	high (STR_56+31)
  5131  014592  6FC4               	movwf	(printf@f+1)& (0+255),b
  5132  014594  EC00  F080         	call	_printf	;wreg free
  5133  014598  0012               	return		;funcret
  5134  01459A                     __end_of_terminal_printNewline:
  5135                           	opt stack 0
  5136                           tblptru	equ	0xFF8
  5137                           tblptrh	equ	0xFF7
  5138                           tblptrl	equ	0xFF6
  5139                           tablat	equ	0xFF5
  5140                           intcon	equ	0xFF2
  5141                           postinc0	equ	0xFEE
  5142                           wreg	equ	0xFE8
  5143                           indf2	equ	0xFDF
  5144                           postinc2	equ	0xFDE
  5145                           fsr2h	equ	0xFDA
  5146                           fsr2l	equ	0xFD9
  5147                           status	equ	0xFD8
  5148                           
  5149 ;; *************** function _strcmp *****************
  5150 ;; Defined at:
  5151 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  s1              2   64[BANK0 ] PTR const unsigned char 
  5154 ;;		 -> line(64), 
  5155 ;;  s2              2   66[BANK0 ] PTR const unsigned char 
  5156 ;;		 -> STR_61(5), STR_59(9), STR_57(13), STR_55(18), 
  5157 ;;		 -> STR_53(15), STR_51(16), STR_48(4), STR_47(6), 
  5158 ;;		 -> STR_44(6), STR_41(6), 
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;  r               1   69[BANK0 ] char 
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  2   64[BANK0 ] int 
  5163 ;; Registers used:
  5164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5170 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5171 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5172 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5173 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5174 ;;Total ram usage:        6 bytes
  5175 ;; Hardware stack levels used:    1
  5176 ;; Hardware stack levels required when called:   10
  5177 ;; This function calls:
  5178 ;;		Nothing
  5179 ;; This function is called by:
  5180 ;;		_ringBufferLUT
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           	psect	text10
  5185  01403C                     __ptext10:
  5186                           	opt stack 0
  5187  01403C                     _strcmp:
  5188                           	opt stack 18
  5189                           
  5190                           ;incstack = 0
  5191  01403C  D005               	goto	l1576
  5192  01403E  0100               	movlb	0	; () banked
  5193  014040  4BA0               	infsnz	strcmp@s1& (0+255),f,b
  5194  014042  2BA1               	incf	(strcmp@s1+1)& (0+255),f,b
  5195  014044  4BA2               	infsnz	strcmp@s2& (0+255),f,b
  5196  014046  2BA3               	incf	(strcmp@s2+1)& (0+255),f,b
  5197  014048                     l1576:
  5198                           
  5199                           ; BSR set to: 0
  5200  014048  C0A0  FFD9         	movff	strcmp@s1,fsr2l
  5201  01404C  C0A1  FFDA         	movff	strcmp@s1+1,fsr2h
  5202  014050  50DF               	movf	indf2,w,c
  5203  014052  0100               	movlb	0	; () banked
  5204  014054  6FA4               	movwf	??_strcmp& (0+255),b
  5205  014056  C0A2  FFF6         	movff	strcmp@s2,tblptrl
  5206  01405A  C0A3  FFF7         	movff	strcmp@s2+1,tblptrh
  5207  01405E                     	if	0	;tblptru may be non-zero
  5208  01405E                     	endif
  5209  01405E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5210  01405E  0E00               	movlw	low (__mediumconst shr (0+16))
  5211  014060  6EF8               	movwf	tblptru,c
  5212  014062                     	endif
  5213  014062  0008               	tblrd		*
  5214  014064  50F5               	movf	tablat,w,c
  5215  014066  0800               	sublw	0
  5216  014068  25A4               	addwf	??_strcmp& (0+255),w,b
  5217  01406A  6FA5               	movwf	strcmp@r& (0+255),b
  5218  01406C  51A5               	movf	strcmp@r& (0+255),w,b
  5219  01406E  A4D8               	btfss	status,2,c
  5220  014070  D007               	goto	u7720
  5221                           
  5222                           ; BSR set to: 0
  5223  014072  C0A0  FFD9         	movff	strcmp@s1,fsr2l
  5224  014076  C0A1  FFDA         	movff	strcmp@s1+1,fsr2h
  5225  01407A  50DF               	movf	indf2,w,c
  5226  01407C  A4D8               	btfss	status,2,c
  5227  01407E  D7DF               	goto	l1577
  5228  014080                     u7720:
  5229                           
  5230                           ; BSR set to: 0
  5231                           
  5232                           ; BSR set to: 0
  5233                           
  5234                           ; BSR set to: 0
  5235  014080  51A5               	movf	strcmp@r& (0+255),w,b
  5236  014082  6FA0               	movwf	?_strcmp& (0+255),b
  5237  014084  6BA1               	clrf	(?_strcmp+1)& (0+255),b
  5238  014086  BFA0               	btfsc	?_strcmp& (0+255),7,b
  5239  014088  07A1               	decf	(?_strcmp+1)& (0+255),f,b
  5240  01408A  0012               	return	
  5241  01408C                     __end_of_strcmp:
  5242                           	opt stack 0
  5243                           tblptru	equ	0xFF8
  5244                           tblptrh	equ	0xFF7
  5245                           tblptrl	equ	0xFF6
  5246                           tablat	equ	0xFF5
  5247                           intcon	equ	0xFF2
  5248                           postinc0	equ	0xFEE
  5249                           wreg	equ	0xFE8
  5250                           indf2	equ	0xFDF
  5251                           postinc2	equ	0xFDE
  5252                           fsr2h	equ	0xFDA
  5253                           fsr2l	equ	0xFD9
  5254                           status	equ	0xFD8
  5255                           
  5256 ;; *************** function _EUSART2_Read *****************
  5257 ;; Defined at:
  5258 ;;		line 130 in file "mcc_generated_files/eusart2.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;		None
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;  readValue       1   64[BANK0 ] unsigned char 
  5263 ;; Return value:  Size  Location     Type
  5264 ;;                  1    wreg      unsigned char 
  5265 ;; Registers used:
  5266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5273 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5275 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5276 ;;Total ram usage:        1 bytes
  5277 ;; Hardware stack levels used:    1
  5278 ;; Hardware stack levels required when called:   10
  5279 ;; This function calls:
  5280 ;;		Nothing
  5281 ;; This function is called by:
  5282 ;;		_terminal_ringBufferPull
  5283 ;;		_getch
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           	psect	text11
  5288  0141B4                     __ptext11:
  5289                           	opt stack 0
  5290  0141B4                     _EUSART2_Read:
  5291                           	opt stack 19
  5292                           
  5293                           ;eusart2.c: 132: uint8_t readValue = 0;
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;incstack = 0
  5297  0141B4  0E00               	movlw	0
  5298  0141B6  0100               	movlb	0	; () banked
  5299  0141B8  6FA0               	movwf	EUSART2_Read@readValue& (0+255),b
  5300                           
  5301                           ;eusart2.c: 134: while(0 == eusart2RxCount)
  5302  0141BA  D001               	goto	l361
  5303  0141BC                     l362:
  5304                           
  5305                           ; BSR set to: 0
  5306  0141BC  0004               	clrwdt		;# 
  5307  0141BE                     l361:
  5308  0141BE  0100               	movlb	0	; () banked
  5309  0141C0  51B7               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  5310  0141C2  B4D8               	btfsc	status,2,c
  5311  0141C4  D7FB               	goto	l362
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;eusart2.c: 137: }
  5315                           ;eusart2.c: 139: readValue = eusart2RxBuffer[eusart2RxTail++];
  5316                           
  5317                           ; BSR set to: 0
  5318  0141C6  51B8               	movf	_eusart2RxTail& (0+255),w,b	;volatile
  5319  0141C8  0D01               	mullw	1
  5320  0141CA  0E00               	movlw	low _eusart2RxBuffer
  5321  0141CC  24F3               	addwf	prodl,w,c
  5322  0141CE  6ED9               	movwf	fsr2l,c
  5323  0141D0  0E01               	movlw	high _eusart2RxBuffer
  5324  0141D2  20F4               	addwfc	prodh,w,c
  5325  0141D4  6EDA               	movwf	fsr2h,c
  5326  0141D6  50DF               	movf	indf2,w,c
  5327  0141D8  6FA0               	movwf	EUSART2_Read@readValue& (0+255),b
  5328                           
  5329                           ; BSR set to: 0
  5330  0141DA  2BB8               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;eusart2.c: 140: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  5334  0141DC  0E3F               	movlw	63
  5335  0141DE  65B8               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  5336  0141E0  D002               	goto	l364
  5337                           
  5338                           ; BSR set to: 0
  5339                           ;eusart2.c: 141: {
  5340                           ;eusart2.c: 142: eusart2RxTail = 0;
  5341  0141E2  0E00               	movlw	0
  5342  0141E4  6FB8               	movwf	_eusart2RxTail& (0+255),b	;volatile
  5343  0141E6                     l364:
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;eusart2.c: 143: }
  5347                           ;eusart2.c: 144: PIE3bits.RC2IE = 0;
  5348                           
  5349                           ; BSR set to: 0
  5350  0141E6  010E               	movlb	14	; () banked
  5351  0141E8  9F2C               	bcf	44,7,b	;volatile
  5352                           
  5353                           ; BSR set to: 14
  5354                           ;eusart2.c: 145: eusart2RxCount--;
  5355  0141EA  0100               	movlb	0	; () banked
  5356  0141EC  07B7               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;eusart2.c: 146: PIE3bits.RC2IE = 1;
  5360  0141EE  010E               	movlb	14	; () banked
  5361  0141F0  8F2C               	bsf	44,7,b	;volatile
  5362                           
  5363                           ; BSR set to: 14
  5364                           ;eusart2.c: 148: return readValue;
  5365  0141F2  0100               	movlb	0	; () banked
  5366  0141F4  51A0               	movf	EUSART2_Read@readValue& (0+255),w,b
  5367  0141F6  0012               	return	
  5368  0141F8                     __end_of_EUSART2_Read:
  5369                           	opt stack 0
  5370                           tblptru	equ	0xFF8
  5371                           tblptrh	equ	0xFF7
  5372                           tblptrl	equ	0xFF6
  5373                           tablat	equ	0xFF5
  5374                           prodh	equ	0xFF4
  5375                           prodl	equ	0xFF3
  5376                           intcon	equ	0xFF2
  5377                           postinc0	equ	0xFEE
  5378                           wreg	equ	0xFE8
  5379                           indf2	equ	0xFDF
  5380                           postinc2	equ	0xFDE
  5381                           fsr2h	equ	0xFDA
  5382                           fsr2l	equ	0xFD9
  5383                           status	equ	0xFD8
  5384                           
  5385 ;; *************** function _terminal_clearTerminal *****************
  5386 ;; Defined at:
  5387 ;;		line 80 in file "ring_buffer_interface.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;		None
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;		None
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  1    wreg      void 
  5394 ;; Registers used:
  5395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5405 ;;Total ram usage:        0 bytes
  5406 ;; Hardware stack levels used:    1
  5407 ;; Hardware stack levels required when called:   14
  5408 ;; This function calls:
  5409 ;;		_printf
  5410 ;; This function is called by:
  5411 ;;		_main
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           	psect	text12
  5416  01459A                     __ptext12:
  5417                           	opt stack 0
  5418  01459A                     _terminal_clearTerminal:
  5419                           	opt stack 16
  5420                           
  5421                           ;ring_buffer_interface.c: 81: printf("\033[2J");
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;incstack = 0
  5425  01459A  0EAC               	movlw	low STR_2
  5426  01459C  0101               	movlb	1	; () banked
  5427  01459E  6FC3               	movwf	printf@f& (0+255),b
  5428  0145A0  0EFF               	movlw	high STR_2
  5429  0145A2  6FC4               	movwf	(printf@f+1)& (0+255),b
  5430  0145A4  EC00  F080         	call	_printf	;wreg free
  5431  0145A8  0012               	return		;funcret
  5432  0145AA                     __end_of_terminal_clearTerminal:
  5433                           	opt stack 0
  5434                           tblptru	equ	0xFF8
  5435                           tblptrh	equ	0xFF7
  5436                           tblptrl	equ	0xFF6
  5437                           tablat	equ	0xFF5
  5438                           prodh	equ	0xFF4
  5439                           prodl	equ	0xFF3
  5440                           intcon	equ	0xFF2
  5441                           postinc0	equ	0xFEE
  5442                           wreg	equ	0xFE8
  5443                           indf2	equ	0xFDF
  5444                           postinc2	equ	0xFDE
  5445                           fsr2h	equ	0xFDA
  5446                           fsr2l	equ	0xFD9
  5447                           status	equ	0xFD8
  5448                           
  5449 ;; *************** function _printf *****************
  5450 ;; Defined at:
  5451 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  f               2   57[BANK1 ] PTR const unsigned char 
  5454 ;;		 -> STR_67(30), STR_66(23), STR_65(40), STR_64(30), 
  5455 ;;		 -> STR_63(33), STR_62(566), STR_60(58), STR_58(56), 
  5456 ;;		 -> STR_56(34), STR_54(34), STR_52(35), STR_50(47), 
  5457 ;;		 -> STR_49(17), STR_46(4), STR_45(5), STR_43(4), 
  5458 ;;		 -> STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), 
  5459 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
  5460 ;;		 -> STR_5(3), STR_4(372), STR_3(4), STR_2(5), 
  5461 ;;		 -> STR_1(4), 
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;  tmpval          4   84[BANK1 ] struct .
  5464 ;;  val             4   78[BANK1 ] unsigned long 
  5465 ;;  fval            3   88[BANK1 ] unsigned long 
  5466 ;;  cp              3    0        PTR const unsigned char 
  5467 ;;  exp             2   82[BANK1 ] int 
  5468 ;;  prec            2   76[BANK1 ] int 
  5469 ;;  flag            2   74[BANK1 ] unsigned short 
  5470 ;;  ap              2   72[BANK1 ] PTR void [1]
  5471 ;;		 -> ?i2_printf(2), ?_printf(2), 
  5472 ;;  len             2    0        unsigned int 
  5473 ;;  width           2    0        int 
  5474 ;;  c               1   91[BANK1 ] char 
  5475 ;;  d               1    0        unsigned char 
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  2   57[BANK1 ] int 
  5478 ;; Registers used:
  5479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5485 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5486 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5487 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5488 ;;      Totals:         0       0      35       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5489 ;;Total ram usage:       35 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:   13
  5492 ;; This function calls:
  5493 ;;		___awdiv
  5494 ;;		___ftadd
  5495 ;;		___ftge
  5496 ;;		___ftmul
  5497 ;;		___ftneg
  5498 ;;		___ftsub
  5499 ;;		___fttol
  5500 ;;		___lldiv
  5501 ;;		___llmod
  5502 ;;		___lltoft
  5503 ;;		___wmul
  5504 ;;		__div_to_l_
  5505 ;;		__tdiv_to_l_
  5506 ;;		_fround
  5507 ;;		_putch
  5508 ;;		_scale
  5509 ;; This function is called by:
  5510 ;;		_terminal_clearTerminal
  5511 ;;		_terminal_setCursorHome
  5512 ;;		_terminal_textAttributes
  5513 ;;		_terminal_printNewline
  5514 ;;		_ringBufferLUT
  5515 ;;		_terminal_printResetMessage
  5516 ;;		_terminal_clearLine
  5517 ;;		_terminal_saveCursor
  5518 ;;		_terminal_returnCursor
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           	psect	text13
  5523  010000                     __ptext13:
  5524                           	opt stack 0
  5525  010000                     _printf:
  5526                           	opt stack 15
  5527                           
  5528                           ;doprnt.c: 466: va_list ap;
  5529                           ;doprnt.c: 499: signed char c;
  5530                           ;doprnt.c: 501: int width;
  5531                           ;doprnt.c: 504: int prec;
  5532                           ;doprnt.c: 508: unsigned short flag;
  5533                           ;doprnt.c: 515: char d;
  5534                           ;doprnt.c: 516: double fval;
  5535                           ;doprnt.c: 517: int exp;
  5536                           ;doprnt.c: 523: union {
  5537                           ;doprnt.c: 524: unsigned long vd;
  5538                           ;doprnt.c: 525: double integ;
  5539                           ;doprnt.c: 526: } tmpval;
  5540                           ;doprnt.c: 528: unsigned long val;
  5541                           ;doprnt.c: 529: unsigned len;
  5542                           ;doprnt.c: 530: const char * cp;
  5543                           ;doprnt.c: 533: *ap = __va_start();
  5544                           
  5545                           ;incstack = 0
  5546  010000  0EC5               	movlw	low (?_printf+2)
  5547  010002  0101               	movlb	1	; () banked
  5548  010004  6FD2               	movwf	printf@ap& (0+255),b
  5549  010006  0E01               	movlw	high (?_printf+2)
  5550  010008  6FD3               	movwf	(printf@ap+1)& (0+255),b
  5551                           
  5552                           ;doprnt.c: 536: while(c = *f++) {
  5553  01000A  D3A4               	goto	u7630
  5554  01000C                     
  5555                           ; BSR set to: 1
  5556                           ;doprnt.c: 538: if(c != '%')
  5557                           
  5558                           ; BSR set to: 1
  5559  01000C  0E25               	movlw	37
  5560  01000E  19E5               	xorwf	printf@c& (0+255),w,b
  5561  010010  B4D8               	btfsc	status,2,c
  5562  010012  D004               	goto	l926
  5563                           
  5564                           ; BSR set to: 1
  5565                           ;doprnt.c: 540: {
  5566                           ;doprnt.c: 541: (putch(c) );
  5567  010014  51E5               	movf	printf@c& (0+255),w,b
  5568  010016  ECDD  F0A2         	call	_putch
  5569                           
  5570                           ;doprnt.c: 542: continue;
  5571  01001A  D39C               	goto	u7630
  5572  01001C                     l926:
  5573                           
  5574                           ;doprnt.c: 543: }
  5575                           ;doprnt.c: 548: flag = 0;
  5576  01001C  0E00               	movlw	0
  5577  01001E  0101               	movlb	1	; () banked
  5578  010020  6FD5               	movwf	(printf@flag+1)& (0+255),b
  5579  010022  0E00               	movlw	0
  5580  010024  6FD4               	movwf	printf@flag& (0+255),b
  5581                           
  5582                           ;doprnt.c: 635: switch(c = *f++) {
  5583  010026  D006               	goto	l927
  5584  010028                     
  5585                           ; BSR set to: 1
  5586                           ;doprnt.c: 663: flag |= 0x400;
  5587                           
  5588                           ; BSR set to: 1
  5589  010028  85D5               	bsf	(printf@flag+1)& (0+255),2,b
  5590                           
  5591                           ; BSR set to: 1
  5592                           ;doprnt.c: 698: case 'i':
  5593                           ;doprnt.c: 699: break;
  5594                           
  5595                           ; BSR set to: 1
  5596                           
  5597                           ;doprnt.c: 697: case 'd':
  5598                           
  5599                           ;doprnt.c: 664: break;
  5600  01002A  D02B               	goto	l931
  5601  01002C                     
  5602                           ; BSR set to: 1
  5603                           ;doprnt.c: 809: (putch(c) );
  5604                           
  5605                           ; BSR set to: 1
  5606  01002C  51E5               	movf	printf@c& (0+255),w,b
  5607  01002E  ECDD  F0A2         	call	_putch
  5608                           
  5609                           ;doprnt.c: 810: continue;
  5610  010032  D390               	goto	u7630
  5611  010034                     l927:
  5612  010034  0101               	movlb	1	; () banked
  5613  010036  51C3               	movf	printf@f& (0+255),w,b
  5614  010038  6FC9               	movwf	??_printf& (0+255),b
  5615  01003A  51C4               	movf	(printf@f+1)& (0+255),w,b
  5616  01003C  6FCA               	movwf	(??_printf+1)& (0+255),b
  5617  01003E  4BC3               	infsnz	printf@f& (0+255),f,b
  5618  010040  2BC4               	incf	(printf@f+1)& (0+255),f,b
  5619  010042  C1C9  FFF6         	movff	??_printf,tblptrl
  5620  010046  C1CA  FFF7         	movff	??_printf+1,tblptrh
  5621  01004A  0E00               	movlw	low (__mediumconst shr (0+16))
  5622  01004C  6EF8               	movwf	tblptru,c
  5623  01004E  0E0D               	movlw	(high __ramtop+-1)
  5624  010050  64F7               	cpfsgt	tblptrh,c
  5625  010052  D003               	bra	u7347
  5626  010054  0008               	tblrd		*
  5627  010056  50F5               	movf	tablat,w,c
  5628  010058  D005               	bra	u7340
  5629  01005A                     u7347:
  5630  01005A  CFF6 FFD9          	movff	tblptrl,fsr2l
  5631  01005E  CFF7 FFDA          	movff	tblptrh,fsr2h
  5632  010062  50DF               	movf	indf2,w,c
  5633  010064                     u7340:
  5634  010064  0101               	movlb	1	; () banked
  5635  010066  6FE5               	movwf	printf@c& (0+255),b
  5636  010068  51E5               	movf	printf@c& (0+255),w,b
  5637                           
  5638                           ; Switch size 1, requested type "space"
  5639                           ; Number of cases is 4, Range of values is 0 to 105
  5640                           ; switch strategies available:
  5641                           ; Name         Instructions Cycles
  5642                           ; simple_byte           13     7 (average)
  5643                           ;	Chosen strategy is simple_byte
  5644  01006A  0A00               	xorlw	0	; case 0
  5645  01006C  B4D8               	btfsc	status,2,c
  5646  01006E  0012               	return	
  5647  010070  0A64               	xorlw	100	; case 100
  5648  010072  B4D8               	btfsc	status,2,c
  5649  010074  D006               	goto	l931
  5650  010076  0A02               	xorlw	2	; case 102
  5651  010078  B4D8               	btfsc	status,2,c
  5652  01007A  D7D6               	goto	l930
  5653  01007C  0A0F               	xorlw	15	; case 105
  5654  01007E  A4D8               	btfss	status,2,c
  5655  010080  D7D5               	goto	l934
  5656  010082                     l931:
  5657                           
  5658                           ;doprnt.c: 825: if(flag & (0x700)) {
  5659                           
  5660                           ; BSR set to: 1
  5661  010082  0E07               	movlw	7
  5662  010084  0101               	movlb	1	; () banked
  5663  010086  15D5               	andwf	(printf@flag+1)& (0+255),w,b
  5664  010088  B4D8               	btfsc	status,2,c
  5665  01008A  D2C6               	goto	l935
  5666                           
  5667                           ; BSR set to: 1
  5668                           ;doprnt.c: 829: prec = 6;
  5669  01008C  0E00               	movlw	0
  5670  01008E  6FD7               	movwf	(printf@prec+1)& (0+255),b
  5671  010090  0E06               	movlw	6
  5672  010092  6FD6               	movwf	printf@prec& (0+255),b
  5673                           
  5674                           ; BSR set to: 1
  5675                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  5676  010094  C1D2  FFD9         	movff	printf@ap,fsr2l
  5677  010098  C1D3  FFDA         	movff	printf@ap+1,fsr2h
  5678  01009C  CFDE F1E2          	movff	postinc2,printf@fval
  5679  0100A0  CFDE F1E3          	movff	postinc2,printf@fval+1
  5680  0100A4  CFDD F1E4          	movff	postdec2,printf@fval+2
  5681                           
  5682                           ; BSR set to: 1
  5683  0100A8  0E03               	movlw	3
  5684  0100AA  27D2               	addwf	printf@ap& (0+255),f,b
  5685  0100AC  0E00               	movlw	0
  5686  0100AE  23D3               	addwfc	(printf@ap+1)& (0+255),f,b
  5687                           
  5688                           ; BSR set to: 1
  5689                           ;doprnt.c: 831: if(fval < 0.0) {
  5690  0100B0  AFE4               	btfss	(printf@fval+2)& (0+255),7,b
  5691  0100B2  D011               	goto	l936
  5692                           
  5693                           ; BSR set to: 1
  5694                           ;doprnt.c: 832: fval = -fval;
  5695  0100B4  C1E2  F0A0         	movff	printf@fval,___ftneg@f1
  5696  0100B8  C1E3  F0A1         	movff	printf@fval+1,___ftneg@f1+1
  5697  0100BC  C1E4  F0A2         	movff	printf@fval+2,___ftneg@f1+2
  5698  0100C0  EC0B  F0A2         	call	___ftneg	;wreg free
  5699  0100C4  C0A0  F1E2         	movff	?___ftneg,printf@fval
  5700  0100C8  C0A1  F1E3         	movff	?___ftneg+1,printf@fval+1
  5701  0100CC  C0A2  F1E4         	movff	?___ftneg+2,printf@fval+2
  5702                           
  5703                           ;doprnt.c: 833: flag |= 0x03;
  5704  0100D0  0E03               	movlw	3
  5705  0100D2  0101               	movlb	1	; () banked
  5706  0100D4  13D4               	iorwf	printf@flag& (0+255),f,b
  5707  0100D6                     l936:
  5708                           
  5709                           ; BSR set to: 1
  5710                           ;doprnt.c: 834: }
  5711                           ;doprnt.c: 835: exp = 0;
  5712                           
  5713                           ; BSR set to: 1
  5714  0100D6  0E00               	movlw	0
  5715  0100D8  6FDD               	movwf	(printf@exp+1)& (0+255),b
  5716  0100DA  0E00               	movlw	0
  5717  0100DC  6FDC               	movwf	printf@exp& (0+255),b
  5718                           
  5719                           ; BSR set to: 1
  5720                           ;doprnt.c: 836: if( fval!=0) {
  5721  0100DE  51E2               	movf	printf@fval& (0+255),w,b
  5722  0100E0  11E3               	iorwf	(printf@fval+1)& (0+255),w,b
  5723  0100E2  11E4               	iorwf	(printf@fval+2)& (0+255),w,b
  5724  0100E4  B4D8               	btfsc	status,2,c
  5725  0100E6  D08B               	goto	l941
  5726                           
  5727                           ; BSR set to: 1
  5728                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  5729  0100E8  0E82               	movlw	130
  5730  0100EA  6FC9               	movwf	??_printf& (0+255),b
  5731  0100EC  0EFF               	movlw	255
  5732  0100EE  6FCA               	movwf	(??_printf+1)& (0+255),b
  5733  0100F0  C1E2  F1CB         	movff	printf@fval,??_printf+2
  5734  0100F4  C1E3  F1CC         	movff	printf@fval+1,??_printf+3
  5735  0100F8  C1E4  F1CD         	movff	printf@fval+2,??_printf+4
  5736  0100FC  C1E5  F1CE         	movff	printf@fval+3,??_printf+5
  5737  010100  0E10               	movlw	16
  5738  010102  D005               	goto	u7380
  5739  010104                     u7385:
  5740  010104  90D8               	bcf	status,0,c
  5741  010106  33CE               	rrcf	(??_printf+5)& (0+255),f,b
  5742  010108  33CD               	rrcf	(??_printf+4)& (0+255),f,b
  5743  01010A  33CC               	rrcf	(??_printf+3)& (0+255),f,b
  5744  01010C  33CB               	rrcf	(??_printf+2)& (0+255),f,b
  5745  01010E                     u7380:
  5746  01010E  2EE8               	decfsz	wreg,f,c
  5747  010110  D7F9               	goto	u7385
  5748  010112  51CB               	movf	(??_printf+2)& (0+255),w,b
  5749  010114  25C9               	addwf	??_printf& (0+255),w,b
  5750  010116  6FDC               	movwf	printf@exp& (0+255),b
  5751  010118  0E00               	movlw	0
  5752  01011A  21CA               	addwfc	(??_printf+1)& (0+255),w,b
  5753  01011C  6FDD               	movwf	(printf@exp+1)& (0+255),b
  5754                           
  5755                           ; BSR set to: 1
  5756                           ;doprnt.c: 838: exp--;
  5757  01011E  07DC               	decf	printf@exp& (0+255),f,b
  5758  010120  A0D8               	btfss	status,0,c
  5759  010122  07DD               	decf	(printf@exp+1)& (0+255),f,b
  5760                           
  5761                           ; BSR set to: 1
  5762                           ;doprnt.c: 839: exp *= 3;
  5763  010124  C1DC  F192         	movff	printf@exp,___wmul@multiplier
  5764  010128  C1DD  F193         	movff	printf@exp+1,___wmul@multiplier+1
  5765  01012C  0E00               	movlw	0
  5766  01012E  6F95               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5767  010130  0E03               	movlw	3
  5768  010132  6F94               	movwf	___wmul@multiplicand& (0+255),b
  5769  010134  ECE3  F0A1         	call	___wmul	;wreg free
  5770  010138  C192  F1DC         	movff	?___wmul,printf@exp
  5771  01013C  C193  F1DD         	movff	?___wmul+1,printf@exp+1
  5772                           
  5773                           ;doprnt.c: 840: exp /= 10;
  5774  010140  C1DC  F18A         	movff	printf@exp,___awdiv@dividend
  5775  010144  C1DD  F18B         	movff	printf@exp+1,___awdiv@dividend+1
  5776  010148  0E00               	movlw	0
  5777  01014A  0101               	movlb	1	; () banked
  5778  01014C  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  5779  01014E  0E0A               	movlw	10
  5780  010150  6F8C               	movwf	___awdiv@divisor& (0+255),b
  5781  010152  EC1B  F09D         	call	___awdiv	;wreg free
  5782  010156  C18A  F1DC         	movff	?___awdiv,printf@exp
  5783  01015A  C18B  F1DD         	movff	?___awdiv+1,printf@exp+1
  5784                           
  5785                           ;doprnt.c: 841: if(exp < 0)
  5786  01015E  0101               	movlb	1	; () banked
  5787  010160  AFDD               	btfss	(printf@exp+1)& (0+255),7,b
  5788  010162  D003               	goto	l938
  5789                           
  5790                           ; BSR set to: 1
  5791                           ;doprnt.c: 842: exp--;
  5792  010164  07DC               	decf	printf@exp& (0+255),f,b
  5793  010166  A0D8               	btfss	status,0,c
  5794  010168  07DD               	decf	(printf@exp+1)& (0+255),f,b
  5795  01016A                     l938:
  5796                           
  5797                           ; BSR set to: 1
  5798                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  5799                           
  5800                           ; BSR set to: 1
  5801  01016A  51DC               	movf	printf@exp& (0+255),w,b
  5802  01016C  0800               	sublw	0
  5803  01016E  EC85  F087         	call	_scale
  5804  010172  C1A7  F1DE         	movff	?_scale,printf@tmpval
  5805  010176  C1A8  F1DF         	movff	?_scale+1,printf@tmpval+1
  5806  01017A  C1A9  F1E0         	movff	?_scale+2,printf@tmpval+2
  5807                           
  5808                           ;doprnt.c: 847: tmpval.integ *= fval;
  5809  01017E  C1DE  F198         	movff	printf@tmpval,___ftmul@f1
  5810  010182  C1DF  F199         	movff	printf@tmpval+1,___ftmul@f1+1
  5811  010186  C1E0  F19A         	movff	printf@tmpval+2,___ftmul@f1+2
  5812  01018A  C1E2  F19B         	movff	printf@fval,___ftmul@f2
  5813  01018E  C1E3  F19C         	movff	printf@fval+1,___ftmul@f2+1
  5814  010192  C1E4  F19D         	movff	printf@fval+2,___ftmul@f2+2
  5815  010196  EC93  F098         	call	___ftmul	;wreg free
  5816  01019A  C198  F1DE         	movff	?___ftmul,printf@tmpval
  5817  01019E  C199  F1DF         	movff	?___ftmul+1,printf@tmpval+1
  5818  0101A2  C19A  F1E0         	movff	?___ftmul+2,printf@tmpval+2
  5819                           
  5820                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  5821  0101A6  C1DE  F0A0         	movff	printf@tmpval,___ftge@ff1
  5822  0101AA  C1DF  F0A1         	movff	printf@tmpval+1,___ftge@ff1+1
  5823  0101AE  C1E0  F0A2         	movff	printf@tmpval+2,___ftge@ff1+2
  5824  0101B2  0E00               	movlw	0
  5825  0101B4  0100               	movlb	0	; () banked
  5826  0101B6  6FA3               	movwf	___ftge@ff2& (0+255),b
  5827  0101B8  0E80               	movlw	128
  5828  0101BA  6FA4               	movwf	(___ftge@ff2+1)& (0+255),b
  5829  0101BC  0E3F               	movlw	63
  5830  0101BE  6FA5               	movwf	(___ftge@ff2+2)& (0+255),b
  5831  0101C0  EC93  F09B         	call	___ftge	;wreg free
  5832  0101C4  0100               	movlb	0	; () banked
  5833  0101C6  B0D8               	btfsc	status,0,c
  5834  0101C8  D005               	goto	l939
  5835                           
  5836                           ; BSR set to: 0
  5837                           ;doprnt.c: 849: exp--;
  5838  0101CA  0101               	movlb	1	; () banked
  5839  0101CC  07DC               	decf	printf@exp& (0+255),f,b
  5840  0101CE  A0D8               	btfss	status,0,c
  5841  0101D0  07DD               	decf	(printf@exp+1)& (0+255),f,b
  5842  0101D2  D015               	goto	l941
  5843  0101D4                     l939:
  5844                           
  5845                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  5846                           
  5847                           ; BSR set to: 1
  5848  0101D4  C1DE  F0A0         	movff	printf@tmpval,___ftge@ff1
  5849  0101D8  C1DF  F0A1         	movff	printf@tmpval+1,___ftge@ff1+1
  5850  0101DC  C1E0  F0A2         	movff	printf@tmpval+2,___ftge@ff1+2
  5851  0101E0  0E00               	movlw	0
  5852  0101E2  0100               	movlb	0	; () banked
  5853  0101E4  6FA3               	movwf	___ftge@ff2& (0+255),b
  5854  0101E6  0E20               	movlw	32
  5855  0101E8  6FA4               	movwf	(___ftge@ff2+1)& (0+255),b
  5856  0101EA  0E41               	movlw	65
  5857  0101EC  6FA5               	movwf	(___ftge@ff2+2)& (0+255),b
  5858  0101EE  EC93  F09B         	call	___ftge	;wreg free
  5859  0101F2  0100               	movlb	0	; () banked
  5860  0101F4  A0D8               	btfss	status,0,c
  5861  0101F6  D003               	goto	l941
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;doprnt.c: 851: exp++;
  5865  0101F8  0101               	movlb	1	; () banked
  5866  0101FA  4BDC               	infsnz	printf@exp& (0+255),f,b
  5867  0101FC  2BDD               	incf	(printf@exp+1)& (0+255),f,b
  5868  0101FE                     l941:
  5869                           
  5870                           ;doprnt.c: 852: }
  5871                           ;doprnt.c: 1112: if(prec <= 12)
  5872                           
  5873                           ; BSR set to: 1
  5874                           
  5875                           ; BSR set to: 1
  5876                           
  5877                           ; BSR set to: 1
  5878  0101FE  0101               	movlb	1	; () banked
  5879  010200  BFD7               	btfsc	(printf@prec+1)& (0+255),7,b
  5880  010202  D006               	goto	u7420
  5881  010204  51D7               	movf	(printf@prec+1)& (0+255),w,b
  5882  010206  E11B               	bnz	l6642
  5883  010208  0E0D               	movlw	13
  5884  01020A  5DD6               	subwf	printf@prec& (0+255),w,b
  5885  01020C  B0D8               	btfsc	status,0,c
  5886  01020E  D017               	goto	l942
  5887  010210                     u7420:
  5888                           
  5889                           ; BSR set to: 1
  5890                           ;doprnt.c: 1113: fval += fround(prec);
  5891  010210  C1E2  F1B1         	movff	printf@fval,___ftadd@f1
  5892  010214  C1E3  F1B2         	movff	printf@fval+1,___ftadd@f1+1
  5893  010218  C1E4  F1B3         	movff	printf@fval+2,___ftadd@f1+2
  5894  01021C  51D6               	movf	printf@prec& (0+255),w,b
  5895  01021E  ECC4  F090         	call	_fround
  5896  010222  C1A7  F1B4         	movff	?_fround,___ftadd@f2
  5897  010226  C1A8  F1B5         	movff	?_fround+1,___ftadd@f2+1
  5898  01022A  C1A9  F1B6         	movff	?_fround+2,___ftadd@f2+2
  5899  01022E  EC4C  F093         	call	___ftadd	;wreg free
  5900  010232  C1B1  F1E2         	movff	?___ftadd,printf@fval
  5901  010236  C1B2  F1E3         	movff	?___ftadd+1,printf@fval+1
  5902  01023A  C1B3  F1E4         	movff	?___ftadd+2,printf@fval+2
  5903  01023E                     l942:
  5904  01023E                     l6642:
  5905                           
  5906                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  5907  01023E  0101               	movlb	1	; () banked
  5908  010240  BFDD               	btfsc	(printf@exp+1)& (0+255),7,b
  5909  010242  D006               	goto	u7430
  5910  010244  51DD               	movf	(printf@exp+1)& (0+255),w,b
  5911  010246  E11F               	bnz	l6650
  5912  010248  0E0A               	movlw	10
  5913  01024A  5DDC               	subwf	printf@exp& (0+255),w,b
  5914  01024C  B0D8               	btfsc	status,0,c
  5915  01024E  D01B               	goto	u7460
  5916  010250                     u7430:
  5917                           
  5918                           ; BSR set to: 1
  5919  010250  51E2               	movf	printf@fval& (0+255),w,b
  5920  010252  11E3               	iorwf	(printf@fval+1)& (0+255),w,b
  5921  010254  11E4               	iorwf	(printf@fval+2)& (0+255),w,b
  5922  010256  B4D8               	btfsc	status,2,c
  5923  010258  D057               	goto	l943
  5924                           
  5925                           ; BSR set to: 1
  5926  01025A  C1E2  F1A7         	movff	printf@fval,___fttol@f1
  5927  01025E  C1E3  F1A8         	movff	printf@fval+1,___fttol@f1+1
  5928  010262  C1E4  F1A9         	movff	printf@fval+2,___fttol@f1+2
  5929  010266  EC17  F098         	call	___fttol	;wreg free
  5930  01026A  0101               	movlb	1	; () banked
  5931  01026C  51A7               	movf	?___fttol& (0+255),w,b
  5932  01026E  11A8               	iorwf	(?___fttol+1)& (0+255),w,b
  5933  010270  11A9               	iorwf	(?___fttol+2)& (0+255),w,b
  5934  010272  11AA               	iorwf	(?___fttol+3)& (0+255),w,b
  5935  010274  B4D8               	btfsc	status,2,c
  5936                           
  5937                           ; BSR set to: 1
  5938  010276  BFDD               	btfsc	(printf@exp+1)& (0+255),7,b
  5939  010278  D047               	goto	l943
  5940  01027A  51DD               	movf	(printf@exp+1)& (0+255),w,b
  5941  01027C  E104               	bnz	l6650
  5942  01027E  0E02               	movlw	2
  5943  010280  5DDC               	subwf	printf@exp& (0+255),w,b
  5944  010282  A0D8               	btfss	status,0,c
  5945  010284  D041               	goto	l943
  5946  010286                     u7460:
  5947  010286                     l6650:
  5948                           
  5949                           ; BSR set to: 1
  5950                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  5951  010286  C1DE  F0A0         	movff	printf@tmpval,___ftge@ff1
  5952  01028A  C1DF  F0A1         	movff	printf@tmpval+1,___ftge@ff1+1
  5953  01028E  C1E0  F0A2         	movff	printf@tmpval+2,___ftge@ff1+2
  5954  010292  0E70               	movlw	112
  5955  010294  0100               	movlb	0	; () banked
  5956  010296  6FA3               	movwf	___ftge@ff2& (0+255),b
  5957  010298  0E89               	movlw	137
  5958  01029A  6FA4               	movwf	(___ftge@ff2+1)& (0+255),b
  5959  01029C  0E40               	movlw	64
  5960  01029E  6FA5               	movwf	(___ftge@ff2+2)& (0+255),b
  5961  0102A0  EC93  F09B         	call	___ftge	;wreg free
  5962  0102A4  0100               	movlb	0	; () banked
  5963  0102A6  B0D8               	btfsc	status,0,c
  5964  0102A8  D003               	goto	l946
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5968  0102AA  0101               	movlb	1	; () banked
  5969  0102AC  0EF7               	movlw	247
  5970  0102AE  D002               	goto	L1
  5971  0102B0                     l946:
  5972                           
  5973                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5974                           
  5975                           ; BSR set to: 1
  5976  0102B0  0101               	movlb	1	; () banked
  5977  0102B2  0EF8               	movlw	248
  5978  0102B4                     L1:
  5979  0102B4  27DC               	addwf	printf@exp& (0+255),f,b
  5980  0102B6  0EFF               	movlw	255
  5981  0102B8  23DD               	addwfc	(printf@exp+1)& (0+255),f,b
  5982                           
  5983                           ; BSR set to: 1
  5984                           ;doprnt.c: 1124: }
  5985                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  5986                           
  5987                           ; BSR set to: 1
  5988  0102BA  51DC               	movf	printf@exp& (0+255),w,b
  5989  0102BC  EC85  F087         	call	_scale
  5990  0102C0  C1A7  F1DE         	movff	?_scale,printf@tmpval
  5991  0102C4  C1A8  F1DF         	movff	?_scale+1,printf@tmpval+1
  5992  0102C8  C1A9  F1E0         	movff	?_scale+2,printf@tmpval+2
  5993                           
  5994                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  5995  0102CC  C1E2  F0A0         	movff	printf@fval,__tdiv_to_l_@f1
  5996  0102D0  C1E3  F0A1         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  5997  0102D4  C1E4  F0A2         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  5998  0102D8  C1DE  F0A3         	movff	printf@tmpval,__tdiv_to_l_@f2
  5999  0102DC  C1DF  F0A4         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  6000  0102E0  C1E0  F0A5         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  6001  0102E4  ECF9  F094         	call	__tdiv_to_l_	;wreg free
  6002  0102E8  C0A0  F1D8         	movff	?__tdiv_to_l_,printf@val
  6003  0102EC  C0A1  F1D9         	movff	?__tdiv_to_l_+1,printf@val+1
  6004  0102F0  C0A2  F1DA         	movff	?__tdiv_to_l_+2,printf@val+2
  6005  0102F4  C0A3  F1DB         	movff	?__tdiv_to_l_+3,printf@val+3
  6006                           
  6007                           ;doprnt.c: 1129: fval = 0.0;
  6008  0102F8  0E00               	movlw	0
  6009  0102FA  0101               	movlb	1	; () banked
  6010  0102FC  6FE2               	movwf	printf@fval& (0+255),b
  6011  0102FE  0E00               	movlw	0
  6012  010300  6FE3               	movwf	(printf@fval+1)& (0+255),b
  6013  010302  0E00               	movlw	0
  6014  010304  6FE4               	movwf	(printf@fval+2)& (0+255),b
  6015                           
  6016                           ;doprnt.c: 1130: } else {
  6017  010306  D033               	goto	l952
  6018  010308                     l943:
  6019                           
  6020                           ; BSR set to: 1
  6021                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6022                           
  6023                           ; BSR set to: 1
  6024  010308  C1E2  F1A7         	movff	printf@fval,___fttol@f1
  6025  01030C  C1E3  F1A8         	movff	printf@fval+1,___fttol@f1+1
  6026  010310  C1E4  F1A9         	movff	printf@fval+2,___fttol@f1+2
  6027  010314  EC17  F098         	call	___fttol	;wreg free
  6028  010318  C1A7  F1D8         	movff	?___fttol,printf@val
  6029  01031C  C1A8  F1D9         	movff	?___fttol+1,printf@val+1
  6030  010320  C1A9  F1DA         	movff	?___fttol+2,printf@val+2
  6031  010324  C1AA  F1DB         	movff	?___fttol+3,printf@val+3
  6032                           
  6033                           ;doprnt.c: 1132: fval -= (double)val;
  6034  010328  C1E2  F1BD         	movff	printf@fval,___ftsub@f1
  6035  01032C  C1E3  F1BE         	movff	printf@fval+1,___ftsub@f1+1
  6036  010330  C1E4  F1BF         	movff	printf@fval+2,___ftsub@f1+2
  6037  010334  C1D8  F18D         	movff	printf@val,___lltoft@c
  6038  010338  C1D9  F18E         	movff	printf@val+1,___lltoft@c+1
  6039  01033C  C1DA  F18F         	movff	printf@val+2,___lltoft@c+2
  6040  010340  C1DB  F190         	movff	printf@val+3,___lltoft@c+3
  6041  010344  ECFA  F09E         	call	___lltoft	;wreg free
  6042  010348  C18D  F1C0         	movff	?___lltoft,___ftsub@f2
  6043  01034C  C18E  F1C1         	movff	?___lltoft+1,___ftsub@f2+1
  6044  010350  C18F  F1C2         	movff	?___lltoft+2,___ftsub@f2+2
  6045  010354  ECFC  F0A0         	call	___ftsub	;wreg free
  6046  010358  C1BD  F1E2         	movff	?___ftsub,printf@fval
  6047  01035C  C1BE  F1E3         	movff	?___ftsub+1,printf@fval+1
  6048  010360  C1BF  F1E4         	movff	?___ftsub+2,printf@fval+2
  6049                           
  6050                           ;doprnt.c: 1133: exp = 0;
  6051  010364  0E00               	movlw	0
  6052  010366  0101               	movlb	1	; () banked
  6053  010368  6FDD               	movwf	(printf@exp+1)& (0+255),b
  6054  01036A  0E00               	movlw	0
  6055  01036C  6FDC               	movwf	printf@exp& (0+255),b
  6056  01036E                     l952:
  6057                           
  6058                           ; BSR set to: 1
  6059                           ;doprnt.c: 1134: }
  6060                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6061                           
  6062                           ; BSR set to: 1
  6063  01036E  0E01               	movlw	1
  6064  010370  6FE5               	movwf	printf@c& (0+255),b
  6065  010372                     l6670:
  6066                           
  6067                           ; BSR set to: 1
  6068  010372  0E0A               	movlw	10
  6069  010374  19E5               	xorwf	printf@c& (0+255),w,b
  6070  010376  B4D8               	btfsc	status,2,c
  6071  010378  D01B               	goto	u7500
  6072                           
  6073                           ; BSR set to: 1
  6074                           ;doprnt.c: 1137: if(val < dpowers[c])
  6075                           
  6076                           ; BSR set to: 1
  6077                           
  6078                           ; BSR set to: 1
  6079  01037A  51E5               	movf	printf@c& (0+255),w,b
  6080  01037C  0D04               	mullw	4
  6081  01037E  0E79               	movlw	low _dpowers
  6082  010380  24F3               	addwf	prodl,w,c
  6083  010382  6EF6               	movwf	tblptrl,c
  6084  010384  0EF9               	movlw	high _dpowers
  6085  010386  20F4               	addwfc	prodh,w,c
  6086  010388  6EF7               	movwf	tblptrh,c
  6087  01038A                     	if	1	;There are 3 active tblptr bytes
  6088  01038A  6AF8               	clrf	tblptru,c
  6089  01038C  0E00               	movlw	low (__mediumconst shr (0+16))
  6090  01038E  22F8               	addwfc	tblptru,f,c
  6091  010390                     	endif
  6092  010390  0009               	tblrd		*+
  6093  010392  50F5               	movf	tablat,w,c
  6094  010394  5DD8               	subwf	printf@val& (0+255),w,b
  6095  010396  0009               	tblrd		*+
  6096  010398  50F5               	movf	tablat,w,c
  6097  01039A  59D9               	subwfb	(printf@val+1)& (0+255),w,b
  6098  01039C  0009               	tblrd		*+
  6099  01039E  50F5               	movf	tablat,w,c
  6100  0103A0  59DA               	subwfb	(printf@val+2)& (0+255),w,b
  6101  0103A2  0009               	tblrd		*+
  6102  0103A4  50F5               	movf	tablat,w,c
  6103  0103A6  59DB               	subwfb	(printf@val+3)& (0+255),w,b
  6104  0103A8  A0D8               	btfss	status,0,c
  6105  0103AA  D002               	goto	u7500
  6106                           
  6107                           ; BSR set to: 1
  6108                           
  6109                           ; BSR set to: 1
  6110                           
  6111                           ; BSR set to: 1
  6112                           ;doprnt.c: 1138: break;
  6113  0103AC  2BE5               	incf	printf@c& (0+255),f,b
  6114  0103AE  D7E1               	goto	l6670
  6115  0103B0                     u7500:
  6116                           
  6117                           ; BSR set to: 1
  6118                           ;doprnt.c: 1175: {
  6119                           ;doprnt.c: 1188: if(flag & 0x03)
  6120                           
  6121                           ; BSR set to: 1
  6122  0103B0  0E03               	movlw	3
  6123  0103B2  15D4               	andwf	printf@flag& (0+255),w,b
  6124  0103B4  6FC9               	movwf	??_printf& (0+255),b
  6125  0103B6  0E00               	movlw	0
  6126  0103B8  15D5               	andwf	(printf@flag+1)& (0+255),w,b
  6127  0103BA  6FCA               	movwf	(??_printf+1)& (0+255),b
  6128  0103BC  51C9               	movf	??_printf& (0+255),w,b
  6129  0103BE  11CA               	iorwf	(??_printf+1)& (0+255),w,b
  6130  0103C0  B4D8               	btfsc	status,2,c
  6131  0103C2  D04E               	goto	l957
  6132                           
  6133                           ; BSR set to: 1
  6134                           ;doprnt.c: 1190: (putch('-') );
  6135  0103C4  0E2D               	movlw	45
  6136  0103C6  ECDD  F0A2         	call	_putch
  6137                           
  6138                           ;doprnt.c: 1195: }
  6139                           ;doprnt.c: 1196: while(c--) {
  6140  0103CA  D04A               	goto	l957
  6141  0103CC                     
  6142                           ;doprnt.c: 1200: {
  6143                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  6144  0103CC  C1D8  F18A         	movff	printf@val,___lldiv@dividend
  6145  0103D0  C1D9  F18B         	movff	printf@val+1,___lldiv@dividend+1
  6146  0103D4  C1DA  F18C         	movff	printf@val+2,___lldiv@dividend+2
  6147  0103D8  C1DB  F18D         	movff	printf@val+3,___lldiv@dividend+3
  6148  0103DC  0101               	movlb	1	; () banked
  6149  0103DE  51E5               	movf	printf@c& (0+255),w,b
  6150  0103E0  0D04               	mullw	4
  6151  0103E2  0E79               	movlw	low _dpowers
  6152  0103E4  24F3               	addwf	prodl,w,c
  6153  0103E6  6EF6               	movwf	tblptrl,c
  6154  0103E8  0EF9               	movlw	high _dpowers
  6155  0103EA  20F4               	addwfc	prodh,w,c
  6156  0103EC  6EF7               	movwf	tblptrh,c
  6157  0103EE                     	if	1	;There are 3 active tblptr bytes
  6158  0103EE  6AF8               	clrf	tblptru,c
  6159  0103F0  0E00               	movlw	low (__mediumconst shr (0+16))
  6160  0103F2  22F8               	addwfc	tblptru,f,c
  6161  0103F4                     	endif
  6162  0103F4  0009               	tblrd		*+
  6163  0103F6  CFF5 F18E          	movff	tablat,___lldiv@divisor
  6164  0103FA  0009               	tblrd		*+
  6165  0103FC  CFF5 F18F          	movff	tablat,___lldiv@divisor+1
  6166  010400  0009               	tblrd		*+
  6167  010402  CFF5 F190          	movff	tablat,___lldiv@divisor+2
  6168  010406  000A               	tblrd		*-
  6169  010408  CFF5 F191          	movff	tablat,___lldiv@divisor+3
  6170  01040C  EC87  F09C         	call	___lldiv	;wreg free
  6171  010410  C18A  F1DE         	movff	?___lldiv,printf@tmpval
  6172  010414  C18B  F1DF         	movff	?___lldiv+1,printf@tmpval+1
  6173  010418  C18C  F1E0         	movff	?___lldiv+2,printf@tmpval+2
  6174  01041C  C18D  F1E1         	movff	?___lldiv+3,printf@tmpval+3
  6175                           
  6176                           ;doprnt.c: 1202: tmpval.vd %= 10;
  6177  010420  C1DE  F192         	movff	printf@tmpval,___llmod@dividend
  6178  010424  C1DF  F193         	movff	printf@tmpval+1,___llmod@dividend+1
  6179  010428  C1E0  F194         	movff	printf@tmpval+2,___llmod@dividend+2
  6180  01042C  C1E1  F195         	movff	printf@tmpval+3,___llmod@dividend+3
  6181  010430  0E0A               	movlw	10
  6182  010432  0101               	movlb	1	; () banked
  6183  010434  6F96               	movwf	___llmod@divisor& (0+255),b
  6184  010436  0E00               	movlw	0
  6185  010438  6F97               	movwf	(___llmod@divisor+1)& (0+255),b
  6186  01043A  0E00               	movlw	0
  6187  01043C  6F98               	movwf	(___llmod@divisor+2)& (0+255),b
  6188  01043E  0E00               	movlw	0
  6189  010440  6F99               	movwf	(___llmod@divisor+3)& (0+255),b
  6190  010442  ECE1  F09D         	call	___llmod	;wreg free
  6191  010446  C192  F1DE         	movff	?___llmod,printf@tmpval
  6192  01044A  C193  F1DF         	movff	?___llmod+1,printf@tmpval+1
  6193  01044E  C194  F1E0         	movff	?___llmod+2,printf@tmpval+2
  6194  010452  C195  F1E1         	movff	?___llmod+3,printf@tmpval+3
  6195                           
  6196                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  6197  010456  0101               	movlb	1	; () banked
  6198  010458  51DE               	movf	printf@tmpval& (0+255),w,b
  6199  01045A  0F30               	addlw	48
  6200  01045C  ECDD  F0A2         	call	_putch
  6201  010460                     l957:
  6202  010460  0101               	movlb	1	; () banked
  6203  010462  07E5               	decf	printf@c& (0+255),f,b
  6204  010464  29E5               	incf	printf@c& (0+255),w,b
  6205  010466  B4D8               	btfsc	status,2,c
  6206  010468  D008               	goto	l960
  6207  01046A  D7B0               	goto	l958
  6208  01046C                     l6694:
  6209                           
  6210                           ; BSR set to: 1
  6211                           ;doprnt.c: 1208: (putch('0') );
  6212  01046C  0E30               	movlw	48
  6213  01046E  ECDD  F0A2         	call	_putch
  6214                           
  6215                           ;doprnt.c: 1209: exp--;
  6216  010472  0101               	movlb	1	; () banked
  6217  010474  07DC               	decf	printf@exp& (0+255),f,b
  6218  010476  A0D8               	btfss	status,0,c
  6219  010478  07DD               	decf	(printf@exp+1)& (0+255),f,b
  6220  01047A                     l960:
  6221                           
  6222                           ; BSR set to: 1
  6223                           
  6224                           ; BSR set to: 1
  6225  01047A  BFDD               	btfsc	(printf@exp+1)& (0+255),7,b
  6226  01047C  D005               	goto	u7530
  6227  01047E  51DD               	movf	(printf@exp+1)& (0+255),w,b
  6228  010480  E1F5               	bnz	l6694
  6229  010482  05DC               	decf	printf@exp& (0+255),w,b
  6230  010484  B0D8               	btfsc	status,0,c
  6231  010486  D7F2               	goto	l961
  6232  010488                     u7530:
  6233                           
  6234                           ; BSR set to: 1
  6235                           ;doprnt.c: 1210: }
  6236                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  6237                           
  6238                           ; BSR set to: 1
  6239  010488  BFD7               	btfsc	(printf@prec+1)& (0+255),7,b
  6240  01048A  D009               	goto	l963
  6241  01048C  51D7               	movf	(printf@prec+1)& (0+255),w,b
  6242  01048E  E104               	bnz	u7540
  6243  010490  0E09               	movlw	9
  6244  010492  5DD6               	subwf	printf@prec& (0+255),w,b
  6245  010494  A0D8               	btfss	status,0,c
  6246  010496  D003               	goto	l963
  6247  010498                     u7540:
  6248                           
  6249                           ; BSR set to: 1
  6250                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6251  010498  0E08               	movlw	8
  6252  01049A  6FE5               	movwf	printf@c& (0+255),b
  6253  01049C  D002               	goto	l964
  6254  01049E                     l963:
  6255                           
  6256                           ; BSR set to: 1
  6257                           ;doprnt.c: 1213: else
  6258                           ;doprnt.c: 1214: c = prec;
  6259  01049E  C1D6  F1E5         	movff	printf@prec,printf@c
  6260  0104A2                     l964:
  6261                           
  6262                           ; BSR set to: 1
  6263                           ;doprnt.c: 1215: prec -= c;
  6264                           
  6265                           ; BSR set to: 1
  6266  0104A2  51E5               	movf	printf@c& (0+255),w,b
  6267  0104A4  5FD6               	subwf	printf@prec& (0+255),f,b
  6268  0104A6  0E00               	movlw	0
  6269  0104A8  BFE5               	btfsc	printf@c& (0+255),7,b
  6270  0104AA  0EFF               	movlw	255
  6271  0104AC  5BD7               	subwfb	(printf@prec+1)& (0+255),f,b
  6272                           
  6273                           ; BSR set to: 1
  6274                           ;doprnt.c: 1219: if(c)
  6275  0104AE  51E5               	movf	printf@c& (0+255),w,b
  6276  0104B0  B4D8               	btfsc	status,2,c
  6277  0104B2  D003               	goto	l965
  6278                           
  6279                           ; BSR set to: 1
  6280                           ;doprnt.c: 1221: (putch('.') );
  6281  0104B4  0E2E               	movlw	46
  6282  0104B6  ECDD  F0A2         	call	_putch
  6283  0104BA                     l965:
  6284                           
  6285                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6286  0104BA  0101               	movlb	1	; () banked
  6287  0104BC  51E5               	movf	printf@c& (0+255),w,b
  6288  0104BE  EC85  F087         	call	_scale
  6289  0104C2  C1A7  F1CF         	movff	?_scale,_printf$2622
  6290  0104C6  C1A8  F1D0         	movff	?_scale+1,_printf$2622+1
  6291  0104CA  C1A9  F1D1         	movff	?_scale+2,_printf$2622+2
  6292                           
  6293                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6294  0104CE  C1E2  F19B         	movff	printf@fval,___ftmul@f2
  6295  0104D2  C1E3  F19C         	movff	printf@fval+1,___ftmul@f2+1
  6296  0104D6  C1E4  F19D         	movff	printf@fval+2,___ftmul@f2+2
  6297  0104DA  C1CF  F198         	movff	_printf$2622,___ftmul@f1
  6298  0104DE  C1D0  F199         	movff	_printf$2622+1,___ftmul@f1+1
  6299  0104E2  C1D1  F19A         	movff	_printf$2622+2,___ftmul@f1+2
  6300  0104E6  EC93  F098         	call	___ftmul	;wreg free
  6301  0104EA  C198  F1A7         	movff	?___ftmul,___fttol@f1
  6302  0104EE  C199  F1A8         	movff	?___ftmul+1,___fttol@f1+1
  6303  0104F2  C19A  F1A9         	movff	?___ftmul+2,___fttol@f1+2
  6304  0104F6  EC17  F098         	call	___fttol	;wreg free
  6305  0104FA  C1A7  F1D8         	movff	?___fttol,printf@val
  6306  0104FE  C1A8  F1D9         	movff	?___fttol+1,printf@val+1
  6307  010502  C1A9  F1DA         	movff	?___fttol+2,printf@val+2
  6308  010506  C1AA  F1DB         	movff	?___fttol+3,printf@val+3
  6309                           
  6310                           ;doprnt.c: 1228: while(c--) {
  6311  01050A  D074               	goto	l966
  6312  01050C                     
  6313                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  6314  01050C  C1D8  F18A         	movff	printf@val,___lldiv@dividend
  6315  010510  C1D9  F18B         	movff	printf@val+1,___lldiv@dividend+1
  6316  010514  C1DA  F18C         	movff	printf@val+2,___lldiv@dividend+2
  6317  010518  C1DB  F18D         	movff	printf@val+3,___lldiv@dividend+3
  6318  01051C  0101               	movlb	1	; () banked
  6319  01051E  51E5               	movf	printf@c& (0+255),w,b
  6320  010520  0D04               	mullw	4
  6321  010522  0E79               	movlw	low _dpowers
  6322  010524  24F3               	addwf	prodl,w,c
  6323  010526  6EF6               	movwf	tblptrl,c
  6324  010528  0EF9               	movlw	high _dpowers
  6325  01052A  20F4               	addwfc	prodh,w,c
  6326  01052C  6EF7               	movwf	tblptrh,c
  6327  01052E                     	if	1	;There are 3 active tblptr bytes
  6328  01052E  6AF8               	clrf	tblptru,c
  6329  010530  0E00               	movlw	low (__mediumconst shr (0+16))
  6330  010532  22F8               	addwfc	tblptru,f,c
  6331  010534                     	endif
  6332  010534  0009               	tblrd		*+
  6333  010536  CFF5 F18E          	movff	tablat,___lldiv@divisor
  6334  01053A  0009               	tblrd		*+
  6335  01053C  CFF5 F18F          	movff	tablat,___lldiv@divisor+1
  6336  010540  0009               	tblrd		*+
  6337  010542  CFF5 F190          	movff	tablat,___lldiv@divisor+2
  6338  010546  000A               	tblrd		*-
  6339  010548  CFF5 F191          	movff	tablat,___lldiv@divisor+3
  6340  01054C  EC87  F09C         	call	___lldiv	;wreg free
  6341  010550  C18A  F1DE         	movff	?___lldiv,printf@tmpval
  6342  010554  C18B  F1DF         	movff	?___lldiv+1,printf@tmpval+1
  6343  010558  C18C  F1E0         	movff	?___lldiv+2,printf@tmpval+2
  6344  01055C  C18D  F1E1         	movff	?___lldiv+3,printf@tmpval+3
  6345                           
  6346                           ;doprnt.c: 1230: tmpval.vd %= 10;
  6347  010560  C1DE  F192         	movff	printf@tmpval,___llmod@dividend
  6348  010564  C1DF  F193         	movff	printf@tmpval+1,___llmod@dividend+1
  6349  010568  C1E0  F194         	movff	printf@tmpval+2,___llmod@dividend+2
  6350  01056C  C1E1  F195         	movff	printf@tmpval+3,___llmod@dividend+3
  6351  010570  0E0A               	movlw	10
  6352  010572  0101               	movlb	1	; () banked
  6353  010574  6F96               	movwf	___llmod@divisor& (0+255),b
  6354  010576  0E00               	movlw	0
  6355  010578  6F97               	movwf	(___llmod@divisor+1)& (0+255),b
  6356  01057A  0E00               	movlw	0
  6357  01057C  6F98               	movwf	(___llmod@divisor+2)& (0+255),b
  6358  01057E  0E00               	movlw	0
  6359  010580  6F99               	movwf	(___llmod@divisor+3)& (0+255),b
  6360  010582  ECE1  F09D         	call	___llmod	;wreg free
  6361  010586  C192  F1DE         	movff	?___llmod,printf@tmpval
  6362  01058A  C193  F1DF         	movff	?___llmod+1,printf@tmpval+1
  6363  01058E  C194  F1E0         	movff	?___llmod+2,printf@tmpval+2
  6364  010592  C195  F1E1         	movff	?___llmod+3,printf@tmpval+3
  6365                           
  6366                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  6367  010596  0101               	movlb	1	; () banked
  6368  010598  51DE               	movf	printf@tmpval& (0+255),w,b
  6369  01059A  0F30               	addlw	48
  6370  01059C  ECDD  F0A2         	call	_putch
  6371                           
  6372                           ;doprnt.c: 1232: val %= dpowers[c];
  6373  0105A0  C1D8  F192         	movff	printf@val,___llmod@dividend
  6374  0105A4  C1D9  F193         	movff	printf@val+1,___llmod@dividend+1
  6375  0105A8  C1DA  F194         	movff	printf@val+2,___llmod@dividend+2
  6376  0105AC  C1DB  F195         	movff	printf@val+3,___llmod@dividend+3
  6377  0105B0  0101               	movlb	1	; () banked
  6378  0105B2  51E5               	movf	printf@c& (0+255),w,b
  6379  0105B4  0D04               	mullw	4
  6380  0105B6  0E79               	movlw	low _dpowers
  6381  0105B8  24F3               	addwf	prodl,w,c
  6382  0105BA  6EF6               	movwf	tblptrl,c
  6383  0105BC  0EF9               	movlw	high _dpowers
  6384  0105BE  20F4               	addwfc	prodh,w,c
  6385  0105C0  6EF7               	movwf	tblptrh,c
  6386  0105C2                     	if	1	;There are 3 active tblptr bytes
  6387  0105C2  6AF8               	clrf	tblptru,c
  6388  0105C4  0E00               	movlw	low (__mediumconst shr (0+16))
  6389  0105C6  22F8               	addwfc	tblptru,f,c
  6390  0105C8                     	endif
  6391  0105C8  0009               	tblrd		*+
  6392  0105CA  CFF5 F196          	movff	tablat,___llmod@divisor
  6393  0105CE  0009               	tblrd		*+
  6394  0105D0  CFF5 F197          	movff	tablat,___llmod@divisor+1
  6395  0105D4  0009               	tblrd		*+
  6396  0105D6  CFF5 F198          	movff	tablat,___llmod@divisor+2
  6397  0105DA  000A               	tblrd		*-
  6398  0105DC  CFF5 F199          	movff	tablat,___llmod@divisor+3
  6399  0105E0  ECE1  F09D         	call	___llmod	;wreg free
  6400  0105E4  C192  F1D8         	movff	?___llmod,printf@val
  6401  0105E8  C193  F1D9         	movff	?___llmod+1,printf@val+1
  6402  0105EC  C194  F1DA         	movff	?___llmod+2,printf@val+2
  6403  0105F0  C195  F1DB         	movff	?___llmod+3,printf@val+3
  6404  0105F4                     l966:
  6405  0105F4  0101               	movlb	1	; () banked
  6406  0105F6  07E5               	decf	printf@c& (0+255),f,b
  6407  0105F8  29E5               	incf	printf@c& (0+255),w,b
  6408  0105FA  B4D8               	btfsc	status,2,c
  6409  0105FC  D008               	goto	l969
  6410  0105FE  D786               	goto	l967
  6411  010600                     
  6412                           ; BSR set to: 1
  6413                           ;doprnt.c: 1236: (putch('0') );
  6414                           
  6415                           ; BSR set to: 1
  6416  010600  0E30               	movlw	48
  6417  010602  ECDD  F0A2         	call	_putch
  6418                           
  6419                           ;doprnt.c: 1237: prec--;
  6420  010606  0101               	movlb	1	; () banked
  6421  010608  07D6               	decf	printf@prec& (0+255),f,b
  6422  01060A  A0D8               	btfss	status,0,c
  6423  01060C  07D7               	decf	(printf@prec+1)& (0+255),f,b
  6424  01060E                     l969:
  6425                           
  6426                           ; BSR set to: 1
  6427                           
  6428                           ; BSR set to: 1
  6429  01060E  51D6               	movf	printf@prec& (0+255),w,b
  6430  010610  11D7               	iorwf	(printf@prec+1)& (0+255),w,b
  6431  010612  B4D8               	btfsc	status,2,c
  6432  010614  D09F               	goto	u7630
  6433  010616  D7F4               	goto	l970
  6434  010618                     l935:
  6435                           
  6436                           ; BSR set to: 1
  6437                           ;doprnt.c: 1246: }
  6438                           ;doprnt.c: 1253: {
  6439                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  6440                           
  6441                           ; BSR set to: 1
  6442  010618  C1D2  FFD9         	movff	printf@ap,fsr2l
  6443  01061C  C1D3  FFDA         	movff	printf@ap+1,fsr2h
  6444  010620  CFDE F1D8          	movff	postinc2,printf@val
  6445  010624  CFDD F1D9          	movff	postdec2,printf@val+1
  6446  010628  0E00               	movlw	0
  6447  01062A  BFD9               	btfsc	(printf@val+1)& (0+255),7,b
  6448  01062C  0EFF               	movlw	-1
  6449  01062E  6FDA               	movwf	(printf@val+2)& (0+255),b
  6450  010630  6FDB               	movwf	(printf@val+3)& (0+255),b
  6451                           
  6452                           ; BSR set to: 1
  6453  010632  0E02               	movlw	2
  6454  010634  27D2               	addwf	printf@ap& (0+255),f,b
  6455  010636  0E00               	movlw	0
  6456  010638  23D3               	addwfc	(printf@ap+1)& (0+255),f,b
  6457                           
  6458                           ; BSR set to: 1
  6459                           ;doprnt.c: 1261: if((long)val < 0) {
  6460  01063A  AFDB               	btfss	(printf@val+3)& (0+255),7,b
  6461  01063C  D00A               	goto	l972
  6462                           
  6463                           ; BSR set to: 1
  6464                           ;doprnt.c: 1262: flag |= 0x03;
  6465  01063E  0E03               	movlw	3
  6466  010640  13D4               	iorwf	printf@flag& (0+255),f,b
  6467                           
  6468                           ; BSR set to: 1
  6469                           ;doprnt.c: 1263: val = -val;
  6470  010642  1FDB               	comf	(printf@val+3)& (0+255),f,b
  6471  010644  1FDA               	comf	(printf@val+2)& (0+255),f,b
  6472  010646  1FD9               	comf	(printf@val+1)& (0+255),f,b
  6473  010648  6DD8               	negf	printf@val& (0+255),b
  6474  01064A  0E00               	movlw	0
  6475  01064C  23D9               	addwfc	(printf@val+1)& (0+255),f,b
  6476  01064E  23DA               	addwfc	(printf@val+2)& (0+255),f,b
  6477  010650  23DB               	addwfc	(printf@val+3)& (0+255),f,b
  6478  010652                     l972:
  6479                           
  6480                           ; BSR set to: 1
  6481                           ;doprnt.c: 1264: }
  6482                           ;doprnt.c: 1266: }
  6483                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6484                           
  6485                           ; BSR set to: 1
  6486  010652  0E01               	movlw	1
  6487  010654  6FE5               	movwf	printf@c& (0+255),b
  6488  010656                     l6742:
  6489                           
  6490                           ; BSR set to: 1
  6491  010656  0E0A               	movlw	10
  6492  010658  19E5               	xorwf	printf@c& (0+255),w,b
  6493  01065A  B4D8               	btfsc	status,2,c
  6494  01065C  D01B               	goto	u7610
  6495                           
  6496                           ; BSR set to: 1
  6497                           ;doprnt.c: 1306: if(val < dpowers[c])
  6498                           
  6499                           ; BSR set to: 1
  6500                           
  6501                           ; BSR set to: 1
  6502  01065E  51E5               	movf	printf@c& (0+255),w,b
  6503  010660  0D04               	mullw	4
  6504  010662  0E79               	movlw	low _dpowers
  6505  010664  24F3               	addwf	prodl,w,c
  6506  010666  6EF6               	movwf	tblptrl,c
  6507  010668  0EF9               	movlw	high _dpowers
  6508  01066A  20F4               	addwfc	prodh,w,c
  6509  01066C  6EF7               	movwf	tblptrh,c
  6510  01066E                     	if	1	;There are 3 active tblptr bytes
  6511  01066E  6AF8               	clrf	tblptru,c
  6512  010670  0E00               	movlw	low (__mediumconst shr (0+16))
  6513  010672  22F8               	addwfc	tblptru,f,c
  6514  010674                     	endif
  6515  010674  0009               	tblrd		*+
  6516  010676  50F5               	movf	tablat,w,c
  6517  010678  5DD8               	subwf	printf@val& (0+255),w,b
  6518  01067A  0009               	tblrd		*+
  6519  01067C  50F5               	movf	tablat,w,c
  6520  01067E  59D9               	subwfb	(printf@val+1)& (0+255),w,b
  6521  010680  0009               	tblrd		*+
  6522  010682  50F5               	movf	tablat,w,c
  6523  010684  59DA               	subwfb	(printf@val+2)& (0+255),w,b
  6524  010686  0009               	tblrd		*+
  6525  010688  50F5               	movf	tablat,w,c
  6526  01068A  59DB               	subwfb	(printf@val+3)& (0+255),w,b
  6527  01068C  A0D8               	btfss	status,0,c
  6528  01068E  D002               	goto	u7610
  6529                           
  6530                           ; BSR set to: 1
  6531                           
  6532                           ; BSR set to: 1
  6533                           
  6534                           ; BSR set to: 1
  6535                           ;doprnt.c: 1307: break;
  6536  010690  2BE5               	incf	printf@c& (0+255),f,b
  6537  010692  D7E1               	goto	l6742
  6538  010694                     u7610:
  6539                           
  6540                           ; BSR set to: 1
  6541                           ;doprnt.c: 1422: {
  6542                           ;doprnt.c: 1438: if(flag & 0x03)
  6543                           
  6544                           ; BSR set to: 1
  6545  010694  0E03               	movlw	3
  6546  010696  15D4               	andwf	printf@flag& (0+255),w,b
  6547  010698  6FC9               	movwf	??_printf& (0+255),b
  6548  01069A  0E00               	movlw	0
  6549  01069C  15D5               	andwf	(printf@flag+1)& (0+255),w,b
  6550  01069E  6FCA               	movwf	(??_printf+1)& (0+255),b
  6551  0106A0  51C9               	movf	??_printf& (0+255),w,b
  6552  0106A2  11CA               	iorwf	(??_printf+1)& (0+255),w,b
  6553  0106A4  B4D8               	btfsc	status,2,c
  6554  0106A6  D003               	goto	l976
  6555                           
  6556                           ; BSR set to: 1
  6557                           ;doprnt.c: 1439: (putch('-') );
  6558  0106A8  0E2D               	movlw	45
  6559  0106AA  ECDD  F0A2         	call	_putch
  6560  0106AE                     l976:
  6561                           
  6562                           ;doprnt.c: 1469: }
  6563                           ;doprnt.c: 1472: prec = c;
  6564  0106AE  0101               	movlb	1	; () banked
  6565  0106B0  51E5               	movf	printf@c& (0+255),w,b
  6566  0106B2  6FD6               	movwf	printf@prec& (0+255),b
  6567  0106B4  6BD7               	clrf	(printf@prec+1)& (0+255),b
  6568  0106B6  BFD6               	btfsc	printf@prec& (0+255),7,b
  6569  0106B8  07D7               	decf	(printf@prec+1)& (0+255),f,b
  6570                           
  6571                           ;doprnt.c: 1474: while(prec--) {
  6572  0106BA  D043               	goto	l977
  6573  0106BC                     l6760:
  6574                           
  6575                           ; BSR set to: 1
  6576                           ;doprnt.c: 1478: {
  6577                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6578  0106BC  C1D6  F1C9         	movff	printf@prec,??_printf
  6579  0106C0  C1D7  F1CA         	movff	printf@prec+1,??_printf+1
  6580  0106C4  90D8               	bcf	status,0,c
  6581  0106C6  37C9               	rlcf	??_printf& (0+255),f,b
  6582  0106C8  37CA               	rlcf	(??_printf+1)& (0+255),f,b
  6583  0106CA  90D8               	bcf	status,0,c
  6584  0106CC  37C9               	rlcf	??_printf& (0+255),f,b
  6585  0106CE  37CA               	rlcf	(??_printf+1)& (0+255),f,b
  6586  0106D0  0E79               	movlw	low _dpowers
  6587  0106D2  25C9               	addwf	??_printf& (0+255),w,b
  6588  0106D4  6EF6               	movwf	tblptrl,c
  6589  0106D6  0EF9               	movlw	high _dpowers
  6590  0106D8  21CA               	addwfc	(??_printf+1)& (0+255),w,b
  6591  0106DA  6EF7               	movwf	tblptrh,c
  6592  0106DC                     	if	1	;There are 3 active tblptr bytes
  6593  0106DC  6AF8               	clrf	tblptru,c
  6594  0106DE  0E00               	movlw	low (__mediumconst shr (0+16))
  6595  0106E0  22F8               	addwfc	tblptru,f,c
  6596  0106E2                     	endif
  6597  0106E2  0009               	tblrd		*+
  6598  0106E4  CFF5 F18E          	movff	tablat,___lldiv@divisor
  6599  0106E8  0009               	tblrd		*+
  6600  0106EA  CFF5 F18F          	movff	tablat,___lldiv@divisor+1
  6601  0106EE  0009               	tblrd		*+
  6602  0106F0  CFF5 F190          	movff	tablat,___lldiv@divisor+2
  6603  0106F4  000A               	tblrd		*-
  6604  0106F6  CFF5 F191          	movff	tablat,___lldiv@divisor+3
  6605  0106FA  C1D8  F18A         	movff	printf@val,___lldiv@dividend
  6606  0106FE  C1D9  F18B         	movff	printf@val+1,___lldiv@dividend+1
  6607  010702  C1DA  F18C         	movff	printf@val+2,___lldiv@dividend+2
  6608  010706  C1DB  F18D         	movff	printf@val+3,___lldiv@dividend+3
  6609  01070A  EC87  F09C         	call	___lldiv	;wreg free
  6610  01070E  C18A  F192         	movff	?___lldiv,___llmod@dividend
  6611  010712  C18B  F193         	movff	?___lldiv+1,___llmod@dividend+1
  6612  010716  C18C  F194         	movff	?___lldiv+2,___llmod@dividend+2
  6613  01071A  C18D  F195         	movff	?___lldiv+3,___llmod@dividend+3
  6614  01071E  0E0A               	movlw	10
  6615  010720  0101               	movlb	1	; () banked
  6616  010722  6F96               	movwf	___llmod@divisor& (0+255),b
  6617  010724  0E00               	movlw	0
  6618  010726  6F97               	movwf	(___llmod@divisor+1)& (0+255),b
  6619  010728  0E00               	movlw	0
  6620  01072A  6F98               	movwf	(___llmod@divisor+2)& (0+255),b
  6621  01072C  0E00               	movlw	0
  6622  01072E  6F99               	movwf	(___llmod@divisor+3)& (0+255),b
  6623  010730  ECE1  F09D         	call	___llmod	;wreg free
  6624  010734  0101               	movlb	1	; () banked
  6625  010736  5192               	movf	?___llmod& (0+255),w,b
  6626  010738  0F30               	addlw	48
  6627  01073A  6FE5               	movwf	printf@c& (0+255),b
  6628                           
  6629                           ; BSR set to: 1
  6630                           ;doprnt.c: 1523: }
  6631                           ;doprnt.c: 1524: (putch(c) );
  6632  01073C  51E5               	movf	printf@c& (0+255),w,b
  6633  01073E  ECDD  F0A2         	call	_putch
  6634  010742                     l977:
  6635  010742  0101               	movlb	1	; () banked
  6636  010744  07D6               	decf	printf@prec& (0+255),f,b
  6637  010746  A0D8               	btfss	status,0,c
  6638  010748  07D7               	decf	(printf@prec+1)& (0+255),f,b
  6639  01074A  29D6               	incf	printf@prec& (0+255),w,b
  6640  01074C  E1B7               	bnz	l6760
  6641  01074E  29D7               	incf	(printf@prec+1)& (0+255),w,b
  6642  010750  A4D8               	btfss	status,2,c
  6643  010752  D7B4               	goto	l978
  6644  010754                     u7630:
  6645                           
  6646                           ; BSR set to: 1
  6647                           
  6648                           ; BSR set to: 1
  6649  010754  0101               	movlb	1	; () banked
  6650  010756  51C3               	movf	printf@f& (0+255),w,b
  6651  010758  6FC9               	movwf	??_printf& (0+255),b
  6652  01075A  51C4               	movf	(printf@f+1)& (0+255),w,b
  6653  01075C  6FCA               	movwf	(??_printf+1)& (0+255),b
  6654  01075E  4BC3               	infsnz	printf@f& (0+255),f,b
  6655  010760  2BC4               	incf	(printf@f+1)& (0+255),f,b
  6656  010762  C1C9  FFF6         	movff	??_printf,tblptrl
  6657  010766  C1CA  FFF7         	movff	??_printf+1,tblptrh
  6658  01076A  0E00               	movlw	low (__mediumconst shr (0+16))
  6659  01076C  6EF8               	movwf	tblptru,c
  6660  01076E  0E0D               	movlw	(high __ramtop+-1)
  6661  010770  64F7               	cpfsgt	tblptrh,c
  6662  010772  D003               	bra	u7647
  6663  010774  0008               	tblrd		*
  6664  010776  50F5               	movf	tablat,w,c
  6665  010778  D005               	bra	u7640
  6666  01077A                     u7647:
  6667  01077A  CFF6 FFD9          	movff	tblptrl,fsr2l
  6668  01077E  CFF7 FFDA          	movff	tblptrh,fsr2h
  6669  010782  50DF               	movf	indf2,w,c
  6670  010784                     u7640:
  6671  010784  0101               	movlb	1	; () banked
  6672  010786  6FE5               	movwf	printf@c& (0+255),b
  6673  010788  51E5               	movf	printf@c& (0+255),w,b
  6674  01078A  B4D8               	btfsc	status,2,c
  6675  01078C  0012               	return	
  6676  01078E  D43E               	goto	l925
  6677  010790                     __end_of_printf:
  6678                           	opt stack 0
  6679                           tblptru	equ	0xFF8
  6680                           tblptrh	equ	0xFF7
  6681                           tblptrl	equ	0xFF6
  6682                           tablat	equ	0xFF5
  6683                           prodh	equ	0xFF4
  6684                           prodl	equ	0xFF3
  6685                           intcon	equ	0xFF2
  6686                           postinc0	equ	0xFEE
  6687                           wreg	equ	0xFE8
  6688                           indf2	equ	0xFDF
  6689                           postinc2	equ	0xFDE
  6690                           postdec2	equ	0xFDD
  6691                           fsr2h	equ	0xFDA
  6692                           fsr2l	equ	0xFD9
  6693                           status	equ	0xFD8
  6694                           
  6695 ;; *************** function _scale *****************
  6696 ;; Defined at:
  6697 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;  scl             1    wreg     char 
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;  scl             1   35[BANK1 ] char 
  6702 ;; Return value:  Size  Location     Type
  6703 ;;                  3   29[BANK1 ] char 
  6704 ;; Registers used:
  6705 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6711 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6712 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6714 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6715 ;;Total ram usage:        7 bytes
  6716 ;; Hardware stack levels used:    1
  6717 ;; Hardware stack levels required when called:   12
  6718 ;; This function calls:
  6719 ;;		___awdiv
  6720 ;;		___awmod
  6721 ;;		___ftmul
  6722 ;;		___wmul
  6723 ;; This function is called by:
  6724 ;;		_printf
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           	psect	text14
  6729  010F0A                     __ptext14:
  6730                           	opt stack 0
  6731  010F0A                     _scale:
  6732                           	opt stack 15
  6733                           
  6734                           ; BSR set to: 1
  6735                           ;incstack = 0
  6736                           ;scale@scl stored from wreg
  6737  010F0A  0101               	movlb	1	; () banked
  6738  010F0C  6FAD               	movwf	scale@scl& (0+255),b
  6739                           
  6740                           ;doprnt.c: 428: if(scl < 0) {
  6741  010F0E  0101               	movlb	1	; () banked
  6742  010F10  AFAD               	btfss	scale@scl& (0+255),7,b
  6743  010F12  D127               	goto	l914
  6744                           
  6745                           ; BSR set to: 1
  6746                           ;doprnt.c: 429: scl = -scl;
  6747  010F14  6DAD               	negf	scale@scl& (0+255),b
  6748                           
  6749                           ;doprnt.c: 430: if(scl>=110)
  6750  010F16  51AD               	movf	scale@scl& (0+255),w,b
  6751  010F18  0A80               	xorlw	128
  6752  010F1A  0F12               	addlw	-238
  6753  010F1C  A0D8               	btfss	status,0,c
  6754  010F1E  D0A6               	goto	l915
  6755                           
  6756                           ; BSR set to: 1
  6757                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6758  010F20  0E00               	movlw	0
  6759  010F22  6F95               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6760  010F24  0E03               	movlw	3
  6761  010F26  6F94               	movwf	___wmul@multiplicand& (0+255),b
  6762  010F28  0E00               	movlw	0
  6763  010F2A  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6764  010F2C  0E0A               	movlw	10
  6765  010F2E  6F8C               	movwf	___awdiv@divisor& (0+255),b
  6766  010F30  0E00               	movlw	0
  6767  010F32  0100               	movlb	0	; () banked
  6768  010F34  6FA3               	movwf	(___awmod@divisor+1)& (0+255),b
  6769  010F36  0E64               	movlw	100
  6770  010F38  6FA2               	movwf	___awmod@divisor& (0+255),b
  6771  010F3A  0101               	movlb	1	; () banked
  6772  010F3C  51AD               	movf	scale@scl& (0+255),w,b
  6773  010F3E  0100               	movlb	0	; () banked
  6774  010F40  6FA0               	movwf	___awmod@dividend& (0+255),b
  6775  010F42  6BA1               	clrf	(___awmod@dividend+1)& (0+255),b
  6776  010F44  BFA0               	btfsc	___awmod@dividend& (0+255),7,b
  6777  010F46  07A1               	decf	(___awmod@dividend+1)& (0+255),f,b
  6778  010F48  EC1B  F09E         	call	___awmod	;wreg free
  6779  010F4C  C0A0  F18A         	movff	?___awmod,___awdiv@dividend
  6780  010F50  C0A1  F18B         	movff	?___awmod+1,___awdiv@dividend+1
  6781  010F54  EC1B  F09D         	call	___awdiv	;wreg free
  6782  010F58  0E09               	movlw	9
  6783  010F5A  0101               	movlb	1	; () banked
  6784  010F5C  258A               	addwf	?___awdiv& (0+255),w,b
  6785  010F5E  6F92               	movwf	___wmul@multiplier& (0+255),b
  6786  010F60  0E00               	movlw	0
  6787  010F62  218B               	addwfc	(?___awdiv+1)& (0+255),w,b
  6788  010F64  6F93               	movwf	(___wmul@multiplier+1)& (0+255),b
  6789  010F66  ECE3  F0A1         	call	___wmul	;wreg free
  6790  010F6A  0EC8               	movlw	low __npowers_
  6791  010F6C  0101               	movlb	1	; () banked
  6792  010F6E  2592               	addwf	?___wmul& (0+255),w,b
  6793  010F70  6EF6               	movwf	tblptrl,c
  6794  010F72  0EF9               	movlw	high __npowers_
  6795  010F74  2193               	addwfc	(?___wmul+1)& (0+255),w,b
  6796  010F76  6EF7               	movwf	tblptrh,c
  6797  010F78                     	if	1	;There are 3 active tblptr bytes
  6798  010F78  6AF8               	clrf	tblptru,c
  6799  010F7A  0E00               	movlw	low (__mediumconst shr (0+16))
  6800  010F7C  22F8               	addwfc	tblptru,f,c
  6801  010F7E                     	endif
  6802  010F7E  0009               	tblrd		*+
  6803  010F80  CFF5 F19B          	movff	tablat,___ftmul@f2
  6804  010F84  0009               	tblrd		*+
  6805  010F86  CFF5 F19C          	movff	tablat,___ftmul@f2+1
  6806  010F8A  000A               	tblrd		*-
  6807  010F8C  CFF5 F19D          	movff	tablat,___ftmul@f2+2
  6808  010F90  0E00               	movlw	0
  6809  010F92  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6810  010F94  0E64               	movlw	100
  6811  010F96  6F8C               	movwf	___awdiv@divisor& (0+255),b
  6812  010F98  51AD               	movf	scale@scl& (0+255),w,b
  6813  010F9A  6F8A               	movwf	___awdiv@dividend& (0+255),b
  6814  010F9C  6B8B               	clrf	(___awdiv@dividend+1)& (0+255),b
  6815  010F9E  BF8A               	btfsc	___awdiv@dividend& (0+255),7,b
  6816  010FA0  078B               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6817  010FA2  EC1B  F09D         	call	___awdiv	;wreg free
  6818  010FA6  0E12               	movlw	18
  6819  010FA8  0101               	movlb	1	; () banked
  6820  010FAA  258A               	addwf	?___awdiv& (0+255),w,b
  6821  010FAC  6F92               	movwf	___wmul@multiplier& (0+255),b
  6822  010FAE  0E00               	movlw	0
  6823  010FB0  218B               	addwfc	(?___awdiv+1)& (0+255),w,b
  6824  010FB2  6F93               	movwf	(___wmul@multiplier+1)& (0+255),b
  6825  010FB4  0E00               	movlw	0
  6826  010FB6  6F95               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6827  010FB8  0E03               	movlw	3
  6828  010FBA  6F94               	movwf	___wmul@multiplicand& (0+255),b
  6829  010FBC  ECE3  F0A1         	call	___wmul	;wreg free
  6830  010FC0  0EC8               	movlw	low __npowers_
  6831  010FC2  0101               	movlb	1	; () banked
  6832  010FC4  2592               	addwf	?___wmul& (0+255),w,b
  6833  010FC6  6EF6               	movwf	tblptrl,c
  6834  010FC8  0EF9               	movlw	high __npowers_
  6835  010FCA  2193               	addwfc	(?___wmul+1)& (0+255),w,b
  6836  010FCC  6EF7               	movwf	tblptrh,c
  6837  010FCE                     	if	1	;There are 3 active tblptr bytes
  6838  010FCE  6AF8               	clrf	tblptru,c
  6839  010FD0  0E00               	movlw	low (__mediumconst shr (0+16))
  6840  010FD2  22F8               	addwfc	tblptru,f,c
  6841  010FD4                     	endif
  6842  010FD4  0009               	tblrd		*+
  6843  010FD6  CFF5 F198          	movff	tablat,___ftmul@f1
  6844  010FDA  0009               	tblrd		*+
  6845  010FDC  CFF5 F199          	movff	tablat,___ftmul@f1+1
  6846  010FE0  000A               	tblrd		*-
  6847  010FE2  CFF5 F19A          	movff	tablat,___ftmul@f1+2
  6848  010FE6  EC93  F098         	call	___ftmul	;wreg free
  6849  010FEA  C198  F1AA         	movff	?___ftmul,_scale$2621
  6850  010FEE  C199  F1AB         	movff	?___ftmul+1,_scale$2621+1
  6851  010FF2  C19A  F1AC         	movff	?___ftmul+2,_scale$2621+2
  6852                           
  6853                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6854  010FF6  C1AA  F198         	movff	_scale$2621,___ftmul@f1
  6855  010FFA  C1AB  F199         	movff	_scale$2621+1,___ftmul@f1+1
  6856  010FFE  C1AC  F19A         	movff	_scale$2621+2,___ftmul@f1+2
  6857  011002  0E00               	movlw	0
  6858  011004  0101               	movlb	1	; () banked
  6859  011006  6F95               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6860  011008  0E03               	movlw	3
  6861  01100A  6F94               	movwf	___wmul@multiplicand& (0+255),b
  6862  01100C  0E00               	movlw	0
  6863  01100E  0100               	movlb	0	; () banked
  6864  011010  6FA3               	movwf	(___awmod@divisor+1)& (0+255),b
  6865  011012  0E0A               	movlw	10
  6866  011014  6FA2               	movwf	___awmod@divisor& (0+255),b
  6867  011016  0101               	movlb	1	; () banked
  6868  011018  51AD               	movf	scale@scl& (0+255),w,b
  6869  01101A  0100               	movlb	0	; () banked
  6870  01101C  6FA0               	movwf	___awmod@dividend& (0+255),b
  6871  01101E  6BA1               	clrf	(___awmod@dividend+1)& (0+255),b
  6872  011020  BFA0               	btfsc	___awmod@dividend& (0+255),7,b
  6873  011022  07A1               	decf	(___awmod@dividend+1)& (0+255),f,b
  6874  011024  EC1B  F09E         	call	___awmod	;wreg free
  6875  011028  C0A0  F192         	movff	?___awmod,___wmul@multiplier
  6876  01102C  C0A1  F193         	movff	?___awmod+1,___wmul@multiplier+1
  6877  011030  ECE3  F0A1         	call	___wmul	;wreg free
  6878  011034  0EC8               	movlw	low __npowers_
  6879  011036  0101               	movlb	1	; () banked
  6880  011038  2592               	addwf	?___wmul& (0+255),w,b
  6881  01103A  6EF6               	movwf	tblptrl,c
  6882  01103C  0EF9               	movlw	high __npowers_
  6883  01103E  2193               	addwfc	(?___wmul+1)& (0+255),w,b
  6884  011040  6EF7               	movwf	tblptrh,c
  6885  011042                     	if	1	;There are 3 active tblptr bytes
  6886  011042  6AF8               	clrf	tblptru,c
  6887  011044  0E00               	movlw	low (__mediumconst shr (0+16))
  6888  011046  22F8               	addwfc	tblptru,f,c
  6889  011048                     	endif
  6890  011048  0009               	tblrd		*+
  6891  01104A  CFF5 F19B          	movff	tablat,___ftmul@f2
  6892  01104E  0009               	tblrd		*+
  6893  011050  CFF5 F19C          	movff	tablat,___ftmul@f2+1
  6894  011054  000A               	tblrd		*-
  6895  011056  CFF5 F19D          	movff	tablat,___ftmul@f2+2
  6896  01105A  EC93  F098         	call	___ftmul	;wreg free
  6897  01105E  C198  F1A7         	movff	?___ftmul,?_scale
  6898  011062  C199  F1A8         	movff	?___ftmul+1,?_scale+1
  6899  011066  C19A  F1A9         	movff	?___ftmul+2,?_scale+2
  6900  01106A  0012               	return	
  6901  01106C                     l915:
  6902                           
  6903                           ;doprnt.c: 432: else if(scl > 10)
  6904  01106C  0101               	movlb	1	; () banked
  6905  01106E  51AD               	movf	scale@scl& (0+255),w,b
  6906  011070  0A80               	xorlw	128
  6907  011072  0F75               	addlw	-139
  6908  011074  A0D8               	btfss	status,0,c
  6909  011076  D05F               	goto	l918
  6910                           
  6911                           ; BSR set to: 1
  6912                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6913  011078  0E00               	movlw	0
  6914  01107A  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6915  01107C  0E0A               	movlw	10
  6916  01107E  6F8C               	movwf	___awdiv@divisor& (0+255),b
  6917  011080  51AD               	movf	scale@scl& (0+255),w,b
  6918  011082  6F8A               	movwf	___awdiv@dividend& (0+255),b
  6919  011084  6B8B               	clrf	(___awdiv@dividend+1)& (0+255),b
  6920  011086  BF8A               	btfsc	___awdiv@dividend& (0+255),7,b
  6921  011088  078B               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6922  01108A  EC1B  F09D         	call	___awdiv	;wreg free
  6923  01108E  0E09               	movlw	9
  6924  011090  0101               	movlb	1	; () banked
  6925  011092  258A               	addwf	?___awdiv& (0+255),w,b
  6926  011094  6F92               	movwf	___wmul@multiplier& (0+255),b
  6927  011096  0E00               	movlw	0
  6928  011098  218B               	addwfc	(?___awdiv+1)& (0+255),w,b
  6929  01109A  6F93               	movwf	(___wmul@multiplier+1)& (0+255),b
  6930  01109C  0E00               	movlw	0
  6931  01109E  6F95               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6932  0110A0  0E03               	movlw	3
  6933  0110A2  6F94               	movwf	___wmul@multiplicand& (0+255),b
  6934  0110A4  ECE3  F0A1         	call	___wmul	;wreg free
  6935  0110A8  0EC8               	movlw	low __npowers_
  6936  0110AA  0101               	movlb	1	; () banked
  6937  0110AC  2592               	addwf	?___wmul& (0+255),w,b
  6938  0110AE  6EF6               	movwf	tblptrl,c
  6939  0110B0  0EF9               	movlw	high __npowers_
  6940  0110B2  2193               	addwfc	(?___wmul+1)& (0+255),w,b
  6941  0110B4  6EF7               	movwf	tblptrh,c
  6942  0110B6                     	if	1	;There are 3 active tblptr bytes
  6943  0110B6  6AF8               	clrf	tblptru,c
  6944  0110B8  0E00               	movlw	low (__mediumconst shr (0+16))
  6945  0110BA  22F8               	addwfc	tblptru,f,c
  6946  0110BC                     	endif
  6947  0110BC  0009               	tblrd		*+
  6948  0110BE  CFF5 F198          	movff	tablat,___ftmul@f1
  6949  0110C2  0009               	tblrd		*+
  6950  0110C4  CFF5 F199          	movff	tablat,___ftmul@f1+1
  6951  0110C8  000A               	tblrd		*-
  6952  0110CA  CFF5 F19A          	movff	tablat,___ftmul@f1+2
  6953  0110CE  0E00               	movlw	0
  6954  0110D0  6F95               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6955  0110D2  0E03               	movlw	3
  6956  0110D4  6F94               	movwf	___wmul@multiplicand& (0+255),b
  6957  0110D6  0E00               	movlw	0
  6958  0110D8  0100               	movlb	0	; () banked
  6959  0110DA  6FA3               	movwf	(___awmod@divisor+1)& (0+255),b
  6960  0110DC  0E0A               	movlw	10
  6961  0110DE  6FA2               	movwf	___awmod@divisor& (0+255),b
  6962  0110E0  0101               	movlb	1	; () banked
  6963  0110E2  51AD               	movf	scale@scl& (0+255),w,b
  6964  0110E4  0100               	movlb	0	; () banked
  6965  0110E6  6FA0               	movwf	___awmod@dividend& (0+255),b
  6966  0110E8  6BA1               	clrf	(___awmod@dividend+1)& (0+255),b
  6967  0110EA  BFA0               	btfsc	___awmod@dividend& (0+255),7,b
  6968  0110EC  07A1               	decf	(___awmod@dividend+1)& (0+255),f,b
  6969  0110EE  EC1B  F09E         	call	___awmod	;wreg free
  6970  0110F2  C0A0  F192         	movff	?___awmod,___wmul@multiplier
  6971  0110F6  C0A1  F193         	movff	?___awmod+1,___wmul@multiplier+1
  6972  0110FA  ECE3  F0A1         	call	___wmul	;wreg free
  6973  0110FE  0EC8               	movlw	low __npowers_
  6974  011100  0101               	movlb	1	; () banked
  6975  011102  2592               	addwf	?___wmul& (0+255),w,b
  6976  011104  6EF6               	movwf	tblptrl,c
  6977  011106  0EF9               	movlw	high __npowers_
  6978  011108  2193               	addwfc	(?___wmul+1)& (0+255),w,b
  6979  01110A  6EF7               	movwf	tblptrh,c
  6980  01110C                     	if	1	;There are 3 active tblptr bytes
  6981  01110C  6AF8               	clrf	tblptru,c
  6982  01110E  0E00               	movlw	low (__mediumconst shr (0+16))
  6983  011110  22F8               	addwfc	tblptru,f,c
  6984  011112                     	endif
  6985  011112  0009               	tblrd		*+
  6986  011114  CFF5 F19B          	movff	tablat,___ftmul@f2
  6987  011118  0009               	tblrd		*+
  6988  01111A  CFF5 F19C          	movff	tablat,___ftmul@f2+1
  6989  01111E  000A               	tblrd		*-
  6990  011120  CFF5 F19D          	movff	tablat,___ftmul@f2+2
  6991  011124  EC93  F098         	call	___ftmul	;wreg free
  6992  011128  C198  F1A7         	movff	?___ftmul,?_scale
  6993  01112C  C199  F1A8         	movff	?___ftmul+1,?_scale+1
  6994  011130  C19A  F1A9         	movff	?___ftmul+2,?_scale+2
  6995  011134  0012               	return	
  6996  011136                     l918:
  6997                           
  6998                           ;doprnt.c: 434: return _npowers_[scl];
  6999  011136  0101               	movlb	1	; () banked
  7000  011138  51AD               	movf	scale@scl& (0+255),w,b
  7001  01113A  0D03               	mullw	3
  7002  01113C  0EC8               	movlw	low __npowers_
  7003  01113E  24F3               	addwf	prodl,w,c
  7004  011140  6EF6               	movwf	tblptrl,c
  7005  011142  0EF9               	movlw	high __npowers_
  7006  011144  20F4               	addwfc	prodh,w,c
  7007  011146  6EF7               	movwf	tblptrh,c
  7008  011148                     	if	1	;There are 3 active tblptr bytes
  7009  011148  6AF8               	clrf	tblptru,c
  7010  01114A  0E00               	movlw	low (__mediumconst shr (0+16))
  7011  01114C  22F8               	addwfc	tblptru,f,c
  7012  01114E                     	endif
  7013  01114E  0009               	tblrd		*+
  7014  011150  CFF5 F1A7          	movff	tablat,?_scale
  7015  011154  0009               	tblrd		*+
  7016  011156  CFF5 F1A8          	movff	tablat,?_scale+1
  7017  01115A  000A               	tblrd		*-
  7018  01115C  CFF5 F1A9          	movff	tablat,?_scale+2
  7019                           
  7020                           ; BSR set to: 1
  7021  011160  0012               	return	
  7022  011162                     l914:
  7023                           
  7024                           ; BSR set to: 1
  7025                           ;doprnt.c: 435: }
  7026                           ;doprnt.c: 436: if(scl>=110)
  7027                           
  7028                           ; BSR set to: 1
  7029  011162  51AD               	movf	scale@scl& (0+255),w,b
  7030  011164  0A80               	xorlw	128
  7031  011166  0F12               	addlw	-238
  7032  011168  A0D8               	btfss	status,0,c
  7033  01116A  D0A6               	goto	l919
  7034                           
  7035                           ; BSR set to: 1
  7036                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7037  01116C  0E00               	movlw	0
  7038  01116E  6F95               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7039  011170  0E03               	movlw	3
  7040  011172  6F94               	movwf	___wmul@multiplicand& (0+255),b
  7041  011174  0E00               	movlw	0
  7042  011176  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  7043  011178  0E0A               	movlw	10
  7044  01117A  6F8C               	movwf	___awdiv@divisor& (0+255),b
  7045  01117C  0E00               	movlw	0
  7046  01117E  0100               	movlb	0	; () banked
  7047  011180  6FA3               	movwf	(___awmod@divisor+1)& (0+255),b
  7048  011182  0E64               	movlw	100
  7049  011184  6FA2               	movwf	___awmod@divisor& (0+255),b
  7050  011186  0101               	movlb	1	; () banked
  7051  011188  51AD               	movf	scale@scl& (0+255),w,b
  7052  01118A  0100               	movlb	0	; () banked
  7053  01118C  6FA0               	movwf	___awmod@dividend& (0+255),b
  7054  01118E  6BA1               	clrf	(___awmod@dividend+1)& (0+255),b
  7055  011190  BFA0               	btfsc	___awmod@dividend& (0+255),7,b
  7056  011192  07A1               	decf	(___awmod@dividend+1)& (0+255),f,b
  7057  011194  EC1B  F09E         	call	___awmod	;wreg free
  7058  011198  C0A0  F18A         	movff	?___awmod,___awdiv@dividend
  7059  01119C  C0A1  F18B         	movff	?___awmod+1,___awdiv@dividend+1
  7060  0111A0  EC1B  F09D         	call	___awdiv	;wreg free
  7061  0111A4  0E09               	movlw	9
  7062  0111A6  0101               	movlb	1	; () banked
  7063  0111A8  258A               	addwf	?___awdiv& (0+255),w,b
  7064  0111AA  6F92               	movwf	___wmul@multiplier& (0+255),b
  7065  0111AC  0E00               	movlw	0
  7066  0111AE  218B               	addwfc	(?___awdiv+1)& (0+255),w,b
  7067  0111B0  6F93               	movwf	(___wmul@multiplier+1)& (0+255),b
  7068  0111B2  ECE3  F0A1         	call	___wmul	;wreg free
  7069  0111B6  0EA1               	movlw	low __powers_
  7070  0111B8  0101               	movlb	1	; () banked
  7071  0111BA  2592               	addwf	?___wmul& (0+255),w,b
  7072  0111BC  6EF6               	movwf	tblptrl,c
  7073  0111BE  0EF9               	movlw	high __powers_
  7074  0111C0  2193               	addwfc	(?___wmul+1)& (0+255),w,b
  7075  0111C2  6EF7               	movwf	tblptrh,c
  7076  0111C4                     	if	1	;There are 3 active tblptr bytes
  7077  0111C4  6AF8               	clrf	tblptru,c
  7078  0111C6  0E00               	movlw	low (__mediumconst shr (0+16))
  7079  0111C8  22F8               	addwfc	tblptru,f,c
  7080  0111CA                     	endif
  7081  0111CA  0009               	tblrd		*+
  7082  0111CC  CFF5 F19B          	movff	tablat,___ftmul@f2
  7083  0111D0  0009               	tblrd		*+
  7084  0111D2  CFF5 F19C          	movff	tablat,___ftmul@f2+1
  7085  0111D6  000A               	tblrd		*-
  7086  0111D8  CFF5 F19D          	movff	tablat,___ftmul@f2+2
  7087  0111DC  0E00               	movlw	0
  7088  0111DE  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  7089  0111E0  0E64               	movlw	100
  7090  0111E2  6F8C               	movwf	___awdiv@divisor& (0+255),b
  7091  0111E4  51AD               	movf	scale@scl& (0+255),w,b
  7092  0111E6  6F8A               	movwf	___awdiv@dividend& (0+255),b
  7093  0111E8  6B8B               	clrf	(___awdiv@dividend+1)& (0+255),b
  7094  0111EA  BF8A               	btfsc	___awdiv@dividend& (0+255),7,b
  7095  0111EC  078B               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7096  0111EE  EC1B  F09D         	call	___awdiv	;wreg free
  7097  0111F2  0E12               	movlw	18
  7098  0111F4  0101               	movlb	1	; () banked
  7099  0111F6  258A               	addwf	?___awdiv& (0+255),w,b
  7100  0111F8  6F92               	movwf	___wmul@multiplier& (0+255),b
  7101  0111FA  0E00               	movlw	0
  7102  0111FC  218B               	addwfc	(?___awdiv+1)& (0+255),w,b
  7103  0111FE  6F93               	movwf	(___wmul@multiplier+1)& (0+255),b
  7104  011200  0E00               	movlw	0
  7105  011202  6F95               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7106  011204  0E03               	movlw	3
  7107  011206  6F94               	movwf	___wmul@multiplicand& (0+255),b
  7108  011208  ECE3  F0A1         	call	___wmul	;wreg free
  7109  01120C  0EA1               	movlw	low __powers_
  7110  01120E  0101               	movlb	1	; () banked
  7111  011210  2592               	addwf	?___wmul& (0+255),w,b
  7112  011212  6EF6               	movwf	tblptrl,c
  7113  011214  0EF9               	movlw	high __powers_
  7114  011216  2193               	addwfc	(?___wmul+1)& (0+255),w,b
  7115  011218  6EF7               	movwf	tblptrh,c
  7116  01121A                     	if	1	;There are 3 active tblptr bytes
  7117  01121A  6AF8               	clrf	tblptru,c
  7118  01121C  0E00               	movlw	low (__mediumconst shr (0+16))
  7119  01121E  22F8               	addwfc	tblptru,f,c
  7120  011220                     	endif
  7121  011220  0009               	tblrd		*+
  7122  011222  CFF5 F198          	movff	tablat,___ftmul@f1
  7123  011226  0009               	tblrd		*+
  7124  011228  CFF5 F199          	movff	tablat,___ftmul@f1+1
  7125  01122C  000A               	tblrd		*-
  7126  01122E  CFF5 F19A          	movff	tablat,___ftmul@f1+2
  7127  011232  EC93  F098         	call	___ftmul	;wreg free
  7128  011236  C198  F1AA         	movff	?___ftmul,_scale$2621
  7129  01123A  C199  F1AB         	movff	?___ftmul+1,_scale$2621+1
  7130  01123E  C19A  F1AC         	movff	?___ftmul+2,_scale$2621+2
  7131                           
  7132                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7133  011242  C1AA  F198         	movff	_scale$2621,___ftmul@f1
  7134  011246  C1AB  F199         	movff	_scale$2621+1,___ftmul@f1+1
  7135  01124A  C1AC  F19A         	movff	_scale$2621+2,___ftmul@f1+2
  7136  01124E  0E00               	movlw	0
  7137  011250  0101               	movlb	1	; () banked
  7138  011252  6F95               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7139  011254  0E03               	movlw	3
  7140  011256  6F94               	movwf	___wmul@multiplicand& (0+255),b
  7141  011258  0E00               	movlw	0
  7142  01125A  0100               	movlb	0	; () banked
  7143  01125C  6FA3               	movwf	(___awmod@divisor+1)& (0+255),b
  7144  01125E  0E0A               	movlw	10
  7145  011260  6FA2               	movwf	___awmod@divisor& (0+255),b
  7146  011262  0101               	movlb	1	; () banked
  7147  011264  51AD               	movf	scale@scl& (0+255),w,b
  7148  011266  0100               	movlb	0	; () banked
  7149  011268  6FA0               	movwf	___awmod@dividend& (0+255),b
  7150  01126A  6BA1               	clrf	(___awmod@dividend+1)& (0+255),b
  7151  01126C  BFA0               	btfsc	___awmod@dividend& (0+255),7,b
  7152  01126E  07A1               	decf	(___awmod@dividend+1)& (0+255),f,b
  7153  011270  EC1B  F09E         	call	___awmod	;wreg free
  7154  011274  C0A0  F192         	movff	?___awmod,___wmul@multiplier
  7155  011278  C0A1  F193         	movff	?___awmod+1,___wmul@multiplier+1
  7156  01127C  ECE3  F0A1         	call	___wmul	;wreg free
  7157  011280  0EA1               	movlw	low __powers_
  7158  011282  0101               	movlb	1	; () banked
  7159  011284  2592               	addwf	?___wmul& (0+255),w,b
  7160  011286  6EF6               	movwf	tblptrl,c
  7161  011288  0EF9               	movlw	high __powers_
  7162  01128A  2193               	addwfc	(?___wmul+1)& (0+255),w,b
  7163  01128C  6EF7               	movwf	tblptrh,c
  7164  01128E                     	if	1	;There are 3 active tblptr bytes
  7165  01128E  6AF8               	clrf	tblptru,c
  7166  011290  0E00               	movlw	low (__mediumconst shr (0+16))
  7167  011292  22F8               	addwfc	tblptru,f,c
  7168  011294                     	endif
  7169  011294  0009               	tblrd		*+
  7170  011296  CFF5 F19B          	movff	tablat,___ftmul@f2
  7171  01129A  0009               	tblrd		*+
  7172  01129C  CFF5 F19C          	movff	tablat,___ftmul@f2+1
  7173  0112A0  000A               	tblrd		*-
  7174  0112A2  CFF5 F19D          	movff	tablat,___ftmul@f2+2
  7175  0112A6  EC93  F098         	call	___ftmul	;wreg free
  7176  0112AA  C198  F1A7         	movff	?___ftmul,?_scale
  7177  0112AE  C199  F1A8         	movff	?___ftmul+1,?_scale+1
  7178  0112B2  C19A  F1A9         	movff	?___ftmul+2,?_scale+2
  7179  0112B6  0012               	return	
  7180  0112B8                     l919:
  7181                           
  7182                           ;doprnt.c: 438: else if(scl > 10)
  7183  0112B8  0101               	movlb	1	; () banked
  7184  0112BA  51AD               	movf	scale@scl& (0+255),w,b
  7185  0112BC  0A80               	xorlw	128
  7186  0112BE  0F75               	addlw	-139
  7187  0112C0  A0D8               	btfss	status,0,c
  7188  0112C2  D05F               	goto	l921
  7189                           
  7190                           ; BSR set to: 1
  7191                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7192  0112C4  0E00               	movlw	0
  7193  0112C6  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  7194  0112C8  0E0A               	movlw	10
  7195  0112CA  6F8C               	movwf	___awdiv@divisor& (0+255),b
  7196  0112CC  51AD               	movf	scale@scl& (0+255),w,b
  7197  0112CE  6F8A               	movwf	___awdiv@dividend& (0+255),b
  7198  0112D0  6B8B               	clrf	(___awdiv@dividend+1)& (0+255),b
  7199  0112D2  BF8A               	btfsc	___awdiv@dividend& (0+255),7,b
  7200  0112D4  078B               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7201  0112D6  EC1B  F09D         	call	___awdiv	;wreg free
  7202  0112DA  0E09               	movlw	9
  7203  0112DC  0101               	movlb	1	; () banked
  7204  0112DE  258A               	addwf	?___awdiv& (0+255),w,b
  7205  0112E0  6F92               	movwf	___wmul@multiplier& (0+255),b
  7206  0112E2  0E00               	movlw	0
  7207  0112E4  218B               	addwfc	(?___awdiv+1)& (0+255),w,b
  7208  0112E6  6F93               	movwf	(___wmul@multiplier+1)& (0+255),b
  7209  0112E8  0E00               	movlw	0
  7210  0112EA  6F95               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7211  0112EC  0E03               	movlw	3
  7212  0112EE  6F94               	movwf	___wmul@multiplicand& (0+255),b
  7213  0112F0  ECE3  F0A1         	call	___wmul	;wreg free
  7214  0112F4  0EA1               	movlw	low __powers_
  7215  0112F6  0101               	movlb	1	; () banked
  7216  0112F8  2592               	addwf	?___wmul& (0+255),w,b
  7217  0112FA  6EF6               	movwf	tblptrl,c
  7218  0112FC  0EF9               	movlw	high __powers_
  7219  0112FE  2193               	addwfc	(?___wmul+1)& (0+255),w,b
  7220  011300  6EF7               	movwf	tblptrh,c
  7221  011302                     	if	1	;There are 3 active tblptr bytes
  7222  011302  6AF8               	clrf	tblptru,c
  7223  011304  0E00               	movlw	low (__mediumconst shr (0+16))
  7224  011306  22F8               	addwfc	tblptru,f,c
  7225  011308                     	endif
  7226  011308  0009               	tblrd		*+
  7227  01130A  CFF5 F198          	movff	tablat,___ftmul@f1
  7228  01130E  0009               	tblrd		*+
  7229  011310  CFF5 F199          	movff	tablat,___ftmul@f1+1
  7230  011314  000A               	tblrd		*-
  7231  011316  CFF5 F19A          	movff	tablat,___ftmul@f1+2
  7232  01131A  0E00               	movlw	0
  7233  01131C  6F95               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7234  01131E  0E03               	movlw	3
  7235  011320  6F94               	movwf	___wmul@multiplicand& (0+255),b
  7236  011322  0E00               	movlw	0
  7237  011324  0100               	movlb	0	; () banked
  7238  011326  6FA3               	movwf	(___awmod@divisor+1)& (0+255),b
  7239  011328  0E0A               	movlw	10
  7240  01132A  6FA2               	movwf	___awmod@divisor& (0+255),b
  7241  01132C  0101               	movlb	1	; () banked
  7242  01132E  51AD               	movf	scale@scl& (0+255),w,b
  7243  011330  0100               	movlb	0	; () banked
  7244  011332  6FA0               	movwf	___awmod@dividend& (0+255),b
  7245  011334  6BA1               	clrf	(___awmod@dividend+1)& (0+255),b
  7246  011336  BFA0               	btfsc	___awmod@dividend& (0+255),7,b
  7247  011338  07A1               	decf	(___awmod@dividend+1)& (0+255),f,b
  7248  01133A  EC1B  F09E         	call	___awmod	;wreg free
  7249  01133E  C0A0  F192         	movff	?___awmod,___wmul@multiplier
  7250  011342  C0A1  F193         	movff	?___awmod+1,___wmul@multiplier+1
  7251  011346  ECE3  F0A1         	call	___wmul	;wreg free
  7252  01134A  0EA1               	movlw	low __powers_
  7253  01134C  0101               	movlb	1	; () banked
  7254  01134E  2592               	addwf	?___wmul& (0+255),w,b
  7255  011350  6EF6               	movwf	tblptrl,c
  7256  011352  0EF9               	movlw	high __powers_
  7257  011354  2193               	addwfc	(?___wmul+1)& (0+255),w,b
  7258  011356  6EF7               	movwf	tblptrh,c
  7259  011358                     	if	1	;There are 3 active tblptr bytes
  7260  011358  6AF8               	clrf	tblptru,c
  7261  01135A  0E00               	movlw	low (__mediumconst shr (0+16))
  7262  01135C  22F8               	addwfc	tblptru,f,c
  7263  01135E                     	endif
  7264  01135E  0009               	tblrd		*+
  7265  011360  CFF5 F19B          	movff	tablat,___ftmul@f2
  7266  011364  0009               	tblrd		*+
  7267  011366  CFF5 F19C          	movff	tablat,___ftmul@f2+1
  7268  01136A  000A               	tblrd		*-
  7269  01136C  CFF5 F19D          	movff	tablat,___ftmul@f2+2
  7270  011370  EC93  F098         	call	___ftmul	;wreg free
  7271  011374  C198  F1A7         	movff	?___ftmul,?_scale
  7272  011378  C199  F1A8         	movff	?___ftmul+1,?_scale+1
  7273  01137C  C19A  F1A9         	movff	?___ftmul+2,?_scale+2
  7274  011380  0012               	return	
  7275  011382                     l921:
  7276                           
  7277                           ;doprnt.c: 440: return _powers_[scl];
  7278  011382  0101               	movlb	1	; () banked
  7279  011384  51AD               	movf	scale@scl& (0+255),w,b
  7280  011386  0D03               	mullw	3
  7281  011388  0EA1               	movlw	low __powers_
  7282  01138A  24F3               	addwf	prodl,w,c
  7283  01138C  6EF6               	movwf	tblptrl,c
  7284  01138E  0EF9               	movlw	high __powers_
  7285  011390  20F4               	addwfc	prodh,w,c
  7286  011392  6EF7               	movwf	tblptrh,c
  7287  011394                     	if	1	;There are 3 active tblptr bytes
  7288  011394  6AF8               	clrf	tblptru,c
  7289  011396  0E00               	movlw	low (__mediumconst shr (0+16))
  7290  011398  22F8               	addwfc	tblptru,f,c
  7291  01139A                     	endif
  7292  01139A  0009               	tblrd		*+
  7293  01139C  CFF5 F1A7          	movff	tablat,?_scale
  7294  0113A0  0009               	tblrd		*+
  7295  0113A2  CFF5 F1A8          	movff	tablat,?_scale+1
  7296  0113A6  000A               	tblrd		*-
  7297  0113A8  CFF5 F1A9          	movff	tablat,?_scale+2
  7298  0113AC  0012               	return	
  7299  0113AE                     __end_of_scale:
  7300                           	opt stack 0
  7301                           tblptru	equ	0xFF8
  7302                           tblptrh	equ	0xFF7
  7303                           tblptrl	equ	0xFF6
  7304                           tablat	equ	0xFF5
  7305                           prodh	equ	0xFF4
  7306                           prodl	equ	0xFF3
  7307                           intcon	equ	0xFF2
  7308                           postinc0	equ	0xFEE
  7309                           wreg	equ	0xFE8
  7310                           indf2	equ	0xFDF
  7311                           postinc2	equ	0xFDE
  7312                           postdec2	equ	0xFDD
  7313                           fsr2h	equ	0xFDA
  7314                           fsr2l	equ	0xFD9
  7315                           status	equ	0xFD8
  7316                           
  7317 ;; *************** function _putch *****************
  7318 ;; Defined at:
  7319 ;;		line 180 in file "mcc_generated_files/eusart2.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;  txData          1    wreg     unsigned char 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;  txData          1   65[BANK0 ] unsigned char 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7334 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7336 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7337 ;;Total ram usage:        1 bytes
  7338 ;; Hardware stack levels used:    1
  7339 ;; Hardware stack levels required when called:   11
  7340 ;; This function calls:
  7341 ;;		_EUSART2_Write
  7342 ;; This function is called by:
  7343 ;;		_printf
  7344 ;; This function uses a non-reentrant model
  7345 ;;
  7346                           
  7347                           	psect	text15
  7348  0145BA                     __ptext15:
  7349                           	opt stack 0
  7350  0145BA                     _putch:
  7351                           	opt stack 16
  7352                           
  7353                           ;incstack = 0
  7354                           ;putch@txData stored from wreg
  7355  0145BA  0100               	movlb	0	; () banked
  7356  0145BC  6FA1               	movwf	putch@txData& (0+255),b
  7357                           
  7358                           ;eusart2.c: 182: EUSART2_Write(txData);
  7359  0145BE  0100               	movlb	0	; () banked
  7360  0145C0  51A1               	movf	putch@txData& (0+255),w,b
  7361  0145C2  EC93  F0A0         	call	_EUSART2_Write
  7362  0145C6  0012               	return		;funcret
  7363  0145C8                     __end_of_putch:
  7364                           	opt stack 0
  7365                           tblptru	equ	0xFF8
  7366                           tblptrh	equ	0xFF7
  7367                           tblptrl	equ	0xFF6
  7368                           tablat	equ	0xFF5
  7369                           prodh	equ	0xFF4
  7370                           prodl	equ	0xFF3
  7371                           intcon	equ	0xFF2
  7372                           postinc0	equ	0xFEE
  7373                           wreg	equ	0xFE8
  7374                           indf2	equ	0xFDF
  7375                           postinc2	equ	0xFDE
  7376                           postdec2	equ	0xFDD
  7377                           fsr2h	equ	0xFDA
  7378                           fsr2l	equ	0xFD9
  7379                           status	equ	0xFD8
  7380                           
  7381 ;; *************** function _EUSART2_Write *****************
  7382 ;; Defined at:
  7383 ;;		line 151 in file "mcc_generated_files/eusart2.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;  txData          1    wreg     unsigned char 
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;  txData          1   64[BANK0 ] unsigned char 
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  1    wreg      void 
  7390 ;; Registers used:
  7391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7398 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7400 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7401 ;;Total ram usage:        1 bytes
  7402 ;; Hardware stack levels used:    1
  7403 ;; Hardware stack levels required when called:   10
  7404 ;; This function calls:
  7405 ;;		Nothing
  7406 ;; This function is called by:
  7407 ;;		_putch
  7408 ;; This function uses a non-reentrant model
  7409 ;;
  7410                           
  7411                           	psect	text16
  7412  014126                     __ptext16:
  7413                           	opt stack 0
  7414  014126                     _EUSART2_Write:
  7415                           	opt stack 16
  7416                           
  7417                           ;incstack = 0
  7418                           ;EUSART2_Write@txData stored from wreg
  7419  014126  0100               	movlb	0	; () banked
  7420  014128  6FA0               	movwf	EUSART2_Write@txData& (0+255),b
  7421                           
  7422                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
  7423  01412A  D001               	goto	l368
  7424  01412C                     l369:
  7425                           
  7426                           ; BSR set to: 0
  7427  01412C  0004               	clrwdt		;# 
  7428  01412E                     l368:
  7429  01412E  0100               	movlb	0	; () banked
  7430  014130  51B9               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  7431  014132  B4D8               	btfsc	status,2,c
  7432  014134  D7FB               	goto	l369
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;eusart2.c: 156: }
  7436                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
  7437  014136  010E               	movlb	14	; () banked
  7438  014138  BD2C               	btfsc	44,6,b	;volatile
  7439  01413A  D003               	goto	l371
  7440                           
  7441                           ; BSR set to: 14
  7442                           ;eusart2.c: 159: {
  7443                           ;eusart2.c: 160: TX2REG = txData;
  7444  01413C  C0A0  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
  7445                           
  7446                           ;eusart2.c: 161: }
  7447  014140  D013               	goto	l372
  7448  014142                     l371:
  7449                           
  7450                           ; BSR set to: 14
  7451                           ;eusart2.c: 162: else
  7452                           ;eusart2.c: 163: {
  7453                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
  7454  014142  9D2C               	bcf	44,6,b	;volatile
  7455                           
  7456                           ; BSR set to: 14
  7457                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
  7458  014144  0100               	movlb	0	; () banked
  7459  014146  51BB               	movf	_eusart2TxHead& (0+255),w,b	;volatile
  7460  014148  0D01               	mullw	1
  7461  01414A  0E00               	movlw	low _eusart2TxBuffer
  7462  01414C  24F3               	addwf	prodl,w,c
  7463  01414E  6ED9               	movwf	fsr2l,c
  7464  014150  0E02               	movlw	high _eusart2TxBuffer
  7465  014152  20F4               	addwfc	prodh,w,c
  7466  014154  6EDA               	movwf	fsr2h,c
  7467  014156  C0A0  FFDF         	movff	EUSART2_Write@txData,indf2
  7468                           
  7469                           ; BSR set to: 0
  7470  01415A  2BBB               	incf	_eusart2TxHead& (0+255),f,b	;volatile
  7471                           
  7472                           ; BSR set to: 0
  7473                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
  7474  01415C  0E3F               	movlw	63
  7475  01415E  65BB               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
  7476  014160  D002               	goto	l373
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;eusart2.c: 167: {
  7480                           ;eusart2.c: 168: eusart2TxHead = 0;
  7481  014162  0E00               	movlw	0
  7482  014164  6FBB               	movwf	_eusart2TxHead& (0+255),b	;volatile
  7483  014166                     l373:
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;eusart2.c: 169: }
  7487                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
  7488                           
  7489                           ; BSR set to: 0
  7490  014166  07B9               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  7491  014168                     l372:
  7492                           
  7493                           ;eusart2.c: 171: }
  7494                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
  7495                           
  7496                           ; BSR set to: 0
  7497  014168  010E               	movlb	14	; () banked
  7498  01416A  8D2C               	bsf	44,6,b	;volatile
  7499                           
  7500                           ; BSR set to: 14
  7501  01416C  0012               	return		;funcret
  7502  01416E                     __end_of_EUSART2_Write:
  7503                           	opt stack 0
  7504                           tblptru	equ	0xFF8
  7505                           tblptrh	equ	0xFF7
  7506                           tblptrl	equ	0xFF6
  7507                           tablat	equ	0xFF5
  7508                           prodh	equ	0xFF4
  7509                           prodl	equ	0xFF3
  7510                           intcon	equ	0xFF2
  7511                           postinc0	equ	0xFEE
  7512                           wreg	equ	0xFE8
  7513                           indf2	equ	0xFDF
  7514                           postinc2	equ	0xFDE
  7515                           postdec2	equ	0xFDD
  7516                           fsr2h	equ	0xFDA
  7517                           fsr2l	equ	0xFD9
  7518                           status	equ	0xFD8
  7519                           
  7520 ;; *************** function _fround *****************
  7521 ;; Defined at:
  7522 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;  prec            1    wreg     unsigned char 
  7525 ;; Auto vars:     Size  Location     Type
  7526 ;;  prec            1   38[BANK1 ] unsigned char 
  7527 ;; Return value:  Size  Location     Type
  7528 ;;                  3   29[BANK1 ] unsigned char 
  7529 ;; Registers used:
  7530 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7531 ;; Tracked objects:
  7532 ;;		On entry : 0/0
  7533 ;;		On exit  : 0/0
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7536 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7537 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7539 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7540 ;;Total ram usage:       10 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; Hardware stack levels required when called:   12
  7543 ;; This function calls:
  7544 ;;		___awdiv
  7545 ;;		___awmod
  7546 ;;		___ftmul
  7547 ;;		___wmul
  7548 ;; This function is called by:
  7549 ;;		_printf
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           	psect	text17
  7554  012188                     __ptext17:
  7555                           	opt stack 0
  7556  012188                     _fround:
  7557                           	opt stack 15
  7558                           
  7559                           ; BSR set to: 14
  7560                           ;incstack = 0
  7561                           ;fround@prec stored from wreg
  7562  012188  0101               	movlb	1	; () banked
  7563  01218A  6FB0               	movwf	fround@prec& (0+255),b
  7564                           
  7565                           ;doprnt.c: 413: if(prec>=110)
  7566  01218C  0E6D               	movlw	109
  7567  01218E  0101               	movlb	1	; () banked
  7568  012190  65B0               	cpfsgt	fround@prec& (0+255),b
  7569  012192  D0B1               	goto	l908
  7570                           
  7571                           ; BSR set to: 1
  7572                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7573  012194  0E00               	movlw	0
  7574  012196  6F95               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7575  012198  0E03               	movlw	3
  7576  01219A  6F94               	movwf	___wmul@multiplicand& (0+255),b
  7577  01219C  0E00               	movlw	0
  7578  01219E  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  7579  0121A0  0E0A               	movlw	10
  7580  0121A2  6F8C               	movwf	___awdiv@divisor& (0+255),b
  7581  0121A4  0E00               	movlw	0
  7582  0121A6  0100               	movlb	0	; () banked
  7583  0121A8  6FA3               	movwf	(___awmod@divisor+1)& (0+255),b
  7584  0121AA  0E64               	movlw	100
  7585  0121AC  6FA2               	movwf	___awmod@divisor& (0+255),b
  7586  0121AE  C1B0  F0A0         	movff	fround@prec,___awmod@dividend
  7587  0121B2  6BA1               	clrf	(___awmod@dividend+1)& (0+255),b
  7588  0121B4  EC1B  F09E         	call	___awmod	;wreg free
  7589  0121B8  C0A0  F18A         	movff	?___awmod,___awdiv@dividend
  7590  0121BC  C0A1  F18B         	movff	?___awmod+1,___awdiv@dividend+1
  7591  0121C0  EC1B  F09D         	call	___awdiv	;wreg free
  7592  0121C4  0E09               	movlw	9
  7593  0121C6  0101               	movlb	1	; () banked
  7594  0121C8  258A               	addwf	?___awdiv& (0+255),w,b
  7595  0121CA  6F92               	movwf	___wmul@multiplier& (0+255),b
  7596  0121CC  0E00               	movlw	0
  7597  0121CE  218B               	addwfc	(?___awdiv+1)& (0+255),w,b
  7598  0121D0  6F93               	movwf	(___wmul@multiplier+1)& (0+255),b
  7599  0121D2  ECE3  F0A1         	call	___wmul	;wreg free
  7600  0121D6  0EC8               	movlw	low __npowers_
  7601  0121D8  0101               	movlb	1	; () banked
  7602  0121DA  2592               	addwf	?___wmul& (0+255),w,b
  7603  0121DC  6EF6               	movwf	tblptrl,c
  7604  0121DE  0EF9               	movlw	high __npowers_
  7605  0121E0  2193               	addwfc	(?___wmul+1)& (0+255),w,b
  7606  0121E2  6EF7               	movwf	tblptrh,c
  7607  0121E4                     	if	1	;There are 3 active tblptr bytes
  7608  0121E4  6AF8               	clrf	tblptru,c
  7609  0121E6  0E00               	movlw	low (__mediumconst shr (0+16))
  7610  0121E8  22F8               	addwfc	tblptru,f,c
  7611  0121EA                     	endif
  7612  0121EA  0009               	tblrd		*+
  7613  0121EC  CFF5 F19B          	movff	tablat,___ftmul@f2
  7614  0121F0  0009               	tblrd		*+
  7615  0121F2  CFF5 F19C          	movff	tablat,___ftmul@f2+1
  7616  0121F6  000A               	tblrd		*-
  7617  0121F8  CFF5 F19D          	movff	tablat,___ftmul@f2+2
  7618  0121FC  0E00               	movlw	0
  7619  0121FE  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  7620  012200  0E64               	movlw	100
  7621  012202  6F8C               	movwf	___awdiv@divisor& (0+255),b
  7622  012204  C1B0  F18A         	movff	fround@prec,___awdiv@dividend
  7623  012208  6B8B               	clrf	(___awdiv@dividend+1)& (0+255),b
  7624  01220A  EC1B  F09D         	call	___awdiv	;wreg free
  7625  01220E  0E12               	movlw	18
  7626  012210  0101               	movlb	1	; () banked
  7627  012212  258A               	addwf	?___awdiv& (0+255),w,b
  7628  012214  6F92               	movwf	___wmul@multiplier& (0+255),b
  7629  012216  0E00               	movlw	0
  7630  012218  218B               	addwfc	(?___awdiv+1)& (0+255),w,b
  7631  01221A  6F93               	movwf	(___wmul@multiplier+1)& (0+255),b
  7632  01221C  0E00               	movlw	0
  7633  01221E  6F95               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7634  012220  0E03               	movlw	3
  7635  012222  6F94               	movwf	___wmul@multiplicand& (0+255),b
  7636  012224  ECE3  F0A1         	call	___wmul	;wreg free
  7637  012228  0EC8               	movlw	low __npowers_
  7638  01222A  0101               	movlb	1	; () banked
  7639  01222C  2592               	addwf	?___wmul& (0+255),w,b
  7640  01222E  6EF6               	movwf	tblptrl,c
  7641  012230  0EF9               	movlw	high __npowers_
  7642  012232  2193               	addwfc	(?___wmul+1)& (0+255),w,b
  7643  012234  6EF7               	movwf	tblptrh,c
  7644  012236                     	if	1	;There are 3 active tblptr bytes
  7645  012236  6AF8               	clrf	tblptru,c
  7646  012238  0E00               	movlw	low (__mediumconst shr (0+16))
  7647  01223A  22F8               	addwfc	tblptru,f,c
  7648  01223C                     	endif
  7649  01223C  0009               	tblrd		*+
  7650  01223E  CFF5 F198          	movff	tablat,___ftmul@f1
  7651  012242  0009               	tblrd		*+
  7652  012244  CFF5 F199          	movff	tablat,___ftmul@f1+1
  7653  012248  000A               	tblrd		*-
  7654  01224A  CFF5 F19A          	movff	tablat,___ftmul@f1+2
  7655  01224E  EC93  F098         	call	___ftmul	;wreg free
  7656  012252  C198  F1AD         	movff	?___ftmul,_fround$2619
  7657  012256  C199  F1AE         	movff	?___ftmul+1,_fround$2619+1
  7658  01225A  C19A  F1AF         	movff	?___ftmul+2,_fround$2619+2
  7659                           
  7660                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7661  01225E  0E00               	movlw	0
  7662  012260  0101               	movlb	1	; () banked
  7663  012262  6F95               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7664  012264  0E03               	movlw	3
  7665  012266  6F94               	movwf	___wmul@multiplicand& (0+255),b
  7666  012268  0E00               	movlw	0
  7667  01226A  0100               	movlb	0	; () banked
  7668  01226C  6FA3               	movwf	(___awmod@divisor+1)& (0+255),b
  7669  01226E  0E0A               	movlw	10
  7670  012270  6FA2               	movwf	___awmod@divisor& (0+255),b
  7671  012272  C1B0  F0A0         	movff	fround@prec,___awmod@dividend
  7672  012276  6BA1               	clrf	(___awmod@dividend+1)& (0+255),b
  7673  012278  EC1B  F09E         	call	___awmod	;wreg free
  7674  01227C  C0A0  F192         	movff	?___awmod,___wmul@multiplier
  7675  012280  C0A1  F193         	movff	?___awmod+1,___wmul@multiplier+1
  7676  012284  ECE3  F0A1         	call	___wmul	;wreg free
  7677  012288  0EC8               	movlw	low __npowers_
  7678  01228A  0101               	movlb	1	; () banked
  7679  01228C  2592               	addwf	?___wmul& (0+255),w,b
  7680  01228E  6EF6               	movwf	tblptrl,c
  7681  012290  0EF9               	movlw	high __npowers_
  7682  012292  2193               	addwfc	(?___wmul+1)& (0+255),w,b
  7683  012294  6EF7               	movwf	tblptrh,c
  7684  012296                     	if	1	;There are 3 active tblptr bytes
  7685  012296  6AF8               	clrf	tblptru,c
  7686  012298  0E00               	movlw	low (__mediumconst shr (0+16))
  7687  01229A  22F8               	addwfc	tblptru,f,c
  7688  01229C                     	endif
  7689  01229C  0009               	tblrd		*+
  7690  01229E  CFF5 F19B          	movff	tablat,___ftmul@f2
  7691  0122A2  0009               	tblrd		*+
  7692  0122A4  CFF5 F19C          	movff	tablat,___ftmul@f2+1
  7693  0122A8  000A               	tblrd		*-
  7694  0122AA  CFF5 F19D          	movff	tablat,___ftmul@f2+2
  7695  0122AE  C1AD  F198         	movff	_fround$2619,___ftmul@f1
  7696  0122B2  C1AE  F199         	movff	_fround$2619+1,___ftmul@f1+1
  7697  0122B6  C1AF  F19A         	movff	_fround$2619+2,___ftmul@f1+2
  7698  0122BA  EC93  F098         	call	___ftmul	;wreg free
  7699  0122BE  C198  F1AA         	movff	?___ftmul,_fround$2620
  7700  0122C2  C199  F1AB         	movff	?___ftmul+1,_fround$2620+1
  7701  0122C6  C19A  F1AC         	movff	?___ftmul+2,_fround$2620+2
  7702                           
  7703                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7704  0122CA  C1AA  F198         	movff	_fround$2620,___ftmul@f1
  7705  0122CE  C1AB  F199         	movff	_fround$2620+1,___ftmul@f1+1
  7706  0122D2  C1AC  F19A         	movff	_fround$2620+2,___ftmul@f1+2
  7707  0122D6  0E00               	movlw	0
  7708  0122D8  0101               	movlb	1	; () banked
  7709  0122DA  6F9B               	movwf	___ftmul@f2& (0+255),b
  7710  0122DC  0E00               	movlw	0
  7711  0122DE  6F9C               	movwf	(___ftmul@f2+1)& (0+255),b
  7712  0122E0  0E3F               	movlw	63
  7713  0122E2  6F9D               	movwf	(___ftmul@f2+2)& (0+255),b
  7714  0122E4  EC93  F098         	call	___ftmul	;wreg free
  7715  0122E8  C198  F1A7         	movff	?___ftmul,?_fround
  7716  0122EC  C199  F1A8         	movff	?___ftmul+1,?_fround+1
  7717  0122F0  C19A  F1A9         	movff	?___ftmul+2,?_fround+2
  7718  0122F4  0012               	return	
  7719  0122F6                     l908:
  7720                           
  7721                           ;doprnt.c: 415: else if(prec > 10)
  7722  0122F6  0E0A               	movlw	10
  7723  0122F8  0101               	movlb	1	; () banked
  7724  0122FA  65B0               	cpfsgt	fround@prec& (0+255),b
  7725  0122FC  D06E               	goto	l911
  7726                           
  7727                           ; BSR set to: 1
  7728                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7729  0122FE  0E00               	movlw	0
  7730  012300  6F95               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7731  012302  0E03               	movlw	3
  7732  012304  6F94               	movwf	___wmul@multiplicand& (0+255),b
  7733  012306  0E00               	movlw	0
  7734  012308  0100               	movlb	0	; () banked
  7735  01230A  6FA3               	movwf	(___awmod@divisor+1)& (0+255),b
  7736  01230C  0E0A               	movlw	10
  7737  01230E  6FA2               	movwf	___awmod@divisor& (0+255),b
  7738  012310  C1B0  F0A0         	movff	fround@prec,___awmod@dividend
  7739  012314  6BA1               	clrf	(___awmod@dividend+1)& (0+255),b
  7740  012316  EC1B  F09E         	call	___awmod	;wreg free
  7741  01231A  C0A0  F192         	movff	?___awmod,___wmul@multiplier
  7742  01231E  C0A1  F193         	movff	?___awmod+1,___wmul@multiplier+1
  7743  012322  ECE3  F0A1         	call	___wmul	;wreg free
  7744  012326  0EC8               	movlw	low __npowers_
  7745  012328  0101               	movlb	1	; () banked
  7746  01232A  2592               	addwf	?___wmul& (0+255),w,b
  7747  01232C  6EF6               	movwf	tblptrl,c
  7748  01232E  0EF9               	movlw	high __npowers_
  7749  012330  2193               	addwfc	(?___wmul+1)& (0+255),w,b
  7750  012332  6EF7               	movwf	tblptrh,c
  7751  012334                     	if	1	;There are 3 active tblptr bytes
  7752  012334  6AF8               	clrf	tblptru,c
  7753  012336  0E00               	movlw	low (__mediumconst shr (0+16))
  7754  012338  22F8               	addwfc	tblptru,f,c
  7755  01233A                     	endif
  7756  01233A  0009               	tblrd		*+
  7757  01233C  CFF5 F19B          	movff	tablat,___ftmul@f2
  7758  012340  0009               	tblrd		*+
  7759  012342  CFF5 F19C          	movff	tablat,___ftmul@f2+1
  7760  012346  000A               	tblrd		*-
  7761  012348  CFF5 F19D          	movff	tablat,___ftmul@f2+2
  7762  01234C  0E00               	movlw	0
  7763  01234E  6F8D               	movwf	(___awdiv@divisor+1)& (0+255),b
  7764  012350  0E0A               	movlw	10
  7765  012352  6F8C               	movwf	___awdiv@divisor& (0+255),b
  7766  012354  C1B0  F18A         	movff	fround@prec,___awdiv@dividend
  7767  012358  6B8B               	clrf	(___awdiv@dividend+1)& (0+255),b
  7768  01235A  EC1B  F09D         	call	___awdiv	;wreg free
  7769  01235E  0E09               	movlw	9
  7770  012360  0101               	movlb	1	; () banked
  7771  012362  258A               	addwf	?___awdiv& (0+255),w,b
  7772  012364  6F92               	movwf	___wmul@multiplier& (0+255),b
  7773  012366  0E00               	movlw	0
  7774  012368  218B               	addwfc	(?___awdiv+1)& (0+255),w,b
  7775  01236A  6F93               	movwf	(___wmul@multiplier+1)& (0+255),b
  7776  01236C  0E00               	movlw	0
  7777  01236E  6F95               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7778  012370  0E03               	movlw	3
  7779  012372  6F94               	movwf	___wmul@multiplicand& (0+255),b
  7780  012374  ECE3  F0A1         	call	___wmul	;wreg free
  7781  012378  0EC8               	movlw	low __npowers_
  7782  01237A  0101               	movlb	1	; () banked
  7783  01237C  2592               	addwf	?___wmul& (0+255),w,b
  7784  01237E  6EF6               	movwf	tblptrl,c
  7785  012380  0EF9               	movlw	high __npowers_
  7786  012382  2193               	addwfc	(?___wmul+1)& (0+255),w,b
  7787  012384  6EF7               	movwf	tblptrh,c
  7788  012386                     	if	1	;There are 3 active tblptr bytes
  7789  012386  6AF8               	clrf	tblptru,c
  7790  012388  0E00               	movlw	low (__mediumconst shr (0+16))
  7791  01238A  22F8               	addwfc	tblptru,f,c
  7792  01238C                     	endif
  7793  01238C  0009               	tblrd		*+
  7794  01238E  CFF5 F198          	movff	tablat,___ftmul@f1
  7795  012392  0009               	tblrd		*+
  7796  012394  CFF5 F199          	movff	tablat,___ftmul@f1+1
  7797  012398  000A               	tblrd		*-
  7798  01239A  CFF5 F19A          	movff	tablat,___ftmul@f1+2
  7799  01239E  EC93  F098         	call	___ftmul	;wreg free
  7800  0123A2  C198  F1AD         	movff	?___ftmul,_fround$2619
  7801  0123A6  C199  F1AE         	movff	?___ftmul+1,_fround$2619+1
  7802  0123AA  C19A  F1AF         	movff	?___ftmul+2,_fround$2619+2
  7803                           
  7804                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7805  0123AE  C1AD  F198         	movff	_fround$2619,___ftmul@f1
  7806  0123B2  C1AE  F199         	movff	_fround$2619+1,___ftmul@f1+1
  7807  0123B6  C1AF  F19A         	movff	_fround$2619+2,___ftmul@f1+2
  7808  0123BA  0E00               	movlw	0
  7809  0123BC  0101               	movlb	1	; () banked
  7810  0123BE  6F9B               	movwf	___ftmul@f2& (0+255),b
  7811  0123C0  0E00               	movlw	0
  7812  0123C2  6F9C               	movwf	(___ftmul@f2+1)& (0+255),b
  7813  0123C4  0E3F               	movlw	63
  7814  0123C6  6F9D               	movwf	(___ftmul@f2+2)& (0+255),b
  7815  0123C8  EC93  F098         	call	___ftmul	;wreg free
  7816  0123CC  C198  F1A7         	movff	?___ftmul,?_fround
  7817  0123D0  C199  F1A8         	movff	?___ftmul+1,?_fround+1
  7818  0123D4  C19A  F1A9         	movff	?___ftmul+2,?_fround+2
  7819  0123D8  0012               	return	
  7820  0123DA                     l911:
  7821                           
  7822                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  7823  0123DA  0101               	movlb	1	; () banked
  7824  0123DC  51B0               	movf	fround@prec& (0+255),w,b
  7825  0123DE  0D03               	mullw	3
  7826  0123E0  0EC8               	movlw	low __npowers_
  7827  0123E2  24F3               	addwf	prodl,w,c
  7828  0123E4  6EF6               	movwf	tblptrl,c
  7829  0123E6  0EF9               	movlw	high __npowers_
  7830  0123E8  20F4               	addwfc	prodh,w,c
  7831  0123EA  6EF7               	movwf	tblptrh,c
  7832  0123EC                     	if	1	;There are 3 active tblptr bytes
  7833  0123EC  6AF8               	clrf	tblptru,c
  7834  0123EE  0E00               	movlw	low (__mediumconst shr (0+16))
  7835  0123F0  22F8               	addwfc	tblptru,f,c
  7836  0123F2                     	endif
  7837  0123F2  0009               	tblrd		*+
  7838  0123F4  CFF5 F198          	movff	tablat,___ftmul@f1
  7839  0123F8  0009               	tblrd		*+
  7840  0123FA  CFF5 F199          	movff	tablat,___ftmul@f1+1
  7841  0123FE  000A               	tblrd		*-
  7842  012400  CFF5 F19A          	movff	tablat,___ftmul@f1+2
  7843  012404  0E00               	movlw	0
  7844  012406  6F9B               	movwf	___ftmul@f2& (0+255),b
  7845  012408  0E00               	movlw	0
  7846  01240A  6F9C               	movwf	(___ftmul@f2+1)& (0+255),b
  7847  01240C  0E3F               	movlw	63
  7848  01240E  6F9D               	movwf	(___ftmul@f2+2)& (0+255),b
  7849  012410  EC93  F098         	call	___ftmul	;wreg free
  7850  012414  C198  F1A7         	movff	?___ftmul,?_fround
  7851  012418  C199  F1A8         	movff	?___ftmul+1,?_fround+1
  7852  01241C  C19A  F1A9         	movff	?___ftmul+2,?_fround+2
  7853  012420  0012               	return	
  7854  012422                     __end_of_fround:
  7855                           	opt stack 0
  7856                           tblptru	equ	0xFF8
  7857                           tblptrh	equ	0xFF7
  7858                           tblptrl	equ	0xFF6
  7859                           tablat	equ	0xFF5
  7860                           prodh	equ	0xFF4
  7861                           prodl	equ	0xFF3
  7862                           intcon	equ	0xFF2
  7863                           postinc0	equ	0xFEE
  7864                           wreg	equ	0xFE8
  7865                           indf2	equ	0xFDF
  7866                           postinc2	equ	0xFDE
  7867                           postdec2	equ	0xFDD
  7868                           fsr2h	equ	0xFDA
  7869                           fsr2l	equ	0xFD9
  7870                           status	equ	0xFD8
  7871                           
  7872 ;; *************** function ___wmul *****************
  7873 ;; Defined at:
  7874 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  7875 ;; Parameters:    Size  Location     Type
  7876 ;;  multiplier      2    8[BANK1 ] unsigned int 
  7877 ;;  multiplicand    2   10[BANK1 ] unsigned int 
  7878 ;; Auto vars:     Size  Location     Type
  7879 ;;  product         2   12[BANK1 ] unsigned int 
  7880 ;; Return value:  Size  Location     Type
  7881 ;;                  2    8[BANK1 ] unsigned int 
  7882 ;; Registers used:
  7883 ;;		wreg, status,2, status,0, prodl, prodh
  7884 ;; Tracked objects:
  7885 ;;		On entry : 0/0
  7886 ;;		On exit  : 0/0
  7887 ;;		Unchanged: 0/0
  7888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7889 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7890 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7892 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7893 ;;Total ram usage:        6 bytes
  7894 ;; Hardware stack levels used:    1
  7895 ;; Hardware stack levels required when called:   10
  7896 ;; This function calls:
  7897 ;;		Nothing
  7898 ;; This function is called by:
  7899 ;;		_fround
  7900 ;;		_scale
  7901 ;;		_printf
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text18
  7906  0143C6                     __ptext18:
  7907                           	opt stack 0
  7908  0143C6                     ___wmul:
  7909                           	opt stack 16
  7910                           
  7911                           ;incstack = 0
  7912  0143C6  0101               	movlb	1	; () banked
  7913  0143C8  5192               	movf	___wmul@multiplier& (0+255),w,b
  7914  0143CA  0394               	mulwf	___wmul@multiplicand& (0+255),b
  7915  0143CC  CFF3 F196          	movff	prodl,___wmul@product
  7916  0143D0  CFF4 F197          	movff	prodh,___wmul@product+1
  7917  0143D4  5192               	movf	___wmul@multiplier& (0+255),w,b
  7918  0143D6  0395               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7919  0143D8  50F3               	movf	prodl,w,c
  7920  0143DA  2797               	addwf	(___wmul@product+1)& (0+255),f,b
  7921  0143DC  5193               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7922  0143DE  0394               	mulwf	___wmul@multiplicand& (0+255),b
  7923  0143E0  50F3               	movf	prodl,w,c
  7924  0143E2  2797               	addwf	(___wmul@product+1)& (0+255),f,b
  7925                           
  7926                           ; BSR set to: 1
  7927  0143E4  C196  F192         	movff	___wmul@product,?___wmul
  7928  0143E8  C197  F193         	movff	___wmul@product+1,?___wmul+1
  7929  0143EC  0012               	return	
  7930  0143EE                     __end_of___wmul:
  7931                           	opt stack 0
  7932                           tblptru	equ	0xFF8
  7933                           tblptrh	equ	0xFF7
  7934                           tblptrl	equ	0xFF6
  7935                           tablat	equ	0xFF5
  7936                           prodh	equ	0xFF4
  7937                           prodl	equ	0xFF3
  7938                           intcon	equ	0xFF2
  7939                           postinc0	equ	0xFEE
  7940                           wreg	equ	0xFE8
  7941                           indf2	equ	0xFDF
  7942                           postinc2	equ	0xFDE
  7943                           postdec2	equ	0xFDD
  7944                           fsr2h	equ	0xFDA
  7945                           fsr2l	equ	0xFD9
  7946                           status	equ	0xFD8
  7947                           
  7948 ;; *************** function ___ftmul *****************
  7949 ;; Defined at:
  7950 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;  f1              3   14[BANK1 ] float 
  7953 ;;  f2              3   17[BANK1 ] float 
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;  f3_as_produc    3   24[BANK1 ] unsigned um
  7956 ;;  sign            1   28[BANK1 ] unsigned char 
  7957 ;;  cntr            1   27[BANK1 ] unsigned char 
  7958 ;;  exp             1   23[BANK1 ] unsigned char 
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  3   14[BANK1 ] float 
  7961 ;; Registers used:
  7962 ;;		wreg, status,2, status,0, cstack
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7968 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7969 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7970 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7971 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7972 ;;Total ram usage:       15 bytes
  7973 ;; Hardware stack levels used:    1
  7974 ;; Hardware stack levels required when called:   11
  7975 ;; This function calls:
  7976 ;;		___ftpack
  7977 ;; This function is called by:
  7978 ;;		_fround
  7979 ;;		_scale
  7980 ;;		_printf
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           	psect	text19
  7985  013126                     __ptext19:
  7986                           	opt stack 0
  7987  013126                     ___ftmul:
  7988                           	opt stack 15
  7989                           
  7990                           ; BSR set to: 1
  7991                           ;incstack = 0
  7992  013126  C19A  F19E         	movff	___ftmul@f1+2,??___ftmul
  7993  01312A  0101               	movlb	1	; () banked
  7994  01312C  6B9F               	clrf	(??___ftmul+1)& (0+255),b
  7995  01312E  6BA0               	clrf	(??___ftmul+2)& (0+255),b
  7996  013130  3599               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  7997  013132  379E               	rlcf	??___ftmul& (0+255),f,b
  7998  013134  E301               	bnc	u6721
  7999  013136  819F               	bsf	(??___ftmul+1)& (0+255),0,b
  8000  013138                     u6721:
  8001  013138  519E               	movf	??___ftmul& (0+255),w,b
  8002  01313A  6FA1               	movwf	___ftmul@exp& (0+255),b
  8003  01313C  51A1               	movf	___ftmul@exp& (0+255),w,b
  8004  01313E  A4D8               	btfss	status,2,c
  8005  013140  D007               	goto	l1309
  8006                           
  8007                           ; BSR set to: 1
  8008  013142  0E00               	movlw	0
  8009  013144  6F98               	movwf	?___ftmul& (0+255),b
  8010  013146  0E00               	movlw	0
  8011  013148  6F99               	movwf	(?___ftmul+1)& (0+255),b
  8012  01314A  0E00               	movlw	0
  8013  01314C  6F9A               	movwf	(?___ftmul+2)& (0+255),b
  8014                           
  8015                           ; BSR set to: 1
  8016  01314E  0012               	return	
  8017  013150                     l1309:
  8018                           
  8019                           ; BSR set to: 1
  8020                           
  8021                           ; BSR set to: 1
  8022  013150  C19D  F19E         	movff	___ftmul@f2+2,??___ftmul
  8023  013154  6B9F               	clrf	(??___ftmul+1)& (0+255),b
  8024  013156  6BA0               	clrf	(??___ftmul+2)& (0+255),b
  8025  013158  359C               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  8026  01315A  379E               	rlcf	??___ftmul& (0+255),f,b
  8027  01315C  E301               	bnc	u6741
  8028  01315E  819F               	bsf	(??___ftmul+1)& (0+255),0,b
  8029  013160                     u6741:
  8030  013160  519E               	movf	??___ftmul& (0+255),w,b
  8031  013162  6FA6               	movwf	___ftmul@sign& (0+255),b
  8032  013164  51A6               	movf	___ftmul@sign& (0+255),w,b
  8033  013166  A4D8               	btfss	status,2,c
  8034  013168  D007               	goto	l1311
  8035                           
  8036                           ; BSR set to: 1
  8037  01316A  0E00               	movlw	0
  8038  01316C  6F98               	movwf	?___ftmul& (0+255),b
  8039  01316E  0E00               	movlw	0
  8040  013170  6F99               	movwf	(?___ftmul+1)& (0+255),b
  8041  013172  0E00               	movlw	0
  8042  013174  6F9A               	movwf	(?___ftmul+2)& (0+255),b
  8043                           
  8044                           ; BSR set to: 1
  8045  013176  0012               	return	
  8046  013178                     l1311:
  8047                           
  8048                           ; BSR set to: 1
  8049                           
  8050                           ; BSR set to: 1
  8051  013178  51A6               	movf	___ftmul@sign& (0+255),w,b
  8052  01317A  0F7B               	addlw	123
  8053  01317C  27A1               	addwf	___ftmul@exp& (0+255),f,b
  8054                           
  8055                           ; BSR set to: 1
  8056  01317E  C19A  F1A6         	movff	___ftmul@f1+2,___ftmul@sign
  8057  013182  519D               	movf	(___ftmul@f2+2)& (0+255),w,b
  8058  013184  1BA6               	xorwf	___ftmul@sign& (0+255),f,b
  8059  013186  0E80               	movlw	128
  8060  013188  17A6               	andwf	___ftmul@sign& (0+255),f,b
  8061                           
  8062                           ; BSR set to: 1
  8063  01318A  8F99               	bsf	(___ftmul@f1+1)& (0+255),7,b
  8064                           
  8065                           ; BSR set to: 1
  8066  01318C  8F9C               	bsf	(___ftmul@f2+1)& (0+255),7,b
  8067                           
  8068                           ; BSR set to: 1
  8069  01318E  0EFF               	movlw	255
  8070  013190  179B               	andwf	___ftmul@f2& (0+255),f,b
  8071  013192  0EFF               	movlw	255
  8072  013194  179C               	andwf	(___ftmul@f2+1)& (0+255),f,b
  8073  013196  0E00               	movlw	0
  8074  013198  179D               	andwf	(___ftmul@f2+2)& (0+255),f,b
  8075                           
  8076                           ; BSR set to: 1
  8077  01319A  0E00               	movlw	0
  8078  01319C  6FA2               	movwf	___ftmul@f3_as_product& (0+255),b
  8079  01319E  0E00               	movlw	0
  8080  0131A0  6FA3               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  8081  0131A2  0E00               	movlw	0
  8082  0131A4  6FA4               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  8083                           
  8084                           ; BSR set to: 1
  8085  0131A6  0E07               	movlw	7
  8086  0131A8  6FA5               	movwf	___ftmul@cntr& (0+255),b
  8087  0131AA                     
  8088                           ; BSR set to: 1
  8089                           
  8090                           ; BSR set to: 1
  8091  0131AA  A198               	btfss	___ftmul@f1& (0+255),0,b
  8092  0131AC  D006               	goto	l1313
  8093                           
  8094                           ; BSR set to: 1
  8095  0131AE  519B               	movf	___ftmul@f2& (0+255),w,b
  8096  0131B0  27A2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8097  0131B2  519C               	movf	(___ftmul@f2+1)& (0+255),w,b
  8098  0131B4  23A3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8099  0131B6  519D               	movf	(___ftmul@f2+2)& (0+255),w,b
  8100  0131B8  23A4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8101  0131BA                     l1313:
  8102                           
  8103                           ; BSR set to: 1
  8104                           
  8105                           ; BSR set to: 1
  8106  0131BA  90D8               	bcf	status,0,c
  8107  0131BC  339A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8108  0131BE  3399               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8109  0131C0  3398               	rrcf	___ftmul@f1& (0+255),f,b
  8110  0131C2  90D8               	bcf	status,0,c
  8111  0131C4  379B               	rlcf	___ftmul@f2& (0+255),f,b
  8112  0131C6  379C               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  8113  0131C8  379D               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  8114                           
  8115                           ; BSR set to: 1
  8116  0131CA  2FA5               	decfsz	___ftmul@cntr& (0+255),f,b
  8117  0131CC  D7EE               	goto	l1312
  8118                           
  8119                           ; BSR set to: 1
  8120                           
  8121                           ; BSR set to: 1
  8122  0131CE  0E09               	movlw	9
  8123  0131D0  6FA5               	movwf	___ftmul@cntr& (0+255),b
  8124  0131D2                     
  8125                           ; BSR set to: 1
  8126                           
  8127                           ; BSR set to: 1
  8128  0131D2  A198               	btfss	___ftmul@f1& (0+255),0,b
  8129  0131D4  D006               	goto	l1316
  8130                           
  8131                           ; BSR set to: 1
  8132  0131D6  519B               	movf	___ftmul@f2& (0+255),w,b
  8133  0131D8  27A2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8134  0131DA  519C               	movf	(___ftmul@f2+1)& (0+255),w,b
  8135  0131DC  23A3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8136  0131DE  519D               	movf	(___ftmul@f2+2)& (0+255),w,b
  8137  0131E0  23A4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8138  0131E2                     l1316:
  8139                           
  8140                           ; BSR set to: 1
  8141                           
  8142                           ; BSR set to: 1
  8143  0131E2  90D8               	bcf	status,0,c
  8144  0131E4  339A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8145  0131E6  3399               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8146  0131E8  3398               	rrcf	___ftmul@f1& (0+255),f,b
  8147  0131EA  90D8               	bcf	status,0,c
  8148  0131EC  33A4               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  8149  0131EE  33A3               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  8150  0131F0  33A2               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  8151                           
  8152                           ; BSR set to: 1
  8153  0131F2  2FA5               	decfsz	___ftmul@cntr& (0+255),f,b
  8154  0131F4  D7EE               	goto	l1315
  8155                           
  8156                           ; BSR set to: 1
  8157                           
  8158                           ; BSR set to: 1
  8159  0131F6  C1A2  F0A0         	movff	___ftmul@f3_as_product,___ftpack@arg
  8160  0131FA  C1A3  F0A1         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8161  0131FE  C1A4  F0A2         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8162  013202  C1A1  F0A3         	movff	___ftmul@exp,___ftpack@exp
  8163  013206  C1A6  F0A4         	movff	___ftmul@sign,___ftpack@sign
  8164  01320A  EC75  F09A         	call	___ftpack	;wreg free
  8165  01320E  C0A0  F198         	movff	?___ftpack,?___ftmul
  8166  013212  C0A1  F199         	movff	?___ftpack+1,?___ftmul+1
  8167  013216  C0A2  F19A         	movff	?___ftpack+2,?___ftmul+2
  8168  01321A  0012               	return	
  8169  01321C                     __end_of___ftmul:
  8170                           	opt stack 0
  8171                           tblptru	equ	0xFF8
  8172                           tblptrh	equ	0xFF7
  8173                           tblptrl	equ	0xFF6
  8174                           tablat	equ	0xFF5
  8175                           prodh	equ	0xFF4
  8176                           prodl	equ	0xFF3
  8177                           intcon	equ	0xFF2
  8178                           postinc0	equ	0xFEE
  8179                           wreg	equ	0xFE8
  8180                           indf2	equ	0xFDF
  8181                           postinc2	equ	0xFDE
  8182                           postdec2	equ	0xFDD
  8183                           fsr2h	equ	0xFDA
  8184                           fsr2l	equ	0xFD9
  8185                           status	equ	0xFD8
  8186                           
  8187 ;; *************** function ___awmod *****************
  8188 ;; Defined at:
  8189 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;  dividend        2   64[BANK0 ] int 
  8192 ;;  divisor         2   66[BANK0 ] int 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;  sign            1   69[BANK0 ] unsigned char 
  8195 ;;  counter         1   68[BANK0 ] unsigned char 
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  2   64[BANK0 ] int 
  8198 ;; Registers used:
  8199 ;;		wreg, status,2, status,0
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8205 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8206 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8208 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8209 ;;Total ram usage:        6 bytes
  8210 ;; Hardware stack levels used:    1
  8211 ;; Hardware stack levels required when called:   10
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_fround
  8216 ;;		_scale
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text20
  8221  013C36                     __ptext20:
  8222                           	opt stack 0
  8223  013C36                     ___awmod:
  8224                           	opt stack 16
  8225                           
  8226                           ;incstack = 0
  8227  013C36  0E00               	movlw	0
  8228  013C38  0100               	movlb	0	; () banked
  8229  013C3A  6FA5               	movwf	___awmod@sign& (0+255),b
  8230                           
  8231                           ; BSR set to: 0
  8232  013C3C  AFA1               	btfss	(___awmod@dividend+1)& (0+255),7,b
  8233  013C3E  D006               	goto	l1162
  8234                           
  8235                           ; BSR set to: 0
  8236  013C40  6DA0               	negf	___awmod@dividend& (0+255),b
  8237  013C42  1FA1               	comf	(___awmod@dividend+1)& (0+255),f,b
  8238  013C44  B0D8               	btfsc	status,0,c
  8239  013C46  2BA1               	incf	(___awmod@dividend+1)& (0+255),f,b
  8240                           
  8241                           ; BSR set to: 0
  8242  013C48  0E01               	movlw	1
  8243  013C4A  6FA5               	movwf	___awmod@sign& (0+255),b
  8244  013C4C                     l1162:
  8245                           
  8246                           ; BSR set to: 0
  8247                           
  8248                           ; BSR set to: 0
  8249  013C4C  AFA3               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8250  013C4E  D004               	goto	l1163
  8251                           
  8252                           ; BSR set to: 0
  8253  013C50  6DA2               	negf	___awmod@divisor& (0+255),b
  8254  013C52  1FA3               	comf	(___awmod@divisor+1)& (0+255),f,b
  8255  013C54  B0D8               	btfsc	status,0,c
  8256  013C56  2BA3               	incf	(___awmod@divisor+1)& (0+255),f,b
  8257  013C58                     l1163:
  8258                           
  8259                           ; BSR set to: 0
  8260                           
  8261                           ; BSR set to: 0
  8262  013C58  51A2               	movf	___awmod@divisor& (0+255),w,b
  8263  013C5A  11A3               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8264  013C5C  B4D8               	btfsc	status,2,c
  8265  013C5E  D018               	goto	l1170
  8266                           
  8267                           ; BSR set to: 0
  8268  013C60  0E01               	movlw	1
  8269  013C62  6FA4               	movwf	___awmod@counter& (0+255),b
  8270  013C64  D004               	goto	l1165
  8271  013C66                     
  8272                           ; BSR set to: 0
  8273                           
  8274                           ; BSR set to: 0
  8275  013C66  90D8               	bcf	status,0,c
  8276  013C68  37A2               	rlcf	___awmod@divisor& (0+255),f,b
  8277  013C6A  37A3               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8278  013C6C  2BA4               	incf	___awmod@counter& (0+255),f,b
  8279  013C6E                     l1165:
  8280                           
  8281                           ; BSR set to: 0
  8282                           
  8283                           ; BSR set to: 0
  8284  013C6E  AFA3               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8285  013C70  D7FA               	goto	l1166
  8286  013C72                     u6870:
  8287                           
  8288                           ; BSR set to: 0
  8289                           
  8290                           ; BSR set to: 0
  8291                           
  8292                           ; BSR set to: 0
  8293  013C72  51A2               	movf	___awmod@divisor& (0+255),w,b
  8294  013C74  5DA0               	subwf	___awmod@dividend& (0+255),w,b
  8295  013C76  51A3               	movf	(___awmod@divisor+1)& (0+255),w,b
  8296  013C78  59A1               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8297  013C7A  A0D8               	btfss	status,0,c
  8298  013C7C  D004               	goto	l1169
  8299                           
  8300                           ; BSR set to: 0
  8301  013C7E  51A2               	movf	___awmod@divisor& (0+255),w,b
  8302  013C80  5FA0               	subwf	___awmod@dividend& (0+255),f,b
  8303  013C82  51A3               	movf	(___awmod@divisor+1)& (0+255),w,b
  8304  013C84  5BA1               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8305  013C86                     l1169:
  8306                           
  8307                           ; BSR set to: 0
  8308                           
  8309                           ; BSR set to: 0
  8310  013C86  90D8               	bcf	status,0,c
  8311  013C88  33A3               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8312  013C8A  33A2               	rrcf	___awmod@divisor& (0+255),f,b
  8313                           
  8314                           ; BSR set to: 0
  8315  013C8C  2FA4               	decfsz	___awmod@counter& (0+255),f,b
  8316  013C8E  D7F1               	goto	u6870
  8317  013C90                     l1170:
  8318                           
  8319                           ; BSR set to: 0
  8320                           
  8321                           ; BSR set to: 0
  8322                           
  8323                           ; BSR set to: 0
  8324  013C90  51A5               	movf	___awmod@sign& (0+255),w,b
  8325  013C92  B4D8               	btfsc	status,2,c
  8326  013C94  D004               	goto	l1171
  8327                           
  8328                           ; BSR set to: 0
  8329  013C96  6DA0               	negf	___awmod@dividend& (0+255),b
  8330  013C98  1FA1               	comf	(___awmod@dividend+1)& (0+255),f,b
  8331  013C9A  B0D8               	btfsc	status,0,c
  8332  013C9C  2BA1               	incf	(___awmod@dividend+1)& (0+255),f,b
  8333  013C9E                     l1171:
  8334                           
  8335                           ; BSR set to: 0
  8336                           
  8337                           ; BSR set to: 0
  8338  013C9E  C0A0  F0A0         	movff	___awmod@dividend,?___awmod
  8339  013CA2  C0A1  F0A1         	movff	___awmod@dividend+1,?___awmod+1
  8340  013CA6  0012               	return	
  8341  013CA8                     __end_of___awmod:
  8342                           	opt stack 0
  8343                           tblptru	equ	0xFF8
  8344                           tblptrh	equ	0xFF7
  8345                           tblptrl	equ	0xFF6
  8346                           tablat	equ	0xFF5
  8347                           prodh	equ	0xFF4
  8348                           prodl	equ	0xFF3
  8349                           intcon	equ	0xFF2
  8350                           postinc0	equ	0xFEE
  8351                           wreg	equ	0xFE8
  8352                           indf2	equ	0xFDF
  8353                           postinc2	equ	0xFDE
  8354                           postdec2	equ	0xFDD
  8355                           fsr2h	equ	0xFDA
  8356                           fsr2l	equ	0xFD9
  8357                           status	equ	0xFD8
  8358                           
  8359 ;; *************** function ___awdiv *****************
  8360 ;; Defined at:
  8361 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;  dividend        2    0[BANK1 ] int 
  8364 ;;  divisor         2    2[BANK1 ] int 
  8365 ;; Auto vars:     Size  Location     Type
  8366 ;;  quotient        2    6[BANK1 ] int 
  8367 ;;  sign            1    5[BANK1 ] unsigned char 
  8368 ;;  counter         1    4[BANK1 ] unsigned char 
  8369 ;; Return value:  Size  Location     Type
  8370 ;;                  2    0[BANK1 ] int 
  8371 ;; Registers used:
  8372 ;;		wreg, status,2, status,0
  8373 ;; Tracked objects:
  8374 ;;		On entry : 0/0
  8375 ;;		On exit  : 0/0
  8376 ;;		Unchanged: 0/0
  8377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8378 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8379 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8381 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8382 ;;Total ram usage:        8 bytes
  8383 ;; Hardware stack levels used:    1
  8384 ;; Hardware stack levels required when called:   10
  8385 ;; This function calls:
  8386 ;;		Nothing
  8387 ;; This function is called by:
  8388 ;;		_fround
  8389 ;;		_scale
  8390 ;;		_printf
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           	psect	text21
  8395  013A36                     __ptext21:
  8396                           	opt stack 0
  8397  013A36                     ___awdiv:
  8398                           	opt stack 16
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;incstack = 0
  8402  013A36  0E00               	movlw	0
  8403  013A38  0101               	movlb	1	; () banked
  8404  013A3A  6F8F               	movwf	___awdiv@sign& (0+255),b
  8405                           
  8406                           ; BSR set to: 1
  8407  013A3C  AF8D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8408  013A3E  D006               	goto	l1149
  8409                           
  8410                           ; BSR set to: 1
  8411  013A40  6D8C               	negf	___awdiv@divisor& (0+255),b
  8412  013A42  1F8D               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8413  013A44  B0D8               	btfsc	status,0,c
  8414  013A46  2B8D               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8415                           
  8416                           ; BSR set to: 1
  8417  013A48  0E01               	movlw	1
  8418  013A4A  6F8F               	movwf	___awdiv@sign& (0+255),b
  8419  013A4C                     l1149:
  8420                           
  8421                           ; BSR set to: 1
  8422                           
  8423                           ; BSR set to: 1
  8424  013A4C  AF8B               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8425  013A4E  D006               	goto	l1150
  8426                           
  8427                           ; BSR set to: 1
  8428  013A50  6D8A               	negf	___awdiv@dividend& (0+255),b
  8429  013A52  1F8B               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8430  013A54  B0D8               	btfsc	status,0,c
  8431  013A56  2B8B               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8432                           
  8433                           ; BSR set to: 1
  8434  013A58  0E01               	movlw	1
  8435  013A5A  1B8F               	xorwf	___awdiv@sign& (0+255),f,b
  8436  013A5C                     l1150:
  8437                           
  8438                           ; BSR set to: 1
  8439                           
  8440                           ; BSR set to: 1
  8441  013A5C  0E00               	movlw	0
  8442  013A5E  6F91               	movwf	(___awdiv@quotient+1)& (0+255),b
  8443  013A60  0E00               	movlw	0
  8444  013A62  6F90               	movwf	___awdiv@quotient& (0+255),b
  8445                           
  8446                           ; BSR set to: 1
  8447  013A64  518C               	movf	___awdiv@divisor& (0+255),w,b
  8448  013A66  118D               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8449  013A68  B4D8               	btfsc	status,2,c
  8450  013A6A  D01C               	goto	l1157
  8451                           
  8452                           ; BSR set to: 1
  8453  013A6C  0E01               	movlw	1
  8454  013A6E  6F8E               	movwf	___awdiv@counter& (0+255),b
  8455  013A70  D004               	goto	l1152
  8456  013A72                     
  8457                           ; BSR set to: 1
  8458                           
  8459                           ; BSR set to: 1
  8460  013A72  90D8               	bcf	status,0,c
  8461  013A74  378C               	rlcf	___awdiv@divisor& (0+255),f,b
  8462  013A76  378D               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8463  013A78  2B8E               	incf	___awdiv@counter& (0+255),f,b
  8464  013A7A                     l1152:
  8465                           
  8466                           ; BSR set to: 1
  8467                           
  8468                           ; BSR set to: 1
  8469  013A7A  AF8D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8470  013A7C  D7FA               	goto	l1153
  8471  013A7E                     u6810:
  8472                           
  8473                           ; BSR set to: 1
  8474                           
  8475                           ; BSR set to: 1
  8476                           
  8477                           ; BSR set to: 1
  8478  013A7E  90D8               	bcf	status,0,c
  8479  013A80  3790               	rlcf	___awdiv@quotient& (0+255),f,b
  8480  013A82  3791               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8481                           
  8482                           ; BSR set to: 1
  8483  013A84  518C               	movf	___awdiv@divisor& (0+255),w,b
  8484  013A86  5D8A               	subwf	___awdiv@dividend& (0+255),w,b
  8485  013A88  518D               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8486  013A8A  598B               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8487  013A8C  A0D8               	btfss	status,0,c
  8488  013A8E  D005               	goto	l1156
  8489                           
  8490                           ; BSR set to: 1
  8491  013A90  518C               	movf	___awdiv@divisor& (0+255),w,b
  8492  013A92  5F8A               	subwf	___awdiv@dividend& (0+255),f,b
  8493  013A94  518D               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8494  013A96  5B8B               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8495                           
  8496                           ; BSR set to: 1
  8497  013A98  8190               	bsf	___awdiv@quotient& (0+255),0,b
  8498  013A9A                     l1156:
  8499                           
  8500                           ; BSR set to: 1
  8501                           
  8502                           ; BSR set to: 1
  8503  013A9A  90D8               	bcf	status,0,c
  8504  013A9C  338D               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8505  013A9E  338C               	rrcf	___awdiv@divisor& (0+255),f,b
  8506                           
  8507                           ; BSR set to: 1
  8508  013AA0  2F8E               	decfsz	___awdiv@counter& (0+255),f,b
  8509  013AA2  D7ED               	goto	u6810
  8510  013AA4                     l1157:
  8511                           
  8512                           ; BSR set to: 1
  8513                           
  8514                           ; BSR set to: 1
  8515                           
  8516                           ; BSR set to: 1
  8517  013AA4  518F               	movf	___awdiv@sign& (0+255),w,b
  8518  013AA6  B4D8               	btfsc	status,2,c
  8519  013AA8  D004               	goto	l1158
  8520                           
  8521                           ; BSR set to: 1
  8522  013AAA  6D90               	negf	___awdiv@quotient& (0+255),b
  8523  013AAC  1F91               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8524  013AAE  B0D8               	btfsc	status,0,c
  8525  013AB0  2B91               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8526  013AB2                     l1158:
  8527                           
  8528                           ; BSR set to: 1
  8529                           
  8530                           ; BSR set to: 1
  8531  013AB2  C190  F18A         	movff	___awdiv@quotient,?___awdiv
  8532  013AB6  C191  F18B         	movff	___awdiv@quotient+1,?___awdiv+1
  8533  013ABA  0012               	return	
  8534  013ABC                     __end_of___awdiv:
  8535                           	opt stack 0
  8536                           tblptru	equ	0xFF8
  8537                           tblptrh	equ	0xFF7
  8538                           tblptrl	equ	0xFF6
  8539                           tablat	equ	0xFF5
  8540                           prodh	equ	0xFF4
  8541                           prodl	equ	0xFF3
  8542                           intcon	equ	0xFF2
  8543                           postinc0	equ	0xFEE
  8544                           wreg	equ	0xFE8
  8545                           indf2	equ	0xFDF
  8546                           postinc2	equ	0xFDE
  8547                           postdec2	equ	0xFDD
  8548                           fsr2h	equ	0xFDA
  8549                           fsr2l	equ	0xFD9
  8550                           status	equ	0xFD8
  8551                           
  8552 ;; *************** function __tdiv_to_l_ *****************
  8553 ;; Defined at:
  8554 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;  f1              3   64[BANK0 ] float 
  8557 ;;  f2              3   67[BANK0 ] float 
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;  quot            4    3[BANK1 ] unsigned long 
  8560 ;;  exp1            1    8[BANK1 ] unsigned char 
  8561 ;;  cntr            1    7[BANK1 ] unsigned char 
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  4   64[BANK0 ] unsigned long 
  8564 ;; Registers used:
  8565 ;;		wreg, status,2, status,0
  8566 ;; Tracked objects:
  8567 ;;		On entry : 0/0
  8568 ;;		On exit  : 0/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8571 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8572 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8573 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8574 ;;      Totals:         0       6       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8575 ;;Total ram usage:       15 bytes
  8576 ;; Hardware stack levels used:    1
  8577 ;; Hardware stack levels required when called:   10
  8578 ;; This function calls:
  8579 ;;		Nothing
  8580 ;; This function is called by:
  8581 ;;		_printf
  8582 ;; This function uses a non-reentrant model
  8583 ;;
  8584                           
  8585                           	psect	text22
  8586  0129F2                     __ptext22:
  8587                           	opt stack 0
  8588  0129F2                     __tdiv_to_l_:
  8589                           	opt stack 17
  8590                           
  8591                           ; BSR set to: 1
  8592                           ;incstack = 0
  8593  0129F2  C0A2  F18A         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  8594  0129F6  0101               	movlb	1	; () banked
  8595  0129F8  6B8B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  8596  0129FA  6B8C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  8597  0129FC  0100               	movlb	0	; () banked
  8598  0129FE  35A1               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  8599  012A00  0101               	movlb	1	; () banked
  8600  012A02  378A               	rlcf	??__tdiv_to_l_& (0+255),f,b
  8601  012A04  E301               	bnc	u6971
  8602  012A06  818B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  8603  012A08                     u6971:
  8604  012A08  518A               	movf	??__tdiv_to_l_& (0+255),w,b
  8605  012A0A  6F92               	movwf	__tdiv_to_l_@exp1& (0+255),b
  8606  012A0C  5192               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  8607  012A0E  A4D8               	btfss	status,2,c
  8608  012A10  D00A               	goto	l1285
  8609                           
  8610                           ; BSR set to: 1
  8611  012A12  0E00               	movlw	0
  8612  012A14  0100               	movlb	0	; () banked
  8613  012A16  6FA0               	movwf	?__tdiv_to_l_& (0+255),b
  8614  012A18  0E00               	movlw	0
  8615  012A1A  6FA1               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  8616  012A1C  0E00               	movlw	0
  8617  012A1E  6FA2               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  8618  012A20  0E00               	movlw	0
  8619  012A22  6FA3               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  8620                           
  8621                           ; BSR set to: 0
  8622  012A24  0012               	return	
  8623  012A26                     l1285:
  8624                           
  8625                           ; BSR set to: 0
  8626  012A26  C0A5  F18A         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  8627  012A2A  0101               	movlb	1	; () banked
  8628  012A2C  6B8B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  8629  012A2E  6B8C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  8630  012A30  0100               	movlb	0	; () banked
  8631  012A32  35A4               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  8632  012A34  0101               	movlb	1	; () banked
  8633  012A36  378A               	rlcf	??__tdiv_to_l_& (0+255),f,b
  8634  012A38  E301               	bnc	u6991
  8635  012A3A  818B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  8636  012A3C                     u6991:
  8637  012A3C  518A               	movf	??__tdiv_to_l_& (0+255),w,b
  8638  012A3E  6F91               	movwf	__tdiv_to_l_@cntr& (0+255),b
  8639  012A40  5191               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  8640  012A42  A4D8               	btfss	status,2,c
  8641  012A44  D00A               	goto	l1287
  8642                           
  8643                           ; BSR set to: 1
  8644  012A46  0E00               	movlw	0
  8645  012A48  0100               	movlb	0	; () banked
  8646  012A4A  6FA0               	movwf	?__tdiv_to_l_& (0+255),b
  8647  012A4C  0E00               	movlw	0
  8648  012A4E  6FA1               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  8649  012A50  0E00               	movlw	0
  8650  012A52  6FA2               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  8651  012A54  0E00               	movlw	0
  8652  012A56  6FA3               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  8653                           
  8654                           ; BSR set to: 0
  8655  012A58  0012               	return	
  8656  012A5A                     l1287:
  8657                           
  8658                           ; BSR set to: 0
  8659  012A5A  0100               	movlb	0	; () banked
  8660  012A5C  8FA1               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  8661                           
  8662                           ; BSR set to: 0
  8663  012A5E  0EFF               	movlw	255
  8664  012A60  17A0               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  8665  012A62  0EFF               	movlw	255
  8666  012A64  17A1               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  8667  012A66  0E00               	movlw	0
  8668  012A68  17A2               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  8669  012A6A  8FA4               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  8670                           
  8671                           ; BSR set to: 0
  8672  012A6C  0EFF               	movlw	255
  8673  012A6E  17A3               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  8674  012A70  0EFF               	movlw	255
  8675  012A72  17A4               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  8676  012A74  0E00               	movlw	0
  8677  012A76  17A5               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  8678                           
  8679                           ; BSR set to: 0
  8680  012A78  0E00               	movlw	0
  8681  012A7A  0101               	movlb	1	; () banked
  8682  012A7C  6F8D               	movwf	__tdiv_to_l_@quot& (0+255),b
  8683  012A7E  0E00               	movlw	0
  8684  012A80  6F8E               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  8685  012A82  0E00               	movlw	0
  8686  012A84  6F8F               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  8687  012A86  0E00               	movlw	0
  8688  012A88  6F90               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  8689                           
  8690                           ; BSR set to: 1
  8691  012A8A  0E7F               	movlw	127
  8692  012A8C  5F92               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  8693                           
  8694                           ; BSR set to: 1
  8695  012A8E  5191               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  8696  012A90  0F98               	addlw	152
  8697  012A92  5F92               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  8698                           
  8699                           ; BSR set to: 1
  8700  012A94  0E18               	movlw	24
  8701  012A96  6F91               	movwf	__tdiv_to_l_@cntr& (0+255),b
  8702  012A98                     l1288:
  8703                           
  8704                           ; BSR set to: 1
  8705  012A98  90D8               	bcf	status,0,c
  8706  012A9A  378D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  8707  012A9C  378E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  8708  012A9E  378F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  8709  012AA0  3790               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  8710                           
  8711                           ; BSR set to: 1
  8712  012AA2  0100               	movlb	0	; () banked
  8713  012AA4  51A3               	movf	__tdiv_to_l_@f2& (0+255),w,b
  8714  012AA6  5DA0               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  8715  012AA8  51A4               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  8716  012AAA  59A1               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  8717  012AAC  51A5               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  8718  012AAE  59A2               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  8719  012AB0  A0D8               	btfss	status,0,c
  8720  012AB2  D008               	goto	l1289
  8721                           
  8722                           ; BSR set to: 0
  8723  012AB4  51A3               	movf	__tdiv_to_l_@f2& (0+255),w,b
  8724  012AB6  5FA0               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  8725  012AB8  51A4               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  8726  012ABA  5BA1               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  8727  012ABC  51A5               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  8728  012ABE  5BA2               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  8729                           
  8730                           ; BSR set to: 0
  8731  012AC0  0101               	movlb	1	; () banked
  8732  012AC2  818D               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  8733  012AC4                     l1289:
  8734  012AC4  0100               	movlb	0	; () banked
  8735  012AC6  90D8               	bcf	status,0,c
  8736  012AC8  37A0               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  8737  012ACA  37A1               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  8738  012ACC  37A2               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  8739                           
  8740                           ; BSR set to: 0
  8741  012ACE  0101               	movlb	1	; () banked
  8742  012AD0  2F91               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  8743  012AD2  D7E2               	goto	l1288
  8744                           
  8745                           ; BSR set to: 1
  8746                           
  8747                           ; BSR set to: 1
  8748  012AD4  AF92               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  8749  012AD6  D018               	goto	l1291
  8750                           
  8751                           ; BSR set to: 1
  8752  012AD8  5192               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  8753  012ADA  0A80               	xorlw	128
  8754  012ADC  0F97               	addlw	151
  8755  012ADE  B0D8               	btfsc	status,0,c
  8756  012AE0  D00A               	goto	l1292
  8757                           
  8758                           ; BSR set to: 1
  8759  012AE2  0E00               	movlw	0
  8760  012AE4  0100               	movlb	0	; () banked
  8761  012AE6  6FA0               	movwf	?__tdiv_to_l_& (0+255),b
  8762  012AE8  0E00               	movlw	0
  8763  012AEA  6FA1               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  8764  012AEC  0E00               	movlw	0
  8765  012AEE  6FA2               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  8766  012AF0  0E00               	movlw	0
  8767  012AF2  6FA3               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  8768                           
  8769                           ; BSR set to: 0
  8770  012AF4  0012               	return	
  8771  012AF6                     l1292:
  8772                           
  8773                           ; BSR set to: 0
  8774                           
  8775                           ; BSR set to: 0
  8776  012AF6  0101               	movlb	1	; () banked
  8777  012AF8  90D8               	bcf	status,0,c
  8778  012AFA  3390               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  8779  012AFC  338F               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  8780  012AFE  338E               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  8781  012B00  338D               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  8782                           
  8783                           ; BSR set to: 1
  8784  012B02  3F92               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  8785  012B04  D7F8               	goto	l1292
  8786                           
  8787                           ; BSR set to: 1
  8788  012B06  D018               	goto	u7050
  8789  012B08                     l1291:
  8790                           
  8791                           ; BSR set to: 1
  8792                           
  8793                           ; BSR set to: 1
  8794  012B08  0E17               	movlw	23
  8795  012B0A  6592               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  8796  012B0C  D011               	goto	l1297
  8797                           
  8798                           ; BSR set to: 1
  8799  012B0E  0E00               	movlw	0
  8800  012B10  0100               	movlb	0	; () banked
  8801  012B12  6FA0               	movwf	?__tdiv_to_l_& (0+255),b
  8802  012B14  0E00               	movlw	0
  8803  012B16  6FA1               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  8804  012B18  0E00               	movlw	0
  8805  012B1A  6FA2               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  8806  012B1C  0E00               	movlw	0
  8807  012B1E  6FA3               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  8808                           
  8809                           ; BSR set to: 0
  8810  012B20  0012               	return	
  8811  012B22                     
  8812                           ; BSR set to: 0
  8813  012B22  0101               	movlb	1	; () banked
  8814  012B24  90D8               	bcf	status,0,c
  8815  012B26  378D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  8816  012B28  378E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  8817  012B2A  378F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  8818  012B2C  3790               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  8819  012B2E  0792               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  8820  012B30                     l1297:
  8821                           
  8822                           ; BSR set to: 1
  8823  012B30  0101               	movlb	1	; () banked
  8824  012B32  5192               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  8825  012B34  A4D8               	btfss	status,2,c
  8826  012B36  D7F5               	goto	l1298
  8827  012B38                     u7050:
  8828                           
  8829                           ; BSR set to: 1
  8830                           
  8831                           ; BSR set to: 1
  8832  012B38  C18D  F0A0         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  8833  012B3C  C18E  F0A1         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  8834  012B40  C18F  F0A2         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  8835  012B44  C190  F0A3         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  8836  012B48  0012               	return		;funcret
  8837  012B4A                     __end_of__tdiv_to_l_:
  8838                           	opt stack 0
  8839                           tblptru	equ	0xFF8
  8840                           tblptrh	equ	0xFF7
  8841                           tblptrl	equ	0xFF6
  8842                           tablat	equ	0xFF5
  8843                           prodh	equ	0xFF4
  8844                           prodl	equ	0xFF3
  8845                           intcon	equ	0xFF2
  8846                           postinc0	equ	0xFEE
  8847                           wreg	equ	0xFE8
  8848                           indf2	equ	0xFDF
  8849                           postinc2	equ	0xFDE
  8850                           postdec2	equ	0xFDD
  8851                           fsr2h	equ	0xFDA
  8852                           fsr2l	equ	0xFD9
  8853                           status	equ	0xFD8
  8854                           
  8855 ;; *************** function __div_to_l_ *****************
  8856 ;; Defined at:
  8857 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
  8858 ;; Parameters:    Size  Location     Type
  8859 ;;  f1              3   64[BANK0 ] unsigned long 
  8860 ;;  f2              3   67[BANK0 ] unsigned long 
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;  quot            4    0[BANK1 ] unsigned long 
  8863 ;;  exp1            1    5[BANK1 ] unsigned char 
  8864 ;;  cntr            1    4[BANK1 ] unsigned char 
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  4   64[BANK0 ] unsigned long 
  8867 ;; Registers used:
  8868 ;;		wreg, status,2, status,0
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8874 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8875 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8877 ;;      Totals:         0       6       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8878 ;;Total ram usage:       12 bytes
  8879 ;; Hardware stack levels used:    1
  8880 ;; Hardware stack levels required when called:   10
  8881 ;; This function calls:
  8882 ;;		Nothing
  8883 ;; This function is called by:
  8884 ;;		_printf
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888                           	psect	text23
  8889  012B4A                     __ptext23:
  8890                           	opt stack 0
  8891  012B4A                     __div_to_l_:
  8892                           	opt stack 17
  8893                           
  8894                           ;incstack = 0
  8895  012B4A  0100               	movlb	0	; () banked
  8896  012B4C  35A2               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  8897  012B4E  35A3               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  8898  012B50  0101               	movlb	1	; () banked
  8899  012B52  6F8F               	movwf	__div_to_l_@exp1& (0+255),b
  8900  012B54  518F               	movf	__div_to_l_@exp1& (0+255),w,b
  8901  012B56  A4D8               	btfss	status,2,c
  8902  012B58  D00A               	goto	l1181
  8903                           
  8904                           ; BSR set to: 1
  8905  012B5A  0E00               	movlw	0
  8906  012B5C  0100               	movlb	0	; () banked
  8907  012B5E  6FA0               	movwf	?__div_to_l_& (0+255),b
  8908  012B60  0E00               	movlw	0
  8909  012B62  6FA1               	movwf	(?__div_to_l_+1)& (0+255),b
  8910  012B64  0E00               	movlw	0
  8911  012B66  6FA2               	movwf	(?__div_to_l_+2)& (0+255),b
  8912  012B68  0E00               	movlw	0
  8913  012B6A  6FA3               	movwf	(?__div_to_l_+3)& (0+255),b
  8914                           
  8915                           ; BSR set to: 0
  8916  012B6C  0012               	return	
  8917  012B6E                     l1181:
  8918                           
  8919                           ; BSR set to: 0
  8920  012B6E  0100               	movlb	0	; () banked
  8921  012B70  35A5               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  8922  012B72  35A6               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  8923  012B74  0101               	movlb	1	; () banked
  8924  012B76  6F8E               	movwf	__div_to_l_@cntr& (0+255),b
  8925  012B78  518E               	movf	__div_to_l_@cntr& (0+255),w,b
  8926  012B7A  A4D8               	btfss	status,2,c
  8927  012B7C  D00A               	goto	l1183
  8928                           
  8929                           ; BSR set to: 1
  8930  012B7E  0E00               	movlw	0
  8931  012B80  0100               	movlb	0	; () banked
  8932  012B82  6FA0               	movwf	?__div_to_l_& (0+255),b
  8933  012B84  0E00               	movlw	0
  8934  012B86  6FA1               	movwf	(?__div_to_l_+1)& (0+255),b
  8935  012B88  0E00               	movlw	0
  8936  012B8A  6FA2               	movwf	(?__div_to_l_+2)& (0+255),b
  8937  012B8C  0E00               	movlw	0
  8938  012B8E  6FA3               	movwf	(?__div_to_l_+3)& (0+255),b
  8939                           
  8940                           ; BSR set to: 0
  8941  012B90  0012               	return	
  8942  012B92                     l1183:
  8943                           
  8944                           ; BSR set to: 0
  8945  012B92  0100               	movlb	0	; () banked
  8946  012B94  8FA2               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  8947                           
  8948                           ; BSR set to: 0
  8949  012B96  0EFF               	movlw	255
  8950  012B98  17A0               	andwf	__div_to_l_@f1& (0+255),f,b
  8951  012B9A  0EFF               	movlw	255
  8952  012B9C  17A1               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  8953  012B9E  0EFF               	movlw	255
  8954  012BA0  17A2               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  8955  012BA2  0E00               	movlw	0
  8956  012BA4  17A3               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  8957                           
  8958                           ; BSR set to: 0
  8959  012BA6  8FA5               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  8960  012BA8  0EFF               	movlw	255
  8961  012BAA  17A3               	andwf	__div_to_l_@f2& (0+255),f,b
  8962  012BAC  0EFF               	movlw	255
  8963  012BAE  17A4               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  8964  012BB0  0EFF               	movlw	255
  8965  012BB2  17A5               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  8966  012BB4  0E00               	movlw	0
  8967  012BB6  17A6               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  8968                           
  8969                           ; BSR set to: 0
  8970  012BB8  0E00               	movlw	0
  8971  012BBA  0101               	movlb	1	; () banked
  8972  012BBC  6F8A               	movwf	__div_to_l_@quot& (0+255),b
  8973  012BBE  0E00               	movlw	0
  8974  012BC0  6F8B               	movwf	(__div_to_l_@quot+1)& (0+255),b
  8975  012BC2  0E00               	movlw	0
  8976  012BC4  6F8C               	movwf	(__div_to_l_@quot+2)& (0+255),b
  8977  012BC6  0E00               	movlw	0
  8978  012BC8  6F8D               	movwf	(__div_to_l_@quot+3)& (0+255),b
  8979                           
  8980                           ; BSR set to: 1
  8981  012BCA  0E7F               	movlw	127
  8982  012BCC  5F8F               	subwf	__div_to_l_@exp1& (0+255),f,b
  8983                           
  8984                           ; BSR set to: 1
  8985  012BCE  518E               	movf	__div_to_l_@cntr& (0+255),w,b
  8986  012BD0  0FA0               	addlw	160
  8987  012BD2  5F8F               	subwf	__div_to_l_@exp1& (0+255),f,b
  8988                           
  8989                           ; BSR set to: 1
  8990  012BD4  0E20               	movlw	32
  8991  012BD6  6F8E               	movwf	__div_to_l_@cntr& (0+255),b
  8992  012BD8                     
  8993                           ; BSR set to: 1
  8994                           
  8995                           ; BSR set to: 1
  8996  012BD8  90D8               	bcf	status,0,c
  8997  012BDA  378A               	rlcf	__div_to_l_@quot& (0+255),f,b
  8998  012BDC  378B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  8999  012BDE  378C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9000  012BE0  378D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9001                           
  9002                           ; BSR set to: 1
  9003  012BE2  0100               	movlb	0	; () banked
  9004  012BE4  51A3               	movf	__div_to_l_@f2& (0+255),w,b
  9005  012BE6  5DA0               	subwf	__div_to_l_@f1& (0+255),w,b
  9006  012BE8  51A4               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9007  012BEA  59A1               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  9008  012BEC  51A5               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9009  012BEE  59A2               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  9010  012BF0  51A6               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9011  012BF2  59A3               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  9012  012BF4  A0D8               	btfss	status,0,c
  9013  012BF6  D00A               	goto	l1185
  9014                           
  9015                           ; BSR set to: 0
  9016  012BF8  51A3               	movf	__div_to_l_@f2& (0+255),w,b
  9017  012BFA  5FA0               	subwf	__div_to_l_@f1& (0+255),f,b
  9018  012BFC  51A4               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9019  012BFE  5BA1               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  9020  012C00  51A5               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9021  012C02  5BA2               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  9022  012C04  51A6               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9023  012C06  5BA3               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  9024                           
  9025                           ; BSR set to: 0
  9026  012C08  0101               	movlb	1	; () banked
  9027  012C0A  818A               	bsf	__div_to_l_@quot& (0+255),0,b
  9028  012C0C                     l1185:
  9029                           
  9030                           ; BSR set to: 1
  9031  012C0C  0100               	movlb	0	; () banked
  9032  012C0E  90D8               	bcf	status,0,c
  9033  012C10  37A0               	rlcf	__div_to_l_@f1& (0+255),f,b
  9034  012C12  37A1               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  9035  012C14  37A2               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  9036  012C16  37A3               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  9037                           
  9038                           ; BSR set to: 0
  9039  012C18  0101               	movlb	1	; () banked
  9040  012C1A  2F8E               	decfsz	__div_to_l_@cntr& (0+255),f,b
  9041  012C1C  D7DD               	goto	l1184
  9042                           
  9043                           ; BSR set to: 1
  9044                           
  9045                           ; BSR set to: 1
  9046  012C1E  AF8F               	btfss	__div_to_l_@exp1& (0+255),7,b
  9047  012C20  D018               	goto	l1187
  9048                           
  9049                           ; BSR set to: 1
  9050  012C22  518F               	movf	__div_to_l_@exp1& (0+255),w,b
  9051  012C24  0A80               	xorlw	128
  9052  012C26  0F9F               	addlw	159
  9053  012C28  B0D8               	btfsc	status,0,c
  9054  012C2A  D00A               	goto	l1188
  9055                           
  9056                           ; BSR set to: 1
  9057  012C2C  0E00               	movlw	0
  9058  012C2E  0100               	movlb	0	; () banked
  9059  012C30  6FA0               	movwf	?__div_to_l_& (0+255),b
  9060  012C32  0E00               	movlw	0
  9061  012C34  6FA1               	movwf	(?__div_to_l_+1)& (0+255),b
  9062  012C36  0E00               	movlw	0
  9063  012C38  6FA2               	movwf	(?__div_to_l_+2)& (0+255),b
  9064  012C3A  0E00               	movlw	0
  9065  012C3C  6FA3               	movwf	(?__div_to_l_+3)& (0+255),b
  9066                           
  9067                           ; BSR set to: 0
  9068  012C3E  0012               	return	
  9069  012C40                     l1188:
  9070                           
  9071                           ; BSR set to: 0
  9072                           
  9073                           ; BSR set to: 0
  9074  012C40  0101               	movlb	1	; () banked
  9075  012C42  90D8               	bcf	status,0,c
  9076  012C44  338D               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  9077  012C46  338C               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  9078  012C48  338B               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  9079  012C4A  338A               	rrcf	__div_to_l_@quot& (0+255),f,b
  9080                           
  9081                           ; BSR set to: 1
  9082  012C4C  3F8F               	incfsz	__div_to_l_@exp1& (0+255),f,b
  9083  012C4E  D7F8               	goto	l1188
  9084                           
  9085                           ; BSR set to: 1
  9086  012C50  D018               	goto	u7120
  9087  012C52                     l1187:
  9088                           
  9089                           ; BSR set to: 1
  9090                           
  9091                           ; BSR set to: 1
  9092  012C52  0E1F               	movlw	31
  9093  012C54  658F               	cpfsgt	__div_to_l_@exp1& (0+255),b
  9094  012C56  D011               	goto	l1193
  9095                           
  9096                           ; BSR set to: 1
  9097  012C58  0E00               	movlw	0
  9098  012C5A  0100               	movlb	0	; () banked
  9099  012C5C  6FA0               	movwf	?__div_to_l_& (0+255),b
  9100  012C5E  0E00               	movlw	0
  9101  012C60  6FA1               	movwf	(?__div_to_l_+1)& (0+255),b
  9102  012C62  0E00               	movlw	0
  9103  012C64  6FA2               	movwf	(?__div_to_l_+2)& (0+255),b
  9104  012C66  0E00               	movlw	0
  9105  012C68  6FA3               	movwf	(?__div_to_l_+3)& (0+255),b
  9106                           
  9107                           ; BSR set to: 0
  9108  012C6A  0012               	return	
  9109  012C6C                     
  9110                           ; BSR set to: 0
  9111  012C6C  0101               	movlb	1	; () banked
  9112  012C6E  90D8               	bcf	status,0,c
  9113  012C70  378A               	rlcf	__div_to_l_@quot& (0+255),f,b
  9114  012C72  378B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9115  012C74  378C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9116  012C76  378D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9117  012C78  078F               	decf	__div_to_l_@exp1& (0+255),f,b
  9118  012C7A                     l1193:
  9119                           
  9120                           ; BSR set to: 1
  9121  012C7A  0101               	movlb	1	; () banked
  9122  012C7C  518F               	movf	__div_to_l_@exp1& (0+255),w,b
  9123  012C7E  A4D8               	btfss	status,2,c
  9124  012C80  D7F5               	goto	l1194
  9125  012C82                     u7120:
  9126                           
  9127                           ; BSR set to: 1
  9128                           
  9129                           ; BSR set to: 1
  9130  012C82  C18A  F0A0         	movff	__div_to_l_@quot,?__div_to_l_
  9131  012C86  C18B  F0A1         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9132  012C8A  C18C  F0A2         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9133  012C8E  C18D  F0A3         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9134  012C92  0012               	return		;funcret
  9135  012C94                     __end_of__div_to_l_:
  9136                           	opt stack 0
  9137                           tblptru	equ	0xFF8
  9138                           tblptrh	equ	0xFF7
  9139                           tblptrl	equ	0xFF6
  9140                           tablat	equ	0xFF5
  9141                           prodh	equ	0xFF4
  9142                           prodl	equ	0xFF3
  9143                           intcon	equ	0xFF2
  9144                           postinc0	equ	0xFEE
  9145                           wreg	equ	0xFE8
  9146                           indf2	equ	0xFDF
  9147                           postinc2	equ	0xFDE
  9148                           postdec2	equ	0xFDD
  9149                           fsr2h	equ	0xFDA
  9150                           fsr2l	equ	0xFD9
  9151                           status	equ	0xFD8
  9152                           
  9153 ;; *************** function ___lltoft *****************
  9154 ;; Defined at:
  9155 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  9156 ;; Parameters:    Size  Location     Type
  9157 ;;  c               4    3[BANK1 ] unsigned long 
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;  exp             1   69[BANK0 ] unsigned char 
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  3    3[BANK1 ] float 
  9162 ;; Registers used:
  9163 ;;		wreg, status,2, status,0, cstack
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9169 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9170 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9171 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9172 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9173 ;;Total ram usage:        9 bytes
  9174 ;; Hardware stack levels used:    1
  9175 ;; Hardware stack levels required when called:   11
  9176 ;; This function calls:
  9177 ;;		___ftpack
  9178 ;; This function is called by:
  9179 ;;		_printf
  9180 ;; This function uses a non-reentrant model
  9181 ;;
  9182                           
  9183                           	psect	text24
  9184  013DF4                     __ptext24:
  9185                           	opt stack 0
  9186  013DF4                     ___lltoft:
  9187                           	opt stack 16
  9188                           
  9189                           ;incstack = 0
  9190  013DF4  0E8E               	movlw	142
  9191  013DF6  0100               	movlb	0	; () banked
  9192  013DF8  6FA5               	movwf	___lltoft@exp& (0+255),b
  9193  013DFA  D008               	goto	l1387
  9194  013DFC                     
  9195                           ; BSR set to: 0
  9196  013DFC  0101               	movlb	1	; () banked
  9197  013DFE  90D8               	bcf	status,0,c
  9198  013E00  3390               	rrcf	(___lltoft@c+3)& (0+255),f,b
  9199  013E02  338F               	rrcf	(___lltoft@c+2)& (0+255),f,b
  9200  013E04  338E               	rrcf	(___lltoft@c+1)& (0+255),f,b
  9201  013E06  338D               	rrcf	___lltoft@c& (0+255),f,b
  9202  013E08  0100               	movlb	0	; () banked
  9203  013E0A  2BA5               	incf	___lltoft@exp& (0+255),f,b
  9204  013E0C                     l1387:
  9205                           
  9206                           ; BSR set to: 0
  9207                           
  9208                           ; BSR set to: 0
  9209  013E0C  0E00               	movlw	0
  9210  013E0E  0101               	movlb	1	; () banked
  9211  013E10  158D               	andwf	___lltoft@c& (0+255),w,b
  9212  013E12  6F91               	movwf	??___lltoft& (0+255),b
  9213  013E14  0E00               	movlw	0
  9214  013E16  158E               	andwf	(___lltoft@c+1)& (0+255),w,b
  9215  013E18  6F92               	movwf	(??___lltoft+1)& (0+255),b
  9216  013E1A  0E00               	movlw	0
  9217  013E1C  158F               	andwf	(___lltoft@c+2)& (0+255),w,b
  9218  013E1E  6F93               	movwf	(??___lltoft+2)& (0+255),b
  9219  013E20  0EFF               	movlw	255
  9220  013E22  1590               	andwf	(___lltoft@c+3)& (0+255),w,b
  9221  013E24  6F94               	movwf	(??___lltoft+3)& (0+255),b
  9222  013E26  5191               	movf	??___lltoft& (0+255),w,b
  9223  013E28  1192               	iorwf	(??___lltoft+1)& (0+255),w,b
  9224  013E2A  1193               	iorwf	(??___lltoft+2)& (0+255),w,b
  9225  013E2C  1194               	iorwf	(??___lltoft+3)& (0+255),w,b
  9226  013E2E  A4D8               	btfss	status,2,c
  9227  013E30  D7E5               	goto	l1388
  9228                           
  9229                           ; BSR set to: 1
  9230                           
  9231                           ; BSR set to: 1
  9232  013E32  C18D  F0A0         	movff	___lltoft@c,___ftpack@arg
  9233  013E36  C18E  F0A1         	movff	___lltoft@c+1,___ftpack@arg+1
  9234  013E3A  C18F  F0A2         	movff	___lltoft@c+2,___ftpack@arg+2
  9235  013E3E  C0A5  F0A3         	movff	___lltoft@exp,___ftpack@exp
  9236  013E42  0E00               	movlw	0
  9237  013E44  0100               	movlb	0	; () banked
  9238  013E46  6FA4               	movwf	___ftpack@sign& (0+255),b
  9239  013E48  EC75  F09A         	call	___ftpack	;wreg free
  9240  013E4C  C0A0  F18D         	movff	?___ftpack,?___lltoft
  9241  013E50  C0A1  F18E         	movff	?___ftpack+1,?___lltoft+1
  9242  013E54  C0A2  F18F         	movff	?___ftpack+2,?___lltoft+2
  9243  013E58  0012               	return	
  9244  013E5A                     __end_of___lltoft:
  9245                           	opt stack 0
  9246                           tblptru	equ	0xFF8
  9247                           tblptrh	equ	0xFF7
  9248                           tblptrl	equ	0xFF6
  9249                           tablat	equ	0xFF5
  9250                           prodh	equ	0xFF4
  9251                           prodl	equ	0xFF3
  9252                           intcon	equ	0xFF2
  9253                           postinc0	equ	0xFEE
  9254                           wreg	equ	0xFE8
  9255                           indf2	equ	0xFDF
  9256                           postinc2	equ	0xFDE
  9257                           postdec2	equ	0xFDD
  9258                           fsr2h	equ	0xFDA
  9259                           fsr2l	equ	0xFD9
  9260                           status	equ	0xFD8
  9261                           
  9262 ;; *************** function ___llmod *****************
  9263 ;; Defined at:
  9264 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;  dividend        4    8[BANK1 ] unsigned long 
  9267 ;;  divisor         4   12[BANK1 ] unsigned long 
  9268 ;; Auto vars:     Size  Location     Type
  9269 ;;  counter         1   69[BANK0 ] unsigned char 
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  4    8[BANK1 ] unsigned long 
  9272 ;; Registers used:
  9273 ;;		wreg, status,2, status,0
  9274 ;; Tracked objects:
  9275 ;;		On entry : 0/0
  9276 ;;		On exit  : 0/0
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9279 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9282 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9283 ;;Total ram usage:        9 bytes
  9284 ;; Hardware stack levels used:    1
  9285 ;; Hardware stack levels required when called:   10
  9286 ;; This function calls:
  9287 ;;		Nothing
  9288 ;; This function is called by:
  9289 ;;		_printf
  9290 ;; This function uses a non-reentrant model
  9291 ;;
  9292                           
  9293                           	psect	text25
  9294  013BC2                     __ptext25:
  9295                           	opt stack 0
  9296  013BC2                     ___llmod:
  9297                           	opt stack 17
  9298                           
  9299                           ;incstack = 0
  9300  013BC2  0101               	movlb	1	; () banked
  9301  013BC4  5196               	movf	___llmod@divisor& (0+255),w,b
  9302  013BC6  1197               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  9303  013BC8  1198               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  9304  013BCA  1199               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  9305  013BCC  B4D8               	btfsc	status,2,c
  9306  013BCE  D02A               	goto	l1381
  9307                           
  9308                           ; BSR set to: 1
  9309  013BD0  0E01               	movlw	1
  9310  013BD2  0100               	movlb	0	; () banked
  9311  013BD4  6FA5               	movwf	___llmod@counter& (0+255),b
  9312  013BD6  D008               	goto	l1376
  9313  013BD8                     
  9314                           ; BSR set to: 0
  9315  013BD8  0101               	movlb	1	; () banked
  9316  013BDA  90D8               	bcf	status,0,c
  9317  013BDC  3796               	rlcf	___llmod@divisor& (0+255),f,b
  9318  013BDE  3797               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  9319  013BE0  3798               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  9320  013BE2  3799               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  9321  013BE4  0100               	movlb	0	; () banked
  9322  013BE6  2BA5               	incf	___llmod@counter& (0+255),f,b
  9323  013BE8                     l1376:
  9324                           
  9325                           ; BSR set to: 0
  9326                           
  9327                           ; BSR set to: 0
  9328  013BE8  0101               	movlb	1	; () banked
  9329  013BEA  AF99               	btfss	(___llmod@divisor+3)& (0+255),7,b
  9330  013BEC  D7F5               	goto	l1377
  9331  013BEE                     u7300:
  9332                           
  9333                           ; BSR set to: 1
  9334                           
  9335                           ; BSR set to: 1
  9336  013BEE  0101               	movlb	1	; () banked
  9337  013BF0  5196               	movf	___llmod@divisor& (0+255),w,b
  9338  013BF2  5D92               	subwf	___llmod@dividend& (0+255),w,b
  9339  013BF4  5197               	movf	(___llmod@divisor+1)& (0+255),w,b
  9340  013BF6  5993               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  9341  013BF8  5198               	movf	(___llmod@divisor+2)& (0+255),w,b
  9342  013BFA  5994               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  9343  013BFC  5199               	movf	(___llmod@divisor+3)& (0+255),w,b
  9344  013BFE  5995               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  9345  013C00  A0D8               	btfss	status,0,c
  9346  013C02  D008               	goto	l1380
  9347                           
  9348                           ; BSR set to: 1
  9349  013C04  5196               	movf	___llmod@divisor& (0+255),w,b
  9350  013C06  5F92               	subwf	___llmod@dividend& (0+255),f,b
  9351  013C08  5197               	movf	(___llmod@divisor+1)& (0+255),w,b
  9352  013C0A  5B93               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  9353  013C0C  5198               	movf	(___llmod@divisor+2)& (0+255),w,b
  9354  013C0E  5B94               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  9355  013C10  5199               	movf	(___llmod@divisor+3)& (0+255),w,b
  9356  013C12  5B95               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  9357  013C14                     l1380:
  9358                           
  9359                           ; BSR set to: 1
  9360                           
  9361                           ; BSR set to: 1
  9362  013C14  90D8               	bcf	status,0,c
  9363  013C16  3399               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  9364  013C18  3398               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  9365  013C1A  3397               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  9366  013C1C  3396               	rrcf	___llmod@divisor& (0+255),f,b
  9367                           
  9368                           ; BSR set to: 1
  9369  013C1E  0100               	movlb	0	; () banked
  9370  013C20  2FA5               	decfsz	___llmod@counter& (0+255),f,b
  9371  013C22  D7E5               	goto	u7300
  9372  013C24                     l1381:
  9373                           
  9374                           ; BSR set to: 0
  9375  013C24  C192  F192         	movff	___llmod@dividend,?___llmod
  9376  013C28  C193  F193         	movff	___llmod@dividend+1,?___llmod+1
  9377  013C2C  C194  F194         	movff	___llmod@dividend+2,?___llmod+2
  9378  013C30  C195  F195         	movff	___llmod@dividend+3,?___llmod+3
  9379  013C34  0012               	return		;funcret
  9380  013C36                     __end_of___llmod:
  9381                           	opt stack 0
  9382                           tblptru	equ	0xFF8
  9383                           tblptrh	equ	0xFF7
  9384                           tblptrl	equ	0xFF6
  9385                           tablat	equ	0xFF5
  9386                           prodh	equ	0xFF4
  9387                           prodl	equ	0xFF3
  9388                           intcon	equ	0xFF2
  9389                           postinc0	equ	0xFEE
  9390                           wreg	equ	0xFE8
  9391                           indf2	equ	0xFDF
  9392                           postinc2	equ	0xFDE
  9393                           postdec2	equ	0xFDD
  9394                           fsr2h	equ	0xFDA
  9395                           fsr2l	equ	0xFD9
  9396                           status	equ	0xFD8
  9397                           
  9398 ;; *************** function ___lldiv *****************
  9399 ;; Defined at:
  9400 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  9401 ;; Parameters:    Size  Location     Type
  9402 ;;  dividend        4    0[BANK1 ] unsigned long 
  9403 ;;  divisor         4    4[BANK1 ] unsigned long 
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;  quotient        4   64[BANK0 ] unsigned long 
  9406 ;;  counter         1   68[BANK0 ] unsigned char 
  9407 ;; Return value:  Size  Location     Type
  9408 ;;                  4    0[BANK1 ] unsigned long 
  9409 ;; Registers used:
  9410 ;;		wreg, status,2, status,0
  9411 ;; Tracked objects:
  9412 ;;		On entry : 0/0
  9413 ;;		On exit  : 0/0
  9414 ;;		Unchanged: 0/0
  9415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9416 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9417 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9419 ;;      Totals:         0       5       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9420 ;;Total ram usage:       13 bytes
  9421 ;; Hardware stack levels used:    1
  9422 ;; Hardware stack levels required when called:   10
  9423 ;; This function calls:
  9424 ;;		Nothing
  9425 ;; This function is called by:
  9426 ;;		_printf
  9427 ;; This function uses a non-reentrant model
  9428 ;;
  9429                           
  9430                           	psect	text26
  9431  01390E                     __ptext26:
  9432                           	opt stack 0
  9433  01390E                     ___lldiv:
  9434                           	opt stack 17
  9435                           
  9436                           ;incstack = 0
  9437  01390E  0E00               	movlw	0
  9438  013910  0100               	movlb	0	; () banked
  9439  013912  6FA0               	movwf	___lldiv@quotient& (0+255),b
  9440  013914  0E00               	movlw	0
  9441  013916  6FA1               	movwf	(___lldiv@quotient+1)& (0+255),b
  9442  013918  0E00               	movlw	0
  9443  01391A  6FA2               	movwf	(___lldiv@quotient+2)& (0+255),b
  9444  01391C  0E00               	movlw	0
  9445  01391E  6FA3               	movwf	(___lldiv@quotient+3)& (0+255),b
  9446                           
  9447                           ; BSR set to: 0
  9448  013920  0101               	movlb	1	; () banked
  9449  013922  518E               	movf	___lldiv@divisor& (0+255),w,b
  9450  013924  118F               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  9451  013926  1190               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  9452  013928  1191               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  9453  01392A  B4D8               	btfsc	status,2,c
  9454  01392C  D033               	goto	l1371
  9455                           
  9456                           ; BSR set to: 1
  9457  01392E  0E01               	movlw	1
  9458  013930  0100               	movlb	0	; () banked
  9459  013932  6FA4               	movwf	___lldiv@counter& (0+255),b
  9460  013934  D008               	goto	l1366
  9461  013936                     
  9462                           ; BSR set to: 0
  9463  013936  0101               	movlb	1	; () banked
  9464  013938  90D8               	bcf	status,0,c
  9465  01393A  378E               	rlcf	___lldiv@divisor& (0+255),f,b
  9466  01393C  378F               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  9467  01393E  3790               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  9468  013940  3791               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  9469  013942  0100               	movlb	0	; () banked
  9470  013944  2BA4               	incf	___lldiv@counter& (0+255),f,b
  9471  013946                     l1366:
  9472                           
  9473                           ; BSR set to: 0
  9474                           
  9475                           ; BSR set to: 0
  9476  013946  0101               	movlb	1	; () banked
  9477  013948  AF91               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  9478  01394A  D7F5               	goto	l1367
  9479  01394C                     u7270:
  9480                           
  9481                           ; BSR set to: 1
  9482                           
  9483                           ; BSR set to: 1
  9484  01394C  0100               	movlb	0	; () banked
  9485  01394E  90D8               	bcf	status,0,c
  9486  013950  37A0               	rlcf	___lldiv@quotient& (0+255),f,b
  9487  013952  37A1               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  9488  013954  37A2               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  9489  013956  37A3               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  9490                           
  9491                           ; BSR set to: 0
  9492  013958  0101               	movlb	1	; () banked
  9493  01395A  518E               	movf	___lldiv@divisor& (0+255),w,b
  9494  01395C  5D8A               	subwf	___lldiv@dividend& (0+255),w,b
  9495  01395E  518F               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9496  013960  598B               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  9497  013962  5190               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9498  013964  598C               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  9499  013966  5191               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9500  013968  598D               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  9501  01396A  A0D8               	btfss	status,0,c
  9502  01396C  D00A               	goto	l1370
  9503                           
  9504                           ; BSR set to: 1
  9505  01396E  518E               	movf	___lldiv@divisor& (0+255),w,b
  9506  013970  5F8A               	subwf	___lldiv@dividend& (0+255),f,b
  9507  013972  518F               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9508  013974  5B8B               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  9509  013976  5190               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9510  013978  5B8C               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  9511  01397A  5191               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9512  01397C  5B8D               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  9513                           
  9514                           ; BSR set to: 1
  9515  01397E  0100               	movlb	0	; () banked
  9516  013980  81A0               	bsf	___lldiv@quotient& (0+255),0,b
  9517  013982                     l1370:
  9518                           
  9519                           ; BSR set to: 0
  9520  013982  0101               	movlb	1	; () banked
  9521  013984  90D8               	bcf	status,0,c
  9522  013986  3391               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  9523  013988  3390               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  9524  01398A  338F               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  9525  01398C  338E               	rrcf	___lldiv@divisor& (0+255),f,b
  9526                           
  9527                           ; BSR set to: 1
  9528  01398E  0100               	movlb	0	; () banked
  9529  013990  2FA4               	decfsz	___lldiv@counter& (0+255),f,b
  9530  013992  D7DC               	goto	u7270
  9531  013994                     l1371:
  9532                           
  9533                           ; BSR set to: 0
  9534  013994  C0A0  F18A         	movff	___lldiv@quotient,?___lldiv
  9535  013998  C0A1  F18B         	movff	___lldiv@quotient+1,?___lldiv+1
  9536  01399C  C0A2  F18C         	movff	___lldiv@quotient+2,?___lldiv+2
  9537  0139A0  C0A3  F18D         	movff	___lldiv@quotient+3,?___lldiv+3
  9538  0139A4  0012               	return		;funcret
  9539  0139A6                     __end_of___lldiv:
  9540                           	opt stack 0
  9541                           tblptru	equ	0xFF8
  9542                           tblptrh	equ	0xFF7
  9543                           tblptrl	equ	0xFF6
  9544                           tablat	equ	0xFF5
  9545                           prodh	equ	0xFF4
  9546                           prodl	equ	0xFF3
  9547                           intcon	equ	0xFF2
  9548                           postinc0	equ	0xFEE
  9549                           wreg	equ	0xFE8
  9550                           indf2	equ	0xFDF
  9551                           postinc2	equ	0xFDE
  9552                           postdec2	equ	0xFDD
  9553                           fsr2h	equ	0xFDA
  9554                           fsr2l	equ	0xFD9
  9555                           status	equ	0xFD8
  9556                           
  9557 ;; *************** function ___fttol *****************
  9558 ;; Defined at:
  9559 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;  f1              3   29[BANK1 ] float 
  9562 ;; Auto vars:     Size  Location     Type
  9563 ;;  lval            4   39[BANK1 ] unsigned long 
  9564 ;;  exp1            1   43[BANK1 ] unsigned char 
  9565 ;;  sign1           1   38[BANK1 ] unsigned char 
  9566 ;; Return value:  Size  Location     Type
  9567 ;;                  4   29[BANK1 ] long 
  9568 ;; Registers used:
  9569 ;;		wreg, status,2, status,0
  9570 ;; Tracked objects:
  9571 ;;		On entry : 0/0
  9572 ;;		On exit  : 0/0
  9573 ;;		Unchanged: 0/0
  9574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9575 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9576 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9577 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9578 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9579 ;;Total ram usage:       15 bytes
  9580 ;; Hardware stack levels used:    1
  9581 ;; Hardware stack levels required when called:   10
  9582 ;; This function calls:
  9583 ;;		Nothing
  9584 ;; This function is called by:
  9585 ;;		_printf
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           
  9589                           	psect	text27
  9590  01302E                     __ptext27:
  9591                           	opt stack 0
  9592  01302E                     ___fttol:
  9593                           	opt stack 17
  9594                           
  9595                           ;incstack = 0
  9596  01302E  C1A9  F1AB         	movff	___fttol@f1+2,??___fttol
  9597  013032  0101               	movlb	1	; () banked
  9598  013034  6BAC               	clrf	(??___fttol+1)& (0+255),b
  9599  013036  6BAD               	clrf	(??___fttol+2)& (0+255),b
  9600  013038  35A8               	rlcf	(___fttol@f1+1)& (0+255),w,b
  9601  01303A  37AB               	rlcf	??___fttol& (0+255),f,b
  9602  01303C  E301               	bnc	u7181
  9603  01303E  81AC               	bsf	(??___fttol+1)& (0+255),0,b
  9604  013040                     u7181:
  9605  013040  51AB               	movf	??___fttol& (0+255),w,b
  9606  013042  6FB5               	movwf	___fttol@exp1& (0+255),b
  9607  013044  51B5               	movf	___fttol@exp1& (0+255),w,b
  9608  013046  A4D8               	btfss	status,2,c
  9609  013048  D009               	goto	l1330
  9610                           
  9611                           ; BSR set to: 1
  9612  01304A  0E00               	movlw	0
  9613  01304C  6FA7               	movwf	?___fttol& (0+255),b
  9614  01304E  0E00               	movlw	0
  9615  013050  6FA8               	movwf	(?___fttol+1)& (0+255),b
  9616  013052  0E00               	movlw	0
  9617  013054  6FA9               	movwf	(?___fttol+2)& (0+255),b
  9618  013056  0E00               	movlw	0
  9619  013058  6FAA               	movwf	(?___fttol+3)& (0+255),b
  9620                           
  9621                           ; BSR set to: 1
  9622  01305A  0012               	return	
  9623  01305C                     l1330:
  9624                           
  9625                           ; BSR set to: 1
  9626                           
  9627                           ; BSR set to: 1
  9628  01305C  0E17               	movlw	23
  9629  01305E  6FAB               	movwf	??___fttol& (0+255),b
  9630  013060  C1A7  F1AC         	movff	___fttol@f1,??___fttol+1
  9631  013064  C1A8  F1AD         	movff	___fttol@f1+1,??___fttol+2
  9632  013068  C1A9  F1AE         	movff	___fttol@f1+2,??___fttol+3
  9633  01306C  29AB               	incf	??___fttol& (0+255),w,b
  9634  01306E  6FAF               	movwf	(??___fttol+4)& (0+255),b
  9635  013070  D004               	goto	u7200
  9636  013072                     u7205:
  9637  013072  90D8               	bcf	status,0,c
  9638  013074  33AE               	rrcf	(??___fttol+3)& (0+255),f,b
  9639  013076  33AD               	rrcf	(??___fttol+2)& (0+255),f,b
  9640  013078  33AC               	rrcf	(??___fttol+1)& (0+255),f,b
  9641  01307A                     u7200:
  9642  01307A  2FAF               	decfsz	(??___fttol+4)& (0+255),f,b
  9643  01307C  D7FA               	goto	u7205
  9644  01307E  0101               	movlb	1	; () banked
  9645  013080  51AC               	movf	(??___fttol+1)& (0+255),w,b
  9646  013082  6FB0               	movwf	___fttol@sign1& (0+255),b
  9647                           
  9648                           ; BSR set to: 1
  9649  013084  8FA8               	bsf	(___fttol@f1+1)& (0+255),7,b
  9650                           
  9651                           ; BSR set to: 1
  9652  013086  0EFF               	movlw	255
  9653  013088  17A7               	andwf	___fttol@f1& (0+255),f,b
  9654  01308A  0EFF               	movlw	255
  9655  01308C  17A8               	andwf	(___fttol@f1+1)& (0+255),f,b
  9656  01308E  0E00               	movlw	0
  9657  013090  17A9               	andwf	(___fttol@f1+2)& (0+255),f,b
  9658                           
  9659                           ; BSR set to: 1
  9660  013092  51A7               	movf	___fttol@f1& (0+255),w,b
  9661  013094  6FB1               	movwf	___fttol@lval& (0+255),b
  9662  013096  51A8               	movf	(___fttol@f1+1)& (0+255),w,b
  9663  013098  6FB2               	movwf	(___fttol@lval+1)& (0+255),b
  9664  01309A  51A9               	movf	(___fttol@f1+2)& (0+255),w,b
  9665  01309C  6FB3               	movwf	(___fttol@lval+2)& (0+255),b
  9666  01309E  6BB4               	clrf	(___fttol@lval+3)& (0+255),b
  9667                           
  9668                           ; BSR set to: 1
  9669  0130A0  0E8E               	movlw	142
  9670  0130A2  5FB5               	subwf	___fttol@exp1& (0+255),f,b
  9671                           
  9672                           ; BSR set to: 1
  9673  0130A4  AFB5               	btfss	___fttol@exp1& (0+255),7,b
  9674  0130A6  D016               	goto	l1332
  9675                           
  9676                           ; BSR set to: 1
  9677  0130A8  51B5               	movf	___fttol@exp1& (0+255),w,b
  9678  0130AA  0A80               	xorlw	128
  9679  0130AC  0F8F               	addlw	143
  9680  0130AE  B0D8               	btfsc	status,0,c
  9681  0130B0  D009               	goto	l1333
  9682                           
  9683                           ; BSR set to: 1
  9684  0130B2  0E00               	movlw	0
  9685  0130B4  6FA7               	movwf	?___fttol& (0+255),b
  9686  0130B6  0E00               	movlw	0
  9687  0130B8  6FA8               	movwf	(?___fttol+1)& (0+255),b
  9688  0130BA  0E00               	movlw	0
  9689  0130BC  6FA9               	movwf	(?___fttol+2)& (0+255),b
  9690  0130BE  0E00               	movlw	0
  9691  0130C0  6FAA               	movwf	(?___fttol+3)& (0+255),b
  9692                           
  9693                           ; BSR set to: 1
  9694  0130C2  0012               	return	
  9695  0130C4                     l1333:
  9696                           
  9697                           ; BSR set to: 1
  9698                           
  9699                           ; BSR set to: 1
  9700                           
  9701                           ; BSR set to: 1
  9702  0130C4  90D8               	bcf	status,0,c
  9703  0130C6  33B4               	rrcf	(___fttol@lval+3)& (0+255),f,b
  9704  0130C8  33B3               	rrcf	(___fttol@lval+2)& (0+255),f,b
  9705  0130CA  33B2               	rrcf	(___fttol@lval+1)& (0+255),f,b
  9706  0130CC  33B1               	rrcf	___fttol@lval& (0+255),f,b
  9707                           
  9708                           ; BSR set to: 1
  9709  0130CE  3FB5               	incfsz	___fttol@exp1& (0+255),f,b
  9710  0130D0  D7F9               	goto	l1333
  9711                           
  9712                           ; BSR set to: 1
  9713  0130D2  D015               	goto	u7240
  9714  0130D4                     l1332:
  9715                           
  9716                           ; BSR set to: 1
  9717                           
  9718                           ; BSR set to: 1
  9719  0130D4  0E17               	movlw	23
  9720  0130D6  65B5               	cpfsgt	___fttol@exp1& (0+255),b
  9721  0130D8  D00F               	goto	l1338
  9722                           
  9723                           ; BSR set to: 1
  9724  0130DA  0E00               	movlw	0
  9725  0130DC  6FA7               	movwf	?___fttol& (0+255),b
  9726  0130DE  0E00               	movlw	0
  9727  0130E0  6FA8               	movwf	(?___fttol+1)& (0+255),b
  9728  0130E2  0E00               	movlw	0
  9729  0130E4  6FA9               	movwf	(?___fttol+2)& (0+255),b
  9730  0130E6  0E00               	movlw	0
  9731  0130E8  6FAA               	movwf	(?___fttol+3)& (0+255),b
  9732                           
  9733                           ; BSR set to: 1
  9734  0130EA  0012               	return	
  9735  0130EC                     
  9736                           ; BSR set to: 1
  9737                           
  9738                           ; BSR set to: 1
  9739  0130EC  90D8               	bcf	status,0,c
  9740  0130EE  37B1               	rlcf	___fttol@lval& (0+255),f,b
  9741  0130F0  37B2               	rlcf	(___fttol@lval+1)& (0+255),f,b
  9742  0130F2  37B3               	rlcf	(___fttol@lval+2)& (0+255),f,b
  9743  0130F4  37B4               	rlcf	(___fttol@lval+3)& (0+255),f,b
  9744  0130F6  07B5               	decf	___fttol@exp1& (0+255),f,b
  9745  0130F8                     l1338:
  9746                           
  9747                           ; BSR set to: 1
  9748                           
  9749                           ; BSR set to: 1
  9750  0130F8  51B5               	movf	___fttol@exp1& (0+255),w,b
  9751  0130FA  A4D8               	btfss	status,2,c
  9752  0130FC  D7F7               	goto	l1339
  9753  0130FE                     u7240:
  9754                           
  9755                           ; BSR set to: 1
  9756                           
  9757                           ; BSR set to: 1
  9758                           
  9759                           ; BSR set to: 1
  9760  0130FE  51B0               	movf	___fttol@sign1& (0+255),w,b
  9761  013100  B4D8               	btfsc	status,2,c
  9762  013102  D008               	goto	l1341
  9763                           
  9764                           ; BSR set to: 1
  9765  013104  1FB4               	comf	(___fttol@lval+3)& (0+255),f,b
  9766  013106  1FB3               	comf	(___fttol@lval+2)& (0+255),f,b
  9767  013108  1FB2               	comf	(___fttol@lval+1)& (0+255),f,b
  9768  01310A  6DB1               	negf	___fttol@lval& (0+255),b
  9769  01310C  0E00               	movlw	0
  9770  01310E  23B2               	addwfc	(___fttol@lval+1)& (0+255),f,b
  9771  013110  23B3               	addwfc	(___fttol@lval+2)& (0+255),f,b
  9772  013112  23B4               	addwfc	(___fttol@lval+3)& (0+255),f,b
  9773  013114                     l1341:
  9774                           
  9775                           ; BSR set to: 1
  9776                           
  9777                           ; BSR set to: 1
  9778  013114  C1B1  F1A7         	movff	___fttol@lval,?___fttol
  9779  013118  C1B2  F1A8         	movff	___fttol@lval+1,?___fttol+1
  9780  01311C  C1B3  F1A9         	movff	___fttol@lval+2,?___fttol+2
  9781  013120  C1B4  F1AA         	movff	___fttol@lval+3,?___fttol+3
  9782  013124  0012               	return	
  9783  013126                     __end_of___fttol:
  9784                           	opt stack 0
  9785                           tblptru	equ	0xFF8
  9786                           tblptrh	equ	0xFF7
  9787                           tblptrl	equ	0xFF6
  9788                           tablat	equ	0xFF5
  9789                           prodh	equ	0xFF4
  9790                           prodl	equ	0xFF3
  9791                           intcon	equ	0xFF2
  9792                           postinc0	equ	0xFEE
  9793                           wreg	equ	0xFE8
  9794                           indf2	equ	0xFDF
  9795                           postinc2	equ	0xFDE
  9796                           postdec2	equ	0xFDD
  9797                           fsr2h	equ	0xFDA
  9798                           fsr2l	equ	0xFD9
  9799                           status	equ	0xFD8
  9800                           
  9801 ;; *************** function ___ftsub *****************
  9802 ;; Defined at:
  9803 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  9804 ;; Parameters:    Size  Location     Type
  9805 ;;  f1              3   51[BANK1 ] float 
  9806 ;;  f2              3   54[BANK1 ] float 
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;		None
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  3   51[BANK1 ] float 
  9811 ;; Registers used:
  9812 ;;		wreg, status,2, status,0, cstack
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9818 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9821 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9822 ;;Total ram usage:        6 bytes
  9823 ;; Hardware stack levels used:    1
  9824 ;; Hardware stack levels required when called:   12
  9825 ;; This function calls:
  9826 ;;		___ftadd
  9827 ;; This function is called by:
  9828 ;;		_printf
  9829 ;; This function uses a non-reentrant model
  9830 ;;
  9831                           
  9832                           	psect	text28
  9833  0141F8                     __ptext28:
  9834                           	opt stack 0
  9835  0141F8                     ___ftsub:
  9836                           	opt stack 15
  9837                           
  9838                           ; BSR set to: 1
  9839                           ;incstack = 0
  9840  0141F8  0101               	movlb	1	; () banked
  9841  0141FA  51C0               	movf	___ftsub@f2& (0+255),w,b
  9842  0141FC  11C1               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  9843  0141FE  11C2               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  9844  014200  B4D8               	btfsc	status,2,c
  9845  014202  D006               	goto	l1326
  9846                           
  9847                           ; BSR set to: 1
  9848  014204  0E00               	movlw	0
  9849  014206  1BC0               	xorwf	___ftsub@f2& (0+255),f,b
  9850  014208  0E00               	movlw	0
  9851  01420A  1BC1               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  9852  01420C  0E80               	movlw	128
  9853  01420E  1BC2               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  9854  014210                     l1326:
  9855                           
  9856                           ; BSR set to: 1
  9857                           
  9858                           ; BSR set to: 1
  9859  014210  C1BD  F1B1         	movff	___ftsub@f1,___ftadd@f1
  9860  014214  C1BE  F1B2         	movff	___ftsub@f1+1,___ftadd@f1+1
  9861  014218  C1BF  F1B3         	movff	___ftsub@f1+2,___ftadd@f1+2
  9862  01421C  C1C0  F1B4         	movff	___ftsub@f2,___ftadd@f2
  9863  014220  C1C1  F1B5         	movff	___ftsub@f2+1,___ftadd@f2+1
  9864  014224  C1C2  F1B6         	movff	___ftsub@f2+2,___ftadd@f2+2
  9865  014228  EC4C  F093         	call	___ftadd	;wreg free
  9866  01422C  C1B1  F1BD         	movff	?___ftadd,?___ftsub
  9867  014230  C1B2  F1BE         	movff	?___ftadd+1,?___ftsub+1
  9868  014234  C1B3  F1BF         	movff	?___ftadd+2,?___ftsub+2
  9869  014238  0012               	return	
  9870  01423A                     __end_of___ftsub:
  9871                           	opt stack 0
  9872                           tblptru	equ	0xFF8
  9873                           tblptrh	equ	0xFF7
  9874                           tblptrl	equ	0xFF6
  9875                           tablat	equ	0xFF5
  9876                           prodh	equ	0xFF4
  9877                           prodl	equ	0xFF3
  9878                           intcon	equ	0xFF2
  9879                           postinc0	equ	0xFEE
  9880                           wreg	equ	0xFE8
  9881                           indf2	equ	0xFDF
  9882                           postinc2	equ	0xFDE
  9883                           postdec2	equ	0xFDD
  9884                           fsr2h	equ	0xFDA
  9885                           fsr2l	equ	0xFD9
  9886                           status	equ	0xFD8
  9887                           
  9888 ;; *************** function ___ftadd *****************
  9889 ;; Defined at:
  9890 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;  f1              3   39[BANK1 ] float 
  9893 ;;  f2              3   42[BANK1 ] float 
  9894 ;; Auto vars:     Size  Location     Type
  9895 ;;  exp1            1   50[BANK1 ] unsigned char 
  9896 ;;  exp2            1   49[BANK1 ] unsigned char 
  9897 ;;  sign            1   48[BANK1 ] unsigned char 
  9898 ;; Return value:  Size  Location     Type
  9899 ;;                  3   39[BANK1 ] float 
  9900 ;; Registers used:
  9901 ;;		wreg, status,2, status,0, cstack
  9902 ;; Tracked objects:
  9903 ;;		On entry : 0/0
  9904 ;;		On exit  : 0/0
  9905 ;;		Unchanged: 0/0
  9906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9907 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9908 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9909 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9910 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9911 ;;Total ram usage:       12 bytes
  9912 ;; Hardware stack levels used:    1
  9913 ;; Hardware stack levels required when called:   11
  9914 ;; This function calls:
  9915 ;;		___ftpack
  9916 ;; This function is called by:
  9917 ;;		_printf
  9918 ;;		___ftsub
  9919 ;; This function uses a non-reentrant model
  9920 ;;
  9921                           
  9922                           	psect	text29
  9923  012698                     __ptext29:
  9924                           	opt stack 0
  9925  012698                     ___ftadd:
  9926                           	opt stack 15
  9927                           
  9928                           ;incstack = 0
  9929  012698  C1B3  F1B7         	movff	___ftadd@f1+2,??___ftadd
  9930  01269C  0101               	movlb	1	; () banked
  9931  01269E  6BB8               	clrf	(??___ftadd+1)& (0+255),b
  9932  0126A0  6BB9               	clrf	(??___ftadd+2)& (0+255),b
  9933  0126A2  35B2               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  9934  0126A4  37B7               	rlcf	??___ftadd& (0+255),f,b
  9935  0126A6  E301               	bnc	u6511
  9936  0126A8  81B8               	bsf	(??___ftadd+1)& (0+255),0,b
  9937  0126AA                     u6511:
  9938  0126AA  51B7               	movf	??___ftadd& (0+255),w,b
  9939  0126AC  6FBC               	movwf	___ftadd@exp1& (0+255),b
  9940  0126AE  C1B6  F1B7         	movff	___ftadd@f2+2,??___ftadd
  9941  0126B2  6BB8               	clrf	(??___ftadd+1)& (0+255),b
  9942  0126B4  6BB9               	clrf	(??___ftadd+2)& (0+255),b
  9943  0126B6  35B5               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  9944  0126B8  37B7               	rlcf	??___ftadd& (0+255),f,b
  9945  0126BA  E301               	bnc	u6521
  9946  0126BC  81B8               	bsf	(??___ftadd+1)& (0+255),0,b
  9947  0126BE                     u6521:
  9948  0126BE  51B7               	movf	??___ftadd& (0+255),w,b
  9949  0126C0  6FBB               	movwf	___ftadd@exp2& (0+255),b
  9950                           
  9951                           ; BSR set to: 1
  9952  0126C2  51BC               	movf	___ftadd@exp1& (0+255),w,b
  9953  0126C4  B4D8               	btfsc	status,2,c
  9954  0126C6  D00B               	goto	u6550
  9955                           
  9956                           ; BSR set to: 1
  9957  0126C8  51BB               	movf	___ftadd@exp2& (0+255),w,b
  9958  0126CA  5DBC               	subwf	___ftadd@exp1& (0+255),w,b
  9959  0126CC  B0D8               	btfsc	status,0,c
  9960  0126CE  D00E               	goto	l1244
  9961                           
  9962                           ; BSR set to: 1
  9963  0126D0  51BC               	movf	___ftadd@exp1& (0+255),w,b
  9964  0126D2  0800               	sublw	0
  9965  0126D4  25BB               	addwf	___ftadd@exp2& (0+255),w,b
  9966  0126D6  6FB7               	movwf	??___ftadd& (0+255),b
  9967  0126D8  0E18               	movlw	24
  9968  0126DA  65B7               	cpfsgt	??___ftadd& (0+255),b
  9969  0126DC  D007               	goto	l1244
  9970  0126DE                     u6550:
  9971                           
  9972                           ; BSR set to: 1
  9973  0126DE  C1B4  F1B1         	movff	___ftadd@f2,?___ftadd
  9974  0126E2  C1B5  F1B2         	movff	___ftadd@f2+1,?___ftadd+1
  9975  0126E6  C1B6  F1B3         	movff	___ftadd@f2+2,?___ftadd+2
  9976  0126EA  0012               	return	
  9977  0126EC                     l1244:
  9978                           
  9979                           ; BSR set to: 1
  9980                           
  9981                           ; BSR set to: 1
  9982  0126EC  51BB               	movf	___ftadd@exp2& (0+255),w,b
  9983  0126EE  B4D8               	btfsc	status,2,c
  9984  0126F0  D00B               	goto	u6580
  9985                           
  9986                           ; BSR set to: 1
  9987  0126F2  51BC               	movf	___ftadd@exp1& (0+255),w,b
  9988  0126F4  5DBB               	subwf	___ftadd@exp2& (0+255),w,b
  9989  0126F6  B0D8               	btfsc	status,0,c
  9990  0126F8  D00E               	goto	l1248
  9991                           
  9992                           ; BSR set to: 1
  9993  0126FA  51BB               	movf	___ftadd@exp2& (0+255),w,b
  9994  0126FC  0800               	sublw	0
  9995  0126FE  25BC               	addwf	___ftadd@exp1& (0+255),w,b
  9996  012700  6FB7               	movwf	??___ftadd& (0+255),b
  9997  012702  0E18               	movlw	24
  9998  012704  65B7               	cpfsgt	??___ftadd& (0+255),b
  9999  012706  D007               	goto	l1248
 10000  012708                     u6580:
 10001                           
 10002                           ; BSR set to: 1
 10003  012708  C1B1  F1B1         	movff	___ftadd@f1,?___ftadd
 10004  01270C  C1B2  F1B2         	movff	___ftadd@f1+1,?___ftadd+1
 10005  012710  C1B3  F1B3         	movff	___ftadd@f1+2,?___ftadd+2
 10006  012714  0012               	return	
 10007  012716                     l1248:
 10008                           
 10009                           ; BSR set to: 1
 10010                           
 10011                           ; BSR set to: 1
 10012  012716  0E06               	movlw	6
 10013  012718  6FBA               	movwf	___ftadd@sign& (0+255),b
 10014                           
 10015                           ; BSR set to: 1
 10016  01271A  BFB3               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 10017                           
 10018                           ; BSR set to: 1
 10019  01271C  8FBA               	bsf	___ftadd@sign& (0+255),7,b
 10020                           
 10021                           ; BSR set to: 1
 10022                           
 10023                           ; BSR set to: 1
 10024  01271E  BFB6               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 10025                           
 10026                           ; BSR set to: 1
 10027  012720  8DBA               	bsf	___ftadd@sign& (0+255),6,b
 10028                           
 10029                           ; BSR set to: 1
 10030  012722  8FB2               	bsf	(___ftadd@f1+1)& (0+255),7,b
 10031                           
 10032                           ; BSR set to: 1
 10033  012724  0EFF               	movlw	255
 10034  012726  17B1               	andwf	___ftadd@f1& (0+255),f,b
 10035  012728  0EFF               	movlw	255
 10036  01272A  17B2               	andwf	(___ftadd@f1+1)& (0+255),f,b
 10037  01272C  0E00               	movlw	0
 10038  01272E  17B3               	andwf	(___ftadd@f1+2)& (0+255),f,b
 10039  012730  8FB5               	bsf	(___ftadd@f2+1)& (0+255),7,b
 10040                           
 10041                           ; BSR set to: 1
 10042  012732  0EFF               	movlw	255
 10043  012734  17B4               	andwf	___ftadd@f2& (0+255),f,b
 10044  012736  0EFF               	movlw	255
 10045  012738  17B5               	andwf	(___ftadd@f2+1)& (0+255),f,b
 10046  01273A  0E00               	movlw	0
 10047  01273C  17B6               	andwf	(___ftadd@f2+2)& (0+255),f,b
 10048                           
 10049                           ; BSR set to: 1
 10050  01273E  51BB               	movf	___ftadd@exp2& (0+255),w,b
 10051  012740  5DBC               	subwf	___ftadd@exp1& (0+255),w,b
 10052  012742  B0D8               	btfsc	status,0,c
 10053  012744  D01B               	goto	l1253
 10054  012746                     u6610:
 10055                           
 10056                           ; BSR set to: 1
 10057                           
 10058                           ; BSR set to: 1
 10059  012746  90D8               	bcf	status,0,c
 10060  012748  37B4               	rlcf	___ftadd@f2& (0+255),f,b
 10061  01274A  37B5               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 10062  01274C  37B6               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 10063  01274E  07BB               	decf	___ftadd@exp2& (0+255),f,b
 10064                           
 10065                           ; BSR set to: 1
 10066  012750  51BC               	movf	___ftadd@exp1& (0+255),w,b
 10067  012752  19BB               	xorwf	___ftadd@exp2& (0+255),w,b
 10068  012754  B4D8               	btfsc	status,2,c
 10069  012756  D00D               	goto	l1258
 10070                           
 10071                           ; BSR set to: 1
 10072  012758  07BA               	decf	___ftadd@sign& (0+255),f,b
 10073  01275A  C1BA  F1B7         	movff	___ftadd@sign,??___ftadd
 10074  01275E  0E07               	movlw	7
 10075  012760  17B7               	andwf	??___ftadd& (0+255),f,b
 10076  012762  B4D8               	btfsc	status,2,c
 10077  012764  D006               	goto	l1258
 10078  012766  D7EF               	goto	u6610
 10079  012768                     
 10080                           ; BSR set to: 1
 10081                           
 10082                           ; BSR set to: 1
 10083  012768  90D8               	bcf	status,0,c
 10084  01276A  33B3               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 10085  01276C  33B2               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 10086  01276E  33B1               	rrcf	___ftadd@f1& (0+255),f,b
 10087  012770  2BBC               	incf	___ftadd@exp1& (0+255),f,b
 10088  012772                     l1258:
 10089                           
 10090                           ; BSR set to: 1
 10091                           
 10092                           ; BSR set to: 1
 10093  012772  51BB               	movf	___ftadd@exp2& (0+255),w,b
 10094  012774  19BC               	xorwf	___ftadd@exp1& (0+255),w,b
 10095  012776  B4D8               	btfsc	status,2,c
 10096  012778  D01F               	goto	u6680
 10097  01277A  D7F6               	goto	l1259
 10098  01277C                     l1253:
 10099                           
 10100                           ; BSR set to: 1
 10101                           
 10102                           ; BSR set to: 1
 10103  01277C  51BC               	movf	___ftadd@exp1& (0+255),w,b
 10104  01277E  5DBB               	subwf	___ftadd@exp2& (0+255),w,b
 10105  012780  B0D8               	btfsc	status,0,c
 10106  012782  D01A               	goto	u6680
 10107  012784                     u6650:
 10108                           
 10109                           ; BSR set to: 1
 10110                           
 10111                           ; BSR set to: 1
 10112  012784  90D8               	bcf	status,0,c
 10113  012786  37B1               	rlcf	___ftadd@f1& (0+255),f,b
 10114  012788  37B2               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 10115  01278A  37B3               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 10116  01278C  07BC               	decf	___ftadd@exp1& (0+255),f,b
 10117                           
 10118                           ; BSR set to: 1
 10119  01278E  51BC               	movf	___ftadd@exp1& (0+255),w,b
 10120  012790  19BB               	xorwf	___ftadd@exp2& (0+255),w,b
 10121  012792  B4D8               	btfsc	status,2,c
 10122  012794  D00D               	goto	l1267
 10123                           
 10124                           ; BSR set to: 1
 10125  012796  07BA               	decf	___ftadd@sign& (0+255),f,b
 10126  012798  C1BA  F1B7         	movff	___ftadd@sign,??___ftadd
 10127  01279C  0E07               	movlw	7
 10128  01279E  17B7               	andwf	??___ftadd& (0+255),f,b
 10129  0127A0  B4D8               	btfsc	status,2,c
 10130  0127A2  D006               	goto	l1267
 10131  0127A4  D7EF               	goto	u6650
 10132  0127A6                     
 10133                           ; BSR set to: 1
 10134                           
 10135                           ; BSR set to: 1
 10136  0127A6  90D8               	bcf	status,0,c
 10137  0127A8  33B6               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 10138  0127AA  33B5               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 10139  0127AC  33B4               	rrcf	___ftadd@f2& (0+255),f,b
 10140  0127AE  2BBB               	incf	___ftadd@exp2& (0+255),f,b
 10141  0127B0                     l1267:
 10142                           
 10143                           ; BSR set to: 1
 10144                           
 10145                           ; BSR set to: 1
 10146  0127B0  51BB               	movf	___ftadd@exp2& (0+255),w,b
 10147  0127B2  19BC               	xorwf	___ftadd@exp1& (0+255),w,b
 10148  0127B4  A4D8               	btfss	status,2,c
 10149  0127B6  D7F7               	goto	l1268
 10150  0127B8                     u6680:
 10151                           
 10152                           ; BSR set to: 1
 10153                           
 10154                           ; BSR set to: 1
 10155                           
 10156                           ; BSR set to: 1
 10157  0127B8  AFBA               	btfss	___ftadd@sign& (0+255),7,b
 10158  0127BA  D00C               	goto	l1270
 10159                           
 10160                           ; BSR set to: 1
 10161  0127BC  0EFF               	movlw	255
 10162  0127BE  1BB1               	xorwf	___ftadd@f1& (0+255),f,b
 10163  0127C0  0EFF               	movlw	255
 10164  0127C2  1BB2               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 10165  0127C4  0EFF               	movlw	255
 10166  0127C6  1BB3               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 10167  0127C8  0E01               	movlw	1
 10168  0127CA  27B1               	addwf	___ftadd@f1& (0+255),f,b
 10169  0127CC  0E00               	movlw	0
 10170  0127CE  23B2               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 10171  0127D0  0E00               	movlw	0
 10172  0127D2  23B3               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 10173  0127D4                     l1270:
 10174                           
 10175                           ; BSR set to: 1
 10176  0127D4  ADBA               	btfss	___ftadd@sign& (0+255),6,b
 10177  0127D6  D00C               	goto	l1271
 10178                           
 10179                           ; BSR set to: 1
 10180  0127D8  0EFF               	movlw	255
 10181  0127DA  1BB4               	xorwf	___ftadd@f2& (0+255),f,b
 10182  0127DC  0EFF               	movlw	255
 10183  0127DE  1BB5               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10184  0127E0  0EFF               	movlw	255
 10185  0127E2  1BB6               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10186  0127E4  0E01               	movlw	1
 10187  0127E6  27B4               	addwf	___ftadd@f2& (0+255),f,b
 10188  0127E8  0E00               	movlw	0
 10189  0127EA  23B5               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10190  0127EC  0E00               	movlw	0
 10191  0127EE  23B6               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10192  0127F0                     l1271:
 10193                           
 10194                           ; BSR set to: 1
 10195                           
 10196                           ; BSR set to: 1
 10197  0127F0  0E00               	movlw	0
 10198  0127F2  6FBA               	movwf	___ftadd@sign& (0+255),b
 10199                           
 10200                           ; BSR set to: 1
 10201  0127F4  51B1               	movf	___ftadd@f1& (0+255),w,b
 10202  0127F6  27B4               	addwf	___ftadd@f2& (0+255),f,b
 10203  0127F8  51B2               	movf	(___ftadd@f1+1)& (0+255),w,b
 10204  0127FA  23B5               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10205  0127FC  51B3               	movf	(___ftadd@f1+2)& (0+255),w,b
 10206  0127FE  23B6               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10207                           
 10208                           ; BSR set to: 1
 10209  012800  AFB6               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10210  012802  D00E               	goto	l1272
 10211                           
 10212                           ; BSR set to: 1
 10213  012804  0EFF               	movlw	255
 10214  012806  1BB4               	xorwf	___ftadd@f2& (0+255),f,b
 10215  012808  0EFF               	movlw	255
 10216  01280A  1BB5               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10217  01280C  0EFF               	movlw	255
 10218  01280E  1BB6               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10219  012810  0E01               	movlw	1
 10220  012812  27B4               	addwf	___ftadd@f2& (0+255),f,b
 10221  012814  0E00               	movlw	0
 10222  012816  23B5               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10223  012818  0E00               	movlw	0
 10224  01281A  23B6               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10225                           
 10226                           ; BSR set to: 1
 10227  01281C  0E01               	movlw	1
 10228  01281E  6FBA               	movwf	___ftadd@sign& (0+255),b
 10229  012820                     l1272:
 10230                           
 10231                           ; BSR set to: 1
 10232                           
 10233                           ; BSR set to: 1
 10234  012820  C1B4  F0A0         	movff	___ftadd@f2,___ftpack@arg
 10235  012824  C1B5  F0A1         	movff	___ftadd@f2+1,___ftpack@arg+1
 10236  012828  C1B6  F0A2         	movff	___ftadd@f2+2,___ftpack@arg+2
 10237  01282C  C1BC  F0A3         	movff	___ftadd@exp1,___ftpack@exp
 10238  012830  C1BA  F0A4         	movff	___ftadd@sign,___ftpack@sign
 10239  012834  EC75  F09A         	call	___ftpack	;wreg free
 10240  012838  C0A0  F1B1         	movff	?___ftpack,?___ftadd
 10241  01283C  C0A1  F1B2         	movff	?___ftpack+1,?___ftadd+1
 10242  012840  C0A2  F1B3         	movff	?___ftpack+2,?___ftadd+2
 10243  012844  0012               	return	
 10244  012846                     __end_of___ftadd:
 10245                           	opt stack 0
 10246                           tblptru	equ	0xFF8
 10247                           tblptrh	equ	0xFF7
 10248                           tblptrl	equ	0xFF6
 10249                           tablat	equ	0xFF5
 10250                           prodh	equ	0xFF4
 10251                           prodl	equ	0xFF3
 10252                           intcon	equ	0xFF2
 10253                           postinc0	equ	0xFEE
 10254                           wreg	equ	0xFE8
 10255                           indf2	equ	0xFDF
 10256                           postinc2	equ	0xFDE
 10257                           postdec2	equ	0xFDD
 10258                           fsr2h	equ	0xFDA
 10259                           fsr2l	equ	0xFD9
 10260                           status	equ	0xFD8
 10261                           
 10262 ;; *************** function ___ftpack *****************
 10263 ;; Defined at:
 10264 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 10265 ;; Parameters:    Size  Location     Type
 10266 ;;  arg             3   64[BANK0 ] unsigned um
 10267 ;;  exp             1   67[BANK0 ] unsigned char 
 10268 ;;  sign            1   68[BANK0 ] unsigned char 
 10269 ;; Auto vars:     Size  Location     Type
 10270 ;;		None
 10271 ;; Return value:  Size  Location     Type
 10272 ;;                  3   64[BANK0 ] float 
 10273 ;; Registers used:
 10274 ;;		wreg, status,2, status,0
 10275 ;; Tracked objects:
 10276 ;;		On entry : 0/0
 10277 ;;		On exit  : 0/0
 10278 ;;		Unchanged: 0/0
 10279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10280 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10282 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10283 ;;      Totals:         0       5       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10284 ;;Total ram usage:        8 bytes
 10285 ;; Hardware stack levels used:    1
 10286 ;; Hardware stack levels required when called:   10
 10287 ;; This function calls:
 10288 ;;		Nothing
 10289 ;; This function is called by:
 10290 ;;		___ftadd
 10291 ;;		___ftmul
 10292 ;;		___lltoft
 10293 ;; This function uses a non-reentrant model
 10294 ;;
 10295                           
 10296                           	psect	text30
 10297  0134EA                     __ptext30:
 10298                           	opt stack 0
 10299  0134EA                     ___ftpack:
 10300                           	opt stack 15
 10301                           
 10302                           ;incstack = 0
 10303  0134EA  0100               	movlb	0	; () banked
 10304  0134EC  51A3               	movf	___ftpack@exp& (0+255),w,b
 10305  0134EE  B4D8               	btfsc	status,2,c
 10306  0134F0  D005               	goto	u6410
 10307                           
 10308                           ; BSR set to: 0
 10309  0134F2  51A0               	movf	___ftpack@arg& (0+255),w,b
 10310  0134F4  11A1               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 10311  0134F6  11A2               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 10312  0134F8  A4D8               	btfss	status,2,c
 10313  0134FA  D00D               	goto	l1213
 10314  0134FC                     u6410:
 10315                           
 10316                           ; BSR set to: 0
 10317                           
 10318                           ; BSR set to: 0
 10319  0134FC  0E00               	movlw	0
 10320  0134FE  6FA0               	movwf	?___ftpack& (0+255),b
 10321  013500  0E00               	movlw	0
 10322  013502  6FA1               	movwf	(?___ftpack+1)& (0+255),b
 10323  013504  0E00               	movlw	0
 10324  013506  6FA2               	movwf	(?___ftpack+2)& (0+255),b
 10325                           
 10326                           ; BSR set to: 0
 10327  013508  0012               	return	
 10328  01350A                     
 10329                           ; BSR set to: 0
 10330  01350A  0100               	movlb	0	; () banked
 10331  01350C  2BA3               	incf	___ftpack@exp& (0+255),f,b
 10332  01350E  90D8               	bcf	status,0,c
 10333  013510  33A2               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10334  013512  33A1               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10335  013514  33A0               	rrcf	___ftpack@arg& (0+255),f,b
 10336  013516                     l1213:
 10337                           
 10338                           ; BSR set to: 0
 10339                           
 10340                           ; BSR set to: 0
 10341  013516  0E00               	movlw	0
 10342  013518  15A0               	andwf	___ftpack@arg& (0+255),w,b
 10343  01351A  0101               	movlb	1	; () banked
 10344  01351C  6F8A               	movwf	??___ftpack& (0+255),b
 10345  01351E  0E00               	movlw	0
 10346  013520  0100               	movlb	0	; () banked
 10347  013522  15A1               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10348  013524  0101               	movlb	1	; () banked
 10349  013526  6F8B               	movwf	(??___ftpack+1)& (0+255),b
 10350  013528  0EFE               	movlw	254
 10351  01352A  0100               	movlb	0	; () banked
 10352  01352C  15A2               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10353  01352E  0101               	movlb	1	; () banked
 10354  013530  6F8C               	movwf	(??___ftpack+2)& (0+255),b
 10355  013532  518A               	movf	??___ftpack& (0+255),w,b
 10356  013534  118B               	iorwf	(??___ftpack+1)& (0+255),w,b
 10357  013536  118C               	iorwf	(??___ftpack+2)& (0+255),w,b
 10358  013538  B4D8               	btfsc	status,2,c
 10359  01353A  D00D               	goto	l1216
 10360  01353C  D7E6               	goto	l1214
 10361  01353E                     
 10362                           ; BSR set to: 1
 10363                           
 10364                           ; BSR set to: 1
 10365  01353E  0100               	movlb	0	; () banked
 10366  013540  2BA3               	incf	___ftpack@exp& (0+255),f,b
 10367                           
 10368                           ; BSR set to: 0
 10369  013542  0E01               	movlw	1
 10370  013544  27A0               	addwf	___ftpack@arg& (0+255),f,b
 10371  013546  0E00               	movlw	0
 10372  013548  23A1               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 10373  01354A  0E00               	movlw	0
 10374  01354C  23A2               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 10375  01354E  90D8               	bcf	status,0,c
 10376  013550  33A2               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10377  013552  33A1               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10378  013554  33A0               	rrcf	___ftpack@arg& (0+255),f,b
 10379  013556                     l1216:
 10380                           
 10381                           ; BSR set to: 0
 10382  013556  0E00               	movlw	0
 10383  013558  0100               	movlb	0	; () banked
 10384  01355A  15A0               	andwf	___ftpack@arg& (0+255),w,b
 10385  01355C  0101               	movlb	1	; () banked
 10386  01355E  6F8A               	movwf	??___ftpack& (0+255),b
 10387  013560  0E00               	movlw	0
 10388  013562  0100               	movlb	0	; () banked
 10389  013564  15A1               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10390  013566  0101               	movlb	1	; () banked
 10391  013568  6F8B               	movwf	(??___ftpack+1)& (0+255),b
 10392  01356A  0EFF               	movlw	255
 10393  01356C  0100               	movlb	0	; () banked
 10394  01356E  15A2               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10395  013570  0101               	movlb	1	; () banked
 10396  013572  6F8C               	movwf	(??___ftpack+2)& (0+255),b
 10397  013574  518A               	movf	??___ftpack& (0+255),w,b
 10398  013576  118B               	iorwf	(??___ftpack+1)& (0+255),w,b
 10399  013578  118C               	iorwf	(??___ftpack+2)& (0+255),w,b
 10400  01357A  B4D8               	btfsc	status,2,c
 10401  01357C  D007               	goto	l1219
 10402  01357E  D7DF               	goto	l1217
 10403  013580                     
 10404                           ; BSR set to: 1
 10405  013580  0100               	movlb	0	; () banked
 10406  013582  07A3               	decf	___ftpack@exp& (0+255),f,b
 10407  013584  90D8               	bcf	status,0,c
 10408  013586  37A0               	rlcf	___ftpack@arg& (0+255),f,b
 10409  013588  37A1               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 10410  01358A  37A2               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 10411  01358C                     l1219:
 10412                           
 10413                           ; BSR set to: 0
 10414  01358C  0100               	movlb	0	; () banked
 10415  01358E  BFA1               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 10416  013590  D003               	goto	u6450
 10417                           
 10418                           ; BSR set to: 0
 10419  013592  0E02               	movlw	2
 10420  013594  61A3               	cpfslt	___ftpack@exp& (0+255),b
 10421  013596  D7F4               	goto	l1220
 10422  013598                     u6450:
 10423                           
 10424                           ; BSR set to: 0
 10425                           
 10426                           ; BSR set to: 0
 10427  013598  A1A3               	btfss	___ftpack@exp& (0+255),0,b
 10428                           
 10429                           ; BSR set to: 0
 10430  01359A  9FA1               	bcf	(___ftpack@arg+1)& (0+255),7,b
 10431                           
 10432                           ; BSR set to: 0
 10433                           
 10434                           ; BSR set to: 0
 10435  01359C  90D8               	bcf	status,0,c
 10436  01359E  33A3               	rrcf	___ftpack@exp& (0+255),f,b
 10437  0135A0  51A3               	movf	___ftpack@exp& (0+255),w,b
 10438  0135A2  13A2               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 10439                           
 10440                           ; BSR set to: 0
 10441  0135A4  51A4               	movf	___ftpack@sign& (0+255),w,b
 10442  0135A6  A4D8               	btfss	status,2,c
 10443                           
 10444                           ; BSR set to: 0
 10445  0135A8  8FA2               	bsf	(___ftpack@arg+2)& (0+255),7,b
 10446                           
 10447                           ; BSR set to: 0
 10448                           
 10449                           ; BSR set to: 0
 10450  0135AA  C0A0  F0A0         	movff	___ftpack@arg,?___ftpack
 10451  0135AE  C0A1  F0A1         	movff	___ftpack@arg+1,?___ftpack+1
 10452  0135B2  C0A2  F0A2         	movff	___ftpack@arg+2,?___ftpack+2
 10453  0135B6  0012               	return	
 10454  0135B8                     __end_of___ftpack:
 10455                           	opt stack 0
 10456                           tblptru	equ	0xFF8
 10457                           tblptrh	equ	0xFF7
 10458                           tblptrl	equ	0xFF6
 10459                           tablat	equ	0xFF5
 10460                           prodh	equ	0xFF4
 10461                           prodl	equ	0xFF3
 10462                           intcon	equ	0xFF2
 10463                           postinc0	equ	0xFEE
 10464                           wreg	equ	0xFE8
 10465                           indf2	equ	0xFDF
 10466                           postinc2	equ	0xFDE
 10467                           postdec2	equ	0xFDD
 10468                           fsr2h	equ	0xFDA
 10469                           fsr2l	equ	0xFD9
 10470                           status	equ	0xFD8
 10471                           
 10472 ;; *************** function ___ftneg *****************
 10473 ;; Defined at:
 10474 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 10475 ;; Parameters:    Size  Location     Type
 10476 ;;  f1              3   64[BANK0 ] float 
 10477 ;; Auto vars:     Size  Location     Type
 10478 ;;		None
 10479 ;; Return value:  Size  Location     Type
 10480 ;;                  3   64[BANK0 ] float 
 10481 ;; Registers used:
 10482 ;;		wreg, status,2, status,0
 10483 ;; Tracked objects:
 10484 ;;		On entry : 0/0
 10485 ;;		On exit  : 0/0
 10486 ;;		Unchanged: 0/0
 10487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10488 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10491 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10492 ;;Total ram usage:        3 bytes
 10493 ;; Hardware stack levels used:    1
 10494 ;; Hardware stack levels required when called:   10
 10495 ;; This function calls:
 10496 ;;		Nothing
 10497 ;; This function is called by:
 10498 ;;		_printf
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           	psect	text31
 10503  014416                     __ptext31:
 10504                           	opt stack 0
 10505  014416                     ___ftneg:
 10506                           	opt stack 17
 10507                           
 10508                           ; BSR set to: 0
 10509                           ;incstack = 0
 10510  014416  0100               	movlb	0	; () banked
 10511  014418  51A0               	movf	___ftneg@f1& (0+255),w,b
 10512  01441A  11A1               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 10513  01441C  11A2               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 10514  01441E  B4D8               	btfsc	status,2,c
 10515  014420  D006               	goto	l1320
 10516                           
 10517                           ; BSR set to: 0
 10518  014422  0E00               	movlw	0
 10519  014424  1BA0               	xorwf	___ftneg@f1& (0+255),f,b
 10520  014426  0E00               	movlw	0
 10521  014428  1BA1               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 10522  01442A  0E80               	movlw	128
 10523  01442C  1BA2               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 10524  01442E                     l1320:
 10525                           
 10526                           ; BSR set to: 0
 10527  01442E  C0A0  F0A0         	movff	___ftneg@f1,?___ftneg
 10528  014432  C0A1  F0A1         	movff	___ftneg@f1+1,?___ftneg+1
 10529  014436  C0A2  F0A2         	movff	___ftneg@f1+2,?___ftneg+2
 10530                           
 10531                           ; BSR set to: 0
 10532  01443A  0012               	return		;funcret
 10533  01443C                     __end_of___ftneg:
 10534                           	opt stack 0
 10535                           tblptru	equ	0xFF8
 10536                           tblptrh	equ	0xFF7
 10537                           tblptrl	equ	0xFF6
 10538                           tablat	equ	0xFF5
 10539                           prodh	equ	0xFF4
 10540                           prodl	equ	0xFF3
 10541                           intcon	equ	0xFF2
 10542                           postinc0	equ	0xFEE
 10543                           wreg	equ	0xFE8
 10544                           indf2	equ	0xFDF
 10545                           postinc2	equ	0xFDE
 10546                           postdec2	equ	0xFDD
 10547                           fsr2h	equ	0xFDA
 10548                           fsr2l	equ	0xFD9
 10549                           status	equ	0xFD8
 10550                           
 10551 ;; *************** function ___ftge *****************
 10552 ;; Defined at:
 10553 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 10554 ;; Parameters:    Size  Location     Type
 10555 ;;  ff1             3   64[BANK0 ] float 
 10556 ;;  ff2             3   67[BANK0 ] float 
 10557 ;; Auto vars:     Size  Location     Type
 10558 ;;		None
 10559 ;; Return value:  Size  Location     Type
 10560 ;;		None               void
 10561 ;; Registers used:
 10562 ;;		wreg, status,2, status,0
 10563 ;; Tracked objects:
 10564 ;;		On entry : 0/0
 10565 ;;		On exit  : 0/0
 10566 ;;		Unchanged: 0/0
 10567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10568 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10570 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10571 ;;      Totals:         0       6       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10572 ;;Total ram usage:        9 bytes
 10573 ;; Hardware stack levels used:    1
 10574 ;; Hardware stack levels required when called:   10
 10575 ;; This function calls:
 10576 ;;		Nothing
 10577 ;; This function is called by:
 10578 ;;		_printf
 10579 ;; This function uses a non-reentrant model
 10580 ;;
 10581                           
 10582                           	psect	text32
 10583  013726                     __ptext32:
 10584                           	opt stack 0
 10585  013726                     ___ftge:
 10586                           	opt stack 17
 10587                           
 10588                           ; BSR set to: 0
 10589                           ;incstack = 0
 10590  013726  0100               	movlb	0	; () banked
 10591  013728  AFA2               	btfss	(___ftge@ff1+2)& (0+255),7,b
 10592  01372A  D01C               	goto	l1302
 10593                           
 10594                           ; BSR set to: 0
 10595  01372C  C0A0  F18A         	movff	___ftge@ff1,??___ftge
 10596  013730  C0A1  F18B         	movff	___ftge@ff1+1,??___ftge+1
 10597  013734  C0A2  F18C         	movff	___ftge@ff1+2,??___ftge+2
 10598  013738  0101               	movlb	1	; () banked
 10599  01373A  1F8A               	comf	??___ftge& (0+255),f,b
 10600  01373C  1F8B               	comf	(??___ftge+1)& (0+255),f,b
 10601  01373E  1F8C               	comf	(??___ftge+2)& (0+255),f,b
 10602  013740  2B8A               	incf	??___ftge& (0+255),f,b
 10603  013742  0E00               	movlw	0
 10604  013744  238B               	addwfc	(??___ftge+1)& (0+255),f,b
 10605  013746  238C               	addwfc	(??___ftge+2)& (0+255),f,b
 10606  013748  0E00               	movlw	0
 10607  01374A  258A               	addwf	??___ftge& (0+255),w,b
 10608  01374C  0100               	movlb	0	; () banked
 10609  01374E  6FA0               	movwf	___ftge@ff1& (0+255),b
 10610  013750  0E00               	movlw	0
 10611  013752  0101               	movlb	1	; () banked
 10612  013754  218B               	addwfc	(??___ftge+1)& (0+255),w,b
 10613  013756  0100               	movlb	0	; () banked
 10614  013758  6FA1               	movwf	(___ftge@ff1+1)& (0+255),b
 10615  01375A  0E80               	movlw	128
 10616  01375C  0101               	movlb	1	; () banked
 10617  01375E  218C               	addwfc	(??___ftge+2)& (0+255),w,b
 10618  013760  0100               	movlb	0	; () banked
 10619  013762  6FA2               	movwf	(___ftge@ff1+2)& (0+255),b
 10620  013764                     l1302:
 10621                           
 10622                           ; BSR set to: 0
 10623                           
 10624                           ; BSR set to: 0
 10625  013764  AFA5               	btfss	(___ftge@ff2+2)& (0+255),7,b
 10626  013766  D01C               	goto	l1303
 10627                           
 10628                           ; BSR set to: 0
 10629  013768  C0A3  F18A         	movff	___ftge@ff2,??___ftge
 10630  01376C  C0A4  F18B         	movff	___ftge@ff2+1,??___ftge+1
 10631  013770  C0A5  F18C         	movff	___ftge@ff2+2,??___ftge+2
 10632  013774  0101               	movlb	1	; () banked
 10633  013776  1F8A               	comf	??___ftge& (0+255),f,b
 10634  013778  1F8B               	comf	(??___ftge+1)& (0+255),f,b
 10635  01377A  1F8C               	comf	(??___ftge+2)& (0+255),f,b
 10636  01377C  2B8A               	incf	??___ftge& (0+255),f,b
 10637  01377E  0E00               	movlw	0
 10638  013780  238B               	addwfc	(??___ftge+1)& (0+255),f,b
 10639  013782  238C               	addwfc	(??___ftge+2)& (0+255),f,b
 10640  013784  0E00               	movlw	0
 10641  013786  258A               	addwf	??___ftge& (0+255),w,b
 10642  013788  0100               	movlb	0	; () banked
 10643  01378A  6FA3               	movwf	___ftge@ff2& (0+255),b
 10644  01378C  0E00               	movlw	0
 10645  01378E  0101               	movlb	1	; () banked
 10646  013790  218B               	addwfc	(??___ftge+1)& (0+255),w,b
 10647  013792  0100               	movlb	0	; () banked
 10648  013794  6FA4               	movwf	(___ftge@ff2+1)& (0+255),b
 10649  013796  0E80               	movlw	128
 10650  013798  0101               	movlb	1	; () banked
 10651  01379A  218C               	addwfc	(??___ftge+2)& (0+255),w,b
 10652  01379C  0100               	movlb	0	; () banked
 10653  01379E  6FA5               	movwf	(___ftge@ff2+2)& (0+255),b
 10654  0137A0                     l1303:
 10655                           
 10656                           ; BSR set to: 0
 10657                           
 10658                           ; BSR set to: 0
 10659  0137A0  0E00               	movlw	0
 10660  0137A2  1BA0               	xorwf	___ftge@ff1& (0+255),f,b
 10661  0137A4  0E00               	movlw	0
 10662  0137A6  1BA1               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 10663  0137A8  0E80               	movlw	128
 10664  0137AA  1BA2               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 10665                           
 10666                           ; BSR set to: 0
 10667  0137AC  0E00               	movlw	0
 10668  0137AE  1BA3               	xorwf	___ftge@ff2& (0+255),f,b
 10669  0137B0  0E00               	movlw	0
 10670  0137B2  1BA4               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 10671  0137B4  0E80               	movlw	128
 10672  0137B6  1BA5               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 10673  0137B8  51A3               	movf	___ftge@ff2& (0+255),w,b
 10674  0137BA  5DA0               	subwf	___ftge@ff1& (0+255),w,b
 10675  0137BC  51A4               	movf	(___ftge@ff2+1)& (0+255),w,b
 10676  0137BE  59A1               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 10677  0137C0  51A5               	movf	(___ftge@ff2+2)& (0+255),w,b
 10678  0137C2  59A2               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 10679  0137C4  B0D8               	btfsc	status,0,c
 10680  0137C6  D002               	goto	l6016
 10681                           
 10682                           ; BSR set to: 0
 10683  0137C8  90D8               	bcf	status,0,c
 10684  0137CA  0012               	return	
 10685  0137CC                     l6016:
 10686                           
 10687                           ; BSR set to: 0
 10688                           
 10689                           ; BSR set to: 0
 10690  0137CC  80D8               	bsf	status,0,c
 10691                           
 10692                           ; BSR set to: 0
 10693  0137CE  0012               	return	
 10694  0137D0                     __end_of___ftge:
 10695                           	opt stack 0
 10696                           tblptru	equ	0xFF8
 10697                           tblptrh	equ	0xFF7
 10698                           tblptrl	equ	0xFF6
 10699                           tablat	equ	0xFF5
 10700                           prodh	equ	0xFF4
 10701                           prodl	equ	0xFF3
 10702                           intcon	equ	0xFF2
 10703                           postinc0	equ	0xFEE
 10704                           wreg	equ	0xFE8
 10705                           indf2	equ	0xFDF
 10706                           postinc2	equ	0xFDE
 10707                           postdec2	equ	0xFDD
 10708                           fsr2h	equ	0xFDA
 10709                           fsr2l	equ	0xFD9
 10710                           status	equ	0xFD8
 10711                           
 10712 ;; *************** function _SYSTEM_Initialize *****************
 10713 ;; Defined at:
 10714 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;		None
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;		None
 10719 ;; Return value:  Size  Location     Type
 10720 ;;                  1    wreg      void 
 10721 ;; Registers used:
 10722 ;;		wreg, status,2, status,0, cstack
 10723 ;; Tracked objects:
 10724 ;;		On entry : 0/0
 10725 ;;		On exit  : 0/0
 10726 ;;		Unchanged: 0/0
 10727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10732 ;;Total ram usage:        0 bytes
 10733 ;; Hardware stack levels used:    1
 10734 ;; Hardware stack levels required when called:   12
 10735 ;; This function calls:
 10736 ;;		_ADCC_Initialize
 10737 ;;		_EUSART2_Initialize
 10738 ;;		_FVR_Initialize
 10739 ;;		_INTERRUPT_Initialize
 10740 ;;		_OSCILLATOR_Initialize
 10741 ;;		_PIN_MANAGER_Initialize
 10742 ;;		_PMD_Initialize
 10743 ;;		_TMR6_Initialize
 10744 ;;		_TMR7_Initialize
 10745 ;; This function is called by:
 10746 ;;		_main
 10747 ;; This function uses a non-reentrant model
 10748 ;;
 10749                           
 10750                           	psect	text33
 10751  01443C                     __ptext33:
 10752                           	opt stack 0
 10753  01443C                     _SYSTEM_Initialize:
 10754                           	opt stack 18
 10755                           
 10756                           ;mcc.c: 52: INTERRUPT_Initialize();
 10757                           
 10758                           ; BSR set to: 0
 10759                           ;incstack = 0
 10760  01443C  ECD5  F0A2         	call	_INTERRUPT_Initialize	;wreg free
 10761                           
 10762                           ;mcc.c: 53: PMD_Initialize();
 10763  014440  EC8E  F0A2         	call	_PMD_Initialize	;wreg free
 10764                           
 10765                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 10766  014444  ECE8  F09B         	call	_PIN_MANAGER_Initialize	;wreg free
 10767                           
 10768                           ;mcc.c: 55: OSCILLATOR_Initialize();
 10769  014448  EC9C  F0A2         	call	_OSCILLATOR_Initialize	;wreg free
 10770                           
 10771                           ;mcc.c: 56: FVR_Initialize();
 10772  01444C  EC19  F0A3         	call	_FVR_Initialize	;wreg free
 10773                           
 10774                           ;mcc.c: 57: TMR7_Initialize();
 10775  014450  EC46  F0A0         	call	_TMR7_Initialize	;wreg free
 10776                           
 10777                           ;mcc.c: 58: TMR6_Initialize();
 10778  014454  ECB2  F0A1         	call	_TMR6_Initialize	;wreg free
 10779                           
 10780                           ;mcc.c: 59: ADCC_Initialize();
 10781  014458  EC60  F09F         	call	_ADCC_Initialize	;wreg free
 10782                           
 10783                           ;mcc.c: 60: EUSART2_Initialize();
 10784  01445C  EC92  F09F         	call	_EUSART2_Initialize	;wreg free
 10785  014460  0012               	return		;funcret
 10786  014462                     __end_of_SYSTEM_Initialize:
 10787                           	opt stack 0
 10788                           tblptru	equ	0xFF8
 10789                           tblptrh	equ	0xFF7
 10790                           tblptrl	equ	0xFF6
 10791                           tablat	equ	0xFF5
 10792                           prodh	equ	0xFF4
 10793                           prodl	equ	0xFF3
 10794                           intcon	equ	0xFF2
 10795                           postinc0	equ	0xFEE
 10796                           wreg	equ	0xFE8
 10797                           indf2	equ	0xFDF
 10798                           postinc2	equ	0xFDE
 10799                           postdec2	equ	0xFDD
 10800                           fsr2h	equ	0xFDA
 10801                           fsr2l	equ	0xFD9
 10802                           status	equ	0xFD8
 10803                           
 10804 ;; *************** function _TMR7_Initialize *****************
 10805 ;; Defined at:
 10806 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 10807 ;; Parameters:    Size  Location     Type
 10808 ;;		None
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;		None
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  1    wreg      void 
 10813 ;; Registers used:
 10814 ;;		wreg, status,2, status,0, cstack
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10822 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10823 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10824 ;;Total ram usage:        2 bytes
 10825 ;; Hardware stack levels used:    1
 10826 ;; Hardware stack levels required when called:   11
 10827 ;; This function calls:
 10828 ;;		_TMR7_SetInterruptHandler
 10829 ;; This function is called by:
 10830 ;;		_SYSTEM_Initialize
 10831 ;; This function uses a non-reentrant model
 10832 ;;
 10833                           
 10834                           	psect	text34
 10835  01408C                     __ptext34:
 10836                           	opt stack 0
 10837  01408C                     _TMR7_Initialize:
 10838                           	opt stack 18
 10839                           
 10840                           ;tmr7.c: 69: T7GCON = 0x00;
 10841                           
 10842                           ;incstack = 0
 10843  01408C  0E00               	movlw	0
 10844  01408E  010F               	movlb	15	; () banked
 10845  014090  6F31               	movwf	49,b	;volatile
 10846                           
 10847                           ;tmr7.c: 72: T7GATE = 0x00;
 10848  014092  0E00               	movlw	0
 10849  014094  6F32               	movwf	50,b	;volatile
 10850                           
 10851                           ;tmr7.c: 75: T7CLK = 0x03;
 10852  014096  0E03               	movlw	3
 10853  014098  6F33               	movwf	51,b	;volatile
 10854                           
 10855                           ;tmr7.c: 78: TMR7H = 0x3C;
 10856  01409A  0E3C               	movlw	60
 10857  01409C  6F2F               	movwf	47,b	;volatile
 10858                           
 10859                           ;tmr7.c: 81: TMR7L = 0xB0;
 10860  01409E  0EB0               	movlw	176
 10861  0140A0  6F2E               	movwf	46,b	;volatile
 10862                           
 10863                           ; BSR set to: 15
 10864                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 10865  0140A2  512E               	movf	46,w,b	;volatile
 10866  0140A4  CF2F F0A3          	movff	3887,??_TMR7_Initialize	;volatile
 10867  0140A8  0100               	movlb	0	; () banked
 10868  0140AA  6BA4               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 10869  0140AC  C0A3  F0A4         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 10870  0140B0  6BA3               	clrf	??_TMR7_Initialize& (0+255),b
 10871  0140B2  11A3               	iorwf	??_TMR7_Initialize& (0+255),w,b
 10872  0140B4  6FB5               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 10873  0140B6  51A4               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 10874  0140B8  6FB6               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 10875                           
 10876                           ; BSR set to: 0
 10877                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 10878  0140BA  010E               	movlb	14	; () banked
 10879  0140BC  9D38               	bcf	56,6,b	;volatile
 10880                           
 10881                           ; BSR set to: 14
 10882                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 10883  0140BE  8D2E               	bsf	46,6,b	;volatile
 10884                           
 10885                           ; BSR set to: 14
 10886                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 10887  0140C0  0E3E               	movlw	low _TMR7_DefaultInterruptHandler
 10888  0140C2  0100               	movlb	0	; () banked
 10889  0140C4  6FA0               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 10890  0140C6  0E46               	movlw	high _TMR7_DefaultInterruptHandler
 10891  0140C8  6FA1               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 10892  0140CA  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 10893  0140CC  6FA2               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 10894  0140CE  ECE4  F0A2         	call	_TMR7_SetInterruptHandler	;wreg free
 10895                           
 10896                           ;tmr7.c: 96: T7CON = 0x31;
 10897  0140D2  0E31               	movlw	49
 10898  0140D4  010F               	movlb	15	; () banked
 10899  0140D6  6F30               	movwf	48,b	;volatile
 10900                           
 10901                           ; BSR set to: 15
 10902  0140D8  0012               	return		;funcret
 10903  0140DA                     __end_of_TMR7_Initialize:
 10904                           	opt stack 0
 10905                           tblptru	equ	0xFF8
 10906                           tblptrh	equ	0xFF7
 10907                           tblptrl	equ	0xFF6
 10908                           tablat	equ	0xFF5
 10909                           prodh	equ	0xFF4
 10910                           prodl	equ	0xFF3
 10911                           intcon	equ	0xFF2
 10912                           postinc0	equ	0xFEE
 10913                           wreg	equ	0xFE8
 10914                           indf2	equ	0xFDF
 10915                           postinc2	equ	0xFDE
 10916                           postdec2	equ	0xFDD
 10917                           fsr2h	equ	0xFDA
 10918                           fsr2l	equ	0xFD9
 10919                           status	equ	0xFD8
 10920                           
 10921 ;; *************** function _TMR7_SetInterruptHandler *****************
 10922 ;; Defined at:
 10923 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 10924 ;; Parameters:    Size  Location     Type
 10925 ;;  InterruptHan    3   64[BANK0 ] PTR FTN()void 
 10926 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 10927 ;; Auto vars:     Size  Location     Type
 10928 ;;		None
 10929 ;; Return value:  Size  Location     Type
 10930 ;;                  1    wreg      void 
 10931 ;; Registers used:
 10932 ;;		wreg, status,2, status,0
 10933 ;; Tracked objects:
 10934 ;;		On entry : 0/0
 10935 ;;		On exit  : 0/0
 10936 ;;		Unchanged: 0/0
 10937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10938 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10941 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10942 ;;Total ram usage:        3 bytes
 10943 ;; Hardware stack levels used:    1
 10944 ;; Hardware stack levels required when called:   10
 10945 ;; This function calls:
 10946 ;;		Nothing
 10947 ;; This function is called by:
 10948 ;;		_TMR7_Initialize
 10949 ;;		_main
 10950 ;; This function uses a non-reentrant model
 10951 ;;
 10952                           
 10953                           	psect	text35
 10954  0145C8                     __ptext35:
 10955                           	opt stack 0
 10956  0145C8                     _TMR7_SetInterruptHandler:
 10957                           	opt stack 20
 10958                           
 10959                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 10960                           
 10961                           ; BSR set to: 15
 10962                           ;incstack = 0
 10963  0145C8  C0A0  F0A9         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 10964  0145CC  C0A1  F0AA         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 10965  0145D0  C0A2  F0AB         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 10966  0145D4  0012               	return		;funcret
 10967  0145D6                     __end_of_TMR7_SetInterruptHandler:
 10968                           	opt stack 0
 10969                           tblptru	equ	0xFF8
 10970                           tblptrh	equ	0xFF7
 10971                           tblptrl	equ	0xFF6
 10972                           tablat	equ	0xFF5
 10973                           prodh	equ	0xFF4
 10974                           prodl	equ	0xFF3
 10975                           intcon	equ	0xFF2
 10976                           postinc0	equ	0xFEE
 10977                           wreg	equ	0xFE8
 10978                           indf2	equ	0xFDF
 10979                           postinc2	equ	0xFDE
 10980                           postdec2	equ	0xFDD
 10981                           fsr2h	equ	0xFDA
 10982                           fsr2l	equ	0xFD9
 10983                           status	equ	0xFD8
 10984                           
 10985 ;; *************** function _TMR6_Initialize *****************
 10986 ;; Defined at:
 10987 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;		None
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;		None
 10992 ;; Return value:  Size  Location     Type
 10993 ;;                  1    wreg      void 
 10994 ;; Registers used:
 10995 ;;		wreg, status,2, status,0, cstack
 10996 ;; Tracked objects:
 10997 ;;		On entry : 0/0
 10998 ;;		On exit  : 0/0
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11005 ;;Total ram usage:        0 bytes
 11006 ;; Hardware stack levels used:    1
 11007 ;; Hardware stack levels required when called:   11
 11008 ;; This function calls:
 11009 ;;		_TMR6_SetInterruptHandler
 11010 ;; This function is called by:
 11011 ;;		_SYSTEM_Initialize
 11012 ;; This function uses a non-reentrant model
 11013 ;;
 11014                           
 11015                           	psect	text36
 11016  014364                     __ptext36:
 11017                           	opt stack 0
 11018  014364                     _TMR6_Initialize:
 11019                           	opt stack 18
 11020                           
 11021                           ;tmr6.c: 69: T6CLKCON = 0x04;
 11022                           
 11023                           ;incstack = 0
 11024  014364  0E04               	movlw	4
 11025  014366  6EB3               	movwf	4019,c	;volatile
 11026                           
 11027                           ;tmr6.c: 72: T6HLT = 0x20;
 11028  014368  0E20               	movlw	32
 11029  01436A  6EB2               	movwf	4018,c	;volatile
 11030                           
 11031                           ;tmr6.c: 75: T6RST = 0x00;
 11032  01436C  0E00               	movlw	0
 11033  01436E  6EB4               	movwf	4020,c	;volatile
 11034                           
 11035                           ;tmr6.c: 78: T6PR = 0xF1;
 11036  014370  0EF1               	movlw	241
 11037  014372  6EB0               	movwf	4016,c	;volatile
 11038                           
 11039                           ;tmr6.c: 81: T6TMR = 0x00;
 11040  014374  0E00               	movlw	0
 11041  014376  6EAF               	movwf	4015,c	;volatile
 11042                           
 11043                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 11044  014378  010E               	movlb	14	; () banked
 11045  01437A  9B38               	bcf	56,5,b	;volatile
 11046                           
 11047                           ; BSR set to: 14
 11048                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 11049  01437C  8B2E               	bsf	46,5,b	;volatile
 11050                           
 11051                           ; BSR set to: 14
 11052                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 11053  01437E  0E40               	movlw	low _TMR6_DefaultInterruptHandler
 11054  014380  0100               	movlb	0	; () banked
 11055  014382  6FA0               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 11056  014384  0E46               	movlw	high _TMR6_DefaultInterruptHandler
 11057  014386  6FA1               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 11058  014388  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 11059  01438A  6FA2               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 11060  01438C  ECEB  F0A2         	call	_TMR6_SetInterruptHandler	;wreg free
 11061                           
 11062                           ;tmr6.c: 93: T6CON = 0xBF;
 11063  014390  0EBF               	movlw	191
 11064  014392  6EB1               	movwf	4017,c	;volatile
 11065  014394  0012               	return		;funcret
 11066  014396                     __end_of_TMR6_Initialize:
 11067                           	opt stack 0
 11068                           tblptru	equ	0xFF8
 11069                           tblptrh	equ	0xFF7
 11070                           tblptrl	equ	0xFF6
 11071                           tablat	equ	0xFF5
 11072                           prodh	equ	0xFF4
 11073                           prodl	equ	0xFF3
 11074                           intcon	equ	0xFF2
 11075                           postinc0	equ	0xFEE
 11076                           wreg	equ	0xFE8
 11077                           indf2	equ	0xFDF
 11078                           postinc2	equ	0xFDE
 11079                           postdec2	equ	0xFDD
 11080                           fsr2h	equ	0xFDA
 11081                           fsr2l	equ	0xFD9
 11082                           status	equ	0xFD8
 11083                           
 11084 ;; *************** function _TMR6_SetInterruptHandler *****************
 11085 ;; Defined at:
 11086 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 11087 ;; Parameters:    Size  Location     Type
 11088 ;;  InterruptHan    3   64[BANK0 ] PTR FTN()void 
 11089 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 11090 ;; Auto vars:     Size  Location     Type
 11091 ;;		None
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  1    wreg      void 
 11094 ;; Registers used:
 11095 ;;		wreg, status,2, status,0
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/0
 11098 ;;		On exit  : 0/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11101 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11104 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11105 ;;Total ram usage:        3 bytes
 11106 ;; Hardware stack levels used:    1
 11107 ;; Hardware stack levels required when called:   10
 11108 ;; This function calls:
 11109 ;;		Nothing
 11110 ;; This function is called by:
 11111 ;;		_TMR6_Initialize
 11112 ;;		_main
 11113 ;; This function uses a non-reentrant model
 11114 ;;
 11115                           
 11116                           	psect	text37
 11117  0145D6                     __ptext37:
 11118                           	opt stack 0
 11119  0145D6                     _TMR6_SetInterruptHandler:
 11120                           	opt stack 20
 11121                           
 11122                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 11123                           
 11124                           ;incstack = 0
 11125  0145D6  C0A0  F0AC         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 11126  0145DA  C0A1  F0AD         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 11127  0145DE  C0A2  F0AE         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 11128  0145E2  0012               	return		;funcret
 11129  0145E4                     __end_of_TMR6_SetInterruptHandler:
 11130                           	opt stack 0
 11131                           tblptru	equ	0xFF8
 11132                           tblptrh	equ	0xFF7
 11133                           tblptrl	equ	0xFF6
 11134                           tablat	equ	0xFF5
 11135                           prodh	equ	0xFF4
 11136                           prodl	equ	0xFF3
 11137                           intcon	equ	0xFF2
 11138                           postinc0	equ	0xFEE
 11139                           wreg	equ	0xFE8
 11140                           indf2	equ	0xFDF
 11141                           postinc2	equ	0xFDE
 11142                           postdec2	equ	0xFDD
 11143                           fsr2h	equ	0xFDA
 11144                           fsr2l	equ	0xFD9
 11145                           status	equ	0xFD8
 11146                           
 11147 ;; *************** function _PMD_Initialize *****************
 11148 ;; Defined at:
 11149 ;;		line 81 in file "mcc_generated_files/mcc.c"
 11150 ;; Parameters:    Size  Location     Type
 11151 ;;		None
 11152 ;; Auto vars:     Size  Location     Type
 11153 ;;		None
 11154 ;; Return value:  Size  Location     Type
 11155 ;;                  1    wreg      void 
 11156 ;; Registers used:
 11157 ;;		wreg, status,2
 11158 ;; Tracked objects:
 11159 ;;		On entry : 0/0
 11160 ;;		On exit  : 0/0
 11161 ;;		Unchanged: 0/0
 11162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11167 ;;Total ram usage:        0 bytes
 11168 ;; Hardware stack levels used:    1
 11169 ;; Hardware stack levels required when called:   10
 11170 ;; This function calls:
 11171 ;;		Nothing
 11172 ;; This function is called by:
 11173 ;;		_SYSTEM_Initialize
 11174 ;; This function uses a non-reentrant model
 11175 ;;
 11176                           
 11177                           	psect	text38
 11178  01451C                     __ptext38:
 11179                           	opt stack 0
 11180  01451C                     _PMD_Initialize:
 11181                           	opt stack 19
 11182                           
 11183                           ;mcc.c: 84: PMD0 = 0x00;
 11184                           
 11185                           ;incstack = 0
 11186  01451C  0E00               	movlw	0
 11187  01451E  010E               	movlb	14	; () banked
 11188  014520  6F4C               	movwf	76,b	;volatile
 11189                           
 11190                           ;mcc.c: 86: PMD1 = 0x00;
 11191  014522  0E00               	movlw	0
 11192  014524  6F4D               	movwf	77,b	;volatile
 11193                           
 11194                           ;mcc.c: 88: PMD2 = 0x00;
 11195  014526  0E00               	movlw	0
 11196  014528  6F4E               	movwf	78,b	;volatile
 11197                           
 11198                           ;mcc.c: 90: PMD3 = 0x00;
 11199  01452A  0E00               	movlw	0
 11200  01452C  6F4F               	movwf	79,b	;volatile
 11201                           
 11202                           ;mcc.c: 92: PMD4 = 0x00;
 11203  01452E  0E00               	movlw	0
 11204  014530  6F50               	movwf	80,b	;volatile
 11205                           
 11206                           ;mcc.c: 94: PMD5 = 0x00;
 11207  014532  0E00               	movlw	0
 11208  014534  6F51               	movwf	81,b	;volatile
 11209                           
 11210                           ; BSR set to: 14
 11211  014536  0012               	return		;funcret
 11212  014538                     __end_of_PMD_Initialize:
 11213                           	opt stack 0
 11214                           tblptru	equ	0xFF8
 11215                           tblptrh	equ	0xFF7
 11216                           tblptrl	equ	0xFF6
 11217                           tablat	equ	0xFF5
 11218                           prodh	equ	0xFF4
 11219                           prodl	equ	0xFF3
 11220                           intcon	equ	0xFF2
 11221                           postinc0	equ	0xFEE
 11222                           wreg	equ	0xFE8
 11223                           indf2	equ	0xFDF
 11224                           postinc2	equ	0xFDE
 11225                           postdec2	equ	0xFDD
 11226                           fsr2h	equ	0xFDA
 11227                           fsr2l	equ	0xFD9
 11228                           status	equ	0xFD8
 11229                           
 11230 ;; *************** function _PIN_MANAGER_Initialize *****************
 11231 ;; Defined at:
 11232 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11233 ;; Parameters:    Size  Location     Type
 11234 ;;		None
 11235 ;; Auto vars:     Size  Location     Type
 11236 ;;		None
 11237 ;; Return value:  Size  Location     Type
 11238 ;;                  1    wreg      void 
 11239 ;; Registers used:
 11240 ;;		wreg, status,2
 11241 ;; Tracked objects:
 11242 ;;		On entry : 0/0
 11243 ;;		On exit  : 0/0
 11244 ;;		Unchanged: 0/0
 11245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11250 ;;Total ram usage:        0 bytes
 11251 ;; Hardware stack levels used:    1
 11252 ;; Hardware stack levels required when called:   10
 11253 ;; This function calls:
 11254 ;;		Nothing
 11255 ;; This function is called by:
 11256 ;;		_SYSTEM_Initialize
 11257 ;; This function uses a non-reentrant model
 11258 ;;
 11259                           
 11260                           	psect	text39
 11261  0137D0                     __ptext39:
 11262                           	opt stack 0
 11263  0137D0                     _PIN_MANAGER_Initialize:
 11264                           	opt stack 19
 11265                           
 11266                           ;pin_manager.c: 62: LATE = 0x00;
 11267                           
 11268                           ; BSR set to: 14
 11269                           ;incstack = 0
 11270  0137D0  0E00               	movlw	0
 11271  0137D2  6E7D               	movwf	3965,c	;volatile
 11272                           
 11273                           ;pin_manager.c: 63: LATD = 0x00;
 11274  0137D4  0E00               	movlw	0
 11275  0137D6  6E7C               	movwf	3964,c	;volatile
 11276                           
 11277                           ;pin_manager.c: 64: LATA = 0x00;
 11278  0137D8  0E00               	movlw	0
 11279  0137DA  6E79               	movwf	3961,c	;volatile
 11280                           
 11281                           ;pin_manager.c: 65: LATF = 0x00;
 11282  0137DC  0E00               	movlw	0
 11283  0137DE  6E7E               	movwf	3966,c	;volatile
 11284                           
 11285                           ;pin_manager.c: 66: LATB = 0x00;
 11286  0137E0  0E00               	movlw	0
 11287  0137E2  6E7A               	movwf	3962,c	;volatile
 11288                           
 11289                           ;pin_manager.c: 67: LATG = 0x00;
 11290  0137E4  0E00               	movlw	0
 11291  0137E6  6E7F               	movwf	3967,c	;volatile
 11292                           
 11293                           ;pin_manager.c: 68: LATC = 0x00;
 11294  0137E8  0E00               	movlw	0
 11295  0137EA  6E7B               	movwf	3963,c	;volatile
 11296                           
 11297                           ;pin_manager.c: 69: LATH = 0x00;
 11298  0137EC  0E00               	movlw	0
 11299  0137EE  6E80               	movwf	3968,c	;volatile
 11300                           
 11301                           ;pin_manager.c: 74: TRISE = 0xFF;
 11302  0137F0  6885               	setf	3973,c	;volatile
 11303                           
 11304                           ;pin_manager.c: 75: TRISF = 0xF0;
 11305  0137F2  0EF0               	movlw	240
 11306  0137F4  6E86               	movwf	3974,c	;volatile
 11307                           
 11308                           ;pin_manager.c: 76: TRISA = 0xFF;
 11309  0137F6  6881               	setf	3969,c	;volatile
 11310                           
 11311                           ;pin_manager.c: 77: TRISG = 0x5C;
 11312  0137F8  0E5C               	movlw	92
 11313  0137FA  6E87               	movwf	3975,c	;volatile
 11314                           
 11315                           ;pin_manager.c: 78: TRISB = 0xFF;
 11316  0137FC  6882               	setf	3970,c	;volatile
 11317                           
 11318                           ;pin_manager.c: 79: TRISH = 0x0F;
 11319  0137FE  0E0F               	movlw	15
 11320  013800  6E88               	movwf	3976,c	;volatile
 11321                           
 11322                           ;pin_manager.c: 80: TRISC = 0xFF;
 11323  013802  6883               	setf	3971,c	;volatile
 11324                           
 11325                           ;pin_manager.c: 81: TRISD = 0xFF;
 11326  013804  6884               	setf	3972,c	;volatile
 11327                           
 11328                           ;pin_manager.c: 86: ANSELD = 0xFF;
 11329  013806  010E               	movlb	14	; () banked
 11330  013808  69A7               	setf	167,b	;volatile
 11331                           
 11332                           ; BSR set to: 14
 11333                           ;pin_manager.c: 87: ANSELB = 0xFF;
 11334  01380A  699A               	setf	154,b	;volatile
 11335                           
 11336                           ; BSR set to: 14
 11337                           ;pin_manager.c: 88: ANSELE = 0xFF;
 11338  01380C  69AF               	setf	175,b	;volatile
 11339                           
 11340                           ;pin_manager.c: 89: ANSELG = 0x3C;
 11341  01380E  0E3C               	movlw	60
 11342  013810  6FBC               	movwf	188,b	;volatile
 11343                           
 11344                           ;pin_manager.c: 90: ANSELF = 0xF0;
 11345  013812  0EF0               	movlw	240
 11346  013814  6FB4               	movwf	180,b	;volatile
 11347                           
 11348                           ; BSR set to: 14
 11349                           ;pin_manager.c: 91: ANSELA = 0xFF;
 11350  013816  6992               	setf	146,b	;volatile
 11351                           
 11352                           ;pin_manager.c: 96: WPUD = 0x00;
 11353  013818  0E00               	movlw	0
 11354  01381A  6FA6               	movwf	166,b	;volatile
 11355                           
 11356                           ;pin_manager.c: 97: WPUF = 0x00;
 11357  01381C  0E00               	movlw	0
 11358  01381E  6FB3               	movwf	179,b	;volatile
 11359                           
 11360                           ;pin_manager.c: 98: WPUE = 0x00;
 11361  013820  0E00               	movlw	0
 11362  013822  6FAE               	movwf	174,b	;volatile
 11363                           
 11364                           ;pin_manager.c: 99: WPUB = 0x00;
 11365  013824  0E00               	movlw	0
 11366  013826  6F99               	movwf	153,b	;volatile
 11367                           
 11368                           ;pin_manager.c: 100: WPUG = 0x00;
 11369  013828  0E00               	movlw	0
 11370  01382A  6FBB               	movwf	187,b	;volatile
 11371                           
 11372                           ;pin_manager.c: 101: WPUA = 0x00;
 11373  01382C  0E00               	movlw	0
 11374  01382E  6F91               	movwf	145,b	;volatile
 11375                           
 11376                           ;pin_manager.c: 102: WPUC = 0x00;
 11377  013830  0E00               	movlw	0
 11378  013832  6FA1               	movwf	161,b	;volatile
 11379                           
 11380                           ;pin_manager.c: 103: WPUH = 0x00;
 11381  013834  0E00               	movlw	0
 11382  013836  6FC0               	movwf	192,b	;volatile
 11383                           
 11384                           ;pin_manager.c: 108: ODCONE = 0x00;
 11385  013838  0E00               	movlw	0
 11386  01383A  6FAD               	movwf	173,b	;volatile
 11387                           
 11388                           ;pin_manager.c: 109: ODCONF = 0x01;
 11389  01383C  0E01               	movlw	1
 11390  01383E  6FB2               	movwf	178,b	;volatile
 11391                           
 11392                           ;pin_manager.c: 110: ODCONA = 0x00;
 11393  013840  0E00               	movlw	0
 11394  013842  6F90               	movwf	144,b	;volatile
 11395                           
 11396                           ;pin_manager.c: 111: ODCONG = 0x00;
 11397  013844  0E00               	movlw	0
 11398  013846  6FBA               	movwf	186,b	;volatile
 11399                           
 11400                           ;pin_manager.c: 112: ODCONB = 0x00;
 11401  013848  0E00               	movlw	0
 11402  01384A  6F98               	movwf	152,b	;volatile
 11403                           
 11404                           ;pin_manager.c: 113: ODCONH = 0x00;
 11405  01384C  0E00               	movlw	0
 11406  01384E  6FBF               	movwf	191,b	;volatile
 11407                           
 11408                           ;pin_manager.c: 114: ODCONC = 0x00;
 11409  013850  0E00               	movlw	0
 11410  013852  6FA0               	movwf	160,b	;volatile
 11411                           
 11412                           ;pin_manager.c: 115: ODCOND = 0x00;
 11413  013854  0E00               	movlw	0
 11414  013856  6FA5               	movwf	165,b	;volatile
 11415                           
 11416                           ; BSR set to: 14
 11417                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 11418  013858  698F               	setf	143,b	;volatile
 11419                           
 11420                           ; BSR set to: 14
 11421                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 11422  01385A  6997               	setf	151,b	;volatile
 11423                           
 11424                           ; BSR set to: 14
 11425                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 11426  01385C  699F               	setf	159,b	;volatile
 11427                           
 11428                           ; BSR set to: 14
 11429                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 11430  01385E  69A4               	setf	164,b	;volatile
 11431                           
 11432                           ; BSR set to: 14
 11433                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 11434  013860  69AC               	setf	172,b	;volatile
 11435                           
 11436                           ; BSR set to: 14
 11437                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 11438  013862  69B1               	setf	177,b	;volatile
 11439                           
 11440                           ; BSR set to: 14
 11441                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 11442  013864  69B9               	setf	185,b	;volatile
 11443                           
 11444                           ; BSR set to: 14
 11445                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 11446  013866  69BE               	setf	190,b	;volatile
 11447                           
 11448                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 11449  013868  0E0E               	movlw	14
 11450  01386A  6F89               	movwf	137,b	;volatile
 11451                           
 11452                           ;pin_manager.c: 137: RX2PPS = 0x36;
 11453  01386C  0E36               	movlw	54
 11454  01386E  6F11               	movwf	17,b	;volatile
 11455                           
 11456                           ; BSR set to: 14
 11457  013870  0012               	return		;funcret
 11458  013872                     __end_of_PIN_MANAGER_Initialize:
 11459                           	opt stack 0
 11460                           tblptru	equ	0xFF8
 11461                           tblptrh	equ	0xFF7
 11462                           tblptrl	equ	0xFF6
 11463                           tablat	equ	0xFF5
 11464                           prodh	equ	0xFF4
 11465                           prodl	equ	0xFF3
 11466                           intcon	equ	0xFF2
 11467                           postinc0	equ	0xFEE
 11468                           wreg	equ	0xFE8
 11469                           indf2	equ	0xFDF
 11470                           postinc2	equ	0xFDE
 11471                           postdec2	equ	0xFDD
 11472                           fsr2h	equ	0xFDA
 11473                           fsr2l	equ	0xFD9
 11474                           status	equ	0xFD8
 11475                           
 11476 ;; *************** function _OSCILLATOR_Initialize *****************
 11477 ;; Defined at:
 11478 ;;		line 63 in file "mcc_generated_files/mcc.c"
 11479 ;; Parameters:    Size  Location     Type
 11480 ;;		None
 11481 ;; Auto vars:     Size  Location     Type
 11482 ;;		None
 11483 ;; Return value:  Size  Location     Type
 11484 ;;                  1    wreg      void 
 11485 ;; Registers used:
 11486 ;;		wreg, status,2
 11487 ;; Tracked objects:
 11488 ;;		On entry : 0/0
 11489 ;;		On exit  : 0/0
 11490 ;;		Unchanged: 0/0
 11491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11496 ;;Total ram usage:        0 bytes
 11497 ;; Hardware stack levels used:    1
 11498 ;; Hardware stack levels required when called:   10
 11499 ;; This function calls:
 11500 ;;		Nothing
 11501 ;; This function is called by:
 11502 ;;		_SYSTEM_Initialize
 11503 ;; This function uses a non-reentrant model
 11504 ;;
 11505                           
 11506                           	psect	text40
 11507  014538                     __ptext40:
 11508                           	opt stack 0
 11509  014538                     _OSCILLATOR_Initialize:
 11510                           	opt stack 19
 11511                           
 11512                           ;mcc.c: 66: OSCCON1 = 0x20;
 11513                           
 11514                           ; BSR set to: 14
 11515                           ;incstack = 0
 11516  014538  0E20               	movlw	32
 11517  01453A  010E               	movlb	14	; () banked
 11518  01453C  6F43               	movwf	67,b	;volatile
 11519                           
 11520                           ;mcc.c: 68: OSCCON3 = 0x00;
 11521  01453E  0E00               	movlw	0
 11522  014540  6F45               	movwf	69,b	;volatile
 11523                           
 11524                           ;mcc.c: 70: OSCEN = 0x00;
 11525  014542  0E00               	movlw	0
 11526  014544  6F47               	movwf	71,b	;volatile
 11527                           
 11528                           ;mcc.c: 72: OSCFRQ = 0x02;
 11529  014546  0E02               	movlw	2
 11530  014548  6F49               	movwf	73,b	;volatile
 11531                           
 11532                           ;mcc.c: 74: OSCTUNE = 0x00;
 11533  01454A  0E00               	movlw	0
 11534  01454C  6F48               	movwf	72,b	;volatile
 11535  01454E                     
 11536                           ; BSR set to: 14
 11537                           
 11538                           ; BSR set to: 14
 11539                           ;mcc.c: 77: {
 11540  01454E  B146               	btfsc	70,0,b	;volatile
 11541  014550  0012               	return	
 11542  014552  D7FD               	goto	l53
 11543  014554                     __end_of_OSCILLATOR_Initialize:
 11544                           	opt stack 0
 11545                           tblptru	equ	0xFF8
 11546                           tblptrh	equ	0xFF7
 11547                           tblptrl	equ	0xFF6
 11548                           tablat	equ	0xFF5
 11549                           prodh	equ	0xFF4
 11550                           prodl	equ	0xFF3
 11551                           intcon	equ	0xFF2
 11552                           postinc0	equ	0xFEE
 11553                           wreg	equ	0xFE8
 11554                           indf2	equ	0xFDF
 11555                           postinc2	equ	0xFDE
 11556                           postdec2	equ	0xFDD
 11557                           fsr2h	equ	0xFDA
 11558                           fsr2l	equ	0xFD9
 11559                           status	equ	0xFD8
 11560                           
 11561 ;; *************** function _INTERRUPT_Initialize *****************
 11562 ;; Defined at:
 11563 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11564 ;; Parameters:    Size  Location     Type
 11565 ;;		None
 11566 ;; Auto vars:     Size  Location     Type
 11567 ;;		None
 11568 ;; Return value:  Size  Location     Type
 11569 ;;                  1    wreg      void 
 11570 ;; Registers used:
 11571 ;;		None
 11572 ;; Tracked objects:
 11573 ;;		On entry : 0/0
 11574 ;;		On exit  : 0/0
 11575 ;;		Unchanged: 0/0
 11576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11581 ;;Total ram usage:        0 bytes
 11582 ;; Hardware stack levels used:    1
 11583 ;; Hardware stack levels required when called:   10
 11584 ;; This function calls:
 11585 ;;		Nothing
 11586 ;; This function is called by:
 11587 ;;		_SYSTEM_Initialize
 11588 ;; This function uses a non-reentrant model
 11589 ;;
 11590                           
 11591                           	psect	text41
 11592  0145AA                     __ptext41:
 11593                           	opt stack 0
 11594  0145AA                     _INTERRUPT_Initialize:
 11595                           	opt stack 19
 11596                           
 11597                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 11598                           
 11599                           ; BSR set to: 14
 11600                           ;incstack = 0
 11601  0145AA  8AF2               	bsf	intcon,5,c	;volatile
 11602                           
 11603                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 11604  0145AC  010E               	movlb	14	; () banked
 11605  0145AE  8F22               	bsf	34,7,b	;volatile
 11606                           
 11607                           ;interrupt_manager.c: 63: IPR1bits.ADIP = 1;
 11608  0145B0  8120               	bsf	32,0,b	;volatile
 11609                           
 11610                           ;interrupt_manager.c: 67: IPR5bits.TMR6IP = 0;
 11611  0145B2  9B24               	bcf	36,5,b	;volatile
 11612                           
 11613                           ;interrupt_manager.c: 70: IPR3bits.TX2IP = 0;
 11614  0145B4  9D22               	bcf	34,6,b	;volatile
 11615                           
 11616                           ;interrupt_manager.c: 73: IPR5bits.TMR7IP = 0;
 11617  0145B6  9D24               	bcf	36,6,b	;volatile
 11618                           
 11619                           ; BSR set to: 14
 11620  0145B8  0012               	return		;funcret
 11621  0145BA                     __end_of_INTERRUPT_Initialize:
 11622                           	opt stack 0
 11623                           tblptru	equ	0xFF8
 11624                           tblptrh	equ	0xFF7
 11625                           tblptrl	equ	0xFF6
 11626                           tablat	equ	0xFF5
 11627                           prodh	equ	0xFF4
 11628                           prodl	equ	0xFF3
 11629                           intcon	equ	0xFF2
 11630                           postinc0	equ	0xFEE
 11631                           wreg	equ	0xFE8
 11632                           indf2	equ	0xFDF
 11633                           postinc2	equ	0xFDE
 11634                           postdec2	equ	0xFDD
 11635                           fsr2h	equ	0xFDA
 11636                           fsr2l	equ	0xFD9
 11637                           status	equ	0xFD8
 11638                           
 11639 ;; *************** function _FVR_Initialize *****************
 11640 ;; Defined at:
 11641 ;;		line 58 in file "mcc_generated_files/fvr.c"
 11642 ;; Parameters:    Size  Location     Type
 11643 ;;		None
 11644 ;; Auto vars:     Size  Location     Type
 11645 ;;		None
 11646 ;; Return value:  Size  Location     Type
 11647 ;;                  1    wreg      void 
 11648 ;; Registers used:
 11649 ;;		wreg, status,2
 11650 ;; Tracked objects:
 11651 ;;		On entry : 0/0
 11652 ;;		On exit  : 0/0
 11653 ;;		Unchanged: 0/0
 11654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11659 ;;Total ram usage:        0 bytes
 11660 ;; Hardware stack levels used:    1
 11661 ;; Hardware stack levels required when called:   10
 11662 ;; This function calls:
 11663 ;;		Nothing
 11664 ;; This function is called by:
 11665 ;;		_SYSTEM_Initialize
 11666 ;; This function uses a non-reentrant model
 11667 ;;
 11668                           
 11669                           	psect	text42
 11670  014632                     __ptext42:
 11671                           	opt stack 0
 11672  014632                     _FVR_Initialize:
 11673                           	opt stack 19
 11674                           
 11675                           ;fvr.c: 61: FVRCON = 0xA6;
 11676                           
 11677                           ; BSR set to: 14
 11678                           ;incstack = 0
 11679  014632  0EA6               	movlw	166
 11680  014634  010E               	movlb	14	; () banked
 11681  014636  6FC4               	movwf	196,b	;volatile
 11682                           
 11683                           ; BSR set to: 14
 11684  014638  0012               	return		;funcret
 11685  01463A                     __end_of_FVR_Initialize:
 11686                           	opt stack 0
 11687                           tblptru	equ	0xFF8
 11688                           tblptrh	equ	0xFF7
 11689                           tblptrl	equ	0xFF6
 11690                           tablat	equ	0xFF5
 11691                           prodh	equ	0xFF4
 11692                           prodl	equ	0xFF3
 11693                           intcon	equ	0xFF2
 11694                           postinc0	equ	0xFEE
 11695                           wreg	equ	0xFE8
 11696                           indf2	equ	0xFDF
 11697                           postinc2	equ	0xFDE
 11698                           postdec2	equ	0xFDD
 11699                           fsr2h	equ	0xFDA
 11700                           fsr2l	equ	0xFD9
 11701                           status	equ	0xFD8
 11702                           
 11703 ;; *************** function _EUSART2_Initialize *****************
 11704 ;; Defined at:
 11705 ;;		line 77 in file "mcc_generated_files/eusart2.c"
 11706 ;; Parameters:    Size  Location     Type
 11707 ;;		None
 11708 ;; Auto vars:     Size  Location     Type
 11709 ;;		None
 11710 ;; Return value:  Size  Location     Type
 11711 ;;                  1    wreg      void 
 11712 ;; Registers used:
 11713 ;;		wreg, status,2, status,0, cstack
 11714 ;; Tracked objects:
 11715 ;;		On entry : 0/0
 11716 ;;		On exit  : 0/0
 11717 ;;		Unchanged: 0/0
 11718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11723 ;;Total ram usage:        0 bytes
 11724 ;; Hardware stack levels used:    1
 11725 ;; Hardware stack levels required when called:   11
 11726 ;; This function calls:
 11727 ;;		_EUSART2_SetRxInterruptHandler
 11728 ;;		_EUSART2_SetTxInterruptHandler
 11729 ;; This function is called by:
 11730 ;;		_SYSTEM_Initialize
 11731 ;; This function uses a non-reentrant model
 11732 ;;
 11733                           
 11734                           	psect	text43
 11735  013F24                     __ptext43:
 11736                           	opt stack 0
 11737  013F24                     _EUSART2_Initialize:
 11738                           	opt stack 18
 11739                           
 11740                           ;eusart2.c: 80: PIE3bits.RC2IE = 0;
 11741                           
 11742                           ; BSR set to: 14
 11743                           ;incstack = 0
 11744  013F24  010E               	movlb	14	; () banked
 11745  013F26  9F2C               	bcf	44,7,b	;volatile
 11746                           
 11747                           ; BSR set to: 14
 11748                           ;eusart2.c: 81: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 11749  013F28  0E72               	movlw	low _EUSART2_Receive_ISR
 11750  013F2A  0100               	movlb	0	; () banked
 11751  013F2C  6FA0               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 11752  013F2E  0E38               	movlw	high _EUSART2_Receive_ISR
 11753  013F30  6FA1               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 11754  013F32  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 11755  013F34  6FA2               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 11756  013F36  ECF9  F0A2         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 11757                           
 11758                           ;eusart2.c: 82: PIE3bits.TX2IE = 0;
 11759  013F3A  010E               	movlb	14	; () banked
 11760  013F3C  9D2C               	bcf	44,6,b	;volatile
 11761                           
 11762                           ;eusart2.c: 83: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 11763  013F3E  0EFA               	movlw	low _EUSART2_Transmit_ISR
 11764  013F40  0100               	movlb	0	; () banked
 11765  013F42  6FA0               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 11766  013F44  0E42               	movlw	high _EUSART2_Transmit_ISR
 11767  013F46  6FA1               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 11768  013F48  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 11769  013F4A  6FA2               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 11770  013F4C  ECF2  F0A2         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 11771                           
 11772                           ;eusart2.c: 87: BAUD2CON = 0x08;
 11773  013F50  0E08               	movlw	8
 11774  013F52  010E               	movlb	14	; () banked
 11775  013F54  6FF7               	movwf	247,b	;volatile
 11776                           
 11777                           ; BSR set to: 14
 11778                           ;eusart2.c: 90: RC2STA = 0x90;
 11779  013F56  0E90               	movlw	144
 11780  013F58  6FF5               	movwf	245,b	;volatile
 11781                           
 11782                           ; BSR set to: 14
 11783                           ;eusart2.c: 93: TX2STA = 0x24;
 11784  013F5A  0E24               	movlw	36
 11785  013F5C  6FF6               	movwf	246,b	;volatile
 11786                           
 11787                           ; BSR set to: 14
 11788                           ;eusart2.c: 96: SP2BRGL = 0x8A;
 11789  013F5E  0E8A               	movlw	138
 11790  013F60  6FF3               	movwf	243,b	;volatile
 11791                           
 11792                           ; BSR set to: 14
 11793                           ;eusart2.c: 99: SP2BRGH = 0x00;
 11794  013F62  0E00               	movlw	0
 11795  013F64  6FF4               	movwf	244,b	;volatile
 11796                           
 11797                           ; BSR set to: 14
 11798                           ;eusart2.c: 103: eusart2TxHead = 0;
 11799  013F66  0E00               	movlw	0
 11800  013F68  0100               	movlb	0	; () banked
 11801  013F6A  6FBB               	movwf	_eusart2TxHead& (0+255),b	;volatile
 11802                           
 11803                           ; BSR set to: 0
 11804                           ;eusart2.c: 104: eusart2TxTail = 0;
 11805  013F6C  0E00               	movlw	0
 11806  013F6E  6FBA               	movwf	_eusart2TxTail& (0+255),b	;volatile
 11807                           
 11808                           ; BSR set to: 0
 11809                           ;eusart2.c: 105: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 11810  013F70  0E40               	movlw	64
 11811  013F72  6FB9               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 11812                           
 11813                           ; BSR set to: 0
 11814                           ;eusart2.c: 107: eusart2RxHead = 0;
 11815  013F74  0E00               	movlw	0
 11816  013F76  6E5A               	movwf	_eusart2RxHead,c	;volatile
 11817                           
 11818                           ; BSR set to: 0
 11819                           ;eusart2.c: 108: eusart2RxTail = 0;
 11820  013F78  0E00               	movlw	0
 11821  013F7A  6FB8               	movwf	_eusart2RxTail& (0+255),b	;volatile
 11822                           
 11823                           ; BSR set to: 0
 11824                           ;eusart2.c: 109: eusart2RxCount = 0;
 11825  013F7C  0E00               	movlw	0
 11826  013F7E  6FB7               	movwf	_eusart2RxCount& (0+255),b	;volatile
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;eusart2.c: 112: PIE3bits.RC2IE = 1;
 11830  013F80  010E               	movlb	14	; () banked
 11831  013F82  8F2C               	bsf	44,7,b	;volatile
 11832                           
 11833                           ; BSR set to: 14
 11834  013F84  0012               	return		;funcret
 11835  013F86                     __end_of_EUSART2_Initialize:
 11836                           	opt stack 0
 11837                           tblptru	equ	0xFF8
 11838                           tblptrh	equ	0xFF7
 11839                           tblptrl	equ	0xFF6
 11840                           tablat	equ	0xFF5
 11841                           prodh	equ	0xFF4
 11842                           prodl	equ	0xFF3
 11843                           intcon	equ	0xFF2
 11844                           postinc0	equ	0xFEE
 11845                           wreg	equ	0xFE8
 11846                           indf2	equ	0xFDF
 11847                           postinc2	equ	0xFDE
 11848                           postdec2	equ	0xFDD
 11849                           fsr2h	equ	0xFDA
 11850                           fsr2l	equ	0xFD9
 11851                           status	equ	0xFD8
 11852                           
 11853 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 11854 ;; Defined at:
 11855 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 11856 ;; Parameters:    Size  Location     Type
 11857 ;;  interruptHan    3   64[BANK0 ] PTR FTN()void 
 11858 ;;		 -> EUSART2_Transmit_ISR(1), 
 11859 ;; Auto vars:     Size  Location     Type
 11860 ;;		None
 11861 ;; Return value:  Size  Location     Type
 11862 ;;                  1    wreg      void 
 11863 ;; Registers used:
 11864 ;;		wreg, status,2, status,0
 11865 ;; Tracked objects:
 11866 ;;		On entry : 0/0
 11867 ;;		On exit  : 0/0
 11868 ;;		Unchanged: 0/0
 11869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11870 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11873 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11874 ;;Total ram usage:        3 bytes
 11875 ;; Hardware stack levels used:    1
 11876 ;; Hardware stack levels required when called:   10
 11877 ;; This function calls:
 11878 ;;		Nothing
 11879 ;; This function is called by:
 11880 ;;		_EUSART2_Initialize
 11881 ;; This function uses a non-reentrant model
 11882 ;;
 11883                           
 11884                           	psect	text44
 11885  0145E4                     __ptext44:
 11886                           	opt stack 0
 11887  0145E4                     _EUSART2_SetTxInterruptHandler:
 11888                           	opt stack 18
 11889                           
 11890                           ;eusart2.c: 265: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 11891                           
 11892                           ; BSR set to: 14
 11893                           ;incstack = 0
 11894  0145E4  C0A0  F0B2         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 11895  0145E8  C0A1  F0B3         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 11896  0145EC  C0A2  F0B4         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 11897  0145F0  0012               	return		;funcret
 11898  0145F2                     __end_of_EUSART2_SetTxInterruptHandler:
 11899                           	opt stack 0
 11900                           tblptru	equ	0xFF8
 11901                           tblptrh	equ	0xFF7
 11902                           tblptrl	equ	0xFF6
 11903                           tablat	equ	0xFF5
 11904                           prodh	equ	0xFF4
 11905                           prodl	equ	0xFF3
 11906                           intcon	equ	0xFF2
 11907                           postinc0	equ	0xFEE
 11908                           wreg	equ	0xFE8
 11909                           indf2	equ	0xFDF
 11910                           postinc2	equ	0xFDE
 11911                           postdec2	equ	0xFDD
 11912                           fsr2h	equ	0xFDA
 11913                           fsr2l	equ	0xFD9
 11914                           status	equ	0xFD8
 11915                           
 11916 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 11917 ;; Defined at:
 11918 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;  interruptHan    3   64[BANK0 ] PTR FTN()void 
 11921 ;;		 -> EUSART2_Receive_ISR(1), 
 11922 ;; Auto vars:     Size  Location     Type
 11923 ;;		None
 11924 ;; Return value:  Size  Location     Type
 11925 ;;                  1    wreg      void 
 11926 ;; Registers used:
 11927 ;;		wreg, status,2, status,0
 11928 ;; Tracked objects:
 11929 ;;		On entry : 0/0
 11930 ;;		On exit  : 0/0
 11931 ;;		Unchanged: 0/0
 11932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11933 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11936 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11937 ;;Total ram usage:        3 bytes
 11938 ;; Hardware stack levels used:    1
 11939 ;; Hardware stack levels required when called:   10
 11940 ;; This function calls:
 11941 ;;		Nothing
 11942 ;; This function is called by:
 11943 ;;		_EUSART2_Initialize
 11944 ;; This function uses a non-reentrant model
 11945 ;;
 11946                           
 11947                           	psect	text45
 11948  0145F2                     __ptext45:
 11949                           	opt stack 0
 11950  0145F2                     _EUSART2_SetRxInterruptHandler:
 11951                           	opt stack 18
 11952                           
 11953                           ;eusart2.c: 269: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 11954                           
 11955                           ;incstack = 0
 11956  0145F2  C0A0  F0AF         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 11957  0145F6  C0A1  F0B0         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 11958  0145FA  C0A2  F0B1         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 11959  0145FE  0012               	return		;funcret
 11960  014600                     __end_of_EUSART2_SetRxInterruptHandler:
 11961                           	opt stack 0
 11962                           tblptru	equ	0xFF8
 11963                           tblptrh	equ	0xFF7
 11964                           tblptrl	equ	0xFF6
 11965                           tablat	equ	0xFF5
 11966                           prodh	equ	0xFF4
 11967                           prodl	equ	0xFF3
 11968                           intcon	equ	0xFF2
 11969                           postinc0	equ	0xFEE
 11970                           wreg	equ	0xFE8
 11971                           indf2	equ	0xFDF
 11972                           postinc2	equ	0xFDE
 11973                           postdec2	equ	0xFDD
 11974                           fsr2h	equ	0xFDA
 11975                           fsr2l	equ	0xFD9
 11976                           status	equ	0xFD8
 11977                           
 11978 ;; *************** function _ADCC_Initialize *****************
 11979 ;; Defined at:
 11980 ;;		line 63 in file "mcc_generated_files/adcc.c"
 11981 ;; Parameters:    Size  Location     Type
 11982 ;;		None
 11983 ;; Auto vars:     Size  Location     Type
 11984 ;;		None
 11985 ;; Return value:  Size  Location     Type
 11986 ;;                  1    wreg      void 
 11987 ;; Registers used:
 11988 ;;		wreg, status,2, status,0, cstack
 11989 ;; Tracked objects:
 11990 ;;		On entry : 0/0
 11991 ;;		On exit  : 0/0
 11992 ;;		Unchanged: 0/0
 11993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11998 ;;Total ram usage:        0 bytes
 11999 ;; Hardware stack levels used:    1
 12000 ;; Hardware stack levels required when called:   11
 12001 ;; This function calls:
 12002 ;;		_ADCC_SetADIInterruptHandler
 12003 ;; This function is called by:
 12004 ;;		_SYSTEM_Initialize
 12005 ;; This function uses a non-reentrant model
 12006 ;;
 12007                           
 12008                           	psect	text46
 12009  013EC0                     __ptext46:
 12010                           	opt stack 0
 12011  013EC0                     _ADCC_Initialize:
 12012                           	opt stack 18
 12013                           
 12014                           ;adcc.c: 67: ADLTHL = 0x00;
 12015                           
 12016                           ;incstack = 0
 12017  013EC0  0E00               	movlw	0
 12018  013EC2  6E6A               	movwf	3946,c	;volatile
 12019                           
 12020                           ;adcc.c: 69: ADLTHH = 0x00;
 12021  013EC4  0E00               	movlw	0
 12022  013EC6  6E6B               	movwf	3947,c	;volatile
 12023                           
 12024                           ;adcc.c: 71: ADUTHL = 0x00;
 12025  013EC8  0E00               	movlw	0
 12026  013ECA  6E6C               	movwf	3948,c	;volatile
 12027                           
 12028                           ;adcc.c: 73: ADUTHH = 0x00;
 12029  013ECC  0E00               	movlw	0
 12030  013ECE  6E6D               	movwf	3949,c	;volatile
 12031                           
 12032                           ;adcc.c: 75: ADSTPTL = 0x00;
 12033  013ED0  0E00               	movlw	0
 12034  013ED2  6E68               	movwf	3944,c	;volatile
 12035                           
 12036                           ;adcc.c: 77: ADSTPTH = 0x00;
 12037  013ED4  0E00               	movlw	0
 12038  013ED6  6E69               	movwf	3945,c	;volatile
 12039                           
 12040                           ;adcc.c: 79: ADRPT = 0x00;
 12041  013ED8  0E00               	movlw	0
 12042  013EDA  6E66               	movwf	3942,c	;volatile
 12043                           
 12044                           ;adcc.c: 81: ADPCH = 0x00;
 12045  013EDC  0E00               	movlw	0
 12046  013EDE  010F               	movlb	15	; () banked
 12047  013EE0  6F5F               	movwf	95,b	;volatile
 12048                           
 12049                           ;adcc.c: 83: ADCAP = 0x00;
 12050  013EE2  0E00               	movlw	0
 12051  013EE4  6F5D               	movwf	93,b	;volatile
 12052                           
 12053                           ;adcc.c: 85: ADCON1 = 0x00;
 12054  013EE6  0E00               	movlw	0
 12055  013EE8  6F59               	movwf	89,b	;volatile
 12056                           
 12057                           ;adcc.c: 87: ADCON2 = 0x04;
 12058  013EEA  0E04               	movlw	4
 12059  013EEC  6F5A               	movwf	90,b	;volatile
 12060                           
 12061                           ;adcc.c: 89: ADCON3 = 0x00;
 12062  013EEE  0E00               	movlw	0
 12063  013EF0  6F5B               	movwf	91,b	;volatile
 12064                           
 12065                           ;adcc.c: 91: ADSTAT = 0x00;
 12066  013EF2  0E00               	movlw	0
 12067  013EF4  6E65               	movwf	3941,c	;volatile
 12068                           
 12069                           ;adcc.c: 93: ADREF = 0x12;
 12070  013EF6  0E12               	movlw	18
 12071  013EF8  6F58               	movwf	88,b	;volatile
 12072                           
 12073                           ;adcc.c: 95: ADACT = 0x00;
 12074  013EFA  0E00               	movlw	0
 12075  013EFC  6F56               	movwf	86,b	;volatile
 12076                           
 12077                           ;adcc.c: 97: ADCLK = 0x00;
 12078  013EFE  0E00               	movlw	0
 12079  013F00  6F57               	movwf	87,b	;volatile
 12080                           
 12081                           ;adcc.c: 99: ADCON0 = 0x94;
 12082  013F02  0E94               	movlw	148
 12083  013F04  6E60               	movwf	3936,c	;volatile
 12084                           
 12085                           ;adcc.c: 101: ADACQ = 0x00;
 12086  013F06  0E00               	movlw	0
 12087  013F08  6F5C               	movwf	92,b	;volatile
 12088                           
 12089                           ; BSR set to: 15
 12090                           ;adcc.c: 104: PIR1bits.ADIF = 0;
 12091  013F0A  010E               	movlb	14	; () banked
 12092  013F0C  9134               	bcf	52,0,b	;volatile
 12093                           
 12094                           ; BSR set to: 14
 12095                           ;adcc.c: 106: PIE1bits.ADIE = 1;
 12096  013F0E  812A               	bsf	42,0,b	;volatile
 12097                           
 12098                           ; BSR set to: 14
 12099                           ;adcc.c: 108: ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptHandler);
 12100  013F10  0E42               	movlw	low _ADCC_DefaultInterruptHandler
 12101  013F12  0100               	movlb	0	; () banked
 12102  013F14  6FA0               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 12103  013F16  0E46               	movlw	high _ADCC_DefaultInterruptHandler
 12104  013F18  6FA1               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 12105  013F1A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 12106  013F1C  6FA2               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 12107  013F1E  EC00  F0A3         	call	_ADCC_SetADIInterruptHandler	;wreg free
 12108  013F22  0012               	return		;funcret
 12109  013F24                     __end_of_ADCC_Initialize:
 12110                           	opt stack 0
 12111                           tblptru	equ	0xFF8
 12112                           tblptrh	equ	0xFF7
 12113                           tblptrl	equ	0xFF6
 12114                           tablat	equ	0xFF5
 12115                           prodh	equ	0xFF4
 12116                           prodl	equ	0xFF3
 12117                           intcon	equ	0xFF2
 12118                           postinc0	equ	0xFEE
 12119                           wreg	equ	0xFE8
 12120                           indf2	equ	0xFDF
 12121                           postinc2	equ	0xFDE
 12122                           postdec2	equ	0xFDD
 12123                           fsr2h	equ	0xFDA
 12124                           fsr2l	equ	0xFD9
 12125                           status	equ	0xFD8
 12126                           
 12127 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 12128 ;; Defined at:
 12129 ;;		line 306 in file "mcc_generated_files/adcc.c"
 12130 ;; Parameters:    Size  Location     Type
 12131 ;;  InterruptHan    3   64[BANK0 ] PTR FTN()void 
 12132 ;;		 -> ADC_postProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 12133 ;; Auto vars:     Size  Location     Type
 12134 ;;		None
 12135 ;; Return value:  Size  Location     Type
 12136 ;;                  1    wreg      void 
 12137 ;; Registers used:
 12138 ;;		wreg, status,2, status,0
 12139 ;; Tracked objects:
 12140 ;;		On entry : 0/0
 12141 ;;		On exit  : 0/0
 12142 ;;		Unchanged: 0/0
 12143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12144 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12147 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12148 ;;Total ram usage:        3 bytes
 12149 ;; Hardware stack levels used:    1
 12150 ;; Hardware stack levels required when called:   10
 12151 ;; This function calls:
 12152 ;;		Nothing
 12153 ;; This function is called by:
 12154 ;;		_ADCC_Initialize
 12155 ;;		_main
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text47
 12160  014600                     __ptext47:
 12161                           	opt stack 0
 12162  014600                     _ADCC_SetADIInterruptHandler:
 12163                           	opt stack 18
 12164                           
 12165                           ;adcc.c: 307: ADCC_ADI_InterruptHandler = InterruptHandler;
 12166                           
 12167                           ;incstack = 0
 12168  014600  C0A0  F054         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 12169  014604  C0A1  F055         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 12170  014608  C0A2  F056         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 12171  01460C  0012               	return		;funcret
 12172  01460E                     __end_of_ADCC_SetADIInterruptHandler:
 12173                           	opt stack 0
 12174                           tblptru	equ	0xFF8
 12175                           tblptrh	equ	0xFF7
 12176                           tblptrl	equ	0xFF6
 12177                           tablat	equ	0xFF5
 12178                           prodh	equ	0xFF4
 12179                           prodl	equ	0xFF3
 12180                           intcon	equ	0xFF2
 12181                           postinc0	equ	0xFEE
 12182                           wreg	equ	0xFE8
 12183                           indf2	equ	0xFDF
 12184                           postinc2	equ	0xFDE
 12185                           postdec2	equ	0xFDD
 12186                           fsr2h	equ	0xFDA
 12187                           fsr2l	equ	0xFD9
 12188                           status	equ	0xFD8
 12189                           
 12190 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 12191 ;; Defined at:
 12192 ;;		line 94 in file "mcc_generated_files/interrupt_manager.c"
 12193 ;; Parameters:    Size  Location     Type
 12194 ;;		None
 12195 ;; Auto vars:     Size  Location     Type
 12196 ;;		None
 12197 ;; Return value:  Size  Location     Type
 12198 ;;                  1    wreg      void 
 12199 ;; Registers used:
 12200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12201 ;; Tracked objects:
 12202 ;;		On entry : 0/0
 12203 ;;		On exit  : 0/0
 12204 ;;		Unchanged: 0/0
 12205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12208 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12209 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12210 ;;Total ram usage:       21 bytes
 12211 ;; Hardware stack levels used:    1
 12212 ;; Hardware stack levels required when called:    9
 12213 ;; This function calls:
 12214 ;;		Absolute function
 12215 ;;		_EUSART2_Transmit_ISR
 12216 ;;		_TMR6_ISR
 12217 ;;		_TMR7_ISR
 12218 ;; This function is called by:
 12219 ;;		Interrupt level 1
 12220 ;; This function uses a non-reentrant model
 12221 ;;
 12222                           
 12223                           	psect	intcodelo
 12224  000018                     __pintcodelo:
 12225                           	opt stack 0
 12226  000018                     _INTERRUPT_InterruptManagerLow:
 12227                           	opt stack 13
 12228                           
 12229                           ;incstack = 0
 12230  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 12231  00001A  CFD8 F08B          	movff	status,??_INTERRUPT_InterruptManagerLow
 12232  00001E  CFE8 F08C          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 12233  000022  CFE0 F08D          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 12234  000026  CFFA F08E          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 12235  00002A  CFFB F08F          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 12236  00002E  CFE9 F090          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 12237  000032  CFEA F091          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 12238  000036  CFE1 F092          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 12239  00003A  CFE2 F093          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 12240  00003E  CFD9 F094          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 12241  000042  CFDA F095          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 12242  000046  CFF3 F096          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 12243  00004A  CFF4 F097          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 12244  00004E  CFF6 F098          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 12245  000052  CFF7 F099          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 12246  000056  CFF8 F09A          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 12247  00005A  CFF5 F09B          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 12248  00005E  C05F  F09C         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 12249  000062  C060  F09D         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 12250  000066  C061  F09E         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 12251  00006A  C062  F09F         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 12252                           
 12253                           ;interrupt_manager.c: 97: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 12254  00006E  010E               	movlb	14	; () banked
 12255  000070  BB2E               	btfsc	46,5,b	;volatile
 12256                           
 12257                           ; BSR set to: 14
 12258  000072  AB38               	btfss	56,5,b	;volatile
 12259  000074  D003               	goto	i1l207
 12260                           
 12261                           ; BSR set to: 14
 12262                           ;interrupt_manager.c: 98: {
 12263                           ;interrupt_manager.c: 99: TMR6_ISR();
 12264  000076  ECF7  F0A1         	call	_TMR6_ISR	;wreg free
 12265                           
 12266                           ;interrupt_manager.c: 100: }
 12267  00007A  D015               	goto	i1l211
 12268  00007C                     i1l207:
 12269                           
 12270                           ; BSR set to: 14
 12271                           ;interrupt_manager.c: 101: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 12272  00007C  BD2C               	btfsc	44,6,b	;volatile
 12273                           
 12274                           ; BSR set to: 14
 12275  00007E  AD36               	btfss	54,6,b	;volatile
 12276  000080  D00D               	goto	i1l209
 12277                           
 12278                           ; BSR set to: 14
 12279                           ;interrupt_manager.c: 102: {
 12280                           ;interrupt_manager.c: 103: EUSART2_TxDefaultInterruptHandler();
 12281  000082  D801               	call	i1u861_28
 12282  000084  D010               	goto	i1l211
 12283  000086                     i1u861_28:
 12284  000086  0005               	push	
 12285  000088  6EFA               	movwf	pclath,c
 12286  00008A  0100               	movlb	0	; () banked
 12287  00008C  51B2               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 12288  00008E  6EFD               	movwf	tosl,c
 12289  000090  51B3               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 12290  000092  6EFE               	movwf	tosh,c
 12291  000094  51B4               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 12292  000096  6EFF               	movwf	tosu,c
 12293  000098  50FA               	movf	pclath,w,c
 12294  00009A  0012               	return		;indir
 12295  00009C                     i1l209:
 12296                           
 12297                           ; BSR set to: 14
 12298                           ;interrupt_manager.c: 105: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 12299  00009C  BD2E               	btfsc	46,6,b	;volatile
 12300                           
 12301                           ; BSR set to: 14
 12302  00009E  AD38               	btfss	56,6,b	;volatile
 12303  0000A0  D002               	goto	i1l211
 12304                           
 12305                           ; BSR set to: 14
 12306                           ;interrupt_manager.c: 106: {
 12307                           ;interrupt_manager.c: 107: TMR7_ISR();
 12308  0000A2  EC98  F0A1         	call	_TMR7_ISR	;wreg free
 12309  0000A6                     i1l211:
 12310                           
 12311                           ;interrupt_manager.c: 109: else
 12312                           ;interrupt_manager.c: 110: {
 12313  0000A6  C09F  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 12314  0000AA  C09E  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 12315  0000AE  C09D  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 12316  0000B2  C09C  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 12317  0000B6  C09B  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 12318  0000BA  C09A  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 12319  0000BE  C099  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 12320  0000C2  C098  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 12321  0000C6  C097  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 12322  0000CA  C096  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 12323  0000CE  C095  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 12324  0000D2  C094  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 12325  0000D6  C093  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 12326  0000DA  C092  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 12327  0000DE  C091  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 12328  0000E2  C090  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 12329  0000E6  C08F  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 12330  0000EA  C08E  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 12331  0000EE  C08D  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 12332  0000F2  C08C  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 12333  0000F6  C08B  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 12334  0000FA  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 12335  0000FC  0010               	retfie	
 12336  0000FE                     __end_of_INTERRUPT_InterruptManagerLow:
 12337                           	opt stack 0
 12338                           tosu	equ	0xFFF
 12339                           tosh	equ	0xFFE
 12340                           tosl	equ	0xFFD
 12341                           pclatu	equ	0xFFB
 12342                           pclath	equ	0xFFA
 12343                           tblptru	equ	0xFF8
 12344                           tblptrh	equ	0xFF7
 12345                           tblptrl	equ	0xFF6
 12346                           tablat	equ	0xFF5
 12347                           prodh	equ	0xFF4
 12348                           prodl	equ	0xFF3
 12349                           intcon	equ	0xFF2
 12350                           postinc0	equ	0xFEE
 12351                           fsr0h	equ	0xFEA
 12352                           fsr0l	equ	0xFE9
 12353                           wreg	equ	0xFE8
 12354                           fsr1h	equ	0xFE2
 12355                           fsr1l	equ	0xFE1
 12356                           bsr	equ	0xFE0
 12357                           indf2	equ	0xFDF
 12358                           postinc2	equ	0xFDE
 12359                           postdec2	equ	0xFDD
 12360                           fsr2h	equ	0xFDA
 12361                           fsr2l	equ	0xFD9
 12362                           status	equ	0xFD8
 12363                           
 12364 ;; *************** function _TMR7_ISR *****************
 12365 ;; Defined at:
 12366 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 12367 ;; Parameters:    Size  Location     Type
 12368 ;;		None
 12369 ;; Auto vars:     Size  Location     Type
 12370 ;;		None
 12371 ;; Return value:  Size  Location     Type
 12372 ;;                  1    wreg      void 
 12373 ;; Registers used:
 12374 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12375 ;; Tracked objects:
 12376 ;;		On entry : 0/0
 12377 ;;		On exit  : 0/0
 12378 ;;		Unchanged: 0/0
 12379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12384 ;;Total ram usage:        0 bytes
 12385 ;; Hardware stack levels used:    1
 12386 ;; Hardware stack levels required when called:    8
 12387 ;; This function calls:
 12388 ;;		Absolute function
 12389 ;;		_TMR7_DefaultInterruptHandler
 12390 ;;		_TMR7_WriteTimer
 12391 ;;		_acquisitionTimerCallback
 12392 ;; This function is called by:
 12393 ;;		_INTERRUPT_InterruptManagerLow
 12394 ;; This function uses a non-reentrant model
 12395 ;;
 12396                           
 12397                           	psect	text49
 12398  014330                     __ptext49:
 12399                           	opt stack 0
 12400  014330                     _TMR7_ISR:
 12401                           	opt stack 13
 12402                           
 12403                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 12404                           
 12405                           ;incstack = 0
 12406  014330  010E               	movlb	14	; () banked
 12407  014332  9D38               	bcf	56,6,b	;volatile
 12408                           
 12409                           ; BSR set to: 14
 12410                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 12411  014334  C0B5  F089         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 12412  014338  C0B6  F08A         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 12413  01433C  EC31  F0A2         	call	_TMR7_WriteTimer	;wreg free
 12414                           
 12415                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 12416  014340  0100               	movlb	0	; () banked
 12417  014342  51A9               	movf	_TMR7_InterruptHandler& (0+255),w,b
 12418  014344  11AA               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 12419  014346  11AB               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 12420  014348  B4D8               	btfsc	status,2,c
 12421  01434A  0012               	return	
 12422                           
 12423                           ; BSR set to: 0
 12424                           ;tmr7.c: 172: {
 12425                           ;tmr7.c: 173: TMR7_InterruptHandler();
 12426  01434C  D801               	call	i1u851_28
 12427  01434E  0012               	return	
 12428  014350                     i1u851_28:
 12429  014350  0005               	push	
 12430  014352  6EFA               	movwf	pclath,c
 12431  014354  51A9               	movf	_TMR7_InterruptHandler& (0+255),w,b
 12432  014356  6EFD               	movwf	tosl,c
 12433  014358  51AA               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 12434  01435A  6EFE               	movwf	tosh,c
 12435  01435C  51AB               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 12436  01435E  6EFF               	movwf	tosu,c
 12437  014360  50FA               	movf	pclath,w,c
 12438  014362  0012               	return		;indir
 12439  014364                     __end_of_TMR7_ISR:
 12440                           	opt stack 0
 12441                           tosu	equ	0xFFF
 12442                           tosh	equ	0xFFE
 12443                           tosl	equ	0xFFD
 12444                           pclatu	equ	0xFFB
 12445                           pclath	equ	0xFFA
 12446                           tblptru	equ	0xFF8
 12447                           tblptrh	equ	0xFF7
 12448                           tblptrl	equ	0xFF6
 12449                           tablat	equ	0xFF5
 12450                           prodh	equ	0xFF4
 12451                           prodl	equ	0xFF3
 12452                           intcon	equ	0xFF2
 12453                           postinc0	equ	0xFEE
 12454                           fsr0h	equ	0xFEA
 12455                           fsr0l	equ	0xFE9
 12456                           wreg	equ	0xFE8
 12457                           fsr1h	equ	0xFE2
 12458                           fsr1l	equ	0xFE1
 12459                           bsr	equ	0xFE0
 12460                           indf2	equ	0xFDF
 12461                           postinc2	equ	0xFDE
 12462                           postdec2	equ	0xFDD
 12463                           fsr2h	equ	0xFDA
 12464                           fsr2l	equ	0xFD9
 12465                           status	equ	0xFD8
 12466                           
 12467 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 12468 ;; Defined at:
 12469 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 12470 ;; Parameters:    Size  Location     Type
 12471 ;;		None
 12472 ;; Auto vars:     Size  Location     Type
 12473 ;;		None
 12474 ;; Return value:  Size  Location     Type
 12475 ;;                  1    wreg      void 
 12476 ;; Registers used:
 12477 ;;		None
 12478 ;; Tracked objects:
 12479 ;;		On entry : 0/0
 12480 ;;		On exit  : 0/0
 12481 ;;		Unchanged: 0/0
 12482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12487 ;;Total ram usage:        0 bytes
 12488 ;; Hardware stack levels used:    1
 12489 ;; Hardware stack levels required when called:    6
 12490 ;; This function calls:
 12491 ;;		Nothing
 12492 ;; This function is called by:
 12493 ;;		_TMR7_Initialize
 12494 ;;		_TMR7_ISR
 12495 ;; This function uses a non-reentrant model
 12496 ;;
 12497                           
 12498                           	psect	text50
 12499  01463E                     __ptext50:
 12500                           	opt stack 0
 12501  01463E                     _TMR7_DefaultInterruptHandler:
 12502                           	opt stack 14
 12503                           
 12504                           ;incstack = 0
 12505  01463E  0012               	return		;funcret
 12506  014640                     __end_of_TMR7_DefaultInterruptHandler:
 12507                           	opt stack 0
 12508                           tosu	equ	0xFFF
 12509                           tosh	equ	0xFFE
 12510                           tosl	equ	0xFFD
 12511                           pclatu	equ	0xFFB
 12512                           pclath	equ	0xFFA
 12513                           tblptru	equ	0xFF8
 12514                           tblptrh	equ	0xFF7
 12515                           tblptrl	equ	0xFF6
 12516                           tablat	equ	0xFF5
 12517                           prodh	equ	0xFF4
 12518                           prodl	equ	0xFF3
 12519                           intcon	equ	0xFF2
 12520                           postinc0	equ	0xFEE
 12521                           fsr0h	equ	0xFEA
 12522                           fsr0l	equ	0xFE9
 12523                           wreg	equ	0xFE8
 12524                           fsr1h	equ	0xFE2
 12525                           fsr1l	equ	0xFE1
 12526                           bsr	equ	0xFE0
 12527                           indf2	equ	0xFDF
 12528                           postinc2	equ	0xFDE
 12529                           postdec2	equ	0xFDD
 12530                           fsr2h	equ	0xFDA
 12531                           fsr2l	equ	0xFD9
 12532                           status	equ	0xFD8
 12533                           
 12534 ;; *************** function _acquisitionTimerCallback *****************
 12535 ;; Defined at:
 12536 ;;		line 124 in file "main.c"
 12537 ;; Parameters:    Size  Location     Type
 12538 ;;		None
 12539 ;; Auto vars:     Size  Location     Type
 12540 ;;		None
 12541 ;; Return value:  Size  Location     Type
 12542 ;;                  1    wreg      void 
 12543 ;; Registers used:
 12544 ;;		wreg, status,2, cstack
 12545 ;; Tracked objects:
 12546 ;;		On entry : 0/0
 12547 ;;		On exit  : 0/0
 12548 ;;		Unchanged: 0/0
 12549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12554 ;;Total ram usage:        0 bytes
 12555 ;; Hardware stack levels used:    1
 12556 ;; Hardware stack levels required when called:    7
 12557 ;; This function calls:
 12558 ;;		_ADCC_IsConversionDone
 12559 ;;		_ADCC_StartConversion
 12560 ;; This function is called by:
 12561 ;;		_main
 12562 ;;		_TMR7_ISR
 12563 ;; This function uses a non-reentrant model
 12564 ;;
 12565                           
 12566                           	psect	text51
 12567  01423A                     __ptext51:
 12568                           	opt stack 0
 12569  01423A                     _acquisitionTimerCallback:
 12570                           	opt stack 13
 12571                           
 12572                           ;main.c: 127: ADCC_StartConversion(channel_FVR_buf1);
 12573                           
 12574                           ;incstack = 0
 12575  01423A  0E3F               	movlw	63
 12576  01423C  EC07  F0A3         	call	_ADCC_StartConversion
 12577  014240  EC0E  F0A3         	call	_ADCC_IsConversionDone	;wreg free
 12578  014244  0900               	iorlw	0
 12579  014246  B4D8               	btfsc	status,2,c
 12580  014248  D7FB               	goto	i1l710
 12581                           
 12582                           ;main.c: 133: ADCC_StartConversion(POS3P3_ADC);
 12583  01424A  0E22               	movlw	34
 12584  01424C  EC07  F0A3         	call	_ADCC_StartConversion
 12585  014250  EC0E  F0A3         	call	_ADCC_IsConversionDone	;wreg free
 12586  014254  0900               	iorlw	0
 12587  014256  B4D8               	btfsc	status,2,c
 12588  014258  D7FB               	goto	i1l713
 12589                           
 12590                           ;main.c: 139: ADCC_StartConversion(POS12_ADC);
 12591  01425A  0E04               	movlw	4
 12592  01425C  EC07  F0A3         	call	_ADCC_StartConversion
 12593  014260  EC0E  F0A3         	call	_ADCC_IsConversionDone	;wreg free
 12594  014264  0900               	iorlw	0
 12595  014266  B4D8               	btfsc	status,2,c
 12596  014268  D7FB               	goto	i1l716
 12597                           
 12598                           ;main.c: 145: ADCC_StartConversion(channel_Temp);
 12599  01426A  0E3D               	movlw	61
 12600  01426C  EC07  F0A3         	call	_ADCC_StartConversion
 12601  014270  EC0E  F0A3         	call	_ADCC_IsConversionDone	;wreg free
 12602  014274  0900               	iorlw	0
 12603  014276  A4D8               	btfss	status,2,c
 12604  014278  0012               	return	
 12605  01427A  D7FA               	goto	i1l719
 12606  01427C                     __end_of_acquisitionTimerCallback:
 12607                           	opt stack 0
 12608                           tosu	equ	0xFFF
 12609                           tosh	equ	0xFFE
 12610                           tosl	equ	0xFFD
 12611                           pclatu	equ	0xFFB
 12612                           pclath	equ	0xFFA
 12613                           tblptru	equ	0xFF8
 12614                           tblptrh	equ	0xFF7
 12615                           tblptrl	equ	0xFF6
 12616                           tablat	equ	0xFF5
 12617                           prodh	equ	0xFF4
 12618                           prodl	equ	0xFF3
 12619                           intcon	equ	0xFF2
 12620                           postinc0	equ	0xFEE
 12621                           fsr0h	equ	0xFEA
 12622                           fsr0l	equ	0xFE9
 12623                           wreg	equ	0xFE8
 12624                           fsr1h	equ	0xFE2
 12625                           fsr1l	equ	0xFE1
 12626                           bsr	equ	0xFE0
 12627                           indf2	equ	0xFDF
 12628                           postinc2	equ	0xFDE
 12629                           postdec2	equ	0xFDD
 12630                           fsr2h	equ	0xFDA
 12631                           fsr2l	equ	0xFD9
 12632                           status	equ	0xFD8
 12633                           
 12634 ;; *************** function _ADCC_StartConversion *****************
 12635 ;; Defined at:
 12636 ;;		line 112 in file "mcc_generated_files/adcc.c"
 12637 ;; Parameters:    Size  Location     Type
 12638 ;;  channel         1    wreg     enum E17310
 12639 ;; Auto vars:     Size  Location     Type
 12640 ;;  channel         1   41[BANK0 ] enum E17310
 12641 ;; Return value:  Size  Location     Type
 12642 ;;                  1    wreg      void 
 12643 ;; Registers used:
 12644 ;;		wreg
 12645 ;; Tracked objects:
 12646 ;;		On entry : 0/0
 12647 ;;		On exit  : 0/0
 12648 ;;		Unchanged: 0/0
 12649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12651 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12653 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12654 ;;Total ram usage:        1 bytes
 12655 ;; Hardware stack levels used:    1
 12656 ;; Hardware stack levels required when called:    6
 12657 ;; This function calls:
 12658 ;;		Nothing
 12659 ;; This function is called by:
 12660 ;;		_acquisitionTimerCallback
 12661 ;; This function uses a non-reentrant model
 12662 ;;
 12663                           
 12664                           	psect	text52
 12665  01460E                     __ptext52:
 12666                           	opt stack 0
 12667  01460E                     _ADCC_StartConversion:
 12668                           	opt stack 13
 12669                           
 12670                           ;incstack = 0
 12671                           ;ADCC_StartConversion@channel stored from wreg
 12672  01460E  0100               	movlb	0	; () banked
 12673  014610  6F89               	movwf	ADCC_StartConversion@channel& (0+255),b
 12674                           
 12675                           ;adcc.c: 115: ADPCH = channel;
 12676  014612  C089  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 12677                           
 12678                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 12679  014616  8E60               	bsf	3936,7,c	;volatile
 12680                           
 12681                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 12682  014618  8060               	bsf	3936,0,c	;volatile
 12683  01461A  0012               	return		;funcret
 12684  01461C                     __end_of_ADCC_StartConversion:
 12685                           	opt stack 0
 12686                           tosu	equ	0xFFF
 12687                           tosh	equ	0xFFE
 12688                           tosl	equ	0xFFD
 12689                           pclatu	equ	0xFFB
 12690                           pclath	equ	0xFFA
 12691                           tblptru	equ	0xFF8
 12692                           tblptrh	equ	0xFF7
 12693                           tblptrl	equ	0xFF6
 12694                           tablat	equ	0xFF5
 12695                           prodh	equ	0xFF4
 12696                           prodl	equ	0xFF3
 12697                           intcon	equ	0xFF2
 12698                           postinc0	equ	0xFEE
 12699                           fsr0h	equ	0xFEA
 12700                           fsr0l	equ	0xFE9
 12701                           wreg	equ	0xFE8
 12702                           fsr1h	equ	0xFE2
 12703                           fsr1l	equ	0xFE1
 12704                           bsr	equ	0xFE0
 12705                           indf2	equ	0xFDF
 12706                           postinc2	equ	0xFDE
 12707                           postdec2	equ	0xFDD
 12708                           fsr2h	equ	0xFDA
 12709                           fsr2l	equ	0xFD9
 12710                           status	equ	0xFD8
 12711                           
 12712 ;; *************** function _ADCC_IsConversionDone *****************
 12713 ;; Defined at:
 12714 ;;		line 124 in file "mcc_generated_files/adcc.c"
 12715 ;; Parameters:    Size  Location     Type
 12716 ;;		None
 12717 ;; Auto vars:     Size  Location     Type
 12718 ;;		None
 12719 ;; Return value:  Size  Location     Type
 12720 ;;                  1    wreg      unsigned char 
 12721 ;; Registers used:
 12722 ;;		wreg
 12723 ;; Tracked objects:
 12724 ;;		On entry : 0/0
 12725 ;;		On exit  : 0/0
 12726 ;;		Unchanged: 0/0
 12727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12732 ;;Total ram usage:        0 bytes
 12733 ;; Hardware stack levels used:    1
 12734 ;; Hardware stack levels required when called:    6
 12735 ;; This function calls:
 12736 ;;		Nothing
 12737 ;; This function is called by:
 12738 ;;		_acquisitionTimerCallback
 12739 ;; This function uses a non-reentrant model
 12740 ;;
 12741                           
 12742                           	psect	text53
 12743  01461C                     __ptext53:
 12744                           	opt stack 0
 12745  01461C                     _ADCC_IsConversionDone:
 12746                           	opt stack 13
 12747                           
 12748                           ;adcc.c: 127: return ((unsigned char)(!ADCON0bits.ADGO));
 12749                           
 12750                           ;incstack = 0
 12751  01461C  B060               	btfsc	3936,0,c	;volatile
 12752  01461E  D002               	goto	i1u502_20
 12753  014620  0E01               	movlw	1
 12754  014622  0012               	return	
 12755  014624                     i1u502_20:
 12756  014624  0E00               	movlw	0
 12757  014626  0012               	return	
 12758  014628                     __end_of_ADCC_IsConversionDone:
 12759                           	opt stack 0
 12760                           tosu	equ	0xFFF
 12761                           tosh	equ	0xFFE
 12762                           tosl	equ	0xFFD
 12763                           pclatu	equ	0xFFB
 12764                           pclath	equ	0xFFA
 12765                           tblptru	equ	0xFF8
 12766                           tblptrh	equ	0xFF7
 12767                           tblptrl	equ	0xFF6
 12768                           tablat	equ	0xFF5
 12769                           prodh	equ	0xFF4
 12770                           prodl	equ	0xFF3
 12771                           intcon	equ	0xFF2
 12772                           postinc0	equ	0xFEE
 12773                           fsr0h	equ	0xFEA
 12774                           fsr0l	equ	0xFE9
 12775                           wreg	equ	0xFE8
 12776                           fsr1h	equ	0xFE2
 12777                           fsr1l	equ	0xFE1
 12778                           bsr	equ	0xFE0
 12779                           indf2	equ	0xFDF
 12780                           postinc2	equ	0xFDE
 12781                           postdec2	equ	0xFDD
 12782                           fsr2h	equ	0xFDA
 12783                           fsr2l	equ	0xFD9
 12784                           status	equ	0xFD8
 12785                           
 12786 ;; *************** function _TMR7_WriteTimer *****************
 12787 ;; Defined at:
 12788 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 12789 ;; Parameters:    Size  Location     Type
 12790 ;;  timerVal        2   41[BANK0 ] unsigned int 
 12791 ;; Auto vars:     Size  Location     Type
 12792 ;;		None
 12793 ;; Return value:  Size  Location     Type
 12794 ;;                  1    wreg      void 
 12795 ;; Registers used:
 12796 ;;		wreg, status,2
 12797 ;; Tracked objects:
 12798 ;;		On entry : 0/0
 12799 ;;		On exit  : 0/0
 12800 ;;		Unchanged: 0/0
 12801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12802 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12805 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12806 ;;Total ram usage:        2 bytes
 12807 ;; Hardware stack levels used:    1
 12808 ;; Hardware stack levels required when called:    6
 12809 ;; This function calls:
 12810 ;;		Nothing
 12811 ;; This function is called by:
 12812 ;;		_TMR7_ISR
 12813 ;;		_TMR7_Reload
 12814 ;; This function uses a non-reentrant model
 12815 ;;
 12816                           
 12817                           	psect	text54
 12818  014462                     __ptext54:
 12819                           	opt stack 0
 12820  014462                     _TMR7_WriteTimer:
 12821                           	opt stack 14
 12822                           
 12823                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 12824                           
 12825                           ;incstack = 0
 12826  014462  010F               	movlb	15	; () banked
 12827  014464  A530               	btfss	48,2,b	;volatile
 12828  014466  D009               	goto	i1l620
 12829                           
 12830                           ; BSR set to: 15
 12831                           ;tmr7.c: 130: {
 12832                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 12833  014468  9130               	bcf	48,0,b	;volatile
 12834                           
 12835                           ; BSR set to: 15
 12836                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 12837  01446A  0100               	movlb	0	; () banked
 12838  01446C  518A               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 12839  01446E  010F               	movlb	15	; () banked
 12840  014470  6F2F               	movwf	47,b	;volatile
 12841                           
 12842                           ; BSR set to: 15
 12843                           ;tmr7.c: 136: TMR7L = timerVal;
 12844  014472  C089  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 12845                           
 12846                           ; BSR set to: 15
 12847                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 12848  014476  8130               	bsf	48,0,b	;volatile
 12849                           
 12850                           ;tmr7.c: 140: }
 12851  014478  0012               	return	
 12852  01447A                     i1l620:
 12853                           
 12854                           ; BSR set to: 15
 12855                           ;tmr7.c: 141: else
 12856                           ;tmr7.c: 142: {
 12857                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 12858                           
 12859                           ; BSR set to: 15
 12860  01447A  0100               	movlb	0	; () banked
 12861  01447C  518A               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 12862  01447E  010F               	movlb	15	; () banked
 12863  014480  6F2F               	movwf	47,b	;volatile
 12864                           
 12865                           ; BSR set to: 15
 12866                           ;tmr7.c: 145: TMR7L = timerVal;
 12867  014482  C089  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 12868  014486  0012               	return	
 12869  014488                     __end_of_TMR7_WriteTimer:
 12870                           	opt stack 0
 12871                           tosu	equ	0xFFF
 12872                           tosh	equ	0xFFE
 12873                           tosl	equ	0xFFD
 12874                           pclatu	equ	0xFFB
 12875                           pclath	equ	0xFFA
 12876                           tblptru	equ	0xFF8
 12877                           tblptrh	equ	0xFF7
 12878                           tblptrl	equ	0xFF6
 12879                           tablat	equ	0xFF5
 12880                           prodh	equ	0xFF4
 12881                           prodl	equ	0xFF3
 12882                           intcon	equ	0xFF2
 12883                           postinc0	equ	0xFEE
 12884                           fsr0h	equ	0xFEA
 12885                           fsr0l	equ	0xFE9
 12886                           wreg	equ	0xFE8
 12887                           fsr1h	equ	0xFE2
 12888                           fsr1l	equ	0xFE1
 12889                           bsr	equ	0xFE0
 12890                           indf2	equ	0xFDF
 12891                           postinc2	equ	0xFDE
 12892                           postdec2	equ	0xFDD
 12893                           fsr2h	equ	0xFDA
 12894                           fsr2l	equ	0xFD9
 12895                           status	equ	0xFD8
 12896                           
 12897 ;; *************** function _TMR6_ISR *****************
 12898 ;; Defined at:
 12899 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 12900 ;; Parameters:    Size  Location     Type
 12901 ;;		None
 12902 ;; Auto vars:     Size  Location     Type
 12903 ;;		None
 12904 ;; Return value:  Size  Location     Type
 12905 ;;                  1    wreg      void 
 12906 ;; Registers used:
 12907 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12908 ;; Tracked objects:
 12909 ;;		On entry : 0/0
 12910 ;;		On exit  : 0/0
 12911 ;;		Unchanged: 0/0
 12912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12917 ;;Total ram usage:        0 bytes
 12918 ;; Hardware stack levels used:    1
 12919 ;; Hardware stack levels required when called:    7
 12920 ;; This function calls:
 12921 ;;		Absolute function
 12922 ;;		_TMR6_DefaultInterruptHandler
 12923 ;;		_heartbeatTimerCallback
 12924 ;; This function is called by:
 12925 ;;		_INTERRUPT_InterruptManagerLow
 12926 ;; This function uses a non-reentrant model
 12927 ;;
 12928                           
 12929                           	psect	text55
 12930  0143EE                     __ptext55:
 12931                           	opt stack 0
 12932  0143EE                     _TMR6_ISR:
 12933                           	opt stack 14
 12934                           
 12935                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 12936                           
 12937                           ; BSR set to: 15
 12938                           ;incstack = 0
 12939  0143EE  010E               	movlb	14	; () banked
 12940  0143F0  9B38               	bcf	56,5,b	;volatile
 12941                           
 12942                           ; BSR set to: 14
 12943                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 12944  0143F2  0100               	movlb	0	; () banked
 12945  0143F4  51AC               	movf	_TMR6_InterruptHandler& (0+255),w,b
 12946  0143F6  11AD               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 12947  0143F8  11AE               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 12948  0143FA  B4D8               	btfsc	status,2,c
 12949  0143FC  0012               	return	
 12950                           
 12951                           ; BSR set to: 0
 12952                           ;tmr6.c: 172: {
 12953                           ;tmr6.c: 173: TMR6_InterruptHandler();
 12954  0143FE  D801               	call	i1u849_28
 12955  014400  0012               	return	
 12956  014402                     i1u849_28:
 12957  014402  0005               	push	
 12958  014404  6EFA               	movwf	pclath,c
 12959  014406  51AC               	movf	_TMR6_InterruptHandler& (0+255),w,b
 12960  014408  6EFD               	movwf	tosl,c
 12961  01440A  51AD               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 12962  01440C  6EFE               	movwf	tosh,c
 12963  01440E  51AE               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 12964  014410  6EFF               	movwf	tosu,c
 12965  014412  50FA               	movf	pclath,w,c
 12966  014414  0012               	return		;indir
 12967  014416                     __end_of_TMR6_ISR:
 12968                           	opt stack 0
 12969                           tosu	equ	0xFFF
 12970                           tosh	equ	0xFFE
 12971                           tosl	equ	0xFFD
 12972                           pclatu	equ	0xFFB
 12973                           pclath	equ	0xFFA
 12974                           tblptru	equ	0xFF8
 12975                           tblptrh	equ	0xFF7
 12976                           tblptrl	equ	0xFF6
 12977                           tablat	equ	0xFF5
 12978                           prodh	equ	0xFF4
 12979                           prodl	equ	0xFF3
 12980                           intcon	equ	0xFF2
 12981                           postinc0	equ	0xFEE
 12982                           fsr0h	equ	0xFEA
 12983                           fsr0l	equ	0xFE9
 12984                           wreg	equ	0xFE8
 12985                           fsr1h	equ	0xFE2
 12986                           fsr1l	equ	0xFE1
 12987                           bsr	equ	0xFE0
 12988                           indf2	equ	0xFDF
 12989                           postinc2	equ	0xFDE
 12990                           postdec2	equ	0xFDD
 12991                           fsr2h	equ	0xFDA
 12992                           fsr2l	equ	0xFD9
 12993                           status	equ	0xFD8
 12994                           
 12995 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 12996 ;; Defined at:
 12997 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 12998 ;; Parameters:    Size  Location     Type
 12999 ;;		None
 13000 ;; Auto vars:     Size  Location     Type
 13001 ;;		None
 13002 ;; Return value:  Size  Location     Type
 13003 ;;                  1    wreg      void 
 13004 ;; Registers used:
 13005 ;;		None
 13006 ;; Tracked objects:
 13007 ;;		On entry : 0/0
 13008 ;;		On exit  : 0/0
 13009 ;;		Unchanged: 0/0
 13010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13015 ;;Total ram usage:        0 bytes
 13016 ;; Hardware stack levels used:    1
 13017 ;; Hardware stack levels required when called:    6
 13018 ;; This function calls:
 13019 ;;		Nothing
 13020 ;; This function is called by:
 13021 ;;		_TMR6_Initialize
 13022 ;;		_TMR6_ISR
 13023 ;; This function uses a non-reentrant model
 13024 ;;
 13025                           
 13026                           	psect	text56
 13027  014640                     __ptext56:
 13028                           	opt stack 0
 13029  014640                     _TMR6_DefaultInterruptHandler:
 13030                           	opt stack 14
 13031                           
 13032                           ;incstack = 0
 13033  014640  0012               	return		;funcret
 13034  014642                     __end_of_TMR6_DefaultInterruptHandler:
 13035                           	opt stack 0
 13036                           tosu	equ	0xFFF
 13037                           tosh	equ	0xFFE
 13038                           tosl	equ	0xFFD
 13039                           pclatu	equ	0xFFB
 13040                           pclath	equ	0xFFA
 13041                           tblptru	equ	0xFF8
 13042                           tblptrh	equ	0xFF7
 13043                           tblptrl	equ	0xFF6
 13044                           tablat	equ	0xFF5
 13045                           prodh	equ	0xFF4
 13046                           prodl	equ	0xFF3
 13047                           intcon	equ	0xFF2
 13048                           postinc0	equ	0xFEE
 13049                           fsr0h	equ	0xFEA
 13050                           fsr0l	equ	0xFE9
 13051                           wreg	equ	0xFE8
 13052                           fsr1h	equ	0xFE2
 13053                           fsr1l	equ	0xFE1
 13054                           bsr	equ	0xFE0
 13055                           indf2	equ	0xFDF
 13056                           postinc2	equ	0xFDE
 13057                           postdec2	equ	0xFDD
 13058                           fsr2h	equ	0xFDA
 13059                           fsr2l	equ	0xFD9
 13060                           status	equ	0xFD8
 13061                           
 13062 ;; *************** function _heartbeatTimerCallback *****************
 13063 ;; Defined at:
 13064 ;;		line 72 in file "main.c"
 13065 ;; Parameters:    Size  Location     Type
 13066 ;;		None
 13067 ;; Auto vars:     Size  Location     Type
 13068 ;;		None
 13069 ;; Return value:  Size  Location     Type
 13070 ;;                  1    wreg      void 
 13071 ;; Registers used:
 13072 ;;		wreg, status,2, status,0
 13073 ;; Tracked objects:
 13074 ;;		On entry : 0/0
 13075 ;;		On exit  : 0/0
 13076 ;;		Unchanged: 0/0
 13077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13080 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13081 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13082 ;;Total ram usage:        1 bytes
 13083 ;; Hardware stack levels used:    1
 13084 ;; Hardware stack levels required when called:    6
 13085 ;; This function calls:
 13086 ;;		Nothing
 13087 ;; This function is called by:
 13088 ;;		_main
 13089 ;;		_TMR6_ISR
 13090 ;; This function uses a non-reentrant model
 13091 ;;
 13092                           
 13093                           	psect	text57
 13094  014396                     __ptext57:
 13095                           	opt stack 0
 13096  014396                     _heartbeatTimerCallback:
 13097                           	opt stack 14
 13098                           
 13099                           ;main.c: 75: LATFbits.LATF2 = !LATFbits.LATF2;
 13100                           
 13101                           ;incstack = 0
 13102  014396  B47E               	btfsc	3966,2,c	;volatile
 13103  014398  D004               	goto	i1u558_20
 13104  01439A  0100               	movlb	0	; () banked
 13105  01439C  6B89               	clrf	??_heartbeatTimerCallback& (0+255),b
 13106  01439E  2B89               	incf	??_heartbeatTimerCallback& (0+255),f,b
 13107  0143A0  D002               	goto	i1u559_28
 13108  0143A2                     i1u558_20:
 13109  0143A2  0100               	movlb	0	; () banked
 13110  0143A4  6B89               	clrf	??_heartbeatTimerCallback& (0+255),b
 13111  0143A6                     i1u559_28:
 13112  0143A6  4789               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 13113  0143A8  4789               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 13114  0143AA  507E               	movf	3966,w,c	;volatile
 13115  0143AC  1989               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 13116  0143AE  0BFB               	andlw	-5
 13117  0143B0  1989               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 13118  0143B2  6E7E               	movwf	3966,c	;volatile
 13119                           
 13120                           ;main.c: 78: on_time++;
 13121  0143B4  0E01               	movlw	1
 13122  0143B6  0101               	movlb	1	; () banked
 13123  0143B8  2740               	addwf	_on_time& (0+255),f,b
 13124  0143BA  0E00               	movlw	0
 13125  0143BC  2341               	addwfc	(_on_time+1)& (0+255),f,b
 13126  0143BE  2342               	addwfc	(_on_time+2)& (0+255),f,b
 13127  0143C0  2343               	addwfc	(_on_time+3)& (0+255),f,b
 13128  0143C2  0004               	clrwdt		;# 
 13129  0143C4  0012               	return		;funcret
 13130  0143C6                     __end_of_heartbeatTimerCallback:
 13131                           	opt stack 0
 13132                           tosu	equ	0xFFF
 13133                           tosh	equ	0xFFE
 13134                           tosl	equ	0xFFD
 13135                           pclatu	equ	0xFFB
 13136                           pclath	equ	0xFFA
 13137                           tblptru	equ	0xFF8
 13138                           tblptrh	equ	0xFF7
 13139                           tblptrl	equ	0xFF6
 13140                           tablat	equ	0xFF5
 13141                           prodh	equ	0xFF4
 13142                           prodl	equ	0xFF3
 13143                           intcon	equ	0xFF2
 13144                           postinc0	equ	0xFEE
 13145                           fsr0h	equ	0xFEA
 13146                           fsr0l	equ	0xFE9
 13147                           wreg	equ	0xFE8
 13148                           fsr1h	equ	0xFE2
 13149                           fsr1l	equ	0xFE1
 13150                           bsr	equ	0xFE0
 13151                           indf2	equ	0xFDF
 13152                           postinc2	equ	0xFDE
 13153                           postdec2	equ	0xFDD
 13154                           fsr2h	equ	0xFDA
 13155                           fsr2l	equ	0xFD9
 13156                           status	equ	0xFD8
 13157                           
 13158 ;; *************** function _EUSART2_Transmit_ISR *****************
 13159 ;; Defined at:
 13160 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 13161 ;; Parameters:    Size  Location     Type
 13162 ;;		None
 13163 ;; Auto vars:     Size  Location     Type
 13164 ;;		None
 13165 ;; Return value:  Size  Location     Type
 13166 ;;                  1    wreg      void 
 13167 ;; Registers used:
 13168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13169 ;; Tracked objects:
 13170 ;;		On entry : 0/0
 13171 ;;		On exit  : 0/0
 13172 ;;		Unchanged: 0/0
 13173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13178 ;;Total ram usage:        0 bytes
 13179 ;; Hardware stack levels used:    1
 13180 ;; Hardware stack levels required when called:    6
 13181 ;; This function calls:
 13182 ;;		Nothing
 13183 ;; This function is called by:
 13184 ;;		_EUSART2_Initialize
 13185 ;;		_INTERRUPT_InterruptManagerLow
 13186 ;; This function uses a non-reentrant model
 13187 ;;
 13188                           
 13189                           	psect	text58
 13190  0142FA                     __ptext58:
 13191                           	opt stack 0
 13192  0142FA                     _EUSART2_Transmit_ISR:
 13193                           	opt stack 15
 13194                           
 13195                           ;eusart2.c: 189: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 13196                           
 13197                           ;incstack = 0
 13198  0142FA  0E40               	movlw	64
 13199  0142FC  0100               	movlb	0	; () banked
 13200  0142FE  61B9               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 13201  014300  D014               	goto	i1l383
 13202                           
 13203                           ; BSR set to: 0
 13204                           ;eusart2.c: 190: {
 13205                           ;eusart2.c: 191: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 13206  014302  51BA               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 13207  014304  0D01               	mullw	1
 13208  014306  0E00               	movlw	low _eusart2TxBuffer
 13209  014308  24F3               	addwf	prodl,w,c
 13210  01430A  6ED9               	movwf	fsr2l,c
 13211  01430C  0E02               	movlw	high _eusart2TxBuffer
 13212  01430E  20F4               	addwfc	prodh,w,c
 13213  014310  6EDA               	movwf	fsr2h,c
 13214  014312  50DF               	movf	indf2,w,c
 13215  014314  010E               	movlb	14	; () banked
 13216  014316  6FF2               	movwf	242,b	;volatile
 13217                           
 13218                           ; BSR set to: 14
 13219  014318  0100               	movlb	0	; () banked
 13220  01431A  2BBA               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 13221                           
 13222                           ; BSR set to: 0
 13223                           ;eusart2.c: 192: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 13224  01431C  0E3F               	movlw	63
 13225  01431E  65BA               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 13226  014320  D002               	goto	i1l384
 13227                           
 13228                           ; BSR set to: 0
 13229                           ;eusart2.c: 193: {
 13230                           ;eusart2.c: 194: eusart2TxTail = 0;
 13231  014322  0E00               	movlw	0
 13232  014324  6FBA               	movwf	_eusart2TxTail& (0+255),b	;volatile
 13233  014326                     i1l384:
 13234                           
 13235                           ; BSR set to: 0
 13236                           ;eusart2.c: 195: }
 13237                           ;eusart2.c: 196: eusart2TxBufferRemaining++;
 13238                           
 13239                           ; BSR set to: 0
 13240  014326  2BB9               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 13241                           
 13242                           ;eusart2.c: 197: }
 13243  014328  0012               	return	
 13244  01432A                     i1l383:
 13245                           
 13246                           ; BSR set to: 0
 13247                           ;eusart2.c: 198: else
 13248                           ;eusart2.c: 199: {
 13249                           ;eusart2.c: 200: PIE3bits.TX2IE = 0;
 13250  01432A  010E               	movlb	14	; () banked
 13251  01432C  9D2C               	bcf	44,6,b	;volatile
 13252  01432E  0012               	return	
 13253  014330                     __end_of_EUSART2_Transmit_ISR:
 13254                           	opt stack 0
 13255                           tosu	equ	0xFFF
 13256                           tosh	equ	0xFFE
 13257                           tosl	equ	0xFFD
 13258                           pclatu	equ	0xFFB
 13259                           pclath	equ	0xFFA
 13260                           tblptru	equ	0xFF8
 13261                           tblptrh	equ	0xFF7
 13262                           tblptrl	equ	0xFF6
 13263                           tablat	equ	0xFF5
 13264                           prodh	equ	0xFF4
 13265                           prodl	equ	0xFF3
 13266                           intcon	equ	0xFF2
 13267                           postinc0	equ	0xFEE
 13268                           fsr0h	equ	0xFEA
 13269                           fsr0l	equ	0xFE9
 13270                           wreg	equ	0xFE8
 13271                           fsr1h	equ	0xFE2
 13272                           fsr1l	equ	0xFE1
 13273                           bsr	equ	0xFE0
 13274                           indf2	equ	0xFDF
 13275                           postinc2	equ	0xFDE
 13276                           postdec2	equ	0xFDD
 13277                           fsr2h	equ	0xFDA
 13278                           fsr2l	equ	0xFD9
 13279                           status	equ	0xFD8
 13280                           
 13281 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 13282 ;; Defined at:
 13283 ;;		line 77 in file "mcc_generated_files/interrupt_manager.c"
 13284 ;; Parameters:    Size  Location     Type
 13285 ;;		None
 13286 ;; Auto vars:     Size  Location     Type
 13287 ;;		None
 13288 ;; Return value:  Size  Location     Type
 13289 ;;                  1    wreg      void 
 13290 ;; Registers used:
 13291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13292 ;; Tracked objects:
 13293 ;;		On entry : 0/0
 13294 ;;		On exit  : 0/0
 13295 ;;		Unchanged: 0/0
 13296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13299 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13300 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13301 ;;Total ram usage:       18 bytes
 13302 ;; Hardware stack levels used:    1
 13303 ;; Hardware stack levels required when called:    5
 13304 ;; This function calls:
 13305 ;;		Absolute function
 13306 ;;		_ADCC_ISR
 13307 ;;		_EUSART2_Receive_ISR
 13308 ;; This function is called by:
 13309 ;;		Interrupt level 2
 13310 ;; This function uses a non-reentrant model
 13311 ;;
 13312                           
 13313                           	psect	intcode
 13314  000008                     __pintcode:
 13315                           	opt stack 0
 13316  000008                     _INTERRUPT_InterruptManagerHigh:
 13317                           	opt stack 13
 13318                           
 13319                           ;incstack = 0
 13320  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13321  00000A  EFDC  F09A         	goto	int_func
 13322                           tosu	equ	0xFFF
 13323                           tosh	equ	0xFFE
 13324                           tosl	equ	0xFFD
 13325                           pclatu	equ	0xFFB
 13326                           pclath	equ	0xFFA
 13327                           tblptru	equ	0xFF8
 13328                           tblptrh	equ	0xFF7
 13329                           tblptrl	equ	0xFF6
 13330                           tablat	equ	0xFF5
 13331                           prodh	equ	0xFF4
 13332                           prodl	equ	0xFF3
 13333                           intcon	equ	0xFF2
 13334                           postinc0	equ	0xFEE
 13335                           fsr0h	equ	0xFEA
 13336                           fsr0l	equ	0xFE9
 13337                           wreg	equ	0xFE8
 13338                           fsr1h	equ	0xFE2
 13339                           fsr1l	equ	0xFE1
 13340                           bsr	equ	0xFE0
 13341                           indf2	equ	0xFDF
 13342                           postinc2	equ	0xFDE
 13343                           postdec2	equ	0xFDD
 13344                           fsr2h	equ	0xFDA
 13345                           fsr2l	equ	0xFD9
 13346                           status	equ	0xFD8
 13347                           
 13348                           	psect	intcode_body
 13349  0135B8                     __pintcode_body:
 13350                           	opt stack 13
 13351  0135B8                     int_func:
 13352                           	opt stack 13
 13353  0135B8  CFFA F077          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 13354  0135BC  CFFB F078          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 13355  0135C0  CFE9 F079          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 13356  0135C4  CFEA F07A          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 13357  0135C8  CFE1 F07B          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 13358  0135CC  CFE2 F07C          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 13359  0135D0  CFD9 F07D          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 13360  0135D4  CFDA F07E          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 13361  0135D8  CFF3 F07F          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 13362  0135DC  CFF4 F080          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 13363  0135E0  CFF6 F081          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 13364  0135E4  CFF7 F082          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 13365  0135E8  CFF8 F083          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 13366  0135EC  CFF5 F084          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 13367  0135F0  C05F  F085         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 13368  0135F4  C060  F086         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 13369  0135F8  C061  F087         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 13370  0135FC  C062  F088         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 13371                           
 13372                           ;interrupt_manager.c: 80: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 13373  013600  010E               	movlb	14	; () banked
 13374  013602  BF2C               	btfsc	44,7,b	;volatile
 13375                           
 13376                           ; BSR set to: 14
 13377  013604  AF36               	btfss	54,7,b	;volatile
 13378  013606  D00D               	goto	i2l198
 13379                           
 13380                           ; BSR set to: 14
 13381                           ;interrupt_manager.c: 81: {
 13382                           ;interrupt_manager.c: 82: EUSART2_RxDefaultInterruptHandler();
 13383  013608  D801               	call	i2u854_48
 13384  01360A  D010               	goto	i2l200
 13385  01360C                     i2u854_48:
 13386  01360C  0005               	push	
 13387  01360E  6EFA               	movwf	pclath,c
 13388  013610  0100               	movlb	0	; () banked
 13389  013612  51AF               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 13390  013614  6EFD               	movwf	tosl,c
 13391  013616  51B0               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 13392  013618  6EFE               	movwf	tosh,c
 13393  01361A  51B1               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 13394  01361C  6EFF               	movwf	tosu,c
 13395  01361E  50FA               	movf	pclath,w,c
 13396  013620  0012               	return		;indir
 13397  013622                     i2l198:
 13398                           
 13399                           ; BSR set to: 14
 13400                           ;interrupt_manager.c: 84: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 13401  013622  B12A               	btfsc	42,0,b	;volatile
 13402                           
 13403                           ; BSR set to: 14
 13404  013624  A134               	btfss	52,0,b	;volatile
 13405  013626  D002               	goto	i2l200
 13406                           
 13407                           ; BSR set to: 14
 13408                           ;interrupt_manager.c: 85: {
 13409                           ;interrupt_manager.c: 86: ADCC_ISR();
 13410  013628  EC57  F0A2         	call	_ADCC_ISR	;wreg free
 13411  01362C                     i2l200:
 13412                           
 13413                           ;interrupt_manager.c: 88: else
 13414                           ;interrupt_manager.c: 89: {
 13415  01362C  C088  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 13416  013630  C087  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 13417  013634  C086  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 13418  013638  C085  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 13419  01363C  C084  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 13420  013640  C083  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 13421  013644  C082  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 13422  013648  C081  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 13423  01364C  C080  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 13424  013650  C07F  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 13425  013654  C07E  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 13426  013658  C07D  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 13427  01365C  C07C  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 13428  013660  C07B  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 13429  013664  C07A  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 13430  013668  C079  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 13431  01366C  C078  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 13432  013670  C077  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 13433  013674  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13434  013676  0011               	retfie		f
 13435  013678                     __end_of_INTERRUPT_InterruptManagerHigh:
 13436                           	opt stack 0
 13437                           tosu	equ	0xFFF
 13438                           tosh	equ	0xFFE
 13439                           tosl	equ	0xFFD
 13440                           pclatu	equ	0xFFB
 13441                           pclath	equ	0xFFA
 13442                           tblptru	equ	0xFF8
 13443                           tblptrh	equ	0xFF7
 13444                           tblptrl	equ	0xFF6
 13445                           tablat	equ	0xFF5
 13446                           prodh	equ	0xFF4
 13447                           prodl	equ	0xFF3
 13448                           intcon	equ	0xFF2
 13449                           postinc0	equ	0xFEE
 13450                           fsr0h	equ	0xFEA
 13451                           fsr0l	equ	0xFE9
 13452                           wreg	equ	0xFE8
 13453                           fsr1h	equ	0xFE2
 13454                           fsr1l	equ	0xFE1
 13455                           bsr	equ	0xFE0
 13456                           indf2	equ	0xFDF
 13457                           postinc2	equ	0xFDE
 13458                           postdec2	equ	0xFDD
 13459                           fsr2h	equ	0xFDA
 13460                           fsr2l	equ	0xFD9
 13461                           status	equ	0xFD8
 13462                           
 13463 ;; *************** function _EUSART2_Receive_ISR *****************
 13464 ;; Defined at:
 13465 ;;		line 204 in file "mcc_generated_files/eusart2.c"
 13466 ;; Parameters:    Size  Location     Type
 13467 ;;		None
 13468 ;; Auto vars:     Size  Location     Type
 13469 ;;		None
 13470 ;; Return value:  Size  Location     Type
 13471 ;;                  1    wreg      void 
 13472 ;; Registers used:
 13473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13474 ;; Tracked objects:
 13475 ;;		On entry : 0/0
 13476 ;;		On exit  : 0/0
 13477 ;;		Unchanged: 0/0
 13478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13483 ;;Total ram usage:        0 bytes
 13484 ;; Hardware stack levels used:    1
 13485 ;; Hardware stack levels required when called:    4
 13486 ;; This function calls:
 13487 ;;		i2_printf
 13488 ;; This function is called by:
 13489 ;;		_EUSART2_Initialize
 13490 ;;		_INTERRUPT_InterruptManagerHigh
 13491 ;; This function uses a non-reentrant model
 13492 ;;
 13493                           
 13494                           	psect	text60
 13495  013872                     __ptext60:
 13496                           	opt stack 0
 13497  013872                     _EUSART2_Receive_ISR:
 13498                           	opt stack 13
 13499                           
 13500                           ;eusart2.c: 207: if(1 == RC2STAbits.OERR)
 13501                           
 13502                           ;incstack = 0
 13503  013872  010E               	movlb	14	; () banked
 13504  013874  A3F5               	btfss	245,1,b	;volatile
 13505  013876  D002               	goto	i2l389
 13506                           
 13507                           ; BSR set to: 14
 13508                           ;eusart2.c: 208: {
 13509                           ;eusart2.c: 211: RC2STAbits.CREN = 0;
 13510  013878  99F5               	bcf	245,4,b	;volatile
 13511                           
 13512                           ;eusart2.c: 212: RC2STAbits.CREN = 1;
 13513  01387A  89F5               	bsf	245,4,b	;volatile
 13514  01387C                     i2l389:
 13515                           
 13516                           ; BSR set to: 14
 13517                           ;eusart2.c: 213: }
 13518                           ;eusart2.c: 216: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 13519                           
 13520                           ; BSR set to: 14
 13521  01387C  505A               	movf	_eusart2RxHead,w,c	;volatile
 13522  01387E  0D01               	mullw	1
 13523  013880  0E00               	movlw	low _eusart2RxBuffer
 13524  013882  24F3               	addwf	prodl,w,c
 13525  013884  6ED9               	movwf	fsr2l,c
 13526  013886  0E01               	movlw	high _eusart2RxBuffer
 13527  013888  20F4               	addwfc	prodh,w,c
 13528  01388A  6EDA               	movwf	fsr2h,c
 13529  01388C  CEF1 FFDF          	movff	3825,indf2	;volatile
 13530                           
 13531                           ; BSR set to: 14
 13532  013890  2A5A               	incf	_eusart2RxHead,f,c	;volatile
 13533                           
 13534                           ; BSR set to: 14
 13535                           ;eusart2.c: 217: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 13536  013892  0E3F               	movlw	63
 13537  013894  645A               	cpfsgt	_eusart2RxHead,c	;volatile
 13538  013896  D002               	goto	i2l390
 13539                           
 13540                           ; BSR set to: 14
 13541                           ;eusart2.c: 218: {
 13542                           ;eusart2.c: 219: eusart2RxHead = 0;
 13543  013898  0E00               	movlw	0
 13544  01389A  6E5A               	movwf	_eusart2RxHead,c	;volatile
 13545  01389C                     i2l390:
 13546                           
 13547                           ; BSR set to: 14
 13548                           ;eusart2.c: 220: }
 13549                           ;eusart2.c: 221: eusart2RxCount++;
 13550                           
 13551                           ; BSR set to: 14
 13552  01389C  0100               	movlb	0	; () banked
 13553  01389E  2BB7               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 13554                           
 13555                           ; BSR set to: 0
 13556                           ;eusart2.c: 227: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 13557  0138A0  0E0A               	movlw	10
 13558  0138A2  010E               	movlb	14	; () banked
 13559  0138A4  19F1               	xorwf	241,w,b	;volatile
 13560  0138A6  B4D8               	btfsc	status,2,c
 13561  0138A8  D004               	goto	i2u619_40
 13562                           
 13563                           ; BSR set to: 14
 13564  0138AA  0E0D               	movlw	13
 13565  0138AC  19F1               	xorwf	241,w,b	;volatile
 13566  0138AE  A4D8               	btfss	status,2,c
 13567  0138B0  D004               	goto	i2l391
 13568  0138B2                     i2u619_40:
 13569                           
 13570                           ; BSR set to: 14
 13571                           ;eusart2.c: 229: eusart2RxStringReady = 1;
 13572  0138B2  805E               	bsf	_eusart2RxStringReady/(0+8),_eusart2RxStringReady& (0+7),c	;volatile
 13573                           
 13574                           ; BSR set to: 14
 13575                           ;eusart2.c: 232: RC2REG = 0;
 13576  0138B4  0E00               	movlw	0
 13577  0138B6  6FF1               	movwf	241,b	;volatile
 13578                           
 13579                           ;eusart2.c: 234: }
 13580  0138B8  D001               	goto	i2l394
 13581  0138BA                     i2l391:
 13582                           
 13583                           ; BSR set to: 14
 13584                           ;eusart2.c: 236: else {
 13585                           ;eusart2.c: 238: eusart2RxStringReady = 0;
 13586  0138BA  905E               	bcf	_eusart2RxStringReady/(0+8),_eusart2RxStringReady& (0+7),c	;volatile
 13587  0138BC                     i2l394:
 13588                           
 13589                           ; BSR set to: 14
 13590                           ;eusart2.c: 240: }
 13591                           ;eusart2.c: 243: if((RC2REG == (int) '\b')) {
 13592                           
 13593                           ; BSR set to: 14
 13594  0138BC  0E08               	movlw	8
 13595  0138BE  19F1               	xorwf	241,w,b	;volatile
 13596  0138C0  A4D8               	btfss	status,2,c
 13597  0138C2  0012               	return	
 13598                           
 13599                           ; BSR set to: 14
 13600                           ;eusart2.c: 245: eusart2RxBuffer[eusart2RxHead] = '\0';
 13601  0138C4  505A               	movf	_eusart2RxHead,w,c	;volatile
 13602  0138C6  0D01               	mullw	1
 13603  0138C8  0E00               	movlw	low _eusart2RxBuffer
 13604  0138CA  24F3               	addwf	prodl,w,c
 13605  0138CC  6ED9               	movwf	fsr2l,c
 13606  0138CE  0E01               	movlw	high _eusart2RxBuffer
 13607  0138D0  20F4               	addwfc	prodh,w,c
 13608  0138D2  6EDA               	movwf	fsr2h,c
 13609  0138D4  0E00               	movlw	0
 13610  0138D6  6EDF               	movwf	indf2,c
 13611                           
 13612                           ; BSR set to: 14
 13613                           ;eusart2.c: 246: eusart2RxHead--;
 13614  0138D8  065A               	decf	_eusart2RxHead,f,c	;volatile
 13615                           
 13616                           ; BSR set to: 14
 13617                           ;eusart2.c: 249: printf("\033[K");
 13618  0138DA  0EC1               	movlw	low STR_1
 13619  0138DC  6E49               	movwf	i2printf@f,c
 13620  0138DE  0EFF               	movlw	high STR_1
 13621  0138E0  6E4A               	movwf	i2printf@f+1,c
 13622  0138E2  ECC8  F083         	call	i2_printf	;wreg free
 13623                           
 13624                           ;eusart2.c: 251: if(eusart2RxHead != eusart2RxTail) {
 13625  0138E6  0100               	movlb	0	; () banked
 13626  0138E8  51B8               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 13627  0138EA  185A               	xorwf	_eusart2RxHead,w,c	;volatile
 13628  0138EC  B4D8               	btfsc	status,2,c
 13629  0138EE  D00B               	goto	i2l396
 13630                           
 13631                           ; BSR set to: 0
 13632                           ;eusart2.c: 253: eusart2RxBuffer[eusart2RxHead] = '\0';
 13633  0138F0  505A               	movf	_eusart2RxHead,w,c	;volatile
 13634  0138F2  0D01               	mullw	1
 13635  0138F4  0E00               	movlw	low _eusart2RxBuffer
 13636  0138F6  24F3               	addwf	prodl,w,c
 13637  0138F8  6ED9               	movwf	fsr2l,c
 13638  0138FA  0E01               	movlw	high _eusart2RxBuffer
 13639  0138FC  20F4               	addwfc	prodh,w,c
 13640  0138FE  6EDA               	movwf	fsr2h,c
 13641  013900  0E00               	movlw	0
 13642  013902  6EDF               	movwf	indf2,c
 13643                           
 13644                           ; BSR set to: 0
 13645                           ;eusart2.c: 254: eusart2RxHead--;
 13646  013904  065A               	decf	_eusart2RxHead,f,c	;volatile
 13647  013906                     i2l396:
 13648                           
 13649                           ; BSR set to: 0
 13650                           ;eusart2.c: 256: }
 13651                           ;eusart2.c: 258: RC2REG = 0;
 13652                           
 13653                           ; BSR set to: 0
 13654  013906  0E00               	movlw	0
 13655  013908  010E               	movlb	14	; () banked
 13656  01390A  6FF1               	movwf	241,b	;volatile
 13657  01390C  0012               	return	
 13658  01390E                     __end_of_EUSART2_Receive_ISR:
 13659                           	opt stack 0
 13660                           tosu	equ	0xFFF
 13661                           tosh	equ	0xFFE
 13662                           tosl	equ	0xFFD
 13663                           pclatu	equ	0xFFB
 13664                           pclath	equ	0xFFA
 13665                           tblptru	equ	0xFF8
 13666                           tblptrh	equ	0xFF7
 13667                           tblptrl	equ	0xFF6
 13668                           tablat	equ	0xFF5
 13669                           prodh	equ	0xFF4
 13670                           prodl	equ	0xFF3
 13671                           intcon	equ	0xFF2
 13672                           postinc0	equ	0xFEE
 13673                           fsr0h	equ	0xFEA
 13674                           fsr0l	equ	0xFE9
 13675                           wreg	equ	0xFE8
 13676                           fsr1h	equ	0xFE2
 13677                           fsr1l	equ	0xFE1
 13678                           bsr	equ	0xFE0
 13679                           indf2	equ	0xFDF
 13680                           postinc2	equ	0xFDE
 13681                           postdec2	equ	0xFDD
 13682                           fsr2h	equ	0xFDA
 13683                           fsr2l	equ	0xFD9
 13684                           status	equ	0xFD8
 13685                           
 13686 ;; *************** function i2_printf *****************
 13687 ;; Defined at:
 13688 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 13689 ;; Parameters:    Size  Location     Type
 13690 ;;  f               2   72[COMRAM] PTR const unsigned char 
 13691 ;;		 -> STR_67(30), STR_66(23), STR_65(40), STR_64(30), 
 13692 ;;		 -> STR_63(33), STR_62(566), STR_60(58), STR_58(56), 
 13693 ;;		 -> STR_56(34), STR_54(34), STR_52(35), STR_50(47), 
 13694 ;;		 -> STR_49(17), STR_46(4), STR_45(5), STR_43(4), 
 13695 ;;		 -> STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), 
 13696 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
 13697 ;;		 -> STR_5(3), STR_4(372), STR_3(4), STR_2(5), 
 13698 ;;		 -> STR_1(4), 
 13699 ;; Auto vars:     Size  Location     Type
 13700 ;;  printf          4   15[BANK0 ] struct .
 13701 ;;  printf          4    9[BANK0 ] unsigned long 
 13702 ;;  printf          3   19[BANK0 ] unsigned long 
 13703 ;;  printf          3    0        PTR const unsigned char 
 13704 ;;  printf          2   13[BANK0 ] int 
 13705 ;;  printf          2    7[BANK0 ] int 
 13706 ;;  printf          2    5[BANK0 ] unsigned short 
 13707 ;;  printf          2    3[BANK0 ] PTR void [1]
 13708 ;;		 -> ?i2_printf(2), ?_printf(2), 
 13709 ;;  printf          2    0        unsigned int 
 13710 ;;  printf          2    0        int 
 13711 ;;  printf          1   22[BANK0 ] char 
 13712 ;;  printf          1    0        unsigned char 
 13713 ;; Return value:  Size  Location     Type
 13714 ;;                  2   72[COMRAM] int 
 13715 ;; Registers used:
 13716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13717 ;; Tracked objects:
 13718 ;;		On entry : 0/0
 13719 ;;		On exit  : 0/0
 13720 ;;		Unchanged: 0/0
 13721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13723 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13724 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13725 ;;      Totals:         8      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13726 ;;Total ram usage:       31 bytes
 13727 ;; Hardware stack levels used:    1
 13728 ;; Hardware stack levels required when called:    3
 13729 ;; This function calls:
 13730 ;;		i2___awdiv
 13731 ;;		i2___ftadd
 13732 ;;		i2___ftge
 13733 ;;		i2___ftmul
 13734 ;;		i2___ftneg
 13735 ;;		i2___ftsub
 13736 ;;		i2___fttol
 13737 ;;		i2___lldiv
 13738 ;;		i2___llmod
 13739 ;;		i2___lltoft
 13740 ;;		i2___wmul
 13741 ;;		i2__div_to_l_
 13742 ;;		i2__tdiv_to_l_
 13743 ;;		i2_fround
 13744 ;;		i2_putch
 13745 ;;		i2_scale
 13746 ;; This function is called by:
 13747 ;;		_EUSART2_Receive_ISR
 13748 ;; This function uses a non-reentrant model
 13749 ;;
 13750                           
 13751                           	psect	text61
 13752  010790                     __ptext61:
 13753                           	opt stack 0
 13754  010790                     i2_printf:
 13755                           	opt stack 13
 13756                           
 13757                           ;doprnt.c: 466: va_list ap;
 13758                           ;doprnt.c: 499: signed char c;
 13759                           ;doprnt.c: 501: int width;
 13760                           ;doprnt.c: 504: int prec;
 13761                           ;doprnt.c: 508: unsigned short flag;
 13762                           ;doprnt.c: 515: char d;
 13763                           ;doprnt.c: 516: double fval;
 13764                           ;doprnt.c: 517: int exp;
 13765                           ;doprnt.c: 523: union {
 13766                           ;doprnt.c: 524: unsigned long vd;
 13767                           ;doprnt.c: 525: double integ;
 13768                           ;doprnt.c: 526: } tmpval;
 13769                           ;doprnt.c: 528: unsigned long val;
 13770                           ;doprnt.c: 529: unsigned len;
 13771                           ;doprnt.c: 530: const char * cp;
 13772                           ;doprnt.c: 533: *ap = __va_start();
 13773                           
 13774                           ; BSR set to: 14
 13775                           ;incstack = 0
 13776  010790  0E4B               	movlw	low (?i2_printf+2)
 13777  010792  0100               	movlb	0	; () banked
 13778  010794  6F63               	movwf	i2printf@ap& (0+255),b
 13779  010796  0E00               	movlw	high (?i2_printf+2)
 13780  010798  6F64               	movwf	(i2printf@ap+1)& (0+255),b
 13781                           
 13782                           ;doprnt.c: 536: while(c = *f++) {
 13783  01079A  D39A               	goto	i2u605_40
 13784  01079C                     
 13785                           ; BSR set to: 0
 13786                           ;doprnt.c: 538: if(c != '%')
 13787                           
 13788                           ; BSR set to: 0
 13789  01079C  0E25               	movlw	37
 13790  01079E  1976               	xorwf	i2printf@c& (0+255),w,b
 13791  0107A0  B4D8               	btfsc	status,2,c
 13792  0107A2  D004               	goto	i2l926
 13793                           
 13794                           ; BSR set to: 0
 13795                           ;doprnt.c: 540: {
 13796                           ;doprnt.c: 541: (putch(c) );
 13797  0107A4  5176               	movf	i2printf@c& (0+255),w,b
 13798  0107A6  EC14  F0A3         	call	i2_putch
 13799                           
 13800                           ;doprnt.c: 542: continue;
 13801  0107AA  D392               	goto	i2u605_40
 13802  0107AC                     i2l926:
 13803                           
 13804                           ;doprnt.c: 543: }
 13805                           ;doprnt.c: 548: flag = 0;
 13806  0107AC  0E00               	movlw	0
 13807  0107AE  0100               	movlb	0	; () banked
 13808  0107B0  6F66               	movwf	(i2printf@flag+1)& (0+255),b
 13809  0107B2  0E00               	movlw	0
 13810  0107B4  6F65               	movwf	i2printf@flag& (0+255),b
 13811                           
 13812                           ;doprnt.c: 635: switch(c = *f++) {
 13813  0107B6  D006               	goto	i2l927
 13814  0107B8                     
 13815                           ; BSR set to: 0
 13816                           ;doprnt.c: 663: flag |= 0x400;
 13817                           
 13818                           ; BSR set to: 0
 13819  0107B8  8566               	bsf	(i2printf@flag+1)& (0+255),2,b
 13820                           
 13821                           ; BSR set to: 0
 13822                           ;doprnt.c: 698: case 'i':
 13823                           ;doprnt.c: 699: break;
 13824                           
 13825                           ; BSR set to: 0
 13826                           
 13827                           ;doprnt.c: 697: case 'd':
 13828                           
 13829                           ;doprnt.c: 664: break;
 13830  0107BA  D02A               	goto	i2l931
 13831  0107BC                     
 13832                           ; BSR set to: 0
 13833                           ;doprnt.c: 809: (putch(c) );
 13834                           
 13835                           ; BSR set to: 0
 13836  0107BC  5176               	movf	i2printf@c& (0+255),w,b
 13837  0107BE  EC14  F0A3         	call	i2_putch
 13838                           
 13839                           ;doprnt.c: 810: continue;
 13840  0107C2  D386               	goto	i2u605_40
 13841  0107C4                     i2l927:
 13842  0107C4  5049               	movf	i2printf@f,w,c
 13843  0107C6  6E4B               	movwf	??i2_printf& (0+255),c
 13844  0107C8  504A               	movf	i2printf@f+1,w,c
 13845  0107CA  6E4C               	movwf	(??i2_printf+1)& (0+255),c
 13846  0107CC  4A49               	infsnz	i2printf@f,f,c
 13847  0107CE  2A4A               	incf	i2printf@f+1,f,c
 13848  0107D0  C04B  FFF6         	movff	??i2_printf,tblptrl
 13849  0107D4  C04C  FFF7         	movff	??i2_printf+1,tblptrh
 13850  0107D8  0E00               	movlw	low (__mediumconst shr (0+16))
 13851  0107DA  6EF8               	movwf	tblptru,c
 13852  0107DC  0E0D               	movlw	(high __ramtop+-1)
 13853  0107DE  64F7               	cpfsgt	tblptrh,c
 13854  0107E0  D003               	bra	i2u576_47
 13855  0107E2  0008               	tblrd		*
 13856  0107E4  50F5               	movf	tablat,w,c
 13857  0107E6  D005               	bra	i2u576_40
 13858  0107E8                     i2u576_47:
 13859  0107E8  CFF6 FFD9          	movff	tblptrl,fsr2l
 13860  0107EC  CFF7 FFDA          	movff	tblptrh,fsr2h
 13861  0107F0  50DF               	movf	indf2,w,c
 13862  0107F2                     i2u576_40:
 13863  0107F2  0100               	movlb	0	; () banked
 13864  0107F4  6F76               	movwf	i2printf@c& (0+255),b
 13865  0107F6  5176               	movf	i2printf@c& (0+255),w,b
 13866                           
 13867                           ; Switch size 1, requested type "space"
 13868                           ; Number of cases is 4, Range of values is 0 to 105
 13869                           ; switch strategies available:
 13870                           ; Name         Instructions Cycles
 13871                           ; simple_byte           13     7 (average)
 13872                           ;	Chosen strategy is simple_byte
 13873  0107F8  0A00               	xorlw	0	; case 0
 13874  0107FA  B4D8               	btfsc	status,2,c
 13875  0107FC  0012               	return	
 13876  0107FE  0A64               	xorlw	100	; case 100
 13877  010800  B4D8               	btfsc	status,2,c
 13878  010802  D006               	goto	i2l931
 13879  010804  0A02               	xorlw	2	; case 102
 13880  010806  B4D8               	btfsc	status,2,c
 13881  010808  D7D7               	goto	i2l930
 13882  01080A  0A0F               	xorlw	15	; case 105
 13883  01080C  A4D8               	btfss	status,2,c
 13884  01080E  D7D6               	goto	i2l934
 13885  010810                     i2l931:
 13886                           
 13887                           ;doprnt.c: 825: if(flag & (0x700)) {
 13888                           
 13889                           ; BSR set to: 0
 13890  010810  0E07               	movlw	7
 13891  010812  0100               	movlb	0	; () banked
 13892  010814  1566               	andwf	(i2printf@flag+1)& (0+255),w,b
 13893  010816  B4D8               	btfsc	status,2,c
 13894  010818  D2BE               	goto	i2l935
 13895                           
 13896                           ; BSR set to: 0
 13897                           ;doprnt.c: 829: prec = 6;
 13898  01081A  0E00               	movlw	0
 13899  01081C  6F68               	movwf	(i2printf@prec+1)& (0+255),b
 13900  01081E  0E06               	movlw	6
 13901  010820  6F67               	movwf	i2printf@prec& (0+255),b
 13902                           
 13903                           ; BSR set to: 0
 13904                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 13905  010822  C063  FFD9         	movff	i2printf@ap,fsr2l
 13906  010826  C064  FFDA         	movff	i2printf@ap+1,fsr2h
 13907  01082A  CFDE F073          	movff	postinc2,i2printf@fval
 13908  01082E  CFDE F074          	movff	postinc2,i2printf@fval+1
 13909  010832  CFDD F075          	movff	postdec2,i2printf@fval+2
 13910                           
 13911                           ; BSR set to: 0
 13912  010836  0E03               	movlw	3
 13913  010838  2763               	addwf	i2printf@ap& (0+255),f,b
 13914  01083A  0E00               	movlw	0
 13915  01083C  2364               	addwfc	(i2printf@ap+1)& (0+255),f,b
 13916                           
 13917                           ; BSR set to: 0
 13918                           ;doprnt.c: 831: if(fval < 0.0) {
 13919  01083E  AF75               	btfss	(i2printf@fval+2)& (0+255),7,b
 13920  010840  D011               	goto	i2l936
 13921                           
 13922                           ; BSR set to: 0
 13923                           ;doprnt.c: 832: fval = -fval;
 13924  010842  C073  F01B         	movff	i2printf@fval,i2___ftneg@f1
 13925  010846  C074  F01C         	movff	i2printf@fval+1,i2___ftneg@f1+1
 13926  01084A  C075  F01D         	movff	i2printf@fval+2,i2___ftneg@f1+2
 13927  01084E  EC6A  F0A2         	call	i2___ftneg	;wreg free
 13928  010852  C01B  F073         	movff	?i2___ftneg,i2printf@fval
 13929  010856  C01C  F074         	movff	?i2___ftneg+1,i2printf@fval+1
 13930  01085A  C01D  F075         	movff	?i2___ftneg+2,i2printf@fval+2
 13931                           
 13932                           ;doprnt.c: 833: flag |= 0x03;
 13933  01085E  0E03               	movlw	3
 13934  010860  0100               	movlb	0	; () banked
 13935  010862  1365               	iorwf	i2printf@flag& (0+255),f,b
 13936  010864                     i2l936:
 13937                           
 13938                           ; BSR set to: 0
 13939                           ;doprnt.c: 834: }
 13940                           ;doprnt.c: 835: exp = 0;
 13941                           
 13942                           ; BSR set to: 0
 13943  010864  0E00               	movlw	0
 13944  010866  6F6E               	movwf	(i2printf@exp+1)& (0+255),b
 13945  010868  0E00               	movlw	0
 13946  01086A  6F6D               	movwf	i2printf@exp& (0+255),b
 13947                           
 13948                           ; BSR set to: 0
 13949                           ;doprnt.c: 836: if( fval!=0) {
 13950  01086C  5173               	movf	i2printf@fval& (0+255),w,b
 13951  01086E  1174               	iorwf	(i2printf@fval+1)& (0+255),w,b
 13952  010870  1175               	iorwf	(i2printf@fval+2)& (0+255),w,b
 13953  010872  B4D8               	btfsc	status,2,c
 13954  010874  D086               	goto	i2l941
 13955                           
 13956                           ; BSR set to: 0
 13957                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 13958  010876  0E82               	movlw	130
 13959  010878  6E4B               	movwf	??i2_printf& (0+255),c
 13960  01087A  0EFF               	movlw	255
 13961  01087C  6E4C               	movwf	(??i2_printf+1)& (0+255),c
 13962  01087E  C073  F04D         	movff	i2printf@fval,??i2_printf+2
 13963  010882  C074  F04E         	movff	i2printf@fval+1,??i2_printf+3
 13964  010886  C075  F04F         	movff	i2printf@fval+2,??i2_printf+4
 13965  01088A  C076  F050         	movff	i2printf@fval+3,??i2_printf+5
 13966  01088E  0E10               	movlw	16
 13967  010890  D005               	goto	i2u580_40
 13968  010892                     i2u580_45:
 13969  010892  90D8               	bcf	status,0,c
 13970  010894  3250               	rrcf	??i2_printf+5,f,c
 13971  010896  324F               	rrcf	??i2_printf+4,f,c
 13972  010898  324E               	rrcf	??i2_printf+3,f,c
 13973  01089A  324D               	rrcf	??i2_printf+2,f,c
 13974  01089C                     i2u580_40:
 13975  01089C  2EE8               	decfsz	wreg,f,c
 13976  01089E  D7F9               	goto	i2u580_45
 13977  0108A0  504D               	movf	??i2_printf+2,w,c
 13978  0108A2  244B               	addwf	??i2_printf,w,c
 13979  0108A4  6F6D               	movwf	i2printf@exp& (0+255),b
 13980  0108A6  0E00               	movlw	0
 13981  0108A8  204C               	addwfc	??i2_printf+1,w,c
 13982  0108AA  6F6E               	movwf	(i2printf@exp+1)& (0+255),b
 13983                           
 13984                           ; BSR set to: 0
 13985                           ;doprnt.c: 838: exp--;
 13986  0108AC  076D               	decf	i2printf@exp& (0+255),f,b
 13987  0108AE  A0D8               	btfss	status,0,c
 13988  0108B0  076E               	decf	(i2printf@exp+1)& (0+255),f,b
 13989                           
 13990                           ; BSR set to: 0
 13991                           ;doprnt.c: 839: exp *= 3;
 13992  0108B2  C06D  F00F         	movff	i2printf@exp,i2___wmul@multiplier
 13993  0108B6  C06E  F010         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 13994  0108BA  0E00               	movlw	0
 13995  0108BC  6E12               	movwf	i2___wmul@multiplicand+1,c
 13996  0108BE  0E03               	movlw	3
 13997  0108C0  6E11               	movwf	i2___wmul@multiplicand,c
 13998  0108C2  EC44  F0A2         	call	i2___wmul	;wreg free
 13999  0108C6  C00F  F06D         	movff	?i2___wmul,i2printf@exp
 14000  0108CA  C010  F06E         	movff	?i2___wmul+1,i2printf@exp+1
 14001                           
 14002                           ;doprnt.c: 840: exp /= 10;
 14003  0108CE  C06D  F007         	movff	i2printf@exp,i2___awdiv@dividend
 14004  0108D2  C06E  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 14005  0108D6  0E00               	movlw	0
 14006  0108D8  6E0A               	movwf	i2___awdiv@divisor+1,c
 14007  0108DA  0E0A               	movlw	10
 14008  0108DC  6E09               	movwf	i2___awdiv@divisor,c
 14009  0108DE  EC5E  F09D         	call	i2___awdiv	;wreg free
 14010  0108E2  C007  F06D         	movff	?i2___awdiv,i2printf@exp
 14011  0108E6  C008  F06E         	movff	?i2___awdiv+1,i2printf@exp+1
 14012                           
 14013                           ;doprnt.c: 841: if(exp < 0)
 14014  0108EA  0100               	movlb	0	; () banked
 14015  0108EC  AF6E               	btfss	(i2printf@exp+1)& (0+255),7,b
 14016  0108EE  D003               	goto	i2l938
 14017                           
 14018                           ; BSR set to: 0
 14019                           ;doprnt.c: 842: exp--;
 14020  0108F0  076D               	decf	i2printf@exp& (0+255),f,b
 14021  0108F2  A0D8               	btfss	status,0,c
 14022  0108F4  076E               	decf	(i2printf@exp+1)& (0+255),f,b
 14023  0108F6                     i2l938:
 14024                           
 14025                           ; BSR set to: 0
 14026                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 14027                           
 14028                           ; BSR set to: 0
 14029  0108F6  516D               	movf	i2printf@exp& (0+255),w,b
 14030  0108F8  0800               	sublw	0
 14031  0108FA  ECD7  F089         	call	i2_scale
 14032  0108FE  C02D  F06F         	movff	?i2_scale,i2printf@tmpval
 14033  010902  C02E  F070         	movff	?i2_scale+1,i2printf@tmpval+1
 14034  010906  C02F  F071         	movff	?i2_scale+2,i2printf@tmpval+2
 14035                           
 14036                           ;doprnt.c: 847: tmpval.integ *= fval;
 14037  01090A  C06F  F01E         	movff	i2printf@tmpval,i2___ftmul@f1
 14038  01090E  C070  F01F         	movff	i2printf@tmpval+1,i2___ftmul@f1+1
 14039  010912  C071  F020         	movff	i2printf@tmpval+2,i2___ftmul@f1+2
 14040  010916  C073  F021         	movff	i2printf@fval,i2___ftmul@f2
 14041  01091A  C074  F022         	movff	i2printf@fval+1,i2___ftmul@f2+1
 14042  01091E  C075  F023         	movff	i2printf@fval+2,i2___ftmul@f2+2
 14043  010922  EC88  F099         	call	i2___ftmul	;wreg free
 14044  010926  C01E  F06F         	movff	?i2___ftmul,i2printf@tmpval
 14045  01092A  C01F  F070         	movff	?i2___ftmul+1,i2printf@tmpval+1
 14046  01092E  C020  F071         	movff	?i2___ftmul+2,i2printf@tmpval+2
 14047                           
 14048                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 14049  010932  C06F  F001         	movff	i2printf@tmpval,i2___ftge@ff1
 14050  010936  C070  F002         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 14051  01093A  C071  F003         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 14052  01093E  0E00               	movlw	0
 14053  010940  6E04               	movwf	i2___ftge@ff2,c
 14054  010942  0E80               	movlw	128
 14055  010944  6E05               	movwf	i2___ftge@ff2+1,c
 14056  010946  0E3F               	movlw	63
 14057  010948  6E06               	movwf	i2___ftge@ff2+2,c
 14058  01094A  ECD3  F09C         	call	i2___ftge	;wreg free
 14059  01094E  B0D8               	btfsc	status,0,c
 14060  010950  D005               	goto	i2l939
 14061                           
 14062                           ;doprnt.c: 849: exp--;
 14063  010952  0100               	movlb	0	; () banked
 14064  010954  076D               	decf	i2printf@exp& (0+255),f,b
 14065  010956  A0D8               	btfss	status,0,c
 14066  010958  076E               	decf	(i2printf@exp+1)& (0+255),f,b
 14067  01095A  D013               	goto	i2l941
 14068  01095C                     i2l939:
 14069                           
 14070                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 14071                           
 14072                           ; BSR set to: 0
 14073  01095C  C06F  F001         	movff	i2printf@tmpval,i2___ftge@ff1
 14074  010960  C070  F002         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 14075  010964  C071  F003         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 14076  010968  0E00               	movlw	0
 14077  01096A  6E04               	movwf	i2___ftge@ff2,c
 14078  01096C  0E20               	movlw	32
 14079  01096E  6E05               	movwf	i2___ftge@ff2+1,c
 14080  010970  0E41               	movlw	65
 14081  010972  6E06               	movwf	i2___ftge@ff2+2,c
 14082  010974  ECD3  F09C         	call	i2___ftge	;wreg free
 14083  010978  A0D8               	btfss	status,0,c
 14084  01097A  D003               	goto	i2l941
 14085                           
 14086                           ;doprnt.c: 851: exp++;
 14087  01097C  0100               	movlb	0	; () banked
 14088  01097E  4B6D               	infsnz	i2printf@exp& (0+255),f,b
 14089  010980  2B6E               	incf	(i2printf@exp+1)& (0+255),f,b
 14090  010982                     i2l941:
 14091                           
 14092                           ;doprnt.c: 852: }
 14093                           ;doprnt.c: 1112: if(prec <= 12)
 14094                           
 14095                           ; BSR set to: 0
 14096                           
 14097                           ; BSR set to: 0
 14098                           
 14099                           ; BSR set to: 0
 14100  010982  0100               	movlb	0	; () banked
 14101  010984  BF68               	btfsc	(i2printf@prec+1)& (0+255),7,b
 14102  010986  D006               	goto	i2u584_40
 14103  010988  5168               	movf	(i2printf@prec+1)& (0+255),w,b
 14104  01098A  E11B               	bnz	i2l5710
 14105  01098C  0E0D               	movlw	13
 14106  01098E  5D67               	subwf	i2printf@prec& (0+255),w,b
 14107  010990  B0D8               	btfsc	status,0,c
 14108  010992  D017               	goto	i2l942
 14109  010994                     i2u584_40:
 14110                           
 14111                           ; BSR set to: 0
 14112                           ;doprnt.c: 1113: fval += fround(prec);
 14113  010994  C073  F037         	movff	i2printf@fval,i2___ftadd@f1
 14114  010998  C074  F038         	movff	i2printf@fval+1,i2___ftadd@f1+1
 14115  01099C  C075  F039         	movff	i2printf@fval+2,i2___ftadd@f1+2
 14116  0109A0  5167               	movf	i2printf@prec& (0+255),w,b
 14117  0109A2  EC11  F092         	call	i2_fround
 14118  0109A6  C02D  F03A         	movff	?i2_fround,i2___ftadd@f2
 14119  0109AA  C02E  F03B         	movff	?i2_fround+1,i2___ftadd@f2+1
 14120  0109AE  C02F  F03C         	movff	?i2_fround+2,i2___ftadd@f2+2
 14121  0109B2  EC23  F094         	call	i2___ftadd	;wreg free
 14122  0109B6  C037  F073         	movff	?i2___ftadd,i2printf@fval
 14123  0109BA  C038  F074         	movff	?i2___ftadd+1,i2printf@fval+1
 14124  0109BE  C039  F075         	movff	?i2___ftadd+2,i2printf@fval+2
 14125  0109C2                     i2l942:
 14126  0109C2                     i2l5710:
 14127                           
 14128                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 14129  0109C2  0100               	movlb	0	; () banked
 14130  0109C4  BF6E               	btfsc	(i2printf@exp+1)& (0+255),7,b
 14131  0109C6  D006               	goto	i2u585_40
 14132  0109C8  516E               	movf	(i2printf@exp+1)& (0+255),w,b
 14133  0109CA  E120               	bnz	i2l5718
 14134  0109CC  0E0A               	movlw	10
 14135  0109CE  5D6D               	subwf	i2printf@exp& (0+255),w,b
 14136  0109D0  B0D8               	btfsc	status,0,c
 14137  0109D2  D01C               	goto	i2u588_40
 14138  0109D4                     i2u585_40:
 14139                           
 14140                           ; BSR set to: 0
 14141  0109D4  5173               	movf	i2printf@fval& (0+255),w,b
 14142  0109D6  1174               	iorwf	(i2printf@fval+1)& (0+255),w,b
 14143  0109D8  1175               	iorwf	(i2printf@fval+2)& (0+255),w,b
 14144  0109DA  B4D8               	btfsc	status,2,c
 14145  0109DC  D056               	goto	i2l943
 14146                           
 14147                           ; BSR set to: 0
 14148  0109DE  C073  F02D         	movff	i2printf@fval,i2___fttol@f1
 14149  0109E2  C074  F02E         	movff	i2printf@fval+1,i2___fttol@f1+1
 14150  0109E6  C075  F02F         	movff	i2printf@fval+2,i2___fttol@f1+2
 14151  0109EA  EC0E  F099         	call	i2___fttol	;wreg free
 14152  0109EE  502D               	movf	?i2___fttol,w,c
 14153  0109F0  102E               	iorwf	?i2___fttol+1,w,c
 14154  0109F2  102F               	iorwf	?i2___fttol+2,w,c
 14155  0109F4  1030               	iorwf	?i2___fttol+3,w,c
 14156  0109F6  A4D8               	btfss	status,2,c
 14157  0109F8  D048               	goto	i2l943
 14158  0109FA  0100               	movlb	0	; () banked
 14159  0109FC  BF6E               	btfsc	(i2printf@exp+1)& (0+255),7,b
 14160  0109FE  D045               	goto	i2l943
 14161  010A00  516E               	movf	(i2printf@exp+1)& (0+255),w,b
 14162  010A02  E104               	bnz	i2l5718
 14163  010A04  0E02               	movlw	2
 14164  010A06  5D6D               	subwf	i2printf@exp& (0+255),w,b
 14165  010A08  A0D8               	btfss	status,0,c
 14166  010A0A  D03F               	goto	i2l943
 14167  010A0C                     i2u588_40:
 14168  010A0C                     i2l5718:
 14169                           
 14170                           ; BSR set to: 0
 14171                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 14172  010A0C  C06F  F001         	movff	i2printf@tmpval,i2___ftge@ff1
 14173  010A10  C070  F002         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 14174  010A14  C071  F003         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 14175  010A18  0E70               	movlw	112
 14176  010A1A  6E04               	movwf	i2___ftge@ff2,c
 14177  010A1C  0E89               	movlw	137
 14178  010A1E  6E05               	movwf	i2___ftge@ff2+1,c
 14179  010A20  0E40               	movlw	64
 14180  010A22  6E06               	movwf	i2___ftge@ff2+2,c
 14181  010A24  ECD3  F09C         	call	i2___ftge	;wreg free
 14182  010A28  B0D8               	btfsc	status,0,c
 14183  010A2A  D003               	goto	i2l946
 14184                           
 14185                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 14186  010A2C  0100               	movlb	0	; () banked
 14187  010A2E  0EF7               	movlw	247
 14188  010A30  D002               	goto	L2
 14189  010A32                     i2l946:
 14190                           
 14191                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 14192                           
 14193                           ; BSR set to: 0
 14194  010A32  0100               	movlb	0	; () banked
 14195  010A34  0EF8               	movlw	248
 14196  010A36                     L2:
 14197  010A36  276D               	addwf	i2printf@exp& (0+255),f,b
 14198  010A38  0EFF               	movlw	255
 14199  010A3A  236E               	addwfc	(i2printf@exp+1)& (0+255),f,b
 14200                           
 14201                           ; BSR set to: 0
 14202                           ;doprnt.c: 1124: }
 14203                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 14204                           
 14205                           ; BSR set to: 0
 14206  010A3C  516D               	movf	i2printf@exp& (0+255),w,b
 14207  010A3E  ECD7  F089         	call	i2_scale
 14208  010A42  C02D  F06F         	movff	?i2_scale,i2printf@tmpval
 14209  010A46  C02E  F070         	movff	?i2_scale+1,i2printf@tmpval+1
 14210  010A4A  C02F  F071         	movff	?i2_scale+2,i2printf@tmpval+2
 14211                           
 14212                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 14213  010A4E  C073  F001         	movff	i2printf@fval,i2__tdiv_to_l_@f1
 14214  010A52  C074  F002         	movff	i2printf@fval+1,i2__tdiv_to_l_@f1+1
 14215  010A56  C075  F003         	movff	i2printf@fval+2,i2__tdiv_to_l_@f1+2
 14216  010A5A  C06F  F004         	movff	i2printf@tmpval,i2__tdiv_to_l_@f2
 14217  010A5E  C070  F005         	movff	i2printf@tmpval+1,i2__tdiv_to_l_@f2+1
 14218  010A62  C071  F006         	movff	i2printf@tmpval+2,i2__tdiv_to_l_@f2+2
 14219  010A66  ECEA  F096         	call	i2__tdiv_to_l_	;wreg free
 14220  010A6A  C001  F069         	movff	?i2__tdiv_to_l_,i2printf@val
 14221  010A6E  C002  F06A         	movff	?i2__tdiv_to_l_+1,i2printf@val+1
 14222  010A72  C003  F06B         	movff	?i2__tdiv_to_l_+2,i2printf@val+2
 14223  010A76  C004  F06C         	movff	?i2__tdiv_to_l_+3,i2printf@val+3
 14224                           
 14225                           ;doprnt.c: 1129: fval = 0.0;
 14226  010A7A  0E00               	movlw	0
 14227  010A7C  0100               	movlb	0	; () banked
 14228  010A7E  6F73               	movwf	i2printf@fval& (0+255),b
 14229  010A80  0E00               	movlw	0
 14230  010A82  6F74               	movwf	(i2printf@fval+1)& (0+255),b
 14231  010A84  0E00               	movlw	0
 14232  010A86  6F75               	movwf	(i2printf@fval+2)& (0+255),b
 14233                           
 14234                           ;doprnt.c: 1130: } else {
 14235  010A88  D033               	goto	i2l952
 14236  010A8A                     i2l943:
 14237                           
 14238                           ;doprnt.c: 1131: val = (unsigned long)fval;
 14239                           
 14240                           ; BSR set to: 0
 14241  010A8A  C073  F02D         	movff	i2printf@fval,i2___fttol@f1
 14242  010A8E  C074  F02E         	movff	i2printf@fval+1,i2___fttol@f1+1
 14243  010A92  C075  F02F         	movff	i2printf@fval+2,i2___fttol@f1+2
 14244  010A96  EC0E  F099         	call	i2___fttol	;wreg free
 14245  010A9A  C02D  F069         	movff	?i2___fttol,i2printf@val
 14246  010A9E  C02E  F06A         	movff	?i2___fttol+1,i2printf@val+1
 14247  010AA2  C02F  F06B         	movff	?i2___fttol+2,i2printf@val+2
 14248  010AA6  C030  F06C         	movff	?i2___fttol+3,i2printf@val+3
 14249                           
 14250                           ;doprnt.c: 1132: fval -= (double)val;
 14251  010AAA  C073  F043         	movff	i2printf@fval,i2___ftsub@f1
 14252  010AAE  C074  F044         	movff	i2printf@fval+1,i2___ftsub@f1+1
 14253  010AB2  C075  F045         	movff	i2printf@fval+2,i2___ftsub@f1+2
 14254  010AB6  C069  F009         	movff	i2printf@val,i2___lltoft@c
 14255  010ABA  C06A  F00A         	movff	i2printf@val+1,i2___lltoft@c+1
 14256  010ABE  C06B  F00B         	movff	i2printf@val+2,i2___lltoft@c+2
 14257  010AC2  C06C  F00C         	movff	i2printf@val+3,i2___lltoft@c+3
 14258  010AC6  ECC3  F09F         	call	i2___lltoft	;wreg free
 14259  010ACA  C009  F046         	movff	?i2___lltoft,i2___ftsub@f2
 14260  010ACE  C00A  F047         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 14261  010AD2  C00B  F048         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 14262  010AD6  EC3E  F0A1         	call	i2___ftsub	;wreg free
 14263  010ADA  C043  F073         	movff	?i2___ftsub,i2printf@fval
 14264  010ADE  C044  F074         	movff	?i2___ftsub+1,i2printf@fval+1
 14265  010AE2  C045  F075         	movff	?i2___ftsub+2,i2printf@fval+2
 14266                           
 14267                           ;doprnt.c: 1133: exp = 0;
 14268  010AE6  0E00               	movlw	0
 14269  010AE8  0100               	movlb	0	; () banked
 14270  010AEA  6F6E               	movwf	(i2printf@exp+1)& (0+255),b
 14271  010AEC  0E00               	movlw	0
 14272  010AEE  6F6D               	movwf	i2printf@exp& (0+255),b
 14273  010AF0                     i2l952:
 14274                           
 14275                           ; BSR set to: 0
 14276                           ;doprnt.c: 1134: }
 14277                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 14278                           
 14279                           ; BSR set to: 0
 14280  010AF0  0E01               	movlw	1
 14281  010AF2  6F76               	movwf	i2printf@c& (0+255),b
 14282  010AF4                     i2l5738:
 14283                           
 14284                           ; BSR set to: 0
 14285  010AF4  0E0A               	movlw	10
 14286  010AF6  1976               	xorwf	i2printf@c& (0+255),w,b
 14287  010AF8  B4D8               	btfsc	status,2,c
 14288  010AFA  D01B               	goto	i2u592_40
 14289                           
 14290                           ; BSR set to: 0
 14291                           ;doprnt.c: 1137: if(val < dpowers[c])
 14292                           
 14293                           ; BSR set to: 0
 14294                           
 14295                           ; BSR set to: 0
 14296  010AFC  5176               	movf	i2printf@c& (0+255),w,b
 14297  010AFE  0D04               	mullw	4
 14298  010B00  0E79               	movlw	low _dpowers
 14299  010B02  24F3               	addwf	prodl,w,c
 14300  010B04  6EF6               	movwf	tblptrl,c
 14301  010B06  0EF9               	movlw	high _dpowers
 14302  010B08  20F4               	addwfc	prodh,w,c
 14303  010B0A  6EF7               	movwf	tblptrh,c
 14304  010B0C                     	if	1	;There are 3 active tblptr bytes
 14305  010B0C  6AF8               	clrf	tblptru,c
 14306  010B0E  0E00               	movlw	low (__mediumconst shr (0+16))
 14307  010B10  22F8               	addwfc	tblptru,f,c
 14308  010B12                     	endif
 14309  010B12  0009               	tblrd		*+
 14310  010B14  50F5               	movf	tablat,w,c
 14311  010B16  5D69               	subwf	i2printf@val& (0+255),w,b
 14312  010B18  0009               	tblrd		*+
 14313  010B1A  50F5               	movf	tablat,w,c
 14314  010B1C  596A               	subwfb	(i2printf@val+1)& (0+255),w,b
 14315  010B1E  0009               	tblrd		*+
 14316  010B20  50F5               	movf	tablat,w,c
 14317  010B22  596B               	subwfb	(i2printf@val+2)& (0+255),w,b
 14318  010B24  0009               	tblrd		*+
 14319  010B26  50F5               	movf	tablat,w,c
 14320  010B28  596C               	subwfb	(i2printf@val+3)& (0+255),w,b
 14321  010B2A  A0D8               	btfss	status,0,c
 14322  010B2C  D002               	goto	i2u592_40
 14323                           
 14324                           ; BSR set to: 0
 14325                           
 14326                           ; BSR set to: 0
 14327                           
 14328                           ; BSR set to: 0
 14329                           ;doprnt.c: 1138: break;
 14330  010B2E  2B76               	incf	i2printf@c& (0+255),f,b
 14331  010B30  D7E1               	goto	i2l5738
 14332  010B32                     i2u592_40:
 14333                           
 14334                           ; BSR set to: 0
 14335                           ;doprnt.c: 1175: {
 14336                           ;doprnt.c: 1188: if(flag & 0x03)
 14337                           
 14338                           ; BSR set to: 0
 14339  010B32  0E03               	movlw	3
 14340  010B34  1565               	andwf	i2printf@flag& (0+255),w,b
 14341  010B36  6E4B               	movwf	??i2_printf& (0+255),c
 14342  010B38  0E00               	movlw	0
 14343  010B3A  1566               	andwf	(i2printf@flag+1)& (0+255),w,b
 14344  010B3C  6E4C               	movwf	(??i2_printf+1)& (0+255),c
 14345  010B3E  504B               	movf	??i2_printf,w,c
 14346  010B40  104C               	iorwf	??i2_printf+1,w,c
 14347  010B42  B4D8               	btfsc	status,2,c
 14348  010B44  D04D               	goto	i2l957
 14349                           
 14350                           ; BSR set to: 0
 14351                           ;doprnt.c: 1190: (putch('-') );
 14352  010B46  0E2D               	movlw	45
 14353  010B48  EC14  F0A3         	call	i2_putch
 14354                           
 14355                           ;doprnt.c: 1195: }
 14356                           ;doprnt.c: 1196: while(c--) {
 14357  010B4C  D049               	goto	i2l957
 14358  010B4E                     
 14359                           ;doprnt.c: 1200: {
 14360                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 14361  010B4E  C069  F001         	movff	i2printf@val,i2___lldiv@dividend
 14362  010B52  C06A  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 14363  010B56  C06B  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 14364  010B5A  C06C  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 14365  010B5E  0100               	movlb	0	; () banked
 14366  010B60  5176               	movf	i2printf@c& (0+255),w,b
 14367  010B62  0D04               	mullw	4
 14368  010B64  0E79               	movlw	low _dpowers
 14369  010B66  24F3               	addwf	prodl,w,c
 14370  010B68  6EF6               	movwf	tblptrl,c
 14371  010B6A  0EF9               	movlw	high _dpowers
 14372  010B6C  20F4               	addwfc	prodh,w,c
 14373  010B6E  6EF7               	movwf	tblptrh,c
 14374  010B70                     	if	1	;There are 3 active tblptr bytes
 14375  010B70  6AF8               	clrf	tblptru,c
 14376  010B72  0E00               	movlw	low (__mediumconst shr (0+16))
 14377  010B74  22F8               	addwfc	tblptru,f,c
 14378  010B76                     	endif
 14379  010B76  0009               	tblrd		*+
 14380  010B78  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14381  010B7C  0009               	tblrd		*+
 14382  010B7E  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14383  010B82  0009               	tblrd		*+
 14384  010B84  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14385  010B88  000A               	tblrd		*-
 14386  010B8A  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14387  010B8E  ECA0  F09D         	call	i2___lldiv	;wreg free
 14388  010B92  C001  F06F         	movff	?i2___lldiv,i2printf@tmpval
 14389  010B96  C002  F070         	movff	?i2___lldiv+1,i2printf@tmpval+1
 14390  010B9A  C003  F071         	movff	?i2___lldiv+2,i2printf@tmpval+2
 14391  010B9E  C004  F072         	movff	?i2___lldiv+3,i2printf@tmpval+3
 14392                           
 14393                           ;doprnt.c: 1202: tmpval.vd %= 10;
 14394  010BA2  C06F  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 14395  010BA6  C070  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 14396  010BAA  C071  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 14397  010BAE  C072  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 14398  010BB2  0E0A               	movlw	10
 14399  010BB4  6E12               	movwf	i2___llmod@divisor,c
 14400  010BB6  0E00               	movlw	0
 14401  010BB8  6E13               	movwf	i2___llmod@divisor+1,c
 14402  010BBA  0E00               	movlw	0
 14403  010BBC  6E14               	movwf	i2___llmod@divisor+2,c
 14404  010BBE  0E00               	movlw	0
 14405  010BC0  6E15               	movwf	i2___llmod@divisor+3,c
 14406  010BC2  EC2D  F09F         	call	i2___llmod	;wreg free
 14407  010BC6  C00E  F06F         	movff	?i2___llmod,i2printf@tmpval
 14408  010BCA  C00F  F070         	movff	?i2___llmod+1,i2printf@tmpval+1
 14409  010BCE  C010  F071         	movff	?i2___llmod+2,i2printf@tmpval+2
 14410  010BD2  C011  F072         	movff	?i2___llmod+3,i2printf@tmpval+3
 14411                           
 14412                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 14413  010BD6  0100               	movlb	0	; () banked
 14414  010BD8  516F               	movf	i2printf@tmpval& (0+255),w,b
 14415  010BDA  0F30               	addlw	48
 14416  010BDC  EC14  F0A3         	call	i2_putch
 14417  010BE0                     i2l957:
 14418  010BE0  0100               	movlb	0	; () banked
 14419  010BE2  0776               	decf	i2printf@c& (0+255),f,b
 14420  010BE4  2976               	incf	i2printf@c& (0+255),w,b
 14421  010BE6  B4D8               	btfsc	status,2,c
 14422  010BE8  D008               	goto	i2l960
 14423  010BEA  D7B1               	goto	i2l958
 14424  010BEC                     i2l5762:
 14425                           
 14426                           ; BSR set to: 0
 14427                           ;doprnt.c: 1208: (putch('0') );
 14428  010BEC  0E30               	movlw	48
 14429  010BEE  EC14  F0A3         	call	i2_putch
 14430                           
 14431                           ;doprnt.c: 1209: exp--;
 14432  010BF2  0100               	movlb	0	; () banked
 14433  010BF4  076D               	decf	i2printf@exp& (0+255),f,b
 14434  010BF6  A0D8               	btfss	status,0,c
 14435  010BF8  076E               	decf	(i2printf@exp+1)& (0+255),f,b
 14436  010BFA                     i2l960:
 14437                           
 14438                           ; BSR set to: 0
 14439                           
 14440                           ; BSR set to: 0
 14441  010BFA  BF6E               	btfsc	(i2printf@exp+1)& (0+255),7,b
 14442  010BFC  D005               	goto	i2u595_40
 14443  010BFE  516E               	movf	(i2printf@exp+1)& (0+255),w,b
 14444  010C00  E1F5               	bnz	i2l5762
 14445  010C02  056D               	decf	i2printf@exp& (0+255),w,b
 14446  010C04  B0D8               	btfsc	status,0,c
 14447  010C06  D7F2               	goto	i2l961
 14448  010C08                     i2u595_40:
 14449                           
 14450                           ; BSR set to: 0
 14451                           ;doprnt.c: 1210: }
 14452                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 14453                           
 14454                           ; BSR set to: 0
 14455  010C08  BF68               	btfsc	(i2printf@prec+1)& (0+255),7,b
 14456  010C0A  D009               	goto	i2l963
 14457  010C0C  5168               	movf	(i2printf@prec+1)& (0+255),w,b
 14458  010C0E  E104               	bnz	i2u596_40
 14459  010C10  0E09               	movlw	9
 14460  010C12  5D67               	subwf	i2printf@prec& (0+255),w,b
 14461  010C14  A0D8               	btfss	status,0,c
 14462  010C16  D003               	goto	i2l963
 14463  010C18                     i2u596_40:
 14464                           
 14465                           ; BSR set to: 0
 14466                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 14467  010C18  0E08               	movlw	8
 14468  010C1A  6F76               	movwf	i2printf@c& (0+255),b
 14469  010C1C  D002               	goto	i2l964
 14470  010C1E                     i2l963:
 14471                           
 14472                           ; BSR set to: 0
 14473                           ;doprnt.c: 1213: else
 14474                           ;doprnt.c: 1214: c = prec;
 14475  010C1E  C067  F076         	movff	i2printf@prec,i2printf@c
 14476  010C22                     i2l964:
 14477                           
 14478                           ; BSR set to: 0
 14479                           ;doprnt.c: 1215: prec -= c;
 14480                           
 14481                           ; BSR set to: 0
 14482  010C22  5176               	movf	i2printf@c& (0+255),w,b
 14483  010C24  5F67               	subwf	i2printf@prec& (0+255),f,b
 14484  010C26  0E00               	movlw	0
 14485  010C28  BF76               	btfsc	i2printf@c& (0+255),7,b
 14486  010C2A  0EFF               	movlw	255
 14487  010C2C  5B68               	subwfb	(i2printf@prec+1)& (0+255),f,b
 14488                           
 14489                           ; BSR set to: 0
 14490                           ;doprnt.c: 1219: if(c)
 14491  010C2E  5176               	movf	i2printf@c& (0+255),w,b
 14492  010C30  B4D8               	btfsc	status,2,c
 14493  010C32  D003               	goto	i2l965
 14494                           
 14495                           ; BSR set to: 0
 14496                           ;doprnt.c: 1221: (putch('.') );
 14497  010C34  0E2E               	movlw	46
 14498  010C36  EC14  F0A3         	call	i2_putch
 14499  010C3A                     i2l965:
 14500                           
 14501                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 14502  010C3A  0100               	movlb	0	; () banked
 14503  010C3C  5176               	movf	i2printf@c& (0+255),w,b
 14504  010C3E  ECD7  F089         	call	i2_scale
 14505  010C42  C02D  F060         	movff	?i2_scale,i2_printf$2786
 14506  010C46  C02E  F061         	movff	?i2_scale+1,i2_printf$2786+1
 14507  010C4A  C02F  F062         	movff	?i2_scale+2,i2_printf$2786+2
 14508                           
 14509                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 14510  010C4E  C073  F021         	movff	i2printf@fval,i2___ftmul@f2
 14511  010C52  C074  F022         	movff	i2printf@fval+1,i2___ftmul@f2+1
 14512  010C56  C075  F023         	movff	i2printf@fval+2,i2___ftmul@f2+2
 14513  010C5A  C060  F01E         	movff	i2_printf$2786,i2___ftmul@f1
 14514  010C5E  C061  F01F         	movff	i2_printf$2786+1,i2___ftmul@f1+1
 14515  010C62  C062  F020         	movff	i2_printf$2786+2,i2___ftmul@f1+2
 14516  010C66  EC88  F099         	call	i2___ftmul	;wreg free
 14517  010C6A  C01E  F02D         	movff	?i2___ftmul,i2___fttol@f1
 14518  010C6E  C01F  F02E         	movff	?i2___ftmul+1,i2___fttol@f1+1
 14519  010C72  C020  F02F         	movff	?i2___ftmul+2,i2___fttol@f1+2
 14520  010C76  EC0E  F099         	call	i2___fttol	;wreg free
 14521  010C7A  C02D  F069         	movff	?i2___fttol,i2printf@val
 14522  010C7E  C02E  F06A         	movff	?i2___fttol+1,i2printf@val+1
 14523  010C82  C02F  F06B         	movff	?i2___fttol+2,i2printf@val+2
 14524  010C86  C030  F06C         	movff	?i2___fttol+3,i2printf@val+3
 14525                           
 14526                           ;doprnt.c: 1228: while(c--) {
 14527  010C8A  D073               	goto	i2l966
 14528  010C8C                     
 14529                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 14530  010C8C  C069  F001         	movff	i2printf@val,i2___lldiv@dividend
 14531  010C90  C06A  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 14532  010C94  C06B  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 14533  010C98  C06C  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 14534  010C9C  0100               	movlb	0	; () banked
 14535  010C9E  5176               	movf	i2printf@c& (0+255),w,b
 14536  010CA0  0D04               	mullw	4
 14537  010CA2  0E79               	movlw	low _dpowers
 14538  010CA4  24F3               	addwf	prodl,w,c
 14539  010CA6  6EF6               	movwf	tblptrl,c
 14540  010CA8  0EF9               	movlw	high _dpowers
 14541  010CAA  20F4               	addwfc	prodh,w,c
 14542  010CAC  6EF7               	movwf	tblptrh,c
 14543  010CAE                     	if	1	;There are 3 active tblptr bytes
 14544  010CAE  6AF8               	clrf	tblptru,c
 14545  010CB0  0E00               	movlw	low (__mediumconst shr (0+16))
 14546  010CB2  22F8               	addwfc	tblptru,f,c
 14547  010CB4                     	endif
 14548  010CB4  0009               	tblrd		*+
 14549  010CB6  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14550  010CBA  0009               	tblrd		*+
 14551  010CBC  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14552  010CC0  0009               	tblrd		*+
 14553  010CC2  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14554  010CC6  000A               	tblrd		*-
 14555  010CC8  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14556  010CCC  ECA0  F09D         	call	i2___lldiv	;wreg free
 14557  010CD0  C001  F06F         	movff	?i2___lldiv,i2printf@tmpval
 14558  010CD4  C002  F070         	movff	?i2___lldiv+1,i2printf@tmpval+1
 14559  010CD8  C003  F071         	movff	?i2___lldiv+2,i2printf@tmpval+2
 14560  010CDC  C004  F072         	movff	?i2___lldiv+3,i2printf@tmpval+3
 14561                           
 14562                           ;doprnt.c: 1230: tmpval.vd %= 10;
 14563  010CE0  C06F  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 14564  010CE4  C070  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 14565  010CE8  C071  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 14566  010CEC  C072  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 14567  010CF0  0E0A               	movlw	10
 14568  010CF2  6E12               	movwf	i2___llmod@divisor,c
 14569  010CF4  0E00               	movlw	0
 14570  010CF6  6E13               	movwf	i2___llmod@divisor+1,c
 14571  010CF8  0E00               	movlw	0
 14572  010CFA  6E14               	movwf	i2___llmod@divisor+2,c
 14573  010CFC  0E00               	movlw	0
 14574  010CFE  6E15               	movwf	i2___llmod@divisor+3,c
 14575  010D00  EC2D  F09F         	call	i2___llmod	;wreg free
 14576  010D04  C00E  F06F         	movff	?i2___llmod,i2printf@tmpval
 14577  010D08  C00F  F070         	movff	?i2___llmod+1,i2printf@tmpval+1
 14578  010D0C  C010  F071         	movff	?i2___llmod+2,i2printf@tmpval+2
 14579  010D10  C011  F072         	movff	?i2___llmod+3,i2printf@tmpval+3
 14580                           
 14581                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 14582  010D14  0100               	movlb	0	; () banked
 14583  010D16  516F               	movf	i2printf@tmpval& (0+255),w,b
 14584  010D18  0F30               	addlw	48
 14585  010D1A  EC14  F0A3         	call	i2_putch
 14586                           
 14587                           ;doprnt.c: 1232: val %= dpowers[c];
 14588  010D1E  C069  F00E         	movff	i2printf@val,i2___llmod@dividend
 14589  010D22  C06A  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 14590  010D26  C06B  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 14591  010D2A  C06C  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 14592  010D2E  0100               	movlb	0	; () banked
 14593  010D30  5176               	movf	i2printf@c& (0+255),w,b
 14594  010D32  0D04               	mullw	4
 14595  010D34  0E79               	movlw	low _dpowers
 14596  010D36  24F3               	addwf	prodl,w,c
 14597  010D38  6EF6               	movwf	tblptrl,c
 14598  010D3A  0EF9               	movlw	high _dpowers
 14599  010D3C  20F4               	addwfc	prodh,w,c
 14600  010D3E  6EF7               	movwf	tblptrh,c
 14601  010D40                     	if	1	;There are 3 active tblptr bytes
 14602  010D40  6AF8               	clrf	tblptru,c
 14603  010D42  0E00               	movlw	low (__mediumconst shr (0+16))
 14604  010D44  22F8               	addwfc	tblptru,f,c
 14605  010D46                     	endif
 14606  010D46  0009               	tblrd		*+
 14607  010D48  CFF5 F012          	movff	tablat,i2___llmod@divisor
 14608  010D4C  0009               	tblrd		*+
 14609  010D4E  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 14610  010D52  0009               	tblrd		*+
 14611  010D54  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 14612  010D58  000A               	tblrd		*-
 14613  010D5A  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 14614  010D5E  EC2D  F09F         	call	i2___llmod	;wreg free
 14615  010D62  C00E  F069         	movff	?i2___llmod,i2printf@val
 14616  010D66  C00F  F06A         	movff	?i2___llmod+1,i2printf@val+1
 14617  010D6A  C010  F06B         	movff	?i2___llmod+2,i2printf@val+2
 14618  010D6E  C011  F06C         	movff	?i2___llmod+3,i2printf@val+3
 14619  010D72                     i2l966:
 14620  010D72  0100               	movlb	0	; () banked
 14621  010D74  0776               	decf	i2printf@c& (0+255),f,b
 14622  010D76  2976               	incf	i2printf@c& (0+255),w,b
 14623  010D78  B4D8               	btfsc	status,2,c
 14624  010D7A  D008               	goto	i2l969
 14625  010D7C  D787               	goto	i2l967
 14626  010D7E                     
 14627                           ; BSR set to: 0
 14628                           ;doprnt.c: 1236: (putch('0') );
 14629                           
 14630                           ; BSR set to: 0
 14631  010D7E  0E30               	movlw	48
 14632  010D80  EC14  F0A3         	call	i2_putch
 14633                           
 14634                           ;doprnt.c: 1237: prec--;
 14635  010D84  0100               	movlb	0	; () banked
 14636  010D86  0767               	decf	i2printf@prec& (0+255),f,b
 14637  010D88  A0D8               	btfss	status,0,c
 14638  010D8A  0768               	decf	(i2printf@prec+1)& (0+255),f,b
 14639  010D8C                     i2l969:
 14640                           
 14641                           ; BSR set to: 0
 14642                           
 14643                           ; BSR set to: 0
 14644  010D8C  5167               	movf	i2printf@prec& (0+255),w,b
 14645  010D8E  1168               	iorwf	(i2printf@prec+1)& (0+255),w,b
 14646  010D90  B4D8               	btfsc	status,2,c
 14647  010D92  D09E               	goto	i2u605_40
 14648  010D94  D7F4               	goto	i2l970
 14649  010D96                     i2l935:
 14650                           
 14651                           ; BSR set to: 0
 14652                           ;doprnt.c: 1246: }
 14653                           ;doprnt.c: 1253: {
 14654                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 14655                           
 14656                           ; BSR set to: 0
 14657  010D96  C063  FFD9         	movff	i2printf@ap,fsr2l
 14658  010D9A  C064  FFDA         	movff	i2printf@ap+1,fsr2h
 14659  010D9E  CFDE F069          	movff	postinc2,i2printf@val
 14660  010DA2  CFDD F06A          	movff	postdec2,i2printf@val+1
 14661  010DA6  0E00               	movlw	0
 14662  010DA8  BF6A               	btfsc	(i2printf@val+1)& (0+255),7,b
 14663  010DAA  0EFF               	movlw	-1
 14664  010DAC  6F6B               	movwf	(i2printf@val+2)& (0+255),b
 14665  010DAE  6F6C               	movwf	(i2printf@val+3)& (0+255),b
 14666                           
 14667                           ; BSR set to: 0
 14668  010DB0  0E02               	movlw	2
 14669  010DB2  2763               	addwf	i2printf@ap& (0+255),f,b
 14670  010DB4  0E00               	movlw	0
 14671  010DB6  2364               	addwfc	(i2printf@ap+1)& (0+255),f,b
 14672                           
 14673                           ; BSR set to: 0
 14674                           ;doprnt.c: 1261: if((long)val < 0) {
 14675  010DB8  AF6C               	btfss	(i2printf@val+3)& (0+255),7,b
 14676  010DBA  D00A               	goto	i2l972
 14677                           
 14678                           ; BSR set to: 0
 14679                           ;doprnt.c: 1262: flag |= 0x03;
 14680  010DBC  0E03               	movlw	3
 14681  010DBE  1365               	iorwf	i2printf@flag& (0+255),f,b
 14682                           
 14683                           ; BSR set to: 0
 14684                           ;doprnt.c: 1263: val = -val;
 14685  010DC0  1F6C               	comf	(i2printf@val+3)& (0+255),f,b
 14686  010DC2  1F6B               	comf	(i2printf@val+2)& (0+255),f,b
 14687  010DC4  1F6A               	comf	(i2printf@val+1)& (0+255),f,b
 14688  010DC6  6D69               	negf	i2printf@val& (0+255),b
 14689  010DC8  0E00               	movlw	0
 14690  010DCA  236A               	addwfc	(i2printf@val+1)& (0+255),f,b
 14691  010DCC  236B               	addwfc	(i2printf@val+2)& (0+255),f,b
 14692  010DCE  236C               	addwfc	(i2printf@val+3)& (0+255),f,b
 14693  010DD0                     i2l972:
 14694                           
 14695                           ; BSR set to: 0
 14696                           ;doprnt.c: 1264: }
 14697                           ;doprnt.c: 1266: }
 14698                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 14699                           
 14700                           ; BSR set to: 0
 14701  010DD0  0E01               	movlw	1
 14702  010DD2  6F76               	movwf	i2printf@c& (0+255),b
 14703  010DD4                     i2l5810:
 14704                           
 14705                           ; BSR set to: 0
 14706  010DD4  0E0A               	movlw	10
 14707  010DD6  1976               	xorwf	i2printf@c& (0+255),w,b
 14708  010DD8  B4D8               	btfsc	status,2,c
 14709  010DDA  D01B               	goto	i2u603_40
 14710                           
 14711                           ; BSR set to: 0
 14712                           ;doprnt.c: 1306: if(val < dpowers[c])
 14713                           
 14714                           ; BSR set to: 0
 14715                           
 14716                           ; BSR set to: 0
 14717  010DDC  5176               	movf	i2printf@c& (0+255),w,b
 14718  010DDE  0D04               	mullw	4
 14719  010DE0  0E79               	movlw	low _dpowers
 14720  010DE2  24F3               	addwf	prodl,w,c
 14721  010DE4  6EF6               	movwf	tblptrl,c
 14722  010DE6  0EF9               	movlw	high _dpowers
 14723  010DE8  20F4               	addwfc	prodh,w,c
 14724  010DEA  6EF7               	movwf	tblptrh,c
 14725  010DEC                     	if	1	;There are 3 active tblptr bytes
 14726  010DEC  6AF8               	clrf	tblptru,c
 14727  010DEE  0E00               	movlw	low (__mediumconst shr (0+16))
 14728  010DF0  22F8               	addwfc	tblptru,f,c
 14729  010DF2                     	endif
 14730  010DF2  0009               	tblrd		*+
 14731  010DF4  50F5               	movf	tablat,w,c
 14732  010DF6  5D69               	subwf	i2printf@val& (0+255),w,b
 14733  010DF8  0009               	tblrd		*+
 14734  010DFA  50F5               	movf	tablat,w,c
 14735  010DFC  596A               	subwfb	(i2printf@val+1)& (0+255),w,b
 14736  010DFE  0009               	tblrd		*+
 14737  010E00  50F5               	movf	tablat,w,c
 14738  010E02  596B               	subwfb	(i2printf@val+2)& (0+255),w,b
 14739  010E04  0009               	tblrd		*+
 14740  010E06  50F5               	movf	tablat,w,c
 14741  010E08  596C               	subwfb	(i2printf@val+3)& (0+255),w,b
 14742  010E0A  A0D8               	btfss	status,0,c
 14743  010E0C  D002               	goto	i2u603_40
 14744                           
 14745                           ; BSR set to: 0
 14746                           
 14747                           ; BSR set to: 0
 14748                           
 14749                           ; BSR set to: 0
 14750                           ;doprnt.c: 1307: break;
 14751  010E0E  2B76               	incf	i2printf@c& (0+255),f,b
 14752  010E10  D7E1               	goto	i2l5810
 14753  010E12                     i2u603_40:
 14754                           
 14755                           ; BSR set to: 0
 14756                           ;doprnt.c: 1422: {
 14757                           ;doprnt.c: 1438: if(flag & 0x03)
 14758                           
 14759                           ; BSR set to: 0
 14760  010E12  0E03               	movlw	3
 14761  010E14  1565               	andwf	i2printf@flag& (0+255),w,b
 14762  010E16  6E4B               	movwf	??i2_printf& (0+255),c
 14763  010E18  0E00               	movlw	0
 14764  010E1A  1566               	andwf	(i2printf@flag+1)& (0+255),w,b
 14765  010E1C  6E4C               	movwf	(??i2_printf+1)& (0+255),c
 14766  010E1E  504B               	movf	??i2_printf,w,c
 14767  010E20  104C               	iorwf	??i2_printf+1,w,c
 14768  010E22  B4D8               	btfsc	status,2,c
 14769  010E24  D003               	goto	i2l976
 14770                           
 14771                           ; BSR set to: 0
 14772                           ;doprnt.c: 1439: (putch('-') );
 14773  010E26  0E2D               	movlw	45
 14774  010E28  EC14  F0A3         	call	i2_putch
 14775  010E2C                     i2l976:
 14776                           
 14777                           ;doprnt.c: 1469: }
 14778                           ;doprnt.c: 1472: prec = c;
 14779  010E2C  0100               	movlb	0	; () banked
 14780  010E2E  5176               	movf	i2printf@c& (0+255),w,b
 14781  010E30  6F67               	movwf	i2printf@prec& (0+255),b
 14782  010E32  6B68               	clrf	(i2printf@prec+1)& (0+255),b
 14783  010E34  BF67               	btfsc	i2printf@prec& (0+255),7,b
 14784  010E36  0768               	decf	(i2printf@prec+1)& (0+255),f,b
 14785                           
 14786                           ;doprnt.c: 1474: while(prec--) {
 14787  010E38  D042               	goto	i2l977
 14788  010E3A                     i2l5828:
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;doprnt.c: 1478: {
 14792                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14793  010E3A  C067  F04B         	movff	i2printf@prec,??i2_printf
 14794  010E3E  C068  F04C         	movff	i2printf@prec+1,??i2_printf+1
 14795  010E42  90D8               	bcf	status,0,c
 14796  010E44  364B               	rlcf	??i2_printf,f,c
 14797  010E46  364C               	rlcf	??i2_printf+1,f,c
 14798  010E48  90D8               	bcf	status,0,c
 14799  010E4A  364B               	rlcf	??i2_printf,f,c
 14800  010E4C  364C               	rlcf	??i2_printf+1,f,c
 14801  010E4E  0E79               	movlw	low _dpowers
 14802  010E50  244B               	addwf	??i2_printf,w,c
 14803  010E52  6EF6               	movwf	tblptrl,c
 14804  010E54  0EF9               	movlw	high _dpowers
 14805  010E56  204C               	addwfc	??i2_printf+1,w,c
 14806  010E58  6EF7               	movwf	tblptrh,c
 14807  010E5A                     	if	1	;There are 3 active tblptr bytes
 14808  010E5A  6AF8               	clrf	tblptru,c
 14809  010E5C  0E00               	movlw	low (__mediumconst shr (0+16))
 14810  010E5E  22F8               	addwfc	tblptru,f,c
 14811  010E60                     	endif
 14812  010E60  0009               	tblrd		*+
 14813  010E62  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 14814  010E66  0009               	tblrd		*+
 14815  010E68  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 14816  010E6C  0009               	tblrd		*+
 14817  010E6E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 14818  010E72  000A               	tblrd		*-
 14819  010E74  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 14820  010E78  C069  F001         	movff	i2printf@val,i2___lldiv@dividend
 14821  010E7C  C06A  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 14822  010E80  C06B  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 14823  010E84  C06C  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 14824  010E88  ECA0  F09D         	call	i2___lldiv	;wreg free
 14825  010E8C  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 14826  010E90  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 14827  010E94  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 14828  010E98  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 14829  010E9C  0E0A               	movlw	10
 14830  010E9E  6E12               	movwf	i2___llmod@divisor,c
 14831  010EA0  0E00               	movlw	0
 14832  010EA2  6E13               	movwf	i2___llmod@divisor+1,c
 14833  010EA4  0E00               	movlw	0
 14834  010EA6  6E14               	movwf	i2___llmod@divisor+2,c
 14835  010EA8  0E00               	movlw	0
 14836  010EAA  6E15               	movwf	i2___llmod@divisor+3,c
 14837  010EAC  EC2D  F09F         	call	i2___llmod	;wreg free
 14838  010EB0  500E               	movf	?i2___llmod,w,c
 14839  010EB2  0F30               	addlw	48
 14840  010EB4  0100               	movlb	0	; () banked
 14841  010EB6  6F76               	movwf	i2printf@c& (0+255),b
 14842                           
 14843                           ; BSR set to: 0
 14844                           ;doprnt.c: 1523: }
 14845                           ;doprnt.c: 1524: (putch(c) );
 14846  010EB8  5176               	movf	i2printf@c& (0+255),w,b
 14847  010EBA  EC14  F0A3         	call	i2_putch
 14848  010EBE                     i2l977:
 14849  010EBE  0100               	movlb	0	; () banked
 14850  010EC0  0767               	decf	i2printf@prec& (0+255),f,b
 14851  010EC2  A0D8               	btfss	status,0,c
 14852  010EC4  0768               	decf	(i2printf@prec+1)& (0+255),f,b
 14853  010EC6  2967               	incf	i2printf@prec& (0+255),w,b
 14854  010EC8  E1B8               	bnz	i2l5828
 14855  010ECA  2968               	incf	(i2printf@prec+1)& (0+255),w,b
 14856  010ECC  A4D8               	btfss	status,2,c
 14857  010ECE  D7B5               	goto	i2l978
 14858  010ED0                     i2u605_40:
 14859                           
 14860                           ; BSR set to: 0
 14861                           
 14862                           ; BSR set to: 0
 14863  010ED0  5049               	movf	i2printf@f,w,c
 14864  010ED2  6E4B               	movwf	??i2_printf& (0+255),c
 14865  010ED4  504A               	movf	i2printf@f+1,w,c
 14866  010ED6  6E4C               	movwf	(??i2_printf+1)& (0+255),c
 14867  010ED8  4A49               	infsnz	i2printf@f,f,c
 14868  010EDA  2A4A               	incf	i2printf@f+1,f,c
 14869  010EDC  C04B  FFF6         	movff	??i2_printf,tblptrl
 14870  010EE0  C04C  FFF7         	movff	??i2_printf+1,tblptrh
 14871  010EE4  0E00               	movlw	low (__mediumconst shr (0+16))
 14872  010EE6  6EF8               	movwf	tblptru,c
 14873  010EE8  0E0D               	movlw	(high __ramtop+-1)
 14874  010EEA  64F7               	cpfsgt	tblptrh,c
 14875  010EEC  D003               	bra	i2u606_47
 14876  010EEE  0008               	tblrd		*
 14877  010EF0  50F5               	movf	tablat,w,c
 14878  010EF2  D005               	bra	i2u606_40
 14879  010EF4                     i2u606_47:
 14880  010EF4  CFF6 FFD9          	movff	tblptrl,fsr2l
 14881  010EF8  CFF7 FFDA          	movff	tblptrh,fsr2h
 14882  010EFC  50DF               	movf	indf2,w,c
 14883  010EFE                     i2u606_40:
 14884  010EFE  0100               	movlb	0	; () banked
 14885  010F00  6F76               	movwf	i2printf@c& (0+255),b
 14886  010F02  5176               	movf	i2printf@c& (0+255),w,b
 14887  010F04  B4D8               	btfsc	status,2,c
 14888  010F06  0012               	return	
 14889  010F08  D449               	goto	i2l925
 14890  010F0A                     __end_ofi2_printf:
 14891                           	opt stack 0
 14892                           tosu	equ	0xFFF
 14893                           tosh	equ	0xFFE
 14894                           tosl	equ	0xFFD
 14895                           pclatu	equ	0xFFB
 14896                           pclath	equ	0xFFA
 14897                           tblptru	equ	0xFF8
 14898                           tblptrh	equ	0xFF7
 14899                           tblptrl	equ	0xFF6
 14900                           tablat	equ	0xFF5
 14901                           prodh	equ	0xFF4
 14902                           prodl	equ	0xFF3
 14903                           intcon	equ	0xFF2
 14904                           postinc0	equ	0xFEE
 14905                           fsr0h	equ	0xFEA
 14906                           fsr0l	equ	0xFE9
 14907                           wreg	equ	0xFE8
 14908                           fsr1h	equ	0xFE2
 14909                           fsr1l	equ	0xFE1
 14910                           bsr	equ	0xFE0
 14911                           indf2	equ	0xFDF
 14912                           postinc2	equ	0xFDE
 14913                           postdec2	equ	0xFDD
 14914                           fsr2h	equ	0xFDA
 14915                           fsr2l	equ	0xFD9
 14916                           status	equ	0xFD8
 14917                           
 14918 ;; *************** function i2_scale *****************
 14919 ;; Defined at:
 14920 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 14921 ;; Parameters:    Size  Location     Type
 14922 ;;  scl             1    wreg     char 
 14923 ;; Auto vars:     Size  Location     Type
 14924 ;;  scl             1   50[COMRAM] char 
 14925 ;; Return value:  Size  Location     Type
 14926 ;;                  3   44[COMRAM] char 
 14927 ;; Registers used:
 14928 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14929 ;; Tracked objects:
 14930 ;;		On entry : 0/0
 14931 ;;		On exit  : 0/0
 14932 ;;		Unchanged: 0/0
 14933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14934 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14935 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14937 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14938 ;;Total ram usage:        7 bytes
 14939 ;; Hardware stack levels used:    1
 14940 ;; Hardware stack levels required when called:    2
 14941 ;; This function calls:
 14942 ;;		i2___awdiv
 14943 ;;		i2___awmod
 14944 ;;		i2___ftmul
 14945 ;;		i2___wmul
 14946 ;; This function is called by:
 14947 ;;		i2_printf
 14948 ;; This function uses a non-reentrant model
 14949 ;;
 14950                           
 14951                           	psect	text62
 14952  0113AE                     __ptext62:
 14953                           	opt stack 0
 14954  0113AE                     i2_scale:
 14955                           	opt stack 13
 14956                           
 14957                           ; BSR set to: 0
 14958                           ;incstack = 0
 14959                           ;i2scale@scl stored from wreg
 14960  0113AE  6E33               	movwf	i2scale@scl,c
 14961                           
 14962                           ;doprnt.c: 428: if(scl < 0) {
 14963  0113B0  AE33               	btfss	i2scale@scl,7,c
 14964  0113B2  D113               	goto	i2l914
 14965                           
 14966                           ;doprnt.c: 429: scl = -scl;
 14967  0113B4  6C33               	negf	i2scale@scl,c
 14968                           
 14969                           ;doprnt.c: 430: if(scl>=110)
 14970  0113B6  5033               	movf	i2scale@scl,w,c
 14971  0113B8  0A80               	xorlw	128
 14972  0113BA  0F12               	addlw	-238
 14973  0113BC  A0D8               	btfss	status,0,c
 14974  0113BE  D09A               	goto	i2l915
 14975                           
 14976                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14977  0113C0  0E00               	movlw	0
 14978  0113C2  6E12               	movwf	i2___wmul@multiplicand+1,c
 14979  0113C4  0E03               	movlw	3
 14980  0113C6  6E11               	movwf	i2___wmul@multiplicand,c
 14981  0113C8  0E00               	movlw	0
 14982  0113CA  6E0A               	movwf	i2___awdiv@divisor+1,c
 14983  0113CC  0E0A               	movlw	10
 14984  0113CE  6E09               	movwf	i2___awdiv@divisor,c
 14985  0113D0  0E00               	movlw	0
 14986  0113D2  6E04               	movwf	i2___awmod@divisor+1,c
 14987  0113D4  0E64               	movlw	100
 14988  0113D6  6E03               	movwf	i2___awmod@divisor,c
 14989  0113D8  5033               	movf	i2scale@scl,w,c
 14990  0113DA  6E01               	movwf	i2___awmod@dividend,c
 14991  0113DC  6A02               	clrf	i2___awmod@dividend+1,c
 14992  0113DE  BE01               	btfsc	i2___awmod@dividend,7,c
 14993  0113E0  0602               	decf	i2___awmod@dividend+1,f,c
 14994  0113E2  EC54  F09E         	call	i2___awmod	;wreg free
 14995  0113E6  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 14996  0113EA  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 14997  0113EE  EC5E  F09D         	call	i2___awdiv	;wreg free
 14998  0113F2  0E09               	movlw	9
 14999  0113F4  2407               	addwf	?i2___awdiv,w,c
 15000  0113F6  6E0F               	movwf	i2___wmul@multiplier,c
 15001  0113F8  0E00               	movlw	0
 15002  0113FA  2008               	addwfc	?i2___awdiv+1,w,c
 15003  0113FC  6E10               	movwf	i2___wmul@multiplier+1,c
 15004  0113FE  EC44  F0A2         	call	i2___wmul	;wreg free
 15005  011402  0EC8               	movlw	low __npowers_
 15006  011404  240F               	addwf	?i2___wmul,w,c
 15007  011406  6EF6               	movwf	tblptrl,c
 15008  011408  0EF9               	movlw	high __npowers_
 15009  01140A  2010               	addwfc	?i2___wmul+1,w,c
 15010  01140C  6EF7               	movwf	tblptrh,c
 15011  01140E                     	if	1	;There are 3 active tblptr bytes
 15012  01140E  6AF8               	clrf	tblptru,c
 15013  011410  0E00               	movlw	low (__mediumconst shr (0+16))
 15014  011412  22F8               	addwfc	tblptru,f,c
 15015  011414                     	endif
 15016  011414  0009               	tblrd		*+
 15017  011416  CFF5 F021          	movff	tablat,i2___ftmul@f2
 15018  01141A  0009               	tblrd		*+
 15019  01141C  CFF5 F022          	movff	tablat,i2___ftmul@f2+1
 15020  011420  000A               	tblrd		*-
 15021  011422  CFF5 F023          	movff	tablat,i2___ftmul@f2+2
 15022  011426  0E00               	movlw	0
 15023  011428  6E0A               	movwf	i2___awdiv@divisor+1,c
 15024  01142A  0E64               	movlw	100
 15025  01142C  6E09               	movwf	i2___awdiv@divisor,c
 15026  01142E  5033               	movf	i2scale@scl,w,c
 15027  011430  6E07               	movwf	i2___awdiv@dividend,c
 15028  011432  6A08               	clrf	i2___awdiv@dividend+1,c
 15029  011434  BE07               	btfsc	i2___awdiv@dividend,7,c
 15030  011436  0608               	decf	i2___awdiv@dividend+1,f,c
 15031  011438  EC5E  F09D         	call	i2___awdiv	;wreg free
 15032  01143C  0E12               	movlw	18
 15033  01143E  2407               	addwf	?i2___awdiv,w,c
 15034  011440  6E0F               	movwf	i2___wmul@multiplier,c
 15035  011442  0E00               	movlw	0
 15036  011444  2008               	addwfc	?i2___awdiv+1,w,c
 15037  011446  6E10               	movwf	i2___wmul@multiplier+1,c
 15038  011448  0E00               	movlw	0
 15039  01144A  6E12               	movwf	i2___wmul@multiplicand+1,c
 15040  01144C  0E03               	movlw	3
 15041  01144E  6E11               	movwf	i2___wmul@multiplicand,c
 15042  011450  EC44  F0A2         	call	i2___wmul	;wreg free
 15043  011454  0EC8               	movlw	low __npowers_
 15044  011456  240F               	addwf	?i2___wmul,w,c
 15045  011458  6EF6               	movwf	tblptrl,c
 15046  01145A  0EF9               	movlw	high __npowers_
 15047  01145C  2010               	addwfc	?i2___wmul+1,w,c
 15048  01145E  6EF7               	movwf	tblptrh,c
 15049  011460                     	if	1	;There are 3 active tblptr bytes
 15050  011460  6AF8               	clrf	tblptru,c
 15051  011462  0E00               	movlw	low (__mediumconst shr (0+16))
 15052  011464  22F8               	addwfc	tblptru,f,c
 15053  011466                     	endif
 15054  011466  0009               	tblrd		*+
 15055  011468  CFF5 F01E          	movff	tablat,i2___ftmul@f1
 15056  01146C  0009               	tblrd		*+
 15057  01146E  CFF5 F01F          	movff	tablat,i2___ftmul@f1+1
 15058  011472  000A               	tblrd		*-
 15059  011474  CFF5 F020          	movff	tablat,i2___ftmul@f1+2
 15060  011478  EC88  F099         	call	i2___ftmul	;wreg free
 15061  01147C  C01E  F030         	movff	?i2___ftmul,i2_scale$2785
 15062  011480  C01F  F031         	movff	?i2___ftmul+1,i2_scale$2785+1
 15063  011484  C020  F032         	movff	?i2___ftmul+2,i2_scale$2785+2
 15064                           
 15065                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 15066  011488  C030  F01E         	movff	i2_scale$2785,i2___ftmul@f1
 15067  01148C  C031  F01F         	movff	i2_scale$2785+1,i2___ftmul@f1+1
 15068  011490  C032  F020         	movff	i2_scale$2785+2,i2___ftmul@f1+2
 15069  011494  0E00               	movlw	0
 15070  011496  6E12               	movwf	i2___wmul@multiplicand+1,c
 15071  011498  0E03               	movlw	3
 15072  01149A  6E11               	movwf	i2___wmul@multiplicand,c
 15073  01149C  0E00               	movlw	0
 15074  01149E  6E04               	movwf	i2___awmod@divisor+1,c
 15075  0114A0  0E0A               	movlw	10
 15076  0114A2  6E03               	movwf	i2___awmod@divisor,c
 15077  0114A4  5033               	movf	i2scale@scl,w,c
 15078  0114A6  6E01               	movwf	i2___awmod@dividend,c
 15079  0114A8  6A02               	clrf	i2___awmod@dividend+1,c
 15080  0114AA  BE01               	btfsc	i2___awmod@dividend,7,c
 15081  0114AC  0602               	decf	i2___awmod@dividend+1,f,c
 15082  0114AE  EC54  F09E         	call	i2___awmod	;wreg free
 15083  0114B2  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15084  0114B6  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15085  0114BA  EC44  F0A2         	call	i2___wmul	;wreg free
 15086  0114BE  0EC8               	movlw	low __npowers_
 15087  0114C0  240F               	addwf	?i2___wmul,w,c
 15088  0114C2  6EF6               	movwf	tblptrl,c
 15089  0114C4  0EF9               	movlw	high __npowers_
 15090  0114C6  2010               	addwfc	?i2___wmul+1,w,c
 15091  0114C8  6EF7               	movwf	tblptrh,c
 15092  0114CA                     	if	1	;There are 3 active tblptr bytes
 15093  0114CA  6AF8               	clrf	tblptru,c
 15094  0114CC  0E00               	movlw	low (__mediumconst shr (0+16))
 15095  0114CE  22F8               	addwfc	tblptru,f,c
 15096  0114D0                     	endif
 15097  0114D0  0009               	tblrd		*+
 15098  0114D2  CFF5 F021          	movff	tablat,i2___ftmul@f2
 15099  0114D6  0009               	tblrd		*+
 15100  0114D8  CFF5 F022          	movff	tablat,i2___ftmul@f2+1
 15101  0114DC  000A               	tblrd		*-
 15102  0114DE  CFF5 F023          	movff	tablat,i2___ftmul@f2+2
 15103  0114E2  EC88  F099         	call	i2___ftmul	;wreg free
 15104  0114E6  C01E  F02D         	movff	?i2___ftmul,?i2_scale
 15105  0114EA  C01F  F02E         	movff	?i2___ftmul+1,?i2_scale+1
 15106  0114EE  C020  F02F         	movff	?i2___ftmul+2,?i2_scale+2
 15107  0114F2  0012               	return	
 15108  0114F4                     i2l915:
 15109                           
 15110                           ;doprnt.c: 432: else if(scl > 10)
 15111  0114F4  5033               	movf	i2scale@scl,w,c
 15112  0114F6  0A80               	xorlw	128
 15113  0114F8  0F75               	addlw	-139
 15114  0114FA  A0D8               	btfss	status,0,c
 15115  0114FC  D059               	goto	i2l918
 15116                           
 15117                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 15118  0114FE  0E00               	movlw	0
 15119  011500  6E0A               	movwf	i2___awdiv@divisor+1,c
 15120  011502  0E0A               	movlw	10
 15121  011504  6E09               	movwf	i2___awdiv@divisor,c
 15122  011506  5033               	movf	i2scale@scl,w,c
 15123  011508  6E07               	movwf	i2___awdiv@dividend,c
 15124  01150A  6A08               	clrf	i2___awdiv@dividend+1,c
 15125  01150C  BE07               	btfsc	i2___awdiv@dividend,7,c
 15126  01150E  0608               	decf	i2___awdiv@dividend+1,f,c
 15127  011510  EC5E  F09D         	call	i2___awdiv	;wreg free
 15128  011514  0E09               	movlw	9
 15129  011516  2407               	addwf	?i2___awdiv,w,c
 15130  011518  6E0F               	movwf	i2___wmul@multiplier,c
 15131  01151A  0E00               	movlw	0
 15132  01151C  2008               	addwfc	?i2___awdiv+1,w,c
 15133  01151E  6E10               	movwf	i2___wmul@multiplier+1,c
 15134  011520  0E00               	movlw	0
 15135  011522  6E12               	movwf	i2___wmul@multiplicand+1,c
 15136  011524  0E03               	movlw	3
 15137  011526  6E11               	movwf	i2___wmul@multiplicand,c
 15138  011528  EC44  F0A2         	call	i2___wmul	;wreg free
 15139  01152C  0EC8               	movlw	low __npowers_
 15140  01152E  240F               	addwf	?i2___wmul,w,c
 15141  011530  6EF6               	movwf	tblptrl,c
 15142  011532  0EF9               	movlw	high __npowers_
 15143  011534  2010               	addwfc	?i2___wmul+1,w,c
 15144  011536  6EF7               	movwf	tblptrh,c
 15145  011538                     	if	1	;There are 3 active tblptr bytes
 15146  011538  6AF8               	clrf	tblptru,c
 15147  01153A  0E00               	movlw	low (__mediumconst shr (0+16))
 15148  01153C  22F8               	addwfc	tblptru,f,c
 15149  01153E                     	endif
 15150  01153E  0009               	tblrd		*+
 15151  011540  CFF5 F01E          	movff	tablat,i2___ftmul@f1
 15152  011544  0009               	tblrd		*+
 15153  011546  CFF5 F01F          	movff	tablat,i2___ftmul@f1+1
 15154  01154A  000A               	tblrd		*-
 15155  01154C  CFF5 F020          	movff	tablat,i2___ftmul@f1+2
 15156  011550  0E00               	movlw	0
 15157  011552  6E12               	movwf	i2___wmul@multiplicand+1,c
 15158  011554  0E03               	movlw	3
 15159  011556  6E11               	movwf	i2___wmul@multiplicand,c
 15160  011558  0E00               	movlw	0
 15161  01155A  6E04               	movwf	i2___awmod@divisor+1,c
 15162  01155C  0E0A               	movlw	10
 15163  01155E  6E03               	movwf	i2___awmod@divisor,c
 15164  011560  5033               	movf	i2scale@scl,w,c
 15165  011562  6E01               	movwf	i2___awmod@dividend,c
 15166  011564  6A02               	clrf	i2___awmod@dividend+1,c
 15167  011566  BE01               	btfsc	i2___awmod@dividend,7,c
 15168  011568  0602               	decf	i2___awmod@dividend+1,f,c
 15169  01156A  EC54  F09E         	call	i2___awmod	;wreg free
 15170  01156E  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15171  011572  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15172  011576  EC44  F0A2         	call	i2___wmul	;wreg free
 15173  01157A  0EC8               	movlw	low __npowers_
 15174  01157C  240F               	addwf	?i2___wmul,w,c
 15175  01157E  6EF6               	movwf	tblptrl,c
 15176  011580  0EF9               	movlw	high __npowers_
 15177  011582  2010               	addwfc	?i2___wmul+1,w,c
 15178  011584  6EF7               	movwf	tblptrh,c
 15179  011586                     	if	1	;There are 3 active tblptr bytes
 15180  011586  6AF8               	clrf	tblptru,c
 15181  011588  0E00               	movlw	low (__mediumconst shr (0+16))
 15182  01158A  22F8               	addwfc	tblptru,f,c
 15183  01158C                     	endif
 15184  01158C  0009               	tblrd		*+
 15185  01158E  CFF5 F021          	movff	tablat,i2___ftmul@f2
 15186  011592  0009               	tblrd		*+
 15187  011594  CFF5 F022          	movff	tablat,i2___ftmul@f2+1
 15188  011598  000A               	tblrd		*-
 15189  01159A  CFF5 F023          	movff	tablat,i2___ftmul@f2+2
 15190  01159E  EC88  F099         	call	i2___ftmul	;wreg free
 15191  0115A2  C01E  F02D         	movff	?i2___ftmul,?i2_scale
 15192  0115A6  C01F  F02E         	movff	?i2___ftmul+1,?i2_scale+1
 15193  0115AA  C020  F02F         	movff	?i2___ftmul+2,?i2_scale+2
 15194  0115AE  0012               	return	
 15195  0115B0                     i2l918:
 15196                           
 15197                           ;doprnt.c: 434: return _npowers_[scl];
 15198  0115B0  5033               	movf	i2scale@scl,w,c
 15199  0115B2  0D03               	mullw	3
 15200  0115B4  0EC8               	movlw	low __npowers_
 15201  0115B6  24F3               	addwf	prodl,w,c
 15202  0115B8  6EF6               	movwf	tblptrl,c
 15203  0115BA  0EF9               	movlw	high __npowers_
 15204  0115BC  20F4               	addwfc	prodh,w,c
 15205  0115BE  6EF7               	movwf	tblptrh,c
 15206  0115C0                     	if	1	;There are 3 active tblptr bytes
 15207  0115C0  6AF8               	clrf	tblptru,c
 15208  0115C2  0E00               	movlw	low (__mediumconst shr (0+16))
 15209  0115C4  22F8               	addwfc	tblptru,f,c
 15210  0115C6                     	endif
 15211  0115C6  0009               	tblrd		*+
 15212  0115C8  CFF5 F02D          	movff	tablat,?i2_scale
 15213  0115CC  0009               	tblrd		*+
 15214  0115CE  CFF5 F02E          	movff	tablat,?i2_scale+1
 15215  0115D2  000A               	tblrd		*-
 15216  0115D4  CFF5 F02F          	movff	tablat,?i2_scale+2
 15217  0115D8  0012               	return	
 15218  0115DA                     i2l914:
 15219                           
 15220                           ;doprnt.c: 435: }
 15221                           ;doprnt.c: 436: if(scl>=110)
 15222  0115DA  5033               	movf	i2scale@scl,w,c
 15223  0115DC  0A80               	xorlw	128
 15224  0115DE  0F12               	addlw	-238
 15225  0115E0  A0D8               	btfss	status,0,c
 15226  0115E2  D09A               	goto	i2l919
 15227                           
 15228                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 15229  0115E4  0E00               	movlw	0
 15230  0115E6  6E12               	movwf	i2___wmul@multiplicand+1,c
 15231  0115E8  0E03               	movlw	3
 15232  0115EA  6E11               	movwf	i2___wmul@multiplicand,c
 15233  0115EC  0E00               	movlw	0
 15234  0115EE  6E0A               	movwf	i2___awdiv@divisor+1,c
 15235  0115F0  0E0A               	movlw	10
 15236  0115F2  6E09               	movwf	i2___awdiv@divisor,c
 15237  0115F4  0E00               	movlw	0
 15238  0115F6  6E04               	movwf	i2___awmod@divisor+1,c
 15239  0115F8  0E64               	movlw	100
 15240  0115FA  6E03               	movwf	i2___awmod@divisor,c
 15241  0115FC  5033               	movf	i2scale@scl,w,c
 15242  0115FE  6E01               	movwf	i2___awmod@dividend,c
 15243  011600  6A02               	clrf	i2___awmod@dividend+1,c
 15244  011602  BE01               	btfsc	i2___awmod@dividend,7,c
 15245  011604  0602               	decf	i2___awmod@dividend+1,f,c
 15246  011606  EC54  F09E         	call	i2___awmod	;wreg free
 15247  01160A  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 15248  01160E  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 15249  011612  EC5E  F09D         	call	i2___awdiv	;wreg free
 15250  011616  0E09               	movlw	9
 15251  011618  2407               	addwf	?i2___awdiv,w,c
 15252  01161A  6E0F               	movwf	i2___wmul@multiplier,c
 15253  01161C  0E00               	movlw	0
 15254  01161E  2008               	addwfc	?i2___awdiv+1,w,c
 15255  011620  6E10               	movwf	i2___wmul@multiplier+1,c
 15256  011622  EC44  F0A2         	call	i2___wmul	;wreg free
 15257  011626  0EA1               	movlw	low __powers_
 15258  011628  240F               	addwf	?i2___wmul,w,c
 15259  01162A  6EF6               	movwf	tblptrl,c
 15260  01162C  0EF9               	movlw	high __powers_
 15261  01162E  2010               	addwfc	?i2___wmul+1,w,c
 15262  011630  6EF7               	movwf	tblptrh,c
 15263  011632                     	if	1	;There are 3 active tblptr bytes
 15264  011632  6AF8               	clrf	tblptru,c
 15265  011634  0E00               	movlw	low (__mediumconst shr (0+16))
 15266  011636  22F8               	addwfc	tblptru,f,c
 15267  011638                     	endif
 15268  011638  0009               	tblrd		*+
 15269  01163A  CFF5 F021          	movff	tablat,i2___ftmul@f2
 15270  01163E  0009               	tblrd		*+
 15271  011640  CFF5 F022          	movff	tablat,i2___ftmul@f2+1
 15272  011644  000A               	tblrd		*-
 15273  011646  CFF5 F023          	movff	tablat,i2___ftmul@f2+2
 15274  01164A  0E00               	movlw	0
 15275  01164C  6E0A               	movwf	i2___awdiv@divisor+1,c
 15276  01164E  0E64               	movlw	100
 15277  011650  6E09               	movwf	i2___awdiv@divisor,c
 15278  011652  5033               	movf	i2scale@scl,w,c
 15279  011654  6E07               	movwf	i2___awdiv@dividend,c
 15280  011656  6A08               	clrf	i2___awdiv@dividend+1,c
 15281  011658  BE07               	btfsc	i2___awdiv@dividend,7,c
 15282  01165A  0608               	decf	i2___awdiv@dividend+1,f,c
 15283  01165C  EC5E  F09D         	call	i2___awdiv	;wreg free
 15284  011660  0E12               	movlw	18
 15285  011662  2407               	addwf	?i2___awdiv,w,c
 15286  011664  6E0F               	movwf	i2___wmul@multiplier,c
 15287  011666  0E00               	movlw	0
 15288  011668  2008               	addwfc	?i2___awdiv+1,w,c
 15289  01166A  6E10               	movwf	i2___wmul@multiplier+1,c
 15290  01166C  0E00               	movlw	0
 15291  01166E  6E12               	movwf	i2___wmul@multiplicand+1,c
 15292  011670  0E03               	movlw	3
 15293  011672  6E11               	movwf	i2___wmul@multiplicand,c
 15294  011674  EC44  F0A2         	call	i2___wmul	;wreg free
 15295  011678  0EA1               	movlw	low __powers_
 15296  01167A  240F               	addwf	?i2___wmul,w,c
 15297  01167C  6EF6               	movwf	tblptrl,c
 15298  01167E  0EF9               	movlw	high __powers_
 15299  011680  2010               	addwfc	?i2___wmul+1,w,c
 15300  011682  6EF7               	movwf	tblptrh,c
 15301  011684                     	if	1	;There are 3 active tblptr bytes
 15302  011684  6AF8               	clrf	tblptru,c
 15303  011686  0E00               	movlw	low (__mediumconst shr (0+16))
 15304  011688  22F8               	addwfc	tblptru,f,c
 15305  01168A                     	endif
 15306  01168A  0009               	tblrd		*+
 15307  01168C  CFF5 F01E          	movff	tablat,i2___ftmul@f1
 15308  011690  0009               	tblrd		*+
 15309  011692  CFF5 F01F          	movff	tablat,i2___ftmul@f1+1
 15310  011696  000A               	tblrd		*-
 15311  011698  CFF5 F020          	movff	tablat,i2___ftmul@f1+2
 15312  01169C  EC88  F099         	call	i2___ftmul	;wreg free
 15313  0116A0  C01E  F030         	movff	?i2___ftmul,i2_scale$2785
 15314  0116A4  C01F  F031         	movff	?i2___ftmul+1,i2_scale$2785+1
 15315  0116A8  C020  F032         	movff	?i2___ftmul+2,i2_scale$2785+2
 15316                           
 15317                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 15318  0116AC  C030  F01E         	movff	i2_scale$2785,i2___ftmul@f1
 15319  0116B0  C031  F01F         	movff	i2_scale$2785+1,i2___ftmul@f1+1
 15320  0116B4  C032  F020         	movff	i2_scale$2785+2,i2___ftmul@f1+2
 15321  0116B8  0E00               	movlw	0
 15322  0116BA  6E12               	movwf	i2___wmul@multiplicand+1,c
 15323  0116BC  0E03               	movlw	3
 15324  0116BE  6E11               	movwf	i2___wmul@multiplicand,c
 15325  0116C0  0E00               	movlw	0
 15326  0116C2  6E04               	movwf	i2___awmod@divisor+1,c
 15327  0116C4  0E0A               	movlw	10
 15328  0116C6  6E03               	movwf	i2___awmod@divisor,c
 15329  0116C8  5033               	movf	i2scale@scl,w,c
 15330  0116CA  6E01               	movwf	i2___awmod@dividend,c
 15331  0116CC  6A02               	clrf	i2___awmod@dividend+1,c
 15332  0116CE  BE01               	btfsc	i2___awmod@dividend,7,c
 15333  0116D0  0602               	decf	i2___awmod@dividend+1,f,c
 15334  0116D2  EC54  F09E         	call	i2___awmod	;wreg free
 15335  0116D6  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15336  0116DA  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15337  0116DE  EC44  F0A2         	call	i2___wmul	;wreg free
 15338  0116E2  0EA1               	movlw	low __powers_
 15339  0116E4  240F               	addwf	?i2___wmul,w,c
 15340  0116E6  6EF6               	movwf	tblptrl,c
 15341  0116E8  0EF9               	movlw	high __powers_
 15342  0116EA  2010               	addwfc	?i2___wmul+1,w,c
 15343  0116EC  6EF7               	movwf	tblptrh,c
 15344  0116EE                     	if	1	;There are 3 active tblptr bytes
 15345  0116EE  6AF8               	clrf	tblptru,c
 15346  0116F0  0E00               	movlw	low (__mediumconst shr (0+16))
 15347  0116F2  22F8               	addwfc	tblptru,f,c
 15348  0116F4                     	endif
 15349  0116F4  0009               	tblrd		*+
 15350  0116F6  CFF5 F021          	movff	tablat,i2___ftmul@f2
 15351  0116FA  0009               	tblrd		*+
 15352  0116FC  CFF5 F022          	movff	tablat,i2___ftmul@f2+1
 15353  011700  000A               	tblrd		*-
 15354  011702  CFF5 F023          	movff	tablat,i2___ftmul@f2+2
 15355  011706  EC88  F099         	call	i2___ftmul	;wreg free
 15356  01170A  C01E  F02D         	movff	?i2___ftmul,?i2_scale
 15357  01170E  C01F  F02E         	movff	?i2___ftmul+1,?i2_scale+1
 15358  011712  C020  F02F         	movff	?i2___ftmul+2,?i2_scale+2
 15359  011716  0012               	return	
 15360  011718                     i2l919:
 15361                           
 15362                           ;doprnt.c: 438: else if(scl > 10)
 15363  011718  5033               	movf	i2scale@scl,w,c
 15364  01171A  0A80               	xorlw	128
 15365  01171C  0F75               	addlw	-139
 15366  01171E  A0D8               	btfss	status,0,c
 15367  011720  D059               	goto	i2l921
 15368                           
 15369                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 15370  011722  0E00               	movlw	0
 15371  011724  6E0A               	movwf	i2___awdiv@divisor+1,c
 15372  011726  0E0A               	movlw	10
 15373  011728  6E09               	movwf	i2___awdiv@divisor,c
 15374  01172A  5033               	movf	i2scale@scl,w,c
 15375  01172C  6E07               	movwf	i2___awdiv@dividend,c
 15376  01172E  6A08               	clrf	i2___awdiv@dividend+1,c
 15377  011730  BE07               	btfsc	i2___awdiv@dividend,7,c
 15378  011732  0608               	decf	i2___awdiv@dividend+1,f,c
 15379  011734  EC5E  F09D         	call	i2___awdiv	;wreg free
 15380  011738  0E09               	movlw	9
 15381  01173A  2407               	addwf	?i2___awdiv,w,c
 15382  01173C  6E0F               	movwf	i2___wmul@multiplier,c
 15383  01173E  0E00               	movlw	0
 15384  011740  2008               	addwfc	?i2___awdiv+1,w,c
 15385  011742  6E10               	movwf	i2___wmul@multiplier+1,c
 15386  011744  0E00               	movlw	0
 15387  011746  6E12               	movwf	i2___wmul@multiplicand+1,c
 15388  011748  0E03               	movlw	3
 15389  01174A  6E11               	movwf	i2___wmul@multiplicand,c
 15390  01174C  EC44  F0A2         	call	i2___wmul	;wreg free
 15391  011750  0EA1               	movlw	low __powers_
 15392  011752  240F               	addwf	?i2___wmul,w,c
 15393  011754  6EF6               	movwf	tblptrl,c
 15394  011756  0EF9               	movlw	high __powers_
 15395  011758  2010               	addwfc	?i2___wmul+1,w,c
 15396  01175A  6EF7               	movwf	tblptrh,c
 15397  01175C                     	if	1	;There are 3 active tblptr bytes
 15398  01175C  6AF8               	clrf	tblptru,c
 15399  01175E  0E00               	movlw	low (__mediumconst shr (0+16))
 15400  011760  22F8               	addwfc	tblptru,f,c
 15401  011762                     	endif
 15402  011762  0009               	tblrd		*+
 15403  011764  CFF5 F01E          	movff	tablat,i2___ftmul@f1
 15404  011768  0009               	tblrd		*+
 15405  01176A  CFF5 F01F          	movff	tablat,i2___ftmul@f1+1
 15406  01176E  000A               	tblrd		*-
 15407  011770  CFF5 F020          	movff	tablat,i2___ftmul@f1+2
 15408  011774  0E00               	movlw	0
 15409  011776  6E12               	movwf	i2___wmul@multiplicand+1,c
 15410  011778  0E03               	movlw	3
 15411  01177A  6E11               	movwf	i2___wmul@multiplicand,c
 15412  01177C  0E00               	movlw	0
 15413  01177E  6E04               	movwf	i2___awmod@divisor+1,c
 15414  011780  0E0A               	movlw	10
 15415  011782  6E03               	movwf	i2___awmod@divisor,c
 15416  011784  5033               	movf	i2scale@scl,w,c
 15417  011786  6E01               	movwf	i2___awmod@dividend,c
 15418  011788  6A02               	clrf	i2___awmod@dividend+1,c
 15419  01178A  BE01               	btfsc	i2___awmod@dividend,7,c
 15420  01178C  0602               	decf	i2___awmod@dividend+1,f,c
 15421  01178E  EC54  F09E         	call	i2___awmod	;wreg free
 15422  011792  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15423  011796  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15424  01179A  EC44  F0A2         	call	i2___wmul	;wreg free
 15425  01179E  0EA1               	movlw	low __powers_
 15426  0117A0  240F               	addwf	?i2___wmul,w,c
 15427  0117A2  6EF6               	movwf	tblptrl,c
 15428  0117A4  0EF9               	movlw	high __powers_
 15429  0117A6  2010               	addwfc	?i2___wmul+1,w,c
 15430  0117A8  6EF7               	movwf	tblptrh,c
 15431  0117AA                     	if	1	;There are 3 active tblptr bytes
 15432  0117AA  6AF8               	clrf	tblptru,c
 15433  0117AC  0E00               	movlw	low (__mediumconst shr (0+16))
 15434  0117AE  22F8               	addwfc	tblptru,f,c
 15435  0117B0                     	endif
 15436  0117B0  0009               	tblrd		*+
 15437  0117B2  CFF5 F021          	movff	tablat,i2___ftmul@f2
 15438  0117B6  0009               	tblrd		*+
 15439  0117B8  CFF5 F022          	movff	tablat,i2___ftmul@f2+1
 15440  0117BC  000A               	tblrd		*-
 15441  0117BE  CFF5 F023          	movff	tablat,i2___ftmul@f2+2
 15442  0117C2  EC88  F099         	call	i2___ftmul	;wreg free
 15443  0117C6  C01E  F02D         	movff	?i2___ftmul,?i2_scale
 15444  0117CA  C01F  F02E         	movff	?i2___ftmul+1,?i2_scale+1
 15445  0117CE  C020  F02F         	movff	?i2___ftmul+2,?i2_scale+2
 15446  0117D2  0012               	return	
 15447  0117D4                     i2l921:
 15448                           
 15449                           ;doprnt.c: 440: return _powers_[scl];
 15450  0117D4  5033               	movf	i2scale@scl,w,c
 15451  0117D6  0D03               	mullw	3
 15452  0117D8  0EA1               	movlw	low __powers_
 15453  0117DA  24F3               	addwf	prodl,w,c
 15454  0117DC  6EF6               	movwf	tblptrl,c
 15455  0117DE  0EF9               	movlw	high __powers_
 15456  0117E0  20F4               	addwfc	prodh,w,c
 15457  0117E2  6EF7               	movwf	tblptrh,c
 15458  0117E4                     	if	1	;There are 3 active tblptr bytes
 15459  0117E4  6AF8               	clrf	tblptru,c
 15460  0117E6  0E00               	movlw	low (__mediumconst shr (0+16))
 15461  0117E8  22F8               	addwfc	tblptru,f,c
 15462  0117EA                     	endif
 15463  0117EA  0009               	tblrd		*+
 15464  0117EC  CFF5 F02D          	movff	tablat,?i2_scale
 15465  0117F0  0009               	tblrd		*+
 15466  0117F2  CFF5 F02E          	movff	tablat,?i2_scale+1
 15467  0117F6  000A               	tblrd		*-
 15468  0117F8  CFF5 F02F          	movff	tablat,?i2_scale+2
 15469  0117FC  0012               	return	
 15470  0117FE                     __end_ofi2_scale:
 15471                           	opt stack 0
 15472                           tosu	equ	0xFFF
 15473                           tosh	equ	0xFFE
 15474                           tosl	equ	0xFFD
 15475                           pclatu	equ	0xFFB
 15476                           pclath	equ	0xFFA
 15477                           tblptru	equ	0xFF8
 15478                           tblptrh	equ	0xFF7
 15479                           tblptrl	equ	0xFF6
 15480                           tablat	equ	0xFF5
 15481                           prodh	equ	0xFF4
 15482                           prodl	equ	0xFF3
 15483                           intcon	equ	0xFF2
 15484                           postinc0	equ	0xFEE
 15485                           fsr0h	equ	0xFEA
 15486                           fsr0l	equ	0xFE9
 15487                           wreg	equ	0xFE8
 15488                           fsr1h	equ	0xFE2
 15489                           fsr1l	equ	0xFE1
 15490                           bsr	equ	0xFE0
 15491                           indf2	equ	0xFDF
 15492                           postinc2	equ	0xFDE
 15493                           postdec2	equ	0xFDD
 15494                           fsr2h	equ	0xFDA
 15495                           fsr2l	equ	0xFD9
 15496                           status	equ	0xFD8
 15497                           
 15498 ;; *************** function i2_putch *****************
 15499 ;; Defined at:
 15500 ;;		line 180 in file "mcc_generated_files/eusart2.c"
 15501 ;; Parameters:    Size  Location     Type
 15502 ;;  txData          1    wreg     unsigned char 
 15503 ;; Auto vars:     Size  Location     Type
 15504 ;;  txData          1    1[COMRAM] unsigned char 
 15505 ;; Return value:  Size  Location     Type
 15506 ;;                  1    wreg      void 
 15507 ;; Registers used:
 15508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15509 ;; Tracked objects:
 15510 ;;		On entry : 0/0
 15511 ;;		On exit  : 0/0
 15512 ;;		Unchanged: 0/0
 15513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15515 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15517 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15518 ;;Total ram usage:        1 bytes
 15519 ;; Hardware stack levels used:    1
 15520 ;; Hardware stack levels required when called:    1
 15521 ;; This function calls:
 15522 ;;		i2_EUSART2_Write
 15523 ;; This function is called by:
 15524 ;;		i2_printf
 15525 ;; This function uses a non-reentrant model
 15526 ;;
 15527                           
 15528                           	psect	text63
 15529  014628                     __ptext63:
 15530                           	opt stack 0
 15531  014628                     i2_putch:
 15532                           	opt stack 14
 15533                           
 15534                           ;incstack = 0
 15535                           ;i2putch@txData stored from wreg
 15536  014628  6E02               	movwf	i2putch@txData,c
 15537                           
 15538                           ;eusart2.c: 182: EUSART2_Write(txData);
 15539  01462A  5002               	movf	i2putch@txData,w,c
 15540  01462C  ECB7  F0A0         	call	i2_EUSART2_Write
 15541  014630  0012               	return		;funcret
 15542  014632                     __end_ofi2_putch:
 15543                           	opt stack 0
 15544                           tosu	equ	0xFFF
 15545                           tosh	equ	0xFFE
 15546                           tosl	equ	0xFFD
 15547                           pclatu	equ	0xFFB
 15548                           pclath	equ	0xFFA
 15549                           tblptru	equ	0xFF8
 15550                           tblptrh	equ	0xFF7
 15551                           tblptrl	equ	0xFF6
 15552                           tablat	equ	0xFF5
 15553                           prodh	equ	0xFF4
 15554                           prodl	equ	0xFF3
 15555                           intcon	equ	0xFF2
 15556                           postinc0	equ	0xFEE
 15557                           fsr0h	equ	0xFEA
 15558                           fsr0l	equ	0xFE9
 15559                           wreg	equ	0xFE8
 15560                           fsr1h	equ	0xFE2
 15561                           fsr1l	equ	0xFE1
 15562                           bsr	equ	0xFE0
 15563                           indf2	equ	0xFDF
 15564                           postinc2	equ	0xFDE
 15565                           postdec2	equ	0xFDD
 15566                           fsr2h	equ	0xFDA
 15567                           fsr2l	equ	0xFD9
 15568                           status	equ	0xFD8
 15569                           
 15570 ;; *************** function i2_EUSART2_Write *****************
 15571 ;; Defined at:
 15572 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 15573 ;; Parameters:    Size  Location     Type
 15574 ;;  txData          1    wreg     unsigned char 
 15575 ;; Auto vars:     Size  Location     Type
 15576 ;;  txData          1    0[COMRAM] unsigned char 
 15577 ;; Return value:  Size  Location     Type
 15578 ;;                  1    wreg      void 
 15579 ;; Registers used:
 15580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15581 ;; Tracked objects:
 15582 ;;		On entry : 0/0
 15583 ;;		On exit  : 0/0
 15584 ;;		Unchanged: 0/0
 15585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15590 ;;Total ram usage:        1 bytes
 15591 ;; Hardware stack levels used:    1
 15592 ;; This function calls:
 15593 ;;		Nothing
 15594 ;; This function is called by:
 15595 ;;		i2_putch
 15596 ;; This function uses a non-reentrant model
 15597 ;;
 15598                           
 15599                           	psect	text64
 15600  01416E                     __ptext64:
 15601                           	opt stack 0
 15602  01416E                     i2_EUSART2_Write:
 15603                           	opt stack 14
 15604                           
 15605                           ;incstack = 0
 15606                           ;i2EUSART2_Write@txData stored from wreg
 15607  01416E  6E01               	movwf	i2EUSART2_Write@txData,c
 15608                           
 15609                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
 15610  014170  D001               	goto	i2l368
 15611  014172                     i2l369:
 15612                           
 15613                           ; BSR set to: 0
 15614  014172  0004               	clrwdt		;# 
 15615  014174                     i2l368:
 15616  014174  0100               	movlb	0	; () banked
 15617  014176  51B9               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 15618  014178  B4D8               	btfsc	status,2,c
 15619  01417A  D7FB               	goto	i2l369
 15620                           
 15621                           ; BSR set to: 0
 15622                           ;eusart2.c: 156: }
 15623                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
 15624  01417C  010E               	movlb	14	; () banked
 15625  01417E  BD2C               	btfsc	44,6,b	;volatile
 15626  014180  D003               	goto	i2l371
 15627                           
 15628                           ; BSR set to: 14
 15629                           ;eusart2.c: 159: {
 15630                           ;eusart2.c: 160: TX2REG = txData;
 15631  014182  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 15632                           
 15633                           ;eusart2.c: 161: }
 15634  014186  D013               	goto	i2l372
 15635  014188                     i2l371:
 15636                           
 15637                           ; BSR set to: 14
 15638                           ;eusart2.c: 162: else
 15639                           ;eusart2.c: 163: {
 15640                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
 15641  014188  9D2C               	bcf	44,6,b	;volatile
 15642                           
 15643                           ; BSR set to: 14
 15644                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
 15645  01418A  0100               	movlb	0	; () banked
 15646  01418C  51BB               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 15647  01418E  0D01               	mullw	1
 15648  014190  0E00               	movlw	low _eusart2TxBuffer
 15649  014192  24F3               	addwf	prodl,w,c
 15650  014194  6ED9               	movwf	fsr2l,c
 15651  014196  0E02               	movlw	high _eusart2TxBuffer
 15652  014198  20F4               	addwfc	prodh,w,c
 15653  01419A  6EDA               	movwf	fsr2h,c
 15654  01419C  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 15655                           
 15656                           ; BSR set to: 0
 15657  0141A0  2BBB               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 15658                           
 15659                           ; BSR set to: 0
 15660                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 15661  0141A2  0E3F               	movlw	63
 15662  0141A4  65BB               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 15663  0141A6  D002               	goto	i2l373
 15664                           
 15665                           ; BSR set to: 0
 15666                           ;eusart2.c: 167: {
 15667                           ;eusart2.c: 168: eusart2TxHead = 0;
 15668  0141A8  0E00               	movlw	0
 15669  0141AA  6FBB               	movwf	_eusart2TxHead& (0+255),b	;volatile
 15670  0141AC                     i2l373:
 15671                           
 15672                           ; BSR set to: 0
 15673                           ;eusart2.c: 169: }
 15674                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
 15675                           
 15676                           ; BSR set to: 0
 15677  0141AC  07B9               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 15678  0141AE                     i2l372:
 15679                           
 15680                           ;eusart2.c: 171: }
 15681                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
 15682                           
 15683                           ; BSR set to: 0
 15684  0141AE  010E               	movlb	14	; () banked
 15685  0141B0  8D2C               	bsf	44,6,b	;volatile
 15686                           
 15687                           ; BSR set to: 14
 15688  0141B2  0012               	return		;funcret
 15689  0141B4                     __end_ofi2_EUSART2_Write:
 15690                           	opt stack 0
 15691                           tosu	equ	0xFFF
 15692                           tosh	equ	0xFFE
 15693                           tosl	equ	0xFFD
 15694                           pclatu	equ	0xFFB
 15695                           pclath	equ	0xFFA
 15696                           tblptru	equ	0xFF8
 15697                           tblptrh	equ	0xFF7
 15698                           tblptrl	equ	0xFF6
 15699                           tablat	equ	0xFF5
 15700                           prodh	equ	0xFF4
 15701                           prodl	equ	0xFF3
 15702                           intcon	equ	0xFF2
 15703                           postinc0	equ	0xFEE
 15704                           fsr0h	equ	0xFEA
 15705                           fsr0l	equ	0xFE9
 15706                           wreg	equ	0xFE8
 15707                           fsr1h	equ	0xFE2
 15708                           fsr1l	equ	0xFE1
 15709                           bsr	equ	0xFE0
 15710                           indf2	equ	0xFDF
 15711                           postinc2	equ	0xFDE
 15712                           postdec2	equ	0xFDD
 15713                           fsr2h	equ	0xFDA
 15714                           fsr2l	equ	0xFD9
 15715                           status	equ	0xFD8
 15716                           
 15717 ;; *************** function i2_fround *****************
 15718 ;; Defined at:
 15719 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 15720 ;; Parameters:    Size  Location     Type
 15721 ;;  prec            1    wreg     unsigned char 
 15722 ;; Auto vars:     Size  Location     Type
 15723 ;;  prec            1   53[COMRAM] unsigned char 
 15724 ;; Return value:  Size  Location     Type
 15725 ;;                  3   44[COMRAM] unsigned char 
 15726 ;; Registers used:
 15727 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15728 ;; Tracked objects:
 15729 ;;		On entry : 0/0
 15730 ;;		On exit  : 0/0
 15731 ;;		Unchanged: 0/0
 15732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15733 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15734 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15736 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15737 ;;Total ram usage:       10 bytes
 15738 ;; Hardware stack levels used:    1
 15739 ;; Hardware stack levels required when called:    2
 15740 ;; This function calls:
 15741 ;;		i2___awdiv
 15742 ;;		i2___awmod
 15743 ;;		i2___ftmul
 15744 ;;		i2___wmul
 15745 ;; This function is called by:
 15746 ;;		i2_printf
 15747 ;; This function uses a non-reentrant model
 15748 ;;
 15749                           
 15750                           	psect	text65
 15751  012422                     __ptext65:
 15752                           	opt stack 0
 15753  012422                     i2_fround:
 15754                           	opt stack 13
 15755                           
 15756                           ; BSR set to: 14
 15757                           ;incstack = 0
 15758                           ;i2fround@prec stored from wreg
 15759  012422  6E36               	movwf	i2fround@prec,c
 15760                           
 15761                           ;doprnt.c: 413: if(prec>=110)
 15762  012424  0E6D               	movlw	109
 15763  012426  6436               	cpfsgt	i2fround@prec,c
 15764  012428  D0A8               	goto	i2l908
 15765                           
 15766                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15767  01242A  0E00               	movlw	0
 15768  01242C  6E12               	movwf	i2___wmul@multiplicand+1,c
 15769  01242E  0E03               	movlw	3
 15770  012430  6E11               	movwf	i2___wmul@multiplicand,c
 15771  012432  0E00               	movlw	0
 15772  012434  6E0A               	movwf	i2___awdiv@divisor+1,c
 15773  012436  0E0A               	movlw	10
 15774  012438  6E09               	movwf	i2___awdiv@divisor,c
 15775  01243A  0E00               	movlw	0
 15776  01243C  6E04               	movwf	i2___awmod@divisor+1,c
 15777  01243E  0E64               	movlw	100
 15778  012440  6E03               	movwf	i2___awmod@divisor,c
 15779  012442  C036  F001         	movff	i2fround@prec,i2___awmod@dividend
 15780  012446  6A02               	clrf	i2___awmod@dividend+1,c
 15781  012448  EC54  F09E         	call	i2___awmod	;wreg free
 15782  01244C  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 15783  012450  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 15784  012454  EC5E  F09D         	call	i2___awdiv	;wreg free
 15785  012458  0E09               	movlw	9
 15786  01245A  2407               	addwf	?i2___awdiv,w,c
 15787  01245C  6E0F               	movwf	i2___wmul@multiplier,c
 15788  01245E  0E00               	movlw	0
 15789  012460  2008               	addwfc	?i2___awdiv+1,w,c
 15790  012462  6E10               	movwf	i2___wmul@multiplier+1,c
 15791  012464  EC44  F0A2         	call	i2___wmul	;wreg free
 15792  012468  0EC8               	movlw	low __npowers_
 15793  01246A  240F               	addwf	?i2___wmul,w,c
 15794  01246C  6EF6               	movwf	tblptrl,c
 15795  01246E  0EF9               	movlw	high __npowers_
 15796  012470  2010               	addwfc	?i2___wmul+1,w,c
 15797  012472  6EF7               	movwf	tblptrh,c
 15798  012474                     	if	1	;There are 3 active tblptr bytes
 15799  012474  6AF8               	clrf	tblptru,c
 15800  012476  0E00               	movlw	low (__mediumconst shr (0+16))
 15801  012478  22F8               	addwfc	tblptru,f,c
 15802  01247A                     	endif
 15803  01247A  0009               	tblrd		*+
 15804  01247C  CFF5 F021          	movff	tablat,i2___ftmul@f2
 15805  012480  0009               	tblrd		*+
 15806  012482  CFF5 F022          	movff	tablat,i2___ftmul@f2+1
 15807  012486  000A               	tblrd		*-
 15808  012488  CFF5 F023          	movff	tablat,i2___ftmul@f2+2
 15809  01248C  0E00               	movlw	0
 15810  01248E  6E0A               	movwf	i2___awdiv@divisor+1,c
 15811  012490  0E64               	movlw	100
 15812  012492  6E09               	movwf	i2___awdiv@divisor,c
 15813  012494  C036  F007         	movff	i2fround@prec,i2___awdiv@dividend
 15814  012498  6A08               	clrf	i2___awdiv@dividend+1,c
 15815  01249A  EC5E  F09D         	call	i2___awdiv	;wreg free
 15816  01249E  0E12               	movlw	18
 15817  0124A0  2407               	addwf	?i2___awdiv,w,c
 15818  0124A2  6E0F               	movwf	i2___wmul@multiplier,c
 15819  0124A4  0E00               	movlw	0
 15820  0124A6  2008               	addwfc	?i2___awdiv+1,w,c
 15821  0124A8  6E10               	movwf	i2___wmul@multiplier+1,c
 15822  0124AA  0E00               	movlw	0
 15823  0124AC  6E12               	movwf	i2___wmul@multiplicand+1,c
 15824  0124AE  0E03               	movlw	3
 15825  0124B0  6E11               	movwf	i2___wmul@multiplicand,c
 15826  0124B2  EC44  F0A2         	call	i2___wmul	;wreg free
 15827  0124B6  0EC8               	movlw	low __npowers_
 15828  0124B8  240F               	addwf	?i2___wmul,w,c
 15829  0124BA  6EF6               	movwf	tblptrl,c
 15830  0124BC  0EF9               	movlw	high __npowers_
 15831  0124BE  2010               	addwfc	?i2___wmul+1,w,c
 15832  0124C0  6EF7               	movwf	tblptrh,c
 15833  0124C2                     	if	1	;There are 3 active tblptr bytes
 15834  0124C2  6AF8               	clrf	tblptru,c
 15835  0124C4  0E00               	movlw	low (__mediumconst shr (0+16))
 15836  0124C6  22F8               	addwfc	tblptru,f,c
 15837  0124C8                     	endif
 15838  0124C8  0009               	tblrd		*+
 15839  0124CA  CFF5 F01E          	movff	tablat,i2___ftmul@f1
 15840  0124CE  0009               	tblrd		*+
 15841  0124D0  CFF5 F01F          	movff	tablat,i2___ftmul@f1+1
 15842  0124D4  000A               	tblrd		*-
 15843  0124D6  CFF5 F020          	movff	tablat,i2___ftmul@f1+2
 15844  0124DA  EC88  F099         	call	i2___ftmul	;wreg free
 15845  0124DE  C01E  F033         	movff	?i2___ftmul,i2_fround$2783
 15846  0124E2  C01F  F034         	movff	?i2___ftmul+1,i2_fround$2783+1
 15847  0124E6  C020  F035         	movff	?i2___ftmul+2,i2_fround$2783+2
 15848                           
 15849                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15850  0124EA  0E00               	movlw	0
 15851  0124EC  6E12               	movwf	i2___wmul@multiplicand+1,c
 15852  0124EE  0E03               	movlw	3
 15853  0124F0  6E11               	movwf	i2___wmul@multiplicand,c
 15854  0124F2  0E00               	movlw	0
 15855  0124F4  6E04               	movwf	i2___awmod@divisor+1,c
 15856  0124F6  0E0A               	movlw	10
 15857  0124F8  6E03               	movwf	i2___awmod@divisor,c
 15858  0124FA  C036  F001         	movff	i2fround@prec,i2___awmod@dividend
 15859  0124FE  6A02               	clrf	i2___awmod@dividend+1,c
 15860  012500  EC54  F09E         	call	i2___awmod	;wreg free
 15861  012504  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15862  012508  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15863  01250C  EC44  F0A2         	call	i2___wmul	;wreg free
 15864  012510  0EC8               	movlw	low __npowers_
 15865  012512  240F               	addwf	?i2___wmul,w,c
 15866  012514  6EF6               	movwf	tblptrl,c
 15867  012516  0EF9               	movlw	high __npowers_
 15868  012518  2010               	addwfc	?i2___wmul+1,w,c
 15869  01251A  6EF7               	movwf	tblptrh,c
 15870  01251C                     	if	1	;There are 3 active tblptr bytes
 15871  01251C  6AF8               	clrf	tblptru,c
 15872  01251E  0E00               	movlw	low (__mediumconst shr (0+16))
 15873  012520  22F8               	addwfc	tblptru,f,c
 15874  012522                     	endif
 15875  012522  0009               	tblrd		*+
 15876  012524  CFF5 F021          	movff	tablat,i2___ftmul@f2
 15877  012528  0009               	tblrd		*+
 15878  01252A  CFF5 F022          	movff	tablat,i2___ftmul@f2+1
 15879  01252E  000A               	tblrd		*-
 15880  012530  CFF5 F023          	movff	tablat,i2___ftmul@f2+2
 15881  012534  C033  F01E         	movff	i2_fround$2783,i2___ftmul@f1
 15882  012538  C034  F01F         	movff	i2_fround$2783+1,i2___ftmul@f1+1
 15883  01253C  C035  F020         	movff	i2_fround$2783+2,i2___ftmul@f1+2
 15884  012540  EC88  F099         	call	i2___ftmul	;wreg free
 15885  012544  C01E  F030         	movff	?i2___ftmul,i2_fround$2784
 15886  012548  C01F  F031         	movff	?i2___ftmul+1,i2_fround$2784+1
 15887  01254C  C020  F032         	movff	?i2___ftmul+2,i2_fround$2784+2
 15888                           
 15889                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15890  012550  C030  F01E         	movff	i2_fround$2784,i2___ftmul@f1
 15891  012554  C031  F01F         	movff	i2_fround$2784+1,i2___ftmul@f1+1
 15892  012558  C032  F020         	movff	i2_fround$2784+2,i2___ftmul@f1+2
 15893  01255C  0E00               	movlw	0
 15894  01255E  6E21               	movwf	i2___ftmul@f2,c
 15895  012560  0E00               	movlw	0
 15896  012562  6E22               	movwf	i2___ftmul@f2+1,c
 15897  012564  0E3F               	movlw	63
 15898  012566  6E23               	movwf	i2___ftmul@f2+2,c
 15899  012568  EC88  F099         	call	i2___ftmul	;wreg free
 15900  01256C  C01E  F02D         	movff	?i2___ftmul,?i2_fround
 15901  012570  C01F  F02E         	movff	?i2___ftmul+1,?i2_fround+1
 15902  012574  C020  F02F         	movff	?i2___ftmul+2,?i2_fround+2
 15903  012578  0012               	return	
 15904  01257A                     i2l908:
 15905                           
 15906                           ;doprnt.c: 415: else if(prec > 10)
 15907  01257A  0E0A               	movlw	10
 15908  01257C  6436               	cpfsgt	i2fround@prec,c
 15909  01257E  D069               	goto	i2l911
 15910                           
 15911                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15912  012580  0E00               	movlw	0
 15913  012582  6E12               	movwf	i2___wmul@multiplicand+1,c
 15914  012584  0E03               	movlw	3
 15915  012586  6E11               	movwf	i2___wmul@multiplicand,c
 15916  012588  0E00               	movlw	0
 15917  01258A  6E04               	movwf	i2___awmod@divisor+1,c
 15918  01258C  0E0A               	movlw	10
 15919  01258E  6E03               	movwf	i2___awmod@divisor,c
 15920  012590  C036  F001         	movff	i2fround@prec,i2___awmod@dividend
 15921  012594  6A02               	clrf	i2___awmod@dividend+1,c
 15922  012596  EC54  F09E         	call	i2___awmod	;wreg free
 15923  01259A  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 15924  01259E  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 15925  0125A2  EC44  F0A2         	call	i2___wmul	;wreg free
 15926  0125A6  0EC8               	movlw	low __npowers_
 15927  0125A8  240F               	addwf	?i2___wmul,w,c
 15928  0125AA  6EF6               	movwf	tblptrl,c
 15929  0125AC  0EF9               	movlw	high __npowers_
 15930  0125AE  2010               	addwfc	?i2___wmul+1,w,c
 15931  0125B0  6EF7               	movwf	tblptrh,c
 15932  0125B2                     	if	1	;There are 3 active tblptr bytes
 15933  0125B2  6AF8               	clrf	tblptru,c
 15934  0125B4  0E00               	movlw	low (__mediumconst shr (0+16))
 15935  0125B6  22F8               	addwfc	tblptru,f,c
 15936  0125B8                     	endif
 15937  0125B8  0009               	tblrd		*+
 15938  0125BA  CFF5 F021          	movff	tablat,i2___ftmul@f2
 15939  0125BE  0009               	tblrd		*+
 15940  0125C0  CFF5 F022          	movff	tablat,i2___ftmul@f2+1
 15941  0125C4  000A               	tblrd		*-
 15942  0125C6  CFF5 F023          	movff	tablat,i2___ftmul@f2+2
 15943  0125CA  0E00               	movlw	0
 15944  0125CC  6E0A               	movwf	i2___awdiv@divisor+1,c
 15945  0125CE  0E0A               	movlw	10
 15946  0125D0  6E09               	movwf	i2___awdiv@divisor,c
 15947  0125D2  C036  F007         	movff	i2fround@prec,i2___awdiv@dividend
 15948  0125D6  6A08               	clrf	i2___awdiv@dividend+1,c
 15949  0125D8  EC5E  F09D         	call	i2___awdiv	;wreg free
 15950  0125DC  0E09               	movlw	9
 15951  0125DE  2407               	addwf	?i2___awdiv,w,c
 15952  0125E0  6E0F               	movwf	i2___wmul@multiplier,c
 15953  0125E2  0E00               	movlw	0
 15954  0125E4  2008               	addwfc	?i2___awdiv+1,w,c
 15955  0125E6  6E10               	movwf	i2___wmul@multiplier+1,c
 15956  0125E8  0E00               	movlw	0
 15957  0125EA  6E12               	movwf	i2___wmul@multiplicand+1,c
 15958  0125EC  0E03               	movlw	3
 15959  0125EE  6E11               	movwf	i2___wmul@multiplicand,c
 15960  0125F0  EC44  F0A2         	call	i2___wmul	;wreg free
 15961  0125F4  0EC8               	movlw	low __npowers_
 15962  0125F6  240F               	addwf	?i2___wmul,w,c
 15963  0125F8  6EF6               	movwf	tblptrl,c
 15964  0125FA  0EF9               	movlw	high __npowers_
 15965  0125FC  2010               	addwfc	?i2___wmul+1,w,c
 15966  0125FE  6EF7               	movwf	tblptrh,c
 15967  012600                     	if	1	;There are 3 active tblptr bytes
 15968  012600  6AF8               	clrf	tblptru,c
 15969  012602  0E00               	movlw	low (__mediumconst shr (0+16))
 15970  012604  22F8               	addwfc	tblptru,f,c
 15971  012606                     	endif
 15972  012606  0009               	tblrd		*+
 15973  012608  CFF5 F01E          	movff	tablat,i2___ftmul@f1
 15974  01260C  0009               	tblrd		*+
 15975  01260E  CFF5 F01F          	movff	tablat,i2___ftmul@f1+1
 15976  012612  000A               	tblrd		*-
 15977  012614  CFF5 F020          	movff	tablat,i2___ftmul@f1+2
 15978  012618  EC88  F099         	call	i2___ftmul	;wreg free
 15979  01261C  C01E  F033         	movff	?i2___ftmul,i2_fround$2783
 15980  012620  C01F  F034         	movff	?i2___ftmul+1,i2_fround$2783+1
 15981  012624  C020  F035         	movff	?i2___ftmul+2,i2_fround$2783+2
 15982                           
 15983                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15984  012628  C033  F01E         	movff	i2_fround$2783,i2___ftmul@f1
 15985  01262C  C034  F01F         	movff	i2_fround$2783+1,i2___ftmul@f1+1
 15986  012630  C035  F020         	movff	i2_fround$2783+2,i2___ftmul@f1+2
 15987  012634  0E00               	movlw	0
 15988  012636  6E21               	movwf	i2___ftmul@f2,c
 15989  012638  0E00               	movlw	0
 15990  01263A  6E22               	movwf	i2___ftmul@f2+1,c
 15991  01263C  0E3F               	movlw	63
 15992  01263E  6E23               	movwf	i2___ftmul@f2+2,c
 15993  012640  EC88  F099         	call	i2___ftmul	;wreg free
 15994  012644  C01E  F02D         	movff	?i2___ftmul,?i2_fround
 15995  012648  C01F  F02E         	movff	?i2___ftmul+1,?i2_fround+1
 15996  01264C  C020  F02F         	movff	?i2___ftmul+2,?i2_fround+2
 15997  012650  0012               	return	
 15998  012652                     i2l911:
 15999                           
 16000                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 16001  012652  5036               	movf	i2fround@prec,w,c
 16002  012654  0D03               	mullw	3
 16003  012656  0EC8               	movlw	low __npowers_
 16004  012658  24F3               	addwf	prodl,w,c
 16005  01265A  6EF6               	movwf	tblptrl,c
 16006  01265C  0EF9               	movlw	high __npowers_
 16007  01265E  20F4               	addwfc	prodh,w,c
 16008  012660  6EF7               	movwf	tblptrh,c
 16009  012662                     	if	1	;There are 3 active tblptr bytes
 16010  012662  6AF8               	clrf	tblptru,c
 16011  012664  0E00               	movlw	low (__mediumconst shr (0+16))
 16012  012666  22F8               	addwfc	tblptru,f,c
 16013  012668                     	endif
 16014  012668  0009               	tblrd		*+
 16015  01266A  CFF5 F01E          	movff	tablat,i2___ftmul@f1
 16016  01266E  0009               	tblrd		*+
 16017  012670  CFF5 F01F          	movff	tablat,i2___ftmul@f1+1
 16018  012674  000A               	tblrd		*-
 16019  012676  CFF5 F020          	movff	tablat,i2___ftmul@f1+2
 16020  01267A  0E00               	movlw	0
 16021  01267C  6E21               	movwf	i2___ftmul@f2,c
 16022  01267E  0E00               	movlw	0
 16023  012680  6E22               	movwf	i2___ftmul@f2+1,c
 16024  012682  0E3F               	movlw	63
 16025  012684  6E23               	movwf	i2___ftmul@f2+2,c
 16026  012686  EC88  F099         	call	i2___ftmul	;wreg free
 16027  01268A  C01E  F02D         	movff	?i2___ftmul,?i2_fround
 16028  01268E  C01F  F02E         	movff	?i2___ftmul+1,?i2_fround+1
 16029  012692  C020  F02F         	movff	?i2___ftmul+2,?i2_fround+2
 16030  012696  0012               	return	
 16031  012698                     __end_ofi2_fround:
 16032                           	opt stack 0
 16033                           tosu	equ	0xFFF
 16034                           tosh	equ	0xFFE
 16035                           tosl	equ	0xFFD
 16036                           pclatu	equ	0xFFB
 16037                           pclath	equ	0xFFA
 16038                           tblptru	equ	0xFF8
 16039                           tblptrh	equ	0xFF7
 16040                           tblptrl	equ	0xFF6
 16041                           tablat	equ	0xFF5
 16042                           prodh	equ	0xFF4
 16043                           prodl	equ	0xFF3
 16044                           intcon	equ	0xFF2
 16045                           postinc0	equ	0xFEE
 16046                           fsr0h	equ	0xFEA
 16047                           fsr0l	equ	0xFE9
 16048                           wreg	equ	0xFE8
 16049                           fsr1h	equ	0xFE2
 16050                           fsr1l	equ	0xFE1
 16051                           bsr	equ	0xFE0
 16052                           indf2	equ	0xFDF
 16053                           postinc2	equ	0xFDE
 16054                           postdec2	equ	0xFDD
 16055                           fsr2h	equ	0xFDA
 16056                           fsr2l	equ	0xFD9
 16057                           status	equ	0xFD8
 16058                           
 16059 ;; *************** function i2___wmul *****************
 16060 ;; Defined at:
 16061 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 16062 ;; Parameters:    Size  Location     Type
 16063 ;;  multiplier      2   14[COMRAM] unsigned int 
 16064 ;;  multiplicand    2   16[COMRAM] unsigned int 
 16065 ;; Auto vars:     Size  Location     Type
 16066 ;;  __wmul          2   18[COMRAM] unsigned int 
 16067 ;; Return value:  Size  Location     Type
 16068 ;;                  2   14[COMRAM] unsigned int 
 16069 ;; Registers used:
 16070 ;;		wreg, status,2, status,0, prodl, prodh
 16071 ;; Tracked objects:
 16072 ;;		On entry : 0/0
 16073 ;;		On exit  : 0/0
 16074 ;;		Unchanged: 0/0
 16075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16076 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16079 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16080 ;;Total ram usage:        6 bytes
 16081 ;; Hardware stack levels used:    1
 16082 ;; This function calls:
 16083 ;;		Nothing
 16084 ;; This function is called by:
 16085 ;;		i2_fround
 16086 ;;		i2_scale
 16087 ;;		i2_printf
 16088 ;; This function uses a non-reentrant model
 16089 ;;
 16090                           
 16091                           	psect	text66
 16092  014488                     __ptext66:
 16093                           	opt stack 0
 16094  014488                     i2___wmul:
 16095                           	opt stack 14
 16096                           
 16097                           ;incstack = 0
 16098  014488  500F               	movf	i2___wmul@multiplier,w,c
 16099  01448A  0211               	mulwf	i2___wmul@multiplicand,c
 16100  01448C  CFF3 F013          	movff	prodl,i2___wmul@product
 16101  014490  CFF4 F014          	movff	prodh,i2___wmul@product+1
 16102  014494  500F               	movf	i2___wmul@multiplier,w,c
 16103  014496  0212               	mulwf	i2___wmul@multiplicand+1,c
 16104  014498  50F3               	movf	prodl,w,c
 16105  01449A  2614               	addwf	i2___wmul@product+1,f,c
 16106  01449C  5010               	movf	i2___wmul@multiplier+1,w,c
 16107  01449E  0211               	mulwf	i2___wmul@multiplicand,c
 16108  0144A0  50F3               	movf	prodl,w,c
 16109  0144A2  2614               	addwf	i2___wmul@product+1,f,c
 16110  0144A4  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 16111  0144A8  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 16112  0144AC  0012               	return	
 16113  0144AE                     __end_ofi2___wmul:
 16114                           	opt stack 0
 16115                           tosu	equ	0xFFF
 16116                           tosh	equ	0xFFE
 16117                           tosl	equ	0xFFD
 16118                           pclatu	equ	0xFFB
 16119                           pclath	equ	0xFFA
 16120                           tblptru	equ	0xFF8
 16121                           tblptrh	equ	0xFF7
 16122                           tblptrl	equ	0xFF6
 16123                           tablat	equ	0xFF5
 16124                           prodh	equ	0xFF4
 16125                           prodl	equ	0xFF3
 16126                           intcon	equ	0xFF2
 16127                           postinc0	equ	0xFEE
 16128                           fsr0h	equ	0xFEA
 16129                           fsr0l	equ	0xFE9
 16130                           wreg	equ	0xFE8
 16131                           fsr1h	equ	0xFE2
 16132                           fsr1l	equ	0xFE1
 16133                           bsr	equ	0xFE0
 16134                           indf2	equ	0xFDF
 16135                           postinc2	equ	0xFDE
 16136                           postdec2	equ	0xFDD
 16137                           fsr2h	equ	0xFDA
 16138                           fsr2l	equ	0xFD9
 16139                           status	equ	0xFD8
 16140                           
 16141 ;; *************** function i2___awmod *****************
 16142 ;; Defined at:
 16143 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 16144 ;; Parameters:    Size  Location     Type
 16145 ;;  dividend        2    0[COMRAM] int 
 16146 ;;  divisor         2    2[COMRAM] int 
 16147 ;; Auto vars:     Size  Location     Type
 16148 ;;  __awmod         1    5[COMRAM] unsigned char 
 16149 ;;  __awmod         1    4[COMRAM] unsigned char 
 16150 ;; Return value:  Size  Location     Type
 16151 ;;                  2    0[COMRAM] int 
 16152 ;; Registers used:
 16153 ;;		wreg, status,2, status,0
 16154 ;; Tracked objects:
 16155 ;;		On entry : 0/0
 16156 ;;		On exit  : 0/0
 16157 ;;		Unchanged: 0/0
 16158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16159 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16160 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16162 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16163 ;;Total ram usage:        6 bytes
 16164 ;; Hardware stack levels used:    1
 16165 ;; This function calls:
 16166 ;;		Nothing
 16167 ;; This function is called by:
 16168 ;;		i2_fround
 16169 ;;		i2_scale
 16170 ;; This function uses a non-reentrant model
 16171 ;;
 16172                           
 16173                           	psect	text67
 16174  013CA8                     __ptext67:
 16175                           	opt stack 0
 16176  013CA8                     i2___awmod:
 16177                           	opt stack 14
 16178                           
 16179                           ;incstack = 0
 16180  013CA8  0E00               	movlw	0
 16181  013CAA  6E06               	movwf	i2___awmod@sign,c
 16182  013CAC  AE02               	btfss	i2___awmod@dividend+1,7,c
 16183  013CAE  D006               	goto	i2l1162
 16184  013CB0  6C01               	negf	i2___awmod@dividend,c
 16185  013CB2  1E02               	comf	i2___awmod@dividend+1,f,c
 16186  013CB4  B0D8               	btfsc	status,0,c
 16187  013CB6  2A02               	incf	i2___awmod@dividend+1,f,c
 16188  013CB8  0E01               	movlw	1
 16189  013CBA  6E06               	movwf	i2___awmod@sign,c
 16190  013CBC                     i2l1162:
 16191  013CBC  AE04               	btfss	i2___awmod@divisor+1,7,c
 16192  013CBE  D004               	goto	i2l1163
 16193  013CC0  6C03               	negf	i2___awmod@divisor,c
 16194  013CC2  1E04               	comf	i2___awmod@divisor+1,f,c
 16195  013CC4  B0D8               	btfsc	status,0,c
 16196  013CC6  2A04               	incf	i2___awmod@divisor+1,f,c
 16197  013CC8                     i2l1163:
 16198  013CC8  5003               	movf	i2___awmod@divisor,w,c
 16199  013CCA  1004               	iorwf	i2___awmod@divisor+1,w,c
 16200  013CCC  B4D8               	btfsc	status,2,c
 16201  013CCE  D018               	goto	i2l1170
 16202  013CD0  0E01               	movlw	1
 16203  013CD2  6E05               	movwf	i2___awmod@counter,c
 16204  013CD4  D004               	goto	i2l1165
 16205  013CD6  90D8               	bcf	status,0,c
 16206  013CD8  3603               	rlcf	i2___awmod@divisor,f,c
 16207  013CDA  3604               	rlcf	i2___awmod@divisor+1,f,c
 16208  013CDC  2A05               	incf	i2___awmod@counter,f,c
 16209  013CDE                     i2l1165:
 16210  013CDE  AE04               	btfss	i2___awmod@divisor+1,7,c
 16211  013CE0  D7FA               	goto	i2l1166
 16212  013CE2                     i2u472_40:
 16213  013CE2  5003               	movf	i2___awmod@divisor,w,c
 16214  013CE4  5C01               	subwf	i2___awmod@dividend,w,c
 16215  013CE6  5004               	movf	i2___awmod@divisor+1,w,c
 16216  013CE8  5802               	subwfb	i2___awmod@dividend+1,w,c
 16217  013CEA  A0D8               	btfss	status,0,c
 16218  013CEC  D004               	goto	i2l1169
 16219  013CEE  5003               	movf	i2___awmod@divisor,w,c
 16220  013CF0  5E01               	subwf	i2___awmod@dividend,f,c
 16221  013CF2  5004               	movf	i2___awmod@divisor+1,w,c
 16222  013CF4  5A02               	subwfb	i2___awmod@dividend+1,f,c
 16223  013CF6                     i2l1169:
 16224  013CF6  90D8               	bcf	status,0,c
 16225  013CF8  3204               	rrcf	i2___awmod@divisor+1,f,c
 16226  013CFA  3203               	rrcf	i2___awmod@divisor,f,c
 16227  013CFC  2E05               	decfsz	i2___awmod@counter,f,c
 16228  013CFE  D7F1               	goto	i2u472_40
 16229  013D00                     i2l1170:
 16230  013D00  5006               	movf	i2___awmod@sign,w,c
 16231  013D02  B4D8               	btfsc	status,2,c
 16232  013D04  D004               	goto	i2l1171
 16233  013D06  6C01               	negf	i2___awmod@dividend,c
 16234  013D08  1E02               	comf	i2___awmod@dividend+1,f,c
 16235  013D0A  B0D8               	btfsc	status,0,c
 16236  013D0C  2A02               	incf	i2___awmod@dividend+1,f,c
 16237  013D0E                     i2l1171:
 16238  013D0E  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 16239  013D12  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 16240  013D16  0012               	return	
 16241  013D18                     __end_ofi2___awmod:
 16242                           	opt stack 0
 16243                           tosu	equ	0xFFF
 16244                           tosh	equ	0xFFE
 16245                           tosl	equ	0xFFD
 16246                           pclatu	equ	0xFFB
 16247                           pclath	equ	0xFFA
 16248                           tblptru	equ	0xFF8
 16249                           tblptrh	equ	0xFF7
 16250                           tblptrl	equ	0xFF6
 16251                           tablat	equ	0xFF5
 16252                           prodh	equ	0xFF4
 16253                           prodl	equ	0xFF3
 16254                           intcon	equ	0xFF2
 16255                           postinc0	equ	0xFEE
 16256                           fsr0h	equ	0xFEA
 16257                           fsr0l	equ	0xFE9
 16258                           wreg	equ	0xFE8
 16259                           fsr1h	equ	0xFE2
 16260                           fsr1l	equ	0xFE1
 16261                           bsr	equ	0xFE0
 16262                           indf2	equ	0xFDF
 16263                           postinc2	equ	0xFDE
 16264                           postdec2	equ	0xFDD
 16265                           fsr2h	equ	0xFDA
 16266                           fsr2l	equ	0xFD9
 16267                           status	equ	0xFD8
 16268                           
 16269 ;; *************** function i2___awdiv *****************
 16270 ;; Defined at:
 16271 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 16272 ;; Parameters:    Size  Location     Type
 16273 ;;  dividend        2    6[COMRAM] int 
 16274 ;;  divisor         2    8[COMRAM] int 
 16275 ;; Auto vars:     Size  Location     Type
 16276 ;;  __awdiv         2   12[COMRAM] int 
 16277 ;;  __awdiv         1   11[COMRAM] unsigned char 
 16278 ;;  __awdiv         1   10[COMRAM] unsigned char 
 16279 ;; Return value:  Size  Location     Type
 16280 ;;                  2    6[COMRAM] int 
 16281 ;; Registers used:
 16282 ;;		wreg, status,2, status,0
 16283 ;; Tracked objects:
 16284 ;;		On entry : 0/0
 16285 ;;		On exit  : 0/0
 16286 ;;		Unchanged: 0/0
 16287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16288 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16289 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16291 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16292 ;;Total ram usage:        8 bytes
 16293 ;; Hardware stack levels used:    1
 16294 ;; This function calls:
 16295 ;;		Nothing
 16296 ;; This function is called by:
 16297 ;;		i2_fround
 16298 ;;		i2_scale
 16299 ;;		i2_printf
 16300 ;; This function uses a non-reentrant model
 16301 ;;
 16302                           
 16303                           	psect	text68
 16304  013ABC                     __ptext68:
 16305                           	opt stack 0
 16306  013ABC                     i2___awdiv:
 16307                           	opt stack 14
 16308                           
 16309                           ;incstack = 0
 16310  013ABC  0E00               	movlw	0
 16311  013ABE  6E0C               	movwf	i2___awdiv@sign,c
 16312  013AC0  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 16313  013AC2  D006               	goto	i2l1149
 16314  013AC4  6C09               	negf	i2___awdiv@divisor,c
 16315  013AC6  1E0A               	comf	i2___awdiv@divisor+1,f,c
 16316  013AC8  B0D8               	btfsc	status,0,c
 16317  013ACA  2A0A               	incf	i2___awdiv@divisor+1,f,c
 16318  013ACC  0E01               	movlw	1
 16319  013ACE  6E0C               	movwf	i2___awdiv@sign,c
 16320  013AD0                     i2l1149:
 16321  013AD0  AE08               	btfss	i2___awdiv@dividend+1,7,c
 16322  013AD2  D006               	goto	i2l1150
 16323  013AD4  6C07               	negf	i2___awdiv@dividend,c
 16324  013AD6  1E08               	comf	i2___awdiv@dividend+1,f,c
 16325  013AD8  B0D8               	btfsc	status,0,c
 16326  013ADA  2A08               	incf	i2___awdiv@dividend+1,f,c
 16327  013ADC  0E01               	movlw	1
 16328  013ADE  1A0C               	xorwf	i2___awdiv@sign,f,c
 16329  013AE0                     i2l1150:
 16330  013AE0  0E00               	movlw	0
 16331  013AE2  6E0E               	movwf	i2___awdiv@quotient+1,c
 16332  013AE4  0E00               	movlw	0
 16333  013AE6  6E0D               	movwf	i2___awdiv@quotient,c
 16334  013AE8  5009               	movf	i2___awdiv@divisor,w,c
 16335  013AEA  100A               	iorwf	i2___awdiv@divisor+1,w,c
 16336  013AEC  B4D8               	btfsc	status,2,c
 16337  013AEE  D01C               	goto	i2l1157
 16338  013AF0  0E01               	movlw	1
 16339  013AF2  6E0B               	movwf	i2___awdiv@counter,c
 16340  013AF4  D004               	goto	i2l1152
 16341  013AF6  90D8               	bcf	status,0,c
 16342  013AF8  3609               	rlcf	i2___awdiv@divisor,f,c
 16343  013AFA  360A               	rlcf	i2___awdiv@divisor+1,f,c
 16344  013AFC  2A0B               	incf	i2___awdiv@counter,f,c
 16345  013AFE                     i2l1152:
 16346  013AFE  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 16347  013B00  D7FA               	goto	i2l1153
 16348  013B02                     i2u466_40:
 16349  013B02  90D8               	bcf	status,0,c
 16350  013B04  360D               	rlcf	i2___awdiv@quotient,f,c
 16351  013B06  360E               	rlcf	i2___awdiv@quotient+1,f,c
 16352  013B08  5009               	movf	i2___awdiv@divisor,w,c
 16353  013B0A  5C07               	subwf	i2___awdiv@dividend,w,c
 16354  013B0C  500A               	movf	i2___awdiv@divisor+1,w,c
 16355  013B0E  5808               	subwfb	i2___awdiv@dividend+1,w,c
 16356  013B10  A0D8               	btfss	status,0,c
 16357  013B12  D005               	goto	i2l1156
 16358  013B14  5009               	movf	i2___awdiv@divisor,w,c
 16359  013B16  5E07               	subwf	i2___awdiv@dividend,f,c
 16360  013B18  500A               	movf	i2___awdiv@divisor+1,w,c
 16361  013B1A  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 16362  013B1C  800D               	bsf	i2___awdiv@quotient,0,c
 16363  013B1E                     i2l1156:
 16364  013B1E  90D8               	bcf	status,0,c
 16365  013B20  320A               	rrcf	i2___awdiv@divisor+1,f,c
 16366  013B22  3209               	rrcf	i2___awdiv@divisor,f,c
 16367  013B24  2E0B               	decfsz	i2___awdiv@counter,f,c
 16368  013B26  D7ED               	goto	i2u466_40
 16369  013B28                     i2l1157:
 16370  013B28  500C               	movf	i2___awdiv@sign,w,c
 16371  013B2A  B4D8               	btfsc	status,2,c
 16372  013B2C  D004               	goto	i2l1158
 16373  013B2E  6C0D               	negf	i2___awdiv@quotient,c
 16374  013B30  1E0E               	comf	i2___awdiv@quotient+1,f,c
 16375  013B32  B0D8               	btfsc	status,0,c
 16376  013B34  2A0E               	incf	i2___awdiv@quotient+1,f,c
 16377  013B36                     i2l1158:
 16378  013B36  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 16379  013B3A  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 16380  013B3E  0012               	return	
 16381  013B40                     __end_ofi2___awdiv:
 16382                           	opt stack 0
 16383                           tosu	equ	0xFFF
 16384                           tosh	equ	0xFFE
 16385                           tosl	equ	0xFFD
 16386                           pclatu	equ	0xFFB
 16387                           pclath	equ	0xFFA
 16388                           tblptru	equ	0xFF8
 16389                           tblptrh	equ	0xFF7
 16390                           tblptrl	equ	0xFF6
 16391                           tablat	equ	0xFF5
 16392                           prodh	equ	0xFF4
 16393                           prodl	equ	0xFF3
 16394                           intcon	equ	0xFF2
 16395                           postinc0	equ	0xFEE
 16396                           fsr0h	equ	0xFEA
 16397                           fsr0l	equ	0xFE9
 16398                           wreg	equ	0xFE8
 16399                           fsr1h	equ	0xFE2
 16400                           fsr1l	equ	0xFE1
 16401                           bsr	equ	0xFE0
 16402                           indf2	equ	0xFDF
 16403                           postinc2	equ	0xFDE
 16404                           postdec2	equ	0xFDD
 16405                           fsr2h	equ	0xFDA
 16406                           fsr2l	equ	0xFD9
 16407                           status	equ	0xFD8
 16408                           
 16409 ;; *************** function i2__tdiv_to_l_ *****************
 16410 ;; Defined at:
 16411 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 16412 ;; Parameters:    Size  Location     Type
 16413 ;;  f1              3    0[COMRAM] float 
 16414 ;;  f2              3    3[COMRAM] float 
 16415 ;; Auto vars:     Size  Location     Type
 16416 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 16417 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 16418 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 16419 ;; Return value:  Size  Location     Type
 16420 ;;                  4    0[COMRAM] unsigned long 
 16421 ;; Registers used:
 16422 ;;		wreg, status,2, status,0
 16423 ;; Tracked objects:
 16424 ;;		On entry : 0/0
 16425 ;;		On exit  : 0/0
 16426 ;;		Unchanged: 0/0
 16427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16428 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16429 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16430 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16431 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16432 ;;Total ram usage:       15 bytes
 16433 ;; Hardware stack levels used:    1
 16434 ;; This function calls:
 16435 ;;		Nothing
 16436 ;; This function is called by:
 16437 ;;		i2_printf
 16438 ;; This function uses a non-reentrant model
 16439 ;;
 16440                           
 16441                           	psect	text69
 16442  012DD4                     __ptext69:
 16443                           	opt stack 0
 16444  012DD4                     i2__tdiv_to_l_:
 16445                           	opt stack 15
 16446                           
 16447                           ;incstack = 0
 16448  012DD4  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 16449  012DD8  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 16450  012DDA  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 16451  012DDC  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 16452  012DDE  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 16453  012DE0  E301               	bnc	u525_41
 16454  012DE2  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 16455  012DE4                     u525_41:
 16456  012DE4  5007               	movf	??i2__tdiv_to_l_,w,c
 16457  012DE6  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 16458  012DE8  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16459  012DEA  A4D8               	btfss	status,2,c
 16460  012DEC  D009               	goto	i2l1285
 16461  012DEE  0E00               	movlw	0
 16462  012DF0  6E01               	movwf	?i2__tdiv_to_l_,c
 16463  012DF2  0E00               	movlw	0
 16464  012DF4  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16465  012DF6  0E00               	movlw	0
 16466  012DF8  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16467  012DFA  0E00               	movlw	0
 16468  012DFC  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16469  012DFE  0012               	return	
 16470  012E00                     i2l1285:
 16471  012E00  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 16472  012E04  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 16473  012E06  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 16474  012E08  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 16475  012E0A  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 16476  012E0C  E301               	bnc	u527_41
 16477  012E0E  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 16478  012E10                     u527_41:
 16479  012E10  5007               	movf	??i2__tdiv_to_l_,w,c
 16480  012E12  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 16481  012E14  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 16482  012E16  A4D8               	btfss	status,2,c
 16483  012E18  D009               	goto	i2l1287
 16484  012E1A  0E00               	movlw	0
 16485  012E1C  6E01               	movwf	?i2__tdiv_to_l_,c
 16486  012E1E  0E00               	movlw	0
 16487  012E20  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16488  012E22  0E00               	movlw	0
 16489  012E24  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16490  012E26  0E00               	movlw	0
 16491  012E28  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16492  012E2A  0012               	return	
 16493  012E2C                     i2l1287:
 16494  012E2C  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 16495  012E2E  0EFF               	movlw	255
 16496  012E30  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 16497  012E32  0EFF               	movlw	255
 16498  012E34  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 16499  012E36  0E00               	movlw	0
 16500  012E38  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 16501  012E3A  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 16502  012E3C  0EFF               	movlw	255
 16503  012E3E  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 16504  012E40  0EFF               	movlw	255
 16505  012E42  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 16506  012E44  0E00               	movlw	0
 16507  012E46  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 16508  012E48  0E00               	movlw	0
 16509  012E4A  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 16510  012E4C  0E00               	movlw	0
 16511  012E4E  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 16512  012E50  0E00               	movlw	0
 16513  012E52  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 16514  012E54  0E00               	movlw	0
 16515  012E56  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 16516  012E58  0E7F               	movlw	127
 16517  012E5A  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 16518  012E5C  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 16519  012E5E  0F98               	addlw	152
 16520  012E60  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 16521  012E62  0E18               	movlw	24
 16522  012E64  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 16523  012E66                     i2l1288:
 16524  012E66  90D8               	bcf	status,0,c
 16525  012E68  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 16526  012E6A  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16527  012E6C  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16528  012E6E  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16529  012E70  5004               	movf	i2__tdiv_to_l_@f2,w,c
 16530  012E72  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 16531  012E74  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 16532  012E76  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 16533  012E78  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 16534  012E7A  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 16535  012E7C  A0D8               	btfss	status,0,c
 16536  012E7E  D007               	goto	i2l1289
 16537  012E80  5004               	movf	i2__tdiv_to_l_@f2,w,c
 16538  012E82  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 16539  012E84  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 16540  012E86  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 16541  012E88  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 16542  012E8A  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 16543  012E8C  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 16544  012E8E                     i2l1289:
 16545  012E8E  90D8               	bcf	status,0,c
 16546  012E90  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 16547  012E92  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 16548  012E94  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 16549  012E96  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 16550  012E98  D7E6               	goto	i2l1288
 16551  012E9A  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 16552  012E9C  D016               	goto	i2l1291
 16553  012E9E  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16554  012EA0  0A80               	xorlw	128
 16555  012EA2  0F97               	addlw	151
 16556  012EA4  B0D8               	btfsc	status,0,c
 16557  012EA6  D009               	goto	i2l1292
 16558  012EA8  0E00               	movlw	0
 16559  012EAA  6E01               	movwf	?i2__tdiv_to_l_,c
 16560  012EAC  0E00               	movlw	0
 16561  012EAE  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16562  012EB0  0E00               	movlw	0
 16563  012EB2  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16564  012EB4  0E00               	movlw	0
 16565  012EB6  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16566  012EB8  0012               	return	
 16567  012EBA                     i2l1292:
 16568  012EBA  90D8               	bcf	status,0,c
 16569  012EBC  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 16570  012EBE  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 16571  012EC0  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 16572  012EC2  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 16573  012EC4  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 16574  012EC6  D7F9               	goto	i2l1292
 16575  012EC8  D015               	goto	i2u533_40
 16576  012ECA                     i2l1291:
 16577  012ECA  0E17               	movlw	23
 16578  012ECC  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 16579  012ECE  D00F               	goto	i2l1297
 16580  012ED0  0E00               	movlw	0
 16581  012ED2  6E01               	movwf	?i2__tdiv_to_l_,c
 16582  012ED4  0E00               	movlw	0
 16583  012ED6  6E02               	movwf	?i2__tdiv_to_l_+1,c
 16584  012ED8  0E00               	movlw	0
 16585  012EDA  6E03               	movwf	?i2__tdiv_to_l_+2,c
 16586  012EDC  0E00               	movlw	0
 16587  012EDE  6E04               	movwf	?i2__tdiv_to_l_+3,c
 16588  012EE0  0012               	return	
 16589  012EE2  90D8               	bcf	status,0,c
 16590  012EE4  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 16591  012EE6  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 16592  012EE8  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 16593  012EEA  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 16594  012EEC  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 16595  012EEE                     i2l1297:
 16596  012EEE  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 16597  012EF0  A4D8               	btfss	status,2,c
 16598  012EF2  D7F7               	goto	i2l1298
 16599  012EF4                     i2u533_40:
 16600  012EF4  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 16601  012EF8  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 16602  012EFC  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 16603  012F00  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 16604  012F04  0012               	return		;funcret
 16605  012F06                     __end_ofi2__tdiv_to_l_:
 16606                           	opt stack 0
 16607                           tosu	equ	0xFFF
 16608                           tosh	equ	0xFFE
 16609                           tosl	equ	0xFFD
 16610                           pclatu	equ	0xFFB
 16611                           pclath	equ	0xFFA
 16612                           tblptru	equ	0xFF8
 16613                           tblptrh	equ	0xFF7
 16614                           tblptrl	equ	0xFF6
 16615                           tablat	equ	0xFF5
 16616                           prodh	equ	0xFF4
 16617                           prodl	equ	0xFF3
 16618                           intcon	equ	0xFF2
 16619                           postinc0	equ	0xFEE
 16620                           fsr0h	equ	0xFEA
 16621                           fsr0l	equ	0xFE9
 16622                           wreg	equ	0xFE8
 16623                           fsr1h	equ	0xFE2
 16624                           fsr1l	equ	0xFE1
 16625                           bsr	equ	0xFE0
 16626                           indf2	equ	0xFDF
 16627                           postinc2	equ	0xFDE
 16628                           postdec2	equ	0xFDD
 16629                           fsr2h	equ	0xFDA
 16630                           fsr2l	equ	0xFD9
 16631                           status	equ	0xFD8
 16632                           
 16633 ;; *************** function i2__div_to_l_ *****************
 16634 ;; Defined at:
 16635 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 16636 ;; Parameters:    Size  Location     Type
 16637 ;;  f1              3    0[COMRAM] unsigned long 
 16638 ;;  f2              3    3[COMRAM] unsigned long 
 16639 ;; Auto vars:     Size  Location     Type
 16640 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 16641 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 16642 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 16643 ;; Return value:  Size  Location     Type
 16644 ;;                  4    0[COMRAM] unsigned long 
 16645 ;; Registers used:
 16646 ;;		wreg, status,2, status,0
 16647 ;; Tracked objects:
 16648 ;;		On entry : 0/0
 16649 ;;		On exit  : 0/0
 16650 ;;		Unchanged: 0/0
 16651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16652 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16653 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16655 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16656 ;;Total ram usage:       12 bytes
 16657 ;; Hardware stack levels used:    1
 16658 ;; This function calls:
 16659 ;;		Nothing
 16660 ;; This function is called by:
 16661 ;;		i2_printf
 16662 ;; This function uses a non-reentrant model
 16663 ;;
 16664                           
 16665                           	psect	text70
 16666  012F06                     __ptext70:
 16667                           	opt stack 0
 16668  012F06                     i2__div_to_l_:
 16669                           	opt stack 15
 16670                           
 16671                           ;incstack = 0
 16672  012F06  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 16673  012F08  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 16674  012F0A  6E0C               	movwf	i2__div_to_l_@exp1,c
 16675  012F0C  500C               	movf	i2__div_to_l_@exp1,w,c
 16676  012F0E  A4D8               	btfss	status,2,c
 16677  012F10  D009               	goto	i2l1181
 16678  012F12  0E00               	movlw	0
 16679  012F14  6E01               	movwf	?i2__div_to_l_,c
 16680  012F16  0E00               	movlw	0
 16681  012F18  6E02               	movwf	?i2__div_to_l_+1,c
 16682  012F1A  0E00               	movlw	0
 16683  012F1C  6E03               	movwf	?i2__div_to_l_+2,c
 16684  012F1E  0E00               	movlw	0
 16685  012F20  6E04               	movwf	?i2__div_to_l_+3,c
 16686  012F22  0012               	return	
 16687  012F24                     i2l1181:
 16688  012F24  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 16689  012F26  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 16690  012F28  6E0B               	movwf	i2__div_to_l_@cntr,c
 16691  012F2A  500B               	movf	i2__div_to_l_@cntr,w,c
 16692  012F2C  A4D8               	btfss	status,2,c
 16693  012F2E  D009               	goto	i2l1183
 16694  012F30  0E00               	movlw	0
 16695  012F32  6E01               	movwf	?i2__div_to_l_,c
 16696  012F34  0E00               	movlw	0
 16697  012F36  6E02               	movwf	?i2__div_to_l_+1,c
 16698  012F38  0E00               	movlw	0
 16699  012F3A  6E03               	movwf	?i2__div_to_l_+2,c
 16700  012F3C  0E00               	movlw	0
 16701  012F3E  6E04               	movwf	?i2__div_to_l_+3,c
 16702  012F40  0012               	return	
 16703  012F42                     i2l1183:
 16704  012F42  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 16705  012F44  0EFF               	movlw	255
 16706  012F46  1601               	andwf	i2__div_to_l_@f1,f,c
 16707  012F48  0EFF               	movlw	255
 16708  012F4A  1602               	andwf	i2__div_to_l_@f1+1,f,c
 16709  012F4C  0EFF               	movlw	255
 16710  012F4E  1603               	andwf	i2__div_to_l_@f1+2,f,c
 16711  012F50  0E00               	movlw	0
 16712  012F52  1604               	andwf	i2__div_to_l_@f1+3,f,c
 16713  012F54  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 16714  012F56  0EFF               	movlw	255
 16715  012F58  1604               	andwf	i2__div_to_l_@f2,f,c
 16716  012F5A  0EFF               	movlw	255
 16717  012F5C  1605               	andwf	i2__div_to_l_@f2+1,f,c
 16718  012F5E  0EFF               	movlw	255
 16719  012F60  1606               	andwf	i2__div_to_l_@f2+2,f,c
 16720  012F62  0E00               	movlw	0
 16721  012F64  1607               	andwf	i2__div_to_l_@f2+3,f,c
 16722  012F66  0E00               	movlw	0
 16723  012F68  6E07               	movwf	i2__div_to_l_@quot,c
 16724  012F6A  0E00               	movlw	0
 16725  012F6C  6E08               	movwf	i2__div_to_l_@quot+1,c
 16726  012F6E  0E00               	movlw	0
 16727  012F70  6E09               	movwf	i2__div_to_l_@quot+2,c
 16728  012F72  0E00               	movlw	0
 16729  012F74  6E0A               	movwf	i2__div_to_l_@quot+3,c
 16730  012F76  0E7F               	movlw	127
 16731  012F78  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 16732  012F7A  500B               	movf	i2__div_to_l_@cntr,w,c
 16733  012F7C  0FA0               	addlw	160
 16734  012F7E  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 16735  012F80  0E20               	movlw	32
 16736  012F82  6E0B               	movwf	i2__div_to_l_@cntr,c
 16737  012F84  90D8               	bcf	status,0,c
 16738  012F86  3607               	rlcf	i2__div_to_l_@quot,f,c
 16739  012F88  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 16740  012F8A  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 16741  012F8C  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 16742  012F8E  5004               	movf	i2__div_to_l_@f2,w,c
 16743  012F90  5C01               	subwf	i2__div_to_l_@f1,w,c
 16744  012F92  5005               	movf	i2__div_to_l_@f2+1,w,c
 16745  012F94  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 16746  012F96  5006               	movf	i2__div_to_l_@f2+2,w,c
 16747  012F98  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 16748  012F9A  5007               	movf	i2__div_to_l_@f2+3,w,c
 16749  012F9C  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 16750  012F9E  A0D8               	btfss	status,0,c
 16751  012FA0  D009               	goto	i2l1185
 16752  012FA2  5004               	movf	i2__div_to_l_@f2,w,c
 16753  012FA4  5E01               	subwf	i2__div_to_l_@f1,f,c
 16754  012FA6  5005               	movf	i2__div_to_l_@f2+1,w,c
 16755  012FA8  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 16756  012FAA  5006               	movf	i2__div_to_l_@f2+2,w,c
 16757  012FAC  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 16758  012FAE  5007               	movf	i2__div_to_l_@f2+3,w,c
 16759  012FB0  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 16760  012FB2  8007               	bsf	i2__div_to_l_@quot,0,c
 16761  012FB4                     i2l1185:
 16762  012FB4  90D8               	bcf	status,0,c
 16763  012FB6  3601               	rlcf	i2__div_to_l_@f1,f,c
 16764  012FB8  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 16765  012FBA  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 16766  012FBC  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 16767  012FBE  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 16768  012FC0  D7E1               	goto	i2l1184
 16769  012FC2  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 16770  012FC4  D016               	goto	i2l1187
 16771  012FC6  500C               	movf	i2__div_to_l_@exp1,w,c
 16772  012FC8  0A80               	xorlw	128
 16773  012FCA  0F9F               	addlw	159
 16774  012FCC  B0D8               	btfsc	status,0,c
 16775  012FCE  D009               	goto	i2l1188
 16776  012FD0  0E00               	movlw	0
 16777  012FD2  6E01               	movwf	?i2__div_to_l_,c
 16778  012FD4  0E00               	movlw	0
 16779  012FD6  6E02               	movwf	?i2__div_to_l_+1,c
 16780  012FD8  0E00               	movlw	0
 16781  012FDA  6E03               	movwf	?i2__div_to_l_+2,c
 16782  012FDC  0E00               	movlw	0
 16783  012FDE  6E04               	movwf	?i2__div_to_l_+3,c
 16784  012FE0  0012               	return	
 16785  012FE2                     i2l1188:
 16786  012FE2  90D8               	bcf	status,0,c
 16787  012FE4  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 16788  012FE6  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 16789  012FE8  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 16790  012FEA  3207               	rrcf	i2__div_to_l_@quot,f,c
 16791  012FEC  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 16792  012FEE  D7F9               	goto	i2l1188
 16793  012FF0  D015               	goto	i2u524_40
 16794  012FF2                     i2l1187:
 16795  012FF2  0E1F               	movlw	31
 16796  012FF4  640C               	cpfsgt	i2__div_to_l_@exp1,c
 16797  012FF6  D00F               	goto	i2l1193
 16798  012FF8  0E00               	movlw	0
 16799  012FFA  6E01               	movwf	?i2__div_to_l_,c
 16800  012FFC  0E00               	movlw	0
 16801  012FFE  6E02               	movwf	?i2__div_to_l_+1,c
 16802  013000  0E00               	movlw	0
 16803  013002  6E03               	movwf	?i2__div_to_l_+2,c
 16804  013004  0E00               	movlw	0
 16805  013006  6E04               	movwf	?i2__div_to_l_+3,c
 16806  013008  0012               	return	
 16807  01300A  90D8               	bcf	status,0,c
 16808  01300C  3607               	rlcf	i2__div_to_l_@quot,f,c
 16809  01300E  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 16810  013010  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 16811  013012  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 16812  013014  060C               	decf	i2__div_to_l_@exp1,f,c
 16813  013016                     i2l1193:
 16814  013016  500C               	movf	i2__div_to_l_@exp1,w,c
 16815  013018  A4D8               	btfss	status,2,c
 16816  01301A  D7F7               	goto	i2l1194
 16817  01301C                     i2u524_40:
 16818  01301C  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 16819  013020  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 16820  013024  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 16821  013028  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 16822  01302C  0012               	return		;funcret
 16823  01302E                     __end_ofi2__div_to_l_:
 16824                           	opt stack 0
 16825                           tosu	equ	0xFFF
 16826                           tosh	equ	0xFFE
 16827                           tosl	equ	0xFFD
 16828                           pclatu	equ	0xFFB
 16829                           pclath	equ	0xFFA
 16830                           tblptru	equ	0xFF8
 16831                           tblptrh	equ	0xFF7
 16832                           tblptrl	equ	0xFF6
 16833                           tablat	equ	0xFF5
 16834                           prodh	equ	0xFF4
 16835                           prodl	equ	0xFF3
 16836                           intcon	equ	0xFF2
 16837                           postinc0	equ	0xFEE
 16838                           fsr0h	equ	0xFEA
 16839                           fsr0l	equ	0xFE9
 16840                           wreg	equ	0xFE8
 16841                           fsr1h	equ	0xFE2
 16842                           fsr1l	equ	0xFE1
 16843                           bsr	equ	0xFE0
 16844                           indf2	equ	0xFDF
 16845                           postinc2	equ	0xFDE
 16846                           postdec2	equ	0xFDD
 16847                           fsr2h	equ	0xFDA
 16848                           fsr2l	equ	0xFD9
 16849                           status	equ	0xFD8
 16850                           
 16851 ;; *************** function i2___lltoft *****************
 16852 ;; Defined at:
 16853 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 16854 ;; Parameters:    Size  Location     Type
 16855 ;;  c               4    8[COMRAM] unsigned long 
 16856 ;; Auto vars:     Size  Location     Type
 16857 ;;  __lltoft        1   16[COMRAM] unsigned char 
 16858 ;; Return value:  Size  Location     Type
 16859 ;;                  3    8[COMRAM] float 
 16860 ;; Registers used:
 16861 ;;		wreg, status,2, status,0, cstack
 16862 ;; Tracked objects:
 16863 ;;		On entry : 0/0
 16864 ;;		On exit  : 0/0
 16865 ;;		Unchanged: 0/0
 16866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16867 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16869 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16870 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16871 ;;Total ram usage:        9 bytes
 16872 ;; Hardware stack levels used:    1
 16873 ;; Hardware stack levels required when called:    1
 16874 ;; This function calls:
 16875 ;;		i2___ftpack
 16876 ;; This function is called by:
 16877 ;;		i2_printf
 16878 ;; This function uses a non-reentrant model
 16879 ;;
 16880                           
 16881                           	psect	text71
 16882  013F86                     __ptext71:
 16883                           	opt stack 0
 16884  013F86                     i2___lltoft:
 16885                           	opt stack 14
 16886                           
 16887                           ;incstack = 0
 16888  013F86  0E8E               	movlw	142
 16889  013F88  6E11               	movwf	i2___lltoft@exp,c
 16890  013F8A  D006               	goto	i2l1387
 16891  013F8C  90D8               	bcf	status,0,c
 16892  013F8E  320C               	rrcf	i2___lltoft@c+3,f,c
 16893  013F90  320B               	rrcf	i2___lltoft@c+2,f,c
 16894  013F92  320A               	rrcf	i2___lltoft@c+1,f,c
 16895  013F94  3209               	rrcf	i2___lltoft@c,f,c
 16896  013F96  2A11               	incf	i2___lltoft@exp,f,c
 16897  013F98                     i2l1387:
 16898  013F98  0E00               	movlw	0
 16899  013F9A  1409               	andwf	i2___lltoft@c,w,c
 16900  013F9C  6E0D               	movwf	??i2___lltoft& (0+255),c
 16901  013F9E  0E00               	movlw	0
 16902  013FA0  140A               	andwf	i2___lltoft@c+1,w,c
 16903  013FA2  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 16904  013FA4  0E00               	movlw	0
 16905  013FA6  140B               	andwf	i2___lltoft@c+2,w,c
 16906  013FA8  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 16907  013FAA  0EFF               	movlw	255
 16908  013FAC  140C               	andwf	i2___lltoft@c+3,w,c
 16909  013FAE  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 16910  013FB0  500D               	movf	??i2___lltoft,w,c
 16911  013FB2  100E               	iorwf	??i2___lltoft+1,w,c
 16912  013FB4  100F               	iorwf	??i2___lltoft+2,w,c
 16913  013FB6  1010               	iorwf	??i2___lltoft+3,w,c
 16914  013FB8  A4D8               	btfss	status,2,c
 16915  013FBA  D7E8               	goto	i2l1388
 16916  013FBC  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 16917  013FC0  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 16918  013FC4  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 16919  013FC8  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 16920  013FCC  0E00               	movlw	0
 16921  013FCE  6E05               	movwf	i2___ftpack@sign,c
 16922  013FD0  EC3C  F09B         	call	i2___ftpack	;wreg free
 16923  013FD4  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 16924  013FD8  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 16925  013FDC  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 16926  013FE0  0012               	return	
 16927  013FE2                     __end_ofi2___lltoft:
 16928                           	opt stack 0
 16929                           tosu	equ	0xFFF
 16930                           tosh	equ	0xFFE
 16931                           tosl	equ	0xFFD
 16932                           pclatu	equ	0xFFB
 16933                           pclath	equ	0xFFA
 16934                           tblptru	equ	0xFF8
 16935                           tblptrh	equ	0xFF7
 16936                           tblptrl	equ	0xFF6
 16937                           tablat	equ	0xFF5
 16938                           prodh	equ	0xFF4
 16939                           prodl	equ	0xFF3
 16940                           intcon	equ	0xFF2
 16941                           postinc0	equ	0xFEE
 16942                           fsr0h	equ	0xFEA
 16943                           fsr0l	equ	0xFE9
 16944                           wreg	equ	0xFE8
 16945                           fsr1h	equ	0xFE2
 16946                           fsr1l	equ	0xFE1
 16947                           bsr	equ	0xFE0
 16948                           indf2	equ	0xFDF
 16949                           postinc2	equ	0xFDE
 16950                           postdec2	equ	0xFDD
 16951                           fsr2h	equ	0xFDA
 16952                           fsr2l	equ	0xFD9
 16953                           status	equ	0xFD8
 16954                           
 16955 ;; *************** function i2___llmod *****************
 16956 ;; Defined at:
 16957 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 16958 ;; Parameters:    Size  Location     Type
 16959 ;;  dividend        4   13[COMRAM] unsigned long 
 16960 ;;  divisor         4   17[COMRAM] unsigned long 
 16961 ;; Auto vars:     Size  Location     Type
 16962 ;;  __llmod         1   21[COMRAM] unsigned char 
 16963 ;; Return value:  Size  Location     Type
 16964 ;;                  4   13[COMRAM] unsigned long 
 16965 ;; Registers used:
 16966 ;;		wreg, status,2, status,0
 16967 ;; Tracked objects:
 16968 ;;		On entry : 0/0
 16969 ;;		On exit  : 0/0
 16970 ;;		Unchanged: 0/0
 16971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16972 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16975 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16976 ;;Total ram usage:        9 bytes
 16977 ;; Hardware stack levels used:    1
 16978 ;; This function calls:
 16979 ;;		Nothing
 16980 ;; This function is called by:
 16981 ;;		i2_printf
 16982 ;; This function uses a non-reentrant model
 16983 ;;
 16984                           
 16985                           	psect	text72
 16986  013E5A                     __ptext72:
 16987                           	opt stack 0
 16988  013E5A                     i2___llmod:
 16989                           	opt stack 15
 16990                           
 16991                           ;incstack = 0
 16992  013E5A  5012               	movf	i2___llmod@divisor,w,c
 16993  013E5C  1013               	iorwf	i2___llmod@divisor+1,w,c
 16994  013E5E  1014               	iorwf	i2___llmod@divisor+2,w,c
 16995  013E60  1015               	iorwf	i2___llmod@divisor+3,w,c
 16996  013E62  B4D8               	btfsc	status,2,c
 16997  013E64  D024               	goto	i2l1381
 16998  013E66  0E01               	movlw	1
 16999  013E68  6E16               	movwf	i2___llmod@counter,c
 17000  013E6A  D006               	goto	i2l1376
 17001  013E6C  90D8               	bcf	status,0,c
 17002  013E6E  3612               	rlcf	i2___llmod@divisor,f,c
 17003  013E70  3613               	rlcf	i2___llmod@divisor+1,f,c
 17004  013E72  3614               	rlcf	i2___llmod@divisor+2,f,c
 17005  013E74  3615               	rlcf	i2___llmod@divisor+3,f,c
 17006  013E76  2A16               	incf	i2___llmod@counter,f,c
 17007  013E78                     i2l1376:
 17008  013E78  AE15               	btfss	i2___llmod@divisor+3,7,c
 17009  013E7A  D7F8               	goto	i2l1377
 17010  013E7C                     i2u551_40:
 17011  013E7C  5012               	movf	i2___llmod@divisor,w,c
 17012  013E7E  5C0E               	subwf	i2___llmod@dividend,w,c
 17013  013E80  5013               	movf	i2___llmod@divisor+1,w,c
 17014  013E82  580F               	subwfb	i2___llmod@dividend+1,w,c
 17015  013E84  5014               	movf	i2___llmod@divisor+2,w,c
 17016  013E86  5810               	subwfb	i2___llmod@dividend+2,w,c
 17017  013E88  5015               	movf	i2___llmod@divisor+3,w,c
 17018  013E8A  5811               	subwfb	i2___llmod@dividend+3,w,c
 17019  013E8C  A0D8               	btfss	status,0,c
 17020  013E8E  D008               	goto	i2l1380
 17021  013E90  5012               	movf	i2___llmod@divisor,w,c
 17022  013E92  5E0E               	subwf	i2___llmod@dividend,f,c
 17023  013E94  5013               	movf	i2___llmod@divisor+1,w,c
 17024  013E96  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 17025  013E98  5014               	movf	i2___llmod@divisor+2,w,c
 17026  013E9A  5A10               	subwfb	i2___llmod@dividend+2,f,c
 17027  013E9C  5015               	movf	i2___llmod@divisor+3,w,c
 17028  013E9E  5A11               	subwfb	i2___llmod@dividend+3,f,c
 17029  013EA0                     i2l1380:
 17030  013EA0  90D8               	bcf	status,0,c
 17031  013EA2  3215               	rrcf	i2___llmod@divisor+3,f,c
 17032  013EA4  3214               	rrcf	i2___llmod@divisor+2,f,c
 17033  013EA6  3213               	rrcf	i2___llmod@divisor+1,f,c
 17034  013EA8  3212               	rrcf	i2___llmod@divisor,f,c
 17035  013EAA  2E16               	decfsz	i2___llmod@counter,f,c
 17036  013EAC  D7E7               	goto	i2u551_40
 17037  013EAE                     i2l1381:
 17038  013EAE  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 17039  013EB2  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 17040  013EB6  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 17041  013EBA  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 17042  013EBE  0012               	return		;funcret
 17043  013EC0                     __end_ofi2___llmod:
 17044                           	opt stack 0
 17045                           tosu	equ	0xFFF
 17046                           tosh	equ	0xFFE
 17047                           tosl	equ	0xFFD
 17048                           pclatu	equ	0xFFB
 17049                           pclath	equ	0xFFA
 17050                           tblptru	equ	0xFF8
 17051                           tblptrh	equ	0xFF7
 17052                           tblptrl	equ	0xFF6
 17053                           tablat	equ	0xFF5
 17054                           prodh	equ	0xFF4
 17055                           prodl	equ	0xFF3
 17056                           intcon	equ	0xFF2
 17057                           postinc0	equ	0xFEE
 17058                           fsr0h	equ	0xFEA
 17059                           fsr0l	equ	0xFE9
 17060                           wreg	equ	0xFE8
 17061                           fsr1h	equ	0xFE2
 17062                           fsr1l	equ	0xFE1
 17063                           bsr	equ	0xFE0
 17064                           indf2	equ	0xFDF
 17065                           postinc2	equ	0xFDE
 17066                           postdec2	equ	0xFDD
 17067                           fsr2h	equ	0xFDA
 17068                           fsr2l	equ	0xFD9
 17069                           status	equ	0xFD8
 17070                           
 17071 ;; *************** function i2___lldiv *****************
 17072 ;; Defined at:
 17073 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 17074 ;; Parameters:    Size  Location     Type
 17075 ;;  dividend        4    0[COMRAM] unsigned long 
 17076 ;;  divisor         4    4[COMRAM] unsigned long 
 17077 ;; Auto vars:     Size  Location     Type
 17078 ;;  __lldiv         4    8[COMRAM] unsigned long 
 17079 ;;  __lldiv         1   12[COMRAM] unsigned char 
 17080 ;; Return value:  Size  Location     Type
 17081 ;;                  4    0[COMRAM] unsigned long 
 17082 ;; Registers used:
 17083 ;;		wreg, status,2, status,0
 17084 ;; Tracked objects:
 17085 ;;		On entry : 0/0
 17086 ;;		On exit  : 0/0
 17087 ;;		Unchanged: 0/0
 17088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17089 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17090 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17092 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17093 ;;Total ram usage:       13 bytes
 17094 ;; Hardware stack levels used:    1
 17095 ;; This function calls:
 17096 ;;		Nothing
 17097 ;; This function is called by:
 17098 ;;		i2_printf
 17099 ;; This function uses a non-reentrant model
 17100 ;;
 17101                           
 17102                           	psect	text73
 17103  013B40                     __ptext73:
 17104                           	opt stack 0
 17105  013B40                     i2___lldiv:
 17106                           	opt stack 15
 17107                           
 17108                           ;incstack = 0
 17109  013B40  0E00               	movlw	0
 17110  013B42  6E09               	movwf	i2___lldiv@quotient,c
 17111  013B44  0E00               	movlw	0
 17112  013B46  6E0A               	movwf	i2___lldiv@quotient+1,c
 17113  013B48  0E00               	movlw	0
 17114  013B4A  6E0B               	movwf	i2___lldiv@quotient+2,c
 17115  013B4C  0E00               	movlw	0
 17116  013B4E  6E0C               	movwf	i2___lldiv@quotient+3,c
 17117  013B50  5005               	movf	i2___lldiv@divisor,w,c
 17118  013B52  1006               	iorwf	i2___lldiv@divisor+1,w,c
 17119  013B54  1007               	iorwf	i2___lldiv@divisor+2,w,c
 17120  013B56  1008               	iorwf	i2___lldiv@divisor+3,w,c
 17121  013B58  B4D8               	btfsc	status,2,c
 17122  013B5A  D02A               	goto	i2l1371
 17123  013B5C  0E01               	movlw	1
 17124  013B5E  6E0D               	movwf	i2___lldiv@counter,c
 17125  013B60  D006               	goto	i2l1366
 17126  013B62  90D8               	bcf	status,0,c
 17127  013B64  3605               	rlcf	i2___lldiv@divisor,f,c
 17128  013B66  3606               	rlcf	i2___lldiv@divisor+1,f,c
 17129  013B68  3607               	rlcf	i2___lldiv@divisor+2,f,c
 17130  013B6A  3608               	rlcf	i2___lldiv@divisor+3,f,c
 17131  013B6C  2A0D               	incf	i2___lldiv@counter,f,c
 17132  013B6E                     i2l1366:
 17133  013B6E  AE08               	btfss	i2___lldiv@divisor+3,7,c
 17134  013B70  D7F8               	goto	i2l1367
 17135  013B72                     i2u548_40:
 17136  013B72  90D8               	bcf	status,0,c
 17137  013B74  3609               	rlcf	i2___lldiv@quotient,f,c
 17138  013B76  360A               	rlcf	i2___lldiv@quotient+1,f,c
 17139  013B78  360B               	rlcf	i2___lldiv@quotient+2,f,c
 17140  013B7A  360C               	rlcf	i2___lldiv@quotient+3,f,c
 17141  013B7C  5005               	movf	i2___lldiv@divisor,w,c
 17142  013B7E  5C01               	subwf	i2___lldiv@dividend,w,c
 17143  013B80  5006               	movf	i2___lldiv@divisor+1,w,c
 17144  013B82  5802               	subwfb	i2___lldiv@dividend+1,w,c
 17145  013B84  5007               	movf	i2___lldiv@divisor+2,w,c
 17146  013B86  5803               	subwfb	i2___lldiv@dividend+2,w,c
 17147  013B88  5008               	movf	i2___lldiv@divisor+3,w,c
 17148  013B8A  5804               	subwfb	i2___lldiv@dividend+3,w,c
 17149  013B8C  A0D8               	btfss	status,0,c
 17150  013B8E  D009               	goto	i2l1370
 17151  013B90  5005               	movf	i2___lldiv@divisor,w,c
 17152  013B92  5E01               	subwf	i2___lldiv@dividend,f,c
 17153  013B94  5006               	movf	i2___lldiv@divisor+1,w,c
 17154  013B96  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 17155  013B98  5007               	movf	i2___lldiv@divisor+2,w,c
 17156  013B9A  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 17157  013B9C  5008               	movf	i2___lldiv@divisor+3,w,c
 17158  013B9E  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 17159  013BA0  8009               	bsf	i2___lldiv@quotient,0,c
 17160  013BA2                     i2l1370:
 17161  013BA2  90D8               	bcf	status,0,c
 17162  013BA4  3208               	rrcf	i2___lldiv@divisor+3,f,c
 17163  013BA6  3207               	rrcf	i2___lldiv@divisor+2,f,c
 17164  013BA8  3206               	rrcf	i2___lldiv@divisor+1,f,c
 17165  013BAA  3205               	rrcf	i2___lldiv@divisor,f,c
 17166  013BAC  2E0D               	decfsz	i2___lldiv@counter,f,c
 17167  013BAE  D7E1               	goto	i2u548_40
 17168  013BB0                     i2l1371:
 17169  013BB0  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 17170  013BB4  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 17171  013BB8  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 17172  013BBC  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 17173  013BC0  0012               	return		;funcret
 17174  013BC2                     __end_ofi2___lldiv:
 17175                           	opt stack 0
 17176                           tosu	equ	0xFFF
 17177                           tosh	equ	0xFFE
 17178                           tosl	equ	0xFFD
 17179                           pclatu	equ	0xFFB
 17180                           pclath	equ	0xFFA
 17181                           tblptru	equ	0xFF8
 17182                           tblptrh	equ	0xFF7
 17183                           tblptrl	equ	0xFF6
 17184                           tablat	equ	0xFF5
 17185                           prodh	equ	0xFF4
 17186                           prodl	equ	0xFF3
 17187                           intcon	equ	0xFF2
 17188                           postinc0	equ	0xFEE
 17189                           fsr0h	equ	0xFEA
 17190                           fsr0l	equ	0xFE9
 17191                           wreg	equ	0xFE8
 17192                           fsr1h	equ	0xFE2
 17193                           fsr1l	equ	0xFE1
 17194                           bsr	equ	0xFE0
 17195                           indf2	equ	0xFDF
 17196                           postinc2	equ	0xFDE
 17197                           postdec2	equ	0xFDD
 17198                           fsr2h	equ	0xFDA
 17199                           fsr2l	equ	0xFD9
 17200                           status	equ	0xFD8
 17201                           
 17202 ;; *************** function i2___fttol *****************
 17203 ;; Defined at:
 17204 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 17205 ;; Parameters:    Size  Location     Type
 17206 ;;  f1              3   44[COMRAM] float 
 17207 ;; Auto vars:     Size  Location     Type
 17208 ;;  __fttol         4   54[COMRAM] unsigned long 
 17209 ;;  __fttol         1   58[COMRAM] unsigned char 
 17210 ;;  __fttol         1   53[COMRAM] unsigned char 
 17211 ;; Return value:  Size  Location     Type
 17212 ;;                  4   44[COMRAM] long 
 17213 ;; Registers used:
 17214 ;;		wreg, status,2, status,0
 17215 ;; Tracked objects:
 17216 ;;		On entry : 0/0
 17217 ;;		On exit  : 0/0
 17218 ;;		Unchanged: 0/0
 17219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17220 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17221 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17222 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17223 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17224 ;;Total ram usage:       15 bytes
 17225 ;; Hardware stack levels used:    1
 17226 ;; This function calls:
 17227 ;;		Nothing
 17228 ;; This function is called by:
 17229 ;;		i2_printf
 17230 ;; This function uses a non-reentrant model
 17231 ;;
 17232                           
 17233                           	psect	text74
 17234  01321C                     __ptext74:
 17235                           	opt stack 0
 17236  01321C                     i2___fttol:
 17237                           	opt stack 15
 17238                           
 17239                           ;incstack = 0
 17240  01321C  C02F  F031         	movff	i2___fttol@f1+2,??i2___fttol
 17241  013220  6A32               	clrf	(??i2___fttol+1)& (0+255),c
 17242  013222  6A33               	clrf	(??i2___fttol+2)& (0+255),c
 17243  013224  342E               	rlcf	i2___fttol@f1+1,w,c
 17244  013226  3631               	rlcf	??i2___fttol& (0+255),f,c
 17245  013228  E301               	bnc	u539_41
 17246  01322A  8032               	bsf	(??i2___fttol+1)& (0+255),0,c
 17247  01322C                     u539_41:
 17248  01322C  5031               	movf	??i2___fttol,w,c
 17249  01322E  6E3B               	movwf	i2___fttol@exp1,c
 17250  013230  503B               	movf	i2___fttol@exp1,w,c
 17251  013232  A4D8               	btfss	status,2,c
 17252  013234  D009               	goto	i2l1330
 17253  013236  0E00               	movlw	0
 17254  013238  6E2D               	movwf	?i2___fttol,c
 17255  01323A  0E00               	movlw	0
 17256  01323C  6E2E               	movwf	?i2___fttol+1,c
 17257  01323E  0E00               	movlw	0
 17258  013240  6E2F               	movwf	?i2___fttol+2,c
 17259  013242  0E00               	movlw	0
 17260  013244  6E30               	movwf	?i2___fttol+3,c
 17261  013246  0012               	return	
 17262  013248                     i2l1330:
 17263  013248  0E17               	movlw	23
 17264  01324A  6E31               	movwf	??i2___fttol& (0+255),c
 17265  01324C  C02D  F032         	movff	i2___fttol@f1,??i2___fttol+1
 17266  013250  C02E  F033         	movff	i2___fttol@f1+1,??i2___fttol+2
 17267  013254  C02F  F034         	movff	i2___fttol@f1+2,??i2___fttol+3
 17268  013258  2831               	incf	??i2___fttol,w,c
 17269  01325A  6E35               	movwf	(??i2___fttol+4)& (0+255),c
 17270  01325C  D004               	goto	i2u541_40
 17271  01325E                     i2u541_45:
 17272  01325E  90D8               	bcf	status,0,c
 17273  013260  3234               	rrcf	??i2___fttol+3,f,c
 17274  013262  3233               	rrcf	??i2___fttol+2,f,c
 17275  013264  3232               	rrcf	??i2___fttol+1,f,c
 17276  013266                     i2u541_40:
 17277  013266  2E35               	decfsz	(??i2___fttol+4)& (0+255),f,c
 17278  013268  D7FA               	goto	i2u541_45
 17279  01326A  5032               	movf	??i2___fttol+1,w,c
 17280  01326C  6E36               	movwf	i2___fttol@sign1,c
 17281  01326E  8E2E               	bsf	i2___fttol@f1+1,7,c
 17282  013270  0EFF               	movlw	255
 17283  013272  162D               	andwf	i2___fttol@f1,f,c
 17284  013274  0EFF               	movlw	255
 17285  013276  162E               	andwf	i2___fttol@f1+1,f,c
 17286  013278  0E00               	movlw	0
 17287  01327A  162F               	andwf	i2___fttol@f1+2,f,c
 17288  01327C  502D               	movf	i2___fttol@f1,w,c
 17289  01327E  6E37               	movwf	i2___fttol@lval,c
 17290  013280  502E               	movf	i2___fttol@f1+1,w,c
 17291  013282  6E38               	movwf	i2___fttol@lval+1,c
 17292  013284  502F               	movf	i2___fttol@f1+2,w,c
 17293  013286  6E39               	movwf	i2___fttol@lval+2,c
 17294  013288  6A3A               	clrf	i2___fttol@lval+3,c
 17295  01328A  0E8E               	movlw	142
 17296  01328C  5E3B               	subwf	i2___fttol@exp1,f,c
 17297  01328E  AE3B               	btfss	i2___fttol@exp1,7,c
 17298  013290  D016               	goto	i2l1332
 17299  013292  503B               	movf	i2___fttol@exp1,w,c
 17300  013294  0A80               	xorlw	128
 17301  013296  0F8F               	addlw	143
 17302  013298  B0D8               	btfsc	status,0,c
 17303  01329A  D009               	goto	i2l1333
 17304  01329C  0E00               	movlw	0
 17305  01329E  6E2D               	movwf	?i2___fttol,c
 17306  0132A0  0E00               	movlw	0
 17307  0132A2  6E2E               	movwf	?i2___fttol+1,c
 17308  0132A4  0E00               	movlw	0
 17309  0132A6  6E2F               	movwf	?i2___fttol+2,c
 17310  0132A8  0E00               	movlw	0
 17311  0132AA  6E30               	movwf	?i2___fttol+3,c
 17312  0132AC  0012               	return	
 17313  0132AE                     i2l1333:
 17314  0132AE  90D8               	bcf	status,0,c
 17315  0132B0  323A               	rrcf	i2___fttol@lval+3,f,c
 17316  0132B2  3239               	rrcf	i2___fttol@lval+2,f,c
 17317  0132B4  3238               	rrcf	i2___fttol@lval+1,f,c
 17318  0132B6  3237               	rrcf	i2___fttol@lval,f,c
 17319  0132B8  3E3B               	incfsz	i2___fttol@exp1,f,c
 17320  0132BA  D7F9               	goto	i2l1333
 17321  0132BC  D015               	goto	i2u545_40
 17322  0132BE                     i2l1332:
 17323  0132BE  0E17               	movlw	23
 17324  0132C0  643B               	cpfsgt	i2___fttol@exp1,c
 17325  0132C2  D00F               	goto	i2l1338
 17326  0132C4  0E00               	movlw	0
 17327  0132C6  6E2D               	movwf	?i2___fttol,c
 17328  0132C8  0E00               	movlw	0
 17329  0132CA  6E2E               	movwf	?i2___fttol+1,c
 17330  0132CC  0E00               	movlw	0
 17331  0132CE  6E2F               	movwf	?i2___fttol+2,c
 17332  0132D0  0E00               	movlw	0
 17333  0132D2  6E30               	movwf	?i2___fttol+3,c
 17334  0132D4  0012               	return	
 17335  0132D6  90D8               	bcf	status,0,c
 17336  0132D8  3637               	rlcf	i2___fttol@lval,f,c
 17337  0132DA  3638               	rlcf	i2___fttol@lval+1,f,c
 17338  0132DC  3639               	rlcf	i2___fttol@lval+2,f,c
 17339  0132DE  363A               	rlcf	i2___fttol@lval+3,f,c
 17340  0132E0  063B               	decf	i2___fttol@exp1,f,c
 17341  0132E2                     i2l1338:
 17342  0132E2  503B               	movf	i2___fttol@exp1,w,c
 17343  0132E4  A4D8               	btfss	status,2,c
 17344  0132E6  D7F7               	goto	i2l1339
 17345  0132E8                     i2u545_40:
 17346  0132E8  5036               	movf	i2___fttol@sign1,w,c
 17347  0132EA  B4D8               	btfsc	status,2,c
 17348  0132EC  D008               	goto	i2l1341
 17349  0132EE  1E3A               	comf	i2___fttol@lval+3,f,c
 17350  0132F0  1E39               	comf	i2___fttol@lval+2,f,c
 17351  0132F2  1E38               	comf	i2___fttol@lval+1,f,c
 17352  0132F4  6C37               	negf	i2___fttol@lval,c
 17353  0132F6  0E00               	movlw	0
 17354  0132F8  2238               	addwfc	i2___fttol@lval+1,f,c
 17355  0132FA  2239               	addwfc	i2___fttol@lval+2,f,c
 17356  0132FC  223A               	addwfc	i2___fttol@lval+3,f,c
 17357  0132FE                     i2l1341:
 17358  0132FE  C037  F02D         	movff	i2___fttol@lval,?i2___fttol
 17359  013302  C038  F02E         	movff	i2___fttol@lval+1,?i2___fttol+1
 17360  013306  C039  F02F         	movff	i2___fttol@lval+2,?i2___fttol+2
 17361  01330A  C03A  F030         	movff	i2___fttol@lval+3,?i2___fttol+3
 17362  01330E  0012               	return	
 17363  013310                     __end_ofi2___fttol:
 17364                           	opt stack 0
 17365                           tosu	equ	0xFFF
 17366                           tosh	equ	0xFFE
 17367                           tosl	equ	0xFFD
 17368                           pclatu	equ	0xFFB
 17369                           pclath	equ	0xFFA
 17370                           tblptru	equ	0xFF8
 17371                           tblptrh	equ	0xFF7
 17372                           tblptrl	equ	0xFF6
 17373                           tablat	equ	0xFF5
 17374                           prodh	equ	0xFF4
 17375                           prodl	equ	0xFF3
 17376                           intcon	equ	0xFF2
 17377                           postinc0	equ	0xFEE
 17378                           fsr0h	equ	0xFEA
 17379                           fsr0l	equ	0xFE9
 17380                           wreg	equ	0xFE8
 17381                           fsr1h	equ	0xFE2
 17382                           fsr1l	equ	0xFE1
 17383                           bsr	equ	0xFE0
 17384                           indf2	equ	0xFDF
 17385                           postinc2	equ	0xFDE
 17386                           postdec2	equ	0xFDD
 17387                           fsr2h	equ	0xFDA
 17388                           fsr2l	equ	0xFD9
 17389                           status	equ	0xFD8
 17390                           
 17391 ;; *************** function i2___ftsub *****************
 17392 ;; Defined at:
 17393 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 17394 ;; Parameters:    Size  Location     Type
 17395 ;;  f1              3   66[COMRAM] float 
 17396 ;;  f2              3   69[COMRAM] float 
 17397 ;; Auto vars:     Size  Location     Type
 17398 ;;		None
 17399 ;; Return value:  Size  Location     Type
 17400 ;;                  3   66[COMRAM] float 
 17401 ;; Registers used:
 17402 ;;		wreg, status,2, status,0, cstack
 17403 ;; Tracked objects:
 17404 ;;		On entry : 0/0
 17405 ;;		On exit  : 0/0
 17406 ;;		Unchanged: 0/0
 17407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17408 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17411 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17412 ;;Total ram usage:        6 bytes
 17413 ;; Hardware stack levels used:    1
 17414 ;; Hardware stack levels required when called:    2
 17415 ;; This function calls:
 17416 ;;		i2___ftadd
 17417 ;; This function is called by:
 17418 ;;		i2_printf
 17419 ;; This function uses a non-reentrant model
 17420 ;;
 17421                           
 17422                           	psect	text75
 17423  01427C                     __ptext75:
 17424                           	opt stack 0
 17425  01427C                     i2___ftsub:
 17426                           	opt stack 13
 17427                           
 17428                           ;incstack = 0
 17429  01427C  5046               	movf	i2___ftsub@f2,w,c
 17430  01427E  1047               	iorwf	i2___ftsub@f2+1,w,c
 17431  014280  1048               	iorwf	i2___ftsub@f2+2,w,c
 17432  014282  B4D8               	btfsc	status,2,c
 17433  014284  D006               	goto	i2l1326
 17434  014286  0E00               	movlw	0
 17435  014288  1A46               	xorwf	i2___ftsub@f2,f,c
 17436  01428A  0E00               	movlw	0
 17437  01428C  1A47               	xorwf	i2___ftsub@f2+1,f,c
 17438  01428E  0E80               	movlw	128
 17439  014290  1A48               	xorwf	i2___ftsub@f2+2,f,c
 17440  014292                     i2l1326:
 17441  014292  C043  F037         	movff	i2___ftsub@f1,i2___ftadd@f1
 17442  014296  C044  F038         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 17443  01429A  C045  F039         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 17444  01429E  C046  F03A         	movff	i2___ftsub@f2,i2___ftadd@f2
 17445  0142A2  C047  F03B         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 17446  0142A6  C048  F03C         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 17447  0142AA  EC23  F094         	call	i2___ftadd	;wreg free
 17448  0142AE  C037  F043         	movff	?i2___ftadd,?i2___ftsub
 17449  0142B2  C038  F044         	movff	?i2___ftadd+1,?i2___ftsub+1
 17450  0142B6  C039  F045         	movff	?i2___ftadd+2,?i2___ftsub+2
 17451  0142BA  0012               	return	
 17452  0142BC                     __end_ofi2___ftsub:
 17453                           	opt stack 0
 17454                           tosu	equ	0xFFF
 17455                           tosh	equ	0xFFE
 17456                           tosl	equ	0xFFD
 17457                           pclatu	equ	0xFFB
 17458                           pclath	equ	0xFFA
 17459                           tblptru	equ	0xFF8
 17460                           tblptrh	equ	0xFF7
 17461                           tblptrl	equ	0xFF6
 17462                           tablat	equ	0xFF5
 17463                           prodh	equ	0xFF4
 17464                           prodl	equ	0xFF3
 17465                           intcon	equ	0xFF2
 17466                           postinc0	equ	0xFEE
 17467                           fsr0h	equ	0xFEA
 17468                           fsr0l	equ	0xFE9
 17469                           wreg	equ	0xFE8
 17470                           fsr1h	equ	0xFE2
 17471                           fsr1l	equ	0xFE1
 17472                           bsr	equ	0xFE0
 17473                           indf2	equ	0xFDF
 17474                           postinc2	equ	0xFDE
 17475                           postdec2	equ	0xFDD
 17476                           fsr2h	equ	0xFDA
 17477                           fsr2l	equ	0xFD9
 17478                           status	equ	0xFD8
 17479                           
 17480 ;; *************** function i2___ftge *****************
 17481 ;; Defined at:
 17482 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 17483 ;; Parameters:    Size  Location     Type
 17484 ;;  ff1             3    0[COMRAM] float 
 17485 ;;  ff2             3    3[COMRAM] float 
 17486 ;; Auto vars:     Size  Location     Type
 17487 ;;		None
 17488 ;; Return value:  Size  Location     Type
 17489 ;;		None               void
 17490 ;; Registers used:
 17491 ;;		wreg, status,2, status,0
 17492 ;; Tracked objects:
 17493 ;;		On entry : 0/0
 17494 ;;		On exit  : 0/0
 17495 ;;		Unchanged: 0/0
 17496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17497 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17499 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17500 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17501 ;;Total ram usage:        9 bytes
 17502 ;; Hardware stack levels used:    1
 17503 ;; This function calls:
 17504 ;;		Nothing
 17505 ;; This function is called by:
 17506 ;;		i2_printf
 17507 ;; This function uses a non-reentrant model
 17508 ;;
 17509                           
 17510                           	psect	text76
 17511  0139A6                     __ptext76:
 17512                           	opt stack 0
 17513  0139A6                     i2___ftge:
 17514                           	opt stack 15
 17515                           
 17516                           ;incstack = 0
 17517  0139A6  AE03               	btfss	i2___ftge@ff1+2,7,c
 17518  0139A8  D016               	goto	i2l1302
 17519  0139AA  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
 17520  0139AE  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
 17521  0139B2  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
 17522  0139B6  1E07               	comf	??i2___ftge,f,c
 17523  0139B8  1E08               	comf	??i2___ftge+1,f,c
 17524  0139BA  1E09               	comf	??i2___ftge+2,f,c
 17525  0139BC  2A07               	incf	??i2___ftge,f,c
 17526  0139BE  0E00               	movlw	0
 17527  0139C0  2208               	addwfc	??i2___ftge+1,f,c
 17528  0139C2  2209               	addwfc	??i2___ftge+2,f,c
 17529  0139C4  0E00               	movlw	0
 17530  0139C6  2407               	addwf	??i2___ftge,w,c
 17531  0139C8  6E01               	movwf	i2___ftge@ff1,c
 17532  0139CA  0E00               	movlw	0
 17533  0139CC  2008               	addwfc	??i2___ftge+1,w,c
 17534  0139CE  6E02               	movwf	i2___ftge@ff1+1,c
 17535  0139D0  0E80               	movlw	128
 17536  0139D2  2009               	addwfc	??i2___ftge+2,w,c
 17537  0139D4  6E03               	movwf	i2___ftge@ff1+2,c
 17538  0139D6                     i2l1302:
 17539  0139D6  AE06               	btfss	i2___ftge@ff2+2,7,c
 17540  0139D8  D016               	goto	i2l1303
 17541  0139DA  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
 17542  0139DE  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
 17543  0139E2  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
 17544  0139E6  1E07               	comf	??i2___ftge,f,c
 17545  0139E8  1E08               	comf	??i2___ftge+1,f,c
 17546  0139EA  1E09               	comf	??i2___ftge+2,f,c
 17547  0139EC  2A07               	incf	??i2___ftge,f,c
 17548  0139EE  0E00               	movlw	0
 17549  0139F0  2208               	addwfc	??i2___ftge+1,f,c
 17550  0139F2  2209               	addwfc	??i2___ftge+2,f,c
 17551  0139F4  0E00               	movlw	0
 17552  0139F6  2407               	addwf	??i2___ftge,w,c
 17553  0139F8  6E04               	movwf	i2___ftge@ff2,c
 17554  0139FA  0E00               	movlw	0
 17555  0139FC  2008               	addwfc	??i2___ftge+1,w,c
 17556  0139FE  6E05               	movwf	i2___ftge@ff2+1,c
 17557  013A00  0E80               	movlw	128
 17558  013A02  2009               	addwfc	??i2___ftge+2,w,c
 17559  013A04  6E06               	movwf	i2___ftge@ff2+2,c
 17560  013A06                     i2l1303:
 17561  013A06  0E00               	movlw	0
 17562  013A08  1A01               	xorwf	i2___ftge@ff1,f,c
 17563  013A0A  0E00               	movlw	0
 17564  013A0C  1A02               	xorwf	i2___ftge@ff1+1,f,c
 17565  013A0E  0E80               	movlw	128
 17566  013A10  1A03               	xorwf	i2___ftge@ff1+2,f,c
 17567  013A12  0E00               	movlw	0
 17568  013A14  1A04               	xorwf	i2___ftge@ff2,f,c
 17569  013A16  0E00               	movlw	0
 17570  013A18  1A05               	xorwf	i2___ftge@ff2+1,f,c
 17571  013A1A  0E80               	movlw	128
 17572  013A1C  1A06               	xorwf	i2___ftge@ff2+2,f,c
 17573  013A1E  5004               	movf	i2___ftge@ff2,w,c
 17574  013A20  5C01               	subwf	i2___ftge@ff1,w,c
 17575  013A22  5005               	movf	i2___ftge@ff2+1,w,c
 17576  013A24  5802               	subwfb	i2___ftge@ff1+1,w,c
 17577  013A26  5006               	movf	i2___ftge@ff2+2,w,c
 17578  013A28  5803               	subwfb	i2___ftge@ff1+2,w,c
 17579  013A2A  B0D8               	btfsc	status,0,c
 17580  013A2C  D002               	goto	i2l3924
 17581  013A2E  90D8               	bcf	status,0,c
 17582  013A30  0012               	return	
 17583  013A32                     i2l3924:
 17584  013A32  80D8               	bsf	status,0,c
 17585  013A34  0012               	return	
 17586  013A36                     __end_ofi2___ftge:
 17587                           	opt stack 0
 17588                           tosu	equ	0xFFF
 17589                           tosh	equ	0xFFE
 17590                           tosl	equ	0xFFD
 17591                           pclatu	equ	0xFFB
 17592                           pclath	equ	0xFFA
 17593                           tblptru	equ	0xFF8
 17594                           tblptrh	equ	0xFF7
 17595                           tblptrl	equ	0xFF6
 17596                           tablat	equ	0xFF5
 17597                           prodh	equ	0xFF4
 17598                           prodl	equ	0xFF3
 17599                           intcon	equ	0xFF2
 17600                           postinc0	equ	0xFEE
 17601                           fsr0h	equ	0xFEA
 17602                           fsr0l	equ	0xFE9
 17603                           wreg	equ	0xFE8
 17604                           fsr1h	equ	0xFE2
 17605                           fsr1l	equ	0xFE1
 17606                           bsr	equ	0xFE0
 17607                           indf2	equ	0xFDF
 17608                           postinc2	equ	0xFDE
 17609                           postdec2	equ	0xFDD
 17610                           fsr2h	equ	0xFDA
 17611                           fsr2l	equ	0xFD9
 17612                           status	equ	0xFD8
 17613                           
 17614 ;; *************** function _ADCC_ISR *****************
 17615 ;; Defined at:
 17616 ;;		line 297 in file "mcc_generated_files/adcc.c"
 17617 ;; Parameters:    Size  Location     Type
 17618 ;;		None
 17619 ;; Auto vars:     Size  Location     Type
 17620 ;;		None
 17621 ;; Return value:  Size  Location     Type
 17622 ;;                  1    wreg      void 
 17623 ;; Registers used:
 17624 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17625 ;; Tracked objects:
 17626 ;;		On entry : 0/0
 17627 ;;		On exit  : 0/0
 17628 ;;		Unchanged: 0/0
 17629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17634 ;;Total ram usage:        0 bytes
 17635 ;; Hardware stack levels used:    1
 17636 ;; Hardware stack levels required when called:    3
 17637 ;; This function calls:
 17638 ;;		Absolute function
 17639 ;;		_ADCC_DefaultInterruptHandler
 17640 ;;		_ADC_postProcessingCallback
 17641 ;; This function is called by:
 17642 ;;		_INTERRUPT_InterruptManagerHigh
 17643 ;; This function uses a non-reentrant model
 17644 ;;
 17645                           
 17646                           	psect	text77
 17647  0144AE                     __ptext77:
 17648                           	opt stack 0
 17649  0144AE                     _ADCC_ISR:
 17650                           	opt stack 14
 17651                           
 17652                           ;adcc.c: 300: PIR1bits.ADIF = 0;
 17653                           
 17654                           ;incstack = 0
 17655  0144AE  010E               	movlb	14	; () banked
 17656  0144B0  9134               	bcf	52,0,b	;volatile
 17657                           
 17658                           ; BSR set to: 14
 17659                           ;adcc.c: 302: if (ADCC_ADI_InterruptHandler)
 17660  0144B2  5054               	movf	_ADCC_ADI_InterruptHandler,w,c
 17661  0144B4  1055               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 17662  0144B6  1056               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 17663  0144B8  B4D8               	btfsc	status,2,c
 17664  0144BA  0012               	return	
 17665                           
 17666                           ; BSR set to: 14
 17667                           ;adcc.c: 303: ADCC_ADI_InterruptHandler();
 17668  0144BC  D801               	call	i2u847_48
 17669  0144BE  0012               	return	
 17670  0144C0                     i2u847_48:
 17671  0144C0  0005               	push	
 17672  0144C2  6EFA               	movwf	pclath,c
 17673  0144C4  5054               	movf	_ADCC_ADI_InterruptHandler,w,c
 17674  0144C6  6EFD               	movwf	tosl,c
 17675  0144C8  5055               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 17676  0144CA  6EFE               	movwf	tosh,c
 17677  0144CC  5056               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 17678  0144CE  6EFF               	movwf	tosu,c
 17679  0144D0  50FA               	movf	pclath,w,c
 17680  0144D2  0012               	return		;indir
 17681  0144D4                     __end_of_ADCC_ISR:
 17682                           	opt stack 0
 17683                           tosu	equ	0xFFF
 17684                           tosh	equ	0xFFE
 17685                           tosl	equ	0xFFD
 17686                           pclatu	equ	0xFFB
 17687                           pclath	equ	0xFFA
 17688                           tblptru	equ	0xFF8
 17689                           tblptrh	equ	0xFF7
 17690                           tblptrl	equ	0xFF6
 17691                           tablat	equ	0xFF5
 17692                           prodh	equ	0xFF4
 17693                           prodl	equ	0xFF3
 17694                           intcon	equ	0xFF2
 17695                           postinc0	equ	0xFEE
 17696                           fsr0h	equ	0xFEA
 17697                           fsr0l	equ	0xFE9
 17698                           wreg	equ	0xFE8
 17699                           fsr1h	equ	0xFE2
 17700                           fsr1l	equ	0xFE1
 17701                           bsr	equ	0xFE0
 17702                           indf2	equ	0xFDF
 17703                           postinc2	equ	0xFDE
 17704                           postdec2	equ	0xFDD
 17705                           fsr2h	equ	0xFDA
 17706                           fsr2l	equ	0xFD9
 17707                           status	equ	0xFD8
 17708                           
 17709 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 17710 ;; Defined at:
 17711 ;;		line 310 in file "mcc_generated_files/adcc.c"
 17712 ;; Parameters:    Size  Location     Type
 17713 ;;		None
 17714 ;; Auto vars:     Size  Location     Type
 17715 ;;		None
 17716 ;; Return value:  Size  Location     Type
 17717 ;;                  1    wreg      void 
 17718 ;; Registers used:
 17719 ;;		None
 17720 ;; Tracked objects:
 17721 ;;		On entry : 0/0
 17722 ;;		On exit  : 0/0
 17723 ;;		Unchanged: 0/0
 17724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17729 ;;Total ram usage:        0 bytes
 17730 ;; Hardware stack levels used:    1
 17731 ;; This function calls:
 17732 ;;		Nothing
 17733 ;; This function is called by:
 17734 ;;		_ADCC_Initialize
 17735 ;;		_ADCC_ISR
 17736 ;; This function uses a non-reentrant model
 17737 ;;
 17738                           
 17739                           	psect	text78
 17740  014642                     __ptext78:
 17741                           	opt stack 0
 17742  014642                     _ADCC_DefaultInterruptHandler:
 17743                           	opt stack 16
 17744                           
 17745                           ;incstack = 0
 17746  014642  0012               	return		;funcret
 17747  014644                     __end_of_ADCC_DefaultInterruptHandler:
 17748                           	opt stack 0
 17749                           tosu	equ	0xFFF
 17750                           tosh	equ	0xFFE
 17751                           tosl	equ	0xFFD
 17752                           pclatu	equ	0xFFB
 17753                           pclath	equ	0xFFA
 17754                           tblptru	equ	0xFF8
 17755                           tblptrh	equ	0xFF7
 17756                           tblptrl	equ	0xFF6
 17757                           tablat	equ	0xFF5
 17758                           prodh	equ	0xFF4
 17759                           prodl	equ	0xFF3
 17760                           intcon	equ	0xFF2
 17761                           postinc0	equ	0xFEE
 17762                           fsr0h	equ	0xFEA
 17763                           fsr0l	equ	0xFE9
 17764                           wreg	equ	0xFE8
 17765                           fsr1h	equ	0xFE2
 17766                           fsr1l	equ	0xFE1
 17767                           bsr	equ	0xFE0
 17768                           indf2	equ	0xFDF
 17769                           postinc2	equ	0xFDE
 17770                           postdec2	equ	0xFDD
 17771                           fsr2h	equ	0xFDA
 17772                           fsr2l	equ	0xFD9
 17773                           status	equ	0xFD8
 17774                           
 17775 ;; *************** function _ADC_postProcessingCallback *****************
 17776 ;; Defined at:
 17777 ;;		line 86 in file "main.c"
 17778 ;; Parameters:    Size  Location     Type
 17779 ;;		None
 17780 ;; Auto vars:     Size  Location     Type
 17781 ;;  currentADCCh    1   75[COMRAM] enum E17316
 17782 ;; Return value:  Size  Location     Type
 17783 ;;                  1    wreg      void 
 17784 ;; Registers used:
 17785 ;;		wreg, status,2, status,0, cstack
 17786 ;; Tracked objects:
 17787 ;;		On entry : 0/0
 17788 ;;		On exit  : 0/0
 17789 ;;		Unchanged: 0/0
 17790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17792 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17794 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17795 ;;Total ram usage:       13 bytes
 17796 ;; Hardware stack levels used:    1
 17797 ;; Hardware stack levels required when called:    2
 17798 ;; This function calls:
 17799 ;;		_ADCC_GetConversionResult
 17800 ;;		___ftdiv
 17801 ;;		___lwtoft
 17802 ;;		i2___ftadd
 17803 ;;		i2___ftmul
 17804 ;;		i2___ftneg
 17805 ;; This function is called by:
 17806 ;;		_main
 17807 ;;		_ADCC_ISR
 17808 ;; This function uses a non-reentrant model
 17809 ;;
 17810                           
 17811                           	psect	text79
 17812  011EDE                     __ptext79:
 17813                           	opt stack 0
 17814  011EDE                     _ADC_postProcessingCallback:
 17815                           	opt stack 14
 17816                           
 17817                           ;main.c: 88: adcc_channel_t currentADCChannel = ADPCH;
 17818                           
 17819                           ;incstack = 0
 17820  011EDE  CF5F F04C          	movff	3935,ADC_postProcessingCallback@currentADCChannel	;volatile
 17821                           
 17822                           ;main.c: 90: switch (currentADCChannel) {
 17823  011EE2  D144               	goto	i2l699
 17824  011EE4                     
 17825                           ;main.c: 94: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 17826  011EE4  ECAA  F0A2         	call	_ADCC_GetConversionResult	;wreg free
 17827  011EE8  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 17828  011EEC  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 17829  011EF0  EC7C  F0A2         	call	___lwtoft	;wreg free
 17830  011EF4  C009  F01E         	movff	?___lwtoft,i2___ftmul@f1
 17831  011EF8  C00A  F01F         	movff	?___lwtoft+1,i2___ftmul@f1+1
 17832  011EFC  C00B  F020         	movff	?___lwtoft+2,i2___ftmul@f1+2
 17833  011F00  0E68               	movlw	104
 17834  011F02  6E21               	movwf	i2___ftmul@f2,c
 17835  011F04  0E53               	movlw	83
 17836  011F06  6E22               	movwf	i2___ftmul@f2+1,c
 17837  011F08  0E3B               	movlw	59
 17838  011F0A  6E23               	movwf	i2___ftmul@f2+2,c
 17839  011F0C  EC88  F099         	call	i2___ftmul	;wreg free
 17840  011F10  C01E  F05B         	movff	?i2___ftmul,_FVR_ADC_Result
 17841  011F14  C01F  F05C         	movff	?i2___ftmul+1,_FVR_ADC_Result+1
 17842  011F18  C020  F05D         	movff	?i2___ftmul+2,_FVR_ADC_Result+2
 17843                           
 17844                           ;main.c: 95: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 17845  011F1C  0E12               	movlw	18
 17846  011F1E  6E0C               	movwf	___ftdiv@f1,c
 17847  011F20  0E03               	movlw	3
 17848  011F22  6E0D               	movwf	___ftdiv@f1+1,c
 17849  011F24  0E40               	movlw	64
 17850  011F26  6E0E               	movwf	___ftdiv@f1+2,c
 17851  011F28  C05B  F00F         	movff	_FVR_ADC_Result,___ftdiv@f2
 17852  011F2C  C05C  F010         	movff	_FVR_ADC_Result+1,___ftdiv@f2+1
 17853  011F30  C05D  F011         	movff	_FVR_ADC_Result+2,___ftdiv@f2+2
 17854  011F34  EC02  F09A         	call	___ftdiv	;wreg free
 17855  011F38  C00C  F0A6         	movff	?___ftdiv,_ADC_Result_Scaling
 17856  011F3C  C00D  F0A7         	movff	?___ftdiv+1,_ADC_Result_Scaling+1
 17857  011F40  C00E  F0A8         	movff	?___ftdiv+2,_ADC_Result_Scaling+2
 17858                           
 17859                           ;main.c: 97: break;
 17860  011F44  0012               	return	
 17861  011F46                     
 17862                           ;main.c: 101: POS3P3_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) * 2.0 * AD
      +                          C_Result_Scaling;
 17863  011F46  C0A6  F021         	movff	_ADC_Result_Scaling,i2___ftmul@f2
 17864  011F4A  C0A7  F022         	movff	_ADC_Result_Scaling+1,i2___ftmul@f2+1
 17865  011F4E  C0A8  F023         	movff	_ADC_Result_Scaling+2,i2___ftmul@f2+2
 17866  011F52  ECAA  F0A2         	call	_ADCC_GetConversionResult	;wreg free
 17867  011F56  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 17868  011F5A  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 17869  011F5E  EC7C  F0A2         	call	___lwtoft	;wreg free
 17870  011F62  C009  F01E         	movff	?___lwtoft,i2___ftmul@f1
 17871  011F66  C00A  F01F         	movff	?___lwtoft+1,i2___ftmul@f1+1
 17872  011F6A  C00B  F020         	movff	?___lwtoft+2,i2___ftmul@f1+2
 17873  011F6E  EC88  F099         	call	i2___ftmul	;wreg free
 17874  011F72  C01E  F04D         	movff	?i2___ftmul,_ADC_postProcessingCallback$2779
 17875  011F76  C01F  F04E         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$2779+1
 17876  011F7A  C020  F04F         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$2779+2
 17877                           
 17878                           ;main.c: 101: POS3P3_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) * 2.0 * AD
      +                          C_Result_Scaling;
 17879  011F7E  C04D  F01E         	movff	_ADC_postProcessingCallback$2779,i2___ftmul@f1
 17880  011F82  C04E  F01F         	movff	_ADC_postProcessingCallback$2779+1,i2___ftmul@f1+1
 17881  011F86  C04F  F020         	movff	_ADC_postProcessingCallback$2779+2,i2___ftmul@f1+2
 17882  011F8A  0E68               	movlw	104
 17883  011F8C  6E21               	movwf	i2___ftmul@f2,c
 17884  011F8E  0ED3               	movlw	211
 17885  011F90  6E22               	movwf	i2___ftmul@f2+1,c
 17886  011F92  0E3B               	movlw	59
 17887  011F94  6E23               	movwf	i2___ftmul@f2+2,c
 17888  011F96  EC88  F099         	call	i2___ftmul	;wreg free
 17889  011F9A  C01E  F051         	movff	?i2___ftmul,_POS3P3_ADC_Result
 17890  011F9E  C01F  F052         	movff	?i2___ftmul+1,_POS3P3_ADC_Result+1
 17891  011FA2  C020  F053         	movff	?i2___ftmul+2,_POS3P3_ADC_Result+2
 17892                           
 17893                           ;main.c: 102: break;
 17894  011FA6  0012               	return	
 17895  011FA8                     
 17896                           ;main.c: 106: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 17897  011FA8  0EC0               	movlw	192
 17898  011FAA  6E0F               	movwf	___ftdiv@f2,c
 17899  011FAC  0E7F               	movlw	127
 17900  011FAE  6E10               	movwf	___ftdiv@f2+1,c
 17901  011FB0  0E44               	movlw	68
 17902  011FB2  6E11               	movwf	___ftdiv@f2+2,c
 17903  011FB4  C051  F00C         	movff	_POS3P3_ADC_Result,___ftdiv@f1
 17904  011FB8  C052  F00D         	movff	_POS3P3_ADC_Result+1,___ftdiv@f1+1
 17905  011FBC  C053  F00E         	movff	_POS3P3_ADC_Result+2,___ftdiv@f1+2
 17906  011FC0  EC02  F09A         	call	___ftdiv	;wreg free
 17907  011FC4  C00C  F021         	movff	?___ftdiv,i2___ftmul@f2
 17908  011FC8  C00D  F022         	movff	?___ftdiv+1,i2___ftmul@f2+1
 17909  011FCC  C00E  F023         	movff	?___ftdiv+2,i2___ftmul@f2+2
 17910  011FD0  ECAA  F0A2         	call	_ADCC_GetConversionResult	;wreg free
 17911  011FD4  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 17912  011FD8  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 17913  011FDC  EC7C  F0A2         	call	___lwtoft	;wreg free
 17914  011FE0  C009  F01E         	movff	?___lwtoft,i2___ftmul@f1
 17915  011FE4  C00A  F01F         	movff	?___lwtoft+1,i2___ftmul@f1+1
 17916  011FE8  C00B  F020         	movff	?___lwtoft+2,i2___ftmul@f1+2
 17917  011FEC  EC88  F099         	call	i2___ftmul	;wreg free
 17918  011FF0  C01E  F04D         	movff	?i2___ftmul,_ADC_postProcessingCallback$2779
 17919  011FF4  C01F  F04E         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$2779+1
 17920  011FF8  C020  F04F         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$2779+2
 17921                           
 17922                           ;main.c: 106: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 17923  011FFC  C04D  F01E         	movff	_ADC_postProcessingCallback$2779,i2___ftmul@f1
 17924  012000  C04E  F01F         	movff	_ADC_postProcessingCallback$2779+1,i2___ftmul@f1+1
 17925  012004  C04F  F020         	movff	_ADC_postProcessingCallback$2779+2,i2___ftmul@f1+2
 17926  012008  0EF8               	movlw	248
 17927  01200A  6E21               	movwf	i2___ftmul@f2,c
 17928  01200C  0E80               	movlw	128
 17929  01200E  6E22               	movwf	i2___ftmul@f2+1,c
 17930  012010  0E40               	movlw	64
 17931  012012  6E23               	movwf	i2___ftmul@f2+2,c
 17932  012014  EC88  F099         	call	i2___ftmul	;wreg free
 17933  012018  C01E  F147         	movff	?i2___ftmul,_POS12_ADC_Result
 17934  01201C  C01F  F148         	movff	?i2___ftmul+1,_POS12_ADC_Result+1
 17935  012020  C020  F149         	movff	?i2___ftmul+2,_POS12_ADC_Result+2
 17936                           
 17937                           ;main.c: 107: break;
 17938  012024  0012               	return	
 17939  012026                     
 17940                           ;main.c: 111: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 17941  012026  0E00               	movlw	0
 17942  012028  6E0F               	movwf	___ftdiv@f2,c
 17943  01202A  0E00               	movlw	0
 17944  01202C  6E10               	movwf	___ftdiv@f2+1,c
 17945  01202E  0E40               	movlw	64
 17946  012030  6E11               	movwf	___ftdiv@f2+2,c
 17947  012032  C051  F00C         	movff	_POS3P3_ADC_Result,___ftdiv@f1
 17948  012036  C052  F00D         	movff	_POS3P3_ADC_Result+1,___ftdiv@f1+1
 17949  01203A  C053  F00E         	movff	_POS3P3_ADC_Result+2,___ftdiv@f1+2
 17950  01203E  EC02  F09A         	call	___ftdiv	;wreg free
 17951  012042  C00C  F021         	movff	?___ftdiv,i2___ftmul@f2
 17952  012046  C00D  F022         	movff	?___ftdiv+1,i2___ftmul@f2+1
 17953  01204A  C00E  F023         	movff	?___ftdiv+2,i2___ftmul@f2+2
 17954  01204E  0E00               	movlw	0
 17955  012050  6E3A               	movwf	i2___ftadd@f2,c
 17956  012052  0E80               	movlw	128
 17957  012054  6E3B               	movwf	i2___ftadd@f2+1,c
 17958  012056  0E3F               	movlw	63
 17959  012058  6E3C               	movwf	i2___ftadd@f2+2,c
 17960  01205A  0EC0               	movlw	192
 17961  01205C  6E0F               	movwf	___ftdiv@f2,c
 17962  01205E  0E7F               	movlw	127
 17963  012060  6E10               	movwf	___ftdiv@f2+1,c
 17964  012062  0E44               	movlw	68
 17965  012064  6E11               	movwf	___ftdiv@f2+2,c
 17966  012066  ECAA  F0A2         	call	_ADCC_GetConversionResult	;wreg free
 17967  01206A  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 17968  01206E  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 17969  012072  EC7C  F0A2         	call	___lwtoft	;wreg free
 17970  012076  C009  F00C         	movff	?___lwtoft,___ftdiv@f1
 17971  01207A  C00A  F00D         	movff	?___lwtoft+1,___ftdiv@f1+1
 17972  01207E  C00B  F00E         	movff	?___lwtoft+2,___ftdiv@f1+2
 17973  012082  EC02  F09A         	call	___ftdiv	;wreg free
 17974  012086  C00C  F01B         	movff	?___ftdiv,i2___ftneg@f1
 17975  01208A  C00D  F01C         	movff	?___ftdiv+1,i2___ftneg@f1+1
 17976  01208E  C00E  F01D         	movff	?___ftdiv+2,i2___ftneg@f1+2
 17977  012092  EC6A  F0A2         	call	i2___ftneg	;wreg free
 17978  012096  C01B  F037         	movff	?i2___ftneg,i2___ftadd@f1
 17979  01209A  C01C  F038         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 17980  01209E  C01D  F039         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 17981  0120A2  EC23  F094         	call	i2___ftadd	;wreg free
 17982  0120A6  C037  F01E         	movff	?i2___ftadd,i2___ftmul@f1
 17983  0120AA  C038  F01F         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 17984  0120AE  C039  F020         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 17985  0120B2  EC88  F099         	call	i2___ftmul	;wreg free
 17986  0120B6  C01E  F043         	movff	?i2___ftmul,_ADC_postProcessingCallback$2780
 17987  0120BA  C01F  F044         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$2780+1
 17988  0120BE  C020  F045         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$2780+2
 17989                           
 17990                           ;main.c: 111: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 17991  0120C2  0E04               	movlw	4
 17992  0120C4  6E0F               	movwf	___ftdiv@f2,c
 17993  0120C6  0EAD               	movlw	173
 17994  0120C8  6E10               	movwf	___ftdiv@f2+1,c
 17995  0120CA  0E3A               	movlw	58
 17996  0120CC  6E11               	movwf	___ftdiv@f2+2,c
 17997  0120CE  0EB4               	movlw	180
 17998  0120D0  6E3A               	movwf	i2___ftadd@f2,c
 17999  0120D2  0E28               	movlw	40
 18000  0120D4  6E3B               	movwf	i2___ftadd@f2+1,c
 18001  0120D6  0E3F               	movlw	63
 18002  0120D8  6E3C               	movwf	i2___ftadd@f2+2,c
 18003  0120DA  C043  F01B         	movff	_ADC_postProcessingCallback$2780,i2___ftneg@f1
 18004  0120DE  C044  F01C         	movff	_ADC_postProcessingCallback$2780+1,i2___ftneg@f1+1
 18005  0120E2  C045  F01D         	movff	_ADC_postProcessingCallback$2780+2,i2___ftneg@f1+2
 18006  0120E6  EC6A  F0A2         	call	i2___ftneg	;wreg free
 18007  0120EA  C01B  F037         	movff	?i2___ftneg,i2___ftadd@f1
 18008  0120EE  C01C  F038         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 18009  0120F2  C01D  F039         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 18010  0120F6  EC23  F094         	call	i2___ftadd	;wreg free
 18011  0120FA  C037  F00C         	movff	?i2___ftadd,___ftdiv@f1
 18012  0120FE  C038  F00D         	movff	?i2___ftadd+1,___ftdiv@f1+1
 18013  012102  C039  F00E         	movff	?i2___ftadd+2,___ftdiv@f1+2
 18014  012106  EC02  F09A         	call	___ftdiv	;wreg free
 18015  01210A  C00C  F046         	movff	?___ftdiv,_ADC_postProcessingCallback$2781
 18016  01210E  C00D  F047         	movff	?___ftdiv+1,_ADC_postProcessingCallback$2781+1
 18017  012112  C00E  F048         	movff	?___ftdiv+2,_ADC_postProcessingCallback$2781+2
 18018                           
 18019                           ;main.c: 111: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 18020  012116  C0BC  F03A         	movff	_Temp_ADC_Offset,i2___ftadd@f2
 18021  01211A  C0BD  F03B         	movff	_Temp_ADC_Offset+1,i2___ftadd@f2+1
 18022  01211E  C0BE  F03C         	movff	_Temp_ADC_Offset+2,i2___ftadd@f2+2
 18023  012122  C046  F037         	movff	_ADC_postProcessingCallback$2781,i2___ftadd@f1
 18024  012126  C047  F038         	movff	_ADC_postProcessingCallback$2781+1,i2___ftadd@f1+1
 18025  01212A  C048  F039         	movff	_ADC_postProcessingCallback$2781+2,i2___ftadd@f1+2
 18026  01212E  EC23  F094         	call	i2___ftadd	;wreg free
 18027  012132  C037  F049         	movff	?i2___ftadd,_ADC_postProcessingCallback$2782
 18028  012136  C038  F04A         	movff	?i2___ftadd+1,_ADC_postProcessingCallback$2782+1
 18029  01213A  C039  F04B         	movff	?i2___ftadd+2,_ADC_postProcessingCallback$2782+2
 18030                           
 18031                           ;main.c: 111: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 18032  01213E  C049  F037         	movff	_ADC_postProcessingCallback$2782,i2___ftadd@f1
 18033  012142  C04A  F038         	movff	_ADC_postProcessingCallback$2782+1,i2___ftadd@f1+1
 18034  012146  C04B  F039         	movff	_ADC_postProcessingCallback$2782+2,i2___ftadd@f1+2
 18035  01214A  0E00               	movlw	0
 18036  01214C  6E3A               	movwf	i2___ftadd@f2,c
 18037  01214E  0E20               	movlw	32
 18038  012150  6E3B               	movwf	i2___ftadd@f2+1,c
 18039  012152  0EC2               	movlw	194
 18040  012154  6E3C               	movwf	i2___ftadd@f2+2,c
 18041  012156  EC23  F094         	call	i2___ftadd	;wreg free
 18042  01215A  C037  F144         	movff	?i2___ftadd,_Temp_ADC_Result
 18043  01215E  C038  F145         	movff	?i2___ftadd+1,_Temp_ADC_Result+1
 18044  012162  C039  F146         	movff	?i2___ftadd+2,_Temp_ADC_Result+2
 18045                           
 18046                           ;main.c: 112: break;
 18047  012166  0012               	return	
 18048  012168                     i2l705:
 18049                           
 18050                           ;main.c: 116: LATFbits.LATF3 = 1;
 18051  012168  867E               	bsf	3966,3,c	;volatile
 18052                           
 18053                           ;main.c: 119: }
 18054                           
 18055                           ;main.c: 117: break;
 18056  01216A  0012               	return	
 18057  01216C                     i2l699:
 18058  01216C  504C               	movf	ADC_postProcessingCallback@currentADCChannel,w,c
 18059                           
 18060                           ; Switch size 1, requested type "space"
 18061                           ; Number of cases is 4, Range of values is 4 to 63
 18062                           ; switch strategies available:
 18063                           ; Name         Instructions Cycles
 18064                           ; simple_byte           13     7 (average)
 18065                           ;	Chosen strategy is simple_byte
 18066  01216E  0A04               	xorlw	4	; case 4
 18067  012170  B4D8               	btfsc	status,2,c
 18068  012172  D71A               	goto	i2l703
 18069  012174  0A26               	xorlw	38	; case 34
 18070  012176  B4D8               	btfsc	status,2,c
 18071  012178  D6E6               	goto	i2l702
 18072  01217A  0A1F               	xorlw	31	; case 61
 18073  01217C  B4D8               	btfsc	status,2,c
 18074  01217E  D753               	goto	i2l704
 18075  012180  0A02               	xorlw	2	; case 63
 18076  012182  B4D8               	btfsc	status,2,c
 18077  012184  D6AF               	goto	i2l700
 18078  012186  D7F0               	goto	i2l705
 18079  012188                     __end_of_ADC_postProcessingCallback:
 18080                           	opt stack 0
 18081                           tosu	equ	0xFFF
 18082                           tosh	equ	0xFFE
 18083                           tosl	equ	0xFFD
 18084                           pclatu	equ	0xFFB
 18085                           pclath	equ	0xFFA
 18086                           tblptru	equ	0xFF8
 18087                           tblptrh	equ	0xFF7
 18088                           tblptrl	equ	0xFF6
 18089                           tablat	equ	0xFF5
 18090                           prodh	equ	0xFF4
 18091                           prodl	equ	0xFF3
 18092                           intcon	equ	0xFF2
 18093                           postinc0	equ	0xFEE
 18094                           fsr0h	equ	0xFEA
 18095                           fsr0l	equ	0xFE9
 18096                           wreg	equ	0xFE8
 18097                           fsr1h	equ	0xFE2
 18098                           fsr1l	equ	0xFE1
 18099                           bsr	equ	0xFE0
 18100                           indf2	equ	0xFDF
 18101                           postinc2	equ	0xFDE
 18102                           postdec2	equ	0xFDD
 18103                           fsr2h	equ	0xFDA
 18104                           fsr2l	equ	0xFD9
 18105                           status	equ	0xFD8
 18106                           
 18107 ;; *************** function i2___ftneg *****************
 18108 ;; Defined at:
 18109 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 18110 ;; Parameters:    Size  Location     Type
 18111 ;;  f1              3   26[COMRAM] float 
 18112 ;; Auto vars:     Size  Location     Type
 18113 ;;		None
 18114 ;; Return value:  Size  Location     Type
 18115 ;;                  3   26[COMRAM] float 
 18116 ;; Registers used:
 18117 ;;		wreg, status,2, status,0
 18118 ;; Tracked objects:
 18119 ;;		On entry : 0/0
 18120 ;;		On exit  : 0/0
 18121 ;;		Unchanged: 0/0
 18122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18123 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18126 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18127 ;;Total ram usage:        3 bytes
 18128 ;; Hardware stack levels used:    1
 18129 ;; This function calls:
 18130 ;;		Nothing
 18131 ;; This function is called by:
 18132 ;;		_ADC_postProcessingCallback
 18133 ;;		i2_printf
 18134 ;; This function uses a non-reentrant model
 18135 ;;
 18136                           
 18137                           	psect	text80
 18138  0144D4                     __ptext80:
 18139                           	opt stack 0
 18140  0144D4                     i2___ftneg:
 18141                           	opt stack 15
 18142                           
 18143                           ;incstack = 0
 18144  0144D4  501B               	movf	i2___ftneg@f1,w,c
 18145  0144D6  101C               	iorwf	i2___ftneg@f1+1,w,c
 18146  0144D8  101D               	iorwf	i2___ftneg@f1+2,w,c
 18147  0144DA  B4D8               	btfsc	status,2,c
 18148  0144DC  D006               	goto	i2l1320
 18149  0144DE  0E00               	movlw	0
 18150  0144E0  1A1B               	xorwf	i2___ftneg@f1,f,c
 18151  0144E2  0E00               	movlw	0
 18152  0144E4  1A1C               	xorwf	i2___ftneg@f1+1,f,c
 18153  0144E6  0E80               	movlw	128
 18154  0144E8  1A1D               	xorwf	i2___ftneg@f1+2,f,c
 18155  0144EA                     i2l1320:
 18156  0144EA  C01B  F01B         	movff	i2___ftneg@f1,?i2___ftneg
 18157  0144EE  C01C  F01C         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 18158  0144F2  C01D  F01D         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 18159  0144F6  0012               	return		;funcret
 18160  0144F8                     __end_ofi2___ftneg:
 18161                           	opt stack 0
 18162                           tosu	equ	0xFFF
 18163                           tosh	equ	0xFFE
 18164                           tosl	equ	0xFFD
 18165                           pclatu	equ	0xFFB
 18166                           pclath	equ	0xFFA
 18167                           tblptru	equ	0xFF8
 18168                           tblptrh	equ	0xFF7
 18169                           tblptrl	equ	0xFF6
 18170                           tablat	equ	0xFF5
 18171                           prodh	equ	0xFF4
 18172                           prodl	equ	0xFF3
 18173                           intcon	equ	0xFF2
 18174                           postinc0	equ	0xFEE
 18175                           fsr0h	equ	0xFEA
 18176                           fsr0l	equ	0xFE9
 18177                           wreg	equ	0xFE8
 18178                           fsr1h	equ	0xFE2
 18179                           fsr1l	equ	0xFE1
 18180                           bsr	equ	0xFE0
 18181                           indf2	equ	0xFDF
 18182                           postinc2	equ	0xFDE
 18183                           postdec2	equ	0xFDD
 18184                           fsr2h	equ	0xFDA
 18185                           fsr2l	equ	0xFD9
 18186                           status	equ	0xFD8
 18187                           
 18188 ;; *************** function i2___ftmul *****************
 18189 ;; Defined at:
 18190 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 18191 ;; Parameters:    Size  Location     Type
 18192 ;;  f1              3   29[COMRAM] float 
 18193 ;;  f2              3   32[COMRAM] float 
 18194 ;; Auto vars:     Size  Location     Type
 18195 ;;  __ftmul         3   39[COMRAM] unsigned um
 18196 ;;  __ftmul         1   43[COMRAM] unsigned char 
 18197 ;;  __ftmul         1   42[COMRAM] unsigned char 
 18198 ;;  __ftmul         1   38[COMRAM] unsigned char 
 18199 ;; Return value:  Size  Location     Type
 18200 ;;                  3   29[COMRAM] float 
 18201 ;; Registers used:
 18202 ;;		wreg, status,2, status,0, cstack
 18203 ;; Tracked objects:
 18204 ;;		On entry : 0/0
 18205 ;;		On exit  : 0/0
 18206 ;;		Unchanged: 0/0
 18207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18208 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18209 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18210 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18211 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18212 ;;Total ram usage:       15 bytes
 18213 ;; Hardware stack levels used:    1
 18214 ;; Hardware stack levels required when called:    1
 18215 ;; This function calls:
 18216 ;;		i2___ftpack
 18217 ;; This function is called by:
 18218 ;;		_ADC_postProcessingCallback
 18219 ;;		i2_fround
 18220 ;;		i2_scale
 18221 ;;		i2_printf
 18222 ;; This function uses a non-reentrant model
 18223 ;;
 18224                           
 18225                           	psect	text81
 18226  013310                     __ptext81:
 18227                           	opt stack 0
 18228  013310                     i2___ftmul:
 18229                           	opt stack 13
 18230                           
 18231                           ;incstack = 0
 18232  013310  C020  F024         	movff	i2___ftmul@f1+2,??i2___ftmul
 18233  013314  6A25               	clrf	(??i2___ftmul+1)& (0+255),c
 18234  013316  6A26               	clrf	(??i2___ftmul+2)& (0+255),c
 18235  013318  341F               	rlcf	i2___ftmul@f1+1,w,c
 18236  01331A  3624               	rlcf	??i2___ftmul& (0+255),f,c
 18237  01331C  E301               	bnc	u496_41
 18238  01331E  8025               	bsf	(??i2___ftmul+1)& (0+255),0,c
 18239  013320                     u496_41:
 18240  013320  5024               	movf	??i2___ftmul,w,c
 18241  013322  6E27               	movwf	i2___ftmul@exp,c
 18242  013324  5027               	movf	i2___ftmul@exp,w,c
 18243  013326  A4D8               	btfss	status,2,c
 18244  013328  D007               	goto	i2l1309
 18245  01332A  0E00               	movlw	0
 18246  01332C  6E1E               	movwf	?i2___ftmul,c
 18247  01332E  0E00               	movlw	0
 18248  013330  6E1F               	movwf	?i2___ftmul+1,c
 18249  013332  0E00               	movlw	0
 18250  013334  6E20               	movwf	?i2___ftmul+2,c
 18251  013336  0012               	return	
 18252  013338                     i2l1309:
 18253  013338  C023  F024         	movff	i2___ftmul@f2+2,??i2___ftmul
 18254  01333C  6A25               	clrf	(??i2___ftmul+1)& (0+255),c
 18255  01333E  6A26               	clrf	(??i2___ftmul+2)& (0+255),c
 18256  013340  3422               	rlcf	i2___ftmul@f2+1,w,c
 18257  013342  3624               	rlcf	??i2___ftmul& (0+255),f,c
 18258  013344  E301               	bnc	u498_41
 18259  013346  8025               	bsf	(??i2___ftmul+1)& (0+255),0,c
 18260  013348                     u498_41:
 18261  013348  5024               	movf	??i2___ftmul,w,c
 18262  01334A  6E2C               	movwf	i2___ftmul@sign,c
 18263  01334C  502C               	movf	i2___ftmul@sign,w,c
 18264  01334E  A4D8               	btfss	status,2,c
 18265  013350  D007               	goto	i2l1311
 18266  013352  0E00               	movlw	0
 18267  013354  6E1E               	movwf	?i2___ftmul,c
 18268  013356  0E00               	movlw	0
 18269  013358  6E1F               	movwf	?i2___ftmul+1,c
 18270  01335A  0E00               	movlw	0
 18271  01335C  6E20               	movwf	?i2___ftmul+2,c
 18272  01335E  0012               	return	
 18273  013360                     i2l1311:
 18274  013360  502C               	movf	i2___ftmul@sign,w,c
 18275  013362  0F7B               	addlw	123
 18276  013364  2627               	addwf	i2___ftmul@exp,f,c
 18277  013366  C020  F02C         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 18278  01336A  5023               	movf	i2___ftmul@f2+2,w,c
 18279  01336C  1A2C               	xorwf	i2___ftmul@sign,f,c
 18280  01336E  0E80               	movlw	128
 18281  013370  162C               	andwf	i2___ftmul@sign,f,c
 18282  013372  8E1F               	bsf	i2___ftmul@f1+1,7,c
 18283  013374  8E22               	bsf	i2___ftmul@f2+1,7,c
 18284  013376  0EFF               	movlw	255
 18285  013378  1621               	andwf	i2___ftmul@f2,f,c
 18286  01337A  0EFF               	movlw	255
 18287  01337C  1622               	andwf	i2___ftmul@f2+1,f,c
 18288  01337E  0E00               	movlw	0
 18289  013380  1623               	andwf	i2___ftmul@f2+2,f,c
 18290  013382  0E00               	movlw	0
 18291  013384  6E28               	movwf	i2___ftmul@f3_as_product,c
 18292  013386  0E00               	movlw	0
 18293  013388  6E29               	movwf	i2___ftmul@f3_as_product+1,c
 18294  01338A  0E00               	movlw	0
 18295  01338C  6E2A               	movwf	i2___ftmul@f3_as_product+2,c
 18296  01338E  0E07               	movlw	7
 18297  013390  6E2B               	movwf	i2___ftmul@cntr,c
 18298  013392  A01E               	btfss	i2___ftmul@f1,0,c
 18299  013394  D006               	goto	i2l1313
 18300  013396  5021               	movf	i2___ftmul@f2,w,c
 18301  013398  2628               	addwf	i2___ftmul@f3_as_product,f,c
 18302  01339A  5022               	movf	i2___ftmul@f2+1,w,c
 18303  01339C  2229               	addwfc	i2___ftmul@f3_as_product+1,f,c
 18304  01339E  5023               	movf	i2___ftmul@f2+2,w,c
 18305  0133A0  222A               	addwfc	i2___ftmul@f3_as_product+2,f,c
 18306  0133A2                     i2l1313:
 18307  0133A2  90D8               	bcf	status,0,c
 18308  0133A4  3220               	rrcf	i2___ftmul@f1+2,f,c
 18309  0133A6  321F               	rrcf	i2___ftmul@f1+1,f,c
 18310  0133A8  321E               	rrcf	i2___ftmul@f1,f,c
 18311  0133AA  90D8               	bcf	status,0,c
 18312  0133AC  3621               	rlcf	i2___ftmul@f2,f,c
 18313  0133AE  3622               	rlcf	i2___ftmul@f2+1,f,c
 18314  0133B0  3623               	rlcf	i2___ftmul@f2+2,f,c
 18315  0133B2  2E2B               	decfsz	i2___ftmul@cntr,f,c
 18316  0133B4  D7EE               	goto	i2l1312
 18317  0133B6  0E09               	movlw	9
 18318  0133B8  6E2B               	movwf	i2___ftmul@cntr,c
 18319  0133BA  A01E               	btfss	i2___ftmul@f1,0,c
 18320  0133BC  D006               	goto	i2l1316
 18321  0133BE  5021               	movf	i2___ftmul@f2,w,c
 18322  0133C0  2628               	addwf	i2___ftmul@f3_as_product,f,c
 18323  0133C2  5022               	movf	i2___ftmul@f2+1,w,c
 18324  0133C4  2229               	addwfc	i2___ftmul@f3_as_product+1,f,c
 18325  0133C6  5023               	movf	i2___ftmul@f2+2,w,c
 18326  0133C8  222A               	addwfc	i2___ftmul@f3_as_product+2,f,c
 18327  0133CA                     i2l1316:
 18328  0133CA  90D8               	bcf	status,0,c
 18329  0133CC  3220               	rrcf	i2___ftmul@f1+2,f,c
 18330  0133CE  321F               	rrcf	i2___ftmul@f1+1,f,c
 18331  0133D0  321E               	rrcf	i2___ftmul@f1,f,c
 18332  0133D2  90D8               	bcf	status,0,c
 18333  0133D4  322A               	rrcf	i2___ftmul@f3_as_product+2,f,c
 18334  0133D6  3229               	rrcf	i2___ftmul@f3_as_product+1,f,c
 18335  0133D8  3228               	rrcf	i2___ftmul@f3_as_product,f,c
 18336  0133DA  2E2B               	decfsz	i2___ftmul@cntr,f,c
 18337  0133DC  D7EE               	goto	i2l1315
 18338  0133DE  C028  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 18339  0133E2  C029  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 18340  0133E6  C02A  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 18341  0133EA  C027  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 18342  0133EE  C02C  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 18343  0133F2  EC3C  F09B         	call	i2___ftpack	;wreg free
 18344  0133F6  C001  F01E         	movff	?i2___ftpack,?i2___ftmul
 18345  0133FA  C002  F01F         	movff	?i2___ftpack+1,?i2___ftmul+1
 18346  0133FE  C003  F020         	movff	?i2___ftpack+2,?i2___ftmul+2
 18347  013402  0012               	return	
 18348  013404                     __end_ofi2___ftmul:
 18349                           	opt stack 0
 18350                           tosu	equ	0xFFF
 18351                           tosh	equ	0xFFE
 18352                           tosl	equ	0xFFD
 18353                           pclatu	equ	0xFFB
 18354                           pclath	equ	0xFFA
 18355                           tblptru	equ	0xFF8
 18356                           tblptrh	equ	0xFF7
 18357                           tblptrl	equ	0xFF6
 18358                           tablat	equ	0xFF5
 18359                           prodh	equ	0xFF4
 18360                           prodl	equ	0xFF3
 18361                           intcon	equ	0xFF2
 18362                           postinc0	equ	0xFEE
 18363                           fsr0h	equ	0xFEA
 18364                           fsr0l	equ	0xFE9
 18365                           wreg	equ	0xFE8
 18366                           fsr1h	equ	0xFE2
 18367                           fsr1l	equ	0xFE1
 18368                           bsr	equ	0xFE0
 18369                           indf2	equ	0xFDF
 18370                           postinc2	equ	0xFDE
 18371                           postdec2	equ	0xFDD
 18372                           fsr2h	equ	0xFDA
 18373                           fsr2l	equ	0xFD9
 18374                           status	equ	0xFD8
 18375                           
 18376 ;; *************** function i2___ftadd *****************
 18377 ;; Defined at:
 18378 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 18379 ;; Parameters:    Size  Location     Type
 18380 ;;  f1              3   54[COMRAM] float 
 18381 ;;  f2              3   57[COMRAM] float 
 18382 ;; Auto vars:     Size  Location     Type
 18383 ;;  __ftadd         1   65[COMRAM] unsigned char 
 18384 ;;  __ftadd         1   64[COMRAM] unsigned char 
 18385 ;;  __ftadd         1   63[COMRAM] unsigned char 
 18386 ;; Return value:  Size  Location     Type
 18387 ;;                  3   54[COMRAM] float 
 18388 ;; Registers used:
 18389 ;;		wreg, status,2, status,0, cstack
 18390 ;; Tracked objects:
 18391 ;;		On entry : 0/0
 18392 ;;		On exit  : 0/0
 18393 ;;		Unchanged: 0/0
 18394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18395 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18396 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18397 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18398 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18399 ;;Total ram usage:       12 bytes
 18400 ;; Hardware stack levels used:    1
 18401 ;; Hardware stack levels required when called:    1
 18402 ;; This function calls:
 18403 ;;		i2___ftpack
 18404 ;; This function is called by:
 18405 ;;		_ADC_postProcessingCallback
 18406 ;;		i2_printf
 18407 ;;		i2___ftsub
 18408 ;; This function uses a non-reentrant model
 18409 ;;
 18410                           
 18411                           	psect	text82
 18412  012846                     __ptext82:
 18413                           	opt stack 0
 18414  012846                     i2___ftadd:
 18415                           	opt stack 13
 18416                           
 18417                           ;incstack = 0
 18418  012846  C039  F03D         	movff	i2___ftadd@f1+2,??i2___ftadd
 18419  01284A  6A3E               	clrf	(??i2___ftadd+1)& (0+255),c
 18420  01284C  6A3F               	clrf	(??i2___ftadd+2)& (0+255),c
 18421  01284E  3438               	rlcf	i2___ftadd@f1+1,w,c
 18422  012850  363D               	rlcf	??i2___ftadd& (0+255),f,c
 18423  012852  E301               	bnc	u475_41
 18424  012854  803E               	bsf	(??i2___ftadd+1)& (0+255),0,c
 18425  012856                     u475_41:
 18426  012856  503D               	movf	??i2___ftadd,w,c
 18427  012858  6E42               	movwf	i2___ftadd@exp1,c
 18428  01285A  C03C  F03D         	movff	i2___ftadd@f2+2,??i2___ftadd
 18429  01285E  6A3E               	clrf	(??i2___ftadd+1)& (0+255),c
 18430  012860  6A3F               	clrf	(??i2___ftadd+2)& (0+255),c
 18431  012862  343B               	rlcf	i2___ftadd@f2+1,w,c
 18432  012864  363D               	rlcf	??i2___ftadd& (0+255),f,c
 18433  012866  E301               	bnc	u476_41
 18434  012868  803E               	bsf	(??i2___ftadd+1)& (0+255),0,c
 18435  01286A                     u476_41:
 18436  01286A  503D               	movf	??i2___ftadd,w,c
 18437  01286C  6E41               	movwf	i2___ftadd@exp2,c
 18438  01286E  5042               	movf	i2___ftadd@exp1,w,c
 18439  012870  B4D8               	btfsc	status,2,c
 18440  012872  D00B               	goto	i2u479_40
 18441  012874  5041               	movf	i2___ftadd@exp2,w,c
 18442  012876  5C42               	subwf	i2___ftadd@exp1,w,c
 18443  012878  B0D8               	btfsc	status,0,c
 18444  01287A  D00E               	goto	i2l1244
 18445  01287C  5042               	movf	i2___ftadd@exp1,w,c
 18446  01287E  0800               	sublw	0
 18447  012880  2441               	addwf	i2___ftadd@exp2,w,c
 18448  012882  6E3D               	movwf	??i2___ftadd& (0+255),c
 18449  012884  0E18               	movlw	24
 18450  012886  643D               	cpfsgt	??i2___ftadd,c
 18451  012888  D007               	goto	i2l1244
 18452  01288A                     i2u479_40:
 18453  01288A  C03A  F037         	movff	i2___ftadd@f2,?i2___ftadd
 18454  01288E  C03B  F038         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 18455  012892  C03C  F039         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 18456  012896  0012               	return	
 18457  012898                     i2l1244:
 18458  012898  5041               	movf	i2___ftadd@exp2,w,c
 18459  01289A  B4D8               	btfsc	status,2,c
 18460  01289C  D00B               	goto	i2u482_40
 18461  01289E  5042               	movf	i2___ftadd@exp1,w,c
 18462  0128A0  5C41               	subwf	i2___ftadd@exp2,w,c
 18463  0128A2  B0D8               	btfsc	status,0,c
 18464  0128A4  D00E               	goto	i2l1248
 18465  0128A6  5041               	movf	i2___ftadd@exp2,w,c
 18466  0128A8  0800               	sublw	0
 18467  0128AA  2442               	addwf	i2___ftadd@exp1,w,c
 18468  0128AC  6E3D               	movwf	??i2___ftadd& (0+255),c
 18469  0128AE  0E18               	movlw	24
 18470  0128B0  643D               	cpfsgt	??i2___ftadd,c
 18471  0128B2  D007               	goto	i2l1248
 18472  0128B4                     i2u482_40:
 18473  0128B4  C037  F037         	movff	i2___ftadd@f1,?i2___ftadd
 18474  0128B8  C038  F038         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 18475  0128BC  C039  F039         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 18476  0128C0  0012               	return	
 18477  0128C2                     i2l1248:
 18478  0128C2  0E06               	movlw	6
 18479  0128C4  6E40               	movwf	i2___ftadd@sign,c
 18480  0128C6  BE39               	btfsc	i2___ftadd@f1+2,7,c
 18481  0128C8  8E40               	bsf	i2___ftadd@sign,7,c
 18482  0128CA  BE3C               	btfsc	i2___ftadd@f2+2,7,c
 18483  0128CC  8C40               	bsf	i2___ftadd@sign,6,c
 18484  0128CE  8E38               	bsf	i2___ftadd@f1+1,7,c
 18485  0128D0  0EFF               	movlw	255
 18486  0128D2  1637               	andwf	i2___ftadd@f1,f,c
 18487  0128D4  0EFF               	movlw	255
 18488  0128D6  1638               	andwf	i2___ftadd@f1+1,f,c
 18489  0128D8  0E00               	movlw	0
 18490  0128DA  1639               	andwf	i2___ftadd@f1+2,f,c
 18491  0128DC  8E3B               	bsf	i2___ftadd@f2+1,7,c
 18492  0128DE  0EFF               	movlw	255
 18493  0128E0  163A               	andwf	i2___ftadd@f2,f,c
 18494  0128E2  0EFF               	movlw	255
 18495  0128E4  163B               	andwf	i2___ftadd@f2+1,f,c
 18496  0128E6  0E00               	movlw	0
 18497  0128E8  163C               	andwf	i2___ftadd@f2+2,f,c
 18498  0128EA  5041               	movf	i2___ftadd@exp2,w,c
 18499  0128EC  5C42               	subwf	i2___ftadd@exp1,w,c
 18500  0128EE  B0D8               	btfsc	status,0,c
 18501  0128F0  D01B               	goto	i2l1253
 18502  0128F2                     i2u485_40:
 18503  0128F2  90D8               	bcf	status,0,c
 18504  0128F4  363A               	rlcf	i2___ftadd@f2,f,c
 18505  0128F6  363B               	rlcf	i2___ftadd@f2+1,f,c
 18506  0128F8  363C               	rlcf	i2___ftadd@f2+2,f,c
 18507  0128FA  0641               	decf	i2___ftadd@exp2,f,c
 18508  0128FC  5042               	movf	i2___ftadd@exp1,w,c
 18509  0128FE  1841               	xorwf	i2___ftadd@exp2,w,c
 18510  012900  B4D8               	btfsc	status,2,c
 18511  012902  D00D               	goto	i2l1258
 18512  012904  0640               	decf	i2___ftadd@sign,f,c
 18513  012906  C040  F03D         	movff	i2___ftadd@sign,??i2___ftadd
 18514  01290A  0E07               	movlw	7
 18515  01290C  163D               	andwf	??i2___ftadd,f,c
 18516  01290E  B4D8               	btfsc	status,2,c
 18517  012910  D006               	goto	i2l1258
 18518  012912  D7EF               	goto	i2u485_40
 18519  012914  90D8               	bcf	status,0,c
 18520  012916  3239               	rrcf	i2___ftadd@f1+2,f,c
 18521  012918  3238               	rrcf	i2___ftadd@f1+1,f,c
 18522  01291A  3237               	rrcf	i2___ftadd@f1,f,c
 18523  01291C  2A42               	incf	i2___ftadd@exp1,f,c
 18524  01291E                     i2l1258:
 18525  01291E  5041               	movf	i2___ftadd@exp2,w,c
 18526  012920  1842               	xorwf	i2___ftadd@exp1,w,c
 18527  012922  B4D8               	btfsc	status,2,c
 18528  012924  D01F               	goto	i2u492_40
 18529  012926  D7F6               	goto	i2l1259
 18530  012928                     i2l1253:
 18531  012928  5042               	movf	i2___ftadd@exp1,w,c
 18532  01292A  5C41               	subwf	i2___ftadd@exp2,w,c
 18533  01292C  B0D8               	btfsc	status,0,c
 18534  01292E  D01A               	goto	i2u492_40
 18535  012930                     i2u489_40:
 18536  012930  90D8               	bcf	status,0,c
 18537  012932  3637               	rlcf	i2___ftadd@f1,f,c
 18538  012934  3638               	rlcf	i2___ftadd@f1+1,f,c
 18539  012936  3639               	rlcf	i2___ftadd@f1+2,f,c
 18540  012938  0642               	decf	i2___ftadd@exp1,f,c
 18541  01293A  5042               	movf	i2___ftadd@exp1,w,c
 18542  01293C  1841               	xorwf	i2___ftadd@exp2,w,c
 18543  01293E  B4D8               	btfsc	status,2,c
 18544  012940  D00D               	goto	i2l1267
 18545  012942  0640               	decf	i2___ftadd@sign,f,c
 18546  012944  C040  F03D         	movff	i2___ftadd@sign,??i2___ftadd
 18547  012948  0E07               	movlw	7
 18548  01294A  163D               	andwf	??i2___ftadd,f,c
 18549  01294C  B4D8               	btfsc	status,2,c
 18550  01294E  D006               	goto	i2l1267
 18551  012950  D7EF               	goto	i2u489_40
 18552  012952  90D8               	bcf	status,0,c
 18553  012954  323C               	rrcf	i2___ftadd@f2+2,f,c
 18554  012956  323B               	rrcf	i2___ftadd@f2+1,f,c
 18555  012958  323A               	rrcf	i2___ftadd@f2,f,c
 18556  01295A  2A41               	incf	i2___ftadd@exp2,f,c
 18557  01295C                     i2l1267:
 18558  01295C  5041               	movf	i2___ftadd@exp2,w,c
 18559  01295E  1842               	xorwf	i2___ftadd@exp1,w,c
 18560  012960  A4D8               	btfss	status,2,c
 18561  012962  D7F7               	goto	i2l1268
 18562  012964                     i2u492_40:
 18563  012964  AE40               	btfss	i2___ftadd@sign,7,c
 18564  012966  D00C               	goto	i2l1270
 18565  012968  0EFF               	movlw	255
 18566  01296A  1A37               	xorwf	i2___ftadd@f1,f,c
 18567  01296C  0EFF               	movlw	255
 18568  01296E  1A38               	xorwf	i2___ftadd@f1+1,f,c
 18569  012970  0EFF               	movlw	255
 18570  012972  1A39               	xorwf	i2___ftadd@f1+2,f,c
 18571  012974  0E01               	movlw	1
 18572  012976  2637               	addwf	i2___ftadd@f1,f,c
 18573  012978  0E00               	movlw	0
 18574  01297A  2238               	addwfc	i2___ftadd@f1+1,f,c
 18575  01297C  0E00               	movlw	0
 18576  01297E  2239               	addwfc	i2___ftadd@f1+2,f,c
 18577  012980                     i2l1270:
 18578  012980  AC40               	btfss	i2___ftadd@sign,6,c
 18579  012982  D00C               	goto	i2l1271
 18580  012984  0EFF               	movlw	255
 18581  012986  1A3A               	xorwf	i2___ftadd@f2,f,c
 18582  012988  0EFF               	movlw	255
 18583  01298A  1A3B               	xorwf	i2___ftadd@f2+1,f,c
 18584  01298C  0EFF               	movlw	255
 18585  01298E  1A3C               	xorwf	i2___ftadd@f2+2,f,c
 18586  012990  0E01               	movlw	1
 18587  012992  263A               	addwf	i2___ftadd@f2,f,c
 18588  012994  0E00               	movlw	0
 18589  012996  223B               	addwfc	i2___ftadd@f2+1,f,c
 18590  012998  0E00               	movlw	0
 18591  01299A  223C               	addwfc	i2___ftadd@f2+2,f,c
 18592  01299C                     i2l1271:
 18593  01299C  0E00               	movlw	0
 18594  01299E  6E40               	movwf	i2___ftadd@sign,c
 18595  0129A0  5037               	movf	i2___ftadd@f1,w,c
 18596  0129A2  263A               	addwf	i2___ftadd@f2,f,c
 18597  0129A4  5038               	movf	i2___ftadd@f1+1,w,c
 18598  0129A6  223B               	addwfc	i2___ftadd@f2+1,f,c
 18599  0129A8  5039               	movf	i2___ftadd@f1+2,w,c
 18600  0129AA  223C               	addwfc	i2___ftadd@f2+2,f,c
 18601  0129AC  AE3C               	btfss	i2___ftadd@f2+2,7,c
 18602  0129AE  D00E               	goto	i2l1272
 18603  0129B0  0EFF               	movlw	255
 18604  0129B2  1A3A               	xorwf	i2___ftadd@f2,f,c
 18605  0129B4  0EFF               	movlw	255
 18606  0129B6  1A3B               	xorwf	i2___ftadd@f2+1,f,c
 18607  0129B8  0EFF               	movlw	255
 18608  0129BA  1A3C               	xorwf	i2___ftadd@f2+2,f,c
 18609  0129BC  0E01               	movlw	1
 18610  0129BE  263A               	addwf	i2___ftadd@f2,f,c
 18611  0129C0  0E00               	movlw	0
 18612  0129C2  223B               	addwfc	i2___ftadd@f2+1,f,c
 18613  0129C4  0E00               	movlw	0
 18614  0129C6  223C               	addwfc	i2___ftadd@f2+2,f,c
 18615  0129C8  0E01               	movlw	1
 18616  0129CA  6E40               	movwf	i2___ftadd@sign,c
 18617  0129CC                     i2l1272:
 18618  0129CC  C03A  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 18619  0129D0  C03B  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 18620  0129D4  C03C  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 18621  0129D8  C042  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 18622  0129DC  C040  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 18623  0129E0  EC3C  F09B         	call	i2___ftpack	;wreg free
 18624  0129E4  C001  F037         	movff	?i2___ftpack,?i2___ftadd
 18625  0129E8  C002  F038         	movff	?i2___ftpack+1,?i2___ftadd+1
 18626  0129EC  C003  F039         	movff	?i2___ftpack+2,?i2___ftadd+2
 18627  0129F0  0012               	return	
 18628  0129F2                     __end_ofi2___ftadd:
 18629                           	opt stack 0
 18630                           tosu	equ	0xFFF
 18631                           tosh	equ	0xFFE
 18632                           tosl	equ	0xFFD
 18633                           pclatu	equ	0xFFB
 18634                           pclath	equ	0xFFA
 18635                           tblptru	equ	0xFF8
 18636                           tblptrh	equ	0xFF7
 18637                           tblptrl	equ	0xFF6
 18638                           tablat	equ	0xFF5
 18639                           prodh	equ	0xFF4
 18640                           prodl	equ	0xFF3
 18641                           intcon	equ	0xFF2
 18642                           postinc0	equ	0xFEE
 18643                           fsr0h	equ	0xFEA
 18644                           fsr0l	equ	0xFE9
 18645                           wreg	equ	0xFE8
 18646                           fsr1h	equ	0xFE2
 18647                           fsr1l	equ	0xFE1
 18648                           bsr	equ	0xFE0
 18649                           indf2	equ	0xFDF
 18650                           postinc2	equ	0xFDE
 18651                           postdec2	equ	0xFDD
 18652                           fsr2h	equ	0xFDA
 18653                           fsr2l	equ	0xFD9
 18654                           status	equ	0xFD8
 18655                           
 18656 ;; *************** function ___lwtoft *****************
 18657 ;; Defined at:
 18658 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 18659 ;; Parameters:    Size  Location     Type
 18660 ;;  c               2    8[COMRAM] unsigned int 
 18661 ;; Auto vars:     Size  Location     Type
 18662 ;;		None
 18663 ;; Return value:  Size  Location     Type
 18664 ;;                  3    8[COMRAM] float 
 18665 ;; Registers used:
 18666 ;;		wreg, status,2, status,0, cstack
 18667 ;; Tracked objects:
 18668 ;;		On entry : 0/0
 18669 ;;		On exit  : 0/0
 18670 ;;		Unchanged: 0/0
 18671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18672 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18675 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18676 ;;Total ram usage:        3 bytes
 18677 ;; Hardware stack levels used:    1
 18678 ;; Hardware stack levels required when called:    1
 18679 ;; This function calls:
 18680 ;;		i2___ftpack
 18681 ;; This function is called by:
 18682 ;;		_ADC_postProcessingCallback
 18683 ;; This function uses a non-reentrant model
 18684 ;;
 18685                           
 18686                           	psect	text83
 18687  0144F8                     __ptext83:
 18688                           	opt stack 0
 18689  0144F8                     ___lwtoft:
 18690                           	opt stack 14
 18691                           
 18692                           ;incstack = 0
 18693  0144F8  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 18694  0144FC  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 18695  014500  6A03               	clrf	i2___ftpack@arg+2,c
 18696  014502  0E8E               	movlw	142
 18697  014504  6E04               	movwf	i2___ftpack@exp,c
 18698  014506  0E00               	movlw	0
 18699  014508  6E05               	movwf	i2___ftpack@sign,c
 18700  01450A  EC3C  F09B         	call	i2___ftpack	;wreg free
 18701  01450E  C001  F009         	movff	?i2___ftpack,?___lwtoft
 18702  014512  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 18703  014516  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 18704  01451A  0012               	return	
 18705  01451C                     __end_of___lwtoft:
 18706                           	opt stack 0
 18707                           tosu	equ	0xFFF
 18708                           tosh	equ	0xFFE
 18709                           tosl	equ	0xFFD
 18710                           pclatu	equ	0xFFB
 18711                           pclath	equ	0xFFA
 18712                           tblptru	equ	0xFF8
 18713                           tblptrh	equ	0xFF7
 18714                           tblptrl	equ	0xFF6
 18715                           tablat	equ	0xFF5
 18716                           prodh	equ	0xFF4
 18717                           prodl	equ	0xFF3
 18718                           intcon	equ	0xFF2
 18719                           postinc0	equ	0xFEE
 18720                           fsr0h	equ	0xFEA
 18721                           fsr0l	equ	0xFE9
 18722                           wreg	equ	0xFE8
 18723                           fsr1h	equ	0xFE2
 18724                           fsr1l	equ	0xFE1
 18725                           bsr	equ	0xFE0
 18726                           indf2	equ	0xFDF
 18727                           postinc2	equ	0xFDE
 18728                           postdec2	equ	0xFDD
 18729                           fsr2h	equ	0xFDA
 18730                           fsr2l	equ	0xFD9
 18731                           status	equ	0xFD8
 18732                           
 18733 ;; *************** function ___ftdiv *****************
 18734 ;; Defined at:
 18735 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 18736 ;; Parameters:    Size  Location     Type
 18737 ;;  f1              3   11[COMRAM] float 
 18738 ;;  f2              3   14[COMRAM] float 
 18739 ;; Auto vars:     Size  Location     Type
 18740 ;;  f3              3   21[COMRAM] float 
 18741 ;;  sign            1   25[COMRAM] unsigned char 
 18742 ;;  exp             1   24[COMRAM] unsigned char 
 18743 ;;  cntr            1   20[COMRAM] unsigned char 
 18744 ;; Return value:  Size  Location     Type
 18745 ;;                  3   11[COMRAM] float 
 18746 ;; Registers used:
 18747 ;;		wreg, status,2, status,0, cstack
 18748 ;; Tracked objects:
 18749 ;;		On entry : 0/0
 18750 ;;		On exit  : 0/0
 18751 ;;		Unchanged: 0/0
 18752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18753 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18754 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18755 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18756 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18757 ;;Total ram usage:       15 bytes
 18758 ;; Hardware stack levels used:    1
 18759 ;; Hardware stack levels required when called:    1
 18760 ;; This function calls:
 18761 ;;		i2___ftpack
 18762 ;; This function is called by:
 18763 ;;		_ADC_postProcessingCallback
 18764 ;; This function uses a non-reentrant model
 18765 ;;
 18766                           
 18767                           	psect	text84
 18768  013404                     __ptext84:
 18769                           	opt stack 0
 18770  013404                     ___ftdiv:
 18771                           	opt stack 14
 18772                           
 18773                           ;incstack = 0
 18774  013404  C00E  F012         	movff	___ftdiv@f1+2,??___ftdiv
 18775  013408  6A13               	clrf	(??___ftdiv+1)& (0+255),c
 18776  01340A  6A14               	clrf	(??___ftdiv+2)& (0+255),c
 18777  01340C  340D               	rlcf	___ftdiv@f1+1,w,c
 18778  01340E  3612               	rlcf	??___ftdiv& (0+255),f,c
 18779  013410  E301               	bnc	u506_41
 18780  013412  8013               	bsf	(??___ftdiv+1)& (0+255),0,c
 18781  013414                     u506_41:
 18782  013414  5012               	movf	??___ftdiv,w,c
 18783  013416  6E19               	movwf	___ftdiv@exp,c
 18784  013418  5019               	movf	___ftdiv@exp,w,c
 18785  01341A  A4D8               	btfss	status,2,c
 18786  01341C  D007               	goto	i2l1277
 18787  01341E  0E00               	movlw	0
 18788  013420  6E0C               	movwf	?___ftdiv,c
 18789  013422  0E00               	movlw	0
 18790  013424  6E0D               	movwf	?___ftdiv+1,c
 18791  013426  0E00               	movlw	0
 18792  013428  6E0E               	movwf	?___ftdiv+2,c
 18793  01342A  0012               	return	
 18794  01342C                     i2l1277:
 18795  01342C  C011  F012         	movff	___ftdiv@f2+2,??___ftdiv
 18796  013430  6A13               	clrf	(??___ftdiv+1)& (0+255),c
 18797  013432  6A14               	clrf	(??___ftdiv+2)& (0+255),c
 18798  013434  3410               	rlcf	___ftdiv@f2+1,w,c
 18799  013436  3612               	rlcf	??___ftdiv& (0+255),f,c
 18800  013438  E301               	bnc	u508_41
 18801  01343A  8013               	bsf	(??___ftdiv+1)& (0+255),0,c
 18802  01343C                     u508_41:
 18803  01343C  5012               	movf	??___ftdiv,w,c
 18804  01343E  6E1A               	movwf	___ftdiv@sign,c
 18805  013440  501A               	movf	___ftdiv@sign,w,c
 18806  013442  A4D8               	btfss	status,2,c
 18807  013444  D007               	goto	i2l1279
 18808  013446  0E00               	movlw	0
 18809  013448  6E0C               	movwf	?___ftdiv,c
 18810  01344A  0E00               	movlw	0
 18811  01344C  6E0D               	movwf	?___ftdiv+1,c
 18812  01344E  0E00               	movlw	0
 18813  013450  6E0E               	movwf	?___ftdiv+2,c
 18814  013452  0012               	return	
 18815  013454                     i2l1279:
 18816  013454  0E00               	movlw	0
 18817  013456  6E16               	movwf	___ftdiv@f3,c
 18818  013458  0E00               	movlw	0
 18819  01345A  6E17               	movwf	___ftdiv@f3+1,c
 18820  01345C  0E00               	movlw	0
 18821  01345E  6E18               	movwf	___ftdiv@f3+2,c
 18822  013460  501A               	movf	___ftdiv@sign,w,c
 18823  013462  0F89               	addlw	137
 18824  013464  5E19               	subwf	___ftdiv@exp,f,c
 18825  013466  C00E  F01A         	movff	___ftdiv@f1+2,___ftdiv@sign
 18826  01346A  5011               	movf	___ftdiv@f2+2,w,c
 18827  01346C  1A1A               	xorwf	___ftdiv@sign,f,c
 18828  01346E  0E80               	movlw	128
 18829  013470  161A               	andwf	___ftdiv@sign,f,c
 18830  013472  8E0D               	bsf	___ftdiv@f1+1,7,c
 18831  013474  0EFF               	movlw	255
 18832  013476  160C               	andwf	___ftdiv@f1,f,c
 18833  013478  0EFF               	movlw	255
 18834  01347A  160D               	andwf	___ftdiv@f1+1,f,c
 18835  01347C  0E00               	movlw	0
 18836  01347E  160E               	andwf	___ftdiv@f1+2,f,c
 18837  013480  8E10               	bsf	___ftdiv@f2+1,7,c
 18838  013482  0EFF               	movlw	255
 18839  013484  160F               	andwf	___ftdiv@f2,f,c
 18840  013486  0EFF               	movlw	255
 18841  013488  1610               	andwf	___ftdiv@f2+1,f,c
 18842  01348A  0E00               	movlw	0
 18843  01348C  1611               	andwf	___ftdiv@f2+2,f,c
 18844  01348E  0E18               	movlw	24
 18845  013490  6E15               	movwf	___ftdiv@cntr,c
 18846  013492  90D8               	bcf	status,0,c
 18847  013494  3616               	rlcf	___ftdiv@f3,f,c
 18848  013496  3617               	rlcf	___ftdiv@f3+1,f,c
 18849  013498  3618               	rlcf	___ftdiv@f3+2,f,c
 18850  01349A  500F               	movf	___ftdiv@f2,w,c
 18851  01349C  5C0C               	subwf	___ftdiv@f1,w,c
 18852  01349E  5010               	movf	___ftdiv@f2+1,w,c
 18853  0134A0  580D               	subwfb	___ftdiv@f1+1,w,c
 18854  0134A2  5011               	movf	___ftdiv@f2+2,w,c
 18855  0134A4  580E               	subwfb	___ftdiv@f1+2,w,c
 18856  0134A6  A0D8               	btfss	status,0,c
 18857  0134A8  D007               	goto	i2l1281
 18858  0134AA  500F               	movf	___ftdiv@f2,w,c
 18859  0134AC  5E0C               	subwf	___ftdiv@f1,f,c
 18860  0134AE  5010               	movf	___ftdiv@f2+1,w,c
 18861  0134B0  5A0D               	subwfb	___ftdiv@f1+1,f,c
 18862  0134B2  5011               	movf	___ftdiv@f2+2,w,c
 18863  0134B4  5A0E               	subwfb	___ftdiv@f1+2,f,c
 18864  0134B6  8016               	bsf	___ftdiv@f3,0,c
 18865  0134B8                     i2l1281:
 18866  0134B8  90D8               	bcf	status,0,c
 18867  0134BA  360C               	rlcf	___ftdiv@f1,f,c
 18868  0134BC  360D               	rlcf	___ftdiv@f1+1,f,c
 18869  0134BE  360E               	rlcf	___ftdiv@f1+2,f,c
 18870  0134C0  2E15               	decfsz	___ftdiv@cntr,f,c
 18871  0134C2  D7E7               	goto	i2l1280
 18872  0134C4  C016  F001         	movff	___ftdiv@f3,i2___ftpack@arg
 18873  0134C8  C017  F002         	movff	___ftdiv@f3+1,i2___ftpack@arg+1
 18874  0134CC  C018  F003         	movff	___ftdiv@f3+2,i2___ftpack@arg+2
 18875  0134D0  C019  F004         	movff	___ftdiv@exp,i2___ftpack@exp
 18876  0134D4  C01A  F005         	movff	___ftdiv@sign,i2___ftpack@sign
 18877  0134D8  EC3C  F09B         	call	i2___ftpack	;wreg free
 18878  0134DC  C001  F00C         	movff	?i2___ftpack,?___ftdiv
 18879  0134E0  C002  F00D         	movff	?i2___ftpack+1,?___ftdiv+1
 18880  0134E4  C003  F00E         	movff	?i2___ftpack+2,?___ftdiv+2
 18881  0134E8  0012               	return	
 18882  0134EA                     __end_of___ftdiv:
 18883                           	opt stack 0
 18884                           tosu	equ	0xFFF
 18885                           tosh	equ	0xFFE
 18886                           tosl	equ	0xFFD
 18887                           pclatu	equ	0xFFB
 18888                           pclath	equ	0xFFA
 18889                           tblptru	equ	0xFF8
 18890                           tblptrh	equ	0xFF7
 18891                           tblptrl	equ	0xFF6
 18892                           tablat	equ	0xFF5
 18893                           prodh	equ	0xFF4
 18894                           prodl	equ	0xFF3
 18895                           intcon	equ	0xFF2
 18896                           postinc0	equ	0xFEE
 18897                           fsr0h	equ	0xFEA
 18898                           fsr0l	equ	0xFE9
 18899                           wreg	equ	0xFE8
 18900                           fsr1h	equ	0xFE2
 18901                           fsr1l	equ	0xFE1
 18902                           bsr	equ	0xFE0
 18903                           indf2	equ	0xFDF
 18904                           postinc2	equ	0xFDE
 18905                           postdec2	equ	0xFDD
 18906                           fsr2h	equ	0xFDA
 18907                           fsr2l	equ	0xFD9
 18908                           status	equ	0xFD8
 18909                           
 18910 ;; *************** function i2___ftpack *****************
 18911 ;; Defined at:
 18912 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 18913 ;; Parameters:    Size  Location     Type
 18914 ;;  arg             3    0[COMRAM] unsigned um
 18915 ;;  exp             1    3[COMRAM] unsigned char 
 18916 ;;  sign            1    4[COMRAM] unsigned char 
 18917 ;; Auto vars:     Size  Location     Type
 18918 ;;		None
 18919 ;; Return value:  Size  Location     Type
 18920 ;;                  3    0[COMRAM] float 
 18921 ;; Registers used:
 18922 ;;		wreg, status,2, status,0
 18923 ;; Tracked objects:
 18924 ;;		On entry : 0/0
 18925 ;;		On exit  : 0/0
 18926 ;;		Unchanged: 0/0
 18927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18928 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18930 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18931 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18932 ;;Total ram usage:        8 bytes
 18933 ;; Hardware stack levels used:    1
 18934 ;; This function calls:
 18935 ;;		Nothing
 18936 ;; This function is called by:
 18937 ;;		___ftdiv
 18938 ;;		___lwtoft
 18939 ;;		i2___ftadd
 18940 ;;		i2___ftmul
 18941 ;;		i2___lltoft
 18942 ;; This function uses a non-reentrant model
 18943 ;;
 18944                           
 18945                           	psect	text85
 18946  013678                     __ptext85:
 18947                           	opt stack 0
 18948  013678                     i2___ftpack:
 18949                           	opt stack 13
 18950                           
 18951                           ;incstack = 0
 18952  013678  5004               	movf	i2___ftpack@exp,w,c
 18953  01367A  B4D8               	btfsc	status,2,c
 18954  01367C  D005               	goto	i2u453_40
 18955  01367E  5001               	movf	i2___ftpack@arg,w,c
 18956  013680  1002               	iorwf	i2___ftpack@arg+1,w,c
 18957  013682  1003               	iorwf	i2___ftpack@arg+2,w,c
 18958  013684  A4D8               	btfss	status,2,c
 18959  013686  D00C               	goto	i2l1213
 18960  013688                     i2u453_40:
 18961  013688  0E00               	movlw	0
 18962  01368A  6E01               	movwf	?i2___ftpack,c
 18963  01368C  0E00               	movlw	0
 18964  01368E  6E02               	movwf	?i2___ftpack+1,c
 18965  013690  0E00               	movlw	0
 18966  013692  6E03               	movwf	?i2___ftpack+2,c
 18967  013694  0012               	return	
 18968  013696  2A04               	incf	i2___ftpack@exp,f,c
 18969  013698  90D8               	bcf	status,0,c
 18970  01369A  3203               	rrcf	i2___ftpack@arg+2,f,c
 18971  01369C  3202               	rrcf	i2___ftpack@arg+1,f,c
 18972  01369E  3201               	rrcf	i2___ftpack@arg,f,c
 18973  0136A0                     i2l1213:
 18974  0136A0  0E00               	movlw	0
 18975  0136A2  1401               	andwf	i2___ftpack@arg,w,c
 18976  0136A4  6E06               	movwf	??i2___ftpack& (0+255),c
 18977  0136A6  0E00               	movlw	0
 18978  0136A8  1402               	andwf	i2___ftpack@arg+1,w,c
 18979  0136AA  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 18980  0136AC  0EFE               	movlw	254
 18981  0136AE  1403               	andwf	i2___ftpack@arg+2,w,c
 18982  0136B0  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 18983  0136B2  5006               	movf	??i2___ftpack,w,c
 18984  0136B4  1007               	iorwf	??i2___ftpack+1,w,c
 18985  0136B6  1008               	iorwf	??i2___ftpack+2,w,c
 18986  0136B8  B4D8               	btfsc	status,2,c
 18987  0136BA  D00C               	goto	i2l1216
 18988  0136BC  D7EC               	goto	i2l1214
 18989  0136BE  2A04               	incf	i2___ftpack@exp,f,c
 18990  0136C0  0E01               	movlw	1
 18991  0136C2  2601               	addwf	i2___ftpack@arg,f,c
 18992  0136C4  0E00               	movlw	0
 18993  0136C6  2202               	addwfc	i2___ftpack@arg+1,f,c
 18994  0136C8  0E00               	movlw	0
 18995  0136CA  2203               	addwfc	i2___ftpack@arg+2,f,c
 18996  0136CC  90D8               	bcf	status,0,c
 18997  0136CE  3203               	rrcf	i2___ftpack@arg+2,f,c
 18998  0136D0  3202               	rrcf	i2___ftpack@arg+1,f,c
 18999  0136D2  3201               	rrcf	i2___ftpack@arg,f,c
 19000  0136D4                     i2l1216:
 19001  0136D4  0E00               	movlw	0
 19002  0136D6  1401               	andwf	i2___ftpack@arg,w,c
 19003  0136D8  6E06               	movwf	??i2___ftpack& (0+255),c
 19004  0136DA  0E00               	movlw	0
 19005  0136DC  1402               	andwf	i2___ftpack@arg+1,w,c
 19006  0136DE  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 19007  0136E0  0EFF               	movlw	255
 19008  0136E2  1403               	andwf	i2___ftpack@arg+2,w,c
 19009  0136E4  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 19010  0136E6  5006               	movf	??i2___ftpack,w,c
 19011  0136E8  1007               	iorwf	??i2___ftpack+1,w,c
 19012  0136EA  1008               	iorwf	??i2___ftpack+2,w,c
 19013  0136EC  B4D8               	btfsc	status,2,c
 19014  0136EE  D006               	goto	i2l1219
 19015  0136F0  D7E6               	goto	i2l1217
 19016  0136F2  0604               	decf	i2___ftpack@exp,f,c
 19017  0136F4  90D8               	bcf	status,0,c
 19018  0136F6  3601               	rlcf	i2___ftpack@arg,f,c
 19019  0136F8  3602               	rlcf	i2___ftpack@arg+1,f,c
 19020  0136FA  3603               	rlcf	i2___ftpack@arg+2,f,c
 19021  0136FC                     i2l1219:
 19022  0136FC  BE02               	btfsc	i2___ftpack@arg+1,7,c
 19023  0136FE  D003               	goto	i2u457_40
 19024  013700  0E02               	movlw	2
 19025  013702  6004               	cpfslt	i2___ftpack@exp,c
 19026  013704  D7F6               	goto	i2l1220
 19027  013706                     i2u457_40:
 19028  013706  A004               	btfss	i2___ftpack@exp,0,c
 19029  013708  9E02               	bcf	i2___ftpack@arg+1,7,c
 19030  01370A  90D8               	bcf	status,0,c
 19031  01370C  3204               	rrcf	i2___ftpack@exp,f,c
 19032  01370E  5004               	movf	i2___ftpack@exp,w,c
 19033  013710  1203               	iorwf	i2___ftpack@arg+2,f,c
 19034  013712  5005               	movf	i2___ftpack@sign,w,c
 19035  013714  A4D8               	btfss	status,2,c
 19036  013716  8E03               	bsf	i2___ftpack@arg+2,7,c
 19037  013718  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 19038  01371C  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 19039  013720  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 19040  013724  0012               	return	
 19041  013726                     __end_ofi2___ftpack:
 19042                           	opt stack 0
 19043                           tosu	equ	0xFFF
 19044                           tosh	equ	0xFFE
 19045                           tosl	equ	0xFFD
 19046                           pclatu	equ	0xFFB
 19047                           pclath	equ	0xFFA
 19048                           tblptru	equ	0xFF8
 19049                           tblptrh	equ	0xFF7
 19050                           tblptrl	equ	0xFF6
 19051                           tablat	equ	0xFF5
 19052                           prodh	equ	0xFF4
 19053                           prodl	equ	0xFF3
 19054                           intcon	equ	0xFF2
 19055                           postinc0	equ	0xFEE
 19056                           fsr0h	equ	0xFEA
 19057                           fsr0l	equ	0xFE9
 19058                           wreg	equ	0xFE8
 19059                           fsr1h	equ	0xFE2
 19060                           fsr1l	equ	0xFE1
 19061                           bsr	equ	0xFE0
 19062                           indf2	equ	0xFDF
 19063                           postinc2	equ	0xFDE
 19064                           postdec2	equ	0xFDD
 19065                           fsr2h	equ	0xFDA
 19066                           fsr2l	equ	0xFD9
 19067                           status	equ	0xFD8
 19068                           
 19069 ;; *************** function _ADCC_GetConversionResult *****************
 19070 ;; Defined at:
 19071 ;;		line 130 in file "mcc_generated_files/adcc.c"
 19072 ;; Parameters:    Size  Location     Type
 19073 ;;		None
 19074 ;; Auto vars:     Size  Location     Type
 19075 ;;		None
 19076 ;; Return value:  Size  Location     Type
 19077 ;;                  2    0[COMRAM] unsigned int 
 19078 ;; Registers used:
 19079 ;;		wreg, status,2, status,0
 19080 ;; Tracked objects:
 19081 ;;		On entry : 0/0
 19082 ;;		On exit  : 0/0
 19083 ;;		Unchanged: 0/0
 19084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19087 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19088 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19089 ;;Total ram usage:        4 bytes
 19090 ;; Hardware stack levels used:    1
 19091 ;; This function calls:
 19092 ;;		Nothing
 19093 ;; This function is called by:
 19094 ;;		_ADC_postProcessingCallback
 19095 ;; This function uses a non-reentrant model
 19096 ;;
 19097                           
 19098                           	psect	text86
 19099  014554                     __ptext86:
 19100                           	opt stack 0
 19101  014554                     _ADCC_GetConversionResult:
 19102                           	opt stack 15
 19103                           
 19104                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 19105                           
 19106                           ;incstack = 0
 19107  014554  5064               	movf	3940,w,c	;volatile
 19108  014556  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 19109  014558  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 19110  01455A  5063               	movf	3939,w,c	;volatile
 19111  01455C  2403               	addwf	??_ADCC_GetConversionResult,w,c
 19112  01455E  6E01               	movwf	?_ADCC_GetConversionResult,c
 19113  014560  0E00               	movlw	0
 19114  014562  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 19115  014564  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 19116  014566  0012               	return	
 19117  014568                     __end_of_ADCC_GetConversionResult:
 19118                           	opt stack 0
 19119                           tosu	equ	0xFFF
 19120                           tosh	equ	0xFFE
 19121                           tosl	equ	0xFFD
 19122                           pclatu	equ	0xFFB
 19123                           pclath	equ	0xFFA
 19124                           tblptru	equ	0xFF8
 19125                           tblptrh	equ	0xFF7
 19126                           tblptrl	equ	0xFF6
 19127                           tablat	equ	0xFF5
 19128                           prodh	equ	0xFF4
 19129                           prodl	equ	0xFF3
 19130                           intcon	equ	0xFF2
 19131                           postinc0	equ	0xFEE
 19132                           fsr0h	equ	0xFEA
 19133                           fsr0l	equ	0xFE9
 19134                           wreg	equ	0xFE8
 19135                           fsr1h	equ	0xFE2
 19136                           fsr1l	equ	0xFE1
 19137                           bsr	equ	0xFE0
 19138                           indf2	equ	0xFDF
 19139                           postinc2	equ	0xFDE
 19140                           postdec2	equ	0xFDD
 19141                           fsr2h	equ	0xFDA
 19142                           fsr2l	equ	0xFD9
 19143                           status	equ	0xFD8
 19144                           tosu	equ	0xFFF
 19145                           tosh	equ	0xFFE
 19146                           tosl	equ	0xFFD
 19147                           pclatu	equ	0xFFB
 19148                           pclath	equ	0xFFA
 19149                           tblptru	equ	0xFF8
 19150                           tblptrh	equ	0xFF7
 19151                           tblptrl	equ	0xFF6
 19152                           tablat	equ	0xFF5
 19153                           prodh	equ	0xFF4
 19154                           prodl	equ	0xFF3
 19155                           intcon	equ	0xFF2
 19156                           postinc0	equ	0xFEE
 19157                           fsr0h	equ	0xFEA
 19158                           fsr0l	equ	0xFE9
 19159                           wreg	equ	0xFE8
 19160                           fsr1h	equ	0xFE2
 19161                           fsr1l	equ	0xFE1
 19162                           bsr	equ	0xFE0
 19163                           indf2	equ	0xFDF
 19164                           postinc2	equ	0xFDE
 19165                           postdec2	equ	0xFDD
 19166                           fsr2h	equ	0xFDA
 19167                           fsr2l	equ	0xFD9
 19168                           status	equ	0xFD8
 19169                           
 19170                           	psect	text87
 19171  000000                     __ptext87:
 19172                           	opt stack 0
 19173                           tosu	equ	0xFFF
 19174                           tosh	equ	0xFFE
 19175                           tosl	equ	0xFFD
 19176                           pclatu	equ	0xFFB
 19177                           pclath	equ	0xFFA
 19178                           tblptru	equ	0xFF8
 19179                           tblptrh	equ	0xFF7
 19180                           tblptrl	equ	0xFF6
 19181                           tablat	equ	0xFF5
 19182                           prodh	equ	0xFF4
 19183                           prodl	equ	0xFF3
 19184                           intcon	equ	0xFF2
 19185                           postinc0	equ	0xFEE
 19186                           fsr0h	equ	0xFEA
 19187                           fsr0l	equ	0xFE9
 19188                           wreg	equ	0xFE8
 19189                           fsr1h	equ	0xFE2
 19190                           fsr1l	equ	0xFE1
 19191                           bsr	equ	0xFE0
 19192                           indf2	equ	0xFDF
 19193                           postinc2	equ	0xFDE
 19194                           postdec2	equ	0xFDD
 19195                           fsr2h	equ	0xFDA
 19196                           fsr2l	equ	0xFD9
 19197                           status	equ	0xFD8
 19198                           
 19199                           	psect	rparam
 19200  0000                     tosu	equ	0xFFF
 19201                           tosh	equ	0xFFE
 19202                           tosl	equ	0xFFD
 19203                           pclatu	equ	0xFFB
 19204                           pclath	equ	0xFFA
 19205                           tblptru	equ	0xFF8
 19206                           tblptrh	equ	0xFF7
 19207                           tblptrl	equ	0xFF6
 19208                           tablat	equ	0xFF5
 19209                           prodh	equ	0xFF4
 19210                           prodl	equ	0xFF3
 19211                           intcon	equ	0xFF2
 19212                           postinc0	equ	0xFEE
 19213                           fsr0h	equ	0xFEA
 19214                           fsr0l	equ	0xFE9
 19215                           wreg	equ	0xFE8
 19216                           fsr1h	equ	0xFE2
 19217                           fsr1l	equ	0xFE1
 19218                           bsr	equ	0xFE0
 19219                           indf2	equ	0xFDF
 19220                           postinc2	equ	0xFDE
 19221                           postdec2	equ	0xFDD
 19222                           fsr2h	equ	0xFDA
 19223                           fsr2l	equ	0xFD9
 19224                           status	equ	0xFD8
 19225                           
 19226                           	psect	temp
 19227  00005F                     btemp:
 19228                           	opt stack 0
 19229  00005F                     	ds	1
 19230  0000                     int$flags	set	btemp
 19231  0000                     wtemp6	set	btemp+1
 19232                           tosu	equ	0xFFF
 19233                           tosh	equ	0xFFE
 19234                           tosl	equ	0xFFD
 19235                           pclatu	equ	0xFFB
 19236                           pclath	equ	0xFFA
 19237                           tblptru	equ	0xFF8
 19238                           tblptrh	equ	0xFF7
 19239                           tblptrl	equ	0xFF6
 19240                           tablat	equ	0xFF5
 19241                           prodh	equ	0xFF4
 19242                           prodl	equ	0xFF3
 19243                           intcon	equ	0xFF2
 19244                           postinc0	equ	0xFEE
 19245                           fsr0h	equ	0xFEA
 19246                           fsr0l	equ	0xFE9
 19247                           wreg	equ	0xFE8
 19248                           fsr1h	equ	0xFE2
 19249                           fsr1l	equ	0xFE1
 19250                           bsr	equ	0xFE0
 19251                           indf2	equ	0xFDF
 19252                           postinc2	equ	0xFDE
 19253                           postdec2	equ	0xFDD
 19254                           fsr2h	equ	0xFDA
 19255                           fsr2l	equ	0xFD9
 19256                           status	equ	0xFD8


Data Sizes:
    Strings     1551
    Constant    118
    Data        3
    BSS         237
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     80      94
    BANK0           160     70      95
    BANK1           256    117     255
    BANK2           256      6      70
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK1[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_61(CODE[5]), STR_59(CODE[9]), STR_57(CODE[13]), STR_55(CODE[18]), 
		 -> STR_53(CODE[15]), STR_51(CODE[16]), STR_48(CODE[4]), STR_47(CODE[6]), 
		 -> STR_44(CODE[6]), STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK1[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 566
		 -> STR_67(CODE[30]), STR_66(CODE[23]), STR_65(CODE[40]), STR_64(CODE[30]), 
		 -> STR_63(CODE[33]), STR_62(CODE[566]), STR_60(CODE[58]), STR_58(CODE[56]), 
		 -> STR_56(CODE[34]), STR_54(CODE[34]), STR_52(CODE[35]), STR_50(CODE[47]), 
		 -> STR_49(CODE[17]), STR_46(CODE[4]), STR_45(CODE[5]), STR_43(CODE[4]), 
		 -> STR_42(CODE[5]), STR_40(CODE[3]), terminal_textAttributes@output_buff(BANK1[15]), STR_10(CODE[4]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[5]), 
		 -> STR_5(CODE[3]), STR_4(CODE[372]), STR_3(CODE[4]), STR_2(CODE[5]), 
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(BANK1[2]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK1[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_postProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_postProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___ftsub
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___ftmul
    i2___wmul->i2___awdiv
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    i2___fttol->i2___ftmul
    i2___ftsub->i2___ftadd
    _ADCC_ISR->_ADC_postProcessingCallback
    _ADC_postProcessingCallback->i2___ftadd
    i2___ftneg->___ftdiv
    i2___ftmul->i2___ftneg
    i2___ftadd->i2_fround
    ___lwtoft->i2___ftpack
    ___ftdiv->___lwtoft

Critical Paths under _main in BANK0

    _terminal_ringBufferPull->_strlen
    _ringBufferLUT->_strcmp
    _terminal_textAttributes->_strcat
    _terminal_textAttributes->_strncpy
    _printf->___ftge
    _printf->___llmod
    _printf->___lltoft
    _printf->__div_to_l_
    _printf->__tdiv_to_l_
    _scale->___awmod
    _putch->_EUSART2_Write
    _fround->___awmod
    ___wmul->___awmod
    ___ftmul->___awmod
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___lltoft
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _terminal_clearTerminal->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_terminal_ringBufferPull

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  478515
                                            115 BANK1      2     2      0
        _ADCC_SetADIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   64033
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  276485
                                            112 BANK1      3     3      0
                                              0 BANK2      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     400
                                             64 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                        2     0      2  275847
                                            110 BANK1      2     0      2
                             _printf
                             _strcmp
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0   72724
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2   72724
                                             92 BANK1     18    16      2
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             64 BANK0      6     0      6
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             64 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   64033
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    1933
                                             64 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             64 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   64033
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              43    37      6   64033
                                             57 BANK1     35    29      6
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                7     4      3   14596
                                             29 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      93
                                             65 BANK0      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      62
                                             64 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              10     7      3   14317
                                             29 BANK1     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3118
                                              8 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    6551
                                             14 BANK1     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    2053
                                             64 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2245
                                              0 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     634
                                             64 BANK0      6     0      6
                                              0 BANK1      9     9      0
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     904
                                             64 BANK0      6     0      6
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2935
                                             69 BANK0      1     1      0
                                              3 BANK1      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     952
                                             69 BANK0      1     1      0
                                              8 BANK1      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     781
                                             64 BANK0      5     5      0
                                              0 BANK1      8     0      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     641
                                             29 BANK1     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    5324
                                             51 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    4908
                                             39 BANK1     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2743
                                             64 BANK0      5     0      5
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     265
                                             64 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     738
                                             64 BANK0      6     0      6
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     718
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     174
                                             67 BANK0      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     174
                                             64 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     174
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     174
                                             64 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     196
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3      98
                                             64 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3      98
                                             64 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     174
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     174
                                             64 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                             43 BANK0     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR7_ISR                                            0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                             41 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_IsConversionDone                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR7_WriteTimer                                     2     0      2     240
                                             41 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _heartbeatTimerCallback                              1     1      0       0
                                             41 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                     18    18      0   28778
                                             23 BANK0     18    18      0
                   Absolute function *
                           _ADCC_ISR
                _EUSART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0   22023
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                           39    37      2   22023
                                             72 COMRAM     8     6      2
                                              0 BANK0     23    23      0
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (16) i2_scale                                             7     4      3    5003
                                             44 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0      66
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (17) i2_EUSART2_Write                                     1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_fround                                           10     7      3    4805
                                             44 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4     989
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___awmod                                           6     2      4     764
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4     820
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2__tdiv_to_l_                                      15     9      6     355
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (16) i2__div_to_l_                                       12     6      6     481
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (16) i2___lltoft                                          9     5      4     716
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (16) i2___llmod                                           9     1      8     367
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___lldiv                                          13     5      8     318
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (16) i2___fttol                                          15    11      4     330
                                             44 COMRAM    15    11      4
                          i2___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftsub                                           6     0      6    1892
                                             66 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftge                                            9     3      6     292
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            0     0      0    6755
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
         _ADC_postProcessingCallback *
 ---------------------------------------------------------------------------------
 (15) _ADC_postProcessingCallback                         13    13      0    6755
                                             66 COMRAM    13    13      0
           _ADCC_GetConversionResult
                            ___ftdiv
                           ___lwtoft
                          i2___ftadd
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) i2___ftneg                                           3     0      3     123
                                             26 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftmul                                          15     9      6    1987
                                             29 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftadd                                          12     6      6    1773
                                             54 COMRAM    12     6      6
           _ADCC_GetConversionResult (ARG)
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
                          i2___ftmul (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (16) ___lwtoft                                            3     0      3     947
                                              8 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (16) ___ftdiv                                            15     9      6    1787
                                             11 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (18) i2___ftpack                                          8     3      5     621
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _putch
         _EUSART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _putch
           _EUSART2_Write
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcmp
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
           ___ftsub
             ___ftadd
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _putch
             _EUSART2_Write
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
           ___ftsub
             ___ftadd
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _putch
             _EUSART2_Write
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___ftadd
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftge
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg
             ___ftsub
               ___ftadd
                 ___ftpack
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
             ___fttol
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lltoft
               ___ftpack
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _putch
               _EUSART2_Write
             _scale
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _strcat
           _strncpy
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _putch
         _EUSART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _putch
           _EUSART2_Write
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_IsConversionDone
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADC_postProcessingCallback *
       _ADCC_GetConversionResult
       ___ftdiv
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
       ___lwtoft
         _ADCC_GetConversionResult (ARG)
         i2___ftpack (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftge
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
       i2___ftsub
         i2___ftadd
           _ADCC_GetConversionResult (ARG)
           ___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lltoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___lltoft
         i2___ftpack
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      6      46      10       27.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     75      FF       7       99.6%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     46      5F       5       59.4%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     50      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     202       8        0.0%
DATA                 0      0     202       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Oct 28 11:43:45 2018

                                  __CFG_CP$OFF 000000                                             l53 454E  
                                 ___awdiv@sign 018F                         __end_of_FVR_Initialize 463A  
                                           bsr 000FE0                            ___wmul@multiplicand 0194  
                       ?_terminal_printNewline 0001                                     i2___ftpack 3678  
               __end_of_heartbeatTimerCallback 43C6                                   ___ftadd@exp1 01BC  
                                 ___ftadd@exp2 01BB                                     i2___lltoft 3F86  
                                 ___ftadd@sign 01BA                                            l361 41BE  
                                          l362 41BC                                            l371 4142  
                                          l372 4168                                            l364 41E6  
                                          l373 4166                                            l368 412E  
                                          l800 1BFA                                            l369 412C  
                                          l801 1C12                                            l810 1CFC  
                                          l802 1C2A                                            l803 1D5C  
                                          l811 1D14                                            l820 1E0A  
                                          l812 1D2C                                            l804 1C84  
                                          l821 1E22                                            l805 1D92  
                                          l813 1D44                                            l814 1E82  
                                          l822 1E3A                                            l806 1C9C  
                                          l726 3D7C                                            l911 23DA  
                                          l823 1E52                                            l815 1DAA  
                                          l807 1CB4                                            l816 1EB8  
                                          l824 1E6A                                            l808 1CCC  
                                          l921 1382                                            l817 1DC2  
                                          l809 1CE4                                            l914 1162  
                                          l930 0028                                            l818 1DDA  
                                          l770 2D4A                                            l915 106C  
                                          l931 0082                                            l819 1DF2  
                                          l771 2D12                                            l908 22F6  
                                          l860 183E                                            l941 01FE  
                                          l925 000C                                            l765 2CB4  
                                          l918 1136                                            l942 023E  
                                          l934 002C                                            l926 001C  
                                          l870 19A4                                            l862 187C  
                                          l919 12B8                                            l935 0618  
                                          l943 0308                                            l927 0034  
                                          l767 2CF2                                            l960 047A  
                                          l952 036E                                            l936 00D6  
                                          l872 19FC                                            l864 18F4  
                                          l768 2CD4                                            l961 046C  
                                          l970 0600                                            l946 02B0  
                                          l938 016A                                            l794 1C42  
                                          l874 1A54                                            l963 049E  
                                          l939 01D4                                            l795 1B9A  
                                          l972 0652                                            l964 04A2  
                                          l796 1C6C                                            l876 1AB0  
                                          l868 194C                                            l965 04BA  
                                          l957 0460                                            l797 1BB2  
                                          l966 05F4                                            l958 03CC  
                                          l798 1BCA                                            l967 050C  
                                          l799 1BE2                                            l976 06AE  
                                          l977 0742                                            l969 060E  
                                          l978 06BC                                   __CFG_CPD$OFF 000000  
                                          _PR6 000FB0                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 00A5                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                 ?_ADCC_SetADIInterruptHandler 00A0                                   __CFG_LVP$OFF 000000  
          __size_of_ADC_postProcessingCallback 02AA                                   __CFG_ZCD$OFF 000000  
                                 ___ftdiv@cntr 0015                                   ___ftdiv@sign 001A  
                                         l1220 3580                                           l1213 3516  
                                         l1302 3764                                           l1214 350A  
                                         l1150 3A5C                                           l1303 37A0  
                                         l1311 3178                                           l1320 442E  
                                         l1216 3556                                           l1152 3A7A  
                                         l1312 31AA                                           l1217 353E  
                                         l1153 3A72                                           l1313 31BA  
                                         l1330 305C                                           l1170 3C90  
                                         l1162 3C4C                                           l1219 358C  
                                         l1171 3C9E                                           l1163 3C58  
                                         l1315 31D2                                           l1244 26EC  
                                         l1332 30D4                                           l1156 3A9A  
                                         l1316 31E2                                           l1253 277C  
                                         l1341 3114                                           l1333 30C4  
                                         l1181 2B6E                                           l1157 3AA4  
                                         l1149 3A4C                                           l1165 3C6E  
                                         l1309 3150                                           l1270 27D4  
                                         l1326 4210                                           l1158 3AB2  
                                         l1166 3C66                                           l1271 27F0  
                                         l1183 2B92                                           l1272 2820  
                                         l1248 2716                                           l1184 2BD8  
                                         l1193 2C7A                                           l1185 2C0C  
                                         l1169 3C86                                           l1258 2772  
                                         l1338 30F8                                           l1370 3982  
                                         l1194 2C6C                                           l1267 27B0  
                                         l1259 2768                                           l1339 30EC  
                                         l1371 3994                                           l1187 2C52  
                                         l1291 2B08                                           l1268 27A6  
                                         l1380 3C14                                           l1188 2C40  
                                         l1292 2AF6                                           l1381 3C24  
                                         l1285 2A26                                           l1366 3946  
                                         l1367 3936                                           l1287 2A5A  
                                         l1376 3BE8                                           l1288 2A98  
                                         l1377 3BD8                                           l1297 2B30  
                                         l1289 2AC4                                           l1298 2B22  
                                         l1570 4104                                           l1387 3E0C  
                                         l1571 40FA                                           l1388 3DFC  
                                         l1567 40EA                                           l1591 3D90  
                                         l1576 4048                                           l1568 40E4  
                                         l1592 3DC2                                           l1584 42CC  
                                         l1577 403E                                           l1585 42C6  
                                         l1594 3DE0                                           l1595 3DCE  
                         _ADCC_StartConversion 460E                                           l6016 37CC  
                                         l6650 0286                                           l6642 023E  
                                         l6742 0656                                           l6670 0372  
                                         l6760 06BC                                           l6694 046C  
                                         l6778 3DCE                                           l6980 2CA4  
                                         l6990 2CCA                          __size_ofi2__div_to_l_ 0128  
                                         STR_1 FFC1                                           STR_2 FFAC  
                                         STR_3 FFB5                                           STR_4 FC25  
                                         STR_6 FFAC                                           STR_7 FFB5  
                                         STR_9 FFB9                                           _LATA 000F79  
                                         _LATB 000F7A                                           _LATC 000F7B  
                                         _LATD 000F7C                                           _LATE 000F7D  
                                         _LATF 000F7E                                           _LATG 000F7F  
                                         _LATH 000F80                                   printf@tmpval 01DE  
                                         _T6PR 000FB0                                           _PMD0 000E4C  
                                         _PMD1 000E4D                                           _PMD2 000E4E  
                                         _PMD3 000E4F                                           u7200 307A  
                                         u7120 2C82                                           _PMD4 000E50  
                                         _PMD5 000E51                                           u6410 34FC  
                                         u7050 2B38                                           u7300 3BEE  
                                         u7205 3072                                           u6511 26AA  
                                         u7240 30FE                                           u6521 26BE  
                                         u6450 3598                                           u6610 2746  
                                         u7500 03B0                                           u7420 0210  
                                         u7340 0064                                           u7181 3040  
                                         u6550 26DE                                           u7270 394C  
                                         u7430 0250                                           u6721 3138  
                                         u6650 2784                                           u6810 3A7E  
                                         u7610 0694                                           u7530 0488  
                                         u7347 005A                                           u6580 2708  
                                         u7540 0498                                           u7460 0286  
                                         u7380 010E                                           u6741 3160  
                                         u7630 0754                                           u6680 27B8  
                                         u7640 0784                                           u7720 4080  
                                         u7385 0104                                           u6870 3C72  
                                         u7647 077A                                           u7930 2CCA  
                                         u6971 2A08                                           u7790 18BA  
                                         u6991 2A3C                                           u8647 3D24  
                                         _PLLR 007230                                           _TMR6 000FAF  
                                         _WPUA 000E91                                           _WPUB 000E99  
                                         _WPUC 000EA1                                           _WPUD 000EA6  
                                         _WPUE 000EAE                                           _WPUF 000EB3  
                                         _WPUG 000EBB                                           _WPUH 000EC0  
                        ??_EUSART2_Receive_ISR 0051                               __end_of_ADCC_ISR 44D4  
                                __CFG_FCMEN$ON 000000                                  _EUSART2_Write 4126  
                                         _main 3D18                                           _line 014A  
                                 ___ftpack@arg 00A0                                   ___ftpack@exp 00A3  
                                ?_EUSART2_Read 0001                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 005F                                   i2___ftadd@f1 0037  
                                 i2___ftadd@f2 003A                                   i2___ftge@ff1 0001  
                                 i2___ftge@ff2 0004                                           prodh 000FF4  
                                         prodl 000FF3                                           start 00FE  
                              __end_ofi2_scale 17FE                   __end_of_EUSART2_Transmit_ISR 4330  
                                 i2___ftneg@f1 001B                                __end_ofi2_putch 4632  
                                __CFG_CSWEN$ON 000000                                   ___ftmul@cntr 01A5  
                                 i2___ftmul@f1 001E                                   i2___ftmul@f2 0021  
                                 ___param_bank 000000                     ??_TMR7_SetInterruptHandler 00A3  
                                 ___ftmul@sign 01A6                                   i2___ftsub@f1 0043  
                                 i2___ftsub@f2 0046                                   i2___fttol@f1 002D  
                     __size_ofi2_EUSART2_Write 0046                                   ___fttol@exp1 01B5  
                              _timer7ReloadVal 00B5                                   i2___lltoft@c 0009  
                                 ___fttol@lval 01B1                                ?_FVR_Initialize 0001  
               __size_of_OSCILLATOR_Initialize 001C                  __end_of_OSCILLATOR_Initialize 4554  
                     ?_terminal_textAttributes 01E6                              ??_TMR7_WriteTimer 008B  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                          _ADREF 000F58  
                              __end_of___awdiv 3ABC                                          _ADPRE 000F5E  
                              __end_of___ftadd 2846                                          STR_10 FFBD  
                                        STR_11 FFF5                                          STR_12 FFC6  
                                        STR_20 FFC5                                          STR_13 FFCC  
                                        STR_21 FFCB                                          STR_14 FFDE  
                                        STR_22 FFD1                                          STR_30 FFC8  
                                        STR_15 FFE4                                          STR_23 FFD7  
                                        STR_31 FFCE                                          STR_40 FEA4  
                                        STR_16 FFF0                                          STR_24 FFDD  
                                        STR_32 FFD4                                          STR_17 FFF8  
                                        STR_25 FFE3                                          STR_33 FFDA  
                                        STR_41 FFA1                                          STR_18 FFC6  
                                        STR_42 FFAC                                          STR_26 FFE9  
                                        STR_34 FFE0                                          STR_50 FE0B  
                                        STR_43 FFB5                                          STR_19 FFFA  
                                        STR_27 FFEF                                          STR_35 FFE6  
                                        STR_51 FF60                                          STR_28 FFEF  
                                        STR_36 FFEC                                          STR_44 FF9B  
                                        STR_52 FE62                                          STR_60 FD99  
                              __end_of___awmod 3CA8                                          STR_29 FFFA  
                                        STR_45 FFAC                                          STR_37 FFF2  
                                        STR_61 FFA7                                          STR_53 FF70  
                                        STR_38 FFF2                                          STR_46 FFB5  
                                        STR_54 FEA7                                          STR_62 F9EF  
                                        STR_39 FFFC                                          STR_47 FF95  
                                        STR_55 FF3D                                          STR_63 FEC9  
                                        STR_48 FFB1                                          STR_64 FF08  
                                        STR_56 FE85                                          _ADRPT 000F66  
                                        STR_57 FF7F                                          STR_49 FF4F  
                                        STR_65 FE3A                                          STR_66 FF26  
                                        STR_58 FDD3                                          STR_59 FF8C  
                                        STR_67 FEEA                                __end_of___ftdiv 34EA  
                              __end_of___ftneg 443C                                __end_of___lldiv 39A6  
                              __end_of___ftmul 321C                                ___awdiv@divisor 018C  
                              __end_of___llmod 3C36                                __end_of___ftsub 423A  
                              __end_of___fttol 3126                                          _T7CLK 000F33  
                                        _T6CON 000FB1                                 __CFG_DEBUG$OFF 000000  
                                        _T7CON 000F30                                          _T6HLT 000FB2  
                                        i1l211 00A6                                          i1l207 007C  
                                        i1l209 009C                                          i2l200 362C  
                                        i1l620 447A                                          i1l710 4240  
                                        i1l383 432A                                          i1l384 4326  
                                        i1l713 4250                                          i1l716 4260  
                                        i1l719 4270                                          i2l371 4188  
                                        i2l700 1EE4                                          i2l372 41AE  
                                        _T6TMR 000FAF                                          i2l373 41AC  
                                        i2l702 1F46                                          i2l390 389C  
                                        i2l198 3622                                          i2l703 1FA8  
                                        i2l391 38BA                                          i2l704 2026  
                                        i2l368 4174                                          i2l705 2168  
                                        i2l369 4172                                          i2l394 38BC  
                                        _T6RST 000FB4                                          i2l396 3906  
                                        i2l389 387C                                          i2l911 2652  
                                        i2l921 17D4                                          i2l914 15DA  
                                        i2l930 07B8                                          i2l915 14F4  
                                        i2l931 0810                                          i2l908 257A  
                                        i2l941 0982                                          i2l925 079C  
                                        i2l918 15B0                                          i2l942 09C2  
                                        i2l934 07BC                                          i2l926 07AC  
                                        i2l919 1718                                          i2l935 0D96  
                                        i2l943 0A8A                                          i2l927 07C4  
                                        i2l960 0BFA                                          i2l952 0AF0  
                                        i2l936 0864                                          i2l961 0BEC  
                                        i2l970 0D7E                                          i2l946 0A32  
                                        i2l938 08F6                                          i2l699 216C  
                                        i2l963 0C1E                                          i2l939 095C  
                                        i2l972 0DD0                                          i2l964 0C22  
                              ___awdiv@counter 018E                                          i2l965 0C3A  
                                        i2l957 0BE0                                          i2l966 0D72  
                                        i2l958 0B4E                                          i2l967 0C8C  
                                        i2l976 0E2C                                          i2l977 0EBE  
                                        i2l969 0D8C                                          i2l978 0E3A  
                                        _OSCEN 000E47                                          _TMR7H 000F2F  
                                        _TMR7L 000F2E                                   i2__div_to_l_ 2F06  
                                        _TRISA 000F81                                          _TRISB 000F82  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                  __CFG_WRT3$OFF 000000  
                                __CFG_PWRTE$ON 000000                                  __CFG_WRT4$OFF 000000  
                                __CFG_WRT5$OFF 000000                                   ___lltoft@exp 00A5  
                                __CFG_WRT6$OFF 000000                        ??_ADCC_IsConversionDone 0089  
                                __CFG_WRT7$OFF 000000              __size_of_TMR6_SetInterruptHandler 000E  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                    ?_TMR6_SetInterruptHandler 00A0                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                             __end_of_TMR6_ISR 4416                               __end_of_TMR7_ISR 4364  
                               __CFG_EBTRB$OFF 000000                      ??_terminal_ringBufferPull 01FA  
                              __end_of_dpowers F9A1                                     i2scale@scl 0033  
                        ?_ADCC_StartConversion 0001                                          _scale 0F0A  
                           __CFG_MCLRE$EXTMCLR 000000                                  ___ftpack@sign 00A4  
                                        _putch 45BA                                 __pbitbssCOMRAM 02F0  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                                        tablat 000FF5                               __end_ofi2___ftge 3A36  
                             __end_ofi2___wmul 44AE                                 ??_EUSART2_Read 00A0  
                                        status 000FD8                                          wtemp6 0060  
                              __end_of_strncpy 3DF4                               __end_ofi2_fround 2698  
               ?_INTERRUPT_InterruptManagerLow 0001                             __size_ofi2___awdiv 0084  
                           __size_ofi2___ftadd 01AC                             __size_ofi2___awmod 0070  
                           __size_ofi2___ftneg 0024                             __size_ofi2___lldiv 0082  
                           __size_ofi2___ftmul 00F4                             __size_ofi2___llmod 0066  
                           __size_ofi2___ftsub 0040                             __size_ofi2___fttol 00F4  
                             __end_ofi2_printf 0F0A                 ??_TMR6_DefaultInterruptHandler 0089  
        __end_of_EUSART2_SetTxInterruptHandler 45F2         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler 45E4                                __initialization 3FE2  
                            i2___lldiv@divisor 0005                                   __end_of_main 3D86  
                            i2___lldiv@counter 000D                                  i2___ftmul@exp 0027  
                                   i2printf@ap 0063                          __end_of_ringBufferLUT 1B76  
                               __CFG_SCANE$OFF 000000                                    ?i2___ftpack 0001  
                                  ?i2___lltoft 0009                                         ??_main 01FD  
                                ___fttol@sign1 01B0                                  __activetblptr 000003  
                         __size_of__tdiv_to_l_ 0158                                _TMR6_Initialize 4364  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize 3F86                                         _ADCON0 000F60  
                                       _ADCON1 000F59                                         _ADCON2 000F5A  
                                       _ADCON3 000F5B                       _eusart2TxBufferRemaining 00B9  
                                       _ADERRH 000F6F                                         _ADERRL 000F6E  
                             ___llmod@dividend 0192                                         _ADLTHH 000F6B  
                                       ?_scale 01A7                                         _ADLTHL 000F6A  
                                       _ADRESH 000F64                                         _ADRESL 000F63  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 018A                                         _ADUTHL 000F6C  
                                       _ANSELA 000E92                                         ?_putch 0001  
                                       _ANSELB 000E9A                                         _ANSELD 000EA7  
                                       _ANSELE 000EAF                                         _ANSELF 000EB4  
                             __end_of___ftpack 35B8                                         _ANSELG 000EBC  
                                       _T7GATE 000F32                                         _RC2REG 000EF1  
                                       _T7GCON 000F31                               __end_of___lltoft 3E5A  
                                       _RC2STA 000EF5                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _ODCOND 000EA5                                         _ODCONE 000EAD  
                                       _ODCONF 000EB2                                         _ODCONG 000EBA  
                                       _ODCONH 000EBF                                         i2l1220 36F2  
                                       i2l1213 36A0                                         i2l1214 3696  
                                       i2l1302 39D6                                         i2l1150 3AE0  
                                       i2l1311 3360                                         i2l1303 3A06  
                                       i2l1216 36D4                                         i2l1312 3392  
                                       i2l1320 44EA                                         i2l1152 3AFE  
                                       i2l1217 36BE                                         i2l1313 33A2  
                                       i2l1153 3AF6                                         i2l1330 3248  
                                       i2l1170 3D00                                         i2l1162 3CBC  
                                       i2l1219 36FC                                         i2l1315 33BA  
                                       i2l1171 3D0E                                         i2l1163 3CC8  
                                       i2l1244 2898                                         i2l1316 33CA  
                                       i2l1332 32BE                                         i2l1156 3B1E  
                                       i2l1253 2928                                         i2l1309 3338  
                                       i2l1341 32FE                                         i2l1333 32AE  
                                       i2l1181 2F24                                         i2l1157 3B28  
                                       i2l1149 3AD0                                         i2l1165 3CDE  
                                       i2l1270 2980                                         i2l1326 4292  
                                       i2l1158 3B36                                         i2l1166 3CD6  
                                       i2l1271 299C                                         i2l1183 2F42  
                                       i2l1280 3492                                         i2l1272 29CC  
                                       i2l1248 28C2                                         i2l1184 2F84  
                                       i2l1281 34B8                                         i2l1193 3016  
                                       i2l1185 2FB4                                         i2l1169 3CF6  
                                       i2l1258 291E                                         i2l1338 32E2  
                                       i2l1370 3BA2                                         i2l1194 300A  
                                       i2l1267 295C                                         i2l1259 2914  
                                       i2l1339 32D6                                         i2l1371 3BB0  
                                       i2l1187 2FF2                                         i2l1291 2ECA  
                                       i2l1268 2952                                         i2l1380 3EA0  
                                       i2l1188 2FE2                                         i2l1292 2EBA  
                                       i2l1277 342C                                         i2l1381 3EAE  
                                       i2l1285 2E00                                         i2l1366 3B6E  
                                       i2l1279 3454                                         i2l1367 3B62  
                                       i2l1287 2E2C                                         i2l1376 3E78  
                                       i2l1288 2E66                                         i2l1377 3E6C  
                                       i2l1297 2EEE                                         i2l1289 2E8E  
                                       i2l1298 2EE2                                         i2l1387 3F98  
                                       i2l1388 3F8C                                         i2l3924 3A32  
                                       i2l5710 09C2                                         i2l5810 0DD4  
                                       _RG7PPS 000E89                                         i2l5718 0A0C  
                                       i2l5762 0BEC                                         i2l5738 0AF4  
                                       i2l5828 0E3A                                  i2putch@txData 0002  
                                       _FVRCON 000EC4                                      ??i2_scale 0030  
                             __end_of___lwtoft 451C                                         u506_41 3414  
                                       u508_41 343C                        TMR7_WriteTimer@timerVal 0089  
                                       u525_41 2DE4                                         u527_41 2E10  
                                       u475_41 2856                                         u539_41 322C  
                                       u476_41 286A                                         _OSCFRQ 000E49  
                                       u496_41 3320                                         u498_41 3348  
                                    ??i2_putch 0002                                         _RX2PPS 000E11  
                                       _TX2REG 000EF2                                         _TX2STA 000EF6  
           __end_of_ADC_postProcessingCallback 2188                     _ADC_postProcessingCallback 1EDE  
                   ??_ADCC_GetConversionResult 0003                         __size_ofi2__tdiv_to_l_ 0132  
                               __CFG_XINST$OFF 000000                                _TMR7_Initialize 408C  
                                 i2_scale$2785 0030                               __end_of__powers_ F9C8  
         __size_of_ADCC_SetADIInterruptHandler 000E                __end_of_terminal_ringBufferPull 2DD4  
                                       ___ftge 3726                                         ___wmul 43C6  
                                    ??___awdiv 00A6                                      ??___ftadd 01B7  
                               __CFG_STVREN$ON 000000                                      ??___awmod 00A4  
                                    ??___ftdiv 0012                                      ??___ftneg 00A3  
                                    ??___lldiv 00A0                                      ??___ftmul 019E  
                                    ??___llmod 00A5                                      ??___ftsub 00A6  
                                    ??___fttol 01AB                       ??_terminal_setCursorHome 00A6  
                                       _fround 2188                                         clear_0 4006  
                                       clear_1 4012                                         clear_2 401E  
                                       clear_3 402C                           _eusart2RxStringReady 02F0  
                             ___awdiv@quotient 0190                                ___awmod@divisor 00A2  
                              ___awmod@counter 00A4                                         _printf 0000  
                                       _strcat 40DA                                         _strcmp 403C  
                                    ?_ADCC_ISR 0001                                         _strlen 42BC  
                               i2___awdiv@sign 000C                          ___ftmul@f3_as_product 01A2  
                             _background_color 0057                                _ADCC_Initialize 3EC0  
                            ??i2_EUSART2_Write 0001                                 _PMD_Initialize 451C  
                            __end_ofi2___awdiv 3B40                              __end_ofi2___ftadd 29F2  
                            __end_ofi2___awmod 3D18                                 i2___ftadd@exp1 0042  
                               i2___ftadd@exp2 0041                              __end_ofi2___ftneg 44F8  
                            __end_ofi2___lldiv 3BC2                              __end_ofi2___ftmul 3404  
                            __end_ofi2___llmod 3EC0                              __end_ofi2___ftsub 42BC  
                            __end_ofi2___fttol 3310                                 i2___ftadd@sign 0040  
                                 __mediumconst F978                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                         _EUSART2_Transmit_ISR 42FA                         ??_ADCC_StartConversion 0089  
                               i2___awmod@sign 0006                                ??_EUSART2_Write 00A0  
     TMR7_SetInterruptHandler@InterruptHandler 00A0    ADCC_SetADIInterruptHandler@InterruptHandler 00A0  
     TMR6_SetInterruptHandler@InterruptHandler 00A0                                      ??_strncpy 00A6  
      terminal_textAttributes@background_color 01E6                  __size_of_INTERRUPT_Initialize 0010  
                              _eusart2RxBuffer 0100                ?_INTERRUPT_InterruptManagerHigh 0001  
             ??_INTERRUPT_InterruptManagerHigh 0077                              _SYSTEM_Initialize 443C  
         __end_of_TMR7_DefaultInterruptHandler 4640          __size_of_TMR7_DefaultInterruptHandler 0002  
                 _TMR7_DefaultInterruptHandler 463E                                _eusart2TxBuffer 0200  
                                   __accesstop 0060                        __end_of__initialization 4032  
                                   ___ftadd@f1 01B1                                     ___ftadd@f2 01B4  
                          __size_ofi2___ftpack 00AE                                 i2printf@tmpval 006F  
                                   ___ftge@ff1 00A0                                     ___ftge@ff2 00A3  
                           ?_SYSTEM_Initialize 0001                            __size_ofi2___lltoft 005C  
                                ___rparam_used 000001                                     ___ftdiv@f1 000C  
                                   ___ftdiv@f2 000F                                     ___ftdiv@f3 0016  
                                   ___ftneg@f1 00A0                                 i2___ftpack@arg 0001  
                           i2__tdiv_to_l_@exp1 000F                              i2___llmod@divisor 0012  
                               i2___ftpack@exp 0004                             i2__tdiv_to_l_@cntr 000E  
                            i2___llmod@counter 0016                             i2__tdiv_to_l_@quot 000A  
                                   ___ftmul@f1 0198                                     ___ftmul@f2 019B  
            terminal_ringBufferPull@charNumber 0240                                     ___ftsub@f1 01BD  
                                   ___ftsub@f2 01C0                                     ___fttol@f1 01A7  
                               __pcstackCOMRAM 0001                             i2___lldiv@dividend 0001  
                      ??_terminal_printNewline 00A6                                   __pidataBANK0 463A  
                          ??_SYSTEM_Initialize 00A5                                     ___lltoft@c 018D  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                               i2___ftmul@cntr 002B                                  __end_of_scale 13AE  
                               i2___ftmul@sign 002C                 ?_EUSART2_SetTxInterruptHandler 00A0  
                                __end_of_putch 45C8                       ??_terminal_clearTerminal 00A6  
                                  i2printf@exp 006D                                    i2printf@val 0069  
                      __end_of_TMR6_Initialize 4396                         __end_of_PMD_Initialize 4538  
                               i2___fttol@exp1 003B                                     ___lwtoft@c 0009  
                               i2___fttol@lval 0037                                      ?i2___ftge 0001  
                                   ??_ADCC_ISR 0050                           __end_of_EUSART2_Read 41F8  
                                    ?i2___wmul 000F                                  i2__tdiv_to_l_ 2DD4  
                                   __div_to_l_ 2B4A                                      ?i2_fround 002D  
                        ?_EUSART2_Transmit_ISR 0001                                      ?i2_printf 0049  
                  ADCC_StartConversion@channel 0089                                __div_to_l_@exp1 018F  
                              __div_to_l_@cntr 018E                                        ??_scale 00A6  
                    __end_of_SYSTEM_Initialize 4462                                 i2___lltoft@exp 0011  
                              __div_to_l_@quot 018A                                        ??_putch 00A1  
                           i2___lldiv@quotient 0009                                  _eusart2RxHead 005A  
                                _eusart2TxHead 00BB                                     __pbssBANK0 00A6  
                                   __pbssBANK1 0100                                     __pbssBANK2 0200  
                                _eusart2RxTail 00B8                                  _eusart2TxTail 00BA  
                             i2__tdiv_to_l_@f1 0001                               i2__tdiv_to_l_@f2 0004  
                      __end_of_TMR7_Initialize 40DA                  ?_TMR7_DefaultInterruptHandler 0001  
                                __div_to_l_@f1 00A0                                  __div_to_l_@f2 00A3  
                        EUSART2_Read@readValue 00A0                                _TMR7_WriteTimer 4462  
                             ??_FVR_Initialize 00A0                                        ?___ftge 00A0  
            terminal_ringBufferPull@index_1652 0242                                        ?___wmul 0192  
                              __CFG_PPS1WAY$ON 000000               __end_of_TMR6_SetInterruptHandler 45E4  
                      __end_of_ADCC_Initialize 3F24                                     ??_TMR6_ISR 008A  
                                   ??_TMR7_ISR 008B                                        _ADFLTRH 000F73  
                                      _ADFLTRL 000F72                                        ?_fround 01A7  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
                                    ?___ftpack 00A0                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                __size_of_terminal_setCursorHome 0010  
                                      ?_printf 01C3                                ?_PMD_Initialize 0001  
                                    ?___lltoft 018D                                 ?i2__tdiv_to_l_ 0001  
                                   ??i2___ftge 0007                                        ?_strcat 00A0  
                                      ?_strcmp 00A0                                        ?_strlen 00A0  
                                    ?___lwtoft 0009                                     ??i2___wmul 0013  
                                      _SP2BRGH 000EF4                                     ??i2_fround 0030  
                                      _SP2BRGL 000EF3                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 390E  
                                   ??i2_printf 004B                                        _OSCTUNE 000E48  
                                      _SLRCONA 000E8F                                        _SLRCONB 000E97  
                                      _SLRCONC 000E9F                                        _SLRCOND 000EA4  
                                      _SLRCONE 000EAC                                        _SLRCONF 000EB1  
                                      _SLRCONG 000EB9                                        _SLRCONH 000EBE  
               __size_of_ADCC_IsConversionDone 000C                  __end_of_ADCC_IsConversionDone 4628  
                     _acquisitionTimerCallback 423A               __size_of_terminal_textAttributes 0368  
                                      i2_scale 13AE                                        i2_putch 4628  
         __end_of_terminal_textAttributesReset 457A          __size_of_terminal_textAttributesReset 0012  
                 _terminal_textAttributesReset 4568                              __end_of__npowers_ F9EF  
                                      __Hparam 0000                                     _scale$2621 01AA  
                                      __Lparam 0000                                __size_of___ftge 00AA  
                                      ___awdiv 3A36                                        ___ftadd 2698  
                                      ___awmod 3C36                                        ___ftdiv 3404  
                                      ___ftneg 4416                                        ___lldiv 390E  
                              __size_of___wmul 0028                                        ___ftmul 3126  
                                      ___llmod 3BC2                                        ___ftsub 41F8  
                                      ___fttol 302E                                        __pcinit 3FE2  
                                 ??i2___ftpack 0006                                     ??___ftpack 018A  
                              __size_of_fround 029A                               ?_TMR6_Initialize 0001  
                      i2___ftmul@f3_as_product 0028                                        __ramtop 0E00  
              __size_of_terminal_clearTerminal 0010                                   ??i2___lltoft 000D  
                                   ??___lltoft 0191                                        __ptext0 3D18  
                                      __ptext1 457A                                        __ptext2 2C94  
                                      __ptext3 42BC                                        __ptext4 17FE  
                                      __ptext5 4568                                        __ptext6 1B76  
                                      __ptext7 3D86                                        __ptext8 40DA  
                                      __ptext9 458A                                __size_of_printf 0790  
                                   ??___lwtoft 000C                                __size_of_strcat 004C  
                              __size_of_strcmp 0050                                  i2_fround$2783 0033  
                                i2_fround$2784 0030                                __size_of_strlen 003E  
                                  ?__div_to_l_ 00A0                                        _dpowers F979  
                        _OSCILLATOR_Initialize 4538                         ??_EUSART2_Transmit_ISR 0089  
                                 i2fround@prec 0036                               ___awmod@dividend 00A0  
  ADC_postProcessingCallback@currentADCChannel 004C                                        _on_time 0140  
                     ??_PIN_MANAGER_Initialize 00A0              __size_of_TMR7_SetInterruptHandler 000E  
                    ?_TMR7_SetInterruptHandler 00A0                                      _T6CONbits 000FB1  
                                    _T7CONbits 000F30                                      _T6HLTbits 000FB2  
                   __size_of_SYSTEM_Initialize 0026                          i2EUSART2_Write@txData 0001  
                               __pintcode_body 35B8                                        _strncpy 3D86  
                         end_of_initialization 4032                        __end_of_TMR7_WriteTimer 4488  
                       _terminal_setCursorHome 457A                               ?_TMR7_Initialize 0001  
                                      int_func 35B8                            i2___wmul@multiplier 000F  
                                    _T6RSTbits 000FB4                    ?_ADC_postProcessingCallback 0001  
                           __end_ofi2___ftpack 3726                             __end_ofi2___lltoft 3FE2  
                              ___lldiv@divisor 018E                                ___lldiv@counter 00A4  
                           _EUSART2_Initialize 3F24                  ?_terminal_textAttributesReset 0001  
                              i2_EUSART2_Write 416E                                        printf@c 01E5  
                                      printf@f 01C3                       ??_heartbeatTimerCallback 0089  
               ??_TMR7_DefaultInterruptHandler 0089                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 0044                               ?_ADCC_Initialize 0001  
                               __tdiv_to_l_@f1 00A0                                 __tdiv_to_l_@f2 00A3  
                              ??i2__tdiv_to_l_ 0007                                        strcmp@r 00A5  
                        __CFG_WDTCPS$WDTCPS_11 000000                            ?_EUSART2_Initialize 0001  
                                      strlen@s 00A0                   terminal_ringBufferPull@index 0244  
                                ??__tdiv_to_l_ 018A                       _TMR6_SetInterruptHandler 45D6  
                     ?_terminal_ringBufferPull 0001                           __CFG_WDTCCS$LFINTOSC 000000  
                            __size_of_ADCC_ISR 0026            __end_of_ADCC_SetADIInterruptHandler 460E  
                  _ADCC_SetADIInterruptHandler 4600                                      i2___awdiv 3ABC  
                                    i2___ftadd 2846                                      i2___awmod 3CA8  
                             __CFG_FEXTOSC$ECH 000000                                      i2___ftneg 44D4  
                                    i2___lldiv 3B40                                      i2___ftmul 3310  
                                    i2___llmod 3E5A                                      i2___ftsub 427C  
                                    i2___fttol 321C                           ??_EUSART2_Initialize 00A3  
                       _terminal_clearTerminal 459A                         __size_of_ringBufferLUT 0378  
                ??_ADCC_SetADIInterruptHandler 00A3                                    ___ftdiv@exp 0019  
                                 _EUSART2_Read 41B4                             i2___llmod@dividend 000E  
                           i2___awdiv@dividend 0007                                i2___ftpack@sign 0005  
                          __size_of__div_to_l_ 014A                                    ___ftmul@exp 01A1  
                 __end_of_INTERRUPT_Initialize 45BA                 ??_ADCC_DefaultInterruptHandler 0001  
               __size_of_terminal_printNewline 0010                                 __end_of___ftge 37D0  
                __end_of_terminal_printNewline 459A                                 __end_of___wmul 43EE  
                            __size_of_TMR6_ISR 0028                              __size_of_TMR7_ISR 0034  
                       ?_OSCILLATOR_Initialize 0001                                 __end_of_fround 2422  
            __size_of_ADCC_GetConversionResult 0014                      ?_ADCC_GetConversionResult 0001  
                             i2___wmul@product 0013                                 __end_of_printf 0790  
                                i2_printf$2786 0060                                 __end_of_strcat 4126  
                               __end_of_strcmp 408C                                   i2printf@flag 0065  
                               __end_of_strlen 42FA                                   i2printf@fval 0073  
                                 i2printf@prec 0067                            start_initialization 3FE2  
                            __size_ofi2___ftge 0090                             i2___awdiv@quotient 000D  
                            __size_ofi2___wmul 0026                __size_of_PIN_MANAGER_Initialize 00A2  
                          __end_of__tdiv_to_l_ 2B4A                                      i2printf@c 0076  
                                    i2printf@f 0049                _ADC_postProcessingCallback$2780 0043  
              _ADC_postProcessingCallback$2781 0046                _ADC_postProcessingCallback$2782 0049  
              _ADC_postProcessingCallback$2779 004D                                i2___fttol@sign1 0036  
                      _terminal_textAttributes 1B76  EUSART2_SetRxInterruptHandler@interruptHandler 00A0  
EUSART2_SetTxInterruptHandler@interruptHandler 00A0                              __size_ofi2_fround 0276  
                                   ?i2___awdiv 0007                                     ?i2___ftadd 0037  
                                   ?i2___awmod 0001                                     ?i2___ftneg 001B  
                                   ?i2___lldiv 0001                                     ?i2___ftmul 001E  
                                   ?i2___llmod 000E                                     ?i2___ftsub 0043  
                                   ?i2___fttol 002D                  __size_of_ADCC_StartConversion 000E  
                                  putch@txData 00A1                              __size_ofi2_printf 077A  
                        __end_of_EUSART2_Write 416E                               ?_TMR7_WriteTimer 0089  
           terminal_textAttributes@output_buff 01E9                        __end_ofi2_EUSART2_Write 41B4  
                              ___llmod@divisor 0196                                ___llmod@counter 00A5  
                               _FVR_ADC_Result 005B                               __CFG_LPBOREN$OFF 000000  
                             ??_PMD_Initialize 00A0                                       ??___ftge 018A  
                                     ??___wmul 00A6                __size_of_heartbeatTimerCallback 0030  
                                  __pdataBANK0 00BC                                       ??_fround 00A6  
                                _ringBufferLUT 17FE                 ??_terminal_textAttributesReset 00A6  
                                     ??_printf 01C9                              _POS3P3_ADC_Result 0051  
                                     ??_strcat 00A4                     ??_acquisitionTimerCallback 008A  
                                     ??_strcmp 00A4                                       ??_strlen 00A2  
                                   fround@prec 01B0                                 _eusart2RxCount 00B7  
                                ?i2__div_to_l_ 0001                              __size_of___ftpack 00CE  
                            __size_of___lltoft 0066                                    __pbssCOMRAM 0051  
                            __size_of___lwtoft 0024                                  __pcstackBANK0 0060  
                                __pcstackBANK1 018A                                  __pcstackBANK2 0240  
                          EUSART2_Write@txData 00A0                                       ?i2_scale 002D  
              ??_EUSART2_SetRxInterruptHandler 00A3                                       ?i2_putch 0001  
                        _TMR6_InterruptHandler 00AC                         _PIN_MANAGER_Initialize 37D0  
                                    __pintcode 0008                                  __pmediumconst F978  
                                     ?___awdiv 018A                                       ?___ftadd 01B1  
                                     ?___awmod 00A0                                       ?___ftdiv 000C  
             __end_of_TMR7_SetInterruptHandler 45D6                                       ?___ftneg 00A0  
                                     ?___lldiv 018A                                       ?___ftmul 0198  
                                     ?___llmod 0192                                       ?___ftsub 01BD  
                                    __npowers_ F9C8                                       ?___fttol 01A7  
                               ?_ringBufferLUT 01F8              _EUSART2_TxDefaultInterruptHandler 00B2  
                                  __pintcodelo 0018                                    __tdiv_to_l_ 29F2  
                                     _ADCC_ISR 44AE                                 ??i2__div_to_l_ 0007  
                                 ??__div_to_l_ 00A6                               _POS12_ADC_Result 0147  
                                     _BAUD2CON 000EF7                      ??_terminal_textAttributes 00A6  
                                    _attribute 0059                               __CFG_WDTE$NSLEEP 000000  
                      ?_terminal_setCursorHome 0001                         _heartbeatTimerCallback 4396  
                                  ??i2___awdiv 000B                                    ??i2___ftadd 003D  
                                  ??i2___awmod 0005                                    ??i2___ftneg 001E  
                                  ??i2___lldiv 0009                                    ??i2___ftmul 0024  
                               __size_of_scale 04A4                                    ??i2___llmod 0016  
                                  ??i2___ftsub 0049                                    ??i2___fttol 0031  
                                     ?_strncpy 00A0                                 __size_of_putch 000E  
                         _INTERRUPT_Initialize 45AA                                       _T6CLKCON 000FB3  
                        _ADCC_IsConversionDone 461C         terminal_textAttributes@input_attribute 01E7  
                 __size_of_EUSART2_Receive_ISR 009C                                 ___wmul@product 0196  
                             ?i2_EUSART2_Write 0001                                       _LATFbits 000F7E  
                                  strncpy@from 00A2                                       _IPR1bits 000E20  
                                     _IPR3bits 000E22                                       _PIE1bits 000E2A  
                                  strncpy@size 00A4                                       _IPR5bits 000E24  
                                     _PIE3bits 000E2C                                       _PIE5bits 000E2E  
                                     i1u502_20 4624                                       i1u558_20 43A2  
                                     i1u559_28 43A6                                       _PIR1bits 000E34  
                           __end_of__div_to_l_ 2C94                                       i2u603_40 0E12  
                                     i1u851_28 4350                                       i2u524_40 301C  
                                     i2u453_40 3688                                       i2u541_40 3266  
                                     i2u533_40 2EF4                                       i2u605_40 0ED0  
                                     _PIR3bits 000E36                                       i1u861_28 0086  
                                     i2u541_45 325E                                       i2u606_40 0EFE  
                                     i2u606_47 0EF4                                       i2u551_40 3E7C  
                                     i2u472_40 3CE2                                       i2u457_40 3706  
                                     i2u545_40 32E8                                       _PIR5bits 000E38  
                                     i1u849_28 4402                                       i2u482_40 28B4  
                                     i2u466_40 3B02                                       i2u619_40 38B2  
                                     i2u492_40 2964                                       i2u548_40 3B72  
                                     i2u580_40 089C                                       i2u580_45 0892  
                                     i2u485_40 28F2                                       i2u479_40 288A  
                                     i2u592_40 0B32                                       i2u584_40 0994  
                                     i2u576_40 07F2                                       i2u576_47 07E8  
                                     i2u489_40 2930                                       i2u585_40 09D4  
                                     i2u595_40 0C08                                       i2u596_40 0C18  
                                     i2u588_40 0A0C                     ??_TMR6_SetInterruptHandler 00A3  
                                     i2u854_48 360C                                       i2u847_48 44C0  
                                     _TMR6_ISR 43EE                                       _TMR7_ISR 4330  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0004  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                     _ADCON3bits 000F5B  
                            ___wmul@multiplier 0192                                       i2___ftge 39A6  
                                     i2___wmul 4488                        __size_of_FVR_Initialize 0008  
                                   printf@flag 01D4                                     printf@fval 01E2  
                                   printf@prec 01D6                 __end_of_terminal_setCursorHome 458A  
                            i2___awdiv@divisor 0009                                       i2_fround 2422  
                            i2___awdiv@counter 000B                  __size_of_EUSART2_Transmit_ISR 0036  
                                     i2_printf 0790                       __size_of_TMR6_Initialize 0032  
                      ?_terminal_clearTerminal 0001                          ?_INTERRUPT_Initialize 0001  
                           i2___awmod@dividend 0001               __size_of_terminal_ringBufferPull 0140  
                             __size_ofi2_scale 0450                               __size_ofi2_putch 000A  
              __end_of_terminal_textAttributes 1EDE                                     _ADSTATbits 000F65  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult 4568  
                      __CFG_RSTOSC$EXTOSC_4PLL 000000          __end_of_EUSART2_SetRxInterruptHandler 4600  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler 45F2  
                                     __Lrparam 0000                             __CFG_BOREN$SBORDIS 000000  
                              ??_ringBufferLUT 00A6                       __size_of_TMR7_Initialize 004E  
                             _foreground_color 0058                        ??_OSCILLATOR_Initialize 00A0  
                             __size_of___awdiv 0086                               __size_of___ftadd 01AE  
                             __size_of___awmod 0072                               __size_of___ftdiv 00E6  
                             __size_of___ftneg 0026                          i2___wmul@multiplicand 0011  
                             __size_of___lldiv 0098                               __size_of___ftmul 00F6  
                             __size_of___llmod 0074                               __size_of___ftsub 0042  
                             __size_of___fttol 00F8                                       ___ftpack 34EA  
             __end_of_acquisitionTimerCallback 427C                                    _fround$2620 01AA  
                                  _fround$2619 01AD                                       ___lltoft 3DF4  
                        __end_ofi2__tdiv_to_l_ 2F06                                       ___lwtoft 44F8  
                     _TMR7_SetInterruptHandler 45C8                          _TMR7_InterruptHandler 00A9  
                           _ADC_Result_Scaling 00A6        terminal_textAttributes@foreground_color 01E8  
                     __size_of_ADCC_Initialize 0064                                     strcat@from 00A2  
              ??_INTERRUPT_InterruptManagerLow 008B                 __end_of_terminal_clearTerminal 45AA  
                                     __ptext10 403C                                       __ptext11 41B4  
                                     __ptext20 3C36                                       __ptext12 459A  
                                     __ptext21 3A36                                       __ptext13 0000  
                                     __ptext30 34EA                                       __ptext22 29F2  
                                     __ptext14 0F0A                                       __ptext31 4416  
                                     __ptext23 2B4A                                       __ptext15 45BA  
                                     __ptext40 4538                                       __ptext32 3726  
                                     __ptext24 3DF4                                       __ptext16 4126  
                                     __ptext41 45AA                                       __ptext33 443C  
                                     __ptext25 3BC2                                       __ptext17 2188  
                                     __ptext50 463E                                       __ptext42 4632  
                                     __ptext34 408C                                       __ptext26 390E  
                                     __ptext18 43C6                                       __ptext51 423A  
                                     __ptext43 3F24                                       __ptext35 45C8  
                                     __ptext27 302E                                       __ptext19 3126  
                                     __ptext60 3872                                       __ptext52 460E  
                                     __ptext44 45E4                                       __ptext36 4364  
                                     __ptext28 41F8                                       __ptext61 0790  
                                     __ptext53 461C                                       __ptext45 45F2  
                                     __ptext37 45D6                                       __ptext29 2698  
                                     __ptext70 2F06                                       __ptext62 13AE  
                                     __ptext54 4462                                       __ptext46 3EC0  
                                     __ptext38 451C                                       __ptext71 3F86  
                                     __ptext63 4628                                       __ptext55 43EE  
                                     __ptext47 4600                                       __ptext39 37D0  
                                     __ptext80 44D4                                       __ptext72 3E5A  
                                     __ptext64 416E                                       __ptext56 4640  
                                     __ptext81 3310                                       __ptext73 3B40  
                                     __ptext65 2422                                       __ptext57 4396  
                                     __ptext49 4330                                       __ptext82 2846  
                                     __ptext74 321C                                       __ptext66 4488  
                                     __ptext58 42FA                                       __ptext83 44F8  
                                     __ptext75 427C                                       __ptext67 3CA8  
                                     __ptext84 3404                                       __ptext76 39A6  
                                     __ptext68 3ABC                                       __ptext85 3678  
                                     __ptext77 44AE                                       __ptext69 2DD4  
                                     __ptext86 4554                                       __ptext78 4642  
                                     __ptext87 0000                                       __ptext79 1EDE  
                                     __powers_ F9A1                         ?_ADCC_IsConversionDone 0001  
                              _Temp_ADC_Offset 00BC                               __size_of_strncpy 006E  
                  __size_of_EUSART2_Initialize 0062                                _Temp_ADC_Result 0144  
                                __size_of_main 006E                           __end_ofi2__div_to_l_ 302E  
                         __CFG_WDTCWS$WDTCWS_7 000000                                     _T7GCONbits 000F31  
                           __CFG_BORV$VBOR_190 000000                      _ADCC_ADI_InterruptHandler 0054  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion 461C  
                                     int$flags 005F                                      printf@exp 01DC  
                                    printf@val 01D8                          _terminal_printNewline 458A  
                            i2___awmod@divisor 0003                              i2___awmod@counter 0005  
                                   _INTCONbits 000FF2                                     _FVRCONbits 000EC4  
                       ??_INTERRUPT_Initialize 00A0                                       scale@scl 01AD  
         __end_of_TMR6_DefaultInterruptHandler 4642          __size_of_TMR6_DefaultInterruptHandler 0002  
                 _TMR6_DefaultInterruptHandler 4640           __end_of_ADCC_DefaultInterruptHandler 4644  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler 4642  
                                     intlevel1 0000                                       intlevel2 0000  
                             __tdiv_to_l_@exp1 0192                               __tdiv_to_l_@cntr 0191  
                             __tdiv_to_l_@quot 018D                               ___lldiv@dividend 018A  
                      ?_PIN_MANAGER_Initialize 0001                              ??_TMR6_Initialize 00A3  
                            __CFG_CLKOUTEN$OFF 000000                                      strncpy@cp 018A  
                                    strncpy@to 00A0                       __size_of_TMR7_WriteTimer 0026  
                                     printf@ap 01D2                       _ADCC_GetConversionResult 4554  
               ?_EUSART2_SetRxInterruptHandler 00A0                                   ?__tdiv_to_l_ 00A0  
                       __size_of_EUSART2_Write 0048                            _EUSART2_Receive_ISR 3872  
       __end_of_INTERRUPT_InterruptManagerHigh 3678        __size_of_INTERRUPT_InterruptManagerHigh 3670  
               _INTERRUPT_InterruptManagerHigh 0008                              ??_TMR7_Initialize 00A3  
                                  _printf$2622 01CF                                 _FVR_Initialize 4632  
                                     strcat@cp 00A4                                       strcat@to 00A0  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 00A0  
                                     strcmp@s2 00A2                              ringBufferLUT@line 01F8  
                             ___lldiv@quotient 00A0                                       strlen@cp 00A4  
                                   _TX2STAbits 000EF6          __end_of_INTERRUPT_InterruptManagerLow 00FE  
       __size_of_INTERRUPT_InterruptManagerLow 00E6                  _INTERRUPT_InterruptManagerLow 0018  
               __end_of_PIN_MANAGER_Initialize 3872                              ??_ADCC_Initialize 00A3  
                            i2__div_to_l_@exp1 000C                              i2__div_to_l_@cntr 000B  
                      _terminal_ringBufferPull 2C94                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 00A3                              i2__div_to_l_@quot 0007  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 0042  
                ?_ADCC_DefaultInterruptHandler 0001                      ?_acquisitionTimerCallback 0001  
                 ??_ADC_postProcessingCallback 0043              _EUSART2_RxDefaultInterruptHandler 00AF  
