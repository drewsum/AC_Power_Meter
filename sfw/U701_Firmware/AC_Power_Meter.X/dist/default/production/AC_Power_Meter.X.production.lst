

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Nov 13 15:32:36 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    24                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    25                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	text0,global,reloc=2,class=CODE,delta=1
    30                           	psect	text1,global,reloc=2,class=CODE,delta=1
    31                           	psect	text2,global,reloc=2,class=CODE,delta=1
    32                           	psect	text3,global,reloc=2,class=CODE,delta=1
    33                           	psect	text4,global,reloc=2,class=CODE,delta=1
    34                           	psect	text5,global,reloc=2,class=CODE,delta=1
    35                           	psect	text6,global,reloc=2,class=CODE,delta=1
    36                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text9,global,reloc=2,class=CODE,delta=1
    39                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text15,global,reloc=2,class=CODE,delta=1
    45                           	psect	text16,global,reloc=2,class=CODE,delta=1
    46                           	psect	text17,global,reloc=2,class=CODE,delta=1
    47                           	psect	text18,global,reloc=2,class=CODE,delta=1
    48                           	psect	text19,global,reloc=2,class=CODE,delta=1
    49                           	psect	text20,global,reloc=2,class=CODE,delta=1
    50                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text23,global,reloc=2,class=CODE,delta=1
    53                           	psect	text24,global,reloc=2,class=CODE,delta=1
    54                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text26,global,reloc=2,class=CODE,delta=1
    56                           	psect	text27,global,reloc=2,class=CODE,delta=1
    57                           	psect	text28,global,reloc=2,class=CODE,delta=1
    58                           	psect	text29,global,reloc=2,class=CODE,delta=1
    59                           	psect	text30,global,reloc=2,class=CODE,delta=1
    60                           	psect	text31,global,reloc=2,class=CODE,delta=1
    61                           	psect	text32,global,reloc=2,class=CODE,delta=1
    62                           	psect	text33,global,reloc=2,class=CODE,delta=1
    63                           	psect	text34,global,reloc=2,class=CODE,delta=1
    64                           	psect	text35,global,reloc=2,class=CODE,delta=1
    65                           	psect	text36,global,reloc=2,class=CODE,delta=1
    66                           	psect	text37,global,reloc=2,class=CODE,delta=1
    67                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text39,global,reloc=2,class=CODE,delta=1
    69                           	psect	text40,global,reloc=2,class=CODE,delta=1
    70                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text42,global,reloc=2,class=CODE,delta=1
    72                           	psect	text43,global,reloc=2,class=CODE,delta=1
    73                           	psect	text44,global,reloc=2,class=CODE,delta=1
    74                           	psect	text45,global,reloc=2,class=CODE,delta=1
    75                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text47,global,reloc=2,class=CODE,delta=1
    77                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text61,global,reloc=2,class=CODE,delta=1
    91                           	psect	text62,global,reloc=2,class=CODE,delta=1
    92                           	psect	text63,global,reloc=2,class=CODE,delta=1
    93                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text65,global,reloc=2,class=CODE,delta=1
    95                           	psect	text66,global,reloc=2,class=CODE,delta=1
    96                           	psect	text67,global,reloc=2,class=CODE,delta=1
    97                           	psect	text68,global,reloc=2,class=CODE,delta=1
    98                           	psect	text69,global,reloc=2,class=CODE,delta=1
    99                           	psect	text70,global,reloc=2,class=CODE,delta=1
   100                           	psect	text71,global,reloc=2,class=CODE,delta=1
   101                           	psect	text72,global,reloc=2,class=CODE,delta=1
   102                           	psect	text73,global,reloc=2,class=CODE,delta=1
   103                           	psect	text74,global,reloc=2,class=CODE,delta=1
   104                           	psect	text75,global,reloc=2,class=CODE,delta=1
   105                           	psect	text76,global,reloc=2,class=CODE,delta=1
   106                           	psect	text77,global,reloc=2,class=CODE,delta=1
   107                           	psect	text78,global,reloc=2,class=CODE,delta=1
   108                           	psect	text79,global,reloc=2,class=CODE,delta=1
   109                           	psect	text80,global,reloc=2,class=CODE,delta=1
   110                           	psect	text81,global,reloc=2,class=CODE,delta=1
   111                           	psect	text82,global,reloc=2,class=CODE,delta=1
   112                           	psect	text83,global,reloc=2,class=CODE,delta=1
   113                           	psect	text84,global,reloc=2,class=CODE,delta=1
   114                           	psect	text85,global,reloc=2,class=CODE,delta=1
   115                           	psect	text86,global,reloc=2,class=CODE,delta=1
   116                           	psect	text87,global,reloc=2,class=CODE,delta=1
   117                           	psect	text88,global,reloc=2,class=CODE,delta=1
   118                           	psect	text89,global,reloc=2,class=CODE,delta=1
   119                           	psect	text90,global,reloc=2,class=CODE,delta=1
   120                           	psect	text91,global,reloc=2,class=CODE,delta=1
   121                           	psect	text92,global,reloc=2,class=CODE,delta=1
   122                           	psect	text93,global,reloc=2,class=CODE,delta=1
   123                           	psect	text94,global,reloc=2,class=CODE,delta=1
   124                           	psect	text95,global,reloc=2,class=CODE,delta=1
   125                           	psect	text96,global,reloc=2,class=CODE,delta=1
   126                           	psect	text97,global,reloc=2,class=CODE,delta=1
   127                           	psect	text98,global,reloc=2,class=CODE,delta=1
   128                           	psect	text99,global,reloc=2,class=CODE,delta=1,inline
   129                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   130                           	psect	text101,global,reloc=2,class=CODE,delta=1
   131                           	psect	text102,global,reloc=2,class=CODE,delta=1
   132                           	psect	text103,global,reloc=2,class=CODE,delta=1
   133                           	psect	text104,global,reloc=2,class=CODE,delta=1
   134                           	psect	text105,global,reloc=2,class=CODE,delta=1
   135                           	psect	text106,global,reloc=2,class=CODE,delta=1
   136                           	psect	text107,global,reloc=2,class=CODE,delta=1
   137                           	psect	text108,global,reloc=2,class=CODE,delta=1
   138                           	psect	text109,global,reloc=2,class=CODE,delta=1
   139                           	psect	text110,global,reloc=2,class=CODE,delta=1
   140                           	psect	text111,global,reloc=2,class=CODE,delta=1
   141                           	psect	text112,global,reloc=2,class=CODE,delta=1
   142                           	psect	text113,global,reloc=2,class=CODE,delta=1
   143                           	psect	text114,global,reloc=2,class=CODE,delta=1
   144                           	psect	text115,global,reloc=2,class=CODE,delta=1
   145                           	psect	text116,global,reloc=2,class=CODE,delta=1
   146                           	psect	text117,global,reloc=2,class=CODE,delta=1
   147                           	psect	text118,global,reloc=2,class=CODE,delta=1
   148                           	psect	text119,global,reloc=2,class=CODE,delta=1
   149                           	psect	text120,global,reloc=2,class=CODE,delta=1
   150                           	psect	text121,global,reloc=2,class=CODE,delta=1
   151                           	psect	text122,global,reloc=2,class=CODE,delta=1
   152                           	psect	text123,global,reloc=2,class=CODE,delta=1
   153                           	psect	text124,global,reloc=2,class=CODE,delta=1
   154                           	psect	text125,global,reloc=2,class=CODE,delta=1
   155                           	psect	text126,global,reloc=2,class=CODE,delta=1
   156                           	psect	text127,global,reloc=2,class=CODE,delta=1
   157                           	psect	text128,global,reloc=2,class=CODE,delta=1
   158                           	psect	text129,global,reloc=2,class=CODE,delta=1
   159                           	psect	text130,global,reloc=2,class=CODE,delta=1
   160                           	psect	text131,global,reloc=2,class=CODE,delta=1
   161                           	psect	text132,global,reloc=2,class=CODE,delta=1
   162                           	psect	text133,global,reloc=2,class=CODE,delta=1,inline
   163                           	psect	text134,global,reloc=2,class=CODE,delta=1
   164                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   165                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   166                           	psect	text136,global,reloc=2,class=CODE,delta=1
   167                           	psect	text137,global,reloc=2,class=CODE,delta=1
   168                           	psect	text138,global,reloc=2,class=CODE,delta=1
   169                           	psect	text139,global,reloc=2,class=CODE,delta=1
   170                           	psect	text140,global,reloc=2,class=CODE,delta=1
   171                           	psect	text141,global,reloc=2,class=CODE,delta=1
   172                           	psect	text142,global,reloc=2,class=CODE,delta=1
   173                           	psect	text143,global,reloc=2,class=CODE,delta=1
   174                           	psect	text144,global,reloc=2,class=CODE,delta=1
   175                           	psect	text145,global,reloc=2,class=CODE,delta=1
   176                           	psect	text146,global,reloc=2,class=CODE,delta=1
   177                           	psect	text147,global,reloc=2,class=CODE,delta=1
   178                           	psect	text148,global,reloc=2,class=CODE,delta=1
   179                           	psect	text149,global,reloc=2,class=CODE,delta=1
   180                           	psect	text150,global,reloc=2,class=CODE,delta=1
   181                           	psect	text151,global,reloc=2,class=CODE,delta=1
   182                           	psect	text152,global,reloc=2,class=CODE,delta=1
   183                           	psect	text153,global,reloc=2,class=CODE,delta=1
   184                           	psect	text154,global,reloc=2,class=CODE,delta=1
   185                           	psect	text155,global,reloc=2,class=CODE,delta=1
   186                           	psect	text156,global,reloc=2,class=CODE,delta=1
   187                           	psect	text157,global,reloc=2,class=CODE,delta=1
   188                           	psect	text158,global,reloc=2,class=CODE,delta=1
   189                           	psect	text159,global,reloc=2,class=CODE,delta=1
   190                           	psect	text160,global,reloc=2,class=CODE,delta=1
   191                           	psect	text161,global,reloc=2,class=CODE,delta=1
   192                           	psect	text162,global,reloc=2,class=CODE,delta=1
   193                           	psect	text163,global,reloc=2,class=CODE,delta=1
   194                           	psect	text164,global,reloc=2,class=CODE,delta=1
   195                           	psect	text165,global,reloc=2,class=CODE,delta=1
   196                           	psect	text166,global,reloc=2,class=CODE,delta=1
   197                           	psect	text167,global,reloc=2,class=CODE,delta=1
   198                           	psect	text168,global,reloc=2,class=CODE,delta=1
   199                           	psect	text169,global,reloc=2,class=CODE,delta=1
   200                           	psect	text170,global,reloc=2,class=CODE,delta=1
   201                           	psect	text171,global,reloc=2,class=CODE,delta=1
   202                           	psect	text172,global,reloc=2,class=CODE,delta=1
   203                           	psect	text173,global,reloc=2,class=CODE,delta=1
   204                           	psect	text174,global,reloc=2,class=CODE,delta=1
   205                           	psect	text175,global,reloc=2,class=CODE,delta=1
   206                           	psect	text176,global,reloc=2,class=CODE,delta=1
   207                           	psect	text177,global,reloc=2,class=CODE,delta=1
   208                           	psect	text178,global,reloc=2,class=CODE,delta=1,group=1
   209                           	psect	text179,global,reloc=2,class=CODE,delta=1,group=1
   210                           	psect	text180,global,reloc=2,class=CODE,delta=1,group=1
   211                           	psect	text181,global,reloc=2,class=CODE,delta=1,group=1
   212                           	psect	text182,global,reloc=2,class=CODE,delta=1,group=1
   213                           	psect	text183,global,reloc=2,class=CODE,delta=1
   214                           	psect	text184,global,reloc=2,class=CODE,delta=1,group=1
   215                           	psect	text185,global,reloc=2,class=CODE,delta=1
   216                           	psect	text186,global,reloc=2,class=CODE,delta=1
   217                           	psect	text187,global,reloc=2,class=CODE,delta=1
   218                           	psect	text188,global,reloc=2,class=CODE,delta=1,group=1
   219                           	psect	text189,global,reloc=2,class=CODE,delta=1
   220                           	psect	text190,global,reloc=2,class=CODE,delta=1
   221                           	psect	text191,global,reloc=2,class=CODE,delta=1
   222                           	psect	text192,global,reloc=2,class=CODE,delta=1,group=1
   223                           	psect	text193,global,reloc=2,class=CODE,delta=1,group=1
   224                           	psect	text194,global,reloc=2,class=CODE,delta=1
   225                           	psect	text195,global,reloc=2,class=CODE,delta=1
   226                           	psect	text196,global,reloc=2,class=CODE,delta=1,group=1
   227                           	psect	text197,global,reloc=2,class=CODE,delta=1
   228                           	psect	text198,global,reloc=2,class=CODE,delta=1
   229                           	psect	text199,global,reloc=2,class=CODE,delta=1
   230                           	psect	text200,global,reloc=2,class=CODE,delta=1
   231                           	psect	text201,global,reloc=2,class=CODE,delta=1
   232                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   233                           	psect	text202,global,reloc=2,class=CODE,delta=1
   234                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   235                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   236  0000                     
   237                           ; Version 1.45 (B)
   238                           ; Generated 30/01/2018 GMT
   239                           ; 
   240                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   241                           ; All rights reserved.
   242                           ; 
   243                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   244                           ; 
   245                           ; Redistribution and use in source and binary forms, with or without modification, are
   246                           ; permitted provided that the following conditions are met:
   247                           ; 
   248                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   249                           ;        conditions and the following disclaimer.
   250                           ; 
   251                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   252                           ;        of conditions and the following disclaimer in the documentation and/or other
   253                           ;        materials provided with the distribution.
   254                           ; 
   255                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   256                           ;        software without specific prior written permission.
   257                           ; 
   258                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   259                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   260                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   261                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   262                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   263                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   264                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   265                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   266                           ; 
   267                           ; 
   268                           ; Code-generator required, PIC18LF67K40 Definitions
   269                           ; 
   270                           ; SFR Addresses
   271  0000                     
   272                           	psect	idataBANK0
   273  01C011                     __pidataBANK0:
   274                           	opt stack 0
   275                           
   276                           ;initializer for _TRIAC_Firing_Angle
   277                           ;main.c: 75: volatile double FVR_ADC_Result;
   278                           ;main.c: 76: volatile double AVSS_ADC_Result;
   279                           ;main.c: 77: volatile double ADC_Result_Scaling;
   280                           ;main.c: 78: volatile double POS3P3_ADC_Result;
   281                           ;main.c: 79: volatile double POS12_ADC_Result;
   282                           ;main.c: 80: volatile double Temp_ADC_Result;
   283                           ;main.c: 81: volatile double Temp_ADC_Offset = 612.085;
   284                           ;main.c: 82: double Vpk_const = 169.7056274847714;
   285                           ;main.c: 83: volatile double Vpk;
   286                           ;main.c: 84: volatile double Ipk;
   287                           ;main.c: 85: volatile double Imeas;
   288                           ;main.c: 86: double Irms_offset = -0.113;
   289  01C011  F5C3               	dw	62915
   290  01C013  3FC8               	dw	16328
   291                           
   292                           	psect	idataBANK1
   293  01C00C                     __pidataBANK1:
   294                           	opt stack 0
   295                           
   296                           ;initializer for _Irms_offset
   297  01C00C  6C8B               	dw	27787
   298  01C00E  BDE7               	dw	48615
   299                           
   300                           ;initializer for _next_channel
   301  01C010  3C                 	db	60
   302                           
   303                           	psect	idataBANK2
   304  01BEC6                     __pidataBANK2:
   305                           	opt stack 0
   306                           
   307                           ;initializer for getDeviceIDString@F17550
   308  01BEC6  9D                 	db	low STR_189
   309  01BEC7  FE                 	db	high STR_189
   310  01BEC8  1B                 	db	low STR_190
   311  01BEC9  FE                 	db	high STR_190
   312  01BECA  5A                 	db	low STR_191
   313  01BECB  FF                 	db	high STR_191
   314                           
   315                           ;initializer for _Vpk_const
   316                           ;main.c: 75: volatile double FVR_ADC_Result;
   317                           ;main.c: 76: volatile double AVSS_ADC_Result;
   318                           ;main.c: 77: volatile double ADC_Result_Scaling;
   319                           ;main.c: 78: volatile double POS3P3_ADC_Result;
   320                           ;main.c: 79: volatile double POS12_ADC_Result;
   321                           ;main.c: 80: volatile double Temp_ADC_Result;
   322                           ;main.c: 81: volatile double Temp_ADC_Offset = 612.085;
   323  01BECC  B4A4               	dw	46244
   324  01BECE  4329               	dw	17193
   325                           
   326                           ;initializer for _Temp_ADC_Offset
   327                           ;main.c: 75: volatile double FVR_ADC_Result;
   328                           ;main.c: 76: volatile double AVSS_ADC_Result;
   329                           ;main.c: 77: volatile double ADC_Result_Scaling;
   330                           ;main.c: 78: volatile double POS3P3_ADC_Result;
   331                           ;main.c: 79: volatile double POS12_ADC_Result;
   332                           ;main.c: 80: volatile double Temp_ADC_Result;
   333  01BED0  0571               	dw	1393
   334  01BED2  4419               	dw	17433
   335                           
   336                           ;initializer for _dimming_period
   337  01BED4  7FEE               	dw	32750
   338                           
   339                           	psect	idataBANK3
   340  01BBDE                     __pidataBANK3:
   341                           	opt stack 0
   342                           
   343                           ;initializer for getCauseOfResetStringSmall@strings
   344  01BBDE  5A                 	db	low STR_191
   345  01BBDF  FF                 	db	high STR_191
   346  01BBE0  50                 	db	low STR_203
   347  01BBE1  FF                 	db	high STR_203
   348  01BBE2  46                 	db	low STR_204
   349  01BBE3  FF                 	db	high STR_204
   350  01BBE4  EE                 	db	low STR_205
   351  01BBE5  FE                 	db	high STR_205
   352  01BBE6  FA                 	db	low (STR_207+1)
   353  01BBE7  FE                 	db	high (STR_207+1)
   354  01BBE8  F9                 	db	low STR_207
   355  01BBE9  FE                 	db	high STR_207
   356  01BBEA  50                 	db	low STR_208
   357  01BBEB  FD                 	db	high STR_208
   358  01BBEC  D8                 	db	low STR_209
   359  01BBED  FE                 	db	high STR_209
   360  01BBEE  E3                 	db	low STR_210
   361  01BBEF  FE                 	db	high STR_210
   362                           
   363                           ;initializer for getCauseOfResetString@strings
   364  01BBF0  C0                 	db	low STR_192
   365  01BBF1  FC                 	db	high STR_192
   366  01BBF2  5F                 	db	low STR_193
   367  01BBF3  FD                 	db	high STR_193
   368  01BBF4  D0                 	db	low STR_194
   369  01BBF5  FC                 	db	high STR_194
   370  01BBF6  EE                 	db	low STR_195
   371  01BBF7  FB                 	db	high STR_195
   372  01BBF8  4D                 	db	low (STR_197+9)
   373  01BBF9  F7                 	db	high (STR_197+9)
   374  01BBFA  44                 	db	low STR_197
   375  01BBFB  F7                 	db	high STR_197
   376  01BBFC  90                 	db	low STR_198
   377  01BBFD  FA                 	db	high STR_198
   378  01BBFE  87                 	db	low STR_199
   379  01BBFF  FB                 	db	high STR_199
   380  01BC00  71                 	db	low STR_200
   381  01BC01  FB                 	db	high STR_200
   382                           
   383                           	psect	mediumconst
   384  00CDDC                     __pmediumconst:
   385                           	opt stack 0
   386  00CDDC  00                 	db	0
   387  00CDDD                     __powers_:
   388                           	opt stack 0
   389  00CDDD  0000               	dw	0
   390  00CDDF  3F80               	dw	16256
   391  00CDE1  0000               	dw	0
   392  00CDE3  4120               	dw	16672
   393  00CDE5  0000               	dw	0
   394  00CDE7  42C8               	dw	17096
   395  00CDE9  0000               	dw	0
   396  00CDEB  447A               	dw	17530
   397  00CDED  4000               	dw	16384
   398  00CDEF  461C               	dw	17948
   399  00CDF1  5000               	dw	20480
   400  00CDF3  47C3               	dw	18371
   401  00CDF5  2400               	dw	9216
   402  00CDF7  4974               	dw	18804
   403  00CDF9  9680               	dw	38528
   404  00CDFB  4B18               	dw	19224
   405  00CDFD  BC20               	dw	48160
   406  00CDFF  4CBE               	dw	19646
   407  00CE01  6B28               	dw	27432
   408  00CE03  4E6E               	dw	20078
   409  00CE05  02F9               	dw	761
   410  00CE07  5015               	dw	20501
   411  00CE09  78EC               	dw	30956
   412  00CE0B  60AD               	dw	24749
   413  00CE0D  F2CA               	dw	62154
   414  00CE0F  7149               	dw	29001
   415  00CE11                     __end_of__powers_:
   416                           	opt stack 0
   417  00CE11                     __npowers_:
   418                           	opt stack 0
   419  00CE11  0000               	dw	0
   420  00CE13  3F80               	dw	16256
   421  00CE15  CCCD               	dw	52429
   422  00CE17  3DCC               	dw	15820
   423  00CE19  D70A               	dw	55050
   424  00CE1B  3C23               	dw	15395
   425  00CE1D  126F               	dw	4719
   426  00CE1F  3A83               	dw	14979
   427  00CE21  B717               	dw	46871
   428  00CE23  38D1               	dw	14545
   429  00CE25  C5AC               	dw	50604
   430  00CE27  3727               	dw	14119
   431  00CE29  37BD               	dw	14269
   432  00CE2B  3586               	dw	13702
   433  00CE2D  BF95               	dw	49045
   434  00CE2F  33D6               	dw	13270
   435  00CE31  CC77               	dw	52343
   436  00CE33  322B               	dw	12843
   437  00CE35  705F               	dw	28767
   438  00CE37  3089               	dw	12425
   439  00CE39  E6FF               	dw	59135
   440  00CE3B  2EDB               	dw	11995
   441  00CE3D  E508               	dw	58632
   442  00CE3F  1E3C               	dw	7740
   443  00CE41  4260               	dw	16992
   444  00CE43  0DA2               	dw	3490
   445  00CE45                     __end_of__npowers_:
   446                           	opt stack 0
   447  00CE45                     _dpowers:
   448                           	opt stack 0
   449  00CE45  0001               	dw	1
   450  00CE47  0000               	dw	0
   451  00CE49  000A               	dw	10
   452  00CE4B  0000               	dw	0
   453  00CE4D  0064               	dw	100
   454  00CE4F  0000               	dw	0
   455  00CE51  03E8               	dw	1000
   456  00CE53  0000               	dw	0
   457  00CE55  2710               	dw	10000
   458  00CE57  0000               	dw	0
   459  00CE59  86A0               	dw	34464
   460  00CE5B  0001               	dw	1
   461  00CE5D  4240               	dw	16960
   462  00CE5F  000F               	dw	15
   463  00CE61  9680               	dw	38528
   464  00CE63  0098               	dw	152
   465  00CE65  E100               	dw	57600
   466  00CE67  05F5               	dw	1525
   467  00CE69  CA00               	dw	51712
   468  00CE6B  3B9A               	dw	15258
   469  00CE6D                     __end_of_dpowers:
   470                           	opt stack 0
   471  00CE6D                     _hexpowers:
   472                           	opt stack 0
   473  00CE6D  0001               	dw	1
   474  00CE6F  0000               	dw	0
   475  00CE71  0010               	dw	16
   476  00CE73  0000               	dw	0
   477  00CE75  0100               	dw	256
   478  00CE77  0000               	dw	0
   479  00CE79  1000               	dw	4096
   480  00CE7B  0000               	dw	0
   481  00CE7D  0000               	dw	0
   482  00CE7F  0001               	dw	1
   483  00CE81  0000               	dw	0
   484  00CE83  0010               	dw	16
   485  00CE85  0000               	dw	0
   486  00CE87  0100               	dw	256
   487  00CE89  0000               	dw	0
   488  00CE8B  1000               	dw	4096
   489  00CE8D                     __end_of_hexpowers:
   490                           	opt stack 0
   491  00CE8D                     _max_FVR_ADC_Result_address:
   492                           	opt stack 0
   493  00CE8D  0014               	dw	20
   494  00CE8F                     __end_of_max_FVR_ADC_Result_address:
   495                           	opt stack 0
   496  00CE8F                     _max_Temp_ADC_Result_address:
   497                           	opt stack 0
   498  00CE8F  0010               	dw	16
   499  00CE91                     __end_of_max_Temp_ADC_Result_address:
   500                           	opt stack 0
   501  00CE91                     _max_POS12_ADC_Result_address:
   502                           	opt stack 0
   503  00CE91  000C               	dw	12
   504  00CE93                     __end_of_max_POS12_ADC_Result_address:
   505                           	opt stack 0
   506  00CE93                     _max_POS3P3_ADC_Result_address:
   507                           	opt stack 0
   508  00CE93  0008               	dw	8
   509  00CE95                     __end_of_max_POS3P3_ADC_Result_address:
   510                           	opt stack 0
   511  00CE95                     _max_Power_address:
   512                           	opt stack 0
   513  00CE95  0004               	dw	4
   514  00CE97                     __end_of_max_Power_address:
   515                           	opt stack 0
   516  00CE97                     _max_Irms_address:
   517                           	opt stack 0
   518  00CE97  0000               	dw	0
   519  00CE99                     __end_of_max_Irms_address:
   520                           	opt stack 0
   521  00CE99                     _Total_Energy_address:
   522                           	opt stack 0
   523  00CE99  0018               	dw	24
   524  00CE9B                     __end_of_Total_Energy_address:
   525                           	opt stack 0
   526  00CE9B                     _OledFont:
   527                           	opt stack 0
   528  00CE9B  00                 	db	0
   529  00CE9C  00                 	db	0
   530  00CE9D  00                 	db	0
   531  00CE9E  00                 	db	0
   532  00CE9F  00                 	db	0
   533  00CEA0  00                 	db	0
   534  00CEA1  00                 	db	0
   535  00CEA2  00                 	db	0
   536  00CEA3  00                 	db	0
   537  00CEA4  00                 	db	0
   538  00CEA5  5F                 	db	95
   539  00CEA6  00                 	db	0
   540  00CEA7  00                 	db	0
   541  00CEA8  00                 	db	0
   542  00CEA9  00                 	db	0
   543  00CEAA  00                 	db	0
   544  00CEAB  00                 	db	0
   545  00CEAC  00                 	db	0
   546  00CEAD  07                 	db	7
   547  00CEAE  00                 	db	0
   548  00CEAF  07                 	db	7
   549  00CEB0  00                 	db	0
   550  00CEB1  00                 	db	0
   551  00CEB2  00                 	db	0
   552  00CEB3  00                 	db	0
   553  00CEB4  14                 	db	20
   554  00CEB5  7F                 	db	127
   555  00CEB6  14                 	db	20
   556  00CEB7  7F                 	db	127
   557  00CEB8  14                 	db	20
   558  00CEB9  00                 	db	0
   559  00CEBA  00                 	db	0
   560  00CEBB  00                 	db	0
   561  00CEBC  24                 	db	36
   562  00CEBD  2A                 	db	42
   563  00CEBE  7F                 	db	127
   564  00CEBF  2A                 	db	42
   565  00CEC0  12                 	db	18
   566  00CEC1  00                 	db	0
   567  00CEC2  00                 	db	0
   568  00CEC3  00                 	db	0
   569  00CEC4  23                 	db	35
   570  00CEC5  13                 	db	19
   571  00CEC6  08                 	db	8
   572  00CEC7  64                 	db	100
   573  00CEC8  62                 	db	98
   574  00CEC9  00                 	db	0
   575  00CECA  00                 	db	0
   576  00CECB  00                 	db	0
   577  00CECC  36                 	db	54
   578  00CECD  49                 	db	73
   579  00CECE  55                 	db	85
   580  00CECF  22                 	db	34
   581  00CED0  50                 	db	80
   582  00CED1  00                 	db	0
   583  00CED2  00                 	db	0
   584  00CED3  00                 	db	0
   585  00CED4  00                 	db	0
   586  00CED5  05                 	db	5
   587  00CED6  03                 	db	3
   588  00CED7  00                 	db	0
   589  00CED8  00                 	db	0
   590  00CED9  00                 	db	0
   591  00CEDA  00                 	db	0
   592  00CEDB  00                 	db	0
   593  00CEDC  1C                 	db	28
   594  00CEDD  22                 	db	34
   595  00CEDE  41                 	db	65
   596  00CEDF  00                 	db	0
   597  00CEE0  00                 	db	0
   598  00CEE1  00                 	db	0
   599  00CEE2  00                 	db	0
   600  00CEE3  00                 	db	0
   601  00CEE4  41                 	db	65
   602  00CEE5  22                 	db	34
   603  00CEE6  1C                 	db	28
   604  00CEE7  00                 	db	0
   605  00CEE8  00                 	db	0
   606  00CEE9  00                 	db	0
   607  00CEEA  00                 	db	0
   608  00CEEB  00                 	db	0
   609  00CEEC  08                 	db	8
   610  00CEED  2A                 	db	42
   611  00CEEE  1C                 	db	28
   612  00CEEF  2A                 	db	42
   613  00CEF0  08                 	db	8
   614  00CEF1  00                 	db	0
   615  00CEF2  00                 	db	0
   616  00CEF3  00                 	db	0
   617  00CEF4  08                 	db	8
   618  00CEF5  08                 	db	8
   619  00CEF6  3E                 	db	62
   620  00CEF7  08                 	db	8
   621  00CEF8  08                 	db	8
   622  00CEF9  00                 	db	0
   623  00CEFA  00                 	db	0
   624  00CEFB  00                 	db	0
   625  00CEFC  A0                 	db	160
   626  00CEFD  60                 	db	96
   627  00CEFE  00                 	db	0
   628  00CEFF  00                 	db	0
   629  00CF00  00                 	db	0
   630  00CF01  00                 	db	0
   631  00CF02  00                 	db	0
   632  00CF03  00                 	db	0
   633  00CF04  08                 	db	8
   634  00CF05  08                 	db	8
   635  00CF06  08                 	db	8
   636  00CF07  08                 	db	8
   637  00CF08  08                 	db	8
   638  00CF09  00                 	db	0
   639  00CF0A  00                 	db	0
   640  00CF0B  00                 	db	0
   641  00CF0C  60                 	db	96
   642  00CF0D  60                 	db	96
   643  00CF0E  00                 	db	0
   644  00CF0F  00                 	db	0
   645  00CF10  00                 	db	0
   646  00CF11  00                 	db	0
   647  00CF12  00                 	db	0
   648  00CF13  00                 	db	0
   649  00CF14  20                 	db	32
   650  00CF15  10                 	db	16
   651  00CF16  08                 	db	8
   652  00CF17  04                 	db	4
   653  00CF18  02                 	db	2
   654  00CF19  00                 	db	0
   655  00CF1A  00                 	db	0
   656  00CF1B  00                 	db	0
   657  00CF1C  3E                 	db	62
   658  00CF1D  51                 	db	81
   659  00CF1E  49                 	db	73
   660  00CF1F  45                 	db	69
   661  00CF20  3E                 	db	62
   662  00CF21  00                 	db	0
   663  00CF22  00                 	db	0
   664  00CF23  00                 	db	0
   665  00CF24  00                 	db	0
   666  00CF25  42                 	db	66
   667  00CF26  7F                 	db	127
   668  00CF27  40                 	db	64
   669  00CF28  00                 	db	0
   670  00CF29  00                 	db	0
   671  00CF2A  00                 	db	0
   672  00CF2B  00                 	db	0
   673  00CF2C  62                 	db	98
   674  00CF2D  51                 	db	81
   675  00CF2E  49                 	db	73
   676  00CF2F  49                 	db	73
   677  00CF30  46                 	db	70
   678  00CF31  00                 	db	0
   679  00CF32  00                 	db	0
   680  00CF33  00                 	db	0
   681  00CF34  22                 	db	34
   682  00CF35  41                 	db	65
   683  00CF36  49                 	db	73
   684  00CF37  49                 	db	73
   685  00CF38  36                 	db	54
   686  00CF39  00                 	db	0
   687  00CF3A  00                 	db	0
   688  00CF3B  00                 	db	0
   689  00CF3C  18                 	db	24
   690  00CF3D  14                 	db	20
   691  00CF3E  12                 	db	18
   692  00CF3F  7F                 	db	127
   693  00CF40  10                 	db	16
   694  00CF41  00                 	db	0
   695  00CF42  00                 	db	0
   696  00CF43  00                 	db	0
   697  00CF44  27                 	db	39
   698  00CF45  45                 	db	69
   699  00CF46  45                 	db	69
   700  00CF47  45                 	db	69
   701  00CF48  39                 	db	57
   702  00CF49  00                 	db	0
   703  00CF4A  00                 	db	0
   704  00CF4B  00                 	db	0
   705  00CF4C  3C                 	db	60
   706  00CF4D  4A                 	db	74
   707  00CF4E  49                 	db	73
   708  00CF4F  49                 	db	73
   709  00CF50  30                 	db	48
   710  00CF51  00                 	db	0
   711  00CF52  00                 	db	0
   712  00CF53  00                 	db	0
   713  00CF54  01                 	db	1
   714  00CF55  71                 	db	113
   715  00CF56  09                 	db	9
   716  00CF57  05                 	db	5
   717  00CF58  03                 	db	3
   718  00CF59  00                 	db	0
   719  00CF5A  00                 	db	0
   720  00CF5B  00                 	db	0
   721  00CF5C  36                 	db	54
   722  00CF5D  49                 	db	73
   723  00CF5E  49                 	db	73
   724  00CF5F  49                 	db	73
   725  00CF60  36                 	db	54
   726  00CF61  00                 	db	0
   727  00CF62  00                 	db	0
   728  00CF63  00                 	db	0
   729  00CF64  06                 	db	6
   730  00CF65  49                 	db	73
   731  00CF66  49                 	db	73
   732  00CF67  29                 	db	41
   733  00CF68  1E                 	db	30
   734  00CF69  00                 	db	0
   735  00CF6A  00                 	db	0
   736  00CF6B  00                 	db	0
   737  00CF6C  00                 	db	0
   738  00CF6D  36                 	db	54
   739  00CF6E  36                 	db	54
   740  00CF6F  00                 	db	0
   741  00CF70  00                 	db	0
   742  00CF71  00                 	db	0
   743  00CF72  00                 	db	0
   744  00CF73  00                 	db	0
   745  00CF74  00                 	db	0
   746  00CF75  AC                 	db	172
   747  00CF76  6C                 	db	108
   748  00CF77  00                 	db	0
   749  00CF78  00                 	db	0
   750  00CF79  00                 	db	0
   751  00CF7A  00                 	db	0
   752  00CF7B  00                 	db	0
   753  00CF7C  08                 	db	8
   754  00CF7D  14                 	db	20
   755  00CF7E  22                 	db	34
   756  00CF7F  41                 	db	65
   757  00CF80  00                 	db	0
   758  00CF81  00                 	db	0
   759  00CF82  00                 	db	0
   760  00CF83  00                 	db	0
   761  00CF84  14                 	db	20
   762  00CF85  14                 	db	20
   763  00CF86  14                 	db	20
   764  00CF87  14                 	db	20
   765  00CF88  14                 	db	20
   766  00CF89  00                 	db	0
   767  00CF8A  00                 	db	0
   768  00CF8B  00                 	db	0
   769  00CF8C  41                 	db	65
   770  00CF8D  22                 	db	34
   771  00CF8E  14                 	db	20
   772  00CF8F  08                 	db	8
   773  00CF90  00                 	db	0
   774  00CF91  00                 	db	0
   775  00CF92  00                 	db	0
   776  00CF93  00                 	db	0
   777  00CF94  02                 	db	2
   778  00CF95  01                 	db	1
   779  00CF96  51                 	db	81
   780  00CF97  09                 	db	9
   781  00CF98  06                 	db	6
   782  00CF99  00                 	db	0
   783  00CF9A  00                 	db	0
   784  00CF9B  00                 	db	0
   785  00CF9C  32                 	db	50
   786  00CF9D  49                 	db	73
   787  00CF9E  79                 	db	121
   788  00CF9F  41                 	db	65
   789  00CFA0  3E                 	db	62
   790  00CFA1  00                 	db	0
   791  00CFA2  00                 	db	0
   792  00CFA3  00                 	db	0
   793  00CFA4  7E                 	db	126
   794  00CFA5  09                 	db	9
   795  00CFA6  09                 	db	9
   796  00CFA7  09                 	db	9
   797  00CFA8  7E                 	db	126
   798  00CFA9  00                 	db	0
   799  00CFAA  00                 	db	0
   800  00CFAB  00                 	db	0
   801  00CFAC  7F                 	db	127
   802  00CFAD  49                 	db	73
   803  00CFAE  49                 	db	73
   804  00CFAF  49                 	db	73
   805  00CFB0  36                 	db	54
   806  00CFB1  00                 	db	0
   807  00CFB2  00                 	db	0
   808  00CFB3  00                 	db	0
   809  00CFB4  3E                 	db	62
   810  00CFB5  41                 	db	65
   811  00CFB6  41                 	db	65
   812  00CFB7  41                 	db	65
   813  00CFB8  22                 	db	34
   814  00CFB9  00                 	db	0
   815  00CFBA  00                 	db	0
   816  00CFBB  00                 	db	0
   817  00CFBC  7F                 	db	127
   818  00CFBD  41                 	db	65
   819  00CFBE  41                 	db	65
   820  00CFBF  22                 	db	34
   821  00CFC0  1C                 	db	28
   822  00CFC1  00                 	db	0
   823  00CFC2  00                 	db	0
   824  00CFC3  00                 	db	0
   825  00CFC4  7F                 	db	127
   826  00CFC5  49                 	db	73
   827  00CFC6  49                 	db	73
   828  00CFC7  49                 	db	73
   829  00CFC8  41                 	db	65
   830  00CFC9  00                 	db	0
   831  00CFCA  00                 	db	0
   832  00CFCB  00                 	db	0
   833  00CFCC  7F                 	db	127
   834  00CFCD  09                 	db	9
   835  00CFCE  09                 	db	9
   836  00CFCF  09                 	db	9
   837  00CFD0  01                 	db	1
   838  00CFD1  00                 	db	0
   839  00CFD2  00                 	db	0
   840  00CFD3  00                 	db	0
   841  00CFD4  3E                 	db	62
   842  00CFD5  41                 	db	65
   843  00CFD6  41                 	db	65
   844  00CFD7  51                 	db	81
   845  00CFD8  72                 	db	114
   846  00CFD9  00                 	db	0
   847  00CFDA  00                 	db	0
   848  00CFDB  00                 	db	0
   849  00CFDC  7F                 	db	127
   850  00CFDD  08                 	db	8
   851  00CFDE  08                 	db	8
   852  00CFDF  08                 	db	8
   853  00CFE0  7F                 	db	127
   854  00CFE1  00                 	db	0
   855  00CFE2  00                 	db	0
   856  00CFE3  00                 	db	0
   857  00CFE4  41                 	db	65
   858  00CFE5  7F                 	db	127
   859  00CFE6  41                 	db	65
   860  00CFE7  00                 	db	0
   861  00CFE8  00                 	db	0
   862  00CFE9  00                 	db	0
   863  00CFEA  00                 	db	0
   864  00CFEB  00                 	db	0
   865  00CFEC  20                 	db	32
   866  00CFED  40                 	db	64
   867  00CFEE  41                 	db	65
   868  00CFEF  3F                 	db	63
   869  00CFF0  01                 	db	1
   870  00CFF1  00                 	db	0
   871  00CFF2  00                 	db	0
   872  00CFF3  00                 	db	0
   873  00CFF4  7F                 	db	127
   874  00CFF5  08                 	db	8
   875  00CFF6  14                 	db	20
   876  00CFF7  22                 	db	34
   877  00CFF8  41                 	db	65
   878  00CFF9  00                 	db	0
   879  00CFFA  00                 	db	0
   880  00CFFB  00                 	db	0
   881  00CFFC  7F                 	db	127
   882  00CFFD  40                 	db	64
   883  00CFFE  40                 	db	64
   884  00CFFF  40                 	db	64
   885  00D000  40                 	db	64
   886  00D001  00                 	db	0
   887  00D002  00                 	db	0
   888  00D003  00                 	db	0
   889  00D004  7F                 	db	127
   890  00D005  02                 	db	2
   891  00D006  0C                 	db	12
   892  00D007  02                 	db	2
   893  00D008  7F                 	db	127
   894  00D009  00                 	db	0
   895  00D00A  00                 	db	0
   896  00D00B  00                 	db	0
   897  00D00C  7F                 	db	127
   898  00D00D  04                 	db	4
   899  00D00E  08                 	db	8
   900  00D00F  10                 	db	16
   901  00D010  7F                 	db	127
   902  00D011  00                 	db	0
   903  00D012  00                 	db	0
   904  00D013  00                 	db	0
   905  00D014  3E                 	db	62
   906  00D015  41                 	db	65
   907  00D016  41                 	db	65
   908  00D017  41                 	db	65
   909  00D018  3E                 	db	62
   910  00D019  00                 	db	0
   911  00D01A  00                 	db	0
   912  00D01B  00                 	db	0
   913  00D01C  7F                 	db	127
   914  00D01D  09                 	db	9
   915  00D01E  09                 	db	9
   916  00D01F  09                 	db	9
   917  00D020  06                 	db	6
   918  00D021  00                 	db	0
   919  00D022  00                 	db	0
   920  00D023  00                 	db	0
   921  00D024  3E                 	db	62
   922  00D025  41                 	db	65
   923  00D026  51                 	db	81
   924  00D027  21                 	db	33
   925  00D028  5E                 	db	94
   926  00D029  00                 	db	0
   927  00D02A  00                 	db	0
   928  00D02B  00                 	db	0
   929  00D02C  7F                 	db	127
   930  00D02D  09                 	db	9
   931  00D02E  19                 	db	25
   932  00D02F  29                 	db	41
   933  00D030  46                 	db	70
   934  00D031  00                 	db	0
   935  00D032  00                 	db	0
   936  00D033  00                 	db	0
   937  00D034  26                 	db	38
   938  00D035  49                 	db	73
   939  00D036  49                 	db	73
   940  00D037  49                 	db	73
   941  00D038  46                 	db	70
   942  00D039  00                 	db	0
   943  00D03A  00                 	db	0
   944  00D03B  00                 	db	0
   945  00D03C  01                 	db	1
   946  00D03D  01                 	db	1
   947  00D03E  7F                 	db	127
   948  00D03F  01                 	db	1
   949  00D040  01                 	db	1
   950  00D041  00                 	db	0
   951  00D042  00                 	db	0
   952  00D043  00                 	db	0
   953  00D044  3F                 	db	63
   954  00D045  40                 	db	64
   955  00D046  40                 	db	64
   956  00D047  40                 	db	64
   957  00D048  3F                 	db	63
   958  00D049  00                 	db	0
   959  00D04A  00                 	db	0
   960  00D04B  00                 	db	0
   961  00D04C  1F                 	db	31
   962  00D04D  20                 	db	32
   963  00D04E  40                 	db	64
   964  00D04F  20                 	db	32
   965  00D050  1F                 	db	31
   966  00D051  00                 	db	0
   967  00D052  00                 	db	0
   968  00D053  00                 	db	0
   969  00D054  3F                 	db	63
   970  00D055  40                 	db	64
   971  00D056  38                 	db	56
   972  00D057  40                 	db	64
   973  00D058  3F                 	db	63
   974  00D059  00                 	db	0
   975  00D05A  00                 	db	0
   976  00D05B  00                 	db	0
   977  00D05C  63                 	db	99
   978  00D05D  14                 	db	20
   979  00D05E  08                 	db	8
   980  00D05F  14                 	db	20
   981  00D060  63                 	db	99
   982  00D061  00                 	db	0
   983  00D062  00                 	db	0
   984  00D063  00                 	db	0
   985  00D064  03                 	db	3
   986  00D065  04                 	db	4
   987  00D066  78                 	db	120
   988  00D067  04                 	db	4
   989  00D068  03                 	db	3
   990  00D069  00                 	db	0
   991  00D06A  00                 	db	0
   992  00D06B  00                 	db	0
   993  00D06C  61                 	db	97
   994  00D06D  51                 	db	81
   995  00D06E  49                 	db	73
   996  00D06F  45                 	db	69
   997  00D070  43                 	db	67
   998  00D071  00                 	db	0
   999  00D072  00                 	db	0
  1000  00D073  00                 	db	0
  1001  00D074  7F                 	db	127
  1002  00D075  41                 	db	65
  1003  00D076  41                 	db	65
  1004  00D077  00                 	db	0
  1005  00D078  00                 	db	0
  1006  00D079  00                 	db	0
  1007  00D07A  00                 	db	0
  1008  00D07B  00                 	db	0
  1009  00D07C  02                 	db	2
  1010  00D07D  04                 	db	4
  1011  00D07E  08                 	db	8
  1012  00D07F  10                 	db	16
  1013  00D080  20                 	db	32
  1014  00D081  00                 	db	0
  1015  00D082  00                 	db	0
  1016  00D083  00                 	db	0
  1017  00D084  41                 	db	65
  1018  00D085  41                 	db	65
  1019  00D086  7F                 	db	127
  1020  00D087  00                 	db	0
  1021  00D088  00                 	db	0
  1022  00D089  00                 	db	0
  1023  00D08A  00                 	db	0
  1024  00D08B  00                 	db	0
  1025  00D08C  04                 	db	4
  1026  00D08D  02                 	db	2
  1027  00D08E  01                 	db	1
  1028  00D08F  02                 	db	2
  1029  00D090  04                 	db	4
  1030  00D091  00                 	db	0
  1031  00D092  00                 	db	0
  1032  00D093  00                 	db	0
  1033  00D094  80                 	db	128
  1034  00D095  80                 	db	128
  1035  00D096  80                 	db	128
  1036  00D097  80                 	db	128
  1037  00D098  80                 	db	128
  1038  00D099  00                 	db	0
  1039  00D09A  00                 	db	0
  1040  00D09B  00                 	db	0
  1041  00D09C  01                 	db	1
  1042  00D09D  02                 	db	2
  1043  00D09E  04                 	db	4
  1044  00D09F  00                 	db	0
  1045  00D0A0  00                 	db	0
  1046  00D0A1  00                 	db	0
  1047  00D0A2  00                 	db	0
  1048  00D0A3  00                 	db	0
  1049  00D0A4  20                 	db	32
  1050  00D0A5  54                 	db	84
  1051  00D0A6  54                 	db	84
  1052  00D0A7  54                 	db	84
  1053  00D0A8  78                 	db	120
  1054  00D0A9  00                 	db	0
  1055  00D0AA  00                 	db	0
  1056  00D0AB  00                 	db	0
  1057  00D0AC  7F                 	db	127
  1058  00D0AD  48                 	db	72
  1059  00D0AE  44                 	db	68
  1060  00D0AF  44                 	db	68
  1061  00D0B0  38                 	db	56
  1062  00D0B1  00                 	db	0
  1063  00D0B2  00                 	db	0
  1064  00D0B3  00                 	db	0
  1065  00D0B4  38                 	db	56
  1066  00D0B5  44                 	db	68
  1067  00D0B6  44                 	db	68
  1068  00D0B7  28                 	db	40
  1069  00D0B8  00                 	db	0
  1070  00D0B9  00                 	db	0
  1071  00D0BA  00                 	db	0
  1072  00D0BB  00                 	db	0
  1073  00D0BC  38                 	db	56
  1074  00D0BD  44                 	db	68
  1075  00D0BE  44                 	db	68
  1076  00D0BF  48                 	db	72
  1077  00D0C0  7F                 	db	127
  1078  00D0C1  00                 	db	0
  1079  00D0C2  00                 	db	0
  1080  00D0C3  00                 	db	0
  1081  00D0C4  38                 	db	56
  1082  00D0C5  54                 	db	84
  1083  00D0C6  54                 	db	84
  1084  00D0C7  54                 	db	84
  1085  00D0C8  18                 	db	24
  1086  00D0C9  00                 	db	0
  1087  00D0CA  00                 	db	0
  1088  00D0CB  00                 	db	0
  1089  00D0CC  08                 	db	8
  1090  00D0CD  7E                 	db	126
  1091  00D0CE  09                 	db	9
  1092  00D0CF  02                 	db	2
  1093  00D0D0  00                 	db	0
  1094  00D0D1  00                 	db	0
  1095  00D0D2  00                 	db	0
  1096  00D0D3  00                 	db	0
  1097  00D0D4  18                 	db	24
  1098  00D0D5  A4                 	db	164
  1099  00D0D6  A4                 	db	164
  1100  00D0D7  A4                 	db	164
  1101  00D0D8  7C                 	db	124
  1102  00D0D9  00                 	db	0
  1103  00D0DA  00                 	db	0
  1104  00D0DB  00                 	db	0
  1105  00D0DC  7F                 	db	127
  1106  00D0DD  08                 	db	8
  1107  00D0DE  04                 	db	4
  1108  00D0DF  04                 	db	4
  1109  00D0E0  78                 	db	120
  1110  00D0E1  00                 	db	0
  1111  00D0E2  00                 	db	0
  1112  00D0E3  00                 	db	0
  1113  00D0E4  00                 	db	0
  1114  00D0E5  7D                 	db	125
  1115  00D0E6  00                 	db	0
  1116  00D0E7  00                 	db	0
  1117  00D0E8  00                 	db	0
  1118  00D0E9  00                 	db	0
  1119  00D0EA  00                 	db	0
  1120  00D0EB  00                 	db	0
  1121  00D0EC  80                 	db	128
  1122  00D0ED  84                 	db	132
  1123  00D0EE  7D                 	db	125
  1124  00D0EF  00                 	db	0
  1125  00D0F0  00                 	db	0
  1126  00D0F1  00                 	db	0
  1127  00D0F2  00                 	db	0
  1128  00D0F3  00                 	db	0
  1129  00D0F4  7F                 	db	127
  1130  00D0F5  10                 	db	16
  1131  00D0F6  28                 	db	40
  1132  00D0F7  44                 	db	68
  1133  00D0F8  00                 	db	0
  1134  00D0F9  00                 	db	0
  1135  00D0FA  00                 	db	0
  1136  00D0FB  00                 	db	0
  1137  00D0FC  41                 	db	65
  1138  00D0FD  7F                 	db	127
  1139  00D0FE  40                 	db	64
  1140  00D0FF  00                 	db	0
  1141  00D100  00                 	db	0
  1142  00D101  00                 	db	0
  1143  00D102  00                 	db	0
  1144  00D103  00                 	db	0
  1145  00D104  7C                 	db	124
  1146  00D105  04                 	db	4
  1147  00D106  18                 	db	24
  1148  00D107  04                 	db	4
  1149  00D108  78                 	db	120
  1150  00D109  00                 	db	0
  1151  00D10A  00                 	db	0
  1152  00D10B  00                 	db	0
  1153  00D10C  7C                 	db	124
  1154  00D10D  08                 	db	8
  1155  00D10E  04                 	db	4
  1156  00D10F  7C                 	db	124
  1157  00D110  00                 	db	0
  1158  00D111  00                 	db	0
  1159  00D112  00                 	db	0
  1160  00D113  00                 	db	0
  1161  00D114  38                 	db	56
  1162  00D115  44                 	db	68
  1163  00D116  44                 	db	68
  1164  00D117  38                 	db	56
  1165  00D118  00                 	db	0
  1166  00D119  00                 	db	0
  1167  00D11A  00                 	db	0
  1168  00D11B  00                 	db	0
  1169  00D11C  FC                 	db	252
  1170  00D11D  24                 	db	36
  1171  00D11E  24                 	db	36
  1172  00D11F  18                 	db	24
  1173  00D120  00                 	db	0
  1174  00D121  00                 	db	0
  1175  00D122  00                 	db	0
  1176  00D123  00                 	db	0
  1177  00D124  18                 	db	24
  1178  00D125  24                 	db	36
  1179  00D126  24                 	db	36
  1180  00D127  FC                 	db	252
  1181  00D128  00                 	db	0
  1182  00D129  00                 	db	0
  1183  00D12A  00                 	db	0
  1184  00D12B  00                 	db	0
  1185  00D12C  00                 	db	0
  1186  00D12D  7C                 	db	124
  1187  00D12E  08                 	db	8
  1188  00D12F  04                 	db	4
  1189  00D130  00                 	db	0
  1190  00D131  00                 	db	0
  1191  00D132  00                 	db	0
  1192  00D133  00                 	db	0
  1193  00D134  48                 	db	72
  1194  00D135  54                 	db	84
  1195  00D136  54                 	db	84
  1196  00D137  24                 	db	36
  1197  00D138  00                 	db	0
  1198  00D139  00                 	db	0
  1199  00D13A  00                 	db	0
  1200  00D13B  00                 	db	0
  1201  00D13C  04                 	db	4
  1202  00D13D  7F                 	db	127
  1203  00D13E  44                 	db	68
  1204  00D13F  00                 	db	0
  1205  00D140  00                 	db	0
  1206  00D141  00                 	db	0
  1207  00D142  00                 	db	0
  1208  00D143  00                 	db	0
  1209  00D144  3C                 	db	60
  1210  00D145  40                 	db	64
  1211  00D146  40                 	db	64
  1212  00D147  7C                 	db	124
  1213  00D148  00                 	db	0
  1214  00D149  00                 	db	0
  1215  00D14A  00                 	db	0
  1216  00D14B  00                 	db	0
  1217  00D14C  1C                 	db	28
  1218  00D14D  20                 	db	32
  1219  00D14E  40                 	db	64
  1220  00D14F  20                 	db	32
  1221  00D150  1C                 	db	28
  1222  00D151  00                 	db	0
  1223  00D152  00                 	db	0
  1224  00D153  00                 	db	0
  1225  00D154  3C                 	db	60
  1226  00D155  40                 	db	64
  1227  00D156  30                 	db	48
  1228  00D157  40                 	db	64
  1229  00D158  3C                 	db	60
  1230  00D159  00                 	db	0
  1231  00D15A  00                 	db	0
  1232  00D15B  00                 	db	0
  1233  00D15C  44                 	db	68
  1234  00D15D  28                 	db	40
  1235  00D15E  10                 	db	16
  1236  00D15F  28                 	db	40
  1237  00D160  44                 	db	68
  1238  00D161  00                 	db	0
  1239  00D162  00                 	db	0
  1240  00D163  00                 	db	0
  1241  00D164  1C                 	db	28
  1242  00D165  A0                 	db	160
  1243  00D166  A0                 	db	160
  1244  00D167  7C                 	db	124
  1245  00D168  00                 	db	0
  1246  00D169  00                 	db	0
  1247  00D16A  00                 	db	0
  1248  00D16B  00                 	db	0
  1249  00D16C  44                 	db	68
  1250  00D16D  64                 	db	100
  1251  00D16E  54                 	db	84
  1252  00D16F  4C                 	db	76
  1253  00D170  44                 	db	68
  1254  00D171  00                 	db	0
  1255  00D172  00                 	db	0
  1256  00D173  00                 	db	0
  1257  00D174  08                 	db	8
  1258  00D175  36                 	db	54
  1259  00D176  41                 	db	65
  1260  00D177  00                 	db	0
  1261  00D178  00                 	db	0
  1262  00D179  00                 	db	0
  1263  00D17A  00                 	db	0
  1264  00D17B  00                 	db	0
  1265  00D17C  00                 	db	0
  1266  00D17D  7F                 	db	127
  1267  00D17E  00                 	db	0
  1268  00D17F  00                 	db	0
  1269  00D180  00                 	db	0
  1270  00D181  00                 	db	0
  1271  00D182  00                 	db	0
  1272  00D183  00                 	db	0
  1273  00D184  41                 	db	65
  1274  00D185  36                 	db	54
  1275  00D186  08                 	db	8
  1276  00D187  00                 	db	0
  1277  00D188  00                 	db	0
  1278  00D189  00                 	db	0
  1279  00D18A  00                 	db	0
  1280  00D18B  00                 	db	0
  1281  00D18C  02                 	db	2
  1282  00D18D  01                 	db	1
  1283  00D18E  01                 	db	1
  1284  00D18F  02                 	db	2
  1285  00D190  01                 	db	1
  1286  00D191  00                 	db	0
  1287  00D192  00                 	db	0
  1288  00D193  00                 	db	0
  1289  00D194  02                 	db	2
  1290  00D195  05                 	db	5
  1291  00D196  05                 	db	5
  1292  00D197  02                 	db	2
  1293  00D198  00                 	db	0
  1294  00D199  00                 	db	0
  1295  00D19A  00                 	db	0
  1296  00D19B                     __end_of_OledFont:
  1297                           	opt stack 0
  1298  00D19B                     atan@coeff_a:
  1299                           	opt stack 0
  1300  00D19B  3C06               	dw	15366
  1301  00D19D  4204               	dw	16900
  1302  00D19F  9F7D               	dw	40829
  1303  00D1A1  426A               	dw	17002
  1304  00D1A3  905C               	dw	36956
  1305  00D1A5  4201               	dw	16897
  1306  00D1A7  4D60               	dw	19808
  1307  00D1A9  40BB               	dw	16571
  1308  00D1AB  EC51               	dw	60497
  1309  00D1AD  3E47               	dw	15943
  1310  00D1AF  8DDE               	dw	36318
  1311  00D1B1  BB1F               	dw	47903
  1312  00D1B3                     __end_ofatan@coeff_a:
  1313                           	opt stack 0
  1314  00D1B3                     sin@coeff_a:
  1315                           	opt stack 0
  1316  00D1B3  F3EC               	dw	62444
  1317  00D1B5  484A               	dw	18506
  1318  00D1B7  9535               	dw	38197
  1319  00D1B9  C795               	dw	51093
  1320  00D1BB  C117               	dw	49431
  1321  00D1BD  45DC               	dw	17884
  1322  00D1BF  DBFD               	dw	56317
  1323  00D1C1  C36D               	dw	50029
  1324  00D1C3  B372               	dw	45938
  1325  00D1C5  4033               	dw	16435
  1326  00D1C7                     __end_ofsin@coeff_a:
  1327                           	opt stack 0
  1328  00D1C7                     atan@coeff_b:
  1329                           	opt stack 0
  1330  00D1C7  3C06               	dw	15366
  1331  00D1C9  4204               	dw	16900
  1332  00D1CB  59C0               	dw	22976
  1333  00D1CD  428B               	dw	17035
  1334  00D1CF  0474               	dw	1140
  1335  00D1D1  4244               	dw	16964
  1336  00D1D3  9BF9               	dw	39929
  1337  00D1D5  414F               	dw	16719
  1338  00D1D7  0000               	dw	0
  1339  00D1D9  3F80               	dw	16256
  1340  00D1DB                     __end_ofatan@coeff_b:
  1341                           	opt stack 0
  1342  00D1DB                     sin@coeff_b:
  1343                           	opt stack 0
  1344  00D1DB  342B               	dw	13355
  1345  00D1DD  4801               	dw	18433
  1346  00D1DF  9D7F               	dw	40319
  1347  00D1E1  45B0               	dw	17840
  1348  00D1E3  FFE7               	dw	65511
  1349  00D1E5  42D9               	dw	17113
  1350  00D1E7  0000               	dw	0
  1351  00D1E9  3F80               	dw	16256
  1352  00D1EB                     __end_ofsin@coeff_b:
  1353                           	opt stack 0
  1354  00D1EB                     STR_175:
  1355  00D1EB  4C                 	db	76	;'L'
  1356  00D1EC  69                 	db	105	;'i'
  1357  00D1ED  73                 	db	115	;'s'
  1358  00D1EE  74                 	db	116	;'t'
  1359  00D1EF  20                 	db	32
  1360  00D1F0  6F                 	db	111	;'o'
  1361  00D1F1  66                 	db	102	;'f'
  1362  00D1F2  20                 	db	32
  1363  00D1F3  61                 	db	97	;'a'
  1364  00D1F4  6C                 	db	108	;'l'
  1365  00D1F5  6C                 	db	108	;'l'
  1366  00D1F6  20                 	db	32
  1367  00D1F7  73                 	db	115	;'s'
  1368  00D1F8  75                 	db	117	;'u'
  1369  00D1F9  70                 	db	112	;'p'
  1370  00D1FA  70                 	db	112	;'p'
  1371  00D1FB  6F                 	db	111	;'o'
  1372  00D1FC  72                 	db	114	;'r'
  1373  00D1FD  74                 	db	116	;'t'
  1374  00D1FE  65                 	db	101	;'e'
  1375  00D1FF  64                 	db	100	;'d'
  1376  00D200  20                 	db	32
  1377  00D201  63                 	db	99	;'c'
  1378  00D202  6F                 	db	111	;'o'
  1379  00D203  6D                 	db	109	;'m'
  1380  00D204  6D                 	db	109	;'m'
  1381  00D205  61                 	db	97	;'a'
  1382  00D206  6E                 	db	110	;'n'
  1383  00D207  64                 	db	100	;'d'
  1384  00D208  73                 	db	115	;'s'
  1385  00D209  3A                 	db	58	;':'
  1386  00D20A  0A                 	db	10
  1387  00D20B  0D                 	db	13
  1388  00D20C  44                 	db	68	;'D'
  1389  00D20D  65                 	db	101	;'e'
  1390  00D20E  76                 	db	118	;'v'
  1391  00D20F  69                 	db	105	;'i'
  1392  00D210  63                 	db	99	;'c'
  1393  00D211  65                 	db	101	;'e'
  1394  00D212  20                 	db	32
  1395  00D213  43                 	db	67	;'C'
  1396  00D214  6F                 	db	111	;'o'
  1397  00D215  6E                 	db	110	;'n'
  1398  00D216  74                 	db	116	;'t'
  1399  00D217  72                 	db	114	;'r'
  1400  00D218  6F                 	db	111	;'o'
  1401  00D219  6C                 	db	108	;'l'
  1402  00D21A  20                 	db	32
  1403  00D21B  43                 	db	67	;'C'
  1404  00D21C  6F                 	db	111	;'o'
  1405  00D21D  6D                 	db	109	;'m'
  1406  00D21E  6D                 	db	109	;'m'
  1407  00D21F  61                 	db	97	;'a'
  1408  00D220  6E                 	db	110	;'n'
  1409  00D221  64                 	db	100	;'d'
  1410  00D222  73                 	db	115	;'s'
  1411  00D223  3A                 	db	58	;':'
  1412  00D224  20                 	db	32
  1413  00D225  43                 	db	67	;'C'
  1414  00D226  6F                 	db	111	;'o'
  1415  00D227  6D                 	db	109	;'m'
  1416  00D228  6D                 	db	109	;'m'
  1417  00D229  61                 	db	97	;'a'
  1418  00D22A  6E                 	db	110	;'n'
  1419  00D22B  64                 	db	100	;'d'
  1420  00D22C  73                 	db	115	;'s'
  1421  00D22D  20                 	db	32
  1422  00D22E  74                 	db	116	;'t'
  1423  00D22F  6F                 	db	111	;'o'
  1424  00D230  20                 	db	32
  1425  00D231  76                 	db	118	;'v'
  1426  00D232  69                 	db	105	;'i'
  1427  00D233  65                 	db	101	;'e'
  1428  00D234  77                 	db	119	;'w'
  1429  00D235  20                 	db	32
  1430  00D236  61                 	db	97	;'a'
  1431  00D237  6E                 	db	110	;'n'
  1432  00D238  64                 	db	100	;'d'
  1433  00D239  20                 	db	32
  1434  00D23A  63                 	db	99	;'c'
  1435  00D23B  6F                 	db	111	;'o'
  1436  00D23C  6E                 	db	110	;'n'
  1437  00D23D  74                 	db	116	;'t'
  1438  00D23E  72                 	db	114	;'r'
  1439  00D23F  6F                 	db	111	;'o'
  1440  00D240  6C                 	db	108	;'l'
  1441  00D241  20                 	db	32
  1442  00D242  6C                 	db	108	;'l'
  1443  00D243  6F                 	db	111	;'o'
  1444  00D244  77                 	db	119	;'w'
  1445  00D245  20                 	db	32
  1446  00D246  6C                 	db	108	;'l'
  1447  00D247  65                 	db	101	;'e'
  1448  00D248  76                 	db	118	;'v'
  1449  00D249  65                 	db	101	;'e'
  1450  00D24A  6C                 	db	108	;'l'
  1451  00D24B  20                 	db	32
  1452  00D24C  73                 	db	115	;'s'
  1453  00D24D  79                 	db	121	;'y'
  1454  00D24E  73                 	db	115	;'s'
  1455  00D24F  74                 	db	116	;'t'
  1456  00D250  65                 	db	101	;'e'
  1457  00D251  6D                 	db	109	;'m'
  1458  00D252  20                 	db	32
  1459  00D253  66                 	db	102	;'f'
  1460  00D254  75                 	db	117	;'u'
  1461  00D255  6E                 	db	110	;'n'
  1462  00D256  63                 	db	99	;'c'
  1463  00D257  74                 	db	116	;'t'
  1464  00D258  69                 	db	105	;'i'
  1465  00D259  6F                 	db	111	;'o'
  1466  00D25A  6E                 	db	110	;'n'
  1467  00D25B  61                 	db	97	;'a'
  1468  00D25C  6C                 	db	108	;'l'
  1469  00D25D  69                 	db	105	;'i'
  1470  00D25E  74                 	db	116	;'t'
  1471  00D25F  79                 	db	121	;'y'
  1472  00D260  0A                 	db	10
  1473  00D261  0D                 	db	13
  1474  00D262  20                 	db	32
  1475  00D263  20                 	db	32
  1476  00D264  20                 	db	32
  1477  00D265  52                 	db	82	;'R'
  1478  00D266  65                 	db	101	;'e'
  1479  00D267  73                 	db	115	;'s'
  1480  00D268  65                 	db	101	;'e'
  1481  00D269  74                 	db	116	;'t'
  1482  00D26A  3A                 	db	58	;':'
  1483  00D26B  20                 	db	32
  1484  00D26C  43                 	db	67	;'C'
  1485  00D26D  6C                 	db	108	;'l'
  1486  00D26E  65                 	db	101	;'e'
  1487  00D26F  61                 	db	97	;'a'
  1488  00D270  72                 	db	114	;'r'
  1489  00D271  73                 	db	115	;'s'
  1490  00D272  20                 	db	32
  1491  00D273  74                 	db	116	;'t'
  1492  00D274  68                 	db	104	;'h'
  1493  00D275  65                 	db	101	;'e'
  1494  00D276  20                 	db	32
  1495  00D277  74                 	db	116	;'t'
  1496  00D278  65                 	db	101	;'e'
  1497  00D279  72                 	db	114	;'r'
  1498  00D27A  6D                 	db	109	;'m'
  1499  00D27B  69                 	db	105	;'i'
  1500  00D27C  6E                 	db	110	;'n'
  1501  00D27D  61                 	db	97	;'a'
  1502  00D27E  6C                 	db	108	;'l'
  1503  00D27F  20                 	db	32
  1504  00D280  61                 	db	97	;'a'
  1505  00D281  6E                 	db	110	;'n'
  1506  00D282  64                 	db	100	;'d'
  1507  00D283  20                 	db	32
  1508  00D284  72                 	db	114	;'r'
  1509  00D285  65                 	db	101	;'e'
  1510  00D286  73                 	db	115	;'s'
  1511  00D287  65                 	db	101	;'e'
  1512  00D288  74                 	db	116	;'t'
  1513  00D289  73                 	db	115	;'s'
  1514  00D28A  20                 	db	32
  1515  00D28B  74                 	db	116	;'t'
  1516  00D28C  68                 	db	104	;'h'
  1517  00D28D  65                 	db	101	;'e'
  1518  00D28E  20                 	db	32
  1519  00D28F  6D                 	db	109	;'m'
  1520  00D290  69                 	db	105	;'i'
  1521  00D291  63                 	db	99	;'c'
  1522  00D292  72                 	db	114	;'r'
  1523  00D293  6F                 	db	111	;'o'
  1524  00D294  63                 	db	99	;'c'
  1525  00D295  6F                 	db	111	;'o'
  1526  00D296  6E                 	db	110	;'n'
  1527  00D297  74                 	db	116	;'t'
  1528  00D298  72                 	db	114	;'r'
  1529  00D299  6F                 	db	111	;'o'
  1530  00D29A  6C                 	db	108	;'l'
  1531  00D29B  6C                 	db	108	;'l'
  1532  00D29C  65                 	db	101	;'e'
  1533  00D29D  72                 	db	114	;'r'
  1534  00D29E  0A                 	db	10
  1535  00D29F  0D                 	db	13
  1536  00D2A0  20                 	db	32
  1537  00D2A1  20                 	db	32
  1538  00D2A2  20                 	db	32
  1539  00D2A3  43                 	db	67	;'C'
  1540  00D2A4  6C                 	db	108	;'l'
  1541  00D2A5  65                 	db	101	;'e'
  1542  00D2A6  61                 	db	97	;'a'
  1543  00D2A7  72                 	db	114	;'r'
  1544  00D2A8  3A                 	db	58	;':'
  1545  00D2A9  20                 	db	32
  1546  00D2AA  43                 	db	67	;'C'
  1547  00D2AB  6C                 	db	108	;'l'
  1548  00D2AC  65                 	db	101	;'e'
  1549  00D2AD  61                 	db	97	;'a'
  1550  00D2AE  72                 	db	114	;'r'
  1551  00D2AF  73                 	db	115	;'s'
  1552  00D2B0  20                 	db	32
  1553  00D2B1  74                 	db	116	;'t'
  1554  00D2B2  68                 	db	104	;'h'
  1555  00D2B3  65                 	db	101	;'e'
  1556  00D2B4  20                 	db	32
  1557  00D2B5  74                 	db	116	;'t'
  1558  00D2B6  65                 	db	101	;'e'
  1559  00D2B7  72                 	db	114	;'r'
  1560  00D2B8  6D                 	db	109	;'m'
  1561  00D2B9  69                 	db	105	;'i'
  1562  00D2BA  6E                 	db	110	;'n'
  1563  00D2BB  61                 	db	97	;'a'
  1564  00D2BC  6C                 	db	108	;'l'
  1565  00D2BD  20                 	db	32
  1566  00D2BE  62                 	db	98	;'b'
  1567  00D2BF  75                 	db	117	;'u'
  1568  00D2C0  74                 	db	116	;'t'
  1569  00D2C1  20                 	db	32
  1570  00D2C2  64                 	db	100	;'d'
  1571  00D2C3  6F                 	db	111	;'o'
  1572  00D2C4  65                 	db	101	;'e'
  1573  00D2C5  73                 	db	115	;'s'
  1574  00D2C6  6E                 	db	110	;'n'
  1575  00D2C7  27                 	db	39
  1576  00D2C8  74                 	db	116	;'t'
  1577  00D2C9  20                 	db	32
  1578  00D2CA  72                 	db	114	;'r'
  1579  00D2CB  65                 	db	101	;'e'
  1580  00D2CC  73                 	db	115	;'s'
  1581  00D2CD  65                 	db	101	;'e'
  1582  00D2CE  74                 	db	116	;'t'
  1583  00D2CF  20                 	db	32
  1584  00D2D0  74                 	db	116	;'t'
  1585  00D2D1  68                 	db	104	;'h'
  1586  00D2D2  65                 	db	101	;'e'
  1587  00D2D3  20                 	db	32
  1588  00D2D4  6D                 	db	109	;'m'
  1589  00D2D5  69                 	db	105	;'i'
  1590  00D2D6  63                 	db	99	;'c'
  1591  00D2D7  72                 	db	114	;'r'
  1592  00D2D8  6F                 	db	111	;'o'
  1593  00D2D9  0A                 	db	10
  1594  00D2DA  0D                 	db	13
  1595  00D2DB  20                 	db	32
  1596  00D2DC  20                 	db	32
  1597  00D2DD  20                 	db	32
  1598  00D2DE  43                 	db	67	;'C'
  1599  00D2DF  61                 	db	97	;'a'
  1600  00D2E0  75                 	db	117	;'u'
  1601  00D2E1  73                 	db	115	;'s'
  1602  00D2E2  65                 	db	101	;'e'
  1603  00D2E3  20                 	db	32
  1604  00D2E4  6F                 	db	111	;'o'
  1605  00D2E5  66                 	db	102	;'f'
  1606  00D2E6  20                 	db	32
  1607  00D2E7  52                 	db	82	;'R'
  1608  00D2E8  65                 	db	101	;'e'
  1609  00D2E9  73                 	db	115	;'s'
  1610  00D2EA  65                 	db	101	;'e'
  1611  00D2EB  74                 	db	116	;'t'
  1612  00D2EC  3F                 	db	63	;'?'
  1613  00D2ED  3A                 	db	58	;':'
  1614  00D2EE  20                 	db	32
  1615  00D2EF  52                 	db	82	;'R'
  1616  00D2F0  65                 	db	101	;'e'
  1617  00D2F1  74                 	db	116	;'t'
  1618  00D2F2  75                 	db	117	;'u'
  1619  00D2F3  72                 	db	114	;'r'
  1620  00D2F4  6E                 	db	110	;'n'
  1621  00D2F5  73                 	db	115	;'s'
  1622  00D2F6  20                 	db	32
  1623  00D2F7  74                 	db	116	;'t'
  1624  00D2F8  68                 	db	104	;'h'
  1625  00D2F9  65                 	db	101	;'e'
  1626  00D2FA  20                 	db	32
  1627  00D2FB  63                 	db	99	;'c'
  1628  00D2FC  61                 	db	97	;'a'
  1629  00D2FD  75                 	db	117	;'u'
  1630  00D2FE  73                 	db	115	;'s'
  1631  00D2FF  65                 	db	101	;'e'
  1632  00D300  20                 	db	32
  1633  00D301  6F                 	db	111	;'o'
  1634  00D302  66                 	db	102	;'f'
  1635  00D303  20                 	db	32
  1636  00D304  74                 	db	116	;'t'
  1637  00D305  68                 	db	104	;'h'
  1638  00D306  65                 	db	101	;'e'
  1639  00D307  20                 	db	32
  1640  00D308  6D                 	db	109	;'m'
  1641  00D309  6F                 	db	111	;'o'
  1642  00D30A  73                 	db	115	;'s'
  1643  00D30B  74                 	db	116	;'t'
  1644  00D30C  20                 	db	32
  1645  00D30D  72                 	db	114	;'r'
  1646  00D30E  65                 	db	101	;'e'
  1647  00D30F  63                 	db	99	;'c'
  1648  00D310  65                 	db	101	;'e'
  1649  00D311  6E                 	db	110	;'n'
  1650  00D312  74                 	db	116	;'t'
  1651  00D313  20                 	db	32
  1652  00D314  64                 	db	100	;'d'
  1653  00D315  65                 	db	101	;'e'
  1654  00D316  76                 	db	118	;'v'
  1655  00D317  69                 	db	105	;'i'
  1656  00D318  63                 	db	99	;'c'
  1657  00D319  65                 	db	101	;'e'
  1658  00D31A  20                 	db	32
  1659  00D31B  72                 	db	114	;'r'
  1660  00D31C  65                 	db	101	;'e'
  1661  00D31D  73                 	db	115	;'s'
  1662  00D31E  65                 	db	101	;'e'
  1663  00D31F  74                 	db	116	;'t'
  1664  00D320  0A                 	db	10
  1665  00D321  0D                 	db	13
  1666  00D322  20                 	db	32
  1667  00D323  20                 	db	32
  1668  00D324  20                 	db	32
  1669  00D325  2A                 	db	42
  1670  00D326  49                 	db	73	;'I'
  1671  00D327  44                 	db	68	;'D'
  1672  00D328  4E                 	db	78	;'N'
  1673  00D329  3F                 	db	63	;'?'
  1674  00D32A  3A                 	db	58	;':'
  1675  00D32B  20                 	db	32
  1676  00D32C  52                 	db	82	;'R'
  1677  00D32D  65                 	db	101	;'e'
  1678  00D32E  74                 	db	116	;'t'
  1679  00D32F  75                 	db	117	;'u'
  1680  00D330  72                 	db	114	;'r'
  1681  00D331  6E                 	db	110	;'n'
  1682  00D332  73                 	db	115	;'s'
  1683  00D333  20                 	db	32
  1684  00D334  64                 	db	100	;'d'
  1685  00D335  65                 	db	101	;'e'
  1686  00D336  76                 	db	118	;'v'
  1687  00D337  69                 	db	105	;'i'
  1688  00D338  63                 	db	99	;'c'
  1689  00D339  65                 	db	101	;'e'
  1690  00D33A  20                 	db	32
  1691  00D33B  69                 	db	105	;'i'
  1692  00D33C  64                 	db	100	;'d'
  1693  00D33D  65                 	db	101	;'e'
  1694  00D33E  6E                 	db	110	;'n'
  1695  00D33F  74                 	db	116	;'t'
  1696  00D340  69                 	db	105	;'i'
  1697  00D341  66                 	db	102	;'f'
  1698  00D342  69                 	db	105	;'i'
  1699  00D343  63                 	db	99	;'c'
  1700  00D344  61                 	db	97	;'a'
  1701  00D345  74                 	db	116	;'t'
  1702  00D346  69                 	db	105	;'i'
  1703  00D347  6F                 	db	111	;'o'
  1704  00D348  6E                 	db	110	;'n'
  1705  00D349  20                 	db	32
  1706  00D34A  73                 	db	115	;'s'
  1707  00D34B  74                 	db	116	;'t'
  1708  00D34C  72                 	db	114	;'r'
  1709  00D34D  69                 	db	105	;'i'
  1710  00D34E  6E                 	db	110	;'n'
  1711  00D34F  67                 	db	103	;'g'
  1712  00D350  0A                 	db	10
  1713  00D351  0D                 	db	13
  1714  00D352  20                 	db	32
  1715  00D353  20                 	db	32
  1716  00D354  20                 	db	32
  1717  00D355  44                 	db	68	;'D'
  1718  00D356  65                 	db	101	;'e'
  1719  00D357  76                 	db	118	;'v'
  1720  00D358  69                 	db	105	;'i'
  1721  00D359  63                 	db	99	;'c'
  1722  00D35A  65                 	db	101	;'e'
  1723  00D35B  20                 	db	32
  1724  00D35C  4F                 	db	79	;'O'
  1725  00D35D  6E                 	db	110	;'n'
  1726  00D35E  20                 	db	32
  1727  00D35F  54                 	db	84	;'T'
  1728  00D360  69                 	db	105	;'i'
  1729  00D361  6D                 	db	109	;'m'
  1730  00D362  65                 	db	101	;'e'
  1731  00D363  3F                 	db	63	;'?'
  1732  00D364  3A                 	db	58	;':'
  1733  00D365  20                 	db	32
  1734  00D366  52                 	db	82	;'R'
  1735  00D367  65                 	db	101	;'e'
  1736  00D368  74                 	db	116	;'t'
  1737  00D369  75                 	db	117	;'u'
  1738  00D36A  72                 	db	114	;'r'
  1739  00D36B  6E                 	db	110	;'n'
  1740  00D36C  73                 	db	115	;'s'
  1741  00D36D  20                 	db	32
  1742  00D36E  64                 	db	100	;'d'
  1743  00D36F  65                 	db	101	;'e'
  1744  00D370  76                 	db	118	;'v'
  1745  00D371  69                 	db	105	;'i'
  1746  00D372  63                 	db	99	;'c'
  1747  00D373  65                 	db	101	;'e'
  1748  00D374  20                 	db	32
  1749  00D375  6F                 	db	111	;'o'
  1750  00D376  6E                 	db	110	;'n'
  1751  00D377  20                 	db	32
  1752  00D378  74                 	db	116	;'t'
  1753  00D379  69                 	db	105	;'i'
  1754  00D37A  6D                 	db	109	;'m'
  1755  00D37B  65                 	db	101	;'e'
  1756  00D37C  20                 	db	32
  1757  00D37D  73                 	db	115	;'s'
  1758  00D37E  69                 	db	105	;'i'
  1759  00D37F  6E                 	db	110	;'n'
  1760  00D380  63                 	db	99	;'c'
  1761  00D381  65                 	db	101	;'e'
  1762  00D382  20                 	db	32
  1763  00D383  6C                 	db	108	;'l'
  1764  00D384  61                 	db	97	;'a'
  1765  00D385  73                 	db	115	;'s'
  1766  00D386  74                 	db	116	;'t'
  1767  00D387  20                 	db	32
  1768  00D388  64                 	db	100	;'d'
  1769  00D389  65                 	db	101	;'e'
  1770  00D38A  76                 	db	118	;'v'
  1771  00D38B  69                 	db	105	;'i'
  1772  00D38C  63                 	db	99	;'c'
  1773  00D38D  65                 	db	101	;'e'
  1774  00D38E  20                 	db	32
  1775  00D38F  72                 	db	114	;'r'
  1776  00D390  65                 	db	101	;'e'
  1777  00D391  73                 	db	115	;'s'
  1778  00D392  65                 	db	101	;'e'
  1779  00D393  74                 	db	116	;'t'
  1780  00D394  0A                 	db	10
  1781  00D395  0D                 	db	13
  1782  00D396  20                 	db	32
  1783  00D397  20                 	db	32
  1784  00D398  20                 	db	32
  1785  00D399  44                 	db	68	;'D'
  1786  00D39A  65                 	db	101	;'e'
  1787  00D39B  76                 	db	118	;'v'
  1788  00D39C  69                 	db	105	;'i'
  1789  00D39D  63                 	db	99	;'c'
  1790  00D39E  65                 	db	101	;'e'
  1791  00D39F  20                 	db	32
  1792  00D3A0  49                 	db	73	;'I'
  1793  00D3A1  44                 	db	68	;'D'
  1794  00D3A2  3F                 	db	63	;'?'
  1795  00D3A3  3A                 	db	58	;':'
  1796  00D3A4  20                 	db	32
  1797  00D3A5  52                 	db	82	;'R'
  1798  00D3A6  65                 	db	101	;'e'
  1799  00D3A7  74                 	db	116	;'t'
  1800  00D3A8  75                 	db	117	;'u'
  1801  00D3A9  72                 	db	114	;'r'
  1802  00D3AA  6E                 	db	110	;'n'
  1803  00D3AB  73                 	db	115	;'s'
  1804  00D3AC  20                 	db	32
  1805  00D3AD  64                 	db	100	;'d'
  1806  00D3AE  65                 	db	101	;'e'
  1807  00D3AF  76                 	db	118	;'v'
  1808  00D3B0  69                 	db	105	;'i'
  1809  00D3B1  63                 	db	99	;'c'
  1810  00D3B2  65                 	db	101	;'e'
  1811  00D3B3  20                 	db	32
  1812  00D3B4  49                 	db	73	;'I'
  1813  00D3B5  44                 	db	68	;'D'
  1814  00D3B6  20                 	db	32
  1815  00D3B7  61                 	db	97	;'a'
  1816  00D3B8  73                 	db	115	;'s'
  1817  00D3B9  20                 	db	32
  1818  00D3BA  70                 	db	112	;'p'
  1819  00D3BB  72                 	db	114	;'r'
  1820  00D3BC  65                 	db	101	;'e'
  1821  00D3BD  2D                 	db	45
  1822  00D3BE  70                 	db	112	;'p'
  1823  00D3BF  72                 	db	114	;'r'
  1824  00D3C0  6F                 	db	111	;'o'
  1825  00D3C1  67                 	db	103	;'g'
  1826  00D3C2  72                 	db	114	;'r'
  1827  00D3C3  61                 	db	97	;'a'
  1828  00D3C4  6D                 	db	109	;'m'
  1829  00D3C5  6D                 	db	109	;'m'
  1830  00D3C6  65                 	db	101	;'e'
  1831  00D3C7  64                 	db	100	;'d'
  1832  00D3C8  20                 	db	32
  1833  00D3C9  69                 	db	105	;'i'
  1834  00D3CA  6E                 	db	110	;'n'
  1835  00D3CB  20                 	db	32
  1836  00D3CC  66                 	db	102	;'f'
  1837  00D3CD  6C                 	db	108	;'l'
  1838  00D3CE  61                 	db	97	;'a'
  1839  00D3CF  73                 	db	115	;'s'
  1840  00D3D0  68                 	db	104	;'h'
  1841  00D3D1  20                 	db	32
  1842  00D3D2  6D                 	db	109	;'m'
  1843  00D3D3  65                 	db	101	;'e'
  1844  00D3D4  6D                 	db	109	;'m'
  1845  00D3D5  6F                 	db	111	;'o'
  1846  00D3D6  72                 	db	114	;'r'
  1847  00D3D7  79                 	db	121	;'y'
  1848  00D3D8  0A                 	db	10
  1849  00D3D9  0D                 	db	13
  1850  00D3DA  20                 	db	32
  1851  00D3DB  20                 	db	32
  1852  00D3DC  20                 	db	32
  1853  00D3DD  52                 	db	82	;'R'
  1854  00D3DE  65                 	db	101	;'e'
  1855  00D3DF  76                 	db	118	;'v'
  1856  00D3E0  69                 	db	105	;'i'
  1857  00D3E1  73                 	db	115	;'s'
  1858  00D3E2  69                 	db	105	;'i'
  1859  00D3E3  6F                 	db	111	;'o'
  1860  00D3E4  6E                 	db	110	;'n'
  1861  00D3E5  20                 	db	32
  1862  00D3E6  49                 	db	73	;'I'
  1863  00D3E7  44                 	db	68	;'D'
  1864  00D3E8  3F                 	db	63	;'?'
  1865  00D3E9  3A                 	db	58	;':'
  1866  00D3EA  20                 	db	32
  1867  00D3EB  52                 	db	82	;'R'
  1868  00D3EC  65                 	db	101	;'e'
  1869  00D3ED  74                 	db	116	;'t'
  1870  00D3EE  75                 	db	117	;'u'
  1871  00D3EF  72                 	db	114	;'r'
  1872  00D3F0  6E                 	db	110	;'n'
  1873  00D3F1  73                 	db	115	;'s'
  1874  00D3F2  20                 	db	32
  1875  00D3F3  64                 	db	100	;'d'
  1876  00D3F4  65                 	db	101	;'e'
  1877  00D3F5  76                 	db	118	;'v'
  1878  00D3F6  69                 	db	105	;'i'
  1879  00D3F7  63                 	db	99	;'c'
  1880  00D3F8  65                 	db	101	;'e'
  1881  00D3F9  20                 	db	32
  1882  00D3FA  73                 	db	115	;'s'
  1883  00D3FB  69                 	db	105	;'i'
  1884  00D3FC  6C                 	db	108	;'l'
  1885  00D3FD  69                 	db	105	;'i'
  1886  00D3FE  63                 	db	99	;'c'
  1887  00D3FF  6F                 	db	111	;'o'
  1888  00D400  6E                 	db	110	;'n'
  1889  00D401  20                 	db	32
  1890  00D402  72                 	db	114	;'r'
  1891  00D403  65                 	db	101	;'e'
  1892  00D404  76                 	db	118	;'v'
  1893  00D405  69                 	db	105	;'i'
  1894  00D406  73                 	db	115	;'s'
  1895  00D407  69                 	db	105	;'i'
  1896  00D408  6F                 	db	111	;'o'
  1897  00D409  6E                 	db	110	;'n'
  1898  00D40A  20                 	db	32
  1899  00D40B  49                 	db	73	;'I'
  1900  00D40C  44                 	db	68	;'D'
  1901  00D40D  20                 	db	32
  1902  00D40E  61                 	db	97	;'a'
  1903  00D40F  73                 	db	115	;'s'
  1904  00D410  20                 	db	32
  1905  00D411  70                 	db	112	;'p'
  1906  00D412  72                 	db	114	;'r'
  1907  00D413  65                 	db	101	;'e'
  1908  00D414  2D                 	db	45
  1909  00D415  70                 	db	112	;'p'
  1910  00D416  72                 	db	114	;'r'
  1911  00D417  6F                 	db	111	;'o'
  1912  00D418  67                 	db	103	;'g'
  1913  00D419  72                 	db	114	;'r'
  1914  00D41A  61                 	db	97	;'a'
  1915  00D41B  6D                 	db	109	;'m'
  1916  00D41C  6D                 	db	109	;'m'
  1917  00D41D  65                 	db	101	;'e'
  1918  00D41E  64                 	db	100	;'d'
  1919  00D41F  20                 	db	32
  1920  00D420  69                 	db	105	;'i'
  1921  00D421  6E                 	db	110	;'n'
  1922  00D422  20                 	db	32
  1923  00D423  66                 	db	102	;'f'
  1924  00D424  6C                 	db	108	;'l'
  1925  00D425  61                 	db	97	;'a'
  1926  00D426  73                 	db	115	;'s'
  1927  00D427  68                 	db	104	;'h'
  1928  00D428  20                 	db	32
  1929  00D429  6D                 	db	109	;'m'
  1930  00D42A  65                 	db	101	;'e'
  1931  00D42B  6D                 	db	109	;'m'
  1932  00D42C  6F                 	db	111	;'o'
  1933  00D42D  72                 	db	114	;'r'
  1934  00D42E  79                 	db	121	;'y'
  1935  00D42F  0A                 	db	10
  1936  00D430  0D                 	db	13
  1937  00D431  20                 	db	32
  1938  00D432  20                 	db	32
  1939  00D433  20                 	db	32
  1940  00D434  55                 	db	85	;'U'
  1941  00D435  73                 	db	115	;'s'
  1942  00D436  65                 	db	101	;'e'
  1943  00D437  72                 	db	114	;'r'
  1944  00D438  20                 	db	32
  1945  00D439  49                 	db	73	;'I'
  1946  00D43A  44                 	db	68	;'D'
  1947  00D43B  73                 	db	115	;'s'
  1948  00D43C  3F                 	db	63	;'?'
  1949  00D43D  3A                 	db	58	;':'
  1950  00D43E  20                 	db	32
  1951  00D43F  52                 	db	82	;'R'
  1952  00D440  65                 	db	101	;'e'
  1953  00D441  74                 	db	116	;'t'
  1954  00D442  75                 	db	117	;'u'
  1955  00D443  72                 	db	114	;'r'
  1956  00D444  6E                 	db	110	;'n'
  1957  00D445  73                 	db	115	;'s'
  1958  00D446  20                 	db	32
  1959  00D447  61                 	db	97	;'a'
  1960  00D448  20                 	db	32
  1961  00D449  6C                 	db	108	;'l'
  1962  00D44A  69                 	db	105	;'i'
  1963  00D44B  73                 	db	115	;'s'
  1964  00D44C  74                 	db	116	;'t'
  1965  00D44D  20                 	db	32
  1966  00D44E  6F                 	db	111	;'o'
  1967  00D44F  66                 	db	102	;'f'
  1968  00D450  20                 	db	32
  1969  00D451  75                 	db	117	;'u'
  1970  00D452  73                 	db	115	;'s'
  1971  00D453  65                 	db	101	;'e'
  1972  00D454  72                 	db	114	;'r'
  1973  00D455  20                 	db	32
  1974  00D456  49                 	db	73	;'I'
  1975  00D457  44                 	db	68	;'D'
  1976  00D458  73                 	db	115	;'s'
  1977  00D459  20                 	db	32
  1978  00D45A  28                 	db	40
  1979  00D45B  64                 	db	100	;'d'
  1980  00D45C  69                 	db	105	;'i'
  1981  00D45D  73                 	db	115	;'s'
  1982  00D45E  70                 	db	112	;'p'
  1983  00D45F  6C                 	db	108	;'l'
  1984  00D460  61                 	db	97	;'a'
  1985  00D461  79                 	db	121	;'y'
  1986  00D462  65                 	db	101	;'e'
  1987  00D463  64                 	db	100	;'d'
  1988  00D464  20                 	db	32
  1989  00D465  69                 	db	105	;'i'
  1990  00D466  6E                 	db	110	;'n'
  1991  00D467  20                 	db	32
  1992  00D468  68                 	db	104	;'h'
  1993  00D469  65                 	db	101	;'e'
  1994  00D46A  78                 	db	120	;'x'
  1995  00D46B  29                 	db	41
  1996  00D46C  20                 	db	32
  1997  00D46D  61                 	db	97	;'a'
  1998  00D46E  73                 	db	115	;'s'
  1999  00D46F  20                 	db	32
  2000  00D470  73                 	db	115	;'s'
  2001  00D471  74                 	db	116	;'t'
  2002  00D472  6F                 	db	111	;'o'
  2003  00D473  72                 	db	114	;'r'
  2004  00D474  65                 	db	101	;'e'
  2005  00D475  64                 	db	100	;'d'
  2006  00D476  20                 	db	32
  2007  00D477  69                 	db	105	;'i'
  2008  00D478  6E                 	db	110	;'n'
  2009  00D479  20                 	db	32
  2010  00D47A  66                 	db	102	;'f'
  2011  00D47B  6C                 	db	108	;'l'
  2012  00D47C  61                 	db	97	;'a'
  2013  00D47D  73                 	db	115	;'s'
  2014  00D47E  68                 	db	104	;'h'
  2015  00D47F  20                 	db	32
  2016  00D480  6D                 	db	109	;'m'
  2017  00D481  65                 	db	101	;'e'
  2018  00D482  6D                 	db	109	;'m'
  2019  00D483  6F                 	db	111	;'o'
  2020  00D484  72                 	db	114	;'r'
  2021  00D485  79                 	db	121	;'y'
  2022  00D486  0A                 	db	10
  2023  00D487  0D                 	db	13
  2024  00D488  20                 	db	32
  2025  00D489  20                 	db	32
  2026  00D48A  20                 	db	32
  2027  00D48B  41                 	db	65	;'A'
  2028  00D48C  44                 	db	68	;'D'
  2029  00D48D  43                 	db	67	;'C'
  2030  00D48E  20                 	db	32
  2031  00D48F  45                 	db	69	;'E'
  2032  00D490  72                 	db	114	;'r'
  2033  00D491  72                 	db	114	;'r'
  2034  00D492  6F                 	db	111	;'o'
  2035  00D493  72                 	db	114	;'r'
  2036  00D494  73                 	db	115	;'s'
  2037  00D495  3F                 	db	63	;'?'
  2038  00D496  3A                 	db	58	;':'
  2039  00D497  20                 	db	32
  2040  00D498  52                 	db	82	;'R'
  2041  00D499  65                 	db	101	;'e'
  2042  00D49A  74                 	db	116	;'t'
  2043  00D49B  75                 	db	117	;'u'
  2044  00D49C  72                 	db	114	;'r'
  2045  00D49D  6E                 	db	110	;'n'
  2046  00D49E  73                 	db	115	;'s'
  2047  00D49F  20                 	db	32
  2048  00D4A0  74                 	db	116	;'t'
  2049  00D4A1  68                 	db	104	;'h'
  2050  00D4A2  65                 	db	101	;'e'
  2051  00D4A3  20                 	db	32
  2052  00D4A4  63                 	db	99	;'c'
  2053  00D4A5  61                 	db	97	;'a'
  2054  00D4A6  75                 	db	117	;'u'
  2055  00D4A7  73                 	db	115	;'s'
  2056  00D4A8  65                 	db	101	;'e'
  2057  00D4A9  20                 	db	32
  2058  00D4AA  6F                 	db	111	;'o'
  2059  00D4AB  66                 	db	102	;'f'
  2060  00D4AC  20                 	db	32
  2061  00D4AD  61                 	db	97	;'a'
  2062  00D4AE  6E                 	db	110	;'n'
  2063  00D4AF  20                 	db	32
  2064  00D4B0  41                 	db	65	;'A'
  2065  00D4B1  44                 	db	68	;'D'
  2066  00D4B2  43                 	db	67	;'C'
  2067  00D4B3  20                 	db	32
  2068  00D4B4  65                 	db	101	;'e'
  2069  00D4B5  72                 	db	114	;'r'
  2070  00D4B6  72                 	db	114	;'r'
  2071  00D4B7  6F                 	db	111	;'o'
  2072  00D4B8  72                 	db	114	;'r'
  2073  00D4B9  20                 	db	32
  2074  00D4BA  69                 	db	105	;'i'
  2075  00D4BB  66                 	db	102	;'f'
  2076  00D4BC  20                 	db	32
  2077  00D4BD  61                 	db	97	;'a'
  2078  00D4BE  6E                 	db	110	;'n'
  2079  00D4BF  20                 	db	32
  2080  00D4C0  65                 	db	101	;'e'
  2081  00D4C1  72                 	db	114	;'r'
  2082  00D4C2  72                 	db	114	;'r'
  2083  00D4C3  6F                 	db	111	;'o'
  2084  00D4C4  72                 	db	114	;'r'
  2085  00D4C5  20                 	db	32
  2086  00D4C6  6F                 	db	111	;'o'
  2087  00D4C7  63                 	db	99	;'c'
  2088  00D4C8  63                 	db	99	;'c'
  2089  00D4C9  75                 	db	117	;'u'
  2090  00D4CA  72                 	db	114	;'r'
  2091  00D4CB  72                 	db	114	;'r'
  2092  00D4CC  65                 	db	101	;'e'
  2093  00D4CD  64                 	db	100	;'d'
  2094  00D4CE  0A                 	db	10
  2095  00D4CF  0D                 	db	13
  2096  00D4D0  20                 	db	32
  2097  00D4D1  20                 	db	32
  2098  00D4D2  20                 	db	32
  2099  00D4D3  43                 	db	67	;'C'
  2100  00D4D4  6C                 	db	108	;'l'
  2101  00D4D5  65                 	db	101	;'e'
  2102  00D4D6  61                 	db	97	;'a'
  2103  00D4D7  72                 	db	114	;'r'
  2104  00D4D8  20                 	db	32
  2105  00D4D9  41                 	db	65	;'A'
  2106  00D4DA  44                 	db	68	;'D'
  2107  00D4DB  43                 	db	67	;'C'
  2108  00D4DC  20                 	db	32
  2109  00D4DD  45                 	db	69	;'E'
  2110  00D4DE  72                 	db	114	;'r'
  2111  00D4DF  72                 	db	114	;'r'
  2112  00D4E0  6F                 	db	111	;'o'
  2113  00D4E1  72                 	db	114	;'r'
  2114  00D4E2  73                 	db	115	;'s'
  2115  00D4E3  3A                 	db	58	;':'
  2116  00D4E4  20                 	db	32
  2117  00D4E5  43                 	db	67	;'C'
  2118  00D4E6  6C                 	db	108	;'l'
  2119  00D4E7  65                 	db	101	;'e'
  2120  00D4E8  61                 	db	97	;'a'
  2121  00D4E9  72                 	db	114	;'r'
  2122  00D4EA  73                 	db	115	;'s'
  2123  00D4EB  20                 	db	32
  2124  00D4EC  74                 	db	116	;'t'
  2125  00D4ED  68                 	db	104	;'h'
  2126  00D4EE  65                 	db	101	;'e'
  2127  00D4EF  20                 	db	32
  2128  00D4F0  41                 	db	65	;'A'
  2129  00D4F1  44                 	db	68	;'D'
  2130  00D4F2  43                 	db	67	;'C'
  2131  00D4F3  20                 	db	32
  2132  00D4F4  65                 	db	101	;'e'
  2133  00D4F5  72                 	db	114	;'r'
  2134  00D4F6  72                 	db	114	;'r'
  2135  00D4F7  6F                 	db	111	;'o'
  2136  00D4F8  72                 	db	114	;'r'
  2137  00D4F9  20                 	db	32
  2138  00D4FA  61                 	db	97	;'a'
  2139  00D4FB  6E                 	db	110	;'n'
  2140  00D4FC  64                 	db	100	;'d'
  2141  00D4FD  20                 	db	32
  2142  00D4FE  72                 	db	114	;'r'
  2143  00D4FF  65                 	db	101	;'e'
  2144  00D500  73                 	db	115	;'s'
  2145  00D501  75                 	db	117	;'u'
  2146  00D502  6D                 	db	109	;'m'
  2147  00D503  65                 	db	101	;'e'
  2148  00D504  73                 	db	115	;'s'
  2149  00D505  20                 	db	32
  2150  00D506  41                 	db	65	;'A'
  2151  00D507  44                 	db	68	;'D'
  2152  00D508  43                 	db	67	;'C'
  2153  00D509  20                 	db	32
  2154  00D50A  63                 	db	99	;'c'
  2155  00D50B  6F                 	db	111	;'o'
  2156  00D50C  6E                 	db	110	;'n'
  2157  00D50D  76                 	db	118	;'v'
  2158  00D50E  65                 	db	101	;'e'
  2159  00D50F  72                 	db	114	;'r'
  2160  00D510  73                 	db	115	;'s'
  2161  00D511  69                 	db	105	;'i'
  2162  00D512  6F                 	db	111	;'o'
  2163  00D513  6E                 	db	110	;'n'
  2164  00D514  73                 	db	115	;'s'
  2165  00D515  0A                 	db	10
  2166  00D516  0D                 	db	13
  2167  00D517  20                 	db	32
  2168  00D518  20                 	db	32
  2169  00D519  20                 	db	32
  2170  00D51A  43                 	db	67	;'C'
  2171  00D51B  6F                 	db	111	;'o'
  2172  00D51C  6D                 	db	109	;'m'
  2173  00D51D  6D                 	db	109	;'m'
  2174  00D51E  20                 	db	32
  2175  00D51F  45                 	db	69	;'E'
  2176  00D520  72                 	db	114	;'r'
  2177  00D521  72                 	db	114	;'r'
  2178  00D522  6F                 	db	111	;'o'
  2179  00D523  72                 	db	114	;'r'
  2180  00D524  73                 	db	115	;'s'
  2181  00D525  3F                 	db	63	;'?'
  2182  00D526  3A                 	db	58	;':'
  2183  00D527  20                 	db	32
  2184  00D528  52                 	db	82	;'R'
  2185  00D529  65                 	db	101	;'e'
  2186  00D52A  74                 	db	116	;'t'
  2187  00D52B  75                 	db	117	;'u'
  2188  00D52C  72                 	db	114	;'r'
  2189  00D52D  6E                 	db	110	;'n'
  2190  00D52E  73                 	db	115	;'s'
  2191  00D52F  20                 	db	32
  2192  00D530  69                 	db	105	;'i'
  2193  00D531  66                 	db	102	;'f'
  2194  00D532  20                 	db	32
  2195  00D533  61                 	db	97	;'a'
  2196  00D534  20                 	db	32
  2197  00D535  63                 	db	99	;'c'
  2198  00D536  6F                 	db	111	;'o'
  2199  00D537  6D                 	db	109	;'m'
  2200  00D538  6D                 	db	109	;'m'
  2201  00D539  75                 	db	117	;'u'
  2202  00D53A  6E                 	db	110	;'n'
  2203  00D53B  69                 	db	105	;'i'
  2204  00D53C  63                 	db	99	;'c'
  2205  00D53D  61                 	db	97	;'a'
  2206  00D53E  74                 	db	116	;'t'
  2207  00D53F  69                 	db	105	;'i'
  2208  00D540  6F                 	db	111	;'o'
  2209  00D541  6E                 	db	110	;'n'
  2210  00D542  73                 	db	115	;'s'
  2211  00D543  20                 	db	32
  2212  00D544  65                 	db	101	;'e'
  2213  00D545  72                 	db	114	;'r'
  2214  00D546  72                 	db	114	;'r'
  2215  00D547  6F                 	db	111	;'o'
  2216  00D548  72                 	db	114	;'r'
  2217  00D549  20                 	db	32
  2218  00D54A  68                 	db	104	;'h'
  2219  00D54B  61                 	db	97	;'a'
  2220  00D54C  73                 	db	115	;'s'
  2221  00D54D  20                 	db	32
  2222  00D54E  6F                 	db	111	;'o'
  2223  00D54F  63                 	db	99	;'c'
  2224  00D550  63                 	db	99	;'c'
  2225  00D551  75                 	db	117	;'u'
  2226  00D552  72                 	db	114	;'r'
  2227  00D553  72                 	db	114	;'r'
  2228  00D554  65                 	db	101	;'e'
  2229  00D555  64                 	db	100	;'d'
  2230  00D556  0A                 	db	10
  2231  00D557  0D                 	db	13
  2232  00D558  20                 	db	32
  2233  00D559  20                 	db	32
  2234  00D55A  20                 	db	32
  2235  00D55B  43                 	db	67	;'C'
  2236  00D55C  6C                 	db	108	;'l'
  2237  00D55D  65                 	db	101	;'e'
  2238  00D55E  61                 	db	97	;'a'
  2239  00D55F  72                 	db	114	;'r'
  2240  00D560  20                 	db	32
  2241  00D561  43                 	db	67	;'C'
  2242  00D562  6F                 	db	111	;'o'
  2243  00D563  6D                 	db	109	;'m'
  2244  00D564  6D                 	db	109	;'m'
  2245  00D565  20                 	db	32
  2246  00D566  45                 	db	69	;'E'
  2247  00D567  72                 	db	114	;'r'
  2248  00D568  72                 	db	114	;'r'
  2249  00D569  6F                 	db	111	;'o'
  2250  00D56A  72                 	db	114	;'r'
  2251  00D56B  73                 	db	115	;'s'
  2252  00D56C  3A                 	db	58	;':'
  2253  00D56D  20                 	db	32
  2254  00D56E  43                 	db	67	;'C'
  2255  00D56F  6C                 	db	108	;'l'
  2256  00D570  65                 	db	101	;'e'
  2257  00D571  61                 	db	97	;'a'
  2258  00D572  72                 	db	114	;'r'
  2259  00D573  73                 	db	115	;'s'
  2260  00D574  20                 	db	32
  2261  00D575  74                 	db	116	;'t'
  2262  00D576  68                 	db	104	;'h'
  2263  00D577  65                 	db	101	;'e'
  2264  00D578  20                 	db	32
  2265  00D579  63                 	db	99	;'c'
  2266  00D57A  6F                 	db	111	;'o'
  2267  00D57B  6D                 	db	109	;'m'
  2268  00D57C  6D                 	db	109	;'m'
  2269  00D57D  75                 	db	117	;'u'
  2270  00D57E  6E                 	db	110	;'n'
  2271  00D57F  69                 	db	105	;'i'
  2272  00D580  63                 	db	99	;'c'
  2273  00D581  61                 	db	97	;'a'
  2274  00D582  74                 	db	116	;'t'
  2275  00D583  69                 	db	105	;'i'
  2276  00D584  6F                 	db	111	;'o'
  2277  00D585  6E                 	db	110	;'n'
  2278  00D586  73                 	db	115	;'s'
  2279  00D587  20                 	db	32
  2280  00D588  65                 	db	101	;'e'
  2281  00D589  72                 	db	114	;'r'
  2282  00D58A  72                 	db	114	;'r'
  2283  00D58B  6F                 	db	111	;'o'
  2284  00D58C  72                 	db	114	;'r'
  2285  00D58D  0A                 	db	10
  2286  00D58E  0D                 	db	13
  2287  00D58F  20                 	db	32
  2288  00D590  20                 	db	32
  2289  00D591  20                 	db	32
  2290  00D592  43                 	db	67	;'C'
  2291  00D593  6C                 	db	108	;'l'
  2292  00D594  65                 	db	101	;'e'
  2293  00D595  61                 	db	97	;'a'
  2294  00D596  72                 	db	114	;'r'
  2295  00D597  20                 	db	32
  2296  00D598  4D                 	db	77	;'M'
  2297  00D599  61                 	db	97	;'a'
  2298  00D59A  78                 	db	120	;'x'
  2299  00D59B  20                 	db	32
  2300  00D59C  56                 	db	86	;'V'
  2301  00D59D  61                 	db	97	;'a'
  2302  00D59E  6C                 	db	108	;'l'
  2303  00D59F  75                 	db	117	;'u'
  2304  00D5A0  65                 	db	101	;'e'
  2305  00D5A1  73                 	db	115	;'s'
  2306  00D5A2  3A                 	db	58	;':'
  2307  00D5A3  20                 	db	32
  2308  00D5A4  45                 	db	69	;'E'
  2309  00D5A5  72                 	db	114	;'r'
  2310  00D5A6  61                 	db	97	;'a'
  2311  00D5A7  73                 	db	115	;'s'
  2312  00D5A8  65                 	db	101	;'e'
  2313  00D5A9  73                 	db	115	;'s'
  2314  00D5AA  20                 	db	32
  2315  00D5AB  6D                 	db	109	;'m'
  2316  00D5AC  61                 	db	97	;'a'
  2317  00D5AD  78                 	db	120	;'x'
  2318  00D5AE  69                 	db	105	;'i'
  2319  00D5AF  6D                 	db	109	;'m'
  2320  00D5B0  75                 	db	117	;'u'
  2321  00D5B1  6D                 	db	109	;'m'
  2322  00D5B2  20                 	db	32
  2323  00D5B3  72                 	db	114	;'r'
  2324  00D5B4  65                 	db	101	;'e'
  2325  00D5B5  63                 	db	99	;'c'
  2326  00D5B6  6F                 	db	111	;'o'
  2327  00D5B7  72                 	db	114	;'r'
  2328  00D5B8  64                 	db	100	;'d'
  2329  00D5B9  65                 	db	101	;'e'
  2330  00D5BA  64                 	db	100	;'d'
  2331  00D5BB  20                 	db	32
  2332  00D5BC  76                 	db	118	;'v'
  2333  00D5BD  61                 	db	97	;'a'
  2334  00D5BE  6C                 	db	108	;'l'
  2335  00D5BF  75                 	db	117	;'u'
  2336  00D5C0  65                 	db	101	;'e'
  2337  00D5C1  73                 	db	115	;'s'
  2338  00D5C2  20                 	db	32
  2339  00D5C3  66                 	db	102	;'f'
  2340  00D5C4  72                 	db	114	;'r'
  2341  00D5C5  6F                 	db	111	;'o'
  2342  00D5C6  6D                 	db	109	;'m'
  2343  00D5C7  20                 	db	32
  2344  00D5C8  45                 	db	69	;'E'
  2345  00D5C9  45                 	db	69	;'E'
  2346  00D5CA  50                 	db	80	;'P'
  2347  00D5CB  52                 	db	82	;'R'
  2348  00D5CC  4F                 	db	79	;'O'
  2349  00D5CD  4D                 	db	77	;'M'
  2350  00D5CE  0A                 	db	10
  2351  00D5CF  0D                 	db	13
  2352  00D5D0  20                 	db	32
  2353  00D5D1  20                 	db	32
  2354  00D5D2  20                 	db	32
  2355  00D5D3  48                 	db	72	;'H'
  2356  00D5D4  65                 	db	101	;'e'
  2357  00D5D5  6C                 	db	108	;'l'
  2358  00D5D6  70                 	db	112	;'p'
  2359  00D5D7  3A                 	db	58	;':'
  2360  00D5D8  20                 	db	32
  2361  00D5D9  54                 	db	84	;'T'
  2362  00D5DA  68                 	db	104	;'h'
  2363  00D5DB  69                 	db	105	;'i'
  2364  00D5DC  73                 	db	115	;'s'
  2365  00D5DD  20                 	db	32
  2366  00D5DE  6D                 	db	109	;'m'
  2367  00D5DF  65                 	db	101	;'e'
  2368  00D5E0  73                 	db	115	;'s'
  2369  00D5E1  73                 	db	115	;'s'
  2370  00D5E2  61                 	db	97	;'a'
  2371  00D5E3  67                 	db	103	;'g'
  2372  00D5E4  65                 	db	101	;'e'
  2373  00D5E5  2C                 	db	44
  2374  00D5E6  20                 	db	32
  2375  00D5E7  6C                 	db	108	;'l'
  2376  00D5E8  69                 	db	105	;'i'
  2377  00D5E9  73                 	db	115	;'s'
  2378  00D5EA  74                 	db	116	;'t'
  2379  00D5EB  73                 	db	115	;'s'
  2380  00D5EC  20                 	db	32
  2381  00D5ED  73                 	db	115	;'s'
  2382  00D5EE  75                 	db	117	;'u'
  2383  00D5EF  70                 	db	112	;'p'
  2384  00D5F0  70                 	db	112	;'p'
  2385  00D5F1  6F                 	db	111	;'o'
  2386  00D5F2  72                 	db	114	;'r'
  2387  00D5F3  74                 	db	116	;'t'
  2388  00D5F4  65                 	db	101	;'e'
  2389  00D5F5  64                 	db	100	;'d'
  2390  00D5F6  20                 	db	32
  2391  00D5F7  63                 	db	99	;'c'
  2392  00D5F8  6F                 	db	111	;'o'
  2393  00D5F9  6D                 	db	109	;'m'
  2394  00D5FA  6D                 	db	109	;'m'
  2395  00D5FB  61                 	db	97	;'a'
  2396  00D5FC  6E                 	db	110	;'n'
  2397  00D5FD  64                 	db	100	;'d'
  2398  00D5FE  73                 	db	115	;'s'
  2399  00D5FF  0A                 	db	10
  2400  00D600  0D                 	db	13
  2401  00D601  0A                 	db	10
  2402  00D602  0D                 	db	13
  2403  00D603  44                 	db	68	;'D'
  2404  00D604  65                 	db	101	;'e'
  2405  00D605  76                 	db	118	;'v'
  2406  00D606  69                 	db	105	;'i'
  2407  00D607  63                 	db	99	;'c'
  2408  00D608  65                 	db	101	;'e'
  2409  00D609  20                 	db	32
  2410  00D60A  4D                 	db	77	;'M'
  2411  00D60B  65                 	db	101	;'e'
  2412  00D60C  61                 	db	97	;'a'
  2413  00D60D  73                 	db	115	;'s'
  2414  00D60E  75                 	db	117	;'u'
  2415  00D60F  72                 	db	114	;'r'
  2416  00D610  65                 	db	101	;'e'
  2417  00D611  6D                 	db	109	;'m'
  2418  00D612  65                 	db	101	;'e'
  2419  00D613  6E                 	db	110	;'n'
  2420  00D614  74                 	db	116	;'t'
  2421  00D615  20                 	db	32
  2422  00D616  43                 	db	67	;'C'
  2423  00D617  6F                 	db	111	;'o'
  2424  00D618  6D                 	db	109	;'m'
  2425  00D619  6D                 	db	109	;'m'
  2426  00D61A  61                 	db	97	;'a'
  2427  00D61B  6E                 	db	110	;'n'
  2428  00D61C  64                 	db	100	;'d'
  2429  00D61D  73                 	db	115	;'s'
  2430  00D61E  3A                 	db	58	;':'
  2431  00D61F  20                 	db	32
  2432  00D620  56                 	db	86	;'V'
  2433  00D621  69                 	db	105	;'i'
  2434  00D622  65                 	db	101	;'e'
  2435  00D623  77                 	db	119	;'w'
  2436  00D624  20                 	db	32
  2437  00D625  6C                 	db	108	;'l'
  2438  00D626  6F                 	db	111	;'o'
  2439  00D627  77                 	db	119	;'w'
  2440  00D628  20                 	db	32
  2441  00D629  6C                 	db	108	;'l'
  2442  00D62A  65                 	db	101	;'e'
  2443  00D62B  76                 	db	118	;'v'
  2444  00D62C  65                 	db	101	;'e'
  2445  00D62D  6C                 	db	108	;'l'
  2446  00D62E  20                 	db	32
  2447  00D62F  73                 	db	115	;'s'
  2448  00D630  79                 	db	121	;'y'
  2449  00D631  73                 	db	115	;'s'
  2450  00D632  74                 	db	116	;'t'
  2451  00D633  65                 	db	101	;'e'
  2452  00D634  6D                 	db	109	;'m'
  2453  00D635  20                 	db	32
  2454  00D636  6D                 	db	109	;'m'
  2455  00D637  65                 	db	101	;'e'
  2456  00D638  61                 	db	97	;'a'
  2457  00D639  73                 	db	115	;'s'
  2458  00D63A  75                 	db	117	;'u'
  2459  00D63B  72                 	db	114	;'r'
  2460  00D63C  65                 	db	101	;'e'
  2461  00D63D  6D                 	db	109	;'m'
  2462  00D63E  65                 	db	101	;'e'
  2463  00D63F  6E                 	db	110	;'n'
  2464  00D640  74                 	db	116	;'t'
  2465  00D641  73                 	db	115	;'s'
  2466  00D642  0A                 	db	10
  2467  00D643  0D                 	db	13
  2468  00D644  20                 	db	32
  2469  00D645  20                 	db	32
  2470  00D646  20                 	db	32
  2471  00D647  4D                 	db	77	;'M'
  2472  00D648  65                 	db	101	;'e'
  2473  00D649  61                 	db	97	;'a'
  2474  00D64A  73                 	db	115	;'s'
  2475  00D64B  75                 	db	117	;'u'
  2476  00D64C  72                 	db	114	;'r'
  2477  00D64D  65                 	db	101	;'e'
  2478  00D64E  20                 	db	32
  2479  00D64F  50                 	db	80	;'P'
  2480  00D650  4F                 	db	79	;'O'
  2481  00D651  53                 	db	83	;'S'
  2482  00D652  33                 	db	51	;'3'
  2483  00D653  50                 	db	80	;'P'
  2484  00D654  33                 	db	51	;'3'
  2485  00D655  3F                 	db	63	;'?'
  2486  00D656  3A                 	db	58	;':'
  2487  00D657  20                 	db	32
  2488  00D658  52                 	db	82	;'R'
  2489  00D659  65                 	db	101	;'e'
  2490  00D65A  74                 	db	116	;'t'
  2491  00D65B  75                 	db	117	;'u'
  2492  00D65C  72                 	db	114	;'r'
  2493  00D65D  6E                 	db	110	;'n'
  2494  00D65E  73                 	db	115	;'s'
  2495  00D65F  20                 	db	32
  2496  00D660  2B                 	db	43
  2497  00D661  33                 	db	51	;'3'
  2498  00D662  2E                 	db	46
  2499  00D663  33                 	db	51	;'3'
  2500  00D664  56                 	db	86	;'V'
  2501  00D665  20                 	db	32
  2502  00D666  41                 	db	65	;'A'
  2503  00D667  44                 	db	68	;'D'
  2504  00D668  43                 	db	67	;'C'
  2505  00D669  20                 	db	32
  2506  00D66A  43                 	db	67	;'C'
  2507  00D66B  6F                 	db	111	;'o'
  2508  00D66C  6E                 	db	110	;'n'
  2509  00D66D  76                 	db	118	;'v'
  2510  00D66E  65                 	db	101	;'e'
  2511  00D66F  72                 	db	114	;'r'
  2512  00D670  73                 	db	115	;'s'
  2513  00D671  69                 	db	105	;'i'
  2514  00D672  6F                 	db	111	;'o'
  2515  00D673  6E                 	db	110	;'n'
  2516  00D674  20                 	db	32
  2517  00D675  69                 	db	105	;'i'
  2518  00D676  6E                 	db	110	;'n'
  2519  00D677  20                 	db	32
  2520  00D678  76                 	db	118	;'v'
  2521  00D679  6F                 	db	111	;'o'
  2522  00D67A  6C                 	db	108	;'l'
  2523  00D67B  74                 	db	116	;'t'
  2524  00D67C  73                 	db	115	;'s'
  2525  00D67D  0A                 	db	10
  2526  00D67E  0D                 	db	13
  2527  00D67F  20                 	db	32
  2528  00D680  20                 	db	32
  2529  00D681  20                 	db	32
  2530  00D682  4D                 	db	77	;'M'
  2531  00D683  65                 	db	101	;'e'
  2532  00D684  61                 	db	97	;'a'
  2533  00D685  73                 	db	115	;'s'
  2534  00D686  75                 	db	117	;'u'
  2535  00D687  72                 	db	114	;'r'
  2536  00D688  65                 	db	101	;'e'
  2537  00D689  20                 	db	32
  2538  00D68A  50                 	db	80	;'P'
  2539  00D68B  4F                 	db	79	;'O'
  2540  00D68C  53                 	db	83	;'S'
  2541  00D68D  31                 	db	49	;'1'
  2542  00D68E  32                 	db	50	;'2'
  2543  00D68F  3F                 	db	63	;'?'
  2544  00D690  3A                 	db	58	;':'
  2545  00D691  20                 	db	32
  2546  00D692  52                 	db	82	;'R'
  2547  00D693  65                 	db	101	;'e'
  2548  00D694  74                 	db	116	;'t'
  2549  00D695  75                 	db	117	;'u'
  2550  00D696  72                 	db	114	;'r'
  2551  00D697  6E                 	db	110	;'n'
  2552  00D698  73                 	db	115	;'s'
  2553  00D699  20                 	db	32
  2554  00D69A  2B                 	db	43
  2555  00D69B  31                 	db	49	;'1'
  2556  00D69C  32                 	db	50	;'2'
  2557  00D69D  56                 	db	86	;'V'
  2558  00D69E  20                 	db	32
  2559  00D69F  41                 	db	65	;'A'
  2560  00D6A0  44                 	db	68	;'D'
  2561  00D6A1  43                 	db	67	;'C'
  2562  00D6A2  20                 	db	32
  2563  00D6A3  43                 	db	67	;'C'
  2564  00D6A4  6F                 	db	111	;'o'
  2565  00D6A5  6E                 	db	110	;'n'
  2566  00D6A6  76                 	db	118	;'v'
  2567  00D6A7  65                 	db	101	;'e'
  2568  00D6A8  72                 	db	114	;'r'
  2569  00D6A9  73                 	db	115	;'s'
  2570  00D6AA  69                 	db	105	;'i'
  2571  00D6AB  6F                 	db	111	;'o'
  2572  00D6AC  6E                 	db	110	;'n'
  2573  00D6AD  20                 	db	32
  2574  00D6AE  69                 	db	105	;'i'
  2575  00D6AF  6E                 	db	110	;'n'
  2576  00D6B0  20                 	db	32
  2577  00D6B1  76                 	db	118	;'v'
  2578  00D6B2  6F                 	db	111	;'o'
  2579  00D6B3  6C                 	db	108	;'l'
  2580  00D6B4  74                 	db	116	;'t'
  2581  00D6B5  73                 	db	115	;'s'
  2582  00D6B6  0A                 	db	10
  2583  00D6B7  0D                 	db	13
  2584  00D6B8  20                 	db	32
  2585  00D6B9  20                 	db	32
  2586  00D6BA  20                 	db	32
  2587  00D6BB  4D                 	db	77	;'M'
  2588  00D6BC  65                 	db	101	;'e'
  2589  00D6BD  61                 	db	97	;'a'
  2590  00D6BE  73                 	db	115	;'s'
  2591  00D6BF  75                 	db	117	;'u'
  2592  00D6C0  72                 	db	114	;'r'
  2593  00D6C1  65                 	db	101	;'e'
  2594  00D6C2  20                 	db	32
  2595  00D6C3  44                 	db	68	;'D'
  2596  00D6C4  69                 	db	105	;'i'
  2597  00D6C5  65                 	db	101	;'e'
  2598  00D6C6  20                 	db	32
  2599  00D6C7  54                 	db	84	;'T'
  2600  00D6C8  65                 	db	101	;'e'
  2601  00D6C9  6D                 	db	109	;'m'
  2602  00D6CA  70                 	db	112	;'p'
  2603  00D6CB  3F                 	db	63	;'?'
  2604  00D6CC  3A                 	db	58	;':'
  2605  00D6CD  20                 	db	32
  2606  00D6CE  52                 	db	82	;'R'
  2607  00D6CF  65                 	db	101	;'e'
  2608  00D6D0  74                 	db	116	;'t'
  2609  00D6D1  75                 	db	117	;'u'
  2610  00D6D2  72                 	db	114	;'r'
  2611  00D6D3  6E                 	db	110	;'n'
  2612  00D6D4  73                 	db	115	;'s'
  2613  00D6D5  20                 	db	32
  2614  00D6D6  74                 	db	116	;'t'
  2615  00D6D7  68                 	db	104	;'h'
  2616  00D6D8  65                 	db	101	;'e'
  2617  00D6D9  20                 	db	32
  2618  00D6DA  6D                 	db	109	;'m'
  2619  00D6DB  69                 	db	105	;'i'
  2620  00D6DC  63                 	db	99	;'c'
  2621  00D6DD  72                 	db	114	;'r'
  2622  00D6DE  6F                 	db	111	;'o'
  2623  00D6DF  63                 	db	99	;'c'
  2624  00D6E0  6F                 	db	111	;'o'
  2625  00D6E1  6E                 	db	110	;'n'
  2626  00D6E2  74                 	db	116	;'t'
  2627  00D6E3  72                 	db	114	;'r'
  2628  00D6E4  6F                 	db	111	;'o'
  2629  00D6E5  6C                 	db	108	;'l'
  2630  00D6E6  6C                 	db	108	;'l'
  2631  00D6E7  65                 	db	101	;'e'
  2632  00D6E8  72                 	db	114	;'r'
  2633  00D6E9  20                 	db	32
  2634  00D6EA  64                 	db	100	;'d'
  2635  00D6EB  69                 	db	105	;'i'
  2636  00D6EC  65                 	db	101	;'e'
  2637  00D6ED  20                 	db	32
  2638  00D6EE  74                 	db	116	;'t'
  2639  00D6EF  65                 	db	101	;'e'
  2640  00D6F0  6D                 	db	109	;'m'
  2641  00D6F1  70                 	db	112	;'p'
  2642  00D6F2  65                 	db	101	;'e'
  2643  00D6F3  72                 	db	114	;'r'
  2644  00D6F4  61                 	db	97	;'a'
  2645  00D6F5  74                 	db	116	;'t'
  2646  00D6F6  75                 	db	117	;'u'
  2647  00D6F7  72                 	db	114	;'r'
  2648  00D6F8  65                 	db	101	;'e'
  2649  00D6F9  20                 	db	32
  2650  00D6FA  69                 	db	105	;'i'
  2651  00D6FB  6E                 	db	110	;'n'
  2652  00D6FC  20                 	db	32
  2653  00D6FD  64                 	db	100	;'d'
  2654  00D6FE  65                 	db	101	;'e'
  2655  00D6FF  67                 	db	103	;'g'
  2656  00D700  72                 	db	114	;'r'
  2657  00D701  65                 	db	101	;'e'
  2658  00D702  65                 	db	101	;'e'
  2659  00D703  73                 	db	115	;'s'
  2660  00D704  20                 	db	32
  2661  00D705  43                 	db	67	;'C'
  2662  00D706  0A                 	db	10
  2663  00D707  0D                 	db	13
  2664  00D708  20                 	db	32
  2665  00D709  20                 	db	32
  2666  00D70A  20                 	db	32
  2667  00D70B  4D                 	db	77	;'M'
  2668  00D70C  65                 	db	101	;'e'
  2669  00D70D  61                 	db	97	;'a'
  2670  00D70E  73                 	db	115	;'s'
  2671  00D70F  75                 	db	117	;'u'
  2672  00D710  72                 	db	114	;'r'
  2673  00D711  65                 	db	101	;'e'
  2674  00D712  20                 	db	32
  2675  00D713  46                 	db	70	;'F'
  2676  00D714  56                 	db	86	;'V'
  2677  00D715  52                 	db	82	;'R'
  2678  00D716  3F                 	db	63	;'?'
  2679  00D717  3A                 	db	58	;':'
  2680  00D718  20                 	db	32
  2681  00D719  52                 	db	82	;'R'
  2682  00D71A  65                 	db	101	;'e'
  2683  00D71B  74                 	db	116	;'t'
  2684  00D71C  75                 	db	117	;'u'
  2685  00D71D  72                 	db	114	;'r'
  2686  00D71E  6E                 	db	110	;'n'
  2687  00D71F  73                 	db	115	;'s'
  2688  00D720  20                 	db	32
  2689  00D721  74                 	db	116	;'t'
  2690  00D722  68                 	db	104	;'h'
  2691  00D723  65                 	db	101	;'e'
  2692  00D724  20                 	db	32
  2693  00D725  69                 	db	105	;'i'
  2694  00D726  6E                 	db	110	;'n'
  2695  00D727  74                 	db	116	;'t'
  2696  00D728  65                 	db	101	;'e'
  2697  00D729  72                 	db	114	;'r'
  2698  00D72A  6E                 	db	110	;'n'
  2699  00D72B  61                 	db	97	;'a'
  2700  00D72C  6C                 	db	108	;'l'
  2701  00D72D  20                 	db	32
  2702  00D72E  66                 	db	102	;'f'
  2703  00D72F  69                 	db	105	;'i'
  2704  00D730  78                 	db	120	;'x'
  2705  00D731  65                 	db	101	;'e'
  2706  00D732  64                 	db	100	;'d'
  2707  00D733  20                 	db	32
  2708  00D734  76                 	db	118	;'v'
  2709  00D735  6F                 	db	111	;'o'
  2710  00D736  6C                 	db	108	;'l'
  2711  00D737  74                 	db	116	;'t'
  2712  00D738  61                 	db	97	;'a'
  2713  00D739  67                 	db	103	;'g'
  2714  00D73A  65                 	db	101	;'e'
  2715  00D73B  20                 	db	32
  2716  00D73C  72                 	db	114	;'r'
  2717  00D73D  65                 	db	101	;'e'
  2718  00D73E  66                 	db	102	;'f'
  2719  00D73F  65                 	db	101	;'e'
  2720  00D740  72                 	db	114	;'r'
  2721  00D741  65                 	db	101	;'e'
  2722  00D742  6E                 	db	110	;'n'
  2723  00D743  63                 	db	99	;'c'
  2724  00D744  65                 	db	101	;'e'
  2725  00D745  20                 	db	32
  2726  00D746  62                 	db	98	;'b'
  2727  00D747  75                 	db	117	;'u'
  2728  00D748  66                 	db	102	;'f'
  2729  00D749  66                 	db	102	;'f'
  2730  00D74A  65                 	db	101	;'e'
  2731  00D74B  72                 	db	114	;'r'
  2732  00D74C  20                 	db	32
  2733  00D74D  31                 	db	49	;'1'
  2734  00D74E  20                 	db	32
  2735  00D74F  6F                 	db	111	;'o'
  2736  00D750  75                 	db	117	;'u'
  2737  00D751  74                 	db	116	;'t'
  2738  00D752  70                 	db	112	;'p'
  2739  00D753  75                 	db	117	;'u'
  2740  00D754  74                 	db	116	;'t'
  2741  00D755  20                 	db	32
  2742  00D756  69                 	db	105	;'i'
  2743  00D757  6E                 	db	110	;'n'
  2744  00D758  20                 	db	32
  2745  00D759  76                 	db	118	;'v'
  2746  00D75A  6F                 	db	111	;'o'
  2747  00D75B  6C                 	db	108	;'l'
  2748  00D75C  74                 	db	116	;'t'
  2749  00D75D  73                 	db	115	;'s'
  2750  00D75E  0A                 	db	10
  2751  00D75F  0D                 	db	13
  2752  00D760  20                 	db	32
  2753  00D761  20                 	db	32
  2754  00D762  20                 	db	32
  2755  00D763  4D                 	db	77	;'M'
  2756  00D764  65                 	db	101	;'e'
  2757  00D765  61                 	db	97	;'a'
  2758  00D766  73                 	db	115	;'s'
  2759  00D767  75                 	db	117	;'u'
  2760  00D768  72                 	db	114	;'r'
  2761  00D769  65                 	db	101	;'e'
  2762  00D76A  20                 	db	32
  2763  00D76B  41                 	db	65	;'A'
  2764  00D76C  56                 	db	86	;'V'
  2765  00D76D  53                 	db	83	;'S'
  2766  00D76E  53                 	db	83	;'S'
  2767  00D76F  3F                 	db	63	;'?'
  2768  00D770  3A                 	db	58	;':'
  2769  00D771  20                 	db	32
  2770  00D772  52                 	db	82	;'R'
  2771  00D773  65                 	db	101	;'e'
  2772  00D774  74                 	db	116	;'t'
  2773  00D775  75                 	db	117	;'u'
  2774  00D776  72                 	db	114	;'r'
  2775  00D777  6E                 	db	110	;'n'
  2776  00D778  73                 	db	115	;'s'
  2777  00D779  20                 	db	32
  2778  00D77A  74                 	db	116	;'t'
  2779  00D77B  68                 	db	104	;'h'
  2780  00D77C  65                 	db	101	;'e'
  2781  00D77D  20                 	db	32
  2782  00D77E  6D                 	db	109	;'m'
  2783  00D77F  65                 	db	101	;'e'
  2784  00D780  61                 	db	97	;'a'
  2785  00D781  73                 	db	115	;'s'
  2786  00D782  75                 	db	117	;'u'
  2787  00D783  72                 	db	114	;'r'
  2788  00D784  65                 	db	101	;'e'
  2789  00D785  64                 	db	100	;'d'
  2790  00D786  20                 	db	32
  2791  00D787  76                 	db	118	;'v'
  2792  00D788  61                 	db	97	;'a'
  2793  00D789  6C                 	db	108	;'l'
  2794  00D78A  75                 	db	117	;'u'
  2795  00D78B  65                 	db	101	;'e'
  2796  00D78C  20                 	db	32
  2797  00D78D  6F                 	db	111	;'o'
  2798  00D78E  66                 	db	102	;'f'
  2799  00D78F  20                 	db	32
  2800  00D790  41                 	db	65	;'A'
  2801  00D791  6E                 	db	110	;'n'
  2802  00D792  61                 	db	97	;'a'
  2803  00D793  6C                 	db	108	;'l'
  2804  00D794  6F                 	db	111	;'o'
  2805  00D795  67                 	db	103	;'g'
  2806  00D796  20                 	db	32
  2807  00D797  56                 	db	86	;'V'
  2808  00D798  53                 	db	83	;'S'
  2809  00D799  53                 	db	83	;'S'
  2810  00D79A  20                 	db	32
  2811  00D79B  69                 	db	105	;'i'
  2812  00D79C  6E                 	db	110	;'n'
  2813  00D79D  20                 	db	32
  2814  00D79E  76                 	db	118	;'v'
  2815  00D79F  6F                 	db	111	;'o'
  2816  00D7A0  6C                 	db	108	;'l'
  2817  00D7A1  74                 	db	116	;'t'
  2818  00D7A2  73                 	db	115	;'s'
  2819  00D7A3  0A                 	db	10
  2820  00D7A4  0D                 	db	13
  2821  00D7A5  20                 	db	32
  2822  00D7A6  20                 	db	32
  2823  00D7A7  20                 	db	32
  2824  00D7A8  4D                 	db	77	;'M'
  2825  00D7A9  61                 	db	97	;'a'
  2826  00D7AA  78                 	db	120	;'x'
  2827  00D7AB  20                 	db	32
  2828  00D7AC  50                 	db	80	;'P'
  2829  00D7AD  4F                 	db	79	;'O'
  2830  00D7AE  53                 	db	83	;'S'
  2831  00D7AF  33                 	db	51	;'3'
  2832  00D7B0  50                 	db	80	;'P'
  2833  00D7B1  33                 	db	51	;'3'
  2834  00D7B2  20                 	db	32
  2835  00D7B3  56                 	db	86	;'V'
  2836  00D7B4  6F                 	db	111	;'o'
  2837  00D7B5  6C                 	db	108	;'l'
  2838  00D7B6  74                 	db	116	;'t'
  2839  00D7B7  61                 	db	97	;'a'
  2840  00D7B8  67                 	db	103	;'g'
  2841  00D7B9  65                 	db	101	;'e'
  2842  00D7BA  3F                 	db	63	;'?'
  2843  00D7BB  3A                 	db	58	;':'
  2844  00D7BC  20                 	db	32
  2845  00D7BD  52                 	db	82	;'R'
  2846  00D7BE  65                 	db	101	;'e'
  2847  00D7BF  74                 	db	116	;'t'
  2848  00D7C0  75                 	db	117	;'u'
  2849  00D7C1  72                 	db	114	;'r'
  2850  00D7C2  6E                 	db	110	;'n'
  2851  00D7C3  73                 	db	115	;'s'
  2852  00D7C4  20                 	db	32
  2853  00D7C5  74                 	db	116	;'t'
  2854  00D7C6  68                 	db	104	;'h'
  2855  00D7C7  65                 	db	101	;'e'
  2856  00D7C8  20                 	db	32
  2857  00D7C9  6D                 	db	109	;'m'
  2858  00D7CA  61                 	db	97	;'a'
  2859  00D7CB  78                 	db	120	;'x'
  2860  00D7CC  69                 	db	105	;'i'
  2861  00D7CD  6D                 	db	109	;'m'
  2862  00D7CE  75                 	db	117	;'u'
  2863  00D7CF  6D                 	db	109	;'m'
  2864  00D7D0  20                 	db	32
  2865  00D7D1  72                 	db	114	;'r'
  2866  00D7D2  65                 	db	101	;'e'
  2867  00D7D3  63                 	db	99	;'c'
  2868  00D7D4  6F                 	db	111	;'o'
  2869  00D7D5  72                 	db	114	;'r'
  2870  00D7D6  64                 	db	100	;'d'
  2871  00D7D7  65                 	db	101	;'e'
  2872  00D7D8  64                 	db	100	;'d'
  2873  00D7D9  20                 	db	32
  2874  00D7DA  2B                 	db	43
  2875  00D7DB  33                 	db	51	;'3'
  2876  00D7DC  2E                 	db	46
  2877  00D7DD  33                 	db	51	;'3'
  2878  00D7DE  56                 	db	86	;'V'
  2879  00D7DF  20                 	db	32
  2880  00D7E0  52                 	db	82	;'R'
  2881  00D7E1  61                 	db	97	;'a'
  2882  00D7E2  69                 	db	105	;'i'
  2883  00D7E3  6C                 	db	108	;'l'
  2884  00D7E4  20                 	db	32
  2885  00D7E5  56                 	db	86	;'V'
  2886  00D7E6  6F                 	db	111	;'o'
  2887  00D7E7  6C                 	db	108	;'l'
  2888  00D7E8  74                 	db	116	;'t'
  2889  00D7E9  61                 	db	97	;'a'
  2890  00D7EA  67                 	db	103	;'g'
  2891  00D7EB  65                 	db	101	;'e'
  2892  00D7EC  20                 	db	32
  2893  00D7ED  6D                 	db	109	;'m'
  2894  00D7EE  65                 	db	101	;'e'
  2895  00D7EF  61                 	db	97	;'a'
  2896  00D7F0  73                 	db	115	;'s'
  2897  00D7F1  75                 	db	117	;'u'
  2898  00D7F2  72                 	db	114	;'r'
  2899  00D7F3  65                 	db	101	;'e'
  2900  00D7F4  64                 	db	100	;'d'
  2901  00D7F5  0A                 	db	10
  2902  00D7F6  0D                 	db	13
  2903  00D7F7  20                 	db	32
  2904  00D7F8  20                 	db	32
  2905  00D7F9  20                 	db	32
  2906  00D7FA  4D                 	db	77	;'M'
  2907  00D7FB  61                 	db	97	;'a'
  2908  00D7FC  78                 	db	120	;'x'
  2909  00D7FD  20                 	db	32
  2910  00D7FE  50                 	db	80	;'P'
  2911  00D7FF  4F                 	db	79	;'O'
  2912  00D800  53                 	db	83	;'S'
  2913  00D801  31                 	db	49	;'1'
  2914  00D802  32                 	db	50	;'2'
  2915  00D803  20                 	db	32
  2916  00D804  56                 	db	86	;'V'
  2917  00D805  6F                 	db	111	;'o'
  2918  00D806  6C                 	db	108	;'l'
  2919  00D807  74                 	db	116	;'t'
  2920  00D808  61                 	db	97	;'a'
  2921  00D809  67                 	db	103	;'g'
  2922  00D80A  65                 	db	101	;'e'
  2923  00D80B  3F                 	db	63	;'?'
  2924  00D80C  3A                 	db	58	;':'
  2925  00D80D  20                 	db	32
  2926  00D80E  52                 	db	82	;'R'
  2927  00D80F  65                 	db	101	;'e'
  2928  00D810  74                 	db	116	;'t'
  2929  00D811  75                 	db	117	;'u'
  2930  00D812  72                 	db	114	;'r'
  2931  00D813  6E                 	db	110	;'n'
  2932  00D814  73                 	db	115	;'s'
  2933  00D815  20                 	db	32
  2934  00D816  74                 	db	116	;'t'
  2935  00D817  68                 	db	104	;'h'
  2936  00D818  65                 	db	101	;'e'
  2937  00D819  20                 	db	32
  2938  00D81A  6D                 	db	109	;'m'
  2939  00D81B  61                 	db	97	;'a'
  2940  00D81C  78                 	db	120	;'x'
  2941  00D81D  69                 	db	105	;'i'
  2942  00D81E  6D                 	db	109	;'m'
  2943  00D81F  75                 	db	117	;'u'
  2944  00D820  6D                 	db	109	;'m'
  2945  00D821  20                 	db	32
  2946  00D822  72                 	db	114	;'r'
  2947  00D823  65                 	db	101	;'e'
  2948  00D824  63                 	db	99	;'c'
  2949  00D825  6F                 	db	111	;'o'
  2950  00D826  72                 	db	114	;'r'
  2951  00D827  64                 	db	100	;'d'
  2952  00D828  65                 	db	101	;'e'
  2953  00D829  64                 	db	100	;'d'
  2954  00D82A  20                 	db	32
  2955  00D82B  2B                 	db	43
  2956  00D82C  31                 	db	49	;'1'
  2957  00D82D  32                 	db	50	;'2'
  2958  00D82E  56                 	db	86	;'V'
  2959  00D82F  20                 	db	32
  2960  00D830  52                 	db	82	;'R'
  2961  00D831  61                 	db	97	;'a'
  2962  00D832  69                 	db	105	;'i'
  2963  00D833  6C                 	db	108	;'l'
  2964  00D834  20                 	db	32
  2965  00D835  56                 	db	86	;'V'
  2966  00D836  6F                 	db	111	;'o'
  2967  00D837  6C                 	db	108	;'l'
  2968  00D838  74                 	db	116	;'t'
  2969  00D839  61                 	db	97	;'a'
  2970  00D83A  67                 	db	103	;'g'
  2971  00D83B  65                 	db	101	;'e'
  2972  00D83C  20                 	db	32
  2973  00D83D  6D                 	db	109	;'m'
  2974  00D83E  65                 	db	101	;'e'
  2975  00D83F  61                 	db	97	;'a'
  2976  00D840  73                 	db	115	;'s'
  2977  00D841  75                 	db	117	;'u'
  2978  00D842  72                 	db	114	;'r'
  2979  00D843  65                 	db	101	;'e'
  2980  00D844  64                 	db	100	;'d'
  2981  00D845  0A                 	db	10
  2982  00D846  0D                 	db	13
  2983  00D847  20                 	db	32
  2984  00D848  20                 	db	32
  2985  00D849  20                 	db	32
  2986  00D84A  4D                 	db	77	;'M'
  2987  00D84B  61                 	db	97	;'a'
  2988  00D84C  78                 	db	120	;'x'
  2989  00D84D  20                 	db	32
  2990  00D84E  44                 	db	68	;'D'
  2991  00D84F  69                 	db	105	;'i'
  2992  00D850  65                 	db	101	;'e'
  2993  00D851  20                 	db	32
  2994  00D852  54                 	db	84	;'T'
  2995  00D853  65                 	db	101	;'e'
  2996  00D854  6D                 	db	109	;'m'
  2997  00D855  70                 	db	112	;'p'
  2998  00D856  3F                 	db	63	;'?'
  2999  00D857  3A                 	db	58	;':'
  3000  00D858  20                 	db	32
  3001  00D859  52                 	db	82	;'R'
  3002  00D85A  65                 	db	101	;'e'
  3003  00D85B  74                 	db	116	;'t'
  3004  00D85C  75                 	db	117	;'u'
  3005  00D85D  72                 	db	114	;'r'
  3006  00D85E  6E                 	db	110	;'n'
  3007  00D85F  73                 	db	115	;'s'
  3008  00D860  20                 	db	32
  3009  00D861  74                 	db	116	;'t'
  3010  00D862  68                 	db	104	;'h'
  3011  00D863  65                 	db	101	;'e'
  3012  00D864  20                 	db	32
  3013  00D865  6D                 	db	109	;'m'
  3014  00D866  61                 	db	97	;'a'
  3015  00D867  78                 	db	120	;'x'
  3016  00D868  69                 	db	105	;'i'
  3017  00D869  6D                 	db	109	;'m'
  3018  00D86A  75                 	db	117	;'u'
  3019  00D86B  6D                 	db	109	;'m'
  3020  00D86C  20                 	db	32
  3021  00D86D  72                 	db	114	;'r'
  3022  00D86E  65                 	db	101	;'e'
  3023  00D86F  63                 	db	99	;'c'
  3024  00D870  6F                 	db	111	;'o'
  3025  00D871  72                 	db	114	;'r'
  3026  00D872  64                 	db	100	;'d'
  3027  00D873  65                 	db	101	;'e'
  3028  00D874  64                 	db	100	;'d'
  3029  00D875  20                 	db	32
  3030  00D876  64                 	db	100	;'d'
  3031  00D877  69                 	db	105	;'i'
  3032  00D878  65                 	db	101	;'e'
  3033  00D879  20                 	db	32
  3034  00D87A  74                 	db	116	;'t'
  3035  00D87B  65                 	db	101	;'e'
  3036  00D87C  6D                 	db	109	;'m'
  3037  00D87D  70                 	db	112	;'p'
  3038  00D87E  65                 	db	101	;'e'
  3039  00D87F  72                 	db	114	;'r'
  3040  00D880  61                 	db	97	;'a'
  3041  00D881  74                 	db	116	;'t'
  3042  00D882  75                 	db	117	;'u'
  3043  00D883  72                 	db	114	;'r'
  3044  00D884  65                 	db	101	;'e'
  3045  00D885  20                 	db	32
  3046  00D886  6D                 	db	109	;'m'
  3047  00D887  65                 	db	101	;'e'
  3048  00D888  61                 	db	97	;'a'
  3049  00D889  73                 	db	115	;'s'
  3050  00D88A  75                 	db	117	;'u'
  3051  00D88B  72                 	db	114	;'r'
  3052  00D88C  65                 	db	101	;'e'
  3053  00D88D  64                 	db	100	;'d'
  3054  00D88E  0A                 	db	10
  3055  00D88F  0D                 	db	13
  3056  00D890  20                 	db	32
  3057  00D891  20                 	db	32
  3058  00D892  20                 	db	32
  3059  00D893  4D                 	db	77	;'M'
  3060  00D894  61                 	db	97	;'a'
  3061  00D895  78                 	db	120	;'x'
  3062  00D896  20                 	db	32
  3063  00D897  46                 	db	70	;'F'
  3064  00D898  56                 	db	86	;'V'
  3065  00D899  52                 	db	82	;'R'
  3066  00D89A  20                 	db	32
  3067  00D89B  56                 	db	86	;'V'
  3068  00D89C  6F                 	db	111	;'o'
  3069  00D89D  6C                 	db	108	;'l'
  3070  00D89E  74                 	db	116	;'t'
  3071  00D89F  61                 	db	97	;'a'
  3072  00D8A0  67                 	db	103	;'g'
  3073  00D8A1  65                 	db	101	;'e'
  3074  00D8A2  3F                 	db	63	;'?'
  3075  00D8A3  3A                 	db	58	;':'
  3076  00D8A4  20                 	db	32
  3077  00D8A5  52                 	db	82	;'R'
  3078  00D8A6  65                 	db	101	;'e'
  3079  00D8A7  74                 	db	116	;'t'
  3080  00D8A8  75                 	db	117	;'u'
  3081  00D8A9  72                 	db	114	;'r'
  3082  00D8AA  6E                 	db	110	;'n'
  3083  00D8AB  73                 	db	115	;'s'
  3084  00D8AC  20                 	db	32
  3085  00D8AD  74                 	db	116	;'t'
  3086  00D8AE  68                 	db	104	;'h'
  3087  00D8AF  65                 	db	101	;'e'
  3088  00D8B0  20                 	db	32
  3089  00D8B1  6D                 	db	109	;'m'
  3090  00D8B2  61                 	db	97	;'a'
  3091  00D8B3  78                 	db	120	;'x'
  3092  00D8B4  69                 	db	105	;'i'
  3093  00D8B5  6D                 	db	109	;'m'
  3094  00D8B6  75                 	db	117	;'u'
  3095  00D8B7  6D                 	db	109	;'m'
  3096  00D8B8  20                 	db	32
  3097  00D8B9  72                 	db	114	;'r'
  3098  00D8BA  65                 	db	101	;'e'
  3099  00D8BB  63                 	db	99	;'c'
  3100  00D8BC  6F                 	db	111	;'o'
  3101  00D8BD  72                 	db	114	;'r'
  3102  00D8BE  64                 	db	100	;'d'
  3103  00D8BF  65                 	db	101	;'e'
  3104  00D8C0  64                 	db	100	;'d'
  3105  00D8C1  20                 	db	32
  3106  00D8C2  46                 	db	70	;'F'
  3107  00D8C3  56                 	db	86	;'V'
  3108  00D8C4  52                 	db	82	;'R'
  3109  00D8C5  20                 	db	32
  3110  00D8C6  42                 	db	66	;'B'
  3111  00D8C7  75                 	db	117	;'u'
  3112  00D8C8  66                 	db	102	;'f'
  3113  00D8C9  66                 	db	102	;'f'
  3114  00D8CA  65                 	db	101	;'e'
  3115  00D8CB  72                 	db	114	;'r'
  3116  00D8CC  20                 	db	32
  3117  00D8CD  31                 	db	49	;'1'
  3118  00D8CE  20                 	db	32
  3119  00D8CF  56                 	db	86	;'V'
  3120  00D8D0  6F                 	db	111	;'o'
  3121  00D8D1  6C                 	db	108	;'l'
  3122  00D8D2  74                 	db	116	;'t'
  3123  00D8D3  61                 	db	97	;'a'
  3124  00D8D4  67                 	db	103	;'g'
  3125  00D8D5  65                 	db	101	;'e'
  3126  00D8D6  20                 	db	32
  3127  00D8D7  6D                 	db	109	;'m'
  3128  00D8D8  65                 	db	101	;'e'
  3129  00D8D9  61                 	db	97	;'a'
  3130  00D8DA  73                 	db	115	;'s'
  3131  00D8DB  75                 	db	117	;'u'
  3132  00D8DC  72                 	db	114	;'r'
  3133  00D8DD  65                 	db	101	;'e'
  3134  00D8DE  64                 	db	100	;'d'
  3135  00D8DF  0A                 	db	10
  3136  00D8E0  0D                 	db	13
  3137  00D8E1  0A                 	db	10
  3138  00D8E2  0D                 	db	13
  3139  00D8E3  50                 	db	80	;'P'
  3140  00D8E4  72                 	db	114	;'r'
  3141  00D8E5  69                 	db	105	;'i'
  3142  00D8E6  6D                 	db	109	;'m'
  3143  00D8E7  61                 	db	97	;'a'
  3144  00D8E8  72                 	db	114	;'r'
  3145  00D8E9  79                 	db	121	;'y'
  3146  00D8EA  20                 	db	32
  3147  00D8EB  4D                 	db	77	;'M'
  3148  00D8EC  65                 	db	101	;'e'
  3149  00D8ED  61                 	db	97	;'a'
  3150  00D8EE  73                 	db	115	;'s'
  3151  00D8EF  75                 	db	117	;'u'
  3152  00D8F0  72                 	db	114	;'r'
  3153  00D8F1  65                 	db	101	;'e'
  3154  00D8F2  6D                 	db	109	;'m'
  3155  00D8F3  65                 	db	101	;'e'
  3156  00D8F4  6E                 	db	110	;'n'
  3157  00D8F5  74                 	db	116	;'t'
  3158  00D8F6  20                 	db	32
  3159  00D8F7  43                 	db	67	;'C'
  3160  00D8F8  6F                 	db	111	;'o'
  3161  00D8F9  6D                 	db	109	;'m'
  3162  00D8FA  6D                 	db	109	;'m'
  3163  00D8FB  61                 	db	97	;'a'
  3164  00D8FC  6E                 	db	110	;'n'
  3165  00D8FD  64                 	db	100	;'d'
  3166  00D8FE  73                 	db	115	;'s'
  3167  00D8FF  3A                 	db	58	;':'
  3168  00D900  20                 	db	32
  3169  00D901  56                 	db	86	;'V'
  3170  00D902  69                 	db	105	;'i'
  3171  00D903  65                 	db	101	;'e'
  3172  00D904  77                 	db	119	;'w'
  3173  00D905  20                 	db	32
  3174  00D906  68                 	db	104	;'h'
  3175  00D907  69                 	db	105	;'i'
  3176  00D908  67                 	db	103	;'g'
  3177  00D909  68                 	db	104	;'h'
  3178  00D90A  20                 	db	32
  3179  00D90B  6C                 	db	108	;'l'
  3180  00D90C  65                 	db	101	;'e'
  3181  00D90D  76                 	db	118	;'v'
  3182  00D90E  65                 	db	101	;'e'
  3183  00D90F  6C                 	db	108	;'l'
  3184  00D910  20                 	db	32
  3185  00D911  6F                 	db	111	;'o'
  3186  00D912  75                 	db	117	;'u'
  3187  00D913  74                 	db	116	;'t'
  3188  00D914  70                 	db	112	;'p'
  3189  00D915  75                 	db	117	;'u'
  3190  00D916  74                 	db	116	;'t'
  3191  00D917  20                 	db	32
  3192  00D918  6D                 	db	109	;'m'
  3193  00D919  65                 	db	101	;'e'
  3194  00D91A  61                 	db	97	;'a'
  3195  00D91B  73                 	db	115	;'s'
  3196  00D91C  75                 	db	117	;'u'
  3197  00D91D  72                 	db	114	;'r'
  3198  00D91E  65                 	db	101	;'e'
  3199  00D91F  6D                 	db	109	;'m'
  3200  00D920  65                 	db	101	;'e'
  3201  00D921  6E                 	db	110	;'n'
  3202  00D922  74                 	db	116	;'t'
  3203  00D923  73                 	db	115	;'s'
  3204  00D924  20                 	db	32
  3205  00D925  61                 	db	97	;'a'
  3206  00D926  6E                 	db	110	;'n'
  3207  00D927  64                 	db	100	;'d'
  3208  00D928  20                 	db	32
  3209  00D929  63                 	db	99	;'c'
  3210  00D92A  61                 	db	97	;'a'
  3211  00D92B  6C                 	db	108	;'l'
  3212  00D92C  63                 	db	99	;'c'
  3213  00D92D  75                 	db	117	;'u'
  3214  00D92E  6C                 	db	108	;'l'
  3215  00D92F  61                 	db	97	;'a'
  3216  00D930  74                 	db	116	;'t'
  3217  00D931  69                 	db	105	;'i'
  3218  00D932  6F                 	db	111	;'o'
  3219  00D933  6E                 	db	110	;'n'
  3220  00D934  73                 	db	115	;'s'
  3221  00D935  0A                 	db	10
  3222  00D936  0D                 	db	13
  3223  00D937  20                 	db	32
  3224  00D938  20                 	db	32
  3225  00D939  20                 	db	32
  3226  00D93A  4D                 	db	77	;'M'
  3227  00D93B  65                 	db	101	;'e'
  3228  00D93C  61                 	db	97	;'a'
  3229  00D93D  73                 	db	115	;'s'
  3230  00D93E  75                 	db	117	;'u'
  3231  00D93F  72                 	db	114	;'r'
  3232  00D940  65                 	db	101	;'e'
  3233  00D941  20                 	db	32
  3234  00D942  44                 	db	68	;'D'
  3235  00D943  65                 	db	101	;'e'
  3236  00D944  74                 	db	116	;'t'
  3237  00D945  65                 	db	101	;'e'
  3238  00D946  63                 	db	99	;'c'
  3239  00D947  74                 	db	116	;'t'
  3240  00D948  65                 	db	101	;'e'
  3241  00D949  64                 	db	100	;'d'
  3242  00D94A  20                 	db	32
  3243  00D94B  43                 	db	67	;'C'
  3244  00D94C  75                 	db	117	;'u'
  3245  00D94D  72                 	db	114	;'r'
  3246  00D94E  72                 	db	114	;'r'
  3247  00D94F  65                 	db	101	;'e'
  3248  00D950  6E                 	db	110	;'n'
  3249  00D951  74                 	db	116	;'t'
  3250  00D952  3F                 	db	63	;'?'
  3251  00D953  3A                 	db	58	;':'
  3252  00D954  20                 	db	32
  3253  00D955  52                 	db	82	;'R'
  3254  00D956  65                 	db	101	;'e'
  3255  00D957  74                 	db	116	;'t'
  3256  00D958  75                 	db	117	;'u'
  3257  00D959  72                 	db	114	;'r'
  3258  00D95A  6E                 	db	110	;'n'
  3259  00D95B  73                 	db	115	;'s'
  3260  00D95C  20                 	db	32
  3261  00D95D  6D                 	db	109	;'m'
  3262  00D95E  65                 	db	101	;'e'
  3263  00D95F  61                 	db	97	;'a'
  3264  00D960  73                 	db	115	;'s'
  3265  00D961  75                 	db	117	;'u'
  3266  00D962  72                 	db	114	;'r'
  3267  00D963  65                 	db	101	;'e'
  3268  00D964  64                 	db	100	;'d'
  3269  00D965  20                 	db	32
  3270  00D966  6F                 	db	111	;'o'
  3271  00D967  75                 	db	117	;'u'
  3272  00D968  74                 	db	116	;'t'
  3273  00D969  70                 	db	112	;'p'
  3274  00D96A  75                 	db	117	;'u'
  3275  00D96B  74                 	db	116	;'t'
  3276  00D96C  20                 	db	32
  3277  00D96D  63                 	db	99	;'c'
  3278  00D96E  75                 	db	117	;'u'
  3279  00D96F  72                 	db	114	;'r'
  3280  00D970  72                 	db	114	;'r'
  3281  00D971  65                 	db	101	;'e'
  3282  00D972  6E                 	db	110	;'n'
  3283  00D973  74                 	db	116	;'t'
  3284  00D974  20                 	db	32
  3285  00D975  69                 	db	105	;'i'
  3286  00D976  6E                 	db	110	;'n'
  3287  00D977  20                 	db	32
  3288  00D978  61                 	db	97	;'a'
  3289  00D979  6D                 	db	109	;'m'
  3290  00D97A  70                 	db	112	;'p'
  3291  00D97B  73                 	db	115	;'s'
  3292  00D97C  20                 	db	32
  3293  00D97D  61                 	db	97	;'a'
  3294  00D97E  73                 	db	115	;'s'
  3295  00D97F  20                 	db	32
  3296  00D980  73                 	db	115	;'s'
  3297  00D981  65                 	db	101	;'e'
  3298  00D982  65                 	db	101	;'e'
  3299  00D983  6E                 	db	110	;'n'
  3300  00D984  20                 	db	32
  3301  00D985  62                 	db	98	;'b'
  3302  00D986  79                 	db	121	;'y'
  3303  00D987  20                 	db	32
  3304  00D988  41                 	db	65	;'A'
  3305  00D989  44                 	db	68	;'D'
  3306  00D98A  43                 	db	67	;'C'
  3307  00D98B  0A                 	db	10
  3308  00D98C  0D                 	db	13
  3309  00D98D  20                 	db	32
  3310  00D98E  20                 	db	32
  3311  00D98F  20                 	db	32
  3312  00D990  4D                 	db	77	;'M'
  3313  00D991  65                 	db	101	;'e'
  3314  00D992  61                 	db	97	;'a'
  3315  00D993  73                 	db	115	;'s'
  3316  00D994  75                 	db	117	;'u'
  3317  00D995  72                 	db	114	;'r'
  3318  00D996  65                 	db	101	;'e'
  3319  00D997  20                 	db	32
  3320  00D998  52                 	db	82	;'R'
  3321  00D999  4D                 	db	77	;'M'
  3322  00D99A  53                 	db	83	;'S'
  3323  00D99B  20                 	db	32
  3324  00D99C  43                 	db	67	;'C'
  3325  00D99D  75                 	db	117	;'u'
  3326  00D99E  72                 	db	114	;'r'
  3327  00D99F  72                 	db	114	;'r'
  3328  00D9A0  65                 	db	101	;'e'
  3329  00D9A1  6E                 	db	110	;'n'
  3330  00D9A2  74                 	db	116	;'t'
  3331  00D9A3  3F                 	db	63	;'?'
  3332  00D9A4  3A                 	db	58	;':'
  3333  00D9A5  20                 	db	32
  3334  00D9A6  52                 	db	82	;'R'
  3335  00D9A7  65                 	db	101	;'e'
  3336  00D9A8  74                 	db	116	;'t'
  3337  00D9A9  75                 	db	117	;'u'
  3338  00D9AA  72                 	db	114	;'r'
  3339  00D9AB  6E                 	db	110	;'n'
  3340  00D9AC  73                 	db	115	;'s'
  3341  00D9AD  20                 	db	32
  3342  00D9AE  74                 	db	116	;'t'
  3343  00D9AF  68                 	db	104	;'h'
  3344  00D9B0  65                 	db	101	;'e'
  3345  00D9B1  20                 	db	32
  3346  00D9B2  63                 	db	99	;'c'
  3347  00D9B3  61                 	db	97	;'a'
  3348  00D9B4  6C                 	db	108	;'l'
  3349  00D9B5  63                 	db	99	;'c'
  3350  00D9B6  75                 	db	117	;'u'
  3351  00D9B7  6C                 	db	108	;'l'
  3352  00D9B8  61                 	db	97	;'a'
  3353  00D9B9  74                 	db	116	;'t'
  3354  00D9BA  65                 	db	101	;'e'
  3355  00D9BB  64                 	db	100	;'d'
  3356  00D9BC  20                 	db	32
  3357  00D9BD  52                 	db	82	;'R'
  3358  00D9BE  4D                 	db	77	;'M'
  3359  00D9BF  53                 	db	83	;'S'
  3360  00D9C0  20                 	db	32
  3361  00D9C1  6F                 	db	111	;'o'
  3362  00D9C2  75                 	db	117	;'u'
  3363  00D9C3  74                 	db	116	;'t'
  3364  00D9C4  70                 	db	112	;'p'
  3365  00D9C5  75                 	db	117	;'u'
  3366  00D9C6  74                 	db	116	;'t'
  3367  00D9C7  20                 	db	32
  3368  00D9C8  63                 	db	99	;'c'
  3369  00D9C9  75                 	db	117	;'u'
  3370  00D9CA  72                 	db	114	;'r'
  3371  00D9CB  72                 	db	114	;'r'
  3372  00D9CC  65                 	db	101	;'e'
  3373  00D9CD  6E                 	db	110	;'n'
  3374  00D9CE  74                 	db	116	;'t'
  3375  00D9CF  20                 	db	32
  3376  00D9D0  66                 	db	102	;'f'
  3377  00D9D1  72                 	db	114	;'r'
  3378  00D9D2  6F                 	db	111	;'o'
  3379  00D9D3  6D                 	db	109	;'m'
  3380  00D9D4  20                 	db	32
  3381  00D9D5  6D                 	db	109	;'m'
  3382  00D9D6  65                 	db	101	;'e'
  3383  00D9D7  61                 	db	97	;'a'
  3384  00D9D8  73                 	db	115	;'s'
  3385  00D9D9  75                 	db	117	;'u'
  3386  00D9DA  72                 	db	114	;'r'
  3387  00D9DB  65                 	db	101	;'e'
  3388  00D9DC  6D                 	db	109	;'m'
  3389  00D9DD  65                 	db	101	;'e'
  3390  00D9DE  6E                 	db	110	;'n'
  3391  00D9DF  74                 	db	116	;'t'
  3392  00D9E0  73                 	db	115	;'s'
  3393  00D9E1  20                 	db	32
  3394  00D9E2  61                 	db	97	;'a'
  3395  00D9E3  6E                 	db	110	;'n'
  3396  00D9E4  64                 	db	100	;'d'
  3397  00D9E5  20                 	db	32
  3398  00D9E6  54                 	db	84	;'T'
  3399  00D9E7  52                 	db	82	;'R'
  3400  00D9E8  49                 	db	73	;'I'
  3401  00D9E9  41                 	db	65	;'A'
  3402  00D9EA  43                 	db	67	;'C'
  3403  00D9EB  20                 	db	32
  3404  00D9EC  66                 	db	102	;'f'
  3405  00D9ED  69                 	db	105	;'i'
  3406  00D9EE  72                 	db	114	;'r'
  3407  00D9EF  69                 	db	105	;'i'
  3408  00D9F0  6E                 	db	110	;'n'
  3409  00D9F1  67                 	db	103	;'g'
  3410  00D9F2  20                 	db	32
  3411  00D9F3  61                 	db	97	;'a'
  3412  00D9F4  6E                 	db	110	;'n'
  3413  00D9F5  67                 	db	103	;'g'
  3414  00D9F6  6C                 	db	108	;'l'
  3415  00D9F7  65                 	db	101	;'e'
  3416  00D9F8  0A                 	db	10
  3417  00D9F9  0D                 	db	13
  3418  00D9FA  20                 	db	32
  3419  00D9FB  20                 	db	32
  3420  00D9FC  20                 	db	32
  3421  00D9FD  4D                 	db	77	;'M'
  3422  00D9FE  65                 	db	101	;'e'
  3423  00D9FF  61                 	db	97	;'a'
  3424  00DA00  73                 	db	115	;'s'
  3425  00DA01  75                 	db	117	;'u'
  3426  00DA02  72                 	db	114	;'r'
  3427  00DA03  65                 	db	101	;'e'
  3428  00DA04  20                 	db	32
  3429  00DA05  52                 	db	82	;'R'
  3430  00DA06  4D                 	db	77	;'M'
  3431  00DA07  53                 	db	83	;'S'
  3432  00DA08  20                 	db	32
  3433  00DA09  56                 	db	86	;'V'
  3434  00DA0A  6F                 	db	111	;'o'
  3435  00DA0B  6C                 	db	108	;'l'
  3436  00DA0C  74                 	db	116	;'t'
  3437  00DA0D  61                 	db	97	;'a'
  3438  00DA0E  67                 	db	103	;'g'
  3439  00DA0F  65                 	db	101	;'e'
  3440  00DA10  3F                 	db	63	;'?'
  3441  00DA11  3A                 	db	58	;':'
  3442  00DA12  20                 	db	32
  3443  00DA13  52                 	db	82	;'R'
  3444  00DA14  65                 	db	101	;'e'
  3445  00DA15  74                 	db	116	;'t'
  3446  00DA16  75                 	db	117	;'u'
  3447  00DA17  72                 	db	114	;'r'
  3448  00DA18  6E                 	db	110	;'n'
  3449  00DA19  73                 	db	115	;'s'
  3450  00DA1A  20                 	db	32
  3451  00DA1B  74                 	db	116	;'t'
  3452  00DA1C  68                 	db	104	;'h'
  3453  00DA1D  65                 	db	101	;'e'
  3454  00DA1E  20                 	db	32
  3455  00DA1F  63                 	db	99	;'c'
  3456  00DA20  61                 	db	97	;'a'
  3457  00DA21  6C                 	db	108	;'l'
  3458  00DA22  63                 	db	99	;'c'
  3459  00DA23  75                 	db	117	;'u'
  3460  00DA24  6C                 	db	108	;'l'
  3461  00DA25  61                 	db	97	;'a'
  3462  00DA26  74                 	db	116	;'t'
  3463  00DA27  65                 	db	101	;'e'
  3464  00DA28  64                 	db	100	;'d'
  3465  00DA29  20                 	db	32
  3466  00DA2A  52                 	db	82	;'R'
  3467  00DA2B  4D                 	db	77	;'M'
  3468  00DA2C  53                 	db	83	;'S'
  3469  00DA2D  20                 	db	32
  3470  00DA2E  6F                 	db	111	;'o'
  3471  00DA2F  75                 	db	117	;'u'
  3472  00DA30  74                 	db	116	;'t'
  3473  00DA31  70                 	db	112	;'p'
  3474  00DA32  75                 	db	117	;'u'
  3475  00DA33  74                 	db	116	;'t'
  3476  00DA34  20                 	db	32
  3477  00DA35  76                 	db	118	;'v'
  3478  00DA36  6F                 	db	111	;'o'
  3479  00DA37  6C                 	db	108	;'l'
  3480  00DA38  74                 	db	116	;'t'
  3481  00DA39  61                 	db	97	;'a'
  3482  00DA3A  67                 	db	103	;'g'
  3483  00DA3B  65                 	db	101	;'e'
  3484  00DA3C  20                 	db	32
  3485  00DA3D  66                 	db	102	;'f'
  3486  00DA3E  72                 	db	114	;'r'
  3487  00DA3F  6F                 	db	111	;'o'
  3488  00DA40  6D                 	db	109	;'m'
  3489  00DA41  20                 	db	32
  3490  00DA42  54                 	db	84	;'T'
  3491  00DA43  52                 	db	82	;'R'
  3492  00DA44  49                 	db	73	;'I'
  3493  00DA45  41                 	db	65	;'A'
  3494  00DA46  43                 	db	67	;'C'
  3495  00DA47  20                 	db	32
  3496  00DA48  66                 	db	102	;'f'
  3497  00DA49  69                 	db	105	;'i'
  3498  00DA4A  72                 	db	114	;'r'
  3499  00DA4B  69                 	db	105	;'i'
  3500  00DA4C  6E                 	db	110	;'n'
  3501  00DA4D  67                 	db	103	;'g'
  3502  00DA4E  20                 	db	32
  3503  00DA4F  61                 	db	97	;'a'
  3504  00DA50  6E                 	db	110	;'n'
  3505  00DA51  67                 	db	103	;'g'
  3506  00DA52  6C                 	db	108	;'l'
  3507  00DA53  65                 	db	101	;'e'
  3508  00DA54  0A                 	db	10
  3509  00DA55  0D                 	db	13
  3510  00DA56  20                 	db	32
  3511  00DA57  20                 	db	32
  3512  00DA58  20                 	db	32
  3513  00DA59  4D                 	db	77	;'M'
  3514  00DA5A  65                 	db	101	;'e'
  3515  00DA5B  61                 	db	97	;'a'
  3516  00DA5C  73                 	db	115	;'s'
  3517  00DA5D  75                 	db	117	;'u'
  3518  00DA5E  72                 	db	114	;'r'
  3519  00DA5F  65                 	db	101	;'e'
  3520  00DA60  20                 	db	32
  3521  00DA61  50                 	db	80	;'P'
  3522  00DA62  6F                 	db	111	;'o'
  3523  00DA63  77                 	db	119	;'w'
  3524  00DA64  65                 	db	101	;'e'
  3525  00DA65  72                 	db	114	;'r'
  3526  00DA66  3F                 	db	63	;'?'
  3527  00DA67  3A                 	db	58	;':'
  3528  00DA68  20                 	db	32
  3529  00DA69  52                 	db	82	;'R'
  3530  00DA6A  65                 	db	101	;'e'
  3531  00DA6B  74                 	db	116	;'t'
  3532  00DA6C  75                 	db	117	;'u'
  3533  00DA6D  72                 	db	114	;'r'
  3534  00DA6E  6E                 	db	110	;'n'
  3535  00DA6F  73                 	db	115	;'s'
  3536  00DA70  20                 	db	32
  3537  00DA71  74                 	db	116	;'t'
  3538  00DA72  68                 	db	104	;'h'
  3539  00DA73  65                 	db	101	;'e'
  3540  00DA74  20                 	db	32
  3541  00DA75  63                 	db	99	;'c'
  3542  00DA76  61                 	db	97	;'a'
  3543  00DA77  6C                 	db	108	;'l'
  3544  00DA78  63                 	db	99	;'c'
  3545  00DA79  75                 	db	117	;'u'
  3546  00DA7A  6C                 	db	108	;'l'
  3547  00DA7B  61                 	db	97	;'a'
  3548  00DA7C  74                 	db	116	;'t'
  3549  00DA7D  65                 	db	101	;'e'
  3550  00DA7E  64                 	db	100	;'d'
  3551  00DA7F  20                 	db	32
  3552  00DA80  6F                 	db	111	;'o'
  3553  00DA81  75                 	db	117	;'u'
  3554  00DA82  74                 	db	116	;'t'
  3555  00DA83  70                 	db	112	;'p'
  3556  00DA84  75                 	db	117	;'u'
  3557  00DA85  74                 	db	116	;'t'
  3558  00DA86  20                 	db	32
  3559  00DA87  70                 	db	112	;'p'
  3560  00DA88  6F                 	db	111	;'o'
  3561  00DA89  77                 	db	119	;'w'
  3562  00DA8A  65                 	db	101	;'e'
  3563  00DA8B  72                 	db	114	;'r'
  3564  00DA8C  20                 	db	32
  3565  00DA8D  69                 	db	105	;'i'
  3566  00DA8E  6E                 	db	110	;'n'
  3567  00DA8F  20                 	db	32
  3568  00DA90  57                 	db	87	;'W'
  3569  00DA91  61                 	db	97	;'a'
  3570  00DA92  74                 	db	116	;'t'
  3571  00DA93  74                 	db	116	;'t'
  3572  00DA94  73                 	db	115	;'s'
  3573  00DA95  0A                 	db	10
  3574  00DA96  0D                 	db	13
  3575  00DA97  20                 	db	32
  3576  00DA98  20                 	db	32
  3577  00DA99  20                 	db	32
  3578  00DA9A  4D                 	db	77	;'M'
  3579  00DA9B  65                 	db	101	;'e'
  3580  00DA9C  61                 	db	97	;'a'
  3581  00DA9D  73                 	db	115	;'s'
  3582  00DA9E  75                 	db	117	;'u'
  3583  00DA9F  72                 	db	114	;'r'
  3584  00DAA0  65                 	db	101	;'e'
  3585  00DAA1  20                 	db	32
  3586  00DAA2  45                 	db	69	;'E'
  3587  00DAA3  6E                 	db	110	;'n'
  3588  00DAA4  65                 	db	101	;'e'
  3589  00DAA5  72                 	db	114	;'r'
  3590  00DAA6  67                 	db	103	;'g'
  3591  00DAA7  79                 	db	121	;'y'
  3592  00DAA8  3F                 	db	63	;'?'
  3593  00DAA9  3A                 	db	58	;':'
  3594  00DAAA  20                 	db	32
  3595  00DAAB  52                 	db	82	;'R'
  3596  00DAAC  65                 	db	101	;'e'
  3597  00DAAD  74                 	db	116	;'t'
  3598  00DAAE  75                 	db	117	;'u'
  3599  00DAAF  72                 	db	114	;'r'
  3600  00DAB0  6E                 	db	110	;'n'
  3601  00DAB1  73                 	db	115	;'s'
  3602  00DAB2  20                 	db	32
  3603  00DAB3  6D                 	db	109	;'m'
  3604  00DAB4  65                 	db	101	;'e'
  3605  00DAB5  61                 	db	97	;'a'
  3606  00DAB6  73                 	db	115	;'s'
  3607  00DAB7  75                 	db	117	;'u'
  3608  00DAB8  72                 	db	114	;'r'
  3609  00DAB9  65                 	db	101	;'e'
  3610  00DABA  64                 	db	100	;'d'
  3611  00DABB  20                 	db	32
  3612  00DABC  65                 	db	101	;'e'
  3613  00DABD  6E                 	db	110	;'n'
  3614  00DABE  65                 	db	101	;'e'
  3615  00DABF  72                 	db	114	;'r'
  3616  00DAC0  67                 	db	103	;'g'
  3617  00DAC1  79                 	db	121	;'y'
  3618  00DAC2  20                 	db	32
  3619  00DAC3  73                 	db	115	;'s'
  3620  00DAC4  69                 	db	105	;'i'
  3621  00DAC5  6E                 	db	110	;'n'
  3622  00DAC6  63                 	db	99	;'c'
  3623  00DAC7  65                 	db	101	;'e'
  3624  00DAC8  20                 	db	32
  3625  00DAC9  6D                 	db	109	;'m'
  3626  00DACA  65                 	db	101	;'e'
  3627  00DACB  61                 	db	97	;'a'
  3628  00DACC  73                 	db	115	;'s'
  3629  00DACD  75                 	db	117	;'u'
  3630  00DACE  72                 	db	114	;'r'
  3631  00DACF  65                 	db	101	;'e'
  3632  00DAD0  6D                 	db	109	;'m'
  3633  00DAD1  65                 	db	101	;'e'
  3634  00DAD2  6E                 	db	110	;'n'
  3635  00DAD3  74                 	db	116	;'t'
  3636  00DAD4  20                 	db	32
  3637  00DAD5  72                 	db	114	;'r'
  3638  00DAD6  65                 	db	101	;'e'
  3639  00DAD7  73                 	db	115	;'s'
  3640  00DAD8  65                 	db	101	;'e'
  3641  00DAD9  74                 	db	116	;'t'
  3642  00DADA  20                 	db	32
  3643  00DADB  69                 	db	105	;'i'
  3644  00DADC  6E                 	db	110	;'n'
  3645  00DADD  20                 	db	32
  3646  00DADE  57                 	db	87	;'W'
  3647  00DADF  61                 	db	97	;'a'
  3648  00DAE0  74                 	db	116	;'t'
  3649  00DAE1  74                 	db	116	;'t'
  3650  00DAE2  20                 	db	32
  3651  00DAE3  48                 	db	72	;'H'
  3652  00DAE4  6F                 	db	111	;'o'
  3653  00DAE5  75                 	db	117	;'u'
  3654  00DAE6  72                 	db	114	;'r'
  3655  00DAE7  73                 	db	115	;'s'
  3656  00DAE8  0A                 	db	10
  3657  00DAE9  0D                 	db	13
  3658  00DAEA  20                 	db	32
  3659  00DAEB  20                 	db	32
  3660  00DAEC  20                 	db	32
  3661  00DAED  43                 	db	67	;'C'
  3662  00DAEE  6C                 	db	108	;'l'
  3663  00DAEF  65                 	db	101	;'e'
  3664  00DAF0  61                 	db	97	;'a'
  3665  00DAF1  72                 	db	114	;'r'
  3666  00DAF2  20                 	db	32
  3667  00DAF3  45                 	db	69	;'E'
  3668  00DAF4  6E                 	db	110	;'n'
  3669  00DAF5  65                 	db	101	;'e'
  3670  00DAF6  72                 	db	114	;'r'
  3671  00DAF7  67                 	db	103	;'g'
  3672  00DAF8  79                 	db	121	;'y'
  3673  00DAF9  3A                 	db	58	;':'
  3674  00DAFA  20                 	db	32
  3675  00DAFB  52                 	db	82	;'R'
  3676  00DAFC  65                 	db	101	;'e'
  3677  00DAFD  73                 	db	115	;'s'
  3678  00DAFE  65                 	db	101	;'e'
  3679  00DAFF  74                 	db	116	;'t'
  3680  00DB00  73                 	db	115	;'s'
  3681  00DB01  20                 	db	32
  3682  00DB02  74                 	db	116	;'t'
  3683  00DB03  68                 	db	104	;'h'
  3684  00DB04  65                 	db	101	;'e'
  3685  00DB05  20                 	db	32
  3686  00DB06  6D                 	db	109	;'m'
  3687  00DB07  65                 	db	101	;'e'
  3688  00DB08  61                 	db	97	;'a'
  3689  00DB09  73                 	db	115	;'s'
  3690  00DB0A  75                 	db	117	;'u'
  3691  00DB0B  72                 	db	114	;'r'
  3692  00DB0C  65                 	db	101	;'e'
  3693  00DB0D  64                 	db	100	;'d'
  3694  00DB0E  20                 	db	32
  3695  00DB0F  6F                 	db	111	;'o'
  3696  00DB10  75                 	db	117	;'u'
  3697  00DB11  74                 	db	116	;'t'
  3698  00DB12  70                 	db	112	;'p'
  3699  00DB13  75                 	db	117	;'u'
  3700  00DB14  74                 	db	116	;'t'
  3701  00DB15  20                 	db	32
  3702  00DB16  65                 	db	101	;'e'
  3703  00DB17  6E                 	db	110	;'n'
  3704  00DB18  65                 	db	101	;'e'
  3705  00DB19  72                 	db	114	;'r'
  3706  00DB1A  67                 	db	103	;'g'
  3707  00DB1B  79                 	db	121	;'y'
  3708  00DB1C  20                 	db	32
  3709  00DB1D  74                 	db	116	;'t'
  3710  00DB1E  6F                 	db	111	;'o'
  3711  00DB1F  20                 	db	32
  3712  00DB20  7A                 	db	122	;'z'
  3713  00DB21  65                 	db	101	;'e'
  3714  00DB22  72                 	db	114	;'r'
  3715  00DB23  6F                 	db	111	;'o'
  3716  00DB24  0A                 	db	10
  3717  00DB25  0D                 	db	13
  3718  00DB26  20                 	db	32
  3719  00DB27  20                 	db	32
  3720  00DB28  20                 	db	32
  3721  00DB29  4C                 	db	76	;'L'
  3722  00DB2A  6F                 	db	111	;'o'
  3723  00DB2B  61                 	db	97	;'a'
  3724  00DB2C  64                 	db	100	;'d'
  3725  00DB2D  20                 	db	32
  3726  00DB2E  4F                 	db	79	;'O'
  3727  00DB2F  6E                 	db	110	;'n'
  3728  00DB30  20                 	db	32
  3729  00DB31  54                 	db	84	;'T'
  3730  00DB32  69                 	db	105	;'i'
  3731  00DB33  6D                 	db	109	;'m'
  3732  00DB34  65                 	db	101	;'e'
  3733  00DB35  3F                 	db	63	;'?'
  3734  00DB36  3A                 	db	58	;':'
  3735  00DB37  20                 	db	32
  3736  00DB38  52                 	db	82	;'R'
  3737  00DB39  65                 	db	101	;'e'
  3738  00DB3A  74                 	db	116	;'t'
  3739  00DB3B  75                 	db	117	;'u'
  3740  00DB3C  72                 	db	114	;'r'
  3741  00DB3D  6E                 	db	110	;'n'
  3742  00DB3E  73                 	db	115	;'s'
  3743  00DB3F  20                 	db	32
  3744  00DB40  6C                 	db	108	;'l'
  3745  00DB41  6F                 	db	111	;'o'
  3746  00DB42  61                 	db	97	;'a'
  3747  00DB43  64                 	db	100	;'d'
  3748  00DB44  20                 	db	32
  3749  00DB45  6F                 	db	111	;'o'
  3750  00DB46  6E                 	db	110	;'n'
  3751  00DB47  20                 	db	32
  3752  00DB48  74                 	db	116	;'t'
  3753  00DB49  69                 	db	105	;'i'
  3754  00DB4A  6D                 	db	109	;'m'
  3755  00DB4B  65                 	db	101	;'e'
  3756  00DB4C  20                 	db	32
  3757  00DB4D  73                 	db	115	;'s'
  3758  00DB4E  69                 	db	105	;'i'
  3759  00DB4F  6E                 	db	110	;'n'
  3760  00DB50  63                 	db	99	;'c'
  3761  00DB51  65                 	db	101	;'e'
  3762  00DB52  20                 	db	32
  3763  00DB53  6C                 	db	108	;'l'
  3764  00DB54  61                 	db	97	;'a'
  3765  00DB55  73                 	db	115	;'s'
  3766  00DB56  74                 	db	116	;'t'
  3767  00DB57  20                 	db	32
  3768  00DB58  64                 	db	100	;'d'
  3769  00DB59  65                 	db	101	;'e'
  3770  00DB5A  76                 	db	118	;'v'
  3771  00DB5B  69                 	db	105	;'i'
  3772  00DB5C  63                 	db	99	;'c'
  3773  00DB5D  65                 	db	101	;'e'
  3774  00DB5E  20                 	db	32
  3775  00DB5F  72                 	db	114	;'r'
  3776  00DB60  65                 	db	101	;'e'
  3777  00DB61  73                 	db	115	;'s'
  3778  00DB62  65                 	db	101	;'e'
  3779  00DB63  74                 	db	116	;'t'
  3780  00DB64  20                 	db	32
  3781  00DB65  69                 	db	105	;'i'
  3782  00DB66  6E                 	db	110	;'n'
  3783  00DB67  20                 	db	32
  3784  00DB68  73                 	db	115	;'s'
  3785  00DB69  65                 	db	101	;'e'
  3786  00DB6A  63                 	db	99	;'c'
  3787  00DB6B  6F                 	db	111	;'o'
  3788  00DB6C  6E                 	db	110	;'n'
  3789  00DB6D  64                 	db	100	;'d'
  3790  00DB6E  73                 	db	115	;'s'
  3791  00DB6F  0A                 	db	10
  3792  00DB70  0D                 	db	13
  3793  00DB71  20                 	db	32
  3794  00DB72  20                 	db	32
  3795  00DB73  20                 	db	32
  3796  00DB74  4D                 	db	77	;'M'
  3797  00DB75  61                 	db	97	;'a'
  3798  00DB76  78                 	db	120	;'x'
  3799  00DB77  20                 	db	32
  3800  00DB78  52                 	db	82	;'R'
  3801  00DB79  4D                 	db	77	;'M'
  3802  00DB7A  53                 	db	83	;'S'
  3803  00DB7B  20                 	db	32
  3804  00DB7C  43                 	db	67	;'C'
  3805  00DB7D  75                 	db	117	;'u'
  3806  00DB7E  72                 	db	114	;'r'
  3807  00DB7F  72                 	db	114	;'r'
  3808  00DB80  65                 	db	101	;'e'
  3809  00DB81  6E                 	db	110	;'n'
  3810  00DB82  74                 	db	116	;'t'
  3811  00DB83  3F                 	db	63	;'?'
  3812  00DB84  3A                 	db	58	;':'
  3813  00DB85  20                 	db	32
  3814  00DB86  50                 	db	80	;'P'
  3815  00DB87  72                 	db	114	;'r'
  3816  00DB88  69                 	db	105	;'i'
  3817  00DB89  6E                 	db	110	;'n'
  3818  00DB8A  74                 	db	116	;'t'
  3819  00DB8B  73                 	db	115	;'s'
  3820  00DB8C  20                 	db	32
  3821  00DB8D  74                 	db	116	;'t'
  3822  00DB8E  68                 	db	104	;'h'
  3823  00DB8F  65                 	db	101	;'e'
  3824  00DB90  20                 	db	32
  3825  00DB91  6D                 	db	109	;'m'
  3826  00DB92  61                 	db	97	;'a'
  3827  00DB93  78                 	db	120	;'x'
  3828  00DB94  69                 	db	105	;'i'
  3829  00DB95  6D                 	db	109	;'m'
  3830  00DB96  75                 	db	117	;'u'
  3831  00DB97  6D                 	db	109	;'m'
  3832  00DB98  20                 	db	32
  3833  00DB99  72                 	db	114	;'r'
  3834  00DB9A  65                 	db	101	;'e'
  3835  00DB9B  63                 	db	99	;'c'
  3836  00DB9C  6F                 	db	111	;'o'
  3837  00DB9D  72                 	db	114	;'r'
  3838  00DB9E  64                 	db	100	;'d'
  3839  00DB9F  65                 	db	101	;'e'
  3840  00DBA0  64                 	db	100	;'d'
  3841  00DBA1  20                 	db	32
  3842  00DBA2  52                 	db	82	;'R'
  3843  00DBA3  4D                 	db	77	;'M'
  3844  00DBA4  53                 	db	83	;'S'
  3845  00DBA5  20                 	db	32
  3846  00DBA6  6F                 	db	111	;'o'
  3847  00DBA7  75                 	db	117	;'u'
  3848  00DBA8  74                 	db	116	;'t'
  3849  00DBA9  70                 	db	112	;'p'
  3850  00DBAA  75                 	db	117	;'u'
  3851  00DBAB  74                 	db	116	;'t'
  3852  00DBAC  20                 	db	32
  3853  00DBAD  63                 	db	99	;'c'
  3854  00DBAE  75                 	db	117	;'u'
  3855  00DBAF  72                 	db	114	;'r'
  3856  00DBB0  72                 	db	114	;'r'
  3857  00DBB1  65                 	db	101	;'e'
  3858  00DBB2  6E                 	db	110	;'n'
  3859  00DBB3  74                 	db	116	;'t'
  3860  00DBB4  0A                 	db	10
  3861  00DBB5  0D                 	db	13
  3862  00DBB6  20                 	db	32
  3863  00DBB7  20                 	db	32
  3864  00DBB8  20                 	db	32
  3865  00DBB9  4D                 	db	77	;'M'
  3866  00DBBA  61                 	db	97	;'a'
  3867  00DBBB  78                 	db	120	;'x'
  3868  00DBBC  20                 	db	32
  3869  00DBBD  50                 	db	80	;'P'
  3870  00DBBE  6F                 	db	111	;'o'
  3871  00DBBF  77                 	db	119	;'w'
  3872  00DBC0  65                 	db	101	;'e'
  3873  00DBC1  72                 	db	114	;'r'
  3874  00DBC2  3F                 	db	63	;'?'
  3875  00DBC3  3A                 	db	58	;':'
  3876  00DBC4  20                 	db	32
  3877  00DBC5  50                 	db	80	;'P'
  3878  00DBC6  72                 	db	114	;'r'
  3879  00DBC7  69                 	db	105	;'i'
  3880  00DBC8  6E                 	db	110	;'n'
  3881  00DBC9  74                 	db	116	;'t'
  3882  00DBCA  73                 	db	115	;'s'
  3883  00DBCB  20                 	db	32
  3884  00DBCC  74                 	db	116	;'t'
  3885  00DBCD  68                 	db	104	;'h'
  3886  00DBCE  65                 	db	101	;'e'
  3887  00DBCF  20                 	db	32
  3888  00DBD0  6D                 	db	109	;'m'
  3889  00DBD1  61                 	db	97	;'a'
  3890  00DBD2  78                 	db	120	;'x'
  3891  00DBD3  69                 	db	105	;'i'
  3892  00DBD4  6D                 	db	109	;'m'
  3893  00DBD5  75                 	db	117	;'u'
  3894  00DBD6  6D                 	db	109	;'m'
  3895  00DBD7  20                 	db	32
  3896  00DBD8  72                 	db	114	;'r'
  3897  00DBD9  65                 	db	101	;'e'
  3898  00DBDA  63                 	db	99	;'c'
  3899  00DBDB  6F                 	db	111	;'o'
  3900  00DBDC  72                 	db	114	;'r'
  3901  00DBDD  64                 	db	100	;'d'
  3902  00DBDE  65                 	db	101	;'e'
  3903  00DBDF  64                 	db	100	;'d'
  3904  00DBE0  20                 	db	32
  3905  00DBE1  6F                 	db	111	;'o'
  3906  00DBE2  75                 	db	117	;'u'
  3907  00DBE3  74                 	db	116	;'t'
  3908  00DBE4  70                 	db	112	;'p'
  3909  00DBE5  75                 	db	117	;'u'
  3910  00DBE6  74                 	db	116	;'t'
  3911  00DBE7  20                 	db	32
  3912  00DBE8  70                 	db	112	;'p'
  3913  00DBE9  6F                 	db	111	;'o'
  3914  00DBEA  77                 	db	119	;'w'
  3915  00DBEB  65                 	db	101	;'e'
  3916  00DBEC  72                 	db	114	;'r'
  3917  00DBED  0A                 	db	10
  3918  00DBEE  0D                 	db	13
  3919  00DBEF  0A                 	db	10
  3920  00DBF0  0D                 	db	13
  3921  00DBF1  4F                 	db	79	;'O'
  3922  00DBF2  75                 	db	117	;'u'
  3923  00DBF3  74                 	db	116	;'t'
  3924  00DBF4  70                 	db	112	;'p'
  3925  00DBF5  75                 	db	117	;'u'
  3926  00DBF6  74                 	db	116	;'t'
  3927  00DBF7  20                 	db	32
  3928  00DBF8  43                 	db	67	;'C'
  3929  00DBF9  6F                 	db	111	;'o'
  3930  00DBFA  6E                 	db	110	;'n'
  3931  00DBFB  74                 	db	116	;'t'
  3932  00DBFC  72                 	db	114	;'r'
  3933  00DBFD  6F                 	db	111	;'o'
  3934  00DBFE  6C                 	db	108	;'l'
  3935  00DBFF  20                 	db	32
  3936  00DC00  43                 	db	67	;'C'
  3937  00DC01  6F                 	db	111	;'o'
  3938  00DC02  6D                 	db	109	;'m'
  3939  00DC03  6D                 	db	109	;'m'
  3940  00DC04  61                 	db	97	;'a'
  3941  00DC05  6E                 	db	110	;'n'
  3942  00DC06  64                 	db	100	;'d'
  3943  00DC07  73                 	db	115	;'s'
  3944  00DC08  3A                 	db	58	;':'
  3945  00DC09  20                 	db	32
  3946  00DC0A  43                 	db	67	;'C'
  3947  00DC0B  6F                 	db	111	;'o'
  3948  00DC0C  6E                 	db	110	;'n'
  3949  00DC0D  74                 	db	116	;'t'
  3950  00DC0E  72                 	db	114	;'r'
  3951  00DC0F  6F                 	db	111	;'o'
  3952  00DC10  6C                 	db	108	;'l'
  3953  00DC11  20                 	db	32
  3954  00DC12  74                 	db	116	;'t'
  3955  00DC13  68                 	db	104	;'h'
  3956  00DC14  65                 	db	101	;'e'
  3957  00DC15  20                 	db	32
  3958  00DC16  6F                 	db	111	;'o'
  3959  00DC17  75                 	db	117	;'u'
  3960  00DC18  74                 	db	116	;'t'
  3961  00DC19  70                 	db	112	;'p'
  3962  00DC1A  75                 	db	117	;'u'
  3963  00DC1B  74                 	db	116	;'t'
  3964  00DC1C  20                 	db	32
  3965  00DC1D  73                 	db	115	;'s'
  3966  00DC1E  74                 	db	116	;'t'
  3967  00DC1F  61                 	db	97	;'a'
  3968  00DC20  74                 	db	116	;'t'
  3969  00DC21  65                 	db	101	;'e'
  3970  00DC22  20                 	db	32
  3971  00DC23  61                 	db	97	;'a'
  3972  00DC24  6E                 	db	110	;'n'
  3973  00DC25  64                 	db	100	;'d'
  3974  00DC26  20                 	db	32
  3975  00DC27  64                 	db	100	;'d'
  3976  00DC28  69                 	db	105	;'i'
  3977  00DC29  6D                 	db	109	;'m'
  3978  00DC2A  6D                 	db	109	;'m'
  3979  00DC2B  69                 	db	105	;'i'
  3980  00DC2C  6E                 	db	110	;'n'
  3981  00DC2D  67                 	db	103	;'g'
  3982  00DC2E  20                 	db	32
  3983  00DC2F  66                 	db	102	;'f'
  3984  00DC30  65                 	db	101	;'e'
  3985  00DC31  61                 	db	97	;'a'
  3986  00DC32  74                 	db	116	;'t'
  3987  00DC33  75                 	db	117	;'u'
  3988  00DC34  72                 	db	114	;'r'
  3989  00DC35  65                 	db	101	;'e'
  3990  00DC36  73                 	db	115	;'s'
  3991  00DC37  0A                 	db	10
  3992  00DC38  0D                 	db	13
  3993  00DC39  20                 	db	32
  3994  00DC3A  20                 	db	32
  3995  00DC3B  20                 	db	32
  3996  00DC3C  45                 	db	69	;'E'
  3997  00DC3D  6E                 	db	110	;'n'
  3998  00DC3E  61                 	db	97	;'a'
  3999  00DC3F  62                 	db	98	;'b'
  4000  00DC40  6C                 	db	108	;'l'
  4001  00DC41  65                 	db	101	;'e'
  4002  00DC42  20                 	db	32
  4003  00DC43  44                 	db	68	;'D'
  4004  00DC44  69                 	db	105	;'i'
  4005  00DC45  6D                 	db	109	;'m'
  4006  00DC46  6D                 	db	109	;'m'
  4007  00DC47  69                 	db	105	;'i'
  4008  00DC48  6E                 	db	110	;'n'
  4009  00DC49  67                 	db	103	;'g'
  4010  00DC4A  3A                 	db	58	;':'
  4011  00DC4B  20                 	db	32
  4012  00DC4C  45                 	db	69	;'E'
  4013  00DC4D  6E                 	db	110	;'n'
  4014  00DC4E  61                 	db	97	;'a'
  4015  00DC4F  62                 	db	98	;'b'
  4016  00DC50  6C                 	db	108	;'l'
  4017  00DC51  65                 	db	101	;'e'
  4018  00DC52  20                 	db	32
  4019  00DC53  54                 	db	84	;'T'
  4020  00DC54  52                 	db	82	;'R'
  4021  00DC55  49                 	db	73	;'I'
  4022  00DC56  41                 	db	65	;'A'
  4023  00DC57  43                 	db	67	;'C'
  4024  00DC58  20                 	db	32
  4025  00DC59  6F                 	db	111	;'o'
  4026  00DC5A  75                 	db	117	;'u'
  4027  00DC5B  74                 	db	116	;'t'
  4028  00DC5C  70                 	db	112	;'p'
  4029  00DC5D  75                 	db	117	;'u'
  4030  00DC5E  74                 	db	116	;'t'
  4031  00DC5F  20                 	db	32
  4032  00DC60  64                 	db	100	;'d'
  4033  00DC61  69                 	db	105	;'i'
  4034  00DC62  6D                 	db	109	;'m'
  4035  00DC63  6D                 	db	109	;'m'
  4036  00DC64  69                 	db	105	;'i'
  4037  00DC65  6E                 	db	110	;'n'
  4038  00DC66  67                 	db	103	;'g'
  4039  00DC67  0A                 	db	10
  4040  00DC68  0D                 	db	13
  4041  00DC69  20                 	db	32
  4042  00DC6A  20                 	db	32
  4043  00DC6B  20                 	db	32
  4044  00DC6C  44                 	db	68	;'D'
  4045  00DC6D  69                 	db	105	;'i'
  4046  00DC6E  73                 	db	115	;'s'
  4047  00DC6F  61                 	db	97	;'a'
  4048  00DC70  62                 	db	98	;'b'
  4049  00DC71  6C                 	db	108	;'l'
  4050  00DC72  65                 	db	101	;'e'
  4051  00DC73  20                 	db	32
  4052  00DC74  44                 	db	68	;'D'
  4053  00DC75  69                 	db	105	;'i'
  4054  00DC76  6D                 	db	109	;'m'
  4055  00DC77  6D                 	db	109	;'m'
  4056  00DC78  69                 	db	105	;'i'
  4057  00DC79  6E                 	db	110	;'n'
  4058  00DC7A  67                 	db	103	;'g'
  4059  00DC7B  3A                 	db	58	;':'
  4060  00DC7C  20                 	db	32
  4061  00DC7D  44                 	db	68	;'D'
  4062  00DC7E  69                 	db	105	;'i'
  4063  00DC7F  73                 	db	115	;'s'
  4064  00DC80  61                 	db	97	;'a'
  4065  00DC81  62                 	db	98	;'b'
  4066  00DC82  6C                 	db	108	;'l'
  4067  00DC83  65                 	db	101	;'e'
  4068  00DC84  20                 	db	32
  4069  00DC85  54                 	db	84	;'T'
  4070  00DC86  52                 	db	82	;'R'
  4071  00DC87  49                 	db	73	;'I'
  4072  00DC88  41                 	db	65	;'A'
  4073  00DC89  43                 	db	67	;'C'
  4074  00DC8A  20                 	db	32
  4075  00DC8B  6F                 	db	111	;'o'
  4076  00DC8C  75                 	db	117	;'u'
  4077  00DC8D  74                 	db	116	;'t'
  4078  00DC8E  70                 	db	112	;'p'
  4079  00DC8F  75                 	db	117	;'u'
  4080  00DC90  74                 	db	116	;'t'
  4081  00DC91  20                 	db	32
  4082  00DC92  64                 	db	100	;'d'
  4083  00DC93  69                 	db	105	;'i'
  4084  00DC94  6D                 	db	109	;'m'
  4085  00DC95  6D                 	db	109	;'m'
  4086  00DC96  69                 	db	105	;'i'
  4087  00DC97  6E                 	db	110	;'n'
  4088  00DC98  67                 	db	103	;'g'
  4089  00DC99  0A                 	db	10
  4090  00DC9A  0D                 	db	13
  4091  00DC9B  20                 	db	32
  4092  00DC9C  20                 	db	32
  4093  00DC9D  20                 	db	32
  4094  00DC9E  45                 	db	69	;'E'
  4095  00DC9F  6E                 	db	110	;'n'
  4096  00DCA0  61                 	db	97	;'a'
  4097  00DCA1  62                 	db	98	;'b'
  4098  00DCA2  6C                 	db	108	;'l'
  4099  00DCA3  65                 	db	101	;'e'
  4100  00DCA4  20                 	db	32
  4101  00DCA5  4C                 	db	76	;'L'
  4102  00DCA6  6F                 	db	111	;'o'
  4103  00DCA7  61                 	db	97	;'a'
  4104  00DCA8  64                 	db	100	;'d'
  4105  00DCA9  3A                 	db	58	;':'
  4106  00DCAA  20                 	db	32
  4107  00DCAB  45                 	db	69	;'E'
  4108  00DCAC  6E                 	db	110	;'n'
  4109  00DCAD  61                 	db	97	;'a'
  4110  00DCAE  62                 	db	98	;'b'
  4111  00DCAF  6C                 	db	108	;'l'
  4112  00DCB0  65                 	db	101	;'e'
  4113  00DCB1  73                 	db	115	;'s'
  4114  00DCB2  20                 	db	32
  4115  00DCB3  74                 	db	116	;'t'
  4116  00DCB4  68                 	db	104	;'h'
  4117  00DCB5  65                 	db	101	;'e'
  4118  00DCB6  20                 	db	32
  4119  00DCB7  6F                 	db	111	;'o'
  4120  00DCB8  75                 	db	117	;'u'
  4121  00DCB9  74                 	db	116	;'t'
  4122  00DCBA  70                 	db	112	;'p'
  4123  00DCBB  75                 	db	117	;'u'
  4124  00DCBC  74                 	db	116	;'t'
  4125  00DCBD  20                 	db	32
  4126  00DCBE  54                 	db	84	;'T'
  4127  00DCBF  52                 	db	82	;'R'
  4128  00DCC0  49                 	db	73	;'I'
  4129  00DCC1  41                 	db	65	;'A'
  4130  00DCC2  43                 	db	67	;'C'
  4131  00DCC3  20                 	db	32
  4132  00DCC4  77                 	db	119	;'w'
  4133  00DCC5  69                 	db	105	;'i'
  4134  00DCC6  74                 	db	116	;'t'
  4135  00DCC7  68                 	db	104	;'h'
  4136  00DCC8  20                 	db	32
  4137  00DCC9  64                 	db	100	;'d'
  4138  00DCCA  69                 	db	105	;'i'
  4139  00DCCB  6D                 	db	109	;'m'
  4140  00DCCC  6D                 	db	109	;'m'
  4141  00DCCD  69                 	db	105	;'i'
  4142  00DCCE  6E                 	db	110	;'n'
  4143  00DCCF  67                 	db	103	;'g'
  4144  00DCD0  20                 	db	32
  4145  00DCD1  64                 	db	100	;'d'
  4146  00DCD2  69                 	db	105	;'i'
  4147  00DCD3  73                 	db	115	;'s'
  4148  00DCD4  61                 	db	97	;'a'
  4149  00DCD5  62                 	db	98	;'b'
  4150  00DCD6  6C                 	db	108	;'l'
  4151  00DCD7  65                 	db	101	;'e'
  4152  00DCD8  64                 	db	100	;'d'
  4153  00DCD9  0A                 	db	10
  4154  00DCDA  0D                 	db	13
  4155  00DCDB  20                 	db	32
  4156  00DCDC  20                 	db	32
  4157  00DCDD  20                 	db	32
  4158  00DCDE  44                 	db	68	;'D'
  4159  00DCDF  69                 	db	105	;'i'
  4160  00DCE0  73                 	db	115	;'s'
  4161  00DCE1  61                 	db	97	;'a'
  4162  00DCE2  62                 	db	98	;'b'
  4163  00DCE3  6C                 	db	108	;'l'
  4164  00DCE4  65                 	db	101	;'e'
  4165  00DCE5  20                 	db	32
  4166  00DCE6  4C                 	db	76	;'L'
  4167  00DCE7  6F                 	db	111	;'o'
  4168  00DCE8  61                 	db	97	;'a'
  4169  00DCE9  64                 	db	100	;'d'
  4170  00DCEA  3A                 	db	58	;':'
  4171  00DCEB  20                 	db	32
  4172  00DCEC  44                 	db	68	;'D'
  4173  00DCED  69                 	db	105	;'i'
  4174  00DCEE  73                 	db	115	;'s'
  4175  00DCEF  61                 	db	97	;'a'
  4176  00DCF0  62                 	db	98	;'b'
  4177  00DCF1  6C                 	db	108	;'l'
  4178  00DCF2  65                 	db	101	;'e'
  4179  00DCF3  73                 	db	115	;'s'
  4180  00DCF4  20                 	db	32
  4181  00DCF5  74                 	db	116	;'t'
  4182  00DCF6  68                 	db	104	;'h'
  4183  00DCF7  65                 	db	101	;'e'
  4184  00DCF8  20                 	db	32
  4185  00DCF9  6F                 	db	111	;'o'
  4186  00DCFA  75                 	db	117	;'u'
  4187  00DCFB  74                 	db	116	;'t'
  4188  00DCFC  70                 	db	112	;'p'
  4189  00DCFD  75                 	db	117	;'u'
  4190  00DCFE  74                 	db	116	;'t'
  4191  00DCFF  20                 	db	32
  4192  00DD00  54                 	db	84	;'T'
  4193  00DD01  52                 	db	82	;'R'
  4194  00DD02  49                 	db	73	;'I'
  4195  00DD03  41                 	db	65	;'A'
  4196  00DD04  43                 	db	67	;'C'
  4197  00DD05  20                 	db	32
  4198  00DD06  63                 	db	99	;'c'
  4199  00DD07  6F                 	db	111	;'o'
  4200  00DD08  6D                 	db	109	;'m'
  4201  00DD09  70                 	db	112	;'p'
  4202  00DD0A  6C                 	db	108	;'l'
  4203  00DD0B  65                 	db	101	;'e'
  4204  00DD0C  74                 	db	116	;'t'
  4205  00DD0D  65                 	db	101	;'e'
  4206  00DD0E  6C                 	db	108	;'l'
  4207  00DD0F  79                 	db	121	;'y'
  4208  00DD10  0A                 	db	10
  4209  00DD11  0D                 	db	13
  4210  00DD12  20                 	db	32
  4211  00DD13  20                 	db	32
  4212  00DD14  20                 	db	32
  4213  00DD15  4C                 	db	76	;'L'
  4214  00DD16  6F                 	db	111	;'o'
  4215  00DD17  61                 	db	97	;'a'
  4216  00DD18  64                 	db	100	;'d'
  4217  00DD19  20                 	db	32
  4218  00DD1A  45                 	db	69	;'E'
  4219  00DD1B  6E                 	db	110	;'n'
  4220  00DD1C  61                 	db	97	;'a'
  4221  00DD1D  62                 	db	98	;'b'
  4222  00DD1E  6C                 	db	108	;'l'
  4223  00DD1F  65                 	db	101	;'e'
  4224  00DD20  64                 	db	100	;'d'
  4225  00DD21  3F                 	db	63	;'?'
  4226  00DD22  3A                 	db	58	;':'
  4227  00DD23  20                 	db	32
  4228  00DD24  52                 	db	82	;'R'
  4229  00DD25  65                 	db	101	;'e'
  4230  00DD26  74                 	db	116	;'t'
  4231  00DD27  75                 	db	117	;'u'
  4232  00DD28  72                 	db	114	;'r'
  4233  00DD29  6E                 	db	110	;'n'
  4234  00DD2A  73                 	db	115	;'s'
  4235  00DD2B  20                 	db	32
  4236  00DD2C  69                 	db	105	;'i'
  4237  00DD2D  66                 	db	102	;'f'
  4238  00DD2E  20                 	db	32
  4239  00DD2F  74                 	db	116	;'t'
  4240  00DD30  68                 	db	104	;'h'
  4241  00DD31  65                 	db	101	;'e'
  4242  00DD32  20                 	db	32
  4243  00DD33  6F                 	db	111	;'o'
  4244  00DD34  75                 	db	117	;'u'
  4245  00DD35  74                 	db	116	;'t'
  4246  00DD36  70                 	db	112	;'p'
  4247  00DD37  75                 	db	117	;'u'
  4248  00DD38  74                 	db	116	;'t'
  4249  00DD39  20                 	db	32
  4250  00DD3A  6C                 	db	108	;'l'
  4251  00DD3B  6F                 	db	111	;'o'
  4252  00DD3C  61                 	db	97	;'a'
  4253  00DD3D  64                 	db	100	;'d'
  4254  00DD3E  20                 	db	32
  4255  00DD3F  69                 	db	105	;'i'
  4256  00DD40  73                 	db	115	;'s'
  4257  00DD41  20                 	db	32
  4258  00DD42  65                 	db	101	;'e'
  4259  00DD43  6E                 	db	110	;'n'
  4260  00DD44  61                 	db	97	;'a'
  4261  00DD45  62                 	db	98	;'b'
  4262  00DD46  6C                 	db	108	;'l'
  4263  00DD47  65                 	db	101	;'e'
  4264  00DD48  64                 	db	100	;'d'
  4265  00DD49  20                 	db	32
  4266  00DD4A  6F                 	db	111	;'o'
  4267  00DD4B  72                 	db	114	;'r'
  4268  00DD4C  20                 	db	32
  4269  00DD4D  64                 	db	100	;'d'
  4270  00DD4E  69                 	db	105	;'i'
  4271  00DD4F  73                 	db	115	;'s'
  4272  00DD50  61                 	db	97	;'a'
  4273  00DD51  62                 	db	98	;'b'
  4274  00DD52  6C                 	db	108	;'l'
  4275  00DD53  65                 	db	101	;'e'
  4276  00DD54  64                 	db	100	;'d'
  4277  00DD55  0A                 	db	10
  4278  00DD56  0D                 	db	13
  4279  00DD57  20                 	db	32
  4280  00DD58  20                 	db	32
  4281  00DD59  20                 	db	32
  4282  00DD5A  44                 	db	68	;'D'
  4283  00DD5B  69                 	db	105	;'i'
  4284  00DD5C  6D                 	db	109	;'m'
  4285  00DD5D  6D                 	db	109	;'m'
  4286  00DD5E  69                 	db	105	;'i'
  4287  00DD5F  6E                 	db	110	;'n'
  4288  00DD60  67                 	db	103	;'g'
  4289  00DD61  20                 	db	32
  4290  00DD62  45                 	db	69	;'E'
  4291  00DD63  6E                 	db	110	;'n'
  4292  00DD64  61                 	db	97	;'a'
  4293  00DD65  62                 	db	98	;'b'
  4294  00DD66  6C                 	db	108	;'l'
  4295  00DD67  65                 	db	101	;'e'
  4296  00DD68  64                 	db	100	;'d'
  4297  00DD69  3F                 	db	63	;'?'
  4298  00DD6A  3A                 	db	58	;':'
  4299  00DD6B  20                 	db	32
  4300  00DD6C  52                 	db	82	;'R'
  4301  00DD6D  65                 	db	101	;'e'
  4302  00DD6E  74                 	db	116	;'t'
  4303  00DD6F  75                 	db	117	;'u'
  4304  00DD70  72                 	db	114	;'r'
  4305  00DD71  6E                 	db	110	;'n'
  4306  00DD72  73                 	db	115	;'s'
  4307  00DD73  20                 	db	32
  4308  00DD74  69                 	db	105	;'i'
  4309  00DD75  66                 	db	102	;'f'
  4310  00DD76  20                 	db	32
  4311  00DD77  64                 	db	100	;'d'
  4312  00DD78  69                 	db	105	;'i'
  4313  00DD79  6D                 	db	109	;'m'
  4314  00DD7A  6D                 	db	109	;'m'
  4315  00DD7B  69                 	db	105	;'i'
  4316  00DD7C  6E                 	db	110	;'n'
  4317  00DD7D  67                 	db	103	;'g'
  4318  00DD7E  20                 	db	32
  4319  00DD7F  6F                 	db	111	;'o'
  4320  00DD80  66                 	db	102	;'f'
  4321  00DD81  20                 	db	32
  4322  00DD82  74                 	db	116	;'t'
  4323  00DD83  68                 	db	104	;'h'
  4324  00DD84  65                 	db	101	;'e'
  4325  00DD85  20                 	db	32
  4326  00DD86  6F                 	db	111	;'o'
  4327  00DD87  75                 	db	117	;'u'
  4328  00DD88  74                 	db	116	;'t'
  4329  00DD89  70                 	db	112	;'p'
  4330  00DD8A  75                 	db	117	;'u'
  4331  00DD8B  74                 	db	116	;'t'
  4332  00DD8C  20                 	db	32
  4333  00DD8D  6C                 	db	108	;'l'
  4334  00DD8E  6F                 	db	111	;'o'
  4335  00DD8F  61                 	db	97	;'a'
  4336  00DD90  64                 	db	100	;'d'
  4337  00DD91  20                 	db	32
  4338  00DD92  69                 	db	105	;'i'
  4339  00DD93  73                 	db	115	;'s'
  4340  00DD94  20                 	db	32
  4341  00DD95  65                 	db	101	;'e'
  4342  00DD96  6E                 	db	110	;'n'
  4343  00DD97  61                 	db	97	;'a'
  4344  00DD98  62                 	db	98	;'b'
  4345  00DD99  6C                 	db	108	;'l'
  4346  00DD9A  65                 	db	101	;'e'
  4347  00DD9B  64                 	db	100	;'d'
  4348  00DD9C  20                 	db	32
  4349  00DD9D  6F                 	db	111	;'o'
  4350  00DD9E  72                 	db	114	;'r'
  4351  00DD9F  20                 	db	32
  4352  00DDA0  6E                 	db	110	;'n'
  4353  00DDA1  6F                 	db	111	;'o'
  4354  00DDA2  74                 	db	116	;'t'
  4355  00DDA3  0A                 	db	10
  4356  00DDA4  0D                 	db	13
  4357  00DDA5  20                 	db	32
  4358  00DDA6  20                 	db	32
  4359  00DDA7  20                 	db	32
  4360  00DDA8  53                 	db	83	;'S'
  4361  00DDA9  65                 	db	101	;'e'
  4362  00DDAA  74                 	db	116	;'t'
  4363  00DDAB  20                 	db	32
  4364  00DDAC  44                 	db	68	;'D'
  4365  00DDAD  69                 	db	105	;'i'
  4366  00DDAE  6D                 	db	109	;'m'
  4367  00DDAF  6D                 	db	109	;'m'
  4368  00DDB0  69                 	db	105	;'i'
  4369  00DDB1  6E                 	db	110	;'n'
  4370  00DDB2  67                 	db	103	;'g'
  4371  00DDB3  20                 	db	32
  4372  00DDB4  50                 	db	80	;'P'
  4373  00DDB5  65                 	db	101	;'e'
  4374  00DDB6  72                 	db	114	;'r'
  4375  00DDB7  63                 	db	99	;'c'
  4376  00DDB8  65                 	db	101	;'e'
  4377  00DDB9  6E                 	db	110	;'n'
  4378  00DDBA  74                 	db	116	;'t'
  4379  00DDBB  61                 	db	97	;'a'
  4380  00DDBC  67                 	db	103	;'g'
  4381  00DDBD  65                 	db	101	;'e'
  4382  00DDBE  3A                 	db	58	;':'
  4383  00DDBF  20                 	db	32
  4384  00DDC0  3C                 	db	60	;'<'
  4385  00DDC1  78                 	db	120	;'x'
  4386  00DDC2  3E                 	db	62	;'>'
  4387  00DDC3  3A                 	db	58	;':'
  4388  00DDC4  20                 	db	32
  4389  00DDC5  53                 	db	83	;'S'
  4390  00DDC6  65                 	db	101	;'e'
  4391  00DDC7  74                 	db	116	;'t'
  4392  00DDC8  73                 	db	115	;'s'
  4393  00DDC9  20                 	db	32
  4394  00DDCA  74                 	db	116	;'t'
  4395  00DDCB  68                 	db	104	;'h'
  4396  00DDCC  65                 	db	101	;'e'
  4397  00DDCD  20                 	db	32
  4398  00DDCE  6F                 	db	111	;'o'
  4399  00DDCF  75                 	db	117	;'u'
  4400  00DDD0  74                 	db	116	;'t'
  4401  00DDD1  70                 	db	112	;'p'
  4402  00DDD2  75                 	db	117	;'u'
  4403  00DDD3  74                 	db	116	;'t'
  4404  00DDD4  20                 	db	32
  4405  00DDD5  64                 	db	100	;'d'
  4406  00DDD6  69                 	db	105	;'i'
  4407  00DDD7  6D                 	db	109	;'m'
  4408  00DDD8  6D                 	db	109	;'m'
  4409  00DDD9  69                 	db	105	;'i'
  4410  00DDDA  6E                 	db	110	;'n'
  4411  00DDDB  67                 	db	103	;'g'
  4412  00DDDC  20                 	db	32
  4413  00DDDD  70                 	db	112	;'p'
  4414  00DDDE  65                 	db	101	;'e'
  4415  00DDDF  72                 	db	114	;'r'
  4416  00DDE0  63                 	db	99	;'c'
  4417  00DDE1  65                 	db	101	;'e'
  4418  00DDE2  6E                 	db	110	;'n'
  4419  00DDE3  74                 	db	116	;'t'
  4420  00DDE4  61                 	db	97	;'a'
  4421  00DDE5  67                 	db	103	;'g'
  4422  00DDE6  65                 	db	101	;'e'
  4423  00DDE7  20                 	db	32
  4424  00DDE8  61                 	db	97	;'a'
  4425  00DDE9  73                 	db	115	;'s'
  4426  00DDEA  20                 	db	32
  4427  00DDEB  78                 	db	120	;'x'
  4428  00DDEC  20                 	db	32
  4429  00DDED  70                 	db	112	;'p'
  4430  00DDEE  65                 	db	101	;'e'
  4431  00DDEF  72                 	db	114	;'r'
  4432  00DDF0  63                 	db	99	;'c'
  4433  00DDF1  65                 	db	101	;'e'
  4434  00DDF2  6E                 	db	110	;'n'
  4435  00DDF3  74                 	db	116	;'t'
  4436  00DDF4  0A                 	db	10
  4437  00DDF5  0D                 	db	13
  4438  00DDF6  0A                 	db	10
  4439  00DDF7  0D                 	db	13
  4440  00DDF8  00                 	db	0
  4441  00DDF9                     STR_167:
  4442  00DDF9  4C                 	db	76	;'L'
  4443  00DDFA  69                 	db	105	;'i'
  4444  00DDFB  73                 	db	115	;'s'
  4445  00DDFC  74                 	db	116	;'t'
  4446  00DDFD  20                 	db	32
  4447  00DDFE  6F                 	db	111	;'o'
  4448  00DDFF  66                 	db	102	;'f'
  4449  00DE00  20                 	db	32
  4450  00DE01  73                 	db	115	;'s'
  4451  00DE02  75                 	db	117	;'u'
  4452  00DE03  70                 	db	112	;'p'
  4453  00DE04  70                 	db	112	;'p'
  4454  00DE05  6F                 	db	111	;'o'
  4455  00DE06  72                 	db	114	;'r'
  4456  00DE07  74                 	db	116	;'t'
  4457  00DE08  65                 	db	101	;'e'
  4458  00DE09  64                 	db	100	;'d'
  4459  00DE0A  20                 	db	32
  4460  00DE0B  44                 	db	68	;'D'
  4461  00DE0C  65                 	db	101	;'e'
  4462  00DE0D  76                 	db	118	;'v'
  4463  00DE0E  69                 	db	105	;'i'
  4464  00DE0F  63                 	db	99	;'c'
  4465  00DE10  65                 	db	101	;'e'
  4466  00DE11  20                 	db	32
  4467  00DE12  43                 	db	67	;'C'
  4468  00DE13  6F                 	db	111	;'o'
  4469  00DE14  6E                 	db	110	;'n'
  4470  00DE15  74                 	db	116	;'t'
  4471  00DE16  72                 	db	114	;'r'
  4472  00DE17  6F                 	db	111	;'o'
  4473  00DE18  6C                 	db	108	;'l'
  4474  00DE19  20                 	db	32
  4475  00DE1A  43                 	db	67	;'C'
  4476  00DE1B  6F                 	db	111	;'o'
  4477  00DE1C  6D                 	db	109	;'m'
  4478  00DE1D  6D                 	db	109	;'m'
  4479  00DE1E  61                 	db	97	;'a'
  4480  00DE1F  6E                 	db	110	;'n'
  4481  00DE20  64                 	db	100	;'d'
  4482  00DE21  73                 	db	115	;'s'
  4483  00DE22  3A                 	db	58	;':'
  4484  00DE23  0A                 	db	10
  4485  00DE24  0D                 	db	13
  4486  00DE25  20                 	db	32
  4487  00DE26  20                 	db	32
  4488  00DE27  20                 	db	32
  4489  00DE28  52                 	db	82	;'R'
  4490  00DE29  65                 	db	101	;'e'
  4491  00DE2A  73                 	db	115	;'s'
  4492  00DE2B  65                 	db	101	;'e'
  4493  00DE2C  74                 	db	116	;'t'
  4494  00DE2D  3A                 	db	58	;':'
  4495  00DE2E  20                 	db	32
  4496  00DE2F  43                 	db	67	;'C'
  4497  00DE30  6C                 	db	108	;'l'
  4498  00DE31  65                 	db	101	;'e'
  4499  00DE32  61                 	db	97	;'a'
  4500  00DE33  72                 	db	114	;'r'
  4501  00DE34  73                 	db	115	;'s'
  4502  00DE35  20                 	db	32
  4503  00DE36  74                 	db	116	;'t'
  4504  00DE37  68                 	db	104	;'h'
  4505  00DE38  65                 	db	101	;'e'
  4506  00DE39  20                 	db	32
  4507  00DE3A  74                 	db	116	;'t'
  4508  00DE3B  65                 	db	101	;'e'
  4509  00DE3C  72                 	db	114	;'r'
  4510  00DE3D  6D                 	db	109	;'m'
  4511  00DE3E  69                 	db	105	;'i'
  4512  00DE3F  6E                 	db	110	;'n'
  4513  00DE40  61                 	db	97	;'a'
  4514  00DE41  6C                 	db	108	;'l'
  4515  00DE42  20                 	db	32
  4516  00DE43  61                 	db	97	;'a'
  4517  00DE44  6E                 	db	110	;'n'
  4518  00DE45  64                 	db	100	;'d'
  4519  00DE46  20                 	db	32
  4520  00DE47  72                 	db	114	;'r'
  4521  00DE48  65                 	db	101	;'e'
  4522  00DE49  73                 	db	115	;'s'
  4523  00DE4A  65                 	db	101	;'e'
  4524  00DE4B  74                 	db	116	;'t'
  4525  00DE4C  73                 	db	115	;'s'
  4526  00DE4D  20                 	db	32
  4527  00DE4E  74                 	db	116	;'t'
  4528  00DE4F  68                 	db	104	;'h'
  4529  00DE50  65                 	db	101	;'e'
  4530  00DE51  20                 	db	32
  4531  00DE52  6D                 	db	109	;'m'
  4532  00DE53  69                 	db	105	;'i'
  4533  00DE54  63                 	db	99	;'c'
  4534  00DE55  72                 	db	114	;'r'
  4535  00DE56  6F                 	db	111	;'o'
  4536  00DE57  63                 	db	99	;'c'
  4537  00DE58  6F                 	db	111	;'o'
  4538  00DE59  6E                 	db	110	;'n'
  4539  00DE5A  74                 	db	116	;'t'
  4540  00DE5B  72                 	db	114	;'r'
  4541  00DE5C  6F                 	db	111	;'o'
  4542  00DE5D  6C                 	db	108	;'l'
  4543  00DE5E  6C                 	db	108	;'l'
  4544  00DE5F  65                 	db	101	;'e'
  4545  00DE60  72                 	db	114	;'r'
  4546  00DE61  0A                 	db	10
  4547  00DE62  0D                 	db	13
  4548  00DE63  20                 	db	32
  4549  00DE64  20                 	db	32
  4550  00DE65  20                 	db	32
  4551  00DE66  43                 	db	67	;'C'
  4552  00DE67  6C                 	db	108	;'l'
  4553  00DE68  65                 	db	101	;'e'
  4554  00DE69  61                 	db	97	;'a'
  4555  00DE6A  72                 	db	114	;'r'
  4556  00DE6B  3A                 	db	58	;':'
  4557  00DE6C  20                 	db	32
  4558  00DE6D  43                 	db	67	;'C'
  4559  00DE6E  6C                 	db	108	;'l'
  4560  00DE6F  65                 	db	101	;'e'
  4561  00DE70  61                 	db	97	;'a'
  4562  00DE71  72                 	db	114	;'r'
  4563  00DE72  73                 	db	115	;'s'
  4564  00DE73  20                 	db	32
  4565  00DE74  74                 	db	116	;'t'
  4566  00DE75  68                 	db	104	;'h'
  4567  00DE76  65                 	db	101	;'e'
  4568  00DE77  20                 	db	32
  4569  00DE78  74                 	db	116	;'t'
  4570  00DE79  65                 	db	101	;'e'
  4571  00DE7A  72                 	db	114	;'r'
  4572  00DE7B  6D                 	db	109	;'m'
  4573  00DE7C  69                 	db	105	;'i'
  4574  00DE7D  6E                 	db	110	;'n'
  4575  00DE7E  61                 	db	97	;'a'
  4576  00DE7F  6C                 	db	108	;'l'
  4577  00DE80  20                 	db	32
  4578  00DE81  62                 	db	98	;'b'
  4579  00DE82  75                 	db	117	;'u'
  4580  00DE83  74                 	db	116	;'t'
  4581  00DE84  20                 	db	32
  4582  00DE85  64                 	db	100	;'d'
  4583  00DE86  6F                 	db	111	;'o'
  4584  00DE87  65                 	db	101	;'e'
  4585  00DE88  73                 	db	115	;'s'
  4586  00DE89  6E                 	db	110	;'n'
  4587  00DE8A  27                 	db	39
  4588  00DE8B  74                 	db	116	;'t'
  4589  00DE8C  20                 	db	32
  4590  00DE8D  72                 	db	114	;'r'
  4591  00DE8E  65                 	db	101	;'e'
  4592  00DE8F  73                 	db	115	;'s'
  4593  00DE90  65                 	db	101	;'e'
  4594  00DE91  74                 	db	116	;'t'
  4595  00DE92  20                 	db	32
  4596  00DE93  74                 	db	116	;'t'
  4597  00DE94  68                 	db	104	;'h'
  4598  00DE95  65                 	db	101	;'e'
  4599  00DE96  20                 	db	32
  4600  00DE97  6D                 	db	109	;'m'
  4601  00DE98  69                 	db	105	;'i'
  4602  00DE99  63                 	db	99	;'c'
  4603  00DE9A  72                 	db	114	;'r'
  4604  00DE9B  6F                 	db	111	;'o'
  4605  00DE9C  0A                 	db	10
  4606  00DE9D  0D                 	db	13
  4607  00DE9E  20                 	db	32
  4608  00DE9F  20                 	db	32
  4609  00DEA0  20                 	db	32
  4610  00DEA1  43                 	db	67	;'C'
  4611  00DEA2  61                 	db	97	;'a'
  4612  00DEA3  75                 	db	117	;'u'
  4613  00DEA4  73                 	db	115	;'s'
  4614  00DEA5  65                 	db	101	;'e'
  4615  00DEA6  20                 	db	32
  4616  00DEA7  6F                 	db	111	;'o'
  4617  00DEA8  66                 	db	102	;'f'
  4618  00DEA9  20                 	db	32
  4619  00DEAA  52                 	db	82	;'R'
  4620  00DEAB  65                 	db	101	;'e'
  4621  00DEAC  73                 	db	115	;'s'
  4622  00DEAD  65                 	db	101	;'e'
  4623  00DEAE  74                 	db	116	;'t'
  4624  00DEAF  3F                 	db	63	;'?'
  4625  00DEB0  3A                 	db	58	;':'
  4626  00DEB1  20                 	db	32
  4627  00DEB2  52                 	db	82	;'R'
  4628  00DEB3  65                 	db	101	;'e'
  4629  00DEB4  74                 	db	116	;'t'
  4630  00DEB5  75                 	db	117	;'u'
  4631  00DEB6  72                 	db	114	;'r'
  4632  00DEB7  6E                 	db	110	;'n'
  4633  00DEB8  73                 	db	115	;'s'
  4634  00DEB9  20                 	db	32
  4635  00DEBA  74                 	db	116	;'t'
  4636  00DEBB  68                 	db	104	;'h'
  4637  00DEBC  65                 	db	101	;'e'
  4638  00DEBD  20                 	db	32
  4639  00DEBE  63                 	db	99	;'c'
  4640  00DEBF  61                 	db	97	;'a'
  4641  00DEC0  75                 	db	117	;'u'
  4642  00DEC1  73                 	db	115	;'s'
  4643  00DEC2  65                 	db	101	;'e'
  4644  00DEC3  20                 	db	32
  4645  00DEC4  6F                 	db	111	;'o'
  4646  00DEC5  66                 	db	102	;'f'
  4647  00DEC6  20                 	db	32
  4648  00DEC7  74                 	db	116	;'t'
  4649  00DEC8  68                 	db	104	;'h'
  4650  00DEC9  65                 	db	101	;'e'
  4651  00DECA  20                 	db	32
  4652  00DECB  6D                 	db	109	;'m'
  4653  00DECC  6F                 	db	111	;'o'
  4654  00DECD  73                 	db	115	;'s'
  4655  00DECE  74                 	db	116	;'t'
  4656  00DECF  20                 	db	32
  4657  00DED0  72                 	db	114	;'r'
  4658  00DED1  65                 	db	101	;'e'
  4659  00DED2  63                 	db	99	;'c'
  4660  00DED3  65                 	db	101	;'e'
  4661  00DED4  6E                 	db	110	;'n'
  4662  00DED5  74                 	db	116	;'t'
  4663  00DED6  20                 	db	32
  4664  00DED7  64                 	db	100	;'d'
  4665  00DED8  65                 	db	101	;'e'
  4666  00DED9  76                 	db	118	;'v'
  4667  00DEDA  69                 	db	105	;'i'
  4668  00DEDB  63                 	db	99	;'c'
  4669  00DEDC  65                 	db	101	;'e'
  4670  00DEDD  20                 	db	32
  4671  00DEDE  72                 	db	114	;'r'
  4672  00DEDF  65                 	db	101	;'e'
  4673  00DEE0  73                 	db	115	;'s'
  4674  00DEE1  65                 	db	101	;'e'
  4675  00DEE2  74                 	db	116	;'t'
  4676  00DEE3  0A                 	db	10
  4677  00DEE4  0D                 	db	13
  4678  00DEE5  20                 	db	32
  4679  00DEE6  20                 	db	32
  4680  00DEE7  20                 	db	32
  4681  00DEE8  2A                 	db	42
  4682  00DEE9  49                 	db	73	;'I'
  4683  00DEEA  44                 	db	68	;'D'
  4684  00DEEB  4E                 	db	78	;'N'
  4685  00DEEC  3F                 	db	63	;'?'
  4686  00DEED  3A                 	db	58	;':'
  4687  00DEEE  20                 	db	32
  4688  00DEEF  52                 	db	82	;'R'
  4689  00DEF0  65                 	db	101	;'e'
  4690  00DEF1  74                 	db	116	;'t'
  4691  00DEF2  75                 	db	117	;'u'
  4692  00DEF3  72                 	db	114	;'r'
  4693  00DEF4  6E                 	db	110	;'n'
  4694  00DEF5  73                 	db	115	;'s'
  4695  00DEF6  20                 	db	32
  4696  00DEF7  64                 	db	100	;'d'
  4697  00DEF8  65                 	db	101	;'e'
  4698  00DEF9  76                 	db	118	;'v'
  4699  00DEFA  69                 	db	105	;'i'
  4700  00DEFB  63                 	db	99	;'c'
  4701  00DEFC  65                 	db	101	;'e'
  4702  00DEFD  20                 	db	32
  4703  00DEFE  69                 	db	105	;'i'
  4704  00DEFF  64                 	db	100	;'d'
  4705  00DF00  65                 	db	101	;'e'
  4706  00DF01  6E                 	db	110	;'n'
  4707  00DF02  74                 	db	116	;'t'
  4708  00DF03  69                 	db	105	;'i'
  4709  00DF04  66                 	db	102	;'f'
  4710  00DF05  69                 	db	105	;'i'
  4711  00DF06  63                 	db	99	;'c'
  4712  00DF07  61                 	db	97	;'a'
  4713  00DF08  74                 	db	116	;'t'
  4714  00DF09  69                 	db	105	;'i'
  4715  00DF0A  6F                 	db	111	;'o'
  4716  00DF0B  6E                 	db	110	;'n'
  4717  00DF0C  20                 	db	32
  4718  00DF0D  73                 	db	115	;'s'
  4719  00DF0E  74                 	db	116	;'t'
  4720  00DF0F  72                 	db	114	;'r'
  4721  00DF10  69                 	db	105	;'i'
  4722  00DF11  6E                 	db	110	;'n'
  4723  00DF12  67                 	db	103	;'g'
  4724  00DF13  0A                 	db	10
  4725  00DF14  0D                 	db	13
  4726  00DF15  20                 	db	32
  4727  00DF16  20                 	db	32
  4728  00DF17  20                 	db	32
  4729  00DF18  44                 	db	68	;'D'
  4730  00DF19  65                 	db	101	;'e'
  4731  00DF1A  76                 	db	118	;'v'
  4732  00DF1B  69                 	db	105	;'i'
  4733  00DF1C  63                 	db	99	;'c'
  4734  00DF1D  65                 	db	101	;'e'
  4735  00DF1E  20                 	db	32
  4736  00DF1F  4F                 	db	79	;'O'
  4737  00DF20  6E                 	db	110	;'n'
  4738  00DF21  20                 	db	32
  4739  00DF22  54                 	db	84	;'T'
  4740  00DF23  69                 	db	105	;'i'
  4741  00DF24  6D                 	db	109	;'m'
  4742  00DF25  65                 	db	101	;'e'
  4743  00DF26  3F                 	db	63	;'?'
  4744  00DF27  3A                 	db	58	;':'
  4745  00DF28  20                 	db	32
  4746  00DF29  52                 	db	82	;'R'
  4747  00DF2A  65                 	db	101	;'e'
  4748  00DF2B  74                 	db	116	;'t'
  4749  00DF2C  75                 	db	117	;'u'
  4750  00DF2D  72                 	db	114	;'r'
  4751  00DF2E  6E                 	db	110	;'n'
  4752  00DF2F  73                 	db	115	;'s'
  4753  00DF30  20                 	db	32
  4754  00DF31  64                 	db	100	;'d'
  4755  00DF32  65                 	db	101	;'e'
  4756  00DF33  76                 	db	118	;'v'
  4757  00DF34  69                 	db	105	;'i'
  4758  00DF35  63                 	db	99	;'c'
  4759  00DF36  65                 	db	101	;'e'
  4760  00DF37  20                 	db	32
  4761  00DF38  6F                 	db	111	;'o'
  4762  00DF39  6E                 	db	110	;'n'
  4763  00DF3A  20                 	db	32
  4764  00DF3B  74                 	db	116	;'t'
  4765  00DF3C  69                 	db	105	;'i'
  4766  00DF3D  6D                 	db	109	;'m'
  4767  00DF3E  65                 	db	101	;'e'
  4768  00DF3F  20                 	db	32
  4769  00DF40  73                 	db	115	;'s'
  4770  00DF41  69                 	db	105	;'i'
  4771  00DF42  6E                 	db	110	;'n'
  4772  00DF43  63                 	db	99	;'c'
  4773  00DF44  65                 	db	101	;'e'
  4774  00DF45  20                 	db	32
  4775  00DF46  6C                 	db	108	;'l'
  4776  00DF47  61                 	db	97	;'a'
  4777  00DF48  73                 	db	115	;'s'
  4778  00DF49  74                 	db	116	;'t'
  4779  00DF4A  20                 	db	32
  4780  00DF4B  64                 	db	100	;'d'
  4781  00DF4C  65                 	db	101	;'e'
  4782  00DF4D  76                 	db	118	;'v'
  4783  00DF4E  69                 	db	105	;'i'
  4784  00DF4F  63                 	db	99	;'c'
  4785  00DF50  65                 	db	101	;'e'
  4786  00DF51  20                 	db	32
  4787  00DF52  72                 	db	114	;'r'
  4788  00DF53  65                 	db	101	;'e'
  4789  00DF54  73                 	db	115	;'s'
  4790  00DF55  65                 	db	101	;'e'
  4791  00DF56  74                 	db	116	;'t'
  4792  00DF57  0A                 	db	10
  4793  00DF58  0D                 	db	13
  4794  00DF59  20                 	db	32
  4795  00DF5A  20                 	db	32
  4796  00DF5B  20                 	db	32
  4797  00DF5C  44                 	db	68	;'D'
  4798  00DF5D  65                 	db	101	;'e'
  4799  00DF5E  76                 	db	118	;'v'
  4800  00DF5F  69                 	db	105	;'i'
  4801  00DF60  63                 	db	99	;'c'
  4802  00DF61  65                 	db	101	;'e'
  4803  00DF62  20                 	db	32
  4804  00DF63  49                 	db	73	;'I'
  4805  00DF64  44                 	db	68	;'D'
  4806  00DF65  3F                 	db	63	;'?'
  4807  00DF66  3A                 	db	58	;':'
  4808  00DF67  20                 	db	32
  4809  00DF68  52                 	db	82	;'R'
  4810  00DF69  65                 	db	101	;'e'
  4811  00DF6A  74                 	db	116	;'t'
  4812  00DF6B  75                 	db	117	;'u'
  4813  00DF6C  72                 	db	114	;'r'
  4814  00DF6D  6E                 	db	110	;'n'
  4815  00DF6E  73                 	db	115	;'s'
  4816  00DF6F  20                 	db	32
  4817  00DF70  64                 	db	100	;'d'
  4818  00DF71  65                 	db	101	;'e'
  4819  00DF72  76                 	db	118	;'v'
  4820  00DF73  69                 	db	105	;'i'
  4821  00DF74  63                 	db	99	;'c'
  4822  00DF75  65                 	db	101	;'e'
  4823  00DF76  20                 	db	32
  4824  00DF77  49                 	db	73	;'I'
  4825  00DF78  44                 	db	68	;'D'
  4826  00DF79  20                 	db	32
  4827  00DF7A  61                 	db	97	;'a'
  4828  00DF7B  73                 	db	115	;'s'
  4829  00DF7C  20                 	db	32
  4830  00DF7D  70                 	db	112	;'p'
  4831  00DF7E  72                 	db	114	;'r'
  4832  00DF7F  65                 	db	101	;'e'
  4833  00DF80  2D                 	db	45
  4834  00DF81  70                 	db	112	;'p'
  4835  00DF82  72                 	db	114	;'r'
  4836  00DF83  6F                 	db	111	;'o'
  4837  00DF84  67                 	db	103	;'g'
  4838  00DF85  72                 	db	114	;'r'
  4839  00DF86  61                 	db	97	;'a'
  4840  00DF87  6D                 	db	109	;'m'
  4841  00DF88  6D                 	db	109	;'m'
  4842  00DF89  65                 	db	101	;'e'
  4843  00DF8A  64                 	db	100	;'d'
  4844  00DF8B  20                 	db	32
  4845  00DF8C  69                 	db	105	;'i'
  4846  00DF8D  6E                 	db	110	;'n'
  4847  00DF8E  20                 	db	32
  4848  00DF8F  66                 	db	102	;'f'
  4849  00DF90  6C                 	db	108	;'l'
  4850  00DF91  61                 	db	97	;'a'
  4851  00DF92  73                 	db	115	;'s'
  4852  00DF93  68                 	db	104	;'h'
  4853  00DF94  20                 	db	32
  4854  00DF95  6D                 	db	109	;'m'
  4855  00DF96  65                 	db	101	;'e'
  4856  00DF97  6D                 	db	109	;'m'
  4857  00DF98  6F                 	db	111	;'o'
  4858  00DF99  72                 	db	114	;'r'
  4859  00DF9A  79                 	db	121	;'y'
  4860  00DF9B  0A                 	db	10
  4861  00DF9C  0D                 	db	13
  4862  00DF9D  20                 	db	32
  4863  00DF9E  20                 	db	32
  4864  00DF9F  20                 	db	32
  4865  00DFA0  52                 	db	82	;'R'
  4866  00DFA1  65                 	db	101	;'e'
  4867  00DFA2  76                 	db	118	;'v'
  4868  00DFA3  69                 	db	105	;'i'
  4869  00DFA4  73                 	db	115	;'s'
  4870  00DFA5  69                 	db	105	;'i'
  4871  00DFA6  6F                 	db	111	;'o'
  4872  00DFA7  6E                 	db	110	;'n'
  4873  00DFA8  20                 	db	32
  4874  00DFA9  49                 	db	73	;'I'
  4875  00DFAA  44                 	db	68	;'D'
  4876  00DFAB  3F                 	db	63	;'?'
  4877  00DFAC  3A                 	db	58	;':'
  4878  00DFAD  20                 	db	32
  4879  00DFAE  52                 	db	82	;'R'
  4880  00DFAF  65                 	db	101	;'e'
  4881  00DFB0  74                 	db	116	;'t'
  4882  00DFB1  75                 	db	117	;'u'
  4883  00DFB2  72                 	db	114	;'r'
  4884  00DFB3  6E                 	db	110	;'n'
  4885  00DFB4  73                 	db	115	;'s'
  4886  00DFB5  20                 	db	32
  4887  00DFB6  64                 	db	100	;'d'
  4888  00DFB7  65                 	db	101	;'e'
  4889  00DFB8  76                 	db	118	;'v'
  4890  00DFB9  69                 	db	105	;'i'
  4891  00DFBA  63                 	db	99	;'c'
  4892  00DFBB  65                 	db	101	;'e'
  4893  00DFBC  20                 	db	32
  4894  00DFBD  73                 	db	115	;'s'
  4895  00DFBE  69                 	db	105	;'i'
  4896  00DFBF  6C                 	db	108	;'l'
  4897  00DFC0  69                 	db	105	;'i'
  4898  00DFC1  63                 	db	99	;'c'
  4899  00DFC2  6F                 	db	111	;'o'
  4900  00DFC3  6E                 	db	110	;'n'
  4901  00DFC4  20                 	db	32
  4902  00DFC5  72                 	db	114	;'r'
  4903  00DFC6  65                 	db	101	;'e'
  4904  00DFC7  76                 	db	118	;'v'
  4905  00DFC8  69                 	db	105	;'i'
  4906  00DFC9  73                 	db	115	;'s'
  4907  00DFCA  69                 	db	105	;'i'
  4908  00DFCB  6F                 	db	111	;'o'
  4909  00DFCC  6E                 	db	110	;'n'
  4910  00DFCD  20                 	db	32
  4911  00DFCE  49                 	db	73	;'I'
  4912  00DFCF  44                 	db	68	;'D'
  4913  00DFD0  20                 	db	32
  4914  00DFD1  61                 	db	97	;'a'
  4915  00DFD2  73                 	db	115	;'s'
  4916  00DFD3  20                 	db	32
  4917  00DFD4  70                 	db	112	;'p'
  4918  00DFD5  72                 	db	114	;'r'
  4919  00DFD6  65                 	db	101	;'e'
  4920  00DFD7  2D                 	db	45
  4921  00DFD8  70                 	db	112	;'p'
  4922  00DFD9  72                 	db	114	;'r'
  4923  00DFDA  6F                 	db	111	;'o'
  4924  00DFDB  67                 	db	103	;'g'
  4925  00DFDC  72                 	db	114	;'r'
  4926  00DFDD  61                 	db	97	;'a'
  4927  00DFDE  6D                 	db	109	;'m'
  4928  00DFDF  6D                 	db	109	;'m'
  4929  00DFE0  65                 	db	101	;'e'
  4930  00DFE1  64                 	db	100	;'d'
  4931  00DFE2  20                 	db	32
  4932  00DFE3  69                 	db	105	;'i'
  4933  00DFE4  6E                 	db	110	;'n'
  4934  00DFE5  20                 	db	32
  4935  00DFE6  66                 	db	102	;'f'
  4936  00DFE7  6C                 	db	108	;'l'
  4937  00DFE8  61                 	db	97	;'a'
  4938  00DFE9  73                 	db	115	;'s'
  4939  00DFEA  68                 	db	104	;'h'
  4940  00DFEB  20                 	db	32
  4941  00DFEC  6D                 	db	109	;'m'
  4942  00DFED  65                 	db	101	;'e'
  4943  00DFEE  6D                 	db	109	;'m'
  4944  00DFEF  6F                 	db	111	;'o'
  4945  00DFF0  72                 	db	114	;'r'
  4946  00DFF1  79                 	db	121	;'y'
  4947  00DFF2  0A                 	db	10
  4948  00DFF3  0D                 	db	13
  4949  00DFF4  20                 	db	32
  4950  00DFF5  20                 	db	32
  4951  00DFF6  20                 	db	32
  4952  00DFF7  55                 	db	85	;'U'
  4953  00DFF8  73                 	db	115	;'s'
  4954  00DFF9  65                 	db	101	;'e'
  4955  00DFFA  72                 	db	114	;'r'
  4956  00DFFB  20                 	db	32
  4957  00DFFC  49                 	db	73	;'I'
  4958  00DFFD  44                 	db	68	;'D'
  4959  00DFFE  73                 	db	115	;'s'
  4960  00DFFF  3F                 	db	63	;'?'
  4961  00E000  3A                 	db	58	;':'
  4962  00E001  20                 	db	32
  4963  00E002  52                 	db	82	;'R'
  4964  00E003  65                 	db	101	;'e'
  4965  00E004  74                 	db	116	;'t'
  4966  00E005  75                 	db	117	;'u'
  4967  00E006  72                 	db	114	;'r'
  4968  00E007  6E                 	db	110	;'n'
  4969  00E008  73                 	db	115	;'s'
  4970  00E009  20                 	db	32
  4971  00E00A  61                 	db	97	;'a'
  4972  00E00B  20                 	db	32
  4973  00E00C  6C                 	db	108	;'l'
  4974  00E00D  69                 	db	105	;'i'
  4975  00E00E  73                 	db	115	;'s'
  4976  00E00F  74                 	db	116	;'t'
  4977  00E010  20                 	db	32
  4978  00E011  6F                 	db	111	;'o'
  4979  00E012  66                 	db	102	;'f'
  4980  00E013  20                 	db	32
  4981  00E014  75                 	db	117	;'u'
  4982  00E015  73                 	db	115	;'s'
  4983  00E016  65                 	db	101	;'e'
  4984  00E017  72                 	db	114	;'r'
  4985  00E018  20                 	db	32
  4986  00E019  49                 	db	73	;'I'
  4987  00E01A  44                 	db	68	;'D'
  4988  00E01B  73                 	db	115	;'s'
  4989  00E01C  20                 	db	32
  4990  00E01D  28                 	db	40
  4991  00E01E  64                 	db	100	;'d'
  4992  00E01F  69                 	db	105	;'i'
  4993  00E020  73                 	db	115	;'s'
  4994  00E021  70                 	db	112	;'p'
  4995  00E022  6C                 	db	108	;'l'
  4996  00E023  61                 	db	97	;'a'
  4997  00E024  79                 	db	121	;'y'
  4998  00E025  65                 	db	101	;'e'
  4999  00E026  64                 	db	100	;'d'
  5000  00E027  20                 	db	32
  5001  00E028  69                 	db	105	;'i'
  5002  00E029  6E                 	db	110	;'n'
  5003  00E02A  20                 	db	32
  5004  00E02B  68                 	db	104	;'h'
  5005  00E02C  65                 	db	101	;'e'
  5006  00E02D  78                 	db	120	;'x'
  5007  00E02E  29                 	db	41
  5008  00E02F  20                 	db	32
  5009  00E030  61                 	db	97	;'a'
  5010  00E031  73                 	db	115	;'s'
  5011  00E032  20                 	db	32
  5012  00E033  73                 	db	115	;'s'
  5013  00E034  74                 	db	116	;'t'
  5014  00E035  6F                 	db	111	;'o'
  5015  00E036  72                 	db	114	;'r'
  5016  00E037  65                 	db	101	;'e'
  5017  00E038  64                 	db	100	;'d'
  5018  00E039  20                 	db	32
  5019  00E03A  69                 	db	105	;'i'
  5020  00E03B  6E                 	db	110	;'n'
  5021  00E03C  20                 	db	32
  5022  00E03D  66                 	db	102	;'f'
  5023  00E03E  6C                 	db	108	;'l'
  5024  00E03F  61                 	db	97	;'a'
  5025  00E040  73                 	db	115	;'s'
  5026  00E041  68                 	db	104	;'h'
  5027  00E042  20                 	db	32
  5028  00E043  6D                 	db	109	;'m'
  5029  00E044  65                 	db	101	;'e'
  5030  00E045  6D                 	db	109	;'m'
  5031  00E046  6F                 	db	111	;'o'
  5032  00E047  72                 	db	114	;'r'
  5033  00E048  79                 	db	121	;'y'
  5034  00E049  0A                 	db	10
  5035  00E04A  0D                 	db	13
  5036  00E04B  20                 	db	32
  5037  00E04C  20                 	db	32
  5038  00E04D  20                 	db	32
  5039  00E04E  41                 	db	65	;'A'
  5040  00E04F  44                 	db	68	;'D'
  5041  00E050  43                 	db	67	;'C'
  5042  00E051  20                 	db	32
  5043  00E052  45                 	db	69	;'E'
  5044  00E053  72                 	db	114	;'r'
  5045  00E054  72                 	db	114	;'r'
  5046  00E055  6F                 	db	111	;'o'
  5047  00E056  72                 	db	114	;'r'
  5048  00E057  73                 	db	115	;'s'
  5049  00E058  3F                 	db	63	;'?'
  5050  00E059  3A                 	db	58	;':'
  5051  00E05A  20                 	db	32
  5052  00E05B  52                 	db	82	;'R'
  5053  00E05C  65                 	db	101	;'e'
  5054  00E05D  74                 	db	116	;'t'
  5055  00E05E  75                 	db	117	;'u'
  5056  00E05F  72                 	db	114	;'r'
  5057  00E060  6E                 	db	110	;'n'
  5058  00E061  73                 	db	115	;'s'
  5059  00E062  20                 	db	32
  5060  00E063  74                 	db	116	;'t'
  5061  00E064  68                 	db	104	;'h'
  5062  00E065  65                 	db	101	;'e'
  5063  00E066  20                 	db	32
  5064  00E067  63                 	db	99	;'c'
  5065  00E068  61                 	db	97	;'a'
  5066  00E069  75                 	db	117	;'u'
  5067  00E06A  73                 	db	115	;'s'
  5068  00E06B  65                 	db	101	;'e'
  5069  00E06C  20                 	db	32
  5070  00E06D  6F                 	db	111	;'o'
  5071  00E06E  66                 	db	102	;'f'
  5072  00E06F  20                 	db	32
  5073  00E070  61                 	db	97	;'a'
  5074  00E071  6E                 	db	110	;'n'
  5075  00E072  20                 	db	32
  5076  00E073  41                 	db	65	;'A'
  5077  00E074  44                 	db	68	;'D'
  5078  00E075  43                 	db	67	;'C'
  5079  00E076  20                 	db	32
  5080  00E077  65                 	db	101	;'e'
  5081  00E078  72                 	db	114	;'r'
  5082  00E079  72                 	db	114	;'r'
  5083  00E07A  6F                 	db	111	;'o'
  5084  00E07B  72                 	db	114	;'r'
  5085  00E07C  20                 	db	32
  5086  00E07D  69                 	db	105	;'i'
  5087  00E07E  66                 	db	102	;'f'
  5088  00E07F  20                 	db	32
  5089  00E080  61                 	db	97	;'a'
  5090  00E081  6E                 	db	110	;'n'
  5091  00E082  20                 	db	32
  5092  00E083  65                 	db	101	;'e'
  5093  00E084  72                 	db	114	;'r'
  5094  00E085  72                 	db	114	;'r'
  5095  00E086  6F                 	db	111	;'o'
  5096  00E087  72                 	db	114	;'r'
  5097  00E088  20                 	db	32
  5098  00E089  6F                 	db	111	;'o'
  5099  00E08A  63                 	db	99	;'c'
  5100  00E08B  63                 	db	99	;'c'
  5101  00E08C  75                 	db	117	;'u'
  5102  00E08D  72                 	db	114	;'r'
  5103  00E08E  72                 	db	114	;'r'
  5104  00E08F  65                 	db	101	;'e'
  5105  00E090  64                 	db	100	;'d'
  5106  00E091  0A                 	db	10
  5107  00E092  0D                 	db	13
  5108  00E093  20                 	db	32
  5109  00E094  20                 	db	32
  5110  00E095  20                 	db	32
  5111  00E096  43                 	db	67	;'C'
  5112  00E097  6C                 	db	108	;'l'
  5113  00E098  65                 	db	101	;'e'
  5114  00E099  61                 	db	97	;'a'
  5115  00E09A  72                 	db	114	;'r'
  5116  00E09B  20                 	db	32
  5117  00E09C  41                 	db	65	;'A'
  5118  00E09D  44                 	db	68	;'D'
  5119  00E09E  43                 	db	67	;'C'
  5120  00E09F  20                 	db	32
  5121  00E0A0  45                 	db	69	;'E'
  5122  00E0A1  72                 	db	114	;'r'
  5123  00E0A2  72                 	db	114	;'r'
  5124  00E0A3  6F                 	db	111	;'o'
  5125  00E0A4  72                 	db	114	;'r'
  5126  00E0A5  73                 	db	115	;'s'
  5127  00E0A6  3A                 	db	58	;':'
  5128  00E0A7  20                 	db	32
  5129  00E0A8  43                 	db	67	;'C'
  5130  00E0A9  6C                 	db	108	;'l'
  5131  00E0AA  65                 	db	101	;'e'
  5132  00E0AB  61                 	db	97	;'a'
  5133  00E0AC  72                 	db	114	;'r'
  5134  00E0AD  73                 	db	115	;'s'
  5135  00E0AE  20                 	db	32
  5136  00E0AF  74                 	db	116	;'t'
  5137  00E0B0  68                 	db	104	;'h'
  5138  00E0B1  65                 	db	101	;'e'
  5139  00E0B2  20                 	db	32
  5140  00E0B3  41                 	db	65	;'A'
  5141  00E0B4  44                 	db	68	;'D'
  5142  00E0B5  43                 	db	67	;'C'
  5143  00E0B6  20                 	db	32
  5144  00E0B7  65                 	db	101	;'e'
  5145  00E0B8  72                 	db	114	;'r'
  5146  00E0B9  72                 	db	114	;'r'
  5147  00E0BA  6F                 	db	111	;'o'
  5148  00E0BB  72                 	db	114	;'r'
  5149  00E0BC  20                 	db	32
  5150  00E0BD  61                 	db	97	;'a'
  5151  00E0BE  6E                 	db	110	;'n'
  5152  00E0BF  64                 	db	100	;'d'
  5153  00E0C0  20                 	db	32
  5154  00E0C1  72                 	db	114	;'r'
  5155  00E0C2  65                 	db	101	;'e'
  5156  00E0C3  73                 	db	115	;'s'
  5157  00E0C4  75                 	db	117	;'u'
  5158  00E0C5  6D                 	db	109	;'m'
  5159  00E0C6  65                 	db	101	;'e'
  5160  00E0C7  73                 	db	115	;'s'
  5161  00E0C8  20                 	db	32
  5162  00E0C9  41                 	db	65	;'A'
  5163  00E0CA  44                 	db	68	;'D'
  5164  00E0CB  43                 	db	67	;'C'
  5165  00E0CC  20                 	db	32
  5166  00E0CD  63                 	db	99	;'c'
  5167  00E0CE  6F                 	db	111	;'o'
  5168  00E0CF  6E                 	db	110	;'n'
  5169  00E0D0  76                 	db	118	;'v'
  5170  00E0D1  65                 	db	101	;'e'
  5171  00E0D2  72                 	db	114	;'r'
  5172  00E0D3  73                 	db	115	;'s'
  5173  00E0D4  69                 	db	105	;'i'
  5174  00E0D5  6F                 	db	111	;'o'
  5175  00E0D6  6E                 	db	110	;'n'
  5176  00E0D7  73                 	db	115	;'s'
  5177  00E0D8  0A                 	db	10
  5178  00E0D9  0D                 	db	13
  5179  00E0DA  20                 	db	32
  5180  00E0DB  20                 	db	32
  5181  00E0DC  20                 	db	32
  5182  00E0DD  43                 	db	67	;'C'
  5183  00E0DE  6F                 	db	111	;'o'
  5184  00E0DF  6D                 	db	109	;'m'
  5185  00E0E0  6D                 	db	109	;'m'
  5186  00E0E1  20                 	db	32
  5187  00E0E2  45                 	db	69	;'E'
  5188  00E0E3  72                 	db	114	;'r'
  5189  00E0E4  72                 	db	114	;'r'
  5190  00E0E5  6F                 	db	111	;'o'
  5191  00E0E6  72                 	db	114	;'r'
  5192  00E0E7  73                 	db	115	;'s'
  5193  00E0E8  3F                 	db	63	;'?'
  5194  00E0E9  3A                 	db	58	;':'
  5195  00E0EA  20                 	db	32
  5196  00E0EB  52                 	db	82	;'R'
  5197  00E0EC  65                 	db	101	;'e'
  5198  00E0ED  74                 	db	116	;'t'
  5199  00E0EE  75                 	db	117	;'u'
  5200  00E0EF  72                 	db	114	;'r'
  5201  00E0F0  6E                 	db	110	;'n'
  5202  00E0F1  73                 	db	115	;'s'
  5203  00E0F2  20                 	db	32
  5204  00E0F3  69                 	db	105	;'i'
  5205  00E0F4  66                 	db	102	;'f'
  5206  00E0F5  20                 	db	32
  5207  00E0F6  61                 	db	97	;'a'
  5208  00E0F7  20                 	db	32
  5209  00E0F8  63                 	db	99	;'c'
  5210  00E0F9  6F                 	db	111	;'o'
  5211  00E0FA  6D                 	db	109	;'m'
  5212  00E0FB  6D                 	db	109	;'m'
  5213  00E0FC  75                 	db	117	;'u'
  5214  00E0FD  6E                 	db	110	;'n'
  5215  00E0FE  69                 	db	105	;'i'
  5216  00E0FF  63                 	db	99	;'c'
  5217  00E100  61                 	db	97	;'a'
  5218  00E101  74                 	db	116	;'t'
  5219  00E102  69                 	db	105	;'i'
  5220  00E103  6F                 	db	111	;'o'
  5221  00E104  6E                 	db	110	;'n'
  5222  00E105  73                 	db	115	;'s'
  5223  00E106  20                 	db	32
  5224  00E107  65                 	db	101	;'e'
  5225  00E108  72                 	db	114	;'r'
  5226  00E109  72                 	db	114	;'r'
  5227  00E10A  6F                 	db	111	;'o'
  5228  00E10B  72                 	db	114	;'r'
  5229  00E10C  20                 	db	32
  5230  00E10D  68                 	db	104	;'h'
  5231  00E10E  61                 	db	97	;'a'
  5232  00E10F  73                 	db	115	;'s'
  5233  00E110  20                 	db	32
  5234  00E111  6F                 	db	111	;'o'
  5235  00E112  63                 	db	99	;'c'
  5236  00E113  63                 	db	99	;'c'
  5237  00E114  75                 	db	117	;'u'
  5238  00E115  72                 	db	114	;'r'
  5239  00E116  72                 	db	114	;'r'
  5240  00E117  65                 	db	101	;'e'
  5241  00E118  64                 	db	100	;'d'
  5242  00E119  0A                 	db	10
  5243  00E11A  0D                 	db	13
  5244  00E11B  20                 	db	32
  5245  00E11C  20                 	db	32
  5246  00E11D  20                 	db	32
  5247  00E11E  43                 	db	67	;'C'
  5248  00E11F  6C                 	db	108	;'l'
  5249  00E120  65                 	db	101	;'e'
  5250  00E121  61                 	db	97	;'a'
  5251  00E122  72                 	db	114	;'r'
  5252  00E123  20                 	db	32
  5253  00E124  43                 	db	67	;'C'
  5254  00E125  6F                 	db	111	;'o'
  5255  00E126  6D                 	db	109	;'m'
  5256  00E127  6D                 	db	109	;'m'
  5257  00E128  20                 	db	32
  5258  00E129  45                 	db	69	;'E'
  5259  00E12A  72                 	db	114	;'r'
  5260  00E12B  72                 	db	114	;'r'
  5261  00E12C  6F                 	db	111	;'o'
  5262  00E12D  72                 	db	114	;'r'
  5263  00E12E  73                 	db	115	;'s'
  5264  00E12F  3A                 	db	58	;':'
  5265  00E130  20                 	db	32
  5266  00E131  43                 	db	67	;'C'
  5267  00E132  6C                 	db	108	;'l'
  5268  00E133  65                 	db	101	;'e'
  5269  00E134  61                 	db	97	;'a'
  5270  00E135  72                 	db	114	;'r'
  5271  00E136  73                 	db	115	;'s'
  5272  00E137  20                 	db	32
  5273  00E138  74                 	db	116	;'t'
  5274  00E139  68                 	db	104	;'h'
  5275  00E13A  65                 	db	101	;'e'
  5276  00E13B  20                 	db	32
  5277  00E13C  63                 	db	99	;'c'
  5278  00E13D  6F                 	db	111	;'o'
  5279  00E13E  6D                 	db	109	;'m'
  5280  00E13F  6D                 	db	109	;'m'
  5281  00E140  75                 	db	117	;'u'
  5282  00E141  6E                 	db	110	;'n'
  5283  00E142  69                 	db	105	;'i'
  5284  00E143  63                 	db	99	;'c'
  5285  00E144  61                 	db	97	;'a'
  5286  00E145  74                 	db	116	;'t'
  5287  00E146  69                 	db	105	;'i'
  5288  00E147  6F                 	db	111	;'o'
  5289  00E148  6E                 	db	110	;'n'
  5290  00E149  73                 	db	115	;'s'
  5291  00E14A  20                 	db	32
  5292  00E14B  65                 	db	101	;'e'
  5293  00E14C  72                 	db	114	;'r'
  5294  00E14D  72                 	db	114	;'r'
  5295  00E14E  6F                 	db	111	;'o'
  5296  00E14F  72                 	db	114	;'r'
  5297  00E150  0A                 	db	10
  5298  00E151  0D                 	db	13
  5299  00E152  20                 	db	32
  5300  00E153  20                 	db	32
  5301  00E154  20                 	db	32
  5302  00E155  43                 	db	67	;'C'
  5303  00E156  6C                 	db	108	;'l'
  5304  00E157  65                 	db	101	;'e'
  5305  00E158  61                 	db	97	;'a'
  5306  00E159  72                 	db	114	;'r'
  5307  00E15A  20                 	db	32
  5308  00E15B  4D                 	db	77	;'M'
  5309  00E15C  61                 	db	97	;'a'
  5310  00E15D  78                 	db	120	;'x'
  5311  00E15E  20                 	db	32
  5312  00E15F  56                 	db	86	;'V'
  5313  00E160  61                 	db	97	;'a'
  5314  00E161  6C                 	db	108	;'l'
  5315  00E162  75                 	db	117	;'u'
  5316  00E163  65                 	db	101	;'e'
  5317  00E164  73                 	db	115	;'s'
  5318  00E165  3A                 	db	58	;':'
  5319  00E166  20                 	db	32
  5320  00E167  45                 	db	69	;'E'
  5321  00E168  72                 	db	114	;'r'
  5322  00E169  61                 	db	97	;'a'
  5323  00E16A  73                 	db	115	;'s'
  5324  00E16B  65                 	db	101	;'e'
  5325  00E16C  73                 	db	115	;'s'
  5326  00E16D  20                 	db	32
  5327  00E16E  6D                 	db	109	;'m'
  5328  00E16F  61                 	db	97	;'a'
  5329  00E170  78                 	db	120	;'x'
  5330  00E171  69                 	db	105	;'i'
  5331  00E172  6D                 	db	109	;'m'
  5332  00E173  75                 	db	117	;'u'
  5333  00E174  6D                 	db	109	;'m'
  5334  00E175  20                 	db	32
  5335  00E176  72                 	db	114	;'r'
  5336  00E177  65                 	db	101	;'e'
  5337  00E178  63                 	db	99	;'c'
  5338  00E179  6F                 	db	111	;'o'
  5339  00E17A  72                 	db	114	;'r'
  5340  00E17B  64                 	db	100	;'d'
  5341  00E17C  65                 	db	101	;'e'
  5342  00E17D  64                 	db	100	;'d'
  5343  00E17E  20                 	db	32
  5344  00E17F  76                 	db	118	;'v'
  5345  00E180  61                 	db	97	;'a'
  5346  00E181  6C                 	db	108	;'l'
  5347  00E182  75                 	db	117	;'u'
  5348  00E183  65                 	db	101	;'e'
  5349  00E184  73                 	db	115	;'s'
  5350  00E185  20                 	db	32
  5351  00E186  66                 	db	102	;'f'
  5352  00E187  72                 	db	114	;'r'
  5353  00E188  6F                 	db	111	;'o'
  5354  00E189  6D                 	db	109	;'m'
  5355  00E18A  20                 	db	32
  5356  00E18B  45                 	db	69	;'E'
  5357  00E18C  45                 	db	69	;'E'
  5358  00E18D  50                 	db	80	;'P'
  5359  00E18E  52                 	db	82	;'R'
  5360  00E18F  4F                 	db	79	;'O'
  5361  00E190  4D                 	db	77	;'M'
  5362  00E191  0A                 	db	10
  5363  00E192  0D                 	db	13
  5364  00E193  20                 	db	32
  5365  00E194  20                 	db	32
  5366  00E195  20                 	db	32
  5367  00E196  48                 	db	72	;'H'
  5368  00E197  65                 	db	101	;'e'
  5369  00E198  6C                 	db	108	;'l'
  5370  00E199  70                 	db	112	;'p'
  5371  00E19A  3A                 	db	58	;':'
  5372  00E19B  20                 	db	32
  5373  00E19C  54                 	db	84	;'T'
  5374  00E19D  68                 	db	104	;'h'
  5375  00E19E  69                 	db	105	;'i'
  5376  00E19F  73                 	db	115	;'s'
  5377  00E1A0  20                 	db	32
  5378  00E1A1  6D                 	db	109	;'m'
  5379  00E1A2  65                 	db	101	;'e'
  5380  00E1A3  73                 	db	115	;'s'
  5381  00E1A4  73                 	db	115	;'s'
  5382  00E1A5  61                 	db	97	;'a'
  5383  00E1A6  67                 	db	103	;'g'
  5384  00E1A7  65                 	db	101	;'e'
  5385  00E1A8  2C                 	db	44
  5386  00E1A9  20                 	db	32
  5387  00E1AA  6C                 	db	108	;'l'
  5388  00E1AB  69                 	db	105	;'i'
  5389  00E1AC  73                 	db	115	;'s'
  5390  00E1AD  74                 	db	116	;'t'
  5391  00E1AE  73                 	db	115	;'s'
  5392  00E1AF  20                 	db	32
  5393  00E1B0  73                 	db	115	;'s'
  5394  00E1B1  75                 	db	117	;'u'
  5395  00E1B2  70                 	db	112	;'p'
  5396  00E1B3  70                 	db	112	;'p'
  5397  00E1B4  6F                 	db	111	;'o'
  5398  00E1B5  72                 	db	114	;'r'
  5399  00E1B6  74                 	db	116	;'t'
  5400  00E1B7  65                 	db	101	;'e'
  5401  00E1B8  64                 	db	100	;'d'
  5402  00E1B9  20                 	db	32
  5403  00E1BA  63                 	db	99	;'c'
  5404  00E1BB  6F                 	db	111	;'o'
  5405  00E1BC  6D                 	db	109	;'m'
  5406  00E1BD  6D                 	db	109	;'m'
  5407  00E1BE  61                 	db	97	;'a'
  5408  00E1BF  6E                 	db	110	;'n'
  5409  00E1C0  64                 	db	100	;'d'
  5410  00E1C1  73                 	db	115	;'s'
  5411  00E1C2  0A                 	db	10
  5412  00E1C3  0D                 	db	13
  5413  00E1C4  0A                 	db	10
  5414  00E1C5  0D                 	db	13
  5415  00E1C6  00                 	db	0
  5416  00E1C7                     STR_171:
  5417  00E1C7  4C                 	db	76	;'L'
  5418  00E1C8  69                 	db	105	;'i'
  5419  00E1C9  73                 	db	115	;'s'
  5420  00E1CA  74                 	db	116	;'t'
  5421  00E1CB  20                 	db	32
  5422  00E1CC  6F                 	db	111	;'o'
  5423  00E1CD  66                 	db	102	;'f'
  5424  00E1CE  20                 	db	32
  5425  00E1CF  73                 	db	115	;'s'
  5426  00E1D0  75                 	db	117	;'u'
  5427  00E1D1  70                 	db	112	;'p'
  5428  00E1D2  70                 	db	112	;'p'
  5429  00E1D3  6F                 	db	111	;'o'
  5430  00E1D4  72                 	db	114	;'r'
  5431  00E1D5  74                 	db	116	;'t'
  5432  00E1D6  65                 	db	101	;'e'
  5433  00E1D7  64                 	db	100	;'d'
  5434  00E1D8  20                 	db	32
  5435  00E1D9  50                 	db	80	;'P'
  5436  00E1DA  72                 	db	114	;'r'
  5437  00E1DB  69                 	db	105	;'i'
  5438  00E1DC  6D                 	db	109	;'m'
  5439  00E1DD  61                 	db	97	;'a'
  5440  00E1DE  72                 	db	114	;'r'
  5441  00E1DF  79                 	db	121	;'y'
  5442  00E1E0  20                 	db	32
  5443  00E1E1  4D                 	db	77	;'M'
  5444  00E1E2  65                 	db	101	;'e'
  5445  00E1E3  61                 	db	97	;'a'
  5446  00E1E4  73                 	db	115	;'s'
  5447  00E1E5  75                 	db	117	;'u'
  5448  00E1E6  72                 	db	114	;'r'
  5449  00E1E7  65                 	db	101	;'e'
  5450  00E1E8  6D                 	db	109	;'m'
  5451  00E1E9  65                 	db	101	;'e'
  5452  00E1EA  6E                 	db	110	;'n'
  5453  00E1EB  74                 	db	116	;'t'
  5454  00E1EC  20                 	db	32
  5455  00E1ED  43                 	db	67	;'C'
  5456  00E1EE  6F                 	db	111	;'o'
  5457  00E1EF  6D                 	db	109	;'m'
  5458  00E1F0  6D                 	db	109	;'m'
  5459  00E1F1  61                 	db	97	;'a'
  5460  00E1F2  6E                 	db	110	;'n'
  5461  00E1F3  64                 	db	100	;'d'
  5462  00E1F4  73                 	db	115	;'s'
  5463  00E1F5  3A                 	db	58	;':'
  5464  00E1F6  0A                 	db	10
  5465  00E1F7  0D                 	db	13
  5466  00E1F8  20                 	db	32
  5467  00E1F9  20                 	db	32
  5468  00E1FA  20                 	db	32
  5469  00E1FB  4D                 	db	77	;'M'
  5470  00E1FC  65                 	db	101	;'e'
  5471  00E1FD  61                 	db	97	;'a'
  5472  00E1FE  73                 	db	115	;'s'
  5473  00E1FF  75                 	db	117	;'u'
  5474  00E200  72                 	db	114	;'r'
  5475  00E201  65                 	db	101	;'e'
  5476  00E202  20                 	db	32
  5477  00E203  44                 	db	68	;'D'
  5478  00E204  65                 	db	101	;'e'
  5479  00E205  74                 	db	116	;'t'
  5480  00E206  65                 	db	101	;'e'
  5481  00E207  63                 	db	99	;'c'
  5482  00E208  74                 	db	116	;'t'
  5483  00E209  65                 	db	101	;'e'
  5484  00E20A  64                 	db	100	;'d'
  5485  00E20B  20                 	db	32
  5486  00E20C  43                 	db	67	;'C'
  5487  00E20D  75                 	db	117	;'u'
  5488  00E20E  72                 	db	114	;'r'
  5489  00E20F  72                 	db	114	;'r'
  5490  00E210  65                 	db	101	;'e'
  5491  00E211  6E                 	db	110	;'n'
  5492  00E212  74                 	db	116	;'t'
  5493  00E213  3F                 	db	63	;'?'
  5494  00E214  3A                 	db	58	;':'
  5495  00E215  20                 	db	32
  5496  00E216  52                 	db	82	;'R'
  5497  00E217  65                 	db	101	;'e'
  5498  00E218  74                 	db	116	;'t'
  5499  00E219  75                 	db	117	;'u'
  5500  00E21A  72                 	db	114	;'r'
  5501  00E21B  6E                 	db	110	;'n'
  5502  00E21C  73                 	db	115	;'s'
  5503  00E21D  20                 	db	32
  5504  00E21E  6D                 	db	109	;'m'
  5505  00E21F  65                 	db	101	;'e'
  5506  00E220  61                 	db	97	;'a'
  5507  00E221  73                 	db	115	;'s'
  5508  00E222  75                 	db	117	;'u'
  5509  00E223  72                 	db	114	;'r'
  5510  00E224  65                 	db	101	;'e'
  5511  00E225  64                 	db	100	;'d'
  5512  00E226  20                 	db	32
  5513  00E227  6F                 	db	111	;'o'
  5514  00E228  75                 	db	117	;'u'
  5515  00E229  74                 	db	116	;'t'
  5516  00E22A  70                 	db	112	;'p'
  5517  00E22B  75                 	db	117	;'u'
  5518  00E22C  74                 	db	116	;'t'
  5519  00E22D  20                 	db	32
  5520  00E22E  63                 	db	99	;'c'
  5521  00E22F  75                 	db	117	;'u'
  5522  00E230  72                 	db	114	;'r'
  5523  00E231  72                 	db	114	;'r'
  5524  00E232  65                 	db	101	;'e'
  5525  00E233  6E                 	db	110	;'n'
  5526  00E234  74                 	db	116	;'t'
  5527  00E235  20                 	db	32
  5528  00E236  69                 	db	105	;'i'
  5529  00E237  6E                 	db	110	;'n'
  5530  00E238  20                 	db	32
  5531  00E239  61                 	db	97	;'a'
  5532  00E23A  6D                 	db	109	;'m'
  5533  00E23B  70                 	db	112	;'p'
  5534  00E23C  73                 	db	115	;'s'
  5535  00E23D  20                 	db	32
  5536  00E23E  61                 	db	97	;'a'
  5537  00E23F  73                 	db	115	;'s'
  5538  00E240  20                 	db	32
  5539  00E241  73                 	db	115	;'s'
  5540  00E242  65                 	db	101	;'e'
  5541  00E243  65                 	db	101	;'e'
  5542  00E244  6E                 	db	110	;'n'
  5543  00E245  20                 	db	32
  5544  00E246  62                 	db	98	;'b'
  5545  00E247  79                 	db	121	;'y'
  5546  00E248  20                 	db	32
  5547  00E249  41                 	db	65	;'A'
  5548  00E24A  44                 	db	68	;'D'
  5549  00E24B  43                 	db	67	;'C'
  5550  00E24C  0A                 	db	10
  5551  00E24D  0D                 	db	13
  5552  00E24E  20                 	db	32
  5553  00E24F  20                 	db	32
  5554  00E250  20                 	db	32
  5555  00E251  4D                 	db	77	;'M'
  5556  00E252  65                 	db	101	;'e'
  5557  00E253  61                 	db	97	;'a'
  5558  00E254  73                 	db	115	;'s'
  5559  00E255  75                 	db	117	;'u'
  5560  00E256  72                 	db	114	;'r'
  5561  00E257  65                 	db	101	;'e'
  5562  00E258  20                 	db	32
  5563  00E259  52                 	db	82	;'R'
  5564  00E25A  4D                 	db	77	;'M'
  5565  00E25B  53                 	db	83	;'S'
  5566  00E25C  20                 	db	32
  5567  00E25D  43                 	db	67	;'C'
  5568  00E25E  75                 	db	117	;'u'
  5569  00E25F  72                 	db	114	;'r'
  5570  00E260  72                 	db	114	;'r'
  5571  00E261  65                 	db	101	;'e'
  5572  00E262  6E                 	db	110	;'n'
  5573  00E263  74                 	db	116	;'t'
  5574  00E264  3F                 	db	63	;'?'
  5575  00E265  3A                 	db	58	;':'
  5576  00E266  20                 	db	32
  5577  00E267  52                 	db	82	;'R'
  5578  00E268  65                 	db	101	;'e'
  5579  00E269  74                 	db	116	;'t'
  5580  00E26A  75                 	db	117	;'u'
  5581  00E26B  72                 	db	114	;'r'
  5582  00E26C  6E                 	db	110	;'n'
  5583  00E26D  73                 	db	115	;'s'
  5584  00E26E  20                 	db	32
  5585  00E26F  74                 	db	116	;'t'
  5586  00E270  68                 	db	104	;'h'
  5587  00E271  65                 	db	101	;'e'
  5588  00E272  20                 	db	32
  5589  00E273  63                 	db	99	;'c'
  5590  00E274  61                 	db	97	;'a'
  5591  00E275  6C                 	db	108	;'l'
  5592  00E276  63                 	db	99	;'c'
  5593  00E277  75                 	db	117	;'u'
  5594  00E278  6C                 	db	108	;'l'
  5595  00E279  61                 	db	97	;'a'
  5596  00E27A  74                 	db	116	;'t'
  5597  00E27B  65                 	db	101	;'e'
  5598  00E27C  64                 	db	100	;'d'
  5599  00E27D  20                 	db	32
  5600  00E27E  52                 	db	82	;'R'
  5601  00E27F  4D                 	db	77	;'M'
  5602  00E280  53                 	db	83	;'S'
  5603  00E281  20                 	db	32
  5604  00E282  6F                 	db	111	;'o'
  5605  00E283  75                 	db	117	;'u'
  5606  00E284  74                 	db	116	;'t'
  5607  00E285  70                 	db	112	;'p'
  5608  00E286  75                 	db	117	;'u'
  5609  00E287  74                 	db	116	;'t'
  5610  00E288  20                 	db	32
  5611  00E289  63                 	db	99	;'c'
  5612  00E28A  75                 	db	117	;'u'
  5613  00E28B  72                 	db	114	;'r'
  5614  00E28C  72                 	db	114	;'r'
  5615  00E28D  65                 	db	101	;'e'
  5616  00E28E  6E                 	db	110	;'n'
  5617  00E28F  74                 	db	116	;'t'
  5618  00E290  20                 	db	32
  5619  00E291  66                 	db	102	;'f'
  5620  00E292  72                 	db	114	;'r'
  5621  00E293  6F                 	db	111	;'o'
  5622  00E294  6D                 	db	109	;'m'
  5623  00E295  20                 	db	32
  5624  00E296  6D                 	db	109	;'m'
  5625  00E297  65                 	db	101	;'e'
  5626  00E298  61                 	db	97	;'a'
  5627  00E299  73                 	db	115	;'s'
  5628  00E29A  75                 	db	117	;'u'
  5629  00E29B  72                 	db	114	;'r'
  5630  00E29C  65                 	db	101	;'e'
  5631  00E29D  6D                 	db	109	;'m'
  5632  00E29E  65                 	db	101	;'e'
  5633  00E29F  6E                 	db	110	;'n'
  5634  00E2A0  74                 	db	116	;'t'
  5635  00E2A1  73                 	db	115	;'s'
  5636  00E2A2  20                 	db	32
  5637  00E2A3  61                 	db	97	;'a'
  5638  00E2A4  6E                 	db	110	;'n'
  5639  00E2A5  64                 	db	100	;'d'
  5640  00E2A6  20                 	db	32
  5641  00E2A7  54                 	db	84	;'T'
  5642  00E2A8  52                 	db	82	;'R'
  5643  00E2A9  49                 	db	73	;'I'
  5644  00E2AA  41                 	db	65	;'A'
  5645  00E2AB  43                 	db	67	;'C'
  5646  00E2AC  20                 	db	32
  5647  00E2AD  66                 	db	102	;'f'
  5648  00E2AE  69                 	db	105	;'i'
  5649  00E2AF  72                 	db	114	;'r'
  5650  00E2B0  69                 	db	105	;'i'
  5651  00E2B1  6E                 	db	110	;'n'
  5652  00E2B2  67                 	db	103	;'g'
  5653  00E2B3  20                 	db	32
  5654  00E2B4  61                 	db	97	;'a'
  5655  00E2B5  6E                 	db	110	;'n'
  5656  00E2B6  67                 	db	103	;'g'
  5657  00E2B7  6C                 	db	108	;'l'
  5658  00E2B8  65                 	db	101	;'e'
  5659  00E2B9  0A                 	db	10
  5660  00E2BA  0D                 	db	13
  5661  00E2BB  20                 	db	32
  5662  00E2BC  20                 	db	32
  5663  00E2BD  20                 	db	32
  5664  00E2BE  4D                 	db	77	;'M'
  5665  00E2BF  65                 	db	101	;'e'
  5666  00E2C0  61                 	db	97	;'a'
  5667  00E2C1  73                 	db	115	;'s'
  5668  00E2C2  75                 	db	117	;'u'
  5669  00E2C3  72                 	db	114	;'r'
  5670  00E2C4  65                 	db	101	;'e'
  5671  00E2C5  20                 	db	32
  5672  00E2C6  52                 	db	82	;'R'
  5673  00E2C7  4D                 	db	77	;'M'
  5674  00E2C8  53                 	db	83	;'S'
  5675  00E2C9  20                 	db	32
  5676  00E2CA  56                 	db	86	;'V'
  5677  00E2CB  6F                 	db	111	;'o'
  5678  00E2CC  6C                 	db	108	;'l'
  5679  00E2CD  74                 	db	116	;'t'
  5680  00E2CE  61                 	db	97	;'a'
  5681  00E2CF  67                 	db	103	;'g'
  5682  00E2D0  65                 	db	101	;'e'
  5683  00E2D1  3F                 	db	63	;'?'
  5684  00E2D2  3A                 	db	58	;':'
  5685  00E2D3  20                 	db	32
  5686  00E2D4  52                 	db	82	;'R'
  5687  00E2D5  65                 	db	101	;'e'
  5688  00E2D6  74                 	db	116	;'t'
  5689  00E2D7  75                 	db	117	;'u'
  5690  00E2D8  72                 	db	114	;'r'
  5691  00E2D9  6E                 	db	110	;'n'
  5692  00E2DA  73                 	db	115	;'s'
  5693  00E2DB  20                 	db	32
  5694  00E2DC  74                 	db	116	;'t'
  5695  00E2DD  68                 	db	104	;'h'
  5696  00E2DE  65                 	db	101	;'e'
  5697  00E2DF  20                 	db	32
  5698  00E2E0  63                 	db	99	;'c'
  5699  00E2E1  61                 	db	97	;'a'
  5700  00E2E2  6C                 	db	108	;'l'
  5701  00E2E3  63                 	db	99	;'c'
  5702  00E2E4  75                 	db	117	;'u'
  5703  00E2E5  6C                 	db	108	;'l'
  5704  00E2E6  61                 	db	97	;'a'
  5705  00E2E7  74                 	db	116	;'t'
  5706  00E2E8  65                 	db	101	;'e'
  5707  00E2E9  64                 	db	100	;'d'
  5708  00E2EA  20                 	db	32
  5709  00E2EB  52                 	db	82	;'R'
  5710  00E2EC  4D                 	db	77	;'M'
  5711  00E2ED  53                 	db	83	;'S'
  5712  00E2EE  20                 	db	32
  5713  00E2EF  6F                 	db	111	;'o'
  5714  00E2F0  75                 	db	117	;'u'
  5715  00E2F1  74                 	db	116	;'t'
  5716  00E2F2  70                 	db	112	;'p'
  5717  00E2F3  75                 	db	117	;'u'
  5718  00E2F4  74                 	db	116	;'t'
  5719  00E2F5  20                 	db	32
  5720  00E2F6  76                 	db	118	;'v'
  5721  00E2F7  6F                 	db	111	;'o'
  5722  00E2F8  6C                 	db	108	;'l'
  5723  00E2F9  74                 	db	116	;'t'
  5724  00E2FA  61                 	db	97	;'a'
  5725  00E2FB  67                 	db	103	;'g'
  5726  00E2FC  65                 	db	101	;'e'
  5727  00E2FD  20                 	db	32
  5728  00E2FE  66                 	db	102	;'f'
  5729  00E2FF  72                 	db	114	;'r'
  5730  00E300  6F                 	db	111	;'o'
  5731  00E301  6D                 	db	109	;'m'
  5732  00E302  20                 	db	32
  5733  00E303  54                 	db	84	;'T'
  5734  00E304  52                 	db	82	;'R'
  5735  00E305  49                 	db	73	;'I'
  5736  00E306  41                 	db	65	;'A'
  5737  00E307  43                 	db	67	;'C'
  5738  00E308  20                 	db	32
  5739  00E309  66                 	db	102	;'f'
  5740  00E30A  69                 	db	105	;'i'
  5741  00E30B  72                 	db	114	;'r'
  5742  00E30C  69                 	db	105	;'i'
  5743  00E30D  6E                 	db	110	;'n'
  5744  00E30E  67                 	db	103	;'g'
  5745  00E30F  20                 	db	32
  5746  00E310  61                 	db	97	;'a'
  5747  00E311  6E                 	db	110	;'n'
  5748  00E312  67                 	db	103	;'g'
  5749  00E313  6C                 	db	108	;'l'
  5750  00E314  65                 	db	101	;'e'
  5751  00E315  0A                 	db	10
  5752  00E316  0D                 	db	13
  5753  00E317  20                 	db	32
  5754  00E318  20                 	db	32
  5755  00E319  20                 	db	32
  5756  00E31A  4D                 	db	77	;'M'
  5757  00E31B  65                 	db	101	;'e'
  5758  00E31C  61                 	db	97	;'a'
  5759  00E31D  73                 	db	115	;'s'
  5760  00E31E  75                 	db	117	;'u'
  5761  00E31F  72                 	db	114	;'r'
  5762  00E320  65                 	db	101	;'e'
  5763  00E321  20                 	db	32
  5764  00E322  50                 	db	80	;'P'
  5765  00E323  6F                 	db	111	;'o'
  5766  00E324  77                 	db	119	;'w'
  5767  00E325  65                 	db	101	;'e'
  5768  00E326  72                 	db	114	;'r'
  5769  00E327  3F                 	db	63	;'?'
  5770  00E328  3A                 	db	58	;':'
  5771  00E329  20                 	db	32
  5772  00E32A  52                 	db	82	;'R'
  5773  00E32B  65                 	db	101	;'e'
  5774  00E32C  74                 	db	116	;'t'
  5775  00E32D  75                 	db	117	;'u'
  5776  00E32E  72                 	db	114	;'r'
  5777  00E32F  6E                 	db	110	;'n'
  5778  00E330  73                 	db	115	;'s'
  5779  00E331  20                 	db	32
  5780  00E332  74                 	db	116	;'t'
  5781  00E333  68                 	db	104	;'h'
  5782  00E334  65                 	db	101	;'e'
  5783  00E335  20                 	db	32
  5784  00E336  63                 	db	99	;'c'
  5785  00E337  61                 	db	97	;'a'
  5786  00E338  6C                 	db	108	;'l'
  5787  00E339  63                 	db	99	;'c'
  5788  00E33A  75                 	db	117	;'u'
  5789  00E33B  6C                 	db	108	;'l'
  5790  00E33C  61                 	db	97	;'a'
  5791  00E33D  74                 	db	116	;'t'
  5792  00E33E  65                 	db	101	;'e'
  5793  00E33F  64                 	db	100	;'d'
  5794  00E340  20                 	db	32
  5795  00E341  6F                 	db	111	;'o'
  5796  00E342  75                 	db	117	;'u'
  5797  00E343  74                 	db	116	;'t'
  5798  00E344  70                 	db	112	;'p'
  5799  00E345  75                 	db	117	;'u'
  5800  00E346  74                 	db	116	;'t'
  5801  00E347  20                 	db	32
  5802  00E348  70                 	db	112	;'p'
  5803  00E349  6F                 	db	111	;'o'
  5804  00E34A  77                 	db	119	;'w'
  5805  00E34B  65                 	db	101	;'e'
  5806  00E34C  72                 	db	114	;'r'
  5807  00E34D  20                 	db	32
  5808  00E34E  69                 	db	105	;'i'
  5809  00E34F  6E                 	db	110	;'n'
  5810  00E350  20                 	db	32
  5811  00E351  57                 	db	87	;'W'
  5812  00E352  61                 	db	97	;'a'
  5813  00E353  74                 	db	116	;'t'
  5814  00E354  74                 	db	116	;'t'
  5815  00E355  73                 	db	115	;'s'
  5816  00E356  0A                 	db	10
  5817  00E357  0D                 	db	13
  5818  00E358  20                 	db	32
  5819  00E359  20                 	db	32
  5820  00E35A  20                 	db	32
  5821  00E35B  4D                 	db	77	;'M'
  5822  00E35C  65                 	db	101	;'e'
  5823  00E35D  61                 	db	97	;'a'
  5824  00E35E  73                 	db	115	;'s'
  5825  00E35F  75                 	db	117	;'u'
  5826  00E360  72                 	db	114	;'r'
  5827  00E361  65                 	db	101	;'e'
  5828  00E362  20                 	db	32
  5829  00E363  45                 	db	69	;'E'
  5830  00E364  6E                 	db	110	;'n'
  5831  00E365  65                 	db	101	;'e'
  5832  00E366  72                 	db	114	;'r'
  5833  00E367  67                 	db	103	;'g'
  5834  00E368  79                 	db	121	;'y'
  5835  00E369  3F                 	db	63	;'?'
  5836  00E36A  3A                 	db	58	;':'
  5837  00E36B  20                 	db	32
  5838  00E36C  52                 	db	82	;'R'
  5839  00E36D  65                 	db	101	;'e'
  5840  00E36E  74                 	db	116	;'t'
  5841  00E36F  75                 	db	117	;'u'
  5842  00E370  72                 	db	114	;'r'
  5843  00E371  6E                 	db	110	;'n'
  5844  00E372  73                 	db	115	;'s'
  5845  00E373  20                 	db	32
  5846  00E374  6D                 	db	109	;'m'
  5847  00E375  65                 	db	101	;'e'
  5848  00E376  61                 	db	97	;'a'
  5849  00E377  73                 	db	115	;'s'
  5850  00E378  75                 	db	117	;'u'
  5851  00E379  72                 	db	114	;'r'
  5852  00E37A  65                 	db	101	;'e'
  5853  00E37B  64                 	db	100	;'d'
  5854  00E37C  20                 	db	32
  5855  00E37D  65                 	db	101	;'e'
  5856  00E37E  6E                 	db	110	;'n'
  5857  00E37F  65                 	db	101	;'e'
  5858  00E380  72                 	db	114	;'r'
  5859  00E381  67                 	db	103	;'g'
  5860  00E382  79                 	db	121	;'y'
  5861  00E383  20                 	db	32
  5862  00E384  73                 	db	115	;'s'
  5863  00E385  69                 	db	105	;'i'
  5864  00E386  6E                 	db	110	;'n'
  5865  00E387  63                 	db	99	;'c'
  5866  00E388  65                 	db	101	;'e'
  5867  00E389  20                 	db	32
  5868  00E38A  6D                 	db	109	;'m'
  5869  00E38B  65                 	db	101	;'e'
  5870  00E38C  61                 	db	97	;'a'
  5871  00E38D  73                 	db	115	;'s'
  5872  00E38E  75                 	db	117	;'u'
  5873  00E38F  72                 	db	114	;'r'
  5874  00E390  65                 	db	101	;'e'
  5875  00E391  6D                 	db	109	;'m'
  5876  00E392  65                 	db	101	;'e'
  5877  00E393  6E                 	db	110	;'n'
  5878  00E394  74                 	db	116	;'t'
  5879  00E395  20                 	db	32
  5880  00E396  72                 	db	114	;'r'
  5881  00E397  65                 	db	101	;'e'
  5882  00E398  73                 	db	115	;'s'
  5883  00E399  65                 	db	101	;'e'
  5884  00E39A  74                 	db	116	;'t'
  5885  00E39B  20                 	db	32
  5886  00E39C  69                 	db	105	;'i'
  5887  00E39D  6E                 	db	110	;'n'
  5888  00E39E  20                 	db	32
  5889  00E39F  57                 	db	87	;'W'
  5890  00E3A0  61                 	db	97	;'a'
  5891  00E3A1  74                 	db	116	;'t'
  5892  00E3A2  74                 	db	116	;'t'
  5893  00E3A3  20                 	db	32
  5894  00E3A4  48                 	db	72	;'H'
  5895  00E3A5  6F                 	db	111	;'o'
  5896  00E3A6  75                 	db	117	;'u'
  5897  00E3A7  72                 	db	114	;'r'
  5898  00E3A8  73                 	db	115	;'s'
  5899  00E3A9  0A                 	db	10
  5900  00E3AA  0D                 	db	13
  5901  00E3AB  20                 	db	32
  5902  00E3AC  20                 	db	32
  5903  00E3AD  20                 	db	32
  5904  00E3AE  43                 	db	67	;'C'
  5905  00E3AF  6C                 	db	108	;'l'
  5906  00E3B0  65                 	db	101	;'e'
  5907  00E3B1  61                 	db	97	;'a'
  5908  00E3B2  72                 	db	114	;'r'
  5909  00E3B3  20                 	db	32
  5910  00E3B4  45                 	db	69	;'E'
  5911  00E3B5  6E                 	db	110	;'n'
  5912  00E3B6  65                 	db	101	;'e'
  5913  00E3B7  72                 	db	114	;'r'
  5914  00E3B8  67                 	db	103	;'g'
  5915  00E3B9  79                 	db	121	;'y'
  5916  00E3BA  3A                 	db	58	;':'
  5917  00E3BB  20                 	db	32
  5918  00E3BC  52                 	db	82	;'R'
  5919  00E3BD  65                 	db	101	;'e'
  5920  00E3BE  73                 	db	115	;'s'
  5921  00E3BF  65                 	db	101	;'e'
  5922  00E3C0  74                 	db	116	;'t'
  5923  00E3C1  73                 	db	115	;'s'
  5924  00E3C2  20                 	db	32
  5925  00E3C3  74                 	db	116	;'t'
  5926  00E3C4  68                 	db	104	;'h'
  5927  00E3C5  65                 	db	101	;'e'
  5928  00E3C6  20                 	db	32
  5929  00E3C7  6D                 	db	109	;'m'
  5930  00E3C8  65                 	db	101	;'e'
  5931  00E3C9  61                 	db	97	;'a'
  5932  00E3CA  73                 	db	115	;'s'
  5933  00E3CB  75                 	db	117	;'u'
  5934  00E3CC  72                 	db	114	;'r'
  5935  00E3CD  65                 	db	101	;'e'
  5936  00E3CE  64                 	db	100	;'d'
  5937  00E3CF  20                 	db	32
  5938  00E3D0  6F                 	db	111	;'o'
  5939  00E3D1  75                 	db	117	;'u'
  5940  00E3D2  74                 	db	116	;'t'
  5941  00E3D3  70                 	db	112	;'p'
  5942  00E3D4  75                 	db	117	;'u'
  5943  00E3D5  74                 	db	116	;'t'
  5944  00E3D6  20                 	db	32
  5945  00E3D7  65                 	db	101	;'e'
  5946  00E3D8  6E                 	db	110	;'n'
  5947  00E3D9  65                 	db	101	;'e'
  5948  00E3DA  72                 	db	114	;'r'
  5949  00E3DB  67                 	db	103	;'g'
  5950  00E3DC  79                 	db	121	;'y'
  5951  00E3DD  20                 	db	32
  5952  00E3DE  74                 	db	116	;'t'
  5953  00E3DF  6F                 	db	111	;'o'
  5954  00E3E0  20                 	db	32
  5955  00E3E1  7A                 	db	122	;'z'
  5956  00E3E2  65                 	db	101	;'e'
  5957  00E3E3  72                 	db	114	;'r'
  5958  00E3E4  6F                 	db	111	;'o'
  5959  00E3E5  0A                 	db	10
  5960  00E3E6  0D                 	db	13
  5961  00E3E7  20                 	db	32
  5962  00E3E8  20                 	db	32
  5963  00E3E9  20                 	db	32
  5964  00E3EA  4C                 	db	76	;'L'
  5965  00E3EB  6F                 	db	111	;'o'
  5966  00E3EC  61                 	db	97	;'a'
  5967  00E3ED  64                 	db	100	;'d'
  5968  00E3EE  20                 	db	32
  5969  00E3EF  4F                 	db	79	;'O'
  5970  00E3F0  6E                 	db	110	;'n'
  5971  00E3F1  20                 	db	32
  5972  00E3F2  54                 	db	84	;'T'
  5973  00E3F3  69                 	db	105	;'i'
  5974  00E3F4  6D                 	db	109	;'m'
  5975  00E3F5  65                 	db	101	;'e'
  5976  00E3F6  3F                 	db	63	;'?'
  5977  00E3F7  3A                 	db	58	;':'
  5978  00E3F8  20                 	db	32
  5979  00E3F9  52                 	db	82	;'R'
  5980  00E3FA  65                 	db	101	;'e'
  5981  00E3FB  74                 	db	116	;'t'
  5982  00E3FC  75                 	db	117	;'u'
  5983  00E3FD  72                 	db	114	;'r'
  5984  00E3FE  6E                 	db	110	;'n'
  5985  00E3FF  73                 	db	115	;'s'
  5986  00E400  20                 	db	32
  5987  00E401  6C                 	db	108	;'l'
  5988  00E402  6F                 	db	111	;'o'
  5989  00E403  61                 	db	97	;'a'
  5990  00E404  64                 	db	100	;'d'
  5991  00E405  20                 	db	32
  5992  00E406  6F                 	db	111	;'o'
  5993  00E407  6E                 	db	110	;'n'
  5994  00E408  20                 	db	32
  5995  00E409  74                 	db	116	;'t'
  5996  00E40A  69                 	db	105	;'i'
  5997  00E40B  6D                 	db	109	;'m'
  5998  00E40C  65                 	db	101	;'e'
  5999  00E40D  20                 	db	32
  6000  00E40E  73                 	db	115	;'s'
  6001  00E40F  69                 	db	105	;'i'
  6002  00E410  6E                 	db	110	;'n'
  6003  00E411  63                 	db	99	;'c'
  6004  00E412  65                 	db	101	;'e'
  6005  00E413  20                 	db	32
  6006  00E414  6C                 	db	108	;'l'
  6007  00E415  61                 	db	97	;'a'
  6008  00E416  73                 	db	115	;'s'
  6009  00E417  74                 	db	116	;'t'
  6010  00E418  20                 	db	32
  6011  00E419  64                 	db	100	;'d'
  6012  00E41A  65                 	db	101	;'e'
  6013  00E41B  76                 	db	118	;'v'
  6014  00E41C  69                 	db	105	;'i'
  6015  00E41D  63                 	db	99	;'c'
  6016  00E41E  65                 	db	101	;'e'
  6017  00E41F  20                 	db	32
  6018  00E420  72                 	db	114	;'r'
  6019  00E421  65                 	db	101	;'e'
  6020  00E422  73                 	db	115	;'s'
  6021  00E423  65                 	db	101	;'e'
  6022  00E424  74                 	db	116	;'t'
  6023  00E425  20                 	db	32
  6024  00E426  69                 	db	105	;'i'
  6025  00E427  6E                 	db	110	;'n'
  6026  00E428  20                 	db	32
  6027  00E429  73                 	db	115	;'s'
  6028  00E42A  65                 	db	101	;'e'
  6029  00E42B  63                 	db	99	;'c'
  6030  00E42C  6F                 	db	111	;'o'
  6031  00E42D  6E                 	db	110	;'n'
  6032  00E42E  64                 	db	100	;'d'
  6033  00E42F  73                 	db	115	;'s'
  6034  00E430  0A                 	db	10
  6035  00E431  0D                 	db	13
  6036  00E432  20                 	db	32
  6037  00E433  20                 	db	32
  6038  00E434  20                 	db	32
  6039  00E435  4D                 	db	77	;'M'
  6040  00E436  61                 	db	97	;'a'
  6041  00E437  78                 	db	120	;'x'
  6042  00E438  20                 	db	32
  6043  00E439  52                 	db	82	;'R'
  6044  00E43A  4D                 	db	77	;'M'
  6045  00E43B  53                 	db	83	;'S'
  6046  00E43C  20                 	db	32
  6047  00E43D  43                 	db	67	;'C'
  6048  00E43E  75                 	db	117	;'u'
  6049  00E43F  72                 	db	114	;'r'
  6050  00E440  72                 	db	114	;'r'
  6051  00E441  65                 	db	101	;'e'
  6052  00E442  6E                 	db	110	;'n'
  6053  00E443  74                 	db	116	;'t'
  6054  00E444  3F                 	db	63	;'?'
  6055  00E445  3A                 	db	58	;':'
  6056  00E446  20                 	db	32
  6057  00E447  50                 	db	80	;'P'
  6058  00E448  72                 	db	114	;'r'
  6059  00E449  69                 	db	105	;'i'
  6060  00E44A  6E                 	db	110	;'n'
  6061  00E44B  74                 	db	116	;'t'
  6062  00E44C  73                 	db	115	;'s'
  6063  00E44D  20                 	db	32
  6064  00E44E  74                 	db	116	;'t'
  6065  00E44F  68                 	db	104	;'h'
  6066  00E450  65                 	db	101	;'e'
  6067  00E451  20                 	db	32
  6068  00E452  6D                 	db	109	;'m'
  6069  00E453  61                 	db	97	;'a'
  6070  00E454  78                 	db	120	;'x'
  6071  00E455  69                 	db	105	;'i'
  6072  00E456  6D                 	db	109	;'m'
  6073  00E457  75                 	db	117	;'u'
  6074  00E458  6D                 	db	109	;'m'
  6075  00E459  20                 	db	32
  6076  00E45A  72                 	db	114	;'r'
  6077  00E45B  65                 	db	101	;'e'
  6078  00E45C  63                 	db	99	;'c'
  6079  00E45D  6F                 	db	111	;'o'
  6080  00E45E  72                 	db	114	;'r'
  6081  00E45F  64                 	db	100	;'d'
  6082  00E460  65                 	db	101	;'e'
  6083  00E461  64                 	db	100	;'d'
  6084  00E462  20                 	db	32
  6085  00E463  52                 	db	82	;'R'
  6086  00E464  4D                 	db	77	;'M'
  6087  00E465  53                 	db	83	;'S'
  6088  00E466  20                 	db	32
  6089  00E467  6F                 	db	111	;'o'
  6090  00E468  75                 	db	117	;'u'
  6091  00E469  74                 	db	116	;'t'
  6092  00E46A  70                 	db	112	;'p'
  6093  00E46B  75                 	db	117	;'u'
  6094  00E46C  74                 	db	116	;'t'
  6095  00E46D  20                 	db	32
  6096  00E46E  63                 	db	99	;'c'
  6097  00E46F  75                 	db	117	;'u'
  6098  00E470  72                 	db	114	;'r'
  6099  00E471  72                 	db	114	;'r'
  6100  00E472  65                 	db	101	;'e'
  6101  00E473  6E                 	db	110	;'n'
  6102  00E474  74                 	db	116	;'t'
  6103  00E475  0A                 	db	10
  6104  00E476  0D                 	db	13
  6105  00E477  20                 	db	32
  6106  00E478  20                 	db	32
  6107  00E479  20                 	db	32
  6108  00E47A  4D                 	db	77	;'M'
  6109  00E47B  61                 	db	97	;'a'
  6110  00E47C  78                 	db	120	;'x'
  6111  00E47D  20                 	db	32
  6112  00E47E  50                 	db	80	;'P'
  6113  00E47F  6F                 	db	111	;'o'
  6114  00E480  77                 	db	119	;'w'
  6115  00E481  65                 	db	101	;'e'
  6116  00E482  72                 	db	114	;'r'
  6117  00E483  3F                 	db	63	;'?'
  6118  00E484  3A                 	db	58	;':'
  6119  00E485  20                 	db	32
  6120  00E486  50                 	db	80	;'P'
  6121  00E487  72                 	db	114	;'r'
  6122  00E488  69                 	db	105	;'i'
  6123  00E489  6E                 	db	110	;'n'
  6124  00E48A  74                 	db	116	;'t'
  6125  00E48B  73                 	db	115	;'s'
  6126  00E48C  20                 	db	32
  6127  00E48D  74                 	db	116	;'t'
  6128  00E48E  68                 	db	104	;'h'
  6129  00E48F  65                 	db	101	;'e'
  6130  00E490  20                 	db	32
  6131  00E491  6D                 	db	109	;'m'
  6132  00E492  61                 	db	97	;'a'
  6133  00E493  78                 	db	120	;'x'
  6134  00E494  69                 	db	105	;'i'
  6135  00E495  6D                 	db	109	;'m'
  6136  00E496  75                 	db	117	;'u'
  6137  00E497  6D                 	db	109	;'m'
  6138  00E498  20                 	db	32
  6139  00E499  72                 	db	114	;'r'
  6140  00E49A  65                 	db	101	;'e'
  6141  00E49B  63                 	db	99	;'c'
  6142  00E49C  6F                 	db	111	;'o'
  6143  00E49D  72                 	db	114	;'r'
  6144  00E49E  64                 	db	100	;'d'
  6145  00E49F  65                 	db	101	;'e'
  6146  00E4A0  64                 	db	100	;'d'
  6147  00E4A1  20                 	db	32
  6148  00E4A2  6F                 	db	111	;'o'
  6149  00E4A3  75                 	db	117	;'u'
  6150  00E4A4  74                 	db	116	;'t'
  6151  00E4A5  70                 	db	112	;'p'
  6152  00E4A6  75                 	db	117	;'u'
  6153  00E4A7  74                 	db	116	;'t'
  6154  00E4A8  20                 	db	32
  6155  00E4A9  70                 	db	112	;'p'
  6156  00E4AA  6F                 	db	111	;'o'
  6157  00E4AB  77                 	db	119	;'w'
  6158  00E4AC  65                 	db	101	;'e'
  6159  00E4AD  72                 	db	114	;'r'
  6160  00E4AE  0A                 	db	10
  6161  00E4AF  0D                 	db	13
  6162  00E4B0  0A                 	db	10
  6163  00E4B1  0D                 	db	13
  6164  00E4B2  00                 	db	0
  6165  00E4B3                     STR_169:
  6166  00E4B3  4C                 	db	76	;'L'
  6167  00E4B4  69                 	db	105	;'i'
  6168  00E4B5  73                 	db	115	;'s'
  6169  00E4B6  74                 	db	116	;'t'
  6170  00E4B7  20                 	db	32
  6171  00E4B8  6F                 	db	111	;'o'
  6172  00E4B9  66                 	db	102	;'f'
  6173  00E4BA  20                 	db	32
  6174  00E4BB  73                 	db	115	;'s'
  6175  00E4BC  75                 	db	117	;'u'
  6176  00E4BD  70                 	db	112	;'p'
  6177  00E4BE  70                 	db	112	;'p'
  6178  00E4BF  6F                 	db	111	;'o'
  6179  00E4C0  72                 	db	114	;'r'
  6180  00E4C1  74                 	db	116	;'t'
  6181  00E4C2  65                 	db	101	;'e'
  6182  00E4C3  64                 	db	100	;'d'
  6183  00E4C4  20                 	db	32
  6184  00E4C5  44                 	db	68	;'D'
  6185  00E4C6  65                 	db	101	;'e'
  6186  00E4C7  76                 	db	118	;'v'
  6187  00E4C8  69                 	db	105	;'i'
  6188  00E4C9  63                 	db	99	;'c'
  6189  00E4CA  65                 	db	101	;'e'
  6190  00E4CB  20                 	db	32
  6191  00E4CC  4D                 	db	77	;'M'
  6192  00E4CD  65                 	db	101	;'e'
  6193  00E4CE  61                 	db	97	;'a'
  6194  00E4CF  73                 	db	115	;'s'
  6195  00E4D0  75                 	db	117	;'u'
  6196  00E4D1  72                 	db	114	;'r'
  6197  00E4D2  65                 	db	101	;'e'
  6198  00E4D3  6D                 	db	109	;'m'
  6199  00E4D4  65                 	db	101	;'e'
  6200  00E4D5  6E                 	db	110	;'n'
  6201  00E4D6  74                 	db	116	;'t'
  6202  00E4D7  20                 	db	32
  6203  00E4D8  43                 	db	67	;'C'
  6204  00E4D9  6F                 	db	111	;'o'
  6205  00E4DA  6D                 	db	109	;'m'
  6206  00E4DB  6D                 	db	109	;'m'
  6207  00E4DC  61                 	db	97	;'a'
  6208  00E4DD  6E                 	db	110	;'n'
  6209  00E4DE  64                 	db	100	;'d'
  6210  00E4DF  73                 	db	115	;'s'
  6211  00E4E0  3A                 	db	58	;':'
  6212  00E4E1  0A                 	db	10
  6213  00E4E2  0D                 	db	13
  6214  00E4E3  20                 	db	32
  6215  00E4E4  20                 	db	32
  6216  00E4E5  20                 	db	32
  6217  00E4E6  4D                 	db	77	;'M'
  6218  00E4E7  65                 	db	101	;'e'
  6219  00E4E8  61                 	db	97	;'a'
  6220  00E4E9  73                 	db	115	;'s'
  6221  00E4EA  75                 	db	117	;'u'
  6222  00E4EB  72                 	db	114	;'r'
  6223  00E4EC  65                 	db	101	;'e'
  6224  00E4ED  20                 	db	32
  6225  00E4EE  50                 	db	80	;'P'
  6226  00E4EF  4F                 	db	79	;'O'
  6227  00E4F0  53                 	db	83	;'S'
  6228  00E4F1  33                 	db	51	;'3'
  6229  00E4F2  50                 	db	80	;'P'
  6230  00E4F3  33                 	db	51	;'3'
  6231  00E4F4  3F                 	db	63	;'?'
  6232  00E4F5  3A                 	db	58	;':'
  6233  00E4F6  20                 	db	32
  6234  00E4F7  52                 	db	82	;'R'
  6235  00E4F8  65                 	db	101	;'e'
  6236  00E4F9  74                 	db	116	;'t'
  6237  00E4FA  75                 	db	117	;'u'
  6238  00E4FB  72                 	db	114	;'r'
  6239  00E4FC  6E                 	db	110	;'n'
  6240  00E4FD  73                 	db	115	;'s'
  6241  00E4FE  20                 	db	32
  6242  00E4FF  2B                 	db	43
  6243  00E500  33                 	db	51	;'3'
  6244  00E501  2E                 	db	46
  6245  00E502  33                 	db	51	;'3'
  6246  00E503  56                 	db	86	;'V'
  6247  00E504  20                 	db	32
  6248  00E505  41                 	db	65	;'A'
  6249  00E506  44                 	db	68	;'D'
  6250  00E507  43                 	db	67	;'C'
  6251  00E508  20                 	db	32
  6252  00E509  43                 	db	67	;'C'
  6253  00E50A  6F                 	db	111	;'o'
  6254  00E50B  6E                 	db	110	;'n'
  6255  00E50C  76                 	db	118	;'v'
  6256  00E50D  65                 	db	101	;'e'
  6257  00E50E  72                 	db	114	;'r'
  6258  00E50F  73                 	db	115	;'s'
  6259  00E510  69                 	db	105	;'i'
  6260  00E511  6F                 	db	111	;'o'
  6261  00E512  6E                 	db	110	;'n'
  6262  00E513  20                 	db	32
  6263  00E514  69                 	db	105	;'i'
  6264  00E515  6E                 	db	110	;'n'
  6265  00E516  20                 	db	32
  6266  00E517  76                 	db	118	;'v'
  6267  00E518  6F                 	db	111	;'o'
  6268  00E519  6C                 	db	108	;'l'
  6269  00E51A  74                 	db	116	;'t'
  6270  00E51B  73                 	db	115	;'s'
  6271  00E51C  0A                 	db	10
  6272  00E51D  0D                 	db	13
  6273  00E51E  20                 	db	32
  6274  00E51F  20                 	db	32
  6275  00E520  20                 	db	32
  6276  00E521  4D                 	db	77	;'M'
  6277  00E522  65                 	db	101	;'e'
  6278  00E523  61                 	db	97	;'a'
  6279  00E524  73                 	db	115	;'s'
  6280  00E525  75                 	db	117	;'u'
  6281  00E526  72                 	db	114	;'r'
  6282  00E527  65                 	db	101	;'e'
  6283  00E528  20                 	db	32
  6284  00E529  50                 	db	80	;'P'
  6285  00E52A  4F                 	db	79	;'O'
  6286  00E52B  53                 	db	83	;'S'
  6287  00E52C  31                 	db	49	;'1'
  6288  00E52D  32                 	db	50	;'2'
  6289  00E52E  3F                 	db	63	;'?'
  6290  00E52F  3A                 	db	58	;':'
  6291  00E530  20                 	db	32
  6292  00E531  52                 	db	82	;'R'
  6293  00E532  65                 	db	101	;'e'
  6294  00E533  74                 	db	116	;'t'
  6295  00E534  75                 	db	117	;'u'
  6296  00E535  72                 	db	114	;'r'
  6297  00E536  6E                 	db	110	;'n'
  6298  00E537  73                 	db	115	;'s'
  6299  00E538  20                 	db	32
  6300  00E539  2B                 	db	43
  6301  00E53A  31                 	db	49	;'1'
  6302  00E53B  32                 	db	50	;'2'
  6303  00E53C  56                 	db	86	;'V'
  6304  00E53D  20                 	db	32
  6305  00E53E  41                 	db	65	;'A'
  6306  00E53F  44                 	db	68	;'D'
  6307  00E540  43                 	db	67	;'C'
  6308  00E541  20                 	db	32
  6309  00E542  43                 	db	67	;'C'
  6310  00E543  6F                 	db	111	;'o'
  6311  00E544  6E                 	db	110	;'n'
  6312  00E545  76                 	db	118	;'v'
  6313  00E546  65                 	db	101	;'e'
  6314  00E547  72                 	db	114	;'r'
  6315  00E548  73                 	db	115	;'s'
  6316  00E549  69                 	db	105	;'i'
  6317  00E54A  6F                 	db	111	;'o'
  6318  00E54B  6E                 	db	110	;'n'
  6319  00E54C  20                 	db	32
  6320  00E54D  69                 	db	105	;'i'
  6321  00E54E  6E                 	db	110	;'n'
  6322  00E54F  20                 	db	32
  6323  00E550  76                 	db	118	;'v'
  6324  00E551  6F                 	db	111	;'o'
  6325  00E552  6C                 	db	108	;'l'
  6326  00E553  74                 	db	116	;'t'
  6327  00E554  73                 	db	115	;'s'
  6328  00E555  0A                 	db	10
  6329  00E556  0D                 	db	13
  6330  00E557  20                 	db	32
  6331  00E558  20                 	db	32
  6332  00E559  20                 	db	32
  6333  00E55A  4D                 	db	77	;'M'
  6334  00E55B  65                 	db	101	;'e'
  6335  00E55C  61                 	db	97	;'a'
  6336  00E55D  73                 	db	115	;'s'
  6337  00E55E  75                 	db	117	;'u'
  6338  00E55F  72                 	db	114	;'r'
  6339  00E560  65                 	db	101	;'e'
  6340  00E561  20                 	db	32
  6341  00E562  44                 	db	68	;'D'
  6342  00E563  69                 	db	105	;'i'
  6343  00E564  65                 	db	101	;'e'
  6344  00E565  20                 	db	32
  6345  00E566  54                 	db	84	;'T'
  6346  00E567  65                 	db	101	;'e'
  6347  00E568  6D                 	db	109	;'m'
  6348  00E569  70                 	db	112	;'p'
  6349  00E56A  3F                 	db	63	;'?'
  6350  00E56B  3A                 	db	58	;':'
  6351  00E56C  20                 	db	32
  6352  00E56D  52                 	db	82	;'R'
  6353  00E56E  65                 	db	101	;'e'
  6354  00E56F  74                 	db	116	;'t'
  6355  00E570  75                 	db	117	;'u'
  6356  00E571  72                 	db	114	;'r'
  6357  00E572  6E                 	db	110	;'n'
  6358  00E573  73                 	db	115	;'s'
  6359  00E574  20                 	db	32
  6360  00E575  74                 	db	116	;'t'
  6361  00E576  68                 	db	104	;'h'
  6362  00E577  65                 	db	101	;'e'
  6363  00E578  20                 	db	32
  6364  00E579  6D                 	db	109	;'m'
  6365  00E57A  69                 	db	105	;'i'
  6366  00E57B  63                 	db	99	;'c'
  6367  00E57C  72                 	db	114	;'r'
  6368  00E57D  6F                 	db	111	;'o'
  6369  00E57E  63                 	db	99	;'c'
  6370  00E57F  6F                 	db	111	;'o'
  6371  00E580  6E                 	db	110	;'n'
  6372  00E581  74                 	db	116	;'t'
  6373  00E582  72                 	db	114	;'r'
  6374  00E583  6F                 	db	111	;'o'
  6375  00E584  6C                 	db	108	;'l'
  6376  00E585  6C                 	db	108	;'l'
  6377  00E586  65                 	db	101	;'e'
  6378  00E587  72                 	db	114	;'r'
  6379  00E588  20                 	db	32
  6380  00E589  64                 	db	100	;'d'
  6381  00E58A  69                 	db	105	;'i'
  6382  00E58B  65                 	db	101	;'e'
  6383  00E58C  20                 	db	32
  6384  00E58D  74                 	db	116	;'t'
  6385  00E58E  65                 	db	101	;'e'
  6386  00E58F  6D                 	db	109	;'m'
  6387  00E590  70                 	db	112	;'p'
  6388  00E591  65                 	db	101	;'e'
  6389  00E592  72                 	db	114	;'r'
  6390  00E593  61                 	db	97	;'a'
  6391  00E594  74                 	db	116	;'t'
  6392  00E595  75                 	db	117	;'u'
  6393  00E596  72                 	db	114	;'r'
  6394  00E597  65                 	db	101	;'e'
  6395  00E598  20                 	db	32
  6396  00E599  69                 	db	105	;'i'
  6397  00E59A  6E                 	db	110	;'n'
  6398  00E59B  20                 	db	32
  6399  00E59C  64                 	db	100	;'d'
  6400  00E59D  65                 	db	101	;'e'
  6401  00E59E  67                 	db	103	;'g'
  6402  00E59F  72                 	db	114	;'r'
  6403  00E5A0  65                 	db	101	;'e'
  6404  00E5A1  65                 	db	101	;'e'
  6405  00E5A2  73                 	db	115	;'s'
  6406  00E5A3  20                 	db	32
  6407  00E5A4  43                 	db	67	;'C'
  6408  00E5A5  0A                 	db	10
  6409  00E5A6  0D                 	db	13
  6410  00E5A7  20                 	db	32
  6411  00E5A8  20                 	db	32
  6412  00E5A9  20                 	db	32
  6413  00E5AA  4D                 	db	77	;'M'
  6414  00E5AB  65                 	db	101	;'e'
  6415  00E5AC  61                 	db	97	;'a'
  6416  00E5AD  73                 	db	115	;'s'
  6417  00E5AE  75                 	db	117	;'u'
  6418  00E5AF  72                 	db	114	;'r'
  6419  00E5B0  65                 	db	101	;'e'
  6420  00E5B1  20                 	db	32
  6421  00E5B2  46                 	db	70	;'F'
  6422  00E5B3  56                 	db	86	;'V'
  6423  00E5B4  52                 	db	82	;'R'
  6424  00E5B5  3F                 	db	63	;'?'
  6425  00E5B6  3A                 	db	58	;':'
  6426  00E5B7  20                 	db	32
  6427  00E5B8  52                 	db	82	;'R'
  6428  00E5B9  65                 	db	101	;'e'
  6429  00E5BA  74                 	db	116	;'t'
  6430  00E5BB  75                 	db	117	;'u'
  6431  00E5BC  72                 	db	114	;'r'
  6432  00E5BD  6E                 	db	110	;'n'
  6433  00E5BE  73                 	db	115	;'s'
  6434  00E5BF  20                 	db	32
  6435  00E5C0  74                 	db	116	;'t'
  6436  00E5C1  68                 	db	104	;'h'
  6437  00E5C2  65                 	db	101	;'e'
  6438  00E5C3  20                 	db	32
  6439  00E5C4  69                 	db	105	;'i'
  6440  00E5C5  6E                 	db	110	;'n'
  6441  00E5C6  74                 	db	116	;'t'
  6442  00E5C7  65                 	db	101	;'e'
  6443  00E5C8  72                 	db	114	;'r'
  6444  00E5C9  6E                 	db	110	;'n'
  6445  00E5CA  61                 	db	97	;'a'
  6446  00E5CB  6C                 	db	108	;'l'
  6447  00E5CC  20                 	db	32
  6448  00E5CD  66                 	db	102	;'f'
  6449  00E5CE  69                 	db	105	;'i'
  6450  00E5CF  78                 	db	120	;'x'
  6451  00E5D0  65                 	db	101	;'e'
  6452  00E5D1  64                 	db	100	;'d'
  6453  00E5D2  20                 	db	32
  6454  00E5D3  76                 	db	118	;'v'
  6455  00E5D4  6F                 	db	111	;'o'
  6456  00E5D5  6C                 	db	108	;'l'
  6457  00E5D6  74                 	db	116	;'t'
  6458  00E5D7  61                 	db	97	;'a'
  6459  00E5D8  67                 	db	103	;'g'
  6460  00E5D9  65                 	db	101	;'e'
  6461  00E5DA  20                 	db	32
  6462  00E5DB  72                 	db	114	;'r'
  6463  00E5DC  65                 	db	101	;'e'
  6464  00E5DD  66                 	db	102	;'f'
  6465  00E5DE  65                 	db	101	;'e'
  6466  00E5DF  72                 	db	114	;'r'
  6467  00E5E0  65                 	db	101	;'e'
  6468  00E5E1  6E                 	db	110	;'n'
  6469  00E5E2  63                 	db	99	;'c'
  6470  00E5E3  65                 	db	101	;'e'
  6471  00E5E4  20                 	db	32
  6472  00E5E5  62                 	db	98	;'b'
  6473  00E5E6  75                 	db	117	;'u'
  6474  00E5E7  66                 	db	102	;'f'
  6475  00E5E8  66                 	db	102	;'f'
  6476  00E5E9  65                 	db	101	;'e'
  6477  00E5EA  72                 	db	114	;'r'
  6478  00E5EB  20                 	db	32
  6479  00E5EC  31                 	db	49	;'1'
  6480  00E5ED  20                 	db	32
  6481  00E5EE  6F                 	db	111	;'o'
  6482  00E5EF  75                 	db	117	;'u'
  6483  00E5F0  74                 	db	116	;'t'
  6484  00E5F1  70                 	db	112	;'p'
  6485  00E5F2  75                 	db	117	;'u'
  6486  00E5F3  74                 	db	116	;'t'
  6487  00E5F4  20                 	db	32
  6488  00E5F5  69                 	db	105	;'i'
  6489  00E5F6  6E                 	db	110	;'n'
  6490  00E5F7  20                 	db	32
  6491  00E5F8  76                 	db	118	;'v'
  6492  00E5F9  6F                 	db	111	;'o'
  6493  00E5FA  6C                 	db	108	;'l'
  6494  00E5FB  74                 	db	116	;'t'
  6495  00E5FC  73                 	db	115	;'s'
  6496  00E5FD  0A                 	db	10
  6497  00E5FE  0D                 	db	13
  6498  00E5FF  20                 	db	32
  6499  00E600  20                 	db	32
  6500  00E601  20                 	db	32
  6501  00E602  4D                 	db	77	;'M'
  6502  00E603  65                 	db	101	;'e'
  6503  00E604  61                 	db	97	;'a'
  6504  00E605  73                 	db	115	;'s'
  6505  00E606  75                 	db	117	;'u'
  6506  00E607  72                 	db	114	;'r'
  6507  00E608  65                 	db	101	;'e'
  6508  00E609  20                 	db	32
  6509  00E60A  41                 	db	65	;'A'
  6510  00E60B  56                 	db	86	;'V'
  6511  00E60C  53                 	db	83	;'S'
  6512  00E60D  53                 	db	83	;'S'
  6513  00E60E  3F                 	db	63	;'?'
  6514  00E60F  3A                 	db	58	;':'
  6515  00E610  20                 	db	32
  6516  00E611  52                 	db	82	;'R'
  6517  00E612  65                 	db	101	;'e'
  6518  00E613  74                 	db	116	;'t'
  6519  00E614  75                 	db	117	;'u'
  6520  00E615  72                 	db	114	;'r'
  6521  00E616  6E                 	db	110	;'n'
  6522  00E617  73                 	db	115	;'s'
  6523  00E618  20                 	db	32
  6524  00E619  74                 	db	116	;'t'
  6525  00E61A  68                 	db	104	;'h'
  6526  00E61B  65                 	db	101	;'e'
  6527  00E61C  20                 	db	32
  6528  00E61D  6D                 	db	109	;'m'
  6529  00E61E  65                 	db	101	;'e'
  6530  00E61F  61                 	db	97	;'a'
  6531  00E620  73                 	db	115	;'s'
  6532  00E621  75                 	db	117	;'u'
  6533  00E622  72                 	db	114	;'r'
  6534  00E623  65                 	db	101	;'e'
  6535  00E624  64                 	db	100	;'d'
  6536  00E625  20                 	db	32
  6537  00E626  76                 	db	118	;'v'
  6538  00E627  61                 	db	97	;'a'
  6539  00E628  6C                 	db	108	;'l'
  6540  00E629  75                 	db	117	;'u'
  6541  00E62A  65                 	db	101	;'e'
  6542  00E62B  20                 	db	32
  6543  00E62C  6F                 	db	111	;'o'
  6544  00E62D  66                 	db	102	;'f'
  6545  00E62E  20                 	db	32
  6546  00E62F  41                 	db	65	;'A'
  6547  00E630  6E                 	db	110	;'n'
  6548  00E631  61                 	db	97	;'a'
  6549  00E632  6C                 	db	108	;'l'
  6550  00E633  6F                 	db	111	;'o'
  6551  00E634  67                 	db	103	;'g'
  6552  00E635  20                 	db	32
  6553  00E636  56                 	db	86	;'V'
  6554  00E637  53                 	db	83	;'S'
  6555  00E638  53                 	db	83	;'S'
  6556  00E639  20                 	db	32
  6557  00E63A  69                 	db	105	;'i'
  6558  00E63B  6E                 	db	110	;'n'
  6559  00E63C  20                 	db	32
  6560  00E63D  76                 	db	118	;'v'
  6561  00E63E  6F                 	db	111	;'o'
  6562  00E63F  6C                 	db	108	;'l'
  6563  00E640  74                 	db	116	;'t'
  6564  00E641  73                 	db	115	;'s'
  6565  00E642  0A                 	db	10
  6566  00E643  0D                 	db	13
  6567  00E644  20                 	db	32
  6568  00E645  20                 	db	32
  6569  00E646  20                 	db	32
  6570  00E647  4D                 	db	77	;'M'
  6571  00E648  61                 	db	97	;'a'
  6572  00E649  78                 	db	120	;'x'
  6573  00E64A  20                 	db	32
  6574  00E64B  50                 	db	80	;'P'
  6575  00E64C  4F                 	db	79	;'O'
  6576  00E64D  53                 	db	83	;'S'
  6577  00E64E  33                 	db	51	;'3'
  6578  00E64F  50                 	db	80	;'P'
  6579  00E650  33                 	db	51	;'3'
  6580  00E651  20                 	db	32
  6581  00E652  56                 	db	86	;'V'
  6582  00E653  6F                 	db	111	;'o'
  6583  00E654  6C                 	db	108	;'l'
  6584  00E655  74                 	db	116	;'t'
  6585  00E656  61                 	db	97	;'a'
  6586  00E657  67                 	db	103	;'g'
  6587  00E658  65                 	db	101	;'e'
  6588  00E659  3F                 	db	63	;'?'
  6589  00E65A  3A                 	db	58	;':'
  6590  00E65B  20                 	db	32
  6591  00E65C  52                 	db	82	;'R'
  6592  00E65D  65                 	db	101	;'e'
  6593  00E65E  74                 	db	116	;'t'
  6594  00E65F  75                 	db	117	;'u'
  6595  00E660  72                 	db	114	;'r'
  6596  00E661  6E                 	db	110	;'n'
  6597  00E662  73                 	db	115	;'s'
  6598  00E663  20                 	db	32
  6599  00E664  74                 	db	116	;'t'
  6600  00E665  68                 	db	104	;'h'
  6601  00E666  65                 	db	101	;'e'
  6602  00E667  20                 	db	32
  6603  00E668  6D                 	db	109	;'m'
  6604  00E669  61                 	db	97	;'a'
  6605  00E66A  78                 	db	120	;'x'
  6606  00E66B  69                 	db	105	;'i'
  6607  00E66C  6D                 	db	109	;'m'
  6608  00E66D  75                 	db	117	;'u'
  6609  00E66E  6D                 	db	109	;'m'
  6610  00E66F  20                 	db	32
  6611  00E670  72                 	db	114	;'r'
  6612  00E671  65                 	db	101	;'e'
  6613  00E672  63                 	db	99	;'c'
  6614  00E673  6F                 	db	111	;'o'
  6615  00E674  72                 	db	114	;'r'
  6616  00E675  64                 	db	100	;'d'
  6617  00E676  65                 	db	101	;'e'
  6618  00E677  64                 	db	100	;'d'
  6619  00E678  20                 	db	32
  6620  00E679  2B                 	db	43
  6621  00E67A  33                 	db	51	;'3'
  6622  00E67B  2E                 	db	46
  6623  00E67C  33                 	db	51	;'3'
  6624  00E67D  56                 	db	86	;'V'
  6625  00E67E  20                 	db	32
  6626  00E67F  52                 	db	82	;'R'
  6627  00E680  61                 	db	97	;'a'
  6628  00E681  69                 	db	105	;'i'
  6629  00E682  6C                 	db	108	;'l'
  6630  00E683  20                 	db	32
  6631  00E684  56                 	db	86	;'V'
  6632  00E685  6F                 	db	111	;'o'
  6633  00E686  6C                 	db	108	;'l'
  6634  00E687  74                 	db	116	;'t'
  6635  00E688  61                 	db	97	;'a'
  6636  00E689  67                 	db	103	;'g'
  6637  00E68A  65                 	db	101	;'e'
  6638  00E68B  20                 	db	32
  6639  00E68C  6D                 	db	109	;'m'
  6640  00E68D  65                 	db	101	;'e'
  6641  00E68E  61                 	db	97	;'a'
  6642  00E68F  73                 	db	115	;'s'
  6643  00E690  75                 	db	117	;'u'
  6644  00E691  72                 	db	114	;'r'
  6645  00E692  65                 	db	101	;'e'
  6646  00E693  64                 	db	100	;'d'
  6647  00E694  0A                 	db	10
  6648  00E695  0D                 	db	13
  6649  00E696  20                 	db	32
  6650  00E697  20                 	db	32
  6651  00E698  20                 	db	32
  6652  00E699  4D                 	db	77	;'M'
  6653  00E69A  61                 	db	97	;'a'
  6654  00E69B  78                 	db	120	;'x'
  6655  00E69C  20                 	db	32
  6656  00E69D  50                 	db	80	;'P'
  6657  00E69E  4F                 	db	79	;'O'
  6658  00E69F  53                 	db	83	;'S'
  6659  00E6A0  31                 	db	49	;'1'
  6660  00E6A1  32                 	db	50	;'2'
  6661  00E6A2  20                 	db	32
  6662  00E6A3  56                 	db	86	;'V'
  6663  00E6A4  6F                 	db	111	;'o'
  6664  00E6A5  6C                 	db	108	;'l'
  6665  00E6A6  74                 	db	116	;'t'
  6666  00E6A7  61                 	db	97	;'a'
  6667  00E6A8  67                 	db	103	;'g'
  6668  00E6A9  65                 	db	101	;'e'
  6669  00E6AA  3F                 	db	63	;'?'
  6670  00E6AB  3A                 	db	58	;':'
  6671  00E6AC  20                 	db	32
  6672  00E6AD  52                 	db	82	;'R'
  6673  00E6AE  65                 	db	101	;'e'
  6674  00E6AF  74                 	db	116	;'t'
  6675  00E6B0  75                 	db	117	;'u'
  6676  00E6B1  72                 	db	114	;'r'
  6677  00E6B2  6E                 	db	110	;'n'
  6678  00E6B3  73                 	db	115	;'s'
  6679  00E6B4  20                 	db	32
  6680  00E6B5  74                 	db	116	;'t'
  6681  00E6B6  68                 	db	104	;'h'
  6682  00E6B7  65                 	db	101	;'e'
  6683  00E6B8  20                 	db	32
  6684  00E6B9  6D                 	db	109	;'m'
  6685  00E6BA  61                 	db	97	;'a'
  6686  00E6BB  78                 	db	120	;'x'
  6687  00E6BC  69                 	db	105	;'i'
  6688  00E6BD  6D                 	db	109	;'m'
  6689  00E6BE  75                 	db	117	;'u'
  6690  00E6BF  6D                 	db	109	;'m'
  6691  00E6C0  20                 	db	32
  6692  00E6C1  72                 	db	114	;'r'
  6693  00E6C2  65                 	db	101	;'e'
  6694  00E6C3  63                 	db	99	;'c'
  6695  00E6C4  6F                 	db	111	;'o'
  6696  00E6C5  72                 	db	114	;'r'
  6697  00E6C6  64                 	db	100	;'d'
  6698  00E6C7  65                 	db	101	;'e'
  6699  00E6C8  64                 	db	100	;'d'
  6700  00E6C9  20                 	db	32
  6701  00E6CA  2B                 	db	43
  6702  00E6CB  31                 	db	49	;'1'
  6703  00E6CC  32                 	db	50	;'2'
  6704  00E6CD  56                 	db	86	;'V'
  6705  00E6CE  20                 	db	32
  6706  00E6CF  52                 	db	82	;'R'
  6707  00E6D0  61                 	db	97	;'a'
  6708  00E6D1  69                 	db	105	;'i'
  6709  00E6D2  6C                 	db	108	;'l'
  6710  00E6D3  20                 	db	32
  6711  00E6D4  56                 	db	86	;'V'
  6712  00E6D5  6F                 	db	111	;'o'
  6713  00E6D6  6C                 	db	108	;'l'
  6714  00E6D7  74                 	db	116	;'t'
  6715  00E6D8  61                 	db	97	;'a'
  6716  00E6D9  67                 	db	103	;'g'
  6717  00E6DA  65                 	db	101	;'e'
  6718  00E6DB  20                 	db	32
  6719  00E6DC  6D                 	db	109	;'m'
  6720  00E6DD  65                 	db	101	;'e'
  6721  00E6DE  61                 	db	97	;'a'
  6722  00E6DF  73                 	db	115	;'s'
  6723  00E6E0  75                 	db	117	;'u'
  6724  00E6E1  72                 	db	114	;'r'
  6725  00E6E2  65                 	db	101	;'e'
  6726  00E6E3  64                 	db	100	;'d'
  6727  00E6E4  0A                 	db	10
  6728  00E6E5  0D                 	db	13
  6729  00E6E6  20                 	db	32
  6730  00E6E7  20                 	db	32
  6731  00E6E8  20                 	db	32
  6732  00E6E9  4D                 	db	77	;'M'
  6733  00E6EA  61                 	db	97	;'a'
  6734  00E6EB  78                 	db	120	;'x'
  6735  00E6EC  20                 	db	32
  6736  00E6ED  44                 	db	68	;'D'
  6737  00E6EE  69                 	db	105	;'i'
  6738  00E6EF  65                 	db	101	;'e'
  6739  00E6F0  20                 	db	32
  6740  00E6F1  54                 	db	84	;'T'
  6741  00E6F2  65                 	db	101	;'e'
  6742  00E6F3  6D                 	db	109	;'m'
  6743  00E6F4  70                 	db	112	;'p'
  6744  00E6F5  3F                 	db	63	;'?'
  6745  00E6F6  3A                 	db	58	;':'
  6746  00E6F7  20                 	db	32
  6747  00E6F8  52                 	db	82	;'R'
  6748  00E6F9  65                 	db	101	;'e'
  6749  00E6FA  74                 	db	116	;'t'
  6750  00E6FB  75                 	db	117	;'u'
  6751  00E6FC  72                 	db	114	;'r'
  6752  00E6FD  6E                 	db	110	;'n'
  6753  00E6FE  73                 	db	115	;'s'
  6754  00E6FF  20                 	db	32
  6755  00E700  74                 	db	116	;'t'
  6756  00E701  68                 	db	104	;'h'
  6757  00E702  65                 	db	101	;'e'
  6758  00E703  20                 	db	32
  6759  00E704  6D                 	db	109	;'m'
  6760  00E705  61                 	db	97	;'a'
  6761  00E706  78                 	db	120	;'x'
  6762  00E707  69                 	db	105	;'i'
  6763  00E708  6D                 	db	109	;'m'
  6764  00E709  75                 	db	117	;'u'
  6765  00E70A  6D                 	db	109	;'m'
  6766  00E70B  20                 	db	32
  6767  00E70C  72                 	db	114	;'r'
  6768  00E70D  65                 	db	101	;'e'
  6769  00E70E  63                 	db	99	;'c'
  6770  00E70F  6F                 	db	111	;'o'
  6771  00E710  72                 	db	114	;'r'
  6772  00E711  64                 	db	100	;'d'
  6773  00E712  65                 	db	101	;'e'
  6774  00E713  64                 	db	100	;'d'
  6775  00E714  20                 	db	32
  6776  00E715  64                 	db	100	;'d'
  6777  00E716  69                 	db	105	;'i'
  6778  00E717  65                 	db	101	;'e'
  6779  00E718  20                 	db	32
  6780  00E719  74                 	db	116	;'t'
  6781  00E71A  65                 	db	101	;'e'
  6782  00E71B  6D                 	db	109	;'m'
  6783  00E71C  70                 	db	112	;'p'
  6784  00E71D  65                 	db	101	;'e'
  6785  00E71E  72                 	db	114	;'r'
  6786  00E71F  61                 	db	97	;'a'
  6787  00E720  74                 	db	116	;'t'
  6788  00E721  75                 	db	117	;'u'
  6789  00E722  72                 	db	114	;'r'
  6790  00E723  65                 	db	101	;'e'
  6791  00E724  20                 	db	32
  6792  00E725  6D                 	db	109	;'m'
  6793  00E726  65                 	db	101	;'e'
  6794  00E727  61                 	db	97	;'a'
  6795  00E728  73                 	db	115	;'s'
  6796  00E729  75                 	db	117	;'u'
  6797  00E72A  72                 	db	114	;'r'
  6798  00E72B  65                 	db	101	;'e'
  6799  00E72C  64                 	db	100	;'d'
  6800  00E72D  0A                 	db	10
  6801  00E72E  0D                 	db	13
  6802  00E72F  20                 	db	32
  6803  00E730  20                 	db	32
  6804  00E731  20                 	db	32
  6805  00E732  4D                 	db	77	;'M'
  6806  00E733  61                 	db	97	;'a'
  6807  00E734  78                 	db	120	;'x'
  6808  00E735  20                 	db	32
  6809  00E736  46                 	db	70	;'F'
  6810  00E737  56                 	db	86	;'V'
  6811  00E738  52                 	db	82	;'R'
  6812  00E739  20                 	db	32
  6813  00E73A  56                 	db	86	;'V'
  6814  00E73B  6F                 	db	111	;'o'
  6815  00E73C  6C                 	db	108	;'l'
  6816  00E73D  74                 	db	116	;'t'
  6817  00E73E  61                 	db	97	;'a'
  6818  00E73F  67                 	db	103	;'g'
  6819  00E740  65                 	db	101	;'e'
  6820  00E741  3F                 	db	63	;'?'
  6821  00E742  3A                 	db	58	;':'
  6822  00E743  20                 	db	32
  6823  00E744  52                 	db	82	;'R'
  6824  00E745  65                 	db	101	;'e'
  6825  00E746  74                 	db	116	;'t'
  6826  00E747  75                 	db	117	;'u'
  6827  00E748  72                 	db	114	;'r'
  6828  00E749  6E                 	db	110	;'n'
  6829  00E74A  73                 	db	115	;'s'
  6830  00E74B  20                 	db	32
  6831  00E74C  74                 	db	116	;'t'
  6832  00E74D  68                 	db	104	;'h'
  6833  00E74E  65                 	db	101	;'e'
  6834  00E74F  20                 	db	32
  6835  00E750  6D                 	db	109	;'m'
  6836  00E751  61                 	db	97	;'a'
  6837  00E752  78                 	db	120	;'x'
  6838  00E753  69                 	db	105	;'i'
  6839  00E754  6D                 	db	109	;'m'
  6840  00E755  75                 	db	117	;'u'
  6841  00E756  6D                 	db	109	;'m'
  6842  00E757  20                 	db	32
  6843  00E758  72                 	db	114	;'r'
  6844  00E759  65                 	db	101	;'e'
  6845  00E75A  63                 	db	99	;'c'
  6846  00E75B  6F                 	db	111	;'o'
  6847  00E75C  72                 	db	114	;'r'
  6848  00E75D  64                 	db	100	;'d'
  6849  00E75E  65                 	db	101	;'e'
  6850  00E75F  64                 	db	100	;'d'
  6851  00E760  20                 	db	32
  6852  00E761  46                 	db	70	;'F'
  6853  00E762  56                 	db	86	;'V'
  6854  00E763  52                 	db	82	;'R'
  6855  00E764  20                 	db	32
  6856  00E765  42                 	db	66	;'B'
  6857  00E766  75                 	db	117	;'u'
  6858  00E767  66                 	db	102	;'f'
  6859  00E768  66                 	db	102	;'f'
  6860  00E769  65                 	db	101	;'e'
  6861  00E76A  72                 	db	114	;'r'
  6862  00E76B  20                 	db	32
  6863  00E76C  31                 	db	49	;'1'
  6864  00E76D  20                 	db	32
  6865  00E76E  56                 	db	86	;'V'
  6866  00E76F  6F                 	db	111	;'o'
  6867  00E770  6C                 	db	108	;'l'
  6868  00E771  74                 	db	116	;'t'
  6869  00E772  61                 	db	97	;'a'
  6870  00E773  67                 	db	103	;'g'
  6871  00E774  65                 	db	101	;'e'
  6872  00E775  20                 	db	32
  6873  00E776  6D                 	db	109	;'m'
  6874  00E777  65                 	db	101	;'e'
  6875  00E778  61                 	db	97	;'a'
  6876  00E779  73                 	db	115	;'s'
  6877  00E77A  75                 	db	117	;'u'
  6878  00E77B  72                 	db	114	;'r'
  6879  00E77C  65                 	db	101	;'e'
  6880  00E77D  64                 	db	100	;'d'
  6881  00E77E  0A                 	db	10
  6882  00E77F  0D                 	db	13
  6883  00E780  0A                 	db	10
  6884  00E781  0D                 	db	13
  6885  00E782  00                 	db	0
  6886  00E783                     STR_173:
  6887  00E783  4C                 	db	76	;'L'
  6888  00E784  69                 	db	105	;'i'
  6889  00E785  73                 	db	115	;'s'
  6890  00E786  74                 	db	116	;'t'
  6891  00E787  20                 	db	32
  6892  00E788  6F                 	db	111	;'o'
  6893  00E789  66                 	db	102	;'f'
  6894  00E78A  20                 	db	32
  6895  00E78B  73                 	db	115	;'s'
  6896  00E78C  75                 	db	117	;'u'
  6897  00E78D  70                 	db	112	;'p'
  6898  00E78E  70                 	db	112	;'p'
  6899  00E78F  6F                 	db	111	;'o'
  6900  00E790  72                 	db	114	;'r'
  6901  00E791  74                 	db	116	;'t'
  6902  00E792  65                 	db	101	;'e'
  6903  00E793  64                 	db	100	;'d'
  6904  00E794  20                 	db	32
  6905  00E795  4F                 	db	79	;'O'
  6906  00E796  75                 	db	117	;'u'
  6907  00E797  74                 	db	116	;'t'
  6908  00E798  70                 	db	112	;'p'
  6909  00E799  75                 	db	117	;'u'
  6910  00E79A  74                 	db	116	;'t'
  6911  00E79B  20                 	db	32
  6912  00E79C  43                 	db	67	;'C'
  6913  00E79D  6F                 	db	111	;'o'
  6914  00E79E  6E                 	db	110	;'n'
  6915  00E79F  74                 	db	116	;'t'
  6916  00E7A0  72                 	db	114	;'r'
  6917  00E7A1  6F                 	db	111	;'o'
  6918  00E7A2  6C                 	db	108	;'l'
  6919  00E7A3  20                 	db	32
  6920  00E7A4  43                 	db	67	;'C'
  6921  00E7A5  6F                 	db	111	;'o'
  6922  00E7A6  6D                 	db	109	;'m'
  6923  00E7A7  6D                 	db	109	;'m'
  6924  00E7A8  61                 	db	97	;'a'
  6925  00E7A9  6E                 	db	110	;'n'
  6926  00E7AA  64                 	db	100	;'d'
  6927  00E7AB  73                 	db	115	;'s'
  6928  00E7AC  3A                 	db	58	;':'
  6929  00E7AD  0A                 	db	10
  6930  00E7AE  0D                 	db	13
  6931  00E7AF  20                 	db	32
  6932  00E7B0  20                 	db	32
  6933  00E7B1  20                 	db	32
  6934  00E7B2  45                 	db	69	;'E'
  6935  00E7B3  6E                 	db	110	;'n'
  6936  00E7B4  61                 	db	97	;'a'
  6937  00E7B5  62                 	db	98	;'b'
  6938  00E7B6  6C                 	db	108	;'l'
  6939  00E7B7  65                 	db	101	;'e'
  6940  00E7B8  20                 	db	32
  6941  00E7B9  44                 	db	68	;'D'
  6942  00E7BA  69                 	db	105	;'i'
  6943  00E7BB  6D                 	db	109	;'m'
  6944  00E7BC  6D                 	db	109	;'m'
  6945  00E7BD  69                 	db	105	;'i'
  6946  00E7BE  6E                 	db	110	;'n'
  6947  00E7BF  67                 	db	103	;'g'
  6948  00E7C0  3A                 	db	58	;':'
  6949  00E7C1  20                 	db	32
  6950  00E7C2  45                 	db	69	;'E'
  6951  00E7C3  6E                 	db	110	;'n'
  6952  00E7C4  61                 	db	97	;'a'
  6953  00E7C5  62                 	db	98	;'b'
  6954  00E7C6  6C                 	db	108	;'l'
  6955  00E7C7  65                 	db	101	;'e'
  6956  00E7C8  20                 	db	32
  6957  00E7C9  54                 	db	84	;'T'
  6958  00E7CA  52                 	db	82	;'R'
  6959  00E7CB  49                 	db	73	;'I'
  6960  00E7CC  41                 	db	65	;'A'
  6961  00E7CD  43                 	db	67	;'C'
  6962  00E7CE  20                 	db	32
  6963  00E7CF  6F                 	db	111	;'o'
  6964  00E7D0  75                 	db	117	;'u'
  6965  00E7D1  74                 	db	116	;'t'
  6966  00E7D2  70                 	db	112	;'p'
  6967  00E7D3  75                 	db	117	;'u'
  6968  00E7D4  74                 	db	116	;'t'
  6969  00E7D5  20                 	db	32
  6970  00E7D6  64                 	db	100	;'d'
  6971  00E7D7  69                 	db	105	;'i'
  6972  00E7D8  6D                 	db	109	;'m'
  6973  00E7D9  6D                 	db	109	;'m'
  6974  00E7DA  69                 	db	105	;'i'
  6975  00E7DB  6E                 	db	110	;'n'
  6976  00E7DC  67                 	db	103	;'g'
  6977  00E7DD  0A                 	db	10
  6978  00E7DE  0D                 	db	13
  6979  00E7DF  20                 	db	32
  6980  00E7E0  20                 	db	32
  6981  00E7E1  20                 	db	32
  6982  00E7E2  44                 	db	68	;'D'
  6983  00E7E3  69                 	db	105	;'i'
  6984  00E7E4  73                 	db	115	;'s'
  6985  00E7E5  61                 	db	97	;'a'
  6986  00E7E6  62                 	db	98	;'b'
  6987  00E7E7  6C                 	db	108	;'l'
  6988  00E7E8  65                 	db	101	;'e'
  6989  00E7E9  20                 	db	32
  6990  00E7EA  44                 	db	68	;'D'
  6991  00E7EB  69                 	db	105	;'i'
  6992  00E7EC  6D                 	db	109	;'m'
  6993  00E7ED  6D                 	db	109	;'m'
  6994  00E7EE  69                 	db	105	;'i'
  6995  00E7EF  6E                 	db	110	;'n'
  6996  00E7F0  67                 	db	103	;'g'
  6997  00E7F1  3A                 	db	58	;':'
  6998  00E7F2  20                 	db	32
  6999  00E7F3  44                 	db	68	;'D'
  7000  00E7F4  69                 	db	105	;'i'
  7001  00E7F5  73                 	db	115	;'s'
  7002  00E7F6  61                 	db	97	;'a'
  7003  00E7F7  62                 	db	98	;'b'
  7004  00E7F8  6C                 	db	108	;'l'
  7005  00E7F9  65                 	db	101	;'e'
  7006  00E7FA  20                 	db	32
  7007  00E7FB  54                 	db	84	;'T'
  7008  00E7FC  52                 	db	82	;'R'
  7009  00E7FD  49                 	db	73	;'I'
  7010  00E7FE  41                 	db	65	;'A'
  7011  00E7FF  43                 	db	67	;'C'
  7012  00E800  20                 	db	32
  7013  00E801  6F                 	db	111	;'o'
  7014  00E802  75                 	db	117	;'u'
  7015  00E803  74                 	db	116	;'t'
  7016  00E804  70                 	db	112	;'p'
  7017  00E805  75                 	db	117	;'u'
  7018  00E806  74                 	db	116	;'t'
  7019  00E807  20                 	db	32
  7020  00E808  64                 	db	100	;'d'
  7021  00E809  69                 	db	105	;'i'
  7022  00E80A  6D                 	db	109	;'m'
  7023  00E80B  6D                 	db	109	;'m'
  7024  00E80C  69                 	db	105	;'i'
  7025  00E80D  6E                 	db	110	;'n'
  7026  00E80E  67                 	db	103	;'g'
  7027  00E80F  0A                 	db	10
  7028  00E810  0D                 	db	13
  7029  00E811  20                 	db	32
  7030  00E812  20                 	db	32
  7031  00E813  20                 	db	32
  7032  00E814  45                 	db	69	;'E'
  7033  00E815  6E                 	db	110	;'n'
  7034  00E816  61                 	db	97	;'a'
  7035  00E817  62                 	db	98	;'b'
  7036  00E818  6C                 	db	108	;'l'
  7037  00E819  65                 	db	101	;'e'
  7038  00E81A  20                 	db	32
  7039  00E81B  4C                 	db	76	;'L'
  7040  00E81C  6F                 	db	111	;'o'
  7041  00E81D  61                 	db	97	;'a'
  7042  00E81E  64                 	db	100	;'d'
  7043  00E81F  3A                 	db	58	;':'
  7044  00E820  20                 	db	32
  7045  00E821  45                 	db	69	;'E'
  7046  00E822  6E                 	db	110	;'n'
  7047  00E823  61                 	db	97	;'a'
  7048  00E824  62                 	db	98	;'b'
  7049  00E825  6C                 	db	108	;'l'
  7050  00E826  65                 	db	101	;'e'
  7051  00E827  73                 	db	115	;'s'
  7052  00E828  20                 	db	32
  7053  00E829  74                 	db	116	;'t'
  7054  00E82A  68                 	db	104	;'h'
  7055  00E82B  65                 	db	101	;'e'
  7056  00E82C  20                 	db	32
  7057  00E82D  6F                 	db	111	;'o'
  7058  00E82E  75                 	db	117	;'u'
  7059  00E82F  74                 	db	116	;'t'
  7060  00E830  70                 	db	112	;'p'
  7061  00E831  75                 	db	117	;'u'
  7062  00E832  74                 	db	116	;'t'
  7063  00E833  20                 	db	32
  7064  00E834  54                 	db	84	;'T'
  7065  00E835  52                 	db	82	;'R'
  7066  00E836  49                 	db	73	;'I'
  7067  00E837  41                 	db	65	;'A'
  7068  00E838  43                 	db	67	;'C'
  7069  00E839  20                 	db	32
  7070  00E83A  77                 	db	119	;'w'
  7071  00E83B  69                 	db	105	;'i'
  7072  00E83C  74                 	db	116	;'t'
  7073  00E83D  68                 	db	104	;'h'
  7074  00E83E  20                 	db	32
  7075  00E83F  64                 	db	100	;'d'
  7076  00E840  69                 	db	105	;'i'
  7077  00E841  6D                 	db	109	;'m'
  7078  00E842  6D                 	db	109	;'m'
  7079  00E843  69                 	db	105	;'i'
  7080  00E844  6E                 	db	110	;'n'
  7081  00E845  67                 	db	103	;'g'
  7082  00E846  20                 	db	32
  7083  00E847  64                 	db	100	;'d'
  7084  00E848  69                 	db	105	;'i'
  7085  00E849  73                 	db	115	;'s'
  7086  00E84A  61                 	db	97	;'a'
  7087  00E84B  62                 	db	98	;'b'
  7088  00E84C  6C                 	db	108	;'l'
  7089  00E84D  65                 	db	101	;'e'
  7090  00E84E  64                 	db	100	;'d'
  7091  00E84F  0A                 	db	10
  7092  00E850  0D                 	db	13
  7093  00E851  20                 	db	32
  7094  00E852  20                 	db	32
  7095  00E853  20                 	db	32
  7096  00E854  44                 	db	68	;'D'
  7097  00E855  69                 	db	105	;'i'
  7098  00E856  73                 	db	115	;'s'
  7099  00E857  61                 	db	97	;'a'
  7100  00E858  62                 	db	98	;'b'
  7101  00E859  6C                 	db	108	;'l'
  7102  00E85A  65                 	db	101	;'e'
  7103  00E85B  20                 	db	32
  7104  00E85C  4C                 	db	76	;'L'
  7105  00E85D  6F                 	db	111	;'o'
  7106  00E85E  61                 	db	97	;'a'
  7107  00E85F  64                 	db	100	;'d'
  7108  00E860  3A                 	db	58	;':'
  7109  00E861  20                 	db	32
  7110  00E862  44                 	db	68	;'D'
  7111  00E863  69                 	db	105	;'i'
  7112  00E864  73                 	db	115	;'s'
  7113  00E865  61                 	db	97	;'a'
  7114  00E866  62                 	db	98	;'b'
  7115  00E867  6C                 	db	108	;'l'
  7116  00E868  65                 	db	101	;'e'
  7117  00E869  73                 	db	115	;'s'
  7118  00E86A  20                 	db	32
  7119  00E86B  74                 	db	116	;'t'
  7120  00E86C  68                 	db	104	;'h'
  7121  00E86D  65                 	db	101	;'e'
  7122  00E86E  20                 	db	32
  7123  00E86F  6F                 	db	111	;'o'
  7124  00E870  75                 	db	117	;'u'
  7125  00E871  74                 	db	116	;'t'
  7126  00E872  70                 	db	112	;'p'
  7127  00E873  75                 	db	117	;'u'
  7128  00E874  74                 	db	116	;'t'
  7129  00E875  20                 	db	32
  7130  00E876  54                 	db	84	;'T'
  7131  00E877  52                 	db	82	;'R'
  7132  00E878  49                 	db	73	;'I'
  7133  00E879  41                 	db	65	;'A'
  7134  00E87A  43                 	db	67	;'C'
  7135  00E87B  20                 	db	32
  7136  00E87C  63                 	db	99	;'c'
  7137  00E87D  6F                 	db	111	;'o'
  7138  00E87E  6D                 	db	109	;'m'
  7139  00E87F  70                 	db	112	;'p'
  7140  00E880  6C                 	db	108	;'l'
  7141  00E881  65                 	db	101	;'e'
  7142  00E882  74                 	db	116	;'t'
  7143  00E883  65                 	db	101	;'e'
  7144  00E884  6C                 	db	108	;'l'
  7145  00E885  79                 	db	121	;'y'
  7146  00E886  0A                 	db	10
  7147  00E887  0D                 	db	13
  7148  00E888  20                 	db	32
  7149  00E889  20                 	db	32
  7150  00E88A  20                 	db	32
  7151  00E88B  4C                 	db	76	;'L'
  7152  00E88C  6F                 	db	111	;'o'
  7153  00E88D  61                 	db	97	;'a'
  7154  00E88E  64                 	db	100	;'d'
  7155  00E88F  20                 	db	32
  7156  00E890  45                 	db	69	;'E'
  7157  00E891  6E                 	db	110	;'n'
  7158  00E892  61                 	db	97	;'a'
  7159  00E893  62                 	db	98	;'b'
  7160  00E894  6C                 	db	108	;'l'
  7161  00E895  65                 	db	101	;'e'
  7162  00E896  64                 	db	100	;'d'
  7163  00E897  3F                 	db	63	;'?'
  7164  00E898  3A                 	db	58	;':'
  7165  00E899  20                 	db	32
  7166  00E89A  52                 	db	82	;'R'
  7167  00E89B  65                 	db	101	;'e'
  7168  00E89C  74                 	db	116	;'t'
  7169  00E89D  75                 	db	117	;'u'
  7170  00E89E  72                 	db	114	;'r'
  7171  00E89F  6E                 	db	110	;'n'
  7172  00E8A0  73                 	db	115	;'s'
  7173  00E8A1  20                 	db	32
  7174  00E8A2  69                 	db	105	;'i'
  7175  00E8A3  66                 	db	102	;'f'
  7176  00E8A4  20                 	db	32
  7177  00E8A5  74                 	db	116	;'t'
  7178  00E8A6  68                 	db	104	;'h'
  7179  00E8A7  65                 	db	101	;'e'
  7180  00E8A8  20                 	db	32
  7181  00E8A9  6F                 	db	111	;'o'
  7182  00E8AA  75                 	db	117	;'u'
  7183  00E8AB  74                 	db	116	;'t'
  7184  00E8AC  70                 	db	112	;'p'
  7185  00E8AD  75                 	db	117	;'u'
  7186  00E8AE  74                 	db	116	;'t'
  7187  00E8AF  20                 	db	32
  7188  00E8B0  6C                 	db	108	;'l'
  7189  00E8B1  6F                 	db	111	;'o'
  7190  00E8B2  61                 	db	97	;'a'
  7191  00E8B3  64                 	db	100	;'d'
  7192  00E8B4  20                 	db	32
  7193  00E8B5  69                 	db	105	;'i'
  7194  00E8B6  73                 	db	115	;'s'
  7195  00E8B7  20                 	db	32
  7196  00E8B8  65                 	db	101	;'e'
  7197  00E8B9  6E                 	db	110	;'n'
  7198  00E8BA  61                 	db	97	;'a'
  7199  00E8BB  62                 	db	98	;'b'
  7200  00E8BC  6C                 	db	108	;'l'
  7201  00E8BD  65                 	db	101	;'e'
  7202  00E8BE  64                 	db	100	;'d'
  7203  00E8BF  20                 	db	32
  7204  00E8C0  6F                 	db	111	;'o'
  7205  00E8C1  72                 	db	114	;'r'
  7206  00E8C2  20                 	db	32
  7207  00E8C3  64                 	db	100	;'d'
  7208  00E8C4  69                 	db	105	;'i'
  7209  00E8C5  73                 	db	115	;'s'
  7210  00E8C6  61                 	db	97	;'a'
  7211  00E8C7  62                 	db	98	;'b'
  7212  00E8C8  6C                 	db	108	;'l'
  7213  00E8C9  65                 	db	101	;'e'
  7214  00E8CA  64                 	db	100	;'d'
  7215  00E8CB  0A                 	db	10
  7216  00E8CC  0D                 	db	13
  7217  00E8CD  20                 	db	32
  7218  00E8CE  20                 	db	32
  7219  00E8CF  20                 	db	32
  7220  00E8D0  44                 	db	68	;'D'
  7221  00E8D1  69                 	db	105	;'i'
  7222  00E8D2  6D                 	db	109	;'m'
  7223  00E8D3  6D                 	db	109	;'m'
  7224  00E8D4  69                 	db	105	;'i'
  7225  00E8D5  6E                 	db	110	;'n'
  7226  00E8D6  67                 	db	103	;'g'
  7227  00E8D7  20                 	db	32
  7228  00E8D8  45                 	db	69	;'E'
  7229  00E8D9  6E                 	db	110	;'n'
  7230  00E8DA  61                 	db	97	;'a'
  7231  00E8DB  62                 	db	98	;'b'
  7232  00E8DC  6C                 	db	108	;'l'
  7233  00E8DD  65                 	db	101	;'e'
  7234  00E8DE  64                 	db	100	;'d'
  7235  00E8DF  3F                 	db	63	;'?'
  7236  00E8E0  3A                 	db	58	;':'
  7237  00E8E1  20                 	db	32
  7238  00E8E2  52                 	db	82	;'R'
  7239  00E8E3  65                 	db	101	;'e'
  7240  00E8E4  74                 	db	116	;'t'
  7241  00E8E5  75                 	db	117	;'u'
  7242  00E8E6  72                 	db	114	;'r'
  7243  00E8E7  6E                 	db	110	;'n'
  7244  00E8E8  73                 	db	115	;'s'
  7245  00E8E9  20                 	db	32
  7246  00E8EA  69                 	db	105	;'i'
  7247  00E8EB  66                 	db	102	;'f'
  7248  00E8EC  20                 	db	32
  7249  00E8ED  64                 	db	100	;'d'
  7250  00E8EE  69                 	db	105	;'i'
  7251  00E8EF  6D                 	db	109	;'m'
  7252  00E8F0  6D                 	db	109	;'m'
  7253  00E8F1  69                 	db	105	;'i'
  7254  00E8F2  6E                 	db	110	;'n'
  7255  00E8F3  67                 	db	103	;'g'
  7256  00E8F4  20                 	db	32
  7257  00E8F5  6F                 	db	111	;'o'
  7258  00E8F6  66                 	db	102	;'f'
  7259  00E8F7  20                 	db	32
  7260  00E8F8  74                 	db	116	;'t'
  7261  00E8F9  68                 	db	104	;'h'
  7262  00E8FA  65                 	db	101	;'e'
  7263  00E8FB  20                 	db	32
  7264  00E8FC  6F                 	db	111	;'o'
  7265  00E8FD  75                 	db	117	;'u'
  7266  00E8FE  74                 	db	116	;'t'
  7267  00E8FF  70                 	db	112	;'p'
  7268  00E900  75                 	db	117	;'u'
  7269  00E901  74                 	db	116	;'t'
  7270  00E902  20                 	db	32
  7271  00E903  6C                 	db	108	;'l'
  7272  00E904  6F                 	db	111	;'o'
  7273  00E905  61                 	db	97	;'a'
  7274  00E906  64                 	db	100	;'d'
  7275  00E907  20                 	db	32
  7276  00E908  69                 	db	105	;'i'
  7277  00E909  73                 	db	115	;'s'
  7278  00E90A  20                 	db	32
  7279  00E90B  65                 	db	101	;'e'
  7280  00E90C  6E                 	db	110	;'n'
  7281  00E90D  61                 	db	97	;'a'
  7282  00E90E  62                 	db	98	;'b'
  7283  00E90F  6C                 	db	108	;'l'
  7284  00E910  65                 	db	101	;'e'
  7285  00E911  64                 	db	100	;'d'
  7286  00E912  20                 	db	32
  7287  00E913  6F                 	db	111	;'o'
  7288  00E914  72                 	db	114	;'r'
  7289  00E915  20                 	db	32
  7290  00E916  6E                 	db	110	;'n'
  7291  00E917  6F                 	db	111	;'o'
  7292  00E918  74                 	db	116	;'t'
  7293  00E919  0A                 	db	10
  7294  00E91A  0D                 	db	13
  7295  00E91B  20                 	db	32
  7296  00E91C  20                 	db	32
  7297  00E91D  20                 	db	32
  7298  00E91E  53                 	db	83	;'S'
  7299  00E91F  65                 	db	101	;'e'
  7300  00E920  74                 	db	116	;'t'
  7301  00E921  20                 	db	32
  7302  00E922  44                 	db	68	;'D'
  7303  00E923  69                 	db	105	;'i'
  7304  00E924  6D                 	db	109	;'m'
  7305  00E925  6D                 	db	109	;'m'
  7306  00E926  69                 	db	105	;'i'
  7307  00E927  6E                 	db	110	;'n'
  7308  00E928  67                 	db	103	;'g'
  7309  00E929  20                 	db	32
  7310  00E92A  50                 	db	80	;'P'
  7311  00E92B  65                 	db	101	;'e'
  7312  00E92C  72                 	db	114	;'r'
  7313  00E92D  63                 	db	99	;'c'
  7314  00E92E  65                 	db	101	;'e'
  7315  00E92F  6E                 	db	110	;'n'
  7316  00E930  74                 	db	116	;'t'
  7317  00E931  61                 	db	97	;'a'
  7318  00E932  67                 	db	103	;'g'
  7319  00E933  65                 	db	101	;'e'
  7320  00E934  3A                 	db	58	;':'
  7321  00E935  20                 	db	32
  7322  00E936  3C                 	db	60	;'<'
  7323  00E937  78                 	db	120	;'x'
  7324  00E938  3E                 	db	62	;'>'
  7325  00E939  3A                 	db	58	;':'
  7326  00E93A  20                 	db	32
  7327  00E93B  53                 	db	83	;'S'
  7328  00E93C  65                 	db	101	;'e'
  7329  00E93D  74                 	db	116	;'t'
  7330  00E93E  73                 	db	115	;'s'
  7331  00E93F  20                 	db	32
  7332  00E940  74                 	db	116	;'t'
  7333  00E941  68                 	db	104	;'h'
  7334  00E942  65                 	db	101	;'e'
  7335  00E943  20                 	db	32
  7336  00E944  6F                 	db	111	;'o'
  7337  00E945  75                 	db	117	;'u'
  7338  00E946  74                 	db	116	;'t'
  7339  00E947  70                 	db	112	;'p'
  7340  00E948  75                 	db	117	;'u'
  7341  00E949  74                 	db	116	;'t'
  7342  00E94A  20                 	db	32
  7343  00E94B  64                 	db	100	;'d'
  7344  00E94C  69                 	db	105	;'i'
  7345  00E94D  6D                 	db	109	;'m'
  7346  00E94E  6D                 	db	109	;'m'
  7347  00E94F  69                 	db	105	;'i'
  7348  00E950  6E                 	db	110	;'n'
  7349  00E951  67                 	db	103	;'g'
  7350  00E952  20                 	db	32
  7351  00E953  70                 	db	112	;'p'
  7352  00E954  65                 	db	101	;'e'
  7353  00E955  72                 	db	114	;'r'
  7354  00E956  63                 	db	99	;'c'
  7355  00E957  65                 	db	101	;'e'
  7356  00E958  6E                 	db	110	;'n'
  7357  00E959  74                 	db	116	;'t'
  7358  00E95A  61                 	db	97	;'a'
  7359  00E95B  67                 	db	103	;'g'
  7360  00E95C  65                 	db	101	;'e'
  7361  00E95D  20                 	db	32
  7362  00E95E  61                 	db	97	;'a'
  7363  00E95F  73                 	db	115	;'s'
  7364  00E960  20                 	db	32
  7365  00E961  78                 	db	120	;'x'
  7366  00E962  20                 	db	32
  7367  00E963  70                 	db	112	;'p'
  7368  00E964  65                 	db	101	;'e'
  7369  00E965  72                 	db	114	;'r'
  7370  00E966  63                 	db	99	;'c'
  7371  00E967  65                 	db	101	;'e'
  7372  00E968  6E                 	db	110	;'n'
  7373  00E969  74                 	db	116	;'t'
  7374  00E96A  0A                 	db	10
  7375  00E96B  0D                 	db	13
  7376  00E96C  0A                 	db	10
  7377  00E96D  0D                 	db	13
  7378  00E96E  00                 	db	0
  7379  00E96F                     STR_177:
  7380  00E96F  50                 	db	80	;'P'
  7381  00E970  6C                 	db	108	;'l'
  7382  00E971  65                 	db	101	;'e'
  7383  00E972  61                 	db	97	;'a'
  7384  00E973  73                 	db	115	;'s'
  7385  00E974  65                 	db	101	;'e'
  7386  00E975  20                 	db	32
  7387  00E976  73                 	db	115	;'s'
  7388  00E977  70                 	db	112	;'p'
  7389  00E978  65                 	db	101	;'e'
  7390  00E979  63                 	db	99	;'c'
  7391  00E97A  69                 	db	105	;'i'
  7392  00E97B  66                 	db	102	;'f'
  7393  00E97C  79                 	db	121	;'y'
  7394  00E97D  20                 	db	32
  7395  00E97E  77                 	db	119	;'w'
  7396  00E97F  68                 	db	104	;'h'
  7397  00E980  61                 	db	97	;'a'
  7398  00E981  74                 	db	116	;'t'
  7399  00E982  20                 	db	32
  7400  00E983  74                 	db	116	;'t'
  7401  00E984  79                 	db	121	;'y'
  7402  00E985  70                 	db	112	;'p'
  7403  00E986  65                 	db	101	;'e'
  7404  00E987  20                 	db	32
  7405  00E988  6F                 	db	111	;'o'
  7406  00E989  66                 	db	102	;'f'
  7407  00E98A  20                 	db	32
  7408  00E98B  63                 	db	99	;'c'
  7409  00E98C  6F                 	db	111	;'o'
  7410  00E98D  6D                 	db	109	;'m'
  7411  00E98E  6D                 	db	109	;'m'
  7412  00E98F  61                 	db	97	;'a'
  7413  00E990  6E                 	db	110	;'n'
  7414  00E991  64                 	db	100	;'d'
  7415  00E992  73                 	db	115	;'s'
  7416  00E993  20                 	db	32
  7417  00E994  79                 	db	121	;'y'
  7418  00E995  6F                 	db	111	;'o'
  7419  00E996  75                 	db	117	;'u'
  7420  00E997  27                 	db	39
  7421  00E998  64                 	db	100	;'d'
  7422  00E999  20                 	db	32
  7423  00E99A  6C                 	db	108	;'l'
  7424  00E99B  69                 	db	105	;'i'
  7425  00E99C  6B                 	db	107	;'k'
  7426  00E99D  65                 	db	101	;'e'
  7427  00E99E  20                 	db	32
  7428  00E99F  68                 	db	104	;'h'
  7429  00E9A0  65                 	db	101	;'e'
  7430  00E9A1  6C                 	db	108	;'l'
  7431  00E9A2  70                 	db	112	;'p'
  7432  00E9A3  20                 	db	32
  7433  00E9A4  77                 	db	119	;'w'
  7434  00E9A5  69                 	db	105	;'i'
  7435  00E9A6  74                 	db	116	;'t'
  7436  00E9A7  68                 	db	104	;'h'
  7437  00E9A8  3A                 	db	58	;':'
  7438  00E9A9  0A                 	db	10
  7439  00E9AA  0D                 	db	13
  7440  00E9AB  54                 	db	84	;'T'
  7441  00E9AC  72                 	db	114	;'r'
  7442  00E9AD  79                 	db	121	;'y'
  7443  00E9AE  20                 	db	32
  7444  00E9AF  27                 	db	39
  7445  00E9B0  48                 	db	72	;'H'
  7446  00E9B1  65                 	db	101	;'e'
  7447  00E9B2  6C                 	db	108	;'l'
  7448  00E9B3  70                 	db	112	;'p'
  7449  00E9B4  20                 	db	32
  7450  00E9B5  3C                 	db	60	;'<'
  7451  00E9B6  63                 	db	99	;'c'
  7452  00E9B7  6F                 	db	111	;'o'
  7453  00E9B8  6D                 	db	109	;'m'
  7454  00E9B9  6D                 	db	109	;'m'
  7455  00E9BA  61                 	db	97	;'a'
  7456  00E9BB  6E                 	db	110	;'n'
  7457  00E9BC  64                 	db	100	;'d'
  7458  00E9BD  20                 	db	32
  7459  00E9BE  73                 	db	115	;'s'
  7460  00E9BF  65                 	db	101	;'e'
  7461  00E9C0  74                 	db	116	;'t'
  7462  00E9C1  3E                 	db	62	;'>'
  7463  00E9C2  27                 	db	39
  7464  00E9C3  0A                 	db	10
  7465  00E9C4  0D                 	db	13
  7466  00E9C5  0A                 	db	10
  7467  00E9C6  0D                 	db	13
  7468  00E9C7  53                 	db	83	;'S'
  7469  00E9C8  75                 	db	117	;'u'
  7470  00E9C9  70                 	db	112	;'p'
  7471  00E9CA  70                 	db	112	;'p'
  7472  00E9CB  6F                 	db	111	;'o'
  7473  00E9CC  72                 	db	114	;'r'
  7474  00E9CD  74                 	db	116	;'t'
  7475  00E9CE  65                 	db	101	;'e'
  7476  00E9CF  64                 	db	100	;'d'
  7477  00E9D0  20                 	db	32
  7478  00E9D1  43                 	db	67	;'C'
  7479  00E9D2  6F                 	db	111	;'o'
  7480  00E9D3  6D                 	db	109	;'m'
  7481  00E9D4  6D                 	db	109	;'m'
  7482  00E9D5  61                 	db	97	;'a'
  7483  00E9D6  6E                 	db	110	;'n'
  7484  00E9D7  64                 	db	100	;'d'
  7485  00E9D8  20                 	db	32
  7486  00E9D9  53                 	db	83	;'S'
  7487  00E9DA  65                 	db	101	;'e'
  7488  00E9DB  74                 	db	116	;'t'
  7489  00E9DC  73                 	db	115	;'s'
  7490  00E9DD  3A                 	db	58	;':'
  7491  00E9DE  0A                 	db	10
  7492  00E9DF  0D                 	db	13
  7493  00E9E0  20                 	db	32
  7494  00E9E1  20                 	db	32
  7495  00E9E2  20                 	db	32
  7496  00E9E3  44                 	db	68	;'D'
  7497  00E9E4  65                 	db	101	;'e'
  7498  00E9E5  76                 	db	118	;'v'
  7499  00E9E6  69                 	db	105	;'i'
  7500  00E9E7  63                 	db	99	;'c'
  7501  00E9E8  65                 	db	101	;'e'
  7502  00E9E9  20                 	db	32
  7503  00E9EA  43                 	db	67	;'C'
  7504  00E9EB  6F                 	db	111	;'o'
  7505  00E9EC  6E                 	db	110	;'n'
  7506  00E9ED  74                 	db	116	;'t'
  7507  00E9EE  72                 	db	114	;'r'
  7508  00E9EF  6F                 	db	111	;'o'
  7509  00E9F0  6C                 	db	108	;'l'
  7510  00E9F1  20                 	db	32
  7511  00E9F2  43                 	db	67	;'C'
  7512  00E9F3  6F                 	db	111	;'o'
  7513  00E9F4  6D                 	db	109	;'m'
  7514  00E9F5  6D                 	db	109	;'m'
  7515  00E9F6  61                 	db	97	;'a'
  7516  00E9F7  6E                 	db	110	;'n'
  7517  00E9F8  64                 	db	100	;'d'
  7518  00E9F9  73                 	db	115	;'s'
  7519  00E9FA  3A                 	db	58	;':'
  7520  00E9FB  20                 	db	32
  7521  00E9FC  43                 	db	67	;'C'
  7522  00E9FD  6F                 	db	111	;'o'
  7523  00E9FE  6D                 	db	109	;'m'
  7524  00E9FF  6D                 	db	109	;'m'
  7525  00EA00  61                 	db	97	;'a'
  7526  00EA01  6E                 	db	110	;'n'
  7527  00EA02  64                 	db	100	;'d'
  7528  00EA03  73                 	db	115	;'s'
  7529  00EA04  20                 	db	32
  7530  00EA05  74                 	db	116	;'t'
  7531  00EA06  6F                 	db	111	;'o'
  7532  00EA07  20                 	db	32
  7533  00EA08  76                 	db	118	;'v'
  7534  00EA09  69                 	db	105	;'i'
  7535  00EA0A  65                 	db	101	;'e'
  7536  00EA0B  77                 	db	119	;'w'
  7537  00EA0C  20                 	db	32
  7538  00EA0D  61                 	db	97	;'a'
  7539  00EA0E  6E                 	db	110	;'n'
  7540  00EA0F  64                 	db	100	;'d'
  7541  00EA10  20                 	db	32
  7542  00EA11  63                 	db	99	;'c'
  7543  00EA12  6F                 	db	111	;'o'
  7544  00EA13  6E                 	db	110	;'n'
  7545  00EA14  74                 	db	116	;'t'
  7546  00EA15  72                 	db	114	;'r'
  7547  00EA16  6F                 	db	111	;'o'
  7548  00EA17  6C                 	db	108	;'l'
  7549  00EA18  20                 	db	32
  7550  00EA19  6C                 	db	108	;'l'
  7551  00EA1A  6F                 	db	111	;'o'
  7552  00EA1B  77                 	db	119	;'w'
  7553  00EA1C  20                 	db	32
  7554  00EA1D  6C                 	db	108	;'l'
  7555  00EA1E  65                 	db	101	;'e'
  7556  00EA1F  76                 	db	118	;'v'
  7557  00EA20  65                 	db	101	;'e'
  7558  00EA21  6C                 	db	108	;'l'
  7559  00EA22  20                 	db	32
  7560  00EA23  73                 	db	115	;'s'
  7561  00EA24  79                 	db	121	;'y'
  7562  00EA25  73                 	db	115	;'s'
  7563  00EA26  74                 	db	116	;'t'
  7564  00EA27  65                 	db	101	;'e'
  7565  00EA28  6D                 	db	109	;'m'
  7566  00EA29  20                 	db	32
  7567  00EA2A  66                 	db	102	;'f'
  7568  00EA2B  75                 	db	117	;'u'
  7569  00EA2C  6E                 	db	110	;'n'
  7570  00EA2D  63                 	db	99	;'c'
  7571  00EA2E  74                 	db	116	;'t'
  7572  00EA2F  69                 	db	105	;'i'
  7573  00EA30  6F                 	db	111	;'o'
  7574  00EA31  6E                 	db	110	;'n'
  7575  00EA32  61                 	db	97	;'a'
  7576  00EA33  6C                 	db	108	;'l'
  7577  00EA34  69                 	db	105	;'i'
  7578  00EA35  74                 	db	116	;'t'
  7579  00EA36  79                 	db	121	;'y'
  7580  00EA37  0A                 	db	10
  7581  00EA38  0D                 	db	13
  7582  00EA39  20                 	db	32
  7583  00EA3A  20                 	db	32
  7584  00EA3B  20                 	db	32
  7585  00EA3C  44                 	db	68	;'D'
  7586  00EA3D  65                 	db	101	;'e'
  7587  00EA3E  76                 	db	118	;'v'
  7588  00EA3F  69                 	db	105	;'i'
  7589  00EA40  63                 	db	99	;'c'
  7590  00EA41  65                 	db	101	;'e'
  7591  00EA42  20                 	db	32
  7592  00EA43  4D                 	db	77	;'M'
  7593  00EA44  65                 	db	101	;'e'
  7594  00EA45  61                 	db	97	;'a'
  7595  00EA46  73                 	db	115	;'s'
  7596  00EA47  75                 	db	117	;'u'
  7597  00EA48  72                 	db	114	;'r'
  7598  00EA49  65                 	db	101	;'e'
  7599  00EA4A  6D                 	db	109	;'m'
  7600  00EA4B  65                 	db	101	;'e'
  7601  00EA4C  6E                 	db	110	;'n'
  7602  00EA4D  74                 	db	116	;'t'
  7603  00EA4E  20                 	db	32
  7604  00EA4F  43                 	db	67	;'C'
  7605  00EA50  6F                 	db	111	;'o'
  7606  00EA51  6D                 	db	109	;'m'
  7607  00EA52  6D                 	db	109	;'m'
  7608  00EA53  61                 	db	97	;'a'
  7609  00EA54  6E                 	db	110	;'n'
  7610  00EA55  64                 	db	100	;'d'
  7611  00EA56  73                 	db	115	;'s'
  7612  00EA57  3A                 	db	58	;':'
  7613  00EA58  20                 	db	32
  7614  00EA59  56                 	db	86	;'V'
  7615  00EA5A  69                 	db	105	;'i'
  7616  00EA5B  65                 	db	101	;'e'
  7617  00EA5C  77                 	db	119	;'w'
  7618  00EA5D  20                 	db	32
  7619  00EA5E  6C                 	db	108	;'l'
  7620  00EA5F  6F                 	db	111	;'o'
  7621  00EA60  77                 	db	119	;'w'
  7622  00EA61  20                 	db	32
  7623  00EA62  6C                 	db	108	;'l'
  7624  00EA63  65                 	db	101	;'e'
  7625  00EA64  76                 	db	118	;'v'
  7626  00EA65  65                 	db	101	;'e'
  7627  00EA66  6C                 	db	108	;'l'
  7628  00EA67  20                 	db	32
  7629  00EA68  73                 	db	115	;'s'
  7630  00EA69  79                 	db	121	;'y'
  7631  00EA6A  73                 	db	115	;'s'
  7632  00EA6B  74                 	db	116	;'t'
  7633  00EA6C  65                 	db	101	;'e'
  7634  00EA6D  6D                 	db	109	;'m'
  7635  00EA6E  20                 	db	32
  7636  00EA6F  6D                 	db	109	;'m'
  7637  00EA70  65                 	db	101	;'e'
  7638  00EA71  61                 	db	97	;'a'
  7639  00EA72  73                 	db	115	;'s'
  7640  00EA73  75                 	db	117	;'u'
  7641  00EA74  72                 	db	114	;'r'
  7642  00EA75  65                 	db	101	;'e'
  7643  00EA76  6D                 	db	109	;'m'
  7644  00EA77  65                 	db	101	;'e'
  7645  00EA78  6E                 	db	110	;'n'
  7646  00EA79  74                 	db	116	;'t'
  7647  00EA7A  73                 	db	115	;'s'
  7648  00EA7B  0A                 	db	10
  7649  00EA7C  0D                 	db	13
  7650  00EA7D  20                 	db	32
  7651  00EA7E  20                 	db	32
  7652  00EA7F  20                 	db	32
  7653  00EA80  50                 	db	80	;'P'
  7654  00EA81  72                 	db	114	;'r'
  7655  00EA82  69                 	db	105	;'i'
  7656  00EA83  6D                 	db	109	;'m'
  7657  00EA84  61                 	db	97	;'a'
  7658  00EA85  72                 	db	114	;'r'
  7659  00EA86  79                 	db	121	;'y'
  7660  00EA87  20                 	db	32
  7661  00EA88  4D                 	db	77	;'M'
  7662  00EA89  65                 	db	101	;'e'
  7663  00EA8A  61                 	db	97	;'a'
  7664  00EA8B  73                 	db	115	;'s'
  7665  00EA8C  75                 	db	117	;'u'
  7666  00EA8D  72                 	db	114	;'r'
  7667  00EA8E  65                 	db	101	;'e'
  7668  00EA8F  6D                 	db	109	;'m'
  7669  00EA90  65                 	db	101	;'e'
  7670  00EA91  6E                 	db	110	;'n'
  7671  00EA92  74                 	db	116	;'t'
  7672  00EA93  20                 	db	32
  7673  00EA94  43                 	db	67	;'C'
  7674  00EA95  6F                 	db	111	;'o'
  7675  00EA96  6D                 	db	109	;'m'
  7676  00EA97  6D                 	db	109	;'m'
  7677  00EA98  61                 	db	97	;'a'
  7678  00EA99  6E                 	db	110	;'n'
  7679  00EA9A  64                 	db	100	;'d'
  7680  00EA9B  73                 	db	115	;'s'
  7681  00EA9C  3A                 	db	58	;':'
  7682  00EA9D  20                 	db	32
  7683  00EA9E  56                 	db	86	;'V'
  7684  00EA9F  69                 	db	105	;'i'
  7685  00EAA0  65                 	db	101	;'e'
  7686  00EAA1  77                 	db	119	;'w'
  7687  00EAA2  20                 	db	32
  7688  00EAA3  68                 	db	104	;'h'
  7689  00EAA4  69                 	db	105	;'i'
  7690  00EAA5  67                 	db	103	;'g'
  7691  00EAA6  68                 	db	104	;'h'
  7692  00EAA7  20                 	db	32
  7693  00EAA8  6C                 	db	108	;'l'
  7694  00EAA9  65                 	db	101	;'e'
  7695  00EAAA  76                 	db	118	;'v'
  7696  00EAAB  65                 	db	101	;'e'
  7697  00EAAC  6C                 	db	108	;'l'
  7698  00EAAD  20                 	db	32
  7699  00EAAE  6F                 	db	111	;'o'
  7700  00EAAF  75                 	db	117	;'u'
  7701  00EAB0  74                 	db	116	;'t'
  7702  00EAB1  70                 	db	112	;'p'
  7703  00EAB2  75                 	db	117	;'u'
  7704  00EAB3  74                 	db	116	;'t'
  7705  00EAB4  20                 	db	32
  7706  00EAB5  6D                 	db	109	;'m'
  7707  00EAB6  65                 	db	101	;'e'
  7708  00EAB7  61                 	db	97	;'a'
  7709  00EAB8  73                 	db	115	;'s'
  7710  00EAB9  75                 	db	117	;'u'
  7711  00EABA  72                 	db	114	;'r'
  7712  00EABB  65                 	db	101	;'e'
  7713  00EABC  6D                 	db	109	;'m'
  7714  00EABD  65                 	db	101	;'e'
  7715  00EABE  6E                 	db	110	;'n'
  7716  00EABF  74                 	db	116	;'t'
  7717  00EAC0  73                 	db	115	;'s'
  7718  00EAC1  20                 	db	32
  7719  00EAC2  61                 	db	97	;'a'
  7720  00EAC3  6E                 	db	110	;'n'
  7721  00EAC4  64                 	db	100	;'d'
  7722  00EAC5  20                 	db	32
  7723  00EAC6  63                 	db	99	;'c'
  7724  00EAC7  61                 	db	97	;'a'
  7725  00EAC8  6C                 	db	108	;'l'
  7726  00EAC9  63                 	db	99	;'c'
  7727  00EACA  75                 	db	117	;'u'
  7728  00EACB  6C                 	db	108	;'l'
  7729  00EACC  61                 	db	97	;'a'
  7730  00EACD  74                 	db	116	;'t'
  7731  00EACE  69                 	db	105	;'i'
  7732  00EACF  6F                 	db	111	;'o'
  7733  00EAD0  6E                 	db	110	;'n'
  7734  00EAD1  73                 	db	115	;'s'
  7735  00EAD2  0A                 	db	10
  7736  00EAD3  0D                 	db	13
  7737  00EAD4  20                 	db	32
  7738  00EAD5  20                 	db	32
  7739  00EAD6  20                 	db	32
  7740  00EAD7  4F                 	db	79	;'O'
  7741  00EAD8  75                 	db	117	;'u'
  7742  00EAD9  74                 	db	116	;'t'
  7743  00EADA  70                 	db	112	;'p'
  7744  00EADB  75                 	db	117	;'u'
  7745  00EADC  74                 	db	116	;'t'
  7746  00EADD  20                 	db	32
  7747  00EADE  43                 	db	67	;'C'
  7748  00EADF  6F                 	db	111	;'o'
  7749  00EAE0  6E                 	db	110	;'n'
  7750  00EAE1  74                 	db	116	;'t'
  7751  00EAE2  72                 	db	114	;'r'
  7752  00EAE3  6F                 	db	111	;'o'
  7753  00EAE4  6C                 	db	108	;'l'
  7754  00EAE5  20                 	db	32
  7755  00EAE6  43                 	db	67	;'C'
  7756  00EAE7  6F                 	db	111	;'o'
  7757  00EAE8  6D                 	db	109	;'m'
  7758  00EAE9  6D                 	db	109	;'m'
  7759  00EAEA  61                 	db	97	;'a'
  7760  00EAEB  6E                 	db	110	;'n'
  7761  00EAEC  64                 	db	100	;'d'
  7762  00EAED  73                 	db	115	;'s'
  7763  00EAEE  3A                 	db	58	;':'
  7764  00EAEF  20                 	db	32
  7765  00EAF0  43                 	db	67	;'C'
  7766  00EAF1  6F                 	db	111	;'o'
  7767  00EAF2  6E                 	db	110	;'n'
  7768  00EAF3  74                 	db	116	;'t'
  7769  00EAF4  72                 	db	114	;'r'
  7770  00EAF5  6F                 	db	111	;'o'
  7771  00EAF6  6C                 	db	108	;'l'
  7772  00EAF7  20                 	db	32
  7773  00EAF8  74                 	db	116	;'t'
  7774  00EAF9  68                 	db	104	;'h'
  7775  00EAFA  65                 	db	101	;'e'
  7776  00EAFB  20                 	db	32
  7777  00EAFC  6F                 	db	111	;'o'
  7778  00EAFD  75                 	db	117	;'u'
  7779  00EAFE  74                 	db	116	;'t'
  7780  00EAFF  70                 	db	112	;'p'
  7781  00EB00  75                 	db	117	;'u'
  7782  00EB01  74                 	db	116	;'t'
  7783  00EB02  20                 	db	32
  7784  00EB03  73                 	db	115	;'s'
  7785  00EB04  74                 	db	116	;'t'
  7786  00EB05  61                 	db	97	;'a'
  7787  00EB06  74                 	db	116	;'t'
  7788  00EB07  65                 	db	101	;'e'
  7789  00EB08  20                 	db	32
  7790  00EB09  61                 	db	97	;'a'
  7791  00EB0A  6E                 	db	110	;'n'
  7792  00EB0B  64                 	db	100	;'d'
  7793  00EB0C  20                 	db	32
  7794  00EB0D  64                 	db	100	;'d'
  7795  00EB0E  69                 	db	105	;'i'
  7796  00EB0F  6D                 	db	109	;'m'
  7797  00EB10  6D                 	db	109	;'m'
  7798  00EB11  69                 	db	105	;'i'
  7799  00EB12  6E                 	db	110	;'n'
  7800  00EB13  67                 	db	103	;'g'
  7801  00EB14  20                 	db	32
  7802  00EB15  66                 	db	102	;'f'
  7803  00EB16  65                 	db	101	;'e'
  7804  00EB17  61                 	db	97	;'a'
  7805  00EB18  74                 	db	116	;'t'
  7806  00EB19  75                 	db	117	;'u'
  7807  00EB1A  72                 	db	114	;'r'
  7808  00EB1B  65                 	db	101	;'e'
  7809  00EB1C  73                 	db	115	;'s'
  7810  00EB1D  0A                 	db	10
  7811  00EB1E  0D                 	db	13
  7812  00EB1F  0A                 	db	10
  7813  00EB20  0D                 	db	13
  7814  00EB21  27                 	db	39
  7815  00EB22  48                 	db	72	;'H'
  7816  00EB23  65                 	db	101	;'e'
  7817  00EB24  6C                 	db	108	;'l'
  7818  00EB25  70                 	db	112	;'p'
  7819  00EB26  20                 	db	32
  7820  00EB27  41                 	db	65	;'A'
  7821  00EB28  6C                 	db	108	;'l'
  7822  00EB29  6C                 	db	108	;'l'
  7823  00EB2A  27                 	db	39
  7824  00EB2B  20                 	db	32
  7825  00EB2C  77                 	db	119	;'w'
  7826  00EB2D  69                 	db	105	;'i'
  7827  00EB2E  6C                 	db	108	;'l'
  7828  00EB2F  6C                 	db	108	;'l'
  7829  00EB30  20                 	db	32
  7830  00EB31  6C                 	db	108	;'l'
  7831  00EB32  69                 	db	105	;'i'
  7832  00EB33  73                 	db	115	;'s'
  7833  00EB34  74                 	db	116	;'t'
  7834  00EB35  20                 	db	32
  7835  00EB36  61                 	db	97	;'a'
  7836  00EB37  6C                 	db	108	;'l'
  7837  00EB38  6C                 	db	108	;'l'
  7838  00EB39  20                 	db	32
  7839  00EB3A  63                 	db	99	;'c'
  7840  00EB3B  6F                 	db	111	;'o'
  7841  00EB3C  6D                 	db	109	;'m'
  7842  00EB3D  6D                 	db	109	;'m'
  7843  00EB3E  61                 	db	97	;'a'
  7844  00EB3F  6E                 	db	110	;'n'
  7845  00EB40  64                 	db	100	;'d'
  7846  00EB41  73                 	db	115	;'s'
  7847  00EB42  0A                 	db	10
  7848  00EB43  0D                 	db	13
  7849  00EB44  00                 	db	0
  7850  00EB45                     STR_184:
  7851  00EB45  20                 	db	32
  7852  00EB46  20                 	db	32
  7853  00EB47  20                 	db	32
  7854  00EB48  20                 	db	32
  7855  00EB49  5F                 	db	95	;'_'
  7856  00EB4A  20                 	db	32
  7857  00EB4B  20                 	db	32
  7858  00EB4C  20                 	db	32
  7859  00EB4D  5F                 	db	95	;'_'
  7860  00EB4E  5F                 	db	95	;'_'
  7861  00EB4F  5F                 	db	95	;'_'
  7862  00EB50  20                 	db	32
  7863  00EB51  20                 	db	32
  7864  00EB52  20                 	db	32
  7865  00EB53  5F                 	db	95	;'_'
  7866  00EB54  5F                 	db	95	;'_'
  7867  00EB55  5F                 	db	95	;'_'
  7868  00EB56  20                 	db	32
  7869  00EB57  20                 	db	32
  7870  00EB58  20                 	db	32
  7871  00EB59  20                 	db	32
  7872  00EB5A  20                 	db	32
  7873  00EB5B  20                 	db	32
  7874  00EB5C  20                 	db	32
  7875  00EB5D  20                 	db	32
  7876  00EB5E  20                 	db	32
  7877  00EB5F  20                 	db	32
  7878  00EB60  20                 	db	32
  7879  00EB61  20                 	db	32
  7880  00EB62  20                 	db	32
  7881  00EB63  20                 	db	32
  7882  00EB64  20                 	db	32
  7883  00EB65  20                 	db	32
  7884  00EB66  20                 	db	32
  7885  00EB67  20                 	db	32
  7886  00EB68  20                 	db	32
  7887  00EB69  20                 	db	32
  7888  00EB6A  20                 	db	32
  7889  00EB6B  20                 	db	32
  7890  00EB6C  5F                 	db	95	;'_'
  7891  00EB6D  5F                 	db	95	;'_'
  7892  00EB6E  20                 	db	32
  7893  00EB6F  20                 	db	32
  7894  00EB70  5F                 	db	95	;'_'
  7895  00EB71  5F                 	db	95	;'_'
  7896  00EB72  20                 	db	32
  7897  00EB73  20                 	db	32
  7898  00EB74  20                 	db	32
  7899  00EB75  20                 	db	32
  7900  00EB76  20                 	db	32
  7901  00EB77  5F                 	db	95	;'_'
  7902  00EB78  20                 	db	32
  7903  00EB79  20                 	db	32
  7904  00EB7A  20                 	db	32
  7905  00EB7B  20                 	db	32
  7906  00EB7C  20                 	db	32
  7907  00EB7D  20                 	db	32
  7908  00EB7E  20                 	db	32
  7909  00EB7F  20                 	db	32
  7910  00EB80  20                 	db	32
  7911  00EB81  20                 	db	32
  7912  00EB82  20                 	db	32
  7913  00EB83  20                 	db	32
  7914  00EB84  20                 	db	32
  7915  00EB85  20                 	db	32
  7916  00EB86  20                 	db	32
  7917  00EB87  20                 	db	32
  7918  00EB88  20                 	db	32
  7919  00EB89  20                 	db	32
  7920  00EB8A  20                 	db	32
  7921  00EB8B  20                 	db	32
  7922  00EB8C  20                 	db	32
  7923  00EB8D  20                 	db	32
  7924  00EB8E  20                 	db	32
  7925  00EB8F  20                 	db	32
  7926  00EB90  20                 	db	32
  7927  00EB91  20                 	db	32
  7928  00EB92  5F                 	db	95	;'_'
  7929  00EB93  20                 	db	32
  7930  00EB94  20                 	db	32
  7931  00EB95  20                 	db	32
  7932  00EB96  5F                 	db	95	;'_'
  7933  00EB97  5F                 	db	95	;'_'
  7934  00EB98  5F                 	db	95	;'_'
  7935  00EB99  20                 	db	32
  7936  00EB9A  20                 	db	32
  7937  00EB9B  5F                 	db	95	;'_'
  7938  00EB9C  20                 	db	32
  7939  00EB9D  20                 	db	32
  7940  00EB9E  20                 	db	32
  7941  00EB9F  20                 	db	32
  7942  00EBA0  20                 	db	32
  7943  00EBA1  20                 	db	32
  7944  00EBA2  0A                 	db	10
  7945  00EBA3  0D                 	db	13
  7946  00EBA4  20                 	db	32
  7947  00EBA5  20                 	db	32
  7948  00EBA6  20                 	db	32
  7949  00EBA7  2F                 	db	47
  7950  00EBA8  5F                 	db	95	;'_'
  7951  00EBA9  5C                 	db	92	;'\'
  7952  00EBAA  20                 	db	32
  7953  00EBAB  2F                 	db	47
  7954  00EBAC  20                 	db	32
  7955  00EBAD  5F                 	db	95	;'_'
  7956  00EBAE  5F                 	db	95	;'_'
  7957  00EBAF  7C                 	db	124
  7958  00EBB0  20                 	db	32
  7959  00EBB1  7C                 	db	124
  7960  00EBB2  20                 	db	32
  7961  00EBB3  5F                 	db	95	;'_'
  7962  00EBB4  20                 	db	32
  7963  00EBB5  5C                 	db	92	;'\'
  7964  00EBB6  5F                 	db	95	;'_'
  7965  00EBB7  5F                 	db	95	;'_'
  7966  00EBB8  5F                 	db	95	;'_'
  7967  00EBB9  5F                 	db	95	;'_'
  7968  00EBBA  5F                 	db	95	;'_'
  7969  00EBBB  20                 	db	32
  7970  00EBBC  5F                 	db	95	;'_'
  7971  00EBBD  5F                 	db	95	;'_'
  7972  00EBBE  20                 	db	32
  7973  00EBBF  5F                 	db	95	;'_'
  7974  00EBC0  5F                 	db	95	;'_'
  7975  00EBC1  5F                 	db	95	;'_'
  7976  00EBC2  5F                 	db	95	;'_'
  7977  00EBC3  5F                 	db	95	;'_'
  7978  00EBC4  20                 	db	32
  7979  00EBC5  5F                 	db	95	;'_'
  7980  00EBC6  20                 	db	32
  7981  00EBC7  5F                 	db	95	;'_'
  7982  00EBC8  20                 	db	32
  7983  00EBC9  20                 	db	32
  7984  00EBCA  7C                 	db	124
  7985  00EBCB  20                 	db	32
  7986  00EBCC  20                 	db	32
  7987  00EBCD  5C                 	db	92	;'\'
  7988  00EBCE  2F                 	db	47
  7989  00EBCF  20                 	db	32
  7990  00EBD0  20                 	db	32
  7991  00EBD1  7C                 	db	124
  7992  00EBD2  5F                 	db	95	;'_'
  7993  00EBD3  5F                 	db	95	;'_'
  7994  00EBD4  5F                 	db	95	;'_'
  7995  00EBD5  7C                 	db	124
  7996  00EBD6  20                 	db	32
  7997  00EBD7  7C                 	db	124
  7998  00EBD8  5F                 	db	95	;'_'
  7999  00EBD9  20                 	db	32
  8000  00EBDA  5F                 	db	95	;'_'
  8001  00EBDB  5F                 	db	95	;'_'
  8002  00EBDC  5F                 	db	95	;'_'
  8003  00EBDD  20                 	db	32
  8004  00EBDE  5F                 	db	95	;'_'
  8005  00EBDF  20                 	db	32
  8006  00EBE0  5F                 	db	95	;'_'
  8007  00EBE1  20                 	db	32
  8008  00EBE2  20                 	db	32
  8009  00EBE3  20                 	db	32
  8010  00EBE4  5F                 	db	95	;'_'
  8011  00EBE5  5F                 	db	95	;'_'
  8012  00EBE6  20                 	db	32
  8013  00EBE7  5F                 	db	95	;'_'
  8014  00EBE8  20                 	db	32
  8015  00EBE9  5F                 	db	95	;'_'
  8016  00EBEA  20                 	db	32
  8017  00EBEB  5F                 	db	95	;'_'
  8018  00EBEC  20                 	db	32
  8019  00EBED  20                 	db	32
  8020  00EBEE  5F                 	db	95	;'_'
  8021  00EBEF  5F                 	db	95	;'_'
  8022  00EBF0  7C                 	db	124
  8023  00EBF1  20                 	db	32
  8024  00EBF2  7C                 	db	124
  8025  00EBF3  20                 	db	32
  8026  00EBF4  7C                 	db	124
  8027  00EBF5  20                 	db	32
  8028  00EBF6  20                 	db	32
  8029  00EBF7  20                 	db	32
  8030  00EBF8  5C                 	db	92	;'\'
  8031  00EBF9  28                 	db	40
  8032  00EBFA  5F                 	db	95	;'_'
  8033  00EBFB  29                 	db	41
  8034  00EBFC  5F                 	db	95	;'_'
  8035  00EBFD  20                 	db	32
  8036  00EBFE  5F                 	db	95	;'_'
  8037  00EBFF  5F                 	db	95	;'_'
  8038  00EC00  20                 	db	32
  8039  00EC01  20                 	db	32
  8040  00EC02  5F                 	db	95	;'_'
  8041  00EC03  20                 	db	32
  8042  00EC04  5F                 	db	95	;'_'
  8043  00EC05  5F                 	db	95	;'_'
  8044  00EC06  20                 	db	32
  8045  00EC07  20                 	db	32
  8046  00EC08  5F                 	db	95	;'_'
  8047  00EC09  5F                 	db	95	;'_'
  8048  00EC0A  5F                 	db	95	;'_'
  8049  00EC0B  20                 	db	32
  8050  00EC0C  5F                 	db	95	;'_'
  8051  00EC0D  20                 	db	32
  8052  00EC0E  5F                 	db	95	;'_'
  8053  00EC0F  20                 	db	32
  8054  00EC10  0A                 	db	10
  8055  00EC11  0D                 	db	13
  8056  00EC12  20                 	db	32
  8057  00EC13  20                 	db	32
  8058  00EC14  2F                 	db	47
  8059  00EC15  20                 	db	32
  8060  00EC16  5F                 	db	95	;'_'
  8061  00EC17  20                 	db	32
  8062  00EC18  5C                 	db	92	;'\'
  8063  00EC19  20                 	db	32
  8064  00EC1A  28                 	db	40
  8065  00EC1B  5F                 	db	95	;'_'
  8066  00EC1C  5F                 	db	95	;'_'
  8067  00EC1D  20                 	db	32
  8068  00EC1E  20                 	db	32
  8069  00EC1F  7C                 	db	124
  8070  00EC20  20                 	db	32
  8071  00EC21  20                 	db	32
  8072  00EC22  5F                 	db	95	;'_'
  8073  00EC23  2F                 	db	47
  8074  00EC24  20                 	db	32
  8075  00EC25  5F                 	db	95	;'_'
  8076  00EC26  20                 	db	32
  8077  00EC27  5C                 	db	92	;'\'
  8078  00EC28  20                 	db	32
  8079  00EC29  56                 	db	86	;'V'
  8080  00EC2A  20                 	db	32
  8081  00EC2B  20                 	db	32
  8082  00EC2C  56                 	db	86	;'V'
  8083  00EC2D  20                 	db	32
  8084  00EC2E  2F                 	db	47
  8085  00EC2F  20                 	db	32
  8086  00EC30  2D                 	db	45
  8087  00EC31  5F                 	db	95	;'_'
  8088  00EC32  29                 	db	41
  8089  00EC33  20                 	db	32
  8090  00EC34  27                 	db	39
  8091  00EC35  5F                 	db	95	;'_'
  8092  00EC36  7C                 	db	124
  8093  00EC37  20                 	db	32
  8094  00EC38  7C                 	db	124
  8095  00EC39  20                 	db	32
  8096  00EC3A  7C                 	db	124
  8097  00EC3B  5C                 	db	92	;'\'
  8098  00EC3C  2F                 	db	47
  8099  00EC3D  7C                 	db	124
  8100  00EC3E  20                 	db	32
  8101  00EC3F  2F                 	db	47
  8102  00EC40  20                 	db	32
  8103  00EC41  2D                 	db	45
  8104  00EC42  5F                 	db	95	;'_'
  8105  00EC43  29                 	db	41
  8106  00EC44  20                 	db	32
  8107  00EC45  20                 	db	32
  8108  00EC46  5F                 	db	95	;'_'
  8109  00EC47  2F                 	db	47
  8110  00EC48  20                 	db	32
  8111  00EC49  2D                 	db	45
  8112  00EC4A  5F                 	db	95	;'_'
  8113  00EC4B  29                 	db	41
  8114  00EC4C  20                 	db	32
  8115  00EC4D  27                 	db	39
  8116  00EC4E  5F                 	db	95	;'_'
  8117  00EC4F  7C                 	db	124
  8118  00EC50  20                 	db	32
  8119  00EC51  2F                 	db	47
  8120  00EC52  20                 	db	32
  8121  00EC53  5F                 	db	95	;'_'
  8122  00EC54  60                 	db	96	;'`'
  8123  00EC55  20                 	db	32
  8124  00EC56  7C                 	db	124
  8125  00EC57  20                 	db	32
  8126  00EC58  27                 	db	39
  8127  00EC59  20                 	db	32
  8128  00EC5A  5C                 	db	92	;'\'
  8129  00EC5B  2F                 	db	47
  8130  00EC5C  20                 	db	32
  8131  00EC5D  5F                 	db	95	;'_'
  8132  00EC5E  60                 	db	96	;'`'
  8133  00EC5F  20                 	db	32
  8134  00EC60  7C                 	db	124
  8135  00EC61  20                 	db	32
  8136  00EC62  7C                 	db	124
  8137  00EC63  20                 	db	32
  8138  00EC64  7C                 	db	124
  8139  00EC65  29                 	db	41
  8140  00EC66  20                 	db	32
  8141  00EC67  7C                 	db	124
  8142  00EC68  20                 	db	32
  8143  00EC69  7C                 	db	124
  8144  00EC6A  20                 	db	32
  8145  00EC6B  27                 	db	39
  8146  00EC6C  20                 	db	32
  8147  00EC6D  20                 	db	32
  8148  00EC6E  5C                 	db	92	;'\'
  8149  00EC6F  7C                 	db	124
  8150  00EC70  20                 	db	32
  8151  00EC71  27                 	db	39
  8152  00EC72  20                 	db	32
  8153  00EC73  20                 	db	32
  8154  00EC74  5C                 	db	92	;'\'
  8155  00EC75  2F                 	db	47
  8156  00EC76  20                 	db	32
  8157  00EC77  2D                 	db	45
  8158  00EC78  5F                 	db	95	;'_'
  8159  00EC79  29                 	db	41
  8160  00EC7A  20                 	db	32
  8161  00EC7B  27                 	db	39
  8162  00EC7C  5F                 	db	95	;'_'
  8163  00EC7D  7C                 	db	124
  8164  00EC7E  0A                 	db	10
  8165  00EC7F  0D                 	db	13
  8166  00EC80  20                 	db	32
  8167  00EC81  2F                 	db	47
  8168  00EC82  5F                 	db	95	;'_'
  8169  00EC83  2F                 	db	47
  8170  00EC84  20                 	db	32
  8171  00EC85  5C                 	db	92	;'\'
  8172  00EC86  5F                 	db	95	;'_'
  8173  00EC87  5C                 	db	92	;'\'
  8174  00EC88  5F                 	db	95	;'_'
  8175  00EC89  5F                 	db	95	;'_'
  8176  00EC8A  5F                 	db	95	;'_'
  8177  00EC8B  7C                 	db	124
  8178  00EC8C  20                 	db	32
  8179  00EC8D  7C                 	db	124
  8180  00EC8E  5F                 	db	95	;'_'
  8181  00EC8F  7C                 	db	124
  8182  00EC90  20                 	db	32
  8183  00EC91  5C                 	db	92	;'\'
  8184  00EC92  5F                 	db	95	;'_'
  8185  00EC93  5F                 	db	95	;'_'
  8186  00EC94  5F                 	db	95	;'_'
  8187  00EC95  2F                 	db	47
  8188  00EC96  5C                 	db	92	;'\'
  8189  00EC97  5F                 	db	95	;'_'
  8190  00EC98  2F                 	db	47
  8191  00EC99  5C                 	db	92	;'\'
  8192  00EC9A  5F                 	db	95	;'_'
  8193  00EC9B  2F                 	db	47
  8194  00EC9C  5C                 	db	92	;'\'
  8195  00EC9D  5F                 	db	95	;'_'
  8196  00EC9E  5F                 	db	95	;'_'
  8197  00EC9F  5F                 	db	95	;'_'
  8198  00ECA0  7C                 	db	124
  8199  00ECA1  5F                 	db	95	;'_'
  8200  00ECA2  7C                 	db	124
  8201  00ECA3  20                 	db	32
  8202  00ECA4  20                 	db	32
  8203  00ECA5  20                 	db	32
  8204  00ECA6  7C                 	db	124
  8205  00ECA7  5F                 	db	95	;'_'
  8206  00ECA8  7C                 	db	124
  8207  00ECA9  20                 	db	32
  8208  00ECAA  20                 	db	32
  8209  00ECAB  7C                 	db	124
  8210  00ECAC  5F                 	db	95	;'_'
  8211  00ECAD  5C                 	db	92	;'\'
  8212  00ECAE  5F                 	db	95	;'_'
  8213  00ECAF  5F                 	db	95	;'_'
  8214  00ECB0  5F                 	db	95	;'_'
  8215  00ECB1  7C                 	db	124
  8216  00ECB2  5C                 	db	92	;'\'
  8217  00ECB3  5F                 	db	95	;'_'
  8218  00ECB4  5F                 	db	95	;'_'
  8219  00ECB5  5C                 	db	92	;'\'
  8220  00ECB6  5F                 	db	95	;'_'
  8221  00ECB7  5F                 	db	95	;'_'
  8222  00ECB8  5F                 	db	95	;'_'
  8223  00ECB9  7C                 	db	124
  8224  00ECBA  5F                 	db	95	;'_'
  8225  00ECBB  7C                 	db	124
  8226  00ECBC  20                 	db	32
  8227  00ECBD  20                 	db	32
  8228  00ECBE  20                 	db	32
  8229  00ECBF  5C                 	db	92	;'\'
  8230  00ECC0  5F                 	db	95	;'_'
  8231  00ECC1  5F                 	db	95	;'_'
  8232  00ECC2  2C                 	db	44
  8233  00ECC3  5F                 	db	95	;'_'
  8234  00ECC4  7C                 	db	124
  8235  00ECC5  5F                 	db	95	;'_'
  8236  00ECC6  7C                 	db	124
  8237  00ECC7  7C                 	db	124
  8238  00ECC8  5F                 	db	95	;'_'
  8239  00ECC9  5C                 	db	92	;'\'
  8240  00ECCA  5F                 	db	95	;'_'
  8241  00ECCB  5F                 	db	95	;'_'
  8242  00ECCC  2C                 	db	44
  8243  00ECCD  5F                 	db	95	;'_'
  8244  00ECCE  7C                 	db	124
  8245  00ECCF  20                 	db	32
  8246  00ECD0  7C                 	db	124
  8247  00ECD1  5F                 	db	95	;'_'
  8248  00ECD2  5F                 	db	95	;'_'
  8249  00ECD3  5F                 	db	95	;'_'
  8250  00ECD4  2F                 	db	47
  8251  00ECD5  7C                 	db	124
  8252  00ECD6  5F                 	db	95	;'_'
  8253  00ECD7  7C                 	db	124
  8254  00ECD8  5F                 	db	95	;'_'
  8255  00ECD9  7C                 	db	124
  8256  00ECDA  5F                 	db	95	;'_'
  8257  00ECDB  7C                 	db	124
  8258  00ECDC  5F                 	db	95	;'_'
  8259  00ECDD  7C                 	db	124
  8260  00ECDE  5F                 	db	95	;'_'
  8261  00ECDF  7C                 	db	124
  8262  00ECE0  5F                 	db	95	;'_'
  8263  00ECE1  7C                 	db	124
  8264  00ECE2  5F                 	db	95	;'_'
  8265  00ECE3  5C                 	db	92	;'\'
  8266  00ECE4  5F                 	db	95	;'_'
  8267  00ECE5  5F                 	db	95	;'_'
  8268  00ECE6  5F                 	db	95	;'_'
  8269  00ECE7  7C                 	db	124
  8270  00ECE8  5F                 	db	95	;'_'
  8271  00ECE9  7C                 	db	124
  8272  00ECEA  20                 	db	32
  8273  00ECEB  20                 	db	32
  8274  00ECEC  0A                 	db	10
  8275  00ECED  0D                 	db	13
  8276  00ECEE  00                 	db	0
  8277  00ECEF  20                 	db	32
  8278  00ECF0  20                 	db	32
  8279  00ECF1  20                 	db	32
  8280  00ECF2  20                 	db	32
  8281  00ECF3  42                 	db	66	;'B'
  8282  00ECF4  6F                 	db	111	;'o'
  8283  00ECF5  6F                 	db	111	;'o'
  8284  00ECF6  74                 	db	116	;'t'
  8285  00ECF7  20                 	db	32
  8286  00ECF8  63                 	db	99	;'c'
  8287  00ECF9  6F                 	db	111	;'o'
  8288  00ECFA  6D                 	db	109	;'m'
  8289  00ECFB  70                 	db	112	;'p'
  8290  00ECFC  6C                 	db	108	;'l'
  8291  00ECFD  65                 	db	101	;'e'
  8292  00ECFE  74                 	db	116	;'t'
  8293  00ECFF  65                 	db	101	;'e'
  8294  00ED00  0A                 	db	10
  8295  00ED01  0D                 	db	13
  8296  00ED02  20                 	db	32
  8297  00ED03  20                 	db	32
  8298  00ED04  20                 	db	32
  8299  00ED05  20                 	db	32
  8300  00ED06  50                 	db	80	;'P'
  8301  00ED07  49                 	db	73	;'I'
  8302  00ED08  43                 	db	67	;'C'
  8303  00ED09  31                 	db	49	;'1'
  8304  00ED0A  38                 	db	56	;'8'
  8305  00ED0B  46                 	db	70	;'F'
  8306  00ED0C  36                 	db	54	;'6'
  8307  00ED0D  37                 	db	55	;'7'
  8308  00ED0E  4B                 	db	75	;'K'
  8309  00ED0F  34                 	db	52	;'4'
  8310  00ED10  30                 	db	48	;'0'
  8311  00ED11  20                 	db	32
  8312  00ED12  6D                 	db	109	;'m'
  8313  00ED13  54                 	db	84	;'T'
  8314  00ED14  6F                 	db	111	;'o'
  8315  00ED15  75                 	db	117	;'u'
  8316  00ED16  63                 	db	99	;'c'
  8317  00ED17  68                 	db	104	;'h'
  8318  00ED18  20                 	db	32
  8319  00ED19  54                 	db	84	;'T'
  8320  00ED1A  65                 	db	101	;'e'
  8321  00ED1B  73                 	db	115	;'s'
  8322  00ED1C  74                 	db	116	;'t'
  8323  00ED1D  20                 	db	32
  8324  00ED1E  42                 	db	66	;'B'
  8325  00ED1F  6F                 	db	111	;'o'
  8326  00ED20  61                 	db	97	;'a'
  8327  00ED21  72                 	db	114	;'r'
  8328  00ED22  64                 	db	100	;'d'
  8329  00ED23  0A                 	db	10
  8330  00ED24  0D                 	db	13
  8331  00ED25  20                 	db	32
  8332  00ED26  20                 	db	32
  8333  00ED27  20                 	db	32
  8334  00ED28  20                 	db	32
  8335  00ED29  45                 	db	69	;'E'
  8336  00ED2A  76                 	db	118	;'v'
  8337  00ED2B  61                 	db	97	;'a'
  8338  00ED2C  6C                 	db	108	;'l'
  8339  00ED2D  75                 	db	117	;'u'
  8340  00ED2E  61                 	db	97	;'a'
  8341  00ED2F  74                 	db	116	;'t'
  8342  00ED30  65                 	db	101	;'e'
  8343  00ED31  73                 	db	115	;'s'
  8344  00ED32  20                 	db	32
  8345  00ED33  74                 	db	116	;'t'
  8346  00ED34  68                 	db	104	;'h'
  8347  00ED35  65                 	db	101	;'e'
  8348  00ED36  20                 	db	32
  8349  00ED37  6D                 	db	109	;'m'
  8350  00ED38  54                 	db	84	;'T'
  8351  00ED39  6F                 	db	111	;'o'
  8352  00ED3A  75                 	db	117	;'u'
  8353  00ED3B  63                 	db	99	;'c'
  8354  00ED3C  68                 	db	104	;'h'
  8355  00ED3D  20                 	db	32
  8356  00ED3E  63                 	db	99	;'c'
  8357  00ED3F  61                 	db	97	;'a'
  8358  00ED40  70                 	db	112	;'p'
  8359  00ED41  61                 	db	97	;'a'
  8360  00ED42  63                 	db	99	;'c'
  8361  00ED43  69                 	db	105	;'i'
  8362  00ED44  74                 	db	116	;'t'
  8363  00ED45  69                 	db	105	;'i'
  8364  00ED46  76                 	db	118	;'v'
  8365  00ED47  65                 	db	101	;'e'
  8366  00ED48  20                 	db	32
  8367  00ED49  74                 	db	116	;'t'
  8368  00ED4A  6F                 	db	111	;'o'
  8369  00ED4B  75                 	db	117	;'u'
  8370  00ED4C  63                 	db	99	;'c'
  8371  00ED4D  68                 	db	104	;'h'
  8372  00ED4E  20                 	db	32
  8373  00ED4F  6C                 	db	108	;'l'
  8374  00ED50  69                 	db	105	;'i'
  8375  00ED51  62                 	db	98	;'b'
  8376  00ED52  72                 	db	114	;'r'
  8377  00ED53  61                 	db	97	;'a'
  8378  00ED54  72                 	db	114	;'r'
  8379  00ED55  79                 	db	121	;'y'
  8380  00ED56  20                 	db	32
  8381  00ED57  64                 	db	100	;'d'
  8382  00ED58  69                 	db	105	;'i'
  8383  00ED59  73                 	db	115	;'s'
  8384  00ED5A  74                 	db	116	;'t'
  8385  00ED5B  72                 	db	114	;'r'
  8386  00ED5C  69                 	db	105	;'i'
  8387  00ED5D  62                 	db	98	;'b'
  8388  00ED5E  75                 	db	117	;'u'
  8389  00ED5F  74                 	db	116	;'t'
  8390  00ED60  65                 	db	101	;'e'
  8391  00ED61  64                 	db	100	;'d'
  8392  00ED62  20                 	db	32
  8393  00ED63  62                 	db	98	;'b'
  8394  00ED64  79                 	db	121	;'y'
  8395  00ED65  20                 	db	32
  8396  00ED66  4D                 	db	77	;'M'
  8397  00ED67  69                 	db	105	;'i'
  8398  00ED68  63                 	db	99	;'c'
  8399  00ED69  72                 	db	114	;'r'
  8400  00ED6A  6F                 	db	111	;'o'
  8401  00ED6B  63                 	db	99	;'c'
  8402  00ED6C  68                 	db	104	;'h'
  8403  00ED6D  69                 	db	105	;'i'
  8404  00ED6E  70                 	db	112	;'p'
  8405  00ED6F  0A                 	db	10
  8406  00ED70  0D                 	db	13
  8407  00ED71  20                 	db	32
  8408  00ED72  20                 	db	32
  8409  00ED73  20                 	db	32
  8410  00ED74  20                 	db	32
  8411  00ED75  53                 	db	83	;'S'
  8412  00ED76  65                 	db	101	;'e'
  8413  00ED77  74                 	db	116	;'t'
  8414  00ED78  73                 	db	115	;'s'
  8415  00ED79  20                 	db	32
  8416  00ED7A  74                 	db	116	;'t'
  8417  00ED7B  68                 	db	104	;'h'
  8418  00ED7C  65                 	db	101	;'e'
  8419  00ED7D  20                 	db	32
  8420  00ED7E  73                 	db	115	;'s'
  8421  00ED7F  74                 	db	116	;'t'
  8422  00ED80  61                 	db	97	;'a'
  8423  00ED81  74                 	db	116	;'t'
  8424  00ED82  65                 	db	101	;'e'
  8425  00ED83  20                 	db	32
  8426  00ED84  6F                 	db	111	;'o'
  8427  00ED85  66                 	db	102	;'f'
  8428  00ED86  20                 	db	32
  8429  00ED87  66                 	db	102	;'f'
  8430  00ED88  69                 	db	105	;'i'
  8431  00ED89  76                 	db	118	;'v'
  8432  00ED8A  65                 	db	101	;'e'
  8433  00ED8B  20                 	db	32
  8434  00ED8C  4C                 	db	76	;'L'
  8435  00ED8D  45                 	db	69	;'E'
  8436  00ED8E  44                 	db	68	;'D'
  8437  00ED8F  73                 	db	115	;'s'
  8438  00ED90  20                 	db	32
  8439  00ED91  62                 	db	98	;'b'
  8440  00ED92  61                 	db	97	;'a'
  8441  00ED93  73                 	db	115	;'s'
  8442  00ED94  65                 	db	101	;'e'
  8443  00ED95  64                 	db	100	;'d'
  8444  00ED96  20                 	db	32
  8445  00ED97  6F                 	db	111	;'o'
  8446  00ED98  6E                 	db	110	;'n'
  8447  00ED99  20                 	db	32
  8448  00ED9A  6D                 	db	109	;'m'
  8449  00ED9B  54                 	db	84	;'T'
  8450  00ED9C  6F                 	db	111	;'o'
  8451  00ED9D  75                 	db	117	;'u'
  8452  00ED9E  63                 	db	99	;'c'
  8453  00ED9F  68                 	db	104	;'h'
  8454  00EDA0  20                 	db	32
  8455  00EDA1  63                 	db	99	;'c'
  8456  00EDA2  61                 	db	97	;'a'
  8457  00EDA3  70                 	db	112	;'p'
  8458  00EDA4  61                 	db	97	;'a'
  8459  00EDA5  63                 	db	99	;'c'
  8460  00EDA6  69                 	db	105	;'i'
  8461  00EDA7  74                 	db	116	;'t'
  8462  00EDA8  69                 	db	105	;'i'
  8463  00EDA9  76                 	db	118	;'v'
  8464  00EDAA  65                 	db	101	;'e'
  8465  00EDAB  20                 	db	32
  8466  00EDAC  70                 	db	112	;'p'
  8467  00EDAD  75                 	db	117	;'u'
  8468  00EDAE  73                 	db	115	;'s'
  8469  00EDAF  68                 	db	104	;'h'
  8470  00EDB0  62                 	db	98	;'b'
  8471  00EDB1  75                 	db	117	;'u'
  8472  00EDB2  74                 	db	116	;'t'
  8473  00EDB3  74                 	db	116	;'t'
  8474  00EDB4  6F                 	db	111	;'o'
  8475  00EDB5  6E                 	db	110	;'n'
  8476  00EDB6  73                 	db	115	;'s'
  8477  00EDB7  0A                 	db	10
  8478  00EDB8  0D                 	db	13
  8479  00EDB9  20                 	db	32
  8480  00EDBA  20                 	db	32
  8481  00EDBB  20                 	db	32
  8482  00EDBC  20                 	db	32
  8483  00EDBD  42                 	db	66	;'B'
  8484  00EDBE  61                 	db	97	;'a'
  8485  00EDBF  75                 	db	117	;'u'
  8486  00EDC0  64                 	db	100	;'d'
  8487  00EDC1  20                 	db	32
  8488  00EDC2  72                 	db	114	;'r'
  8489  00EDC3  61                 	db	97	;'a'
  8490  00EDC4  74                 	db	116	;'t'
  8491  00EDC5  65                 	db	101	;'e'
  8492  00EDC6  3A                 	db	58	;':'
  8493  00EDC7  20                 	db	32
  8494  00EDC8  31                 	db	49	;'1'
  8495  00EDC9  31                 	db	49	;'1'
  8496  00EDCA  35                 	db	53	;'5'
  8497  00EDCB  32                 	db	50	;'2'
  8498  00EDCC  30                 	db	48	;'0'
  8499  00EDCD  30                 	db	48	;'0'
  8500  00EDCE  20                 	db	32
  8501  00EDCF  62                 	db	98	;'b'
  8502  00EDD0  70                 	db	112	;'p'
  8503  00EDD1  73                 	db	115	;'s'
  8504  00EDD2  0A                 	db	10
  8505  00EDD3  0D                 	db	13
  8506  00EDD4  20                 	db	32
  8507  00EDD5  20                 	db	32
  8508  00EDD6  20                 	db	32
  8509  00EDD7  20                 	db	32
  8510  00EDD8  4E                 	db	78	;'N'
  8511  00EDD9  6F                 	db	111	;'o'
  8512  00EDDA  20                 	db	32
  8513  00EDDB  70                 	db	112	;'p'
  8514  00EDDC  61                 	db	97	;'a'
  8515  00EDDD  72                 	db	114	;'r'
  8516  00EDDE  69                 	db	105	;'i'
  8517  00EDDF  74                 	db	116	;'t'
  8518  00EDE0  79                 	db	121	;'y'
  8519  00EDE1  2C                 	db	44
  8520  00EDE2  20                 	db	32
  8521  00EDE3  38                 	db	56	;'8'
  8522  00EDE4  20                 	db	32
  8523  00EDE5  62                 	db	98	;'b'
  8524  00EDE6  69                 	db	105	;'i'
  8525  00EDE7  74                 	db	116	;'t'
  8526  00EDE8  73                 	db	115	;'s'
  8527  00EDE9  2C                 	db	44
  8528  00EDEA  20                 	db	32
  8529  00EDEB  6E                 	db	110	;'n'
  8530  00EDEC  6F                 	db	111	;'o'
  8531  00EDED  20                 	db	32
  8532  00EDEE  66                 	db	102	;'f'
  8533  00EDEF  6C                 	db	108	;'l'
  8534  00EDF0  6F                 	db	111	;'o'
  8535  00EDF1  77                 	db	119	;'w'
  8536  00EDF2  20                 	db	32
  8537  00EDF3  63                 	db	99	;'c'
  8538  00EDF4  6F                 	db	111	;'o'
  8539  00EDF5  6E                 	db	110	;'n'
  8540  00EDF6  74                 	db	116	;'t'
  8541  00EDF7  72                 	db	114	;'r'
  8542  00EDF8  6F                 	db	111	;'o'
  8543  00EDF9  6C                 	db	108	;'l'
  8544  00EDFA  2C                 	db	44
  8545  00EDFB  20                 	db	32
  8546  00EDFC  31                 	db	49	;'1'
  8547  00EDFD  20                 	db	32
  8548  00EDFE  73                 	db	115	;'s'
  8549  00EDFF  74                 	db	116	;'t'
  8550  00EE00  6F                 	db	111	;'o'
  8551  00EE01  70                 	db	112	;'p'
  8552  00EE02  20                 	db	32
  8553  00EE03  62                 	db	98	;'b'
  8554  00EE04  69                 	db	105	;'i'
  8555  00EE05  74                 	db	116	;'t'
  8556  00EE06  0A                 	db	10
  8557  00EE07  0D                 	db	13
  8558  00EE08  20                 	db	32
  8559  00EE09  20                 	db	32
  8560  00EE0A  20                 	db	32
  8561  00EE0B  20                 	db	32
  8562  00EE0C  43                 	db	67	;'C'
  8563  00EE0D  6F                 	db	111	;'o'
  8564  00EE0E  6D                 	db	109	;'m'
  8565  00EE0F  6D                 	db	109	;'m'
  8566  00EE10  61                 	db	97	;'a'
  8567  00EE11  6E                 	db	110	;'n'
  8568  00EE12  64                 	db	100	;'d'
  8569  00EE13  73                 	db	115	;'s'
  8570  00EE14  20                 	db	32
  8571  00EE15  61                 	db	97	;'a'
  8572  00EE16  72                 	db	114	;'r'
  8573  00EE17  65                 	db	101	;'e'
  8574  00EE18  20                 	db	32
  8575  00EE19  63                 	db	99	;'c'
  8576  00EE1A  61                 	db	97	;'a'
  8577  00EE1B  73                 	db	115	;'s'
  8578  00EE1C  65                 	db	101	;'e'
  8579  00EE1D  20                 	db	32
  8580  00EE1E  73                 	db	115	;'s'
  8581  00EE1F  65                 	db	101	;'e'
  8582  00EE20  6E                 	db	110	;'n'
  8583  00EE21  73                 	db	115	;'s'
  8584  00EE22  69                 	db	105	;'i'
  8585  00EE23  74                 	db	116	;'t'
  8586  00EE24  69                 	db	105	;'i'
  8587  00EE25  76                 	db	118	;'v'
  8588  00EE26  65                 	db	101	;'e'
  8589  00EE27  0A                 	db	10
  8590  00EE28  0D                 	db	13
  8591  00EE29  20                 	db	32
  8592  00EE2A  20                 	db	32
  8593  00EE2B  20                 	db	32
  8594  00EE2C  20                 	db	32
  8595  00EE2D  45                 	db	69	;'E'
  8596  00EE2E  6E                 	db	110	;'n'
  8597  00EE2F  74                 	db	116	;'t'
  8598  00EE30  65                 	db	101	;'e'
  8599  00EE31  72                 	db	114	;'r'
  8600  00EE32  20                 	db	32
  8601  00EE33  61                 	db	97	;'a'
  8602  00EE34  20                 	db	32
  8603  00EE35  63                 	db	99	;'c'
  8604  00EE36  6F                 	db	111	;'o'
  8605  00EE37  6D                 	db	109	;'m'
  8606  00EE38  6D                 	db	109	;'m'
  8607  00EE39  61                 	db	97	;'a'
  8608  00EE3A  6E                 	db	110	;'n'
  8609  00EE3B  64                 	db	100	;'d'
  8610  00EE3C  2C                 	db	44
  8611  00EE3D  20                 	db	32
  8612  00EE3E  6F                 	db	111	;'o'
  8613  00EE3F  72                 	db	114	;'r'
  8614  00EE40  20                 	db	32
  8615  00EE41  65                 	db	101	;'e'
  8616  00EE42  6E                 	db	110	;'n'
  8617  00EE43  74                 	db	116	;'t'
  8618  00EE44  65                 	db	101	;'e'
  8619  00EE45  72                 	db	114	;'r'
  8620  00EE46  20                 	db	32
  8621  00EE47  48                 	db	72	;'H'
  8622  00EE48  65                 	db	101	;'e'
  8623  00EE49  6C                 	db	108	;'l'
  8624  00EE4A  70                 	db	112	;'p'
  8625  00EE4B  20                 	db	32
  8626  00EE4C  66                 	db	102	;'f'
  8627  00EE4D  6F                 	db	111	;'o'
  8628  00EE4E  72                 	db	114	;'r'
  8629  00EE4F  20                 	db	32
  8630  00EE50  6C                 	db	108	;'l'
  8631  00EE51  69                 	db	105	;'i'
  8632  00EE52  73                 	db	115	;'s'
  8633  00EE53  74                 	db	116	;'t'
  8634  00EE54  20                 	db	32
  8635  00EE55  6F                 	db	111	;'o'
  8636  00EE56  66                 	db	102	;'f'
  8637  00EE57  20                 	db	32
  8638  00EE58  63                 	db	99	;'c'
  8639  00EE59  6F                 	db	111	;'o'
  8640  00EE5A  6D                 	db	109	;'m'
  8641  00EE5B  6D                 	db	109	;'m'
  8642  00EE5C  61                 	db	97	;'a'
  8643  00EE5D  6E                 	db	110	;'n'
  8644  00EE5E  64                 	db	100	;'d'
  8645  00EE5F  73                 	db	115	;'s'
  8646  00EE60  0A                 	db	10
  8647  00EE61  0D                 	db	13
  8648  00EE62  00                 	db	0
  8649  00EE63                     STR_122:
  8650  00EE63  57                 	db	87	;'W'
  8651  00EE64  41                 	db	65	;'A'
  8652  00EE65  52                 	db	82	;'R'
  8653  00EE66  4E                 	db	78	;'N'
  8654  00EE67  49                 	db	73	;'I'
  8655  00EE68  4E                 	db	78	;'N'
  8656  00EE69  47                 	db	71	;'G'
  8657  00EE6A  3A                 	db	58	;':'
  8658  00EE6B  20                 	db	32
  8659  00EE6C  55                 	db	85	;'U'
  8660  00EE6D  73                 	db	115	;'s'
  8661  00EE6E  69                 	db	105	;'i'
  8662  00EE6F  6E                 	db	110	;'n'
  8663  00EE70  67                 	db	103	;'g'
  8664  00EE71  20                 	db	32
  8665  00EE72  74                 	db	116	;'t'
  8666  00EE73  68                 	db	104	;'h'
  8667  00EE74  65                 	db	101	;'e'
  8668  00EE75  20                 	db	32
  8669  00EE76  64                 	db	100	;'d'
  8670  00EE77  69                 	db	105	;'i'
  8671  00EE78  6D                 	db	109	;'m'
  8672  00EE79  6D                 	db	109	;'m'
  8673  00EE7A  69                 	db	105	;'i'
  8674  00EE7B  6E                 	db	110	;'n'
  8675  00EE7C  67                 	db	103	;'g'
  8676  00EE7D  20                 	db	32
  8677  00EE7E  66                 	db	102	;'f'
  8678  00EE7F  65                 	db	101	;'e'
  8679  00EE80  61                 	db	97	;'a'
  8680  00EE81  74                 	db	116	;'t'
  8681  00EE82  75                 	db	117	;'u'
  8682  00EE83  72                 	db	114	;'r'
  8683  00EE84  65                 	db	101	;'e'
  8684  00EE85  20                 	db	32
  8685  00EE86  77                 	db	119	;'w'
  8686  00EE87  69                 	db	105	;'i'
  8687  00EE88  74                 	db	116	;'t'
  8688  00EE89  68                 	db	104	;'h'
  8689  00EE8A  20                 	db	32
  8690  00EE8B  6C                 	db	108	;'l'
  8691  00EE8C  6F                 	db	111	;'o'
  8692  00EE8D  61                 	db	97	;'a'
  8693  00EE8E  64                 	db	100	;'d'
  8694  00EE8F  20                 	db	32
  8695  00EE90  64                 	db	100	;'d'
  8696  00EE91  65                 	db	101	;'e'
  8697  00EE92  76                 	db	118	;'v'
  8698  00EE93  69                 	db	105	;'i'
  8699  00EE94  63                 	db	99	;'c'
  8700  00EE95  65                 	db	101	;'e'
  8701  00EE96  73                 	db	115	;'s'
  8702  00EE97  20                 	db	32
  8703  00EE98  6F                 	db	111	;'o'
  8704  00EE99  74                 	db	116	;'t'
  8705  00EE9A  68                 	db	104	;'h'
  8706  00EE9B  65                 	db	101	;'e'
  8707  00EE9C  72                 	db	114	;'r'
  8708  00EE9D  20                 	db	32
  8709  00EE9E  74                 	db	116	;'t'
  8710  00EE9F  68                 	db	104	;'h'
  8711  00EEA0  61                 	db	97	;'a'
  8712  00EEA1  6E                 	db	110	;'n'
  8713  00EEA2  20                 	db	32
  8714  00EEA3  61                 	db	97	;'a'
  8715  00EEA4  20                 	db	32
  8716  00EEA5  6C                 	db	108	;'l'
  8717  00EEA6  69                 	db	105	;'i'
  8718  00EEA7  67                 	db	103	;'g'
  8719  00EEA8  68                 	db	104	;'h'
  8720  00EEA9  74                 	db	116	;'t'
  8721  00EEAA  20                 	db	32
  8722  00EEAB  62                 	db	98	;'b'
  8723  00EEAC  75                 	db	117	;'u'
  8724  00EEAD  6C                 	db	108	;'l'
  8725  00EEAE  62                 	db	98	;'b'
  8726  00EEAF  20                 	db	32
  8727  00EEB0  63                 	db	99	;'c'
  8728  00EEB1  61                 	db	97	;'a'
  8729  00EEB2  6E                 	db	110	;'n'
  8730  00EEB3  20                 	db	32
  8731  00EEB4  72                 	db	114	;'r'
  8732  00EEB5  65                 	db	101	;'e'
  8733  00EEB6  73                 	db	115	;'s'
  8734  00EEB7  75                 	db	117	;'u'
  8735  00EEB8  6C                 	db	108	;'l'
  8736  00EEB9  74                 	db	116	;'t'
  8737  00EEBA  20                 	db	32
  8738  00EEBB  69                 	db	105	;'i'
  8739  00EEBC  6E                 	db	110	;'n'
  8740  00EEBD  20                 	db	32
  8741  00EEBE  64                 	db	100	;'d'
  8742  00EEBF  65                 	db	101	;'e'
  8743  00EEC0  76                 	db	118	;'v'
  8744  00EEC1  69                 	db	105	;'i'
  8745  00EEC2  63                 	db	99	;'c'
  8746  00EEC3  65                 	db	101	;'e'
  8747  00EEC4  20                 	db	32
  8748  00EEC5  64                 	db	100	;'d'
  8749  00EEC6  61                 	db	97	;'a'
  8750  00EEC7  6D                 	db	109	;'m'
  8751  00EEC8  61                 	db	97	;'a'
  8752  00EEC9  67                 	db	103	;'g'
  8753  00EECA  65                 	db	101	;'e'
  8754  00EECB  00                 	db	0
  8755  00EECC                     STR_123:
  8756  00EECC  4F                 	db	79	;'O'
  8757  00EECD  6E                 	db	110	;'n'
  8758  00EECE  6C                 	db	108	;'l'
  8759  00EECF  79                 	db	121	;'y'
  8760  00EED0  20                 	db	32
  8761  00EED1  65                 	db	101	;'e'
  8762  00EED2  6E                 	db	110	;'n'
  8763  00EED3  61                 	db	97	;'a'
  8764  00EED4  62                 	db	98	;'b'
  8765  00EED5  6C                 	db	108	;'l'
  8766  00EED6  65                 	db	101	;'e'
  8767  00EED7  20                 	db	32
  8768  00EED8  64                 	db	100	;'d'
  8769  00EED9  69                 	db	105	;'i'
  8770  00EEDA  6D                 	db	109	;'m'
  8771  00EEDB  6D                 	db	109	;'m'
  8772  00EEDC  69                 	db	105	;'i'
  8773  00EEDD  6E                 	db	110	;'n'
  8774  00EEDE  67                 	db	103	;'g'
  8775  00EEDF  20                 	db	32
  8776  00EEE0  69                 	db	105	;'i'
  8777  00EEE1  66                 	db	102	;'f'
  8778  00EEE2  20                 	db	32
  8779  00EEE3  79                 	db	121	;'y'
  8780  00EEE4  6F                 	db	111	;'o'
  8781  00EEE5  75                 	db	117	;'u'
  8782  00EEE6  20                 	db	32
  8783  00EEE7  61                 	db	97	;'a'
  8784  00EEE8  72                 	db	114	;'r'
  8785  00EEE9  65                 	db	101	;'e'
  8786  00EEEA  20                 	db	32
  8787  00EEEB  63                 	db	99	;'c'
  8788  00EEEC  6F                 	db	111	;'o'
  8789  00EEED  6D                 	db	109	;'m'
  8790  00EEEE  70                 	db	112	;'p'
  8791  00EEEF  6C                 	db	108	;'l'
  8792  00EEF0  65                 	db	101	;'e'
  8793  00EEF1  74                 	db	116	;'t'
  8794  00EEF2  65                 	db	101	;'e'
  8795  00EEF3  6C                 	db	108	;'l'
  8796  00EEF4  79                 	db	121	;'y'
  8797  00EEF5  20                 	db	32
  8798  00EEF6  73                 	db	115	;'s'
  8799  00EEF7  75                 	db	117	;'u'
  8800  00EEF8  72                 	db	114	;'r'
  8801  00EEF9  65                 	db	101	;'e'
  8802  00EEFA  20                 	db	32
  8803  00EEFB  74                 	db	116	;'t'
  8804  00EEFC  68                 	db	104	;'h'
  8805  00EEFD  65                 	db	101	;'e'
  8806  00EEFE  20                 	db	32
  8807  00EEFF  6C                 	db	108	;'l'
  8808  00EF00  6F                 	db	111	;'o'
  8809  00EF01  61                 	db	97	;'a'
  8810  00EF02  64                 	db	100	;'d'
  8811  00EF03  20                 	db	32
  8812  00EF04  69                 	db	105	;'i'
  8813  00EF05  73                 	db	115	;'s'
  8814  00EF06  20                 	db	32
  8815  00EF07  63                 	db	99	;'c'
  8816  00EF08  6F                 	db	111	;'o'
  8817  00EF09  6D                 	db	109	;'m'
  8818  00EF0A  70                 	db	112	;'p'
  8819  00EF0B  61                 	db	97	;'a'
  8820  00EF0C  74                 	db	116	;'t'
  8821  00EF0D  69                 	db	105	;'i'
  8822  00EF0E  62                 	db	98	;'b'
  8823  00EF0F  6C                 	db	108	;'l'
  8824  00EF10  65                 	db	101	;'e'
  8825  00EF11  20                 	db	32
  8826  00EF12  77                 	db	119	;'w'
  8827  00EF13  69                 	db	105	;'i'
  8828  00EF14  74                 	db	116	;'t'
  8829  00EF15  68                 	db	104	;'h'
  8830  00EF16  20                 	db	32
  8831  00EF17  61                 	db	97	;'a'
  8832  00EF18  20                 	db	32
  8833  00EF19  73                 	db	115	;'s'
  8834  00EF1A  6F                 	db	111	;'o'
  8835  00EF1B  6C                 	db	108	;'l'
  8836  00EF1C  69                 	db	105	;'i'
  8837  00EF1D  64                 	db	100	;'d'
  8838  00EF1E  20                 	db	32
  8839  00EF1F  73                 	db	115	;'s'
  8840  00EF20  74                 	db	116	;'t'
  8841  00EF21  61                 	db	97	;'a'
  8842  00EF22  74                 	db	116	;'t'
  8843  00EF23  65                 	db	101	;'e'
  8844  00EF24  20                 	db	32
  8845  00EF25  64                 	db	100	;'d'
  8846  00EF26  69                 	db	105	;'i'
  8847  00EF27  6D                 	db	109	;'m'
  8848  00EF28  6D                 	db	109	;'m'
  8849  00EF29  69                 	db	105	;'i'
  8850  00EF2A  6E                 	db	110	;'n'
  8851  00EF2B  67                 	db	103	;'g'
  8852  00EF2C  20                 	db	32
  8853  00EF2D  63                 	db	99	;'c'
  8854  00EF2E  69                 	db	105	;'i'
  8855  00EF2F  72                 	db	114	;'r'
  8856  00EF30  63                 	db	99	;'c'
  8857  00EF31  75                 	db	117	;'u'
  8858  00EF32  69                 	db	105	;'i'
  8859  00EF33  74                 	db	116	;'t'
  8860  00EF34  00                 	db	0
  8861  00EF35                     STR_143:
  8862  00EF35  49                 	db	73	;'I'
  8863  00EF36  66                 	db	102	;'f'
  8864  00EF37  20                 	db	32
  8865  00EF38  79                 	db	121	;'y'
  8866  00EF39  6F                 	db	111	;'o'
  8867  00EF3A  75                 	db	117	;'u'
  8868  00EF3B  27                 	db	39
  8869  00EF3C  64                 	db	100	;'d'
  8870  00EF3D  20                 	db	32
  8871  00EF3E  6C                 	db	108	;'l'
  8872  00EF3F  69                 	db	105	;'i'
  8873  00EF40  6B                 	db	107	;'k'
  8874  00EF41  65                 	db	101	;'e'
  8875  00EF42  20                 	db	32
  8876  00EF43  74                 	db	116	;'t'
  8877  00EF44  6F                 	db	111	;'o'
  8878  00EF45  20                 	db	32
  8879  00EF46  63                 	db	99	;'c'
  8880  00EF47  6F                 	db	111	;'o'
  8881  00EF48  6D                 	db	109	;'m'
  8882  00EF49  70                 	db	112	;'p'
  8883  00EF4A  6C                 	db	108	;'l'
  8884  00EF4B  65                 	db	101	;'e'
  8885  00EF4C  74                 	db	116	;'t'
  8886  00EF4D  65                 	db	101	;'e'
  8887  00EF4E  6C                 	db	108	;'l'
  8888  00EF4F  79                 	db	121	;'y'
  8889  00EF50  20                 	db	32
  8890  00EF51  65                 	db	101	;'e'
  8891  00EF52  6E                 	db	110	;'n'
  8892  00EF53  61                 	db	97	;'a'
  8893  00EF54  62                 	db	98	;'b'
  8894  00EF55  6C                 	db	108	;'l'
  8895  00EF56  65                 	db	101	;'e'
  8896  00EF57  20                 	db	32
  8897  00EF58  6F                 	db	111	;'o'
  8898  00EF59  72                 	db	114	;'r'
  8899  00EF5A  20                 	db	32
  8900  00EF5B  64                 	db	100	;'d'
  8901  00EF5C  69                 	db	105	;'i'
  8902  00EF5D  73                 	db	115	;'s'
  8903  00EF5E  61                 	db	97	;'a'
  8904  00EF5F  62                 	db	98	;'b'
  8905  00EF60  6C                 	db	108	;'l'
  8906  00EF61  65                 	db	101	;'e'
  8907  00EF62  20                 	db	32
  8908  00EF63  74                 	db	116	;'t'
  8909  00EF64  68                 	db	104	;'h'
  8910  00EF65  65                 	db	101	;'e'
  8911  00EF66  20                 	db	32
  8912  00EF67  6C                 	db	108	;'l'
  8913  00EF68  6F                 	db	111	;'o'
  8914  00EF69  61                 	db	97	;'a'
  8915  00EF6A  64                 	db	100	;'d'
  8916  00EF6B  2C                 	db	44
  8917  00EF6C  20                 	db	32
  8918  00EF6D  64                 	db	100	;'d'
  8919  00EF6E  69                 	db	105	;'i'
  8920  00EF6F  73                 	db	115	;'s'
  8921  00EF70  61                 	db	97	;'a'
  8922  00EF71  62                 	db	98	;'b'
  8923  00EF72  6C                 	db	108	;'l'
  8924  00EF73  65                 	db	101	;'e'
  8925  00EF74  20                 	db	32
  8926  00EF75  64                 	db	100	;'d'
  8927  00EF76  69                 	db	105	;'i'
  8928  00EF77  6D                 	db	109	;'m'
  8929  00EF78  6D                 	db	109	;'m'
  8930  00EF79  69                 	db	105	;'i'
  8931  00EF7A  6E                 	db	110	;'n'
  8932  00EF7B  67                 	db	103	;'g'
  8933  00EF7C  20                 	db	32
  8934  00EF7D  61                 	db	97	;'a'
  8935  00EF7E  6E                 	db	110	;'n'
  8936  00EF7F  64                 	db	100	;'d'
  8937  00EF80  20                 	db	32
  8938  00EF81  75                 	db	117	;'u'
  8939  00EF82  73                 	db	115	;'s'
  8940  00EF83  65                 	db	101	;'e'
  8941  00EF84  20                 	db	32
  8942  00EF85  72                 	db	114	;'r'
  8943  00EF86  65                 	db	101	;'e'
  8944  00EF87  73                 	db	115	;'s'
  8945  00EF88  70                 	db	112	;'p'
  8946  00EF89  65                 	db	101	;'e'
  8947  00EF8A  63                 	db	99	;'c'
  8948  00EF8B  74                 	db	116	;'t'
  8949  00EF8C  69                 	db	105	;'i'
  8950  00EF8D  76                 	db	118	;'v'
  8951  00EF8E  65                 	db	101	;'e'
  8952  00EF8F  20                 	db	32
  8953  00EF90  63                 	db	99	;'c'
  8954  00EF91  6F                 	db	111	;'o'
  8955  00EF92  6D                 	db	109	;'m'
  8956  00EF93  6D                 	db	109	;'m'
  8957  00EF94  61                 	db	97	;'a'
  8958  00EF95  6E                 	db	110	;'n'
  8959  00EF96  64                 	db	100	;'d'
  8960  00EF97  73                 	db	115	;'s'
  8961  00EF98  0A                 	db	10
  8962  00EF99  0D                 	db	13
  8963  00EF9A  00                 	db	0
  8964  00EF9B                     STR_142:
  8965  00EF9B  45                 	db	69	;'E'
  8966  00EF9C  52                 	db	82	;'R'
  8967  00EF9D  52                 	db	82	;'R'
  8968  00EF9E  4F                 	db	79	;'O'
  8969  00EF9F  52                 	db	82	;'R'
  8970  00EFA0  3A                 	db	58	;':'
  8971  00EFA1  20                 	db	32
  8972  00EFA2  50                 	db	80	;'P'
  8973  00EFA3  6C                 	db	108	;'l'
  8974  00EFA4  65                 	db	101	;'e'
  8975  00EFA5  61                 	db	97	;'a'
  8976  00EFA6  73                 	db	115	;'s'
  8977  00EFA7  65                 	db	101	;'e'
  8978  00EFA8  20                 	db	32
  8979  00EFA9  73                 	db	115	;'s'
  8980  00EFAA  65                 	db	101	;'e'
  8981  00EFAB  74                 	db	116	;'t'
  8982  00EFAC  20                 	db	32
  8983  00EFAD  64                 	db	100	;'d'
  8984  00EFAE  69                 	db	105	;'i'
  8985  00EFAF  6D                 	db	109	;'m'
  8986  00EFB0  6D                 	db	109	;'m'
  8987  00EFB1  69                 	db	105	;'i'
  8988  00EFB2  6E                 	db	110	;'n'
  8989  00EFB3  67                 	db	103	;'g'
  8990  00EFB4  20                 	db	32
  8991  00EFB5  70                 	db	112	;'p'
  8992  00EFB6  65                 	db	101	;'e'
  8993  00EFB7  72                 	db	114	;'r'
  8994  00EFB8  63                 	db	99	;'c'
  8995  00EFB9  65                 	db	101	;'e'
  8996  00EFBA  6E                 	db	110	;'n'
  8997  00EFBB  74                 	db	116	;'t'
  8998  00EFBC  61                 	db	97	;'a'
  8999  00EFBD  67                 	db	103	;'g'
  9000  00EFBE  65                 	db	101	;'e'
  9001  00EFBF  20                 	db	32
  9002  00EFC0  74                 	db	116	;'t'
  9003  00EFC1  6F                 	db	111	;'o'
  9004  00EFC2  20                 	db	32
  9005  00EFC3  61                 	db	97	;'a'
  9006  00EFC4  6E                 	db	110	;'n'
  9007  00EFC5  20                 	db	32
  9008  00EFC6  69                 	db	105	;'i'
  9009  00EFC7  6E                 	db	110	;'n'
  9010  00EFC8  74                 	db	116	;'t'
  9011  00EFC9  65                 	db	101	;'e'
  9012  00EFCA  67                 	db	103	;'g'
  9013  00EFCB  65                 	db	101	;'e'
  9014  00EFCC  72                 	db	114	;'r'
  9015  00EFCD  20                 	db	32
  9016  00EFCE  67                 	db	103	;'g'
  9017  00EFCF  72                 	db	114	;'r'
  9018  00EFD0  65                 	db	101	;'e'
  9019  00EFD1  61                 	db	97	;'a'
  9020  00EFD2  74                 	db	116	;'t'
  9021  00EFD3  65                 	db	101	;'e'
  9022  00EFD4  72                 	db	114	;'r'
  9023  00EFD5  20                 	db	32
  9024  00EFD6  74                 	db	116	;'t'
  9025  00EFD7  68                 	db	104	;'h'
  9026  00EFD8  61                 	db	97	;'a'
  9027  00EFD9  6E                 	db	110	;'n'
  9028  00EFDA  20                 	db	32
  9029  00EFDB  30                 	db	48	;'0'
  9030  00EFDC  20                 	db	32
  9031  00EFDD  61                 	db	97	;'a'
  9032  00EFDE  6E                 	db	110	;'n'
  9033  00EFDF  64                 	db	100	;'d'
  9034  00EFE0  20                 	db	32
  9035  00EFE1  6C                 	db	108	;'l'
  9036  00EFE2  65                 	db	101	;'e'
  9037  00EFE3  73                 	db	115	;'s'
  9038  00EFE4  73                 	db	115	;'s'
  9039  00EFE5  20                 	db	32
  9040  00EFE6  74                 	db	116	;'t'
  9041  00EFE7  68                 	db	104	;'h'
  9042  00EFE8  61                 	db	97	;'a'
  9043  00EFE9  6E                 	db	110	;'n'
  9044  00EFEA  20                 	db	32
  9045  00EFEB  31                 	db	49	;'1'
  9046  00EFEC  30                 	db	48	;'0'
  9047  00EFED  30                 	db	48	;'0'
  9048  00EFEE  0A                 	db	10
  9049  00EFEF  0D                 	db	13
  9050  00EFF0  00                 	db	0
  9051  00EFF1                     STR_71:
  9052  00EFF1  44                 	db	68	;'D'
  9053  00EFF2  65                 	db	101	;'e'
  9054  00EFF3  76                 	db	118	;'v'
  9055  00EFF4  69                 	db	105	;'i'
  9056  00EFF5  63                 	db	99	;'c'
  9057  00EFF6  65                 	db	101	;'e'
  9058  00EFF7  20                 	db	32
  9059  00EFF8  49                 	db	73	;'I'
  9060  00EFF9  44                 	db	68	;'D'
  9061  00EFFA  20                 	db	32
  9062  00EFFB  73                 	db	115	;'s'
  9063  00EFFC  74                 	db	116	;'t'
  9064  00EFFD  6F                 	db	111	;'o'
  9065  00EFFE  72                 	db	114	;'r'
  9066  00EFFF  65                 	db	101	;'e'
  9067  00F000  64                 	db	100	;'d'
  9068  00F001  20                 	db	32
  9069  00F002  69                 	db	105	;'i'
  9070  00F003  6E                 	db	110	;'n'
  9071  00F004  20                 	db	32
  9072  00F005  46                 	db	70	;'F'
  9073  00F006  6C                 	db	108	;'l'
  9074  00F007  61                 	db	97	;'a'
  9075  00F008  73                 	db	115	;'s'
  9076  00F009  68                 	db	104	;'h'
  9077  00F00A  20                 	db	32
  9078  00F00B  69                 	db	105	;'i'
  9079  00F00C  73                 	db	115	;'s'
  9080  00F00D  3A                 	db	58	;':'
  9081  00F00E  20                 	db	32
  9082  00F00F  30                 	db	48	;'0'
  9083  00F010  78                 	db	120	;'x'
  9084  00F011  25                 	db	37
  9085  00F012  58                 	db	88	;'X'
  9086  00F013  2E                 	db	46
  9087  00F014  20                 	db	32
  9088  00F015  54                 	db	84	;'T'
  9089  00F016  68                 	db	104	;'h'
  9090  00F017  69                 	db	105	;'i'
  9091  00F018  73                 	db	115	;'s'
  9092  00F019  20                 	db	32
  9093  00F01A  63                 	db	99	;'c'
  9094  00F01B  6F                 	db	111	;'o'
  9095  00F01C  72                 	db	114	;'r'
  9096  00F01D  72                 	db	114	;'r'
  9097  00F01E  65                 	db	101	;'e'
  9098  00F01F  73                 	db	115	;'s'
  9099  00F020  70                 	db	112	;'p'
  9100  00F021  6F                 	db	111	;'o'
  9101  00F022  6E                 	db	110	;'n'
  9102  00F023  64                 	db	100	;'d'
  9103  00F024  73                 	db	115	;'s'
  9104  00F025  20                 	db	32
  9105  00F026  74                 	db	116	;'t'
  9106  00F027  6F                 	db	111	;'o'
  9107  00F028  20                 	db	32
  9108  00F029  61                 	db	97	;'a'
  9109  00F02A  20                 	db	32
  9110  00F02B  64                 	db	100	;'d'
  9111  00F02C  65                 	db	101	;'e'
  9112  00F02D  76                 	db	118	;'v'
  9113  00F02E  69                 	db	105	;'i'
  9114  00F02F  63                 	db	99	;'c'
  9115  00F030  65                 	db	101	;'e'
  9116  00F031  20                 	db	32
  9117  00F032  70                 	db	112	;'p'
  9118  00F033  61                 	db	97	;'a'
  9119  00F034  72                 	db	114	;'r'
  9120  00F035  74                 	db	116	;'t'
  9121  00F036  20                 	db	32
  9122  00F037  6E                 	db	110	;'n'
  9123  00F038  75                 	db	117	;'u'
  9124  00F039  6D                 	db	109	;'m'
  9125  00F03A  62                 	db	98	;'b'
  9126  00F03B  65                 	db	101	;'e'
  9127  00F03C  72                 	db	114	;'r'
  9128  00F03D  20                 	db	32
  9129  00F03E  6F                 	db	111	;'o'
  9130  00F03F  66                 	db	102	;'f'
  9131  00F040  20                 	db	32
  9132  00F041  25                 	db	37
  9133  00F042  73                 	db	115	;'s'
  9134  00F043  0A                 	db	10
  9135  00F044  0D                 	db	13
  9136  00F045  00                 	db	0
  9137  00F046                     STR_118:
  9138  00F046  4D                 	db	77	;'M'
  9139  00F047  65                 	db	101	;'e'
  9140  00F048  61                 	db	97	;'a'
  9141  00F049  73                 	db	115	;'s'
  9142  00F04A  75                 	db	117	;'u'
  9143  00F04B  72                 	db	114	;'r'
  9144  00F04C  65                 	db	101	;'e'
  9145  00F04D  64                 	db	100	;'d'
  9146  00F04E  20                 	db	32
  9147  00F04F  6F                 	db	111	;'o'
  9148  00F050  75                 	db	117	;'u'
  9149  00F051  74                 	db	116	;'t'
  9150  00F052  70                 	db	112	;'p'
  9151  00F053  75                 	db	117	;'u'
  9152  00F054  74                 	db	116	;'t'
  9153  00F055  20                 	db	32
  9154  00F056  65                 	db	101	;'e'
  9155  00F057  6E                 	db	110	;'n'
  9156  00F058  65                 	db	101	;'e'
  9157  00F059  72                 	db	114	;'r'
  9158  00F05A  67                 	db	103	;'g'
  9159  00F05B  79                 	db	121	;'y'
  9160  00F05C  20                 	db	32
  9161  00F05D  73                 	db	115	;'s'
  9162  00F05E  69                 	db	105	;'i'
  9163  00F05F  6E                 	db	110	;'n'
  9164  00F060  63                 	db	99	;'c'
  9165  00F061  65                 	db	101	;'e'
  9166  00F062  20                 	db	32
  9167  00F063  6C                 	db	108	;'l'
  9168  00F064  61                 	db	97	;'a'
  9169  00F065  73                 	db	115	;'s'
  9170  00F066  74                 	db	116	;'t'
  9171  00F067  20                 	db	32
  9172  00F068  6D                 	db	109	;'m'
  9173  00F069  65                 	db	101	;'e'
  9174  00F06A  61                 	db	97	;'a'
  9175  00F06B  73                 	db	115	;'s'
  9176  00F06C  75                 	db	117	;'u'
  9177  00F06D  72                 	db	114	;'r'
  9178  00F06E  65                 	db	101	;'e'
  9179  00F06F  6D                 	db	109	;'m'
  9180  00F070  65                 	db	101	;'e'
  9181  00F071  6E                 	db	110	;'n'
  9182  00F072  74                 	db	116	;'t'
  9183  00F073  20                 	db	32
  9184  00F074  72                 	db	114	;'r'
  9185  00F075  65                 	db	101	;'e'
  9186  00F076  73                 	db	115	;'s'
  9187  00F077  65                 	db	101	;'e'
  9188  00F078  74                 	db	116	;'t'
  9189  00F079  20                 	db	32
  9190  00F07A  69                 	db	105	;'i'
  9191  00F07B  73                 	db	115	;'s'
  9192  00F07C  20                 	db	32
  9193  00F07D  25                 	db	37
  9194  00F07E  2E                 	db	46
  9195  00F07F  33                 	db	51	;'3'
  9196  00F080  66                 	db	102	;'f'
  9197  00F081  20                 	db	32
  9198  00F082  57                 	db	87	;'W'
  9199  00F083  61                 	db	97	;'a'
  9200  00F084  74                 	db	116	;'t'
  9201  00F085  74                 	db	116	;'t'
  9202  00F086  20                 	db	32
  9203  00F087  48                 	db	72	;'H'
  9204  00F088  6F                 	db	111	;'o'
  9205  00F089  75                 	db	117	;'u'
  9206  00F08A  72                 	db	114	;'r'
  9207  00F08B  73                 	db	115	;'s'
  9208  00F08C  0A                 	db	10
  9209  00F08D  0D                 	db	13
  9210  00F08E  00                 	db	0
  9211  00F08F                     STR_147:
  9212  00F08F  54                 	db	84	;'T'
  9213  00F090  68                 	db	104	;'h'
  9214  00F091  69                 	db	105	;'i'
  9215  00F092  73                 	db	115	;'s'
  9216  00F093  20                 	db	32
  9217  00F094  63                 	db	99	;'c'
  9218  00F095  6F                 	db	111	;'o'
  9219  00F096  72                 	db	114	;'r'
  9220  00F097  72                 	db	114	;'r'
  9221  00F098  65                 	db	101	;'e'
  9222  00F099  73                 	db	115	;'s'
  9223  00F09A  70                 	db	112	;'p'
  9224  00F09B  6F                 	db	111	;'o'
  9225  00F09C  6E                 	db	110	;'n'
  9226  00F09D  64                 	db	100	;'d'
  9227  00F09E  73                 	db	115	;'s'
  9228  00F09F  20                 	db	32
  9229  00F0A0  74                 	db	116	;'t'
  9230  00F0A1  6F                 	db	111	;'o'
  9231  00F0A2  20                 	db	32
  9232  00F0A3  61                 	db	97	;'a'
  9233  00F0A4  20                 	db	32
  9234  00F0A5  31                 	db	49	;'1'
  9235  00F0A6  36                 	db	54	;'6'
  9236  00F0A7  20                 	db	32
  9237  00F0A8  62                 	db	98	;'b'
  9238  00F0A9  69                 	db	105	;'i'
  9239  00F0AA  74                 	db	116	;'t'
  9240  00F0AB  20                 	db	32
  9241  00F0AC  74                 	db	116	;'t'
  9242  00F0AD  69                 	db	105	;'i'
  9243  00F0AE  6D                 	db	109	;'m'
  9244  00F0AF  65                 	db	101	;'e'
  9245  00F0B0  72                 	db	114	;'r'
  9246  00F0B1  20                 	db	32
  9247  00F0B2  70                 	db	112	;'p'
  9248  00F0B3  72                 	db	114	;'r'
  9249  00F0B4  65                 	db	101	;'e'
  9250  00F0B5  2D                 	db	45
  9251  00F0B6  6C                 	db	108	;'l'
  9252  00F0B7  6F                 	db	111	;'o'
  9253  00F0B8  61                 	db	97	;'a'
  9254  00F0B9  64                 	db	100	;'d'
  9255  00F0BA  20                 	db	32
  9256  00F0BB  76                 	db	118	;'v'
  9257  00F0BC  61                 	db	97	;'a'
  9258  00F0BD  6C                 	db	108	;'l'
  9259  00F0BE  75                 	db	117	;'u'
  9260  00F0BF  65                 	db	101	;'e'
  9261  00F0C0  20                 	db	32
  9262  00F0C1  6F                 	db	111	;'o'
  9263  00F0C2  66                 	db	102	;'f'
  9264  00F0C3  20                 	db	32
  9265  00F0C4  30                 	db	48	;'0'
  9266  00F0C5  78                 	db	120	;'x'
  9267  00F0C6  25                 	db	37
  9268  00F0C7  58                 	db	88	;'X'
  9269  00F0C8  20                 	db	32
  9270  00F0C9  28                 	db	40
  9271  00F0CA  25                 	db	37
  9272  00F0CB  75                 	db	117	;'u'
  9273  00F0CC  20                 	db	32
  9274  00F0CD  4C                 	db	76	;'L'
  9275  00F0CE  53                 	db	83	;'S'
  9276  00F0CF  42                 	db	66	;'B'
  9277  00F0D0  73                 	db	115	;'s'
  9278  00F0D1  29                 	db	41
  9279  00F0D2  20                 	db	32
  9280  00F0D3  0A                 	db	10
  9281  00F0D4  0D                 	db	13
  9282  00F0D5  00                 	db	0
  9283  00F0D6                     STR_92:
  9284  00F0D6  43                 	db	67	;'C'
  9285  00F0D7  6F                 	db	111	;'o'
  9286  00F0D8  6D                 	db	109	;'m'
  9287  00F0D9  6D                 	db	109	;'m'
  9288  00F0DA  75                 	db	117	;'u'
  9289  00F0DB  6E                 	db	110	;'n'
  9290  00F0DC  69                 	db	105	;'i'
  9291  00F0DD  63                 	db	99	;'c'
  9292  00F0DE  61                 	db	97	;'a'
  9293  00F0DF  74                 	db	116	;'t'
  9294  00F0E0  69                 	db	105	;'i'
  9295  00F0E1  6F                 	db	111	;'o'
  9296  00F0E2  6E                 	db	110	;'n'
  9297  00F0E3  73                 	db	115	;'s'
  9298  00F0E4  20                 	db	32
  9299  00F0E5  65                 	db	101	;'e'
  9300  00F0E6  72                 	db	114	;'r'
  9301  00F0E7  72                 	db	114	;'r'
  9302  00F0E8  6F                 	db	111	;'o'
  9303  00F0E9  72                 	db	114	;'r'
  9304  00F0EA  28                 	db	40
  9305  00F0EB  73                 	db	115	;'s'
  9306  00F0EC  29                 	db	41
  9307  00F0ED  20                 	db	32
  9308  00F0EE  64                 	db	100	;'d'
  9309  00F0EF  65                 	db	101	;'e'
  9310  00F0F0  74                 	db	116	;'t'
  9311  00F0F1  65                 	db	101	;'e'
  9312  00F0F2  63                 	db	99	;'c'
  9313  00F0F3  74                 	db	116	;'t'
  9314  00F0F4  65                 	db	101	;'e'
  9315  00F0F5  64                 	db	100	;'d'
  9316  00F0F6  21                 	db	33
  9317  00F0F7  20                 	db	32
  9318  00F0F8  49                 	db	73	;'I'
  9319  00F0F9  6E                 	db	110	;'n'
  9320  00F0FA  74                 	db	116	;'t'
  9321  00F0FB  65                 	db	101	;'e'
  9322  00F0FC  72                 	db	114	;'r'
  9323  00F0FD  66                 	db	102	;'f'
  9324  00F0FE  61                 	db	97	;'a'
  9325  00F0FF  63                 	db	99	;'c'
  9326  00F100  65                 	db	101	;'e'
  9327  00F101  73                 	db	115	;'s'
  9328  00F102  20                 	db	32
  9329  00F103  63                 	db	99	;'c'
  9330  00F104  61                 	db	97	;'a'
  9331  00F105  75                 	db	117	;'u'
  9332  00F106  73                 	db	115	;'s'
  9333  00F107  69                 	db	105	;'i'
  9334  00F108  6E                 	db	110	;'n'
  9335  00F109  67                 	db	103	;'g'
  9336  00F10A  20                 	db	32
  9337  00F10B  65                 	db	101	;'e'
  9338  00F10C  72                 	db	114	;'r'
  9339  00F10D  72                 	db	114	;'r'
  9340  00F10E  6F                 	db	111	;'o'
  9341  00F10F  72                 	db	114	;'r'
  9342  00F110  28                 	db	40
  9343  00F111  73                 	db	115	;'s'
  9344  00F112  29                 	db	41
  9345  00F113  3A                 	db	58	;':'
  9346  00F114  0A                 	db	10
  9347  00F115  0D                 	db	13
  9348  00F116  00                 	db	0
  9349  00F117                     STR_75:
  9350  00F117  54                 	db	84	;'T'
  9351  00F118  68                 	db	104	;'h'
  9352  00F119  65                 	db	101	;'e'
  9353  00F11A  20                 	db	32
  9354  00F11B  66                 	db	102	;'f'
  9355  00F11C  6F                 	db	111	;'o'
  9356  00F11D  6C                 	db	108	;'l'
  9357  00F11E  6C                 	db	108	;'l'
  9358  00F11F  6F                 	db	111	;'o'
  9359  00F120  77                 	db	119	;'w'
  9360  00F121  69                 	db	105	;'i'
  9361  00F122  6E                 	db	110	;'n'
  9362  00F123  67                 	db	103	;'g'
  9363  00F124  20                 	db	32
  9364  00F125  55                 	db	85	;'U'
  9365  00F126  73                 	db	115	;'s'
  9366  00F127  65                 	db	101	;'e'
  9367  00F128  72                 	db	114	;'r'
  9368  00F129  20                 	db	32
  9369  00F12A  49                 	db	73	;'I'
  9370  00F12B  44                 	db	68	;'D'
  9371  00F12C  73                 	db	115	;'s'
  9372  00F12D  20                 	db	32
  9373  00F12E  68                 	db	104	;'h'
  9374  00F12F  61                 	db	97	;'a'
  9375  00F130  76                 	db	118	;'v'
  9376  00F131  65                 	db	101	;'e'
  9377  00F132  20                 	db	32
  9378  00F133  62                 	db	98	;'b'
  9379  00F134  65                 	db	101	;'e'
  9380  00F135  65                 	db	101	;'e'
  9381  00F136  6E                 	db	110	;'n'
  9382  00F137  20                 	db	32
  9383  00F138  72                 	db	114	;'r'
  9384  00F139  65                 	db	101	;'e'
  9385  00F13A  74                 	db	116	;'t'
  9386  00F13B  72                 	db	114	;'r'
  9387  00F13C  69                 	db	105	;'i'
  9388  00F13D  65                 	db	101	;'e'
  9389  00F13E  76                 	db	118	;'v'
  9390  00F13F  65                 	db	101	;'e'
  9391  00F140  64                 	db	100	;'d'
  9392  00F141  20                 	db	32
  9393  00F142  66                 	db	102	;'f'
  9394  00F143  72                 	db	114	;'r'
  9395  00F144  6F                 	db	111	;'o'
  9396  00F145  6D                 	db	109	;'m'
  9397  00F146  20                 	db	32
  9398  00F147  66                 	db	102	;'f'
  9399  00F148  6C                 	db	108	;'l'
  9400  00F149  61                 	db	97	;'a'
  9401  00F14A  73                 	db	115	;'s'
  9402  00F14B  68                 	db	104	;'h'
  9403  00F14C  20                 	db	32
  9404  00F14D  6D                 	db	109	;'m'
  9405  00F14E  65                 	db	101	;'e'
  9406  00F14F  6D                 	db	109	;'m'
  9407  00F150  6F                 	db	111	;'o'
  9408  00F151  72                 	db	114	;'r'
  9409  00F152  79                 	db	121	;'y'
  9410  00F153  3A                 	db	58	;':'
  9411  00F154  0A                 	db	10
  9412  00F155  0D                 	db	13
  9413  00F156  00                 	db	0
  9414  00F157                     STR_146:
  9415  00F157  43                 	db	67	;'C'
  9416  00F158  61                 	db	97	;'a'
  9417  00F159  6C                 	db	108	;'l'
  9418  00F15A  63                 	db	99	;'c'
  9419  00F15B  75                 	db	117	;'u'
  9420  00F15C  6C                 	db	108	;'l'
  9421  00F15D  61                 	db	97	;'a'
  9422  00F15E  74                 	db	116	;'t'
  9423  00F15F  65                 	db	101	;'e'
  9424  00F160  64                 	db	100	;'d'
  9425  00F161  20                 	db	32
  9426  00F162  54                 	db	84	;'T'
  9427  00F163  52                 	db	82	;'R'
  9428  00F164  49                 	db	73	;'I'
  9429  00F165  41                 	db	65	;'A'
  9430  00F166  43                 	db	67	;'C'
  9431  00F167  20                 	db	32
  9432  00F168  66                 	db	102	;'f'
  9433  00F169  69                 	db	105	;'i'
  9434  00F16A  72                 	db	114	;'r'
  9435  00F16B  69                 	db	105	;'i'
  9436  00F16C  6E                 	db	110	;'n'
  9437  00F16D  67                 	db	103	;'g'
  9438  00F16E  20                 	db	32
  9439  00F16F  61                 	db	97	;'a'
  9440  00F170  6E                 	db	110	;'n'
  9441  00F171  67                 	db	103	;'g'
  9442  00F172  6C                 	db	108	;'l'
  9443  00F173  65                 	db	101	;'e'
  9444  00F174  20                 	db	32
  9445  00F175  69                 	db	105	;'i'
  9446  00F176  73                 	db	115	;'s'
  9447  00F177  20                 	db	32
  9448  00F178  25                 	db	37
  9449  00F179  2E                 	db	46
  9450  00F17A  33                 	db	51	;'3'
  9451  00F17B  66                 	db	102	;'f'
  9452  00F17C  20                 	db	32
  9453  00F17D  72                 	db	114	;'r'
  9454  00F17E  61                 	db	97	;'a'
  9455  00F17F  64                 	db	100	;'d'
  9456  00F180  69                 	db	105	;'i'
  9457  00F181  61                 	db	97	;'a'
  9458  00F182  6E                 	db	110	;'n'
  9459  00F183  73                 	db	115	;'s'
  9460  00F184  20                 	db	32
  9461  00F185  28                 	db	40
  9462  00F186  25                 	db	37
  9463  00F187  2E                 	db	46
  9464  00F188  33                 	db	51	;'3'
  9465  00F189  66                 	db	102	;'f'
  9466  00F18A  20                 	db	32
  9467  00F18B  64                 	db	100	;'d'
  9468  00F18C  65                 	db	101	;'e'
  9469  00F18D  67                 	db	103	;'g'
  9470  00F18E  72                 	db	114	;'r'
  9471  00F18F  65                 	db	101	;'e'
  9472  00F190  65                 	db	101	;'e'
  9473  00F191  73                 	db	115	;'s'
  9474  00F192  29                 	db	41
  9475  00F193  0A                 	db	10
  9476  00F194  0D                 	db	13
  9477  00F195  00                 	db	0
  9478  00F196                     STR_179:
  9479  00F196  53                 	db	83	;'S'
  9480  00F197  79                 	db	121	;'y'
  9481  00F198  73                 	db	115	;'s'
  9482  00F199  74                 	db	116	;'t'
  9483  00F19A  65                 	db	101	;'e'
  9484  00F19B  6D                 	db	109	;'m'
  9485  00F19C  20                 	db	32
  9486  00F19D  70                 	db	112	;'p'
  9487  00F19E  61                 	db	97	;'a'
  9488  00F19F  72                 	db	114	;'r'
  9489  00F1A0  61                 	db	97	;'a'
  9490  00F1A1  6D                 	db	109	;'m'
  9491  00F1A2  65                 	db	101	;'e'
  9492  00F1A3  74                 	db	116	;'t'
  9493  00F1A4  65                 	db	101	;'e'
  9494  00F1A5  72                 	db	114	;'r'
  9495  00F1A6  73                 	db	115	;'s'
  9496  00F1A7  20                 	db	32
  9497  00F1A8  61                 	db	97	;'a'
  9498  00F1A9  6E                 	db	110	;'n'
  9499  00F1AA  64                 	db	100	;'d'
  9500  00F1AB  20                 	db	32
  9501  00F1AC  61                 	db	97	;'a'
  9502  00F1AD  66                 	db	102	;'f'
  9503  00F1AE  66                 	db	102	;'f'
  9504  00F1AF  69                 	db	105	;'i'
  9505  00F1B0  72                 	db	114	;'r'
  9506  00F1B1  6D                 	db	109	;'m'
  9507  00F1B2  61                 	db	97	;'a'
  9508  00F1B3  74                 	db	116	;'t'
  9509  00F1B4  69                 	db	105	;'i'
  9510  00F1B5  76                 	db	118	;'v'
  9511  00F1B6  65                 	db	101	;'e'
  9512  00F1B7  20                 	db	32
  9513  00F1B8  72                 	db	114	;'r'
  9514  00F1B9  65                 	db	101	;'e'
  9515  00F1BA  73                 	db	115	;'s'
  9516  00F1BB  70                 	db	112	;'p'
  9517  00F1BC  6F                 	db	111	;'o'
  9518  00F1BD  6E                 	db	110	;'n'
  9519  00F1BE  73                 	db	115	;'s'
  9520  00F1BF  65                 	db	101	;'e'
  9521  00F1C0  73                 	db	115	;'s'
  9522  00F1C1  20                 	db	32
  9523  00F1C2  61                 	db	97	;'a'
  9524  00F1C3  70                 	db	112	;'p'
  9525  00F1C4  70                 	db	112	;'p'
  9526  00F1C5  65                 	db	101	;'e'
  9527  00F1C6  61                 	db	97	;'a'
  9528  00F1C7  72                 	db	114	;'r'
  9529  00F1C8  20                 	db	32
  9530  00F1C9  69                 	db	105	;'i'
  9531  00F1CA  6E                 	db	110	;'n'
  9532  00F1CB  20                 	db	32
  9533  00F1CC  67                 	db	103	;'g'
  9534  00F1CD  72                 	db	114	;'r'
  9535  00F1CE  65                 	db	101	;'e'
  9536  00F1CF  65                 	db	101	;'e'
  9537  00F1D0  6E                 	db	110	;'n'
  9538  00F1D1  0A                 	db	10
  9539  00F1D2  0D                 	db	13
  9540  00F1D3  00                 	db	0
  9541  00F1D4                     STR_95:
  9542  00F1D4  43                 	db	67	;'C'
  9543  00F1D5  61                 	db	97	;'a'
  9544  00F1D6  6C                 	db	108	;'l'
  9545  00F1D7  6C                 	db	108	;'l'
  9546  00F1D8  20                 	db	32
  9547  00F1D9  27                 	db	39
  9548  00F1DA  43                 	db	67	;'C'
  9549  00F1DB  6C                 	db	108	;'l'
  9550  00F1DC  65                 	db	101	;'e'
  9551  00F1DD  61                 	db	97	;'a'
  9552  00F1DE  72                 	db	114	;'r'
  9553  00F1DF  20                 	db	32
  9554  00F1E0  43                 	db	67	;'C'
  9555  00F1E1  4F                 	db	79	;'O'
  9556  00F1E2  4D                 	db	77	;'M'
  9557  00F1E3  4D                 	db	77	;'M'
  9558  00F1E4  20                 	db	32
  9559  00F1E5  45                 	db	69	;'E'
  9560  00F1E6  72                 	db	114	;'r'
  9561  00F1E7  72                 	db	114	;'r'
  9562  00F1E8  6F                 	db	111	;'o'
  9563  00F1E9  72                 	db	114	;'r'
  9564  00F1EA  73                 	db	115	;'s'
  9565  00F1EB  27                 	db	39
  9566  00F1EC  20                 	db	32
  9567  00F1ED  74                 	db	116	;'t'
  9568  00F1EE  6F                 	db	111	;'o'
  9569  00F1EF  20                 	db	32
  9570  00F1F0  63                 	db	99	;'c'
  9571  00F1F1  6C                 	db	108	;'l'
  9572  00F1F2  65                 	db	101	;'e'
  9573  00F1F3  61                 	db	97	;'a'
  9574  00F1F4  72                 	db	114	;'r'
  9575  00F1F5  20                 	db	32
  9576  00F1F6  63                 	db	99	;'c'
  9577  00F1F7  6F                 	db	111	;'o'
  9578  00F1F8  6D                 	db	109	;'m'
  9579  00F1F9  6D                 	db	109	;'m'
  9580  00F1FA  75                 	db	117	;'u'
  9581  00F1FB  6E                 	db	110	;'n'
  9582  00F1FC  69                 	db	105	;'i'
  9583  00F1FD  63                 	db	99	;'c'
  9584  00F1FE  61                 	db	97	;'a'
  9585  00F1FF  74                 	db	116	;'t'
  9586  00F200  69                 	db	105	;'i'
  9587  00F201  6F                 	db	111	;'o'
  9588  00F202  6E                 	db	110	;'n'
  9589  00F203  73                 	db	115	;'s'
  9590  00F204  20                 	db	32
  9591  00F205  65                 	db	101	;'e'
  9592  00F206  72                 	db	114	;'r'
  9593  00F207  72                 	db	114	;'r'
  9594  00F208  6F                 	db	111	;'o'
  9595  00F209  72                 	db	114	;'r'
  9596  00F20A  28                 	db	40
  9597  00F20B  73                 	db	115	;'s'
  9598  00F20C  29                 	db	41
  9599  00F20D  0A                 	db	10
  9600  00F20E  0D                 	db	13
  9601  00F20F  00                 	db	0
  9602  00F210                     STR_73:
  9603  00F210  44                 	db	68	;'D'
  9604  00F211  65                 	db	101	;'e'
  9605  00F212  76                 	db	118	;'v'
  9606  00F213  69                 	db	105	;'i'
  9607  00F214  63                 	db	99	;'c'
  9608  00F215  65                 	db	101	;'e'
  9609  00F216  20                 	db	32
  9610  00F217  73                 	db	115	;'s'
  9611  00F218  69                 	db	105	;'i'
  9612  00F219  6C                 	db	108	;'l'
  9613  00F21A  69                 	db	105	;'i'
  9614  00F21B  63                 	db	99	;'c'
  9615  00F21C  6F                 	db	111	;'o'
  9616  00F21D  6E                 	db	110	;'n'
  9617  00F21E  20                 	db	32
  9618  00F21F  72                 	db	114	;'r'
  9619  00F220  65                 	db	101	;'e'
  9620  00F221  76                 	db	118	;'v'
  9621  00F222  69                 	db	105	;'i'
  9622  00F223  73                 	db	115	;'s'
  9623  00F224  69                 	db	105	;'i'
  9624  00F225  6F                 	db	111	;'o'
  9625  00F226  6E                 	db	110	;'n'
  9626  00F227  20                 	db	32
  9627  00F228  49                 	db	73	;'I'
  9628  00F229  44                 	db	68	;'D'
  9629  00F22A  20                 	db	32
  9630  00F22B  61                 	db	97	;'a'
  9631  00F22C  73                 	db	115	;'s'
  9632  00F22D  20                 	db	32
  9633  00F22E  73                 	db	115	;'s'
  9634  00F22F  74                 	db	116	;'t'
  9635  00F230  6F                 	db	111	;'o'
  9636  00F231  72                 	db	114	;'r'
  9637  00F232  65                 	db	101	;'e'
  9638  00F233  64                 	db	100	;'d'
  9639  00F234  20                 	db	32
  9640  00F235  69                 	db	105	;'i'
  9641  00F236  6E                 	db	110	;'n'
  9642  00F237  20                 	db	32
  9643  00F238  46                 	db	70	;'F'
  9644  00F239  6C                 	db	108	;'l'
  9645  00F23A  61                 	db	97	;'a'
  9646  00F23B  73                 	db	115	;'s'
  9647  00F23C  68                 	db	104	;'h'
  9648  00F23D  20                 	db	32
  9649  00F23E  69                 	db	105	;'i'
  9650  00F23F  73                 	db	115	;'s'
  9651  00F240  3A                 	db	58	;':'
  9652  00F241  20                 	db	32
  9653  00F242  25                 	db	37
  9654  00F243  63                 	db	99	;'c'
  9655  00F244  25                 	db	37
  9656  00F245  30                 	db	48	;'0'
  9657  00F246  33                 	db	51	;'3'
  9658  00F247  64                 	db	100	;'d'
  9659  00F248  0A                 	db	10
  9660  00F249  0D                 	db	13
  9661  00F24A  00                 	db	0
  9662  00F24B                     STR_120:
  9663  00F24B  4D                 	db	77	;'M'
  9664  00F24C  65                 	db	101	;'e'
  9665  00F24D  61                 	db	97	;'a'
  9666  00F24E  73                 	db	115	;'s'
  9667  00F24F  75                 	db	117	;'u'
  9668  00F250  72                 	db	114	;'r'
  9669  00F251  65                 	db	101	;'e'
  9670  00F252  64                 	db	100	;'d'
  9671  00F253  20                 	db	32
  9672  00F254  6F                 	db	111	;'o'
  9673  00F255  75                 	db	117	;'u'
  9674  00F256  74                 	db	116	;'t'
  9675  00F257  70                 	db	112	;'p'
  9676  00F258  75                 	db	117	;'u'
  9677  00F259  74                 	db	116	;'t'
  9678  00F25A  20                 	db	32
  9679  00F25B  65                 	db	101	;'e'
  9680  00F25C  6E                 	db	110	;'n'
  9681  00F25D  65                 	db	101	;'e'
  9682  00F25E  72                 	db	114	;'r'
  9683  00F25F  67                 	db	103	;'g'
  9684  00F260  79                 	db	121	;'y'
  9685  00F261  20                 	db	32
  9686  00F262  68                 	db	104	;'h'
  9687  00F263  61                 	db	97	;'a'
  9688  00F264  73                 	db	115	;'s'
  9689  00F265  20                 	db	32
  9690  00F266  62                 	db	98	;'b'
  9691  00F267  65                 	db	101	;'e'
  9692  00F268  65                 	db	101	;'e'
  9693  00F269  6E                 	db	110	;'n'
  9694  00F26A  20                 	db	32
  9695  00F26B  72                 	db	114	;'r'
  9696  00F26C  65                 	db	101	;'e'
  9697  00F26D  73                 	db	115	;'s'
  9698  00F26E  65                 	db	101	;'e'
  9699  00F26F  74                 	db	116	;'t'
  9700  00F270  20                 	db	32
  9701  00F271  74                 	db	116	;'t'
  9702  00F272  6F                 	db	111	;'o'
  9703  00F273  20                 	db	32
  9704  00F274  7A                 	db	122	;'z'
  9705  00F275  65                 	db	101	;'e'
  9706  00F276  72                 	db	114	;'r'
  9707  00F277  6F                 	db	111	;'o'
  9708  00F278  20                 	db	32
  9709  00F279  57                 	db	87	;'W'
  9710  00F27A  61                 	db	97	;'a'
  9711  00F27B  74                 	db	116	;'t'
  9712  00F27C  74                 	db	116	;'t'
  9713  00F27D  20                 	db	32
  9714  00F27E  48                 	db	72	;'H'
  9715  00F27F  6F                 	db	111	;'o'
  9716  00F280  75                 	db	117	;'u'
  9717  00F281  72                 	db	114	;'r'
  9718  00F282  73                 	db	115	;'s'
  9719  00F283  0A                 	db	10
  9720  00F284  0D                 	db	13
  9721  00F285  00                 	db	0
  9722  00F286                     STR_149:
  9723  00F286  44                 	db	68	;'D'
  9724  00F287  65                 	db	101	;'e'
  9725  00F288  76                 	db	118	;'v'
  9726  00F289  69                 	db	105	;'i'
  9727  00F28A  63                 	db	99	;'c'
  9728  00F28B  65                 	db	101	;'e'
  9729  00F28C  20                 	db	32
  9730  00F28D  6F                 	db	111	;'o'
  9731  00F28E  6E                 	db	110	;'n'
  9732  00F28F  20                 	db	32
  9733  00F290  74                 	db	116	;'t'
  9734  00F291  69                 	db	105	;'i'
  9735  00F292  6D                 	db	109	;'m'
  9736  00F293  65                 	db	101	;'e'
  9737  00F294  20                 	db	32
  9738  00F295  73                 	db	115	;'s'
  9739  00F296  69                 	db	105	;'i'
  9740  00F297  6E                 	db	110	;'n'
  9741  00F298  63                 	db	99	;'c'
  9742  00F299  65                 	db	101	;'e'
  9743  00F29A  20                 	db	32
  9744  00F29B  6C                 	db	108	;'l'
  9745  00F29C  61                 	db	97	;'a'
  9746  00F29D  73                 	db	115	;'s'
  9747  00F29E  74                 	db	116	;'t'
  9748  00F29F  20                 	db	32
  9749  00F2A0  72                 	db	114	;'r'
  9750  00F2A1  65                 	db	101	;'e'
  9751  00F2A2  73                 	db	115	;'s'
  9752  00F2A3  65                 	db	101	;'e'
  9753  00F2A4  74                 	db	116	;'t'
  9754  00F2A5  20                 	db	32
  9755  00F2A6  63                 	db	99	;'c'
  9756  00F2A7  6F                 	db	111	;'o'
  9757  00F2A8  6E                 	db	110	;'n'
  9758  00F2A9  64                 	db	100	;'d'
  9759  00F2AA  69                 	db	105	;'i'
  9760  00F2AB  74                 	db	116	;'t'
  9761  00F2AC  69                 	db	105	;'i'
  9762  00F2AD  6F                 	db	111	;'o'
  9763  00F2AE  6E                 	db	110	;'n'
  9764  00F2AF  20                 	db	32
  9765  00F2B0  69                 	db	105	;'i'
  9766  00F2B1  73                 	db	115	;'s'
  9767  00F2B2  20                 	db	32
  9768  00F2B3  25                 	db	37
  9769  00F2B4  64                 	db	100	;'d'
  9770  00F2B5  20                 	db	32
  9771  00F2B6  73                 	db	115	;'s'
  9772  00F2B7  65                 	db	101	;'e'
  9773  00F2B8  63                 	db	99	;'c'
  9774  00F2B9  6F                 	db	111	;'o'
  9775  00F2BA  6E                 	db	110	;'n'
  9776  00F2BB  64                 	db	100	;'d'
  9777  00F2BC  73                 	db	115	;'s'
  9778  00F2BD  0A                 	db	10
  9779  00F2BE  0D                 	db	13
  9780  00F2BF  00                 	db	0
  9781  00F2C0                     STR_106:
  9782  00F2C0  46                 	db	70	;'F'
  9783  00F2C1  69                 	db	105	;'i'
  9784  00F2C2  78                 	db	120	;'x'
  9785  00F2C3  65                 	db	101	;'e'
  9786  00F2C4  64                 	db	100	;'d'
  9787  00F2C5  20                 	db	32
  9788  00F2C6  56                 	db	86	;'V'
  9789  00F2C7  6F                 	db	111	;'o'
  9790  00F2C8  6C                 	db	108	;'l'
  9791  00F2C9  74                 	db	116	;'t'
  9792  00F2CA  61                 	db	97	;'a'
  9793  00F2CB  67                 	db	103	;'g'
  9794  00F2CC  65                 	db	101	;'e'
  9795  00F2CD  20                 	db	32
  9796  00F2CE  52                 	db	82	;'R'
  9797  00F2CF  65                 	db	101	;'e'
  9798  00F2D0  66                 	db	102	;'f'
  9799  00F2D1  65                 	db	101	;'e'
  9800  00F2D2  72                 	db	114	;'r'
  9801  00F2D3  65                 	db	101	;'e'
  9802  00F2D4  6E                 	db	110	;'n'
  9803  00F2D5  63                 	db	99	;'c'
  9804  00F2D6  65                 	db	101	;'e'
  9805  00F2D7  20                 	db	32
  9806  00F2D8  42                 	db	66	;'B'
  9807  00F2D9  75                 	db	117	;'u'
  9808  00F2DA  66                 	db	102	;'f'
  9809  00F2DB  66                 	db	102	;'f'
  9810  00F2DC  65                 	db	101	;'e'
  9811  00F2DD  72                 	db	114	;'r'
  9812  00F2DE  20                 	db	32
  9813  00F2DF  31                 	db	49	;'1'
  9814  00F2E0  20                 	db	32
  9815  00F2E1  6D                 	db	109	;'m'
  9816  00F2E2  65                 	db	101	;'e'
  9817  00F2E3  61                 	db	97	;'a'
  9818  00F2E4  73                 	db	115	;'s'
  9819  00F2E5  75                 	db	117	;'u'
  9820  00F2E6  72                 	db	114	;'r'
  9821  00F2E7  65                 	db	101	;'e'
  9822  00F2E8  64                 	db	100	;'d'
  9823  00F2E9  20                 	db	32
  9824  00F2EA  61                 	db	97	;'a'
  9825  00F2EB  73                 	db	115	;'s'
  9826  00F2EC  20                 	db	32
  9827  00F2ED  25                 	db	37
  9828  00F2EE  2E                 	db	46
  9829  00F2EF  33                 	db	51	;'3'
  9830  00F2F0  66                 	db	102	;'f'
  9831  00F2F1  20                 	db	32
  9832  00F2F2  56                 	db	86	;'V'
  9833  00F2F3  6F                 	db	111	;'o'
  9834  00F2F4  6C                 	db	108	;'l'
  9835  00F2F5  74                 	db	116	;'t'
  9836  00F2F6  73                 	db	115	;'s'
  9837  00F2F7  0A                 	db	10
  9838  00F2F8  0D                 	db	13
  9839  00F2F9  00                 	db	0
  9840  00F2FA                     STR_116:
  9841  00F2FA  4F                 	db	79	;'O'
  9842  00F2FB  75                 	db	117	;'u'
  9843  00F2FC  74                 	db	116	;'t'
  9844  00F2FD  70                 	db	112	;'p'
  9845  00F2FE  75                 	db	117	;'u'
  9846  00F2FF  74                 	db	116	;'t'
  9847  00F300  20                 	db	32
  9848  00F301  70                 	db	112	;'p'
  9849  00F302  6F                 	db	111	;'o'
  9850  00F303  77                 	db	119	;'w'
  9851  00F304  65                 	db	101	;'e'
  9852  00F305  72                 	db	114	;'r'
  9853  00F306  20                 	db	32
  9854  00F307  63                 	db	99	;'c'
  9855  00F308  61                 	db	97	;'a'
  9856  00F309  6C                 	db	108	;'l'
  9857  00F30A  63                 	db	99	;'c'
  9858  00F30B  75                 	db	117	;'u'
  9859  00F30C  6C                 	db	108	;'l'
  9860  00F30D  61                 	db	97	;'a'
  9861  00F30E  74                 	db	116	;'t'
  9862  00F30F  65                 	db	101	;'e'
  9863  00F310  64                 	db	100	;'d'
  9864  00F311  20                 	db	32
  9865  00F312  61                 	db	97	;'a'
  9866  00F313  73                 	db	115	;'s'
  9867  00F314  20                 	db	32
  9868  00F315  25                 	db	37
  9869  00F316  2E                 	db	46
  9870  00F317  33                 	db	51	;'3'
  9871  00F318  66                 	db	102	;'f'
  9872  00F319  20                 	db	32
  9873  00F31A  57                 	db	87	;'W'
  9874  00F31B  61                 	db	97	;'a'
  9875  00F31C  74                 	db	116	;'t'
  9876  00F31D  74                 	db	116	;'t'
  9877  00F31E  73                 	db	115	;'s'
  9878  00F31F  20                 	db	32
  9879  00F320  66                 	db	102	;'f'
  9880  00F321  72                 	db	114	;'r'
  9881  00F322  6F                 	db	111	;'o'
  9882  00F323  6D                 	db	109	;'m'
  9883  00F324  20                 	db	32
  9884  00F325  52                 	db	82	;'R'
  9885  00F326  4D                 	db	77	;'M'
  9886  00F327  53                 	db	83	;'S'
  9887  00F328  20                 	db	32
  9888  00F329  76                 	db	118	;'v'
  9889  00F32A  61                 	db	97	;'a'
  9890  00F32B  6C                 	db	108	;'l'
  9891  00F32C  75                 	db	117	;'u'
  9892  00F32D  65                 	db	101	;'e'
  9893  00F32E  73                 	db	115	;'s'
  9894  00F32F  0A                 	db	10
  9895  00F330  0D                 	db	13
  9896  00F331  00                 	db	0
  9897  00F332                     STR_178:
  9898  00F332  48                 	db	72	;'H'
  9899  00F333  65                 	db	101	;'e'
  9900  00F334  6C                 	db	108	;'l'
  9901  00F335  70                 	db	112	;'p'
  9902  00F336  20                 	db	32
  9903  00F337  6D                 	db	109	;'m'
  9904  00F338  65                 	db	101	;'e'
  9905  00F339  73                 	db	115	;'s'
  9906  00F33A  73                 	db	115	;'s'
  9907  00F33B  61                 	db	97	;'a'
  9908  00F33C  67                 	db	103	;'g'
  9909  00F33D  65                 	db	101	;'e'
  9910  00F33E  73                 	db	115	;'s'
  9911  00F33F  20                 	db	32
  9912  00F340  61                 	db	97	;'a'
  9913  00F341  6E                 	db	110	;'n'
  9914  00F342  64                 	db	100	;'d'
  9915  00F343  20                 	db	32
  9916  00F344  6E                 	db	110	;'n'
  9917  00F345  65                 	db	101	;'e'
  9918  00F346  75                 	db	117	;'u'
  9919  00F347  74                 	db	116	;'t'
  9920  00F348  72                 	db	114	;'r'
  9921  00F349  61                 	db	97	;'a'
  9922  00F34A  6C                 	db	108	;'l'
  9923  00F34B  20                 	db	32
  9924  00F34C  72                 	db	114	;'r'
  9925  00F34D  65                 	db	101	;'e'
  9926  00F34E  73                 	db	115	;'s'
  9927  00F34F  70                 	db	112	;'p'
  9928  00F350  6F                 	db	111	;'o'
  9929  00F351  6E                 	db	110	;'n'
  9930  00F352  73                 	db	115	;'s'
  9931  00F353  65                 	db	101	;'e'
  9932  00F354  73                 	db	115	;'s'
  9933  00F355  20                 	db	32
  9934  00F356  61                 	db	97	;'a'
  9935  00F357  70                 	db	112	;'p'
  9936  00F358  70                 	db	112	;'p'
  9937  00F359  65                 	db	101	;'e'
  9938  00F35A  61                 	db	97	;'a'
  9939  00F35B  72                 	db	114	;'r'
  9940  00F35C  20                 	db	32
  9941  00F35D  69                 	db	105	;'i'
  9942  00F35E  6E                 	db	110	;'n'
  9943  00F35F  20                 	db	32
  9944  00F360  79                 	db	121	;'y'
  9945  00F361  65                 	db	101	;'e'
  9946  00F362  6C                 	db	108	;'l'
  9947  00F363  6C                 	db	108	;'l'
  9948  00F364  6F                 	db	111	;'o'
  9949  00F365  77                 	db	119	;'w'
  9950  00F366  0A                 	db	10
  9951  00F367  0D                 	db	13
  9952  00F368  00                 	db	0
  9953  00F369                     STR_165:
  9954  00F369  4D                 	db	77	;'M'
  9955  00F36A  61                 	db	97	;'a'
  9956  00F36B  78                 	db	120	;'x'
  9957  00F36C  69                 	db	105	;'i'
  9958  00F36D  6D                 	db	109	;'m'
  9959  00F36E  75                 	db	117	;'u'
  9960  00F36F  6D                 	db	109	;'m'
  9961  00F370  20                 	db	32
  9962  00F371  72                 	db	114	;'r'
  9963  00F372  65                 	db	101	;'e'
  9964  00F373  63                 	db	99	;'c'
  9965  00F374  6F                 	db	111	;'o'
  9966  00F375  72                 	db	114	;'r'
  9967  00F376  64                 	db	100	;'d'
  9968  00F377  65                 	db	101	;'e'
  9969  00F378  64                 	db	100	;'d'
  9970  00F379  20                 	db	32
  9971  00F37A  76                 	db	118	;'v'
  9972  00F37B  61                 	db	97	;'a'
  9973  00F37C  6C                 	db	108	;'l'
  9974  00F37D  75                 	db	117	;'u'
  9975  00F37E  65                 	db	101	;'e'
  9976  00F37F  73                 	db	115	;'s'
  9977  00F380  20                 	db	32
  9978  00F381  65                 	db	101	;'e'
  9979  00F382  72                 	db	114	;'r'
  9980  00F383  61                 	db	97	;'a'
  9981  00F384  73                 	db	115	;'s'
  9982  00F385  65                 	db	101	;'e'
  9983  00F386  64                 	db	100	;'d'
  9984  00F387  20                 	db	32
  9985  00F388  66                 	db	102	;'f'
  9986  00F389  72                 	db	114	;'r'
  9987  00F38A  6F                 	db	111	;'o'
  9988  00F38B  6D                 	db	109	;'m'
  9989  00F38C  20                 	db	32
  9990  00F38D  53                 	db	83	;'S'
  9991  00F38E  52                 	db	82	;'R'
  9992  00F38F  41                 	db	65	;'A'
  9993  00F390  4D                 	db	77	;'M'
  9994  00F391  20                 	db	32
  9995  00F392  61                 	db	97	;'a'
  9996  00F393  6E                 	db	110	;'n'
  9997  00F394  64                 	db	100	;'d'
  9998  00F395  20                 	db	32
  9999  00F396  45                 	db	69	;'E'
 10000  00F397  45                 	db	69	;'E'
 10001  00F398  50                 	db	80	;'P'
 10002  00F399  52                 	db	82	;'R'
 10003  00F39A  4F                 	db	79	;'O'
 10004  00F39B  4D                 	db	77	;'M'
 10005  00F39C  0A                 	db	10
 10006  00F39D  0D                 	db	13
 10007  00F39E  00                 	db	0
 10008  00F39F                     STR_76:
 10009  00F39F  20                 	db	32
 10010  00F3A0  20                 	db	32
 10011  00F3A1  20                 	db	32
 10012  00F3A2  20                 	db	32
 10013  00F3A3  55                 	db	85	;'U'
 10014  00F3A4  73                 	db	115	;'s'
 10015  00F3A5  65                 	db	101	;'e'
 10016  00F3A6  72                 	db	114	;'r'
 10017  00F3A7  20                 	db	32
 10018  00F3A8  49                 	db	73	;'I'
 10019  00F3A9  44                 	db	68	;'D'
 10020  00F3AA  20                 	db	32
 10021  00F3AB  57                 	db	87	;'W'
 10022  00F3AC  6F                 	db	111	;'o'
 10023  00F3AD  72                 	db	114	;'r'
 10024  00F3AE  64                 	db	100	;'d'
 10025  00F3AF  20                 	db	32
 10026  00F3B0  25                 	db	37
 10027  00F3B1  64                 	db	100	;'d'
 10028  00F3B2  20                 	db	32
 10029  00F3B3  28                 	db	40
 10030  00F3B4  46                 	db	70	;'F'
 10031  00F3B5  6C                 	db	108	;'l'
 10032  00F3B6  61                 	db	97	;'a'
 10033  00F3B7  73                 	db	115	;'s'
 10034  00F3B8  68                 	db	104	;'h'
 10035  00F3B9  20                 	db	32
 10036  00F3BA  61                 	db	97	;'a'
 10037  00F3BB  64                 	db	100	;'d'
 10038  00F3BC  64                 	db	100	;'d'
 10039  00F3BD  72                 	db	114	;'r'
 10040  00F3BE  65                 	db	101	;'e'
 10041  00F3BF  73                 	db	115	;'s'
 10042  00F3C0  73                 	db	115	;'s'
 10043  00F3C1  20                 	db	32
 10044  00F3C2  30                 	db	48	;'0'
 10045  00F3C3  78                 	db	120	;'x'
 10046  00F3C4  32                 	db	50	;'2'
 10047  00F3C5  30                 	db	48	;'0'
 10048  00F3C6  30                 	db	48	;'0'
 10049  00F3C7  30                 	db	48	;'0'
 10050  00F3C8  30                 	db	48	;'0'
 10051  00F3C9  25                 	db	37
 10052  00F3CA  58                 	db	88	;'X'
 10053  00F3CB  29                 	db	41
 10054  00F3CC  3A                 	db	58	;':'
 10055  00F3CD  20                 	db	32
 10056  00F3CE  30                 	db	48	;'0'
 10057  00F3CF  78                 	db	120	;'x'
 10058  00F3D0  25                 	db	37
 10059  00F3D1  58                 	db	88	;'X'
 10060  00F3D2  0A                 	db	10
 10061  00F3D3  0D                 	db	13
 10062  00F3D4  00                 	db	0
 10063  00F3D5                     STR_163:
 10064  00F3D5  4D                 	db	77	;'M'
 10065  00F3D6  61                 	db	97	;'a'
 10066  00F3D7  78                 	db	120	;'x'
 10067  00F3D8  69                 	db	105	;'i'
 10068  00F3D9  6D                 	db	109	;'m'
 10069  00F3DA  75                 	db	117	;'u'
 10070  00F3DB  6D                 	db	109	;'m'
 10071  00F3DC  20                 	db	32
 10072  00F3DD  72                 	db	114	;'r'
 10073  00F3DE  65                 	db	101	;'e'
 10074  00F3DF  63                 	db	99	;'c'
 10075  00F3E0  6F                 	db	111	;'o'
 10076  00F3E1  72                 	db	114	;'r'
 10077  00F3E2  64                 	db	100	;'d'
 10078  00F3E3  65                 	db	101	;'e'
 10079  00F3E4  64                 	db	100	;'d'
 10080  00F3E5  20                 	db	32
 10081  00F3E6  46                 	db	70	;'F'
 10082  00F3E7  56                 	db	86	;'V'
 10083  00F3E8  52                 	db	82	;'R'
 10084  00F3E9  20                 	db	32
 10085  00F3EA  62                 	db	98	;'b'
 10086  00F3EB  75                 	db	117	;'u'
 10087  00F3EC  66                 	db	102	;'f'
 10088  00F3ED  66                 	db	102	;'f'
 10089  00F3EE  65                 	db	101	;'e'
 10090  00F3EF  72                 	db	114	;'r'
 10091  00F3F0  20                 	db	32
 10092  00F3F1  31                 	db	49	;'1'
 10093  00F3F2  20                 	db	32
 10094  00F3F3  76                 	db	118	;'v'
 10095  00F3F4  6F                 	db	111	;'o'
 10096  00F3F5  6C                 	db	108	;'l'
 10097  00F3F6  74                 	db	116	;'t'
 10098  00F3F7  61                 	db	97	;'a'
 10099  00F3F8  67                 	db	103	;'g'
 10100  00F3F9  65                 	db	101	;'e'
 10101  00F3FA  20                 	db	32
 10102  00F3FB  69                 	db	105	;'i'
 10103  00F3FC  73                 	db	115	;'s'
 10104  00F3FD  20                 	db	32
 10105  00F3FE  25                 	db	37
 10106  00F3FF  2E                 	db	46
 10107  00F400  33                 	db	51	;'3'
 10108  00F401  66                 	db	102	;'f'
 10109  00F402  20                 	db	32
 10110  00F403  56                 	db	86	;'V'
 10111  00F404  6F                 	db	111	;'o'
 10112  00F405  6C                 	db	108	;'l'
 10113  00F406  74                 	db	116	;'t'
 10114  00F407  73                 	db	115	;'s'
 10115  00F408  0A                 	db	10
 10116  00F409  0D                 	db	13
 10117  00F40A  00                 	db	0
 10118  00F40B                     STR_125:
 10119  00F40B  49                 	db	73	;'I'
 10120  00F40C  66                 	db	102	;'f'
 10121  00F40D  20                 	db	32
 10122  00F40E  79                 	db	121	;'y'
 10123  00F40F  65                 	db	101	;'e'
 10124  00F410  73                 	db	115	;'s'
 10125  00F411  2C                 	db	44
 10126  00F412  20                 	db	32
 10127  00F413  72                 	db	114	;'r'
 10128  00F414  65                 	db	101	;'e'
 10129  00F415  70                 	db	112	;'p'
 10130  00F416  6C                 	db	108	;'l'
 10131  00F417  79                 	db	121	;'y'
 10132  00F418  20                 	db	32
 10133  00F419  27                 	db	39
 10134  00F41A  45                 	db	69	;'E'
 10135  00F41B  6E                 	db	110	;'n'
 10136  00F41C  61                 	db	97	;'a'
 10137  00F41D  62                 	db	98	;'b'
 10138  00F41E  6C                 	db	108	;'l'
 10139  00F41F  65                 	db	101	;'e'
 10140  00F420  20                 	db	32
 10141  00F421  44                 	db	68	;'D'
 10142  00F422  69                 	db	105	;'i'
 10143  00F423  6D                 	db	109	;'m'
 10144  00F424  6D                 	db	109	;'m'
 10145  00F425  69                 	db	105	;'i'
 10146  00F426  6E                 	db	110	;'n'
 10147  00F427  67                 	db	103	;'g'
 10148  00F428  20                 	db	32
 10149  00F429  59                 	db	89	;'Y'
 10150  00F42A  27                 	db	39
 10151  00F42B  20                 	db	32
 10152  00F42C  6F                 	db	111	;'o'
 10153  00F42D  6E                 	db	110	;'n'
 10154  00F42E  20                 	db	32
 10155  00F42F  74                 	db	116	;'t'
 10156  00F430  68                 	db	104	;'h'
 10157  00F431  65                 	db	101	;'e'
 10158  00F432  20                 	db	32
 10159  00F433  6E                 	db	110	;'n'
 10160  00F434  65                 	db	101	;'e'
 10161  00F435  78                 	db	120	;'x'
 10162  00F436  74                 	db	116	;'t'
 10163  00F437  20                 	db	32
 10164  00F438  6C                 	db	108	;'l'
 10165  00F439  69                 	db	105	;'i'
 10166  00F43A  6E                 	db	110	;'n'
 10167  00F43B  65                 	db	101	;'e'
 10168  00F43C  3A                 	db	58	;':'
 10169  00F43D  0A                 	db	10
 10170  00F43E  0D                 	db	13
 10171  00F43F  00                 	db	0
 10172  00F440                     STR_137:
 10173  00F440  4C                 	db	76	;'L'
 10174  00F441  6F                 	db	111	;'o'
 10175  00F442  61                 	db	97	;'a'
 10176  00F443  64                 	db	100	;'d'
 10177  00F444  20                 	db	32
 10178  00F445  69                 	db	105	;'i'
 10179  00F446  73                 	db	115	;'s'
 10180  00F447  20                 	db	32
 10181  00F448  63                 	db	99	;'c'
 10182  00F449  75                 	db	117	;'u'
 10183  00F44A  72                 	db	114	;'r'
 10184  00F44B  72                 	db	114	;'r'
 10185  00F44C  65                 	db	101	;'e'
 10186  00F44D  6E                 	db	110	;'n'
 10187  00F44E  74                 	db	116	;'t'
 10188  00F44F  6C                 	db	108	;'l'
 10189  00F450  79                 	db	121	;'y'
 10190  00F451  20                 	db	32
 10191  00F452  65                 	db	101	;'e'
 10192  00F453  6E                 	db	110	;'n'
 10193  00F454  61                 	db	97	;'a'
 10194  00F455  62                 	db	98	;'b'
 10195  00F456  6C                 	db	108	;'l'
 10196  00F457  65                 	db	101	;'e'
 10197  00F458  64                 	db	100	;'d'
 10198  00F459  2C                 	db	44
 10199  00F45A  20                 	db	32
 10200  00F45B  62                 	db	98	;'b'
 10201  00F45C  75                 	db	117	;'u'
 10202  00F45D  74                 	db	116	;'t'
 10203  00F45E  20                 	db	32
 10204  00F45F  64                 	db	100	;'d'
 10205  00F460  69                 	db	105	;'i'
 10206  00F461  6D                 	db	109	;'m'
 10207  00F462  6D                 	db	109	;'m'
 10208  00F463  69                 	db	105	;'i'
 10209  00F464  6E                 	db	110	;'n'
 10210  00F465  67                 	db	103	;'g'
 10211  00F466  20                 	db	32
 10212  00F467  69                 	db	105	;'i'
 10213  00F468  73                 	db	115	;'s'
 10214  00F469  20                 	db	32
 10215  00F46A  64                 	db	100	;'d'
 10216  00F46B  69                 	db	105	;'i'
 10217  00F46C  73                 	db	115	;'s'
 10218  00F46D  61                 	db	97	;'a'
 10219  00F46E  62                 	db	98	;'b'
 10220  00F46F  6C                 	db	108	;'l'
 10221  00F470  65                 	db	101	;'e'
 10222  00F471  64                 	db	100	;'d'
 10223  00F472  0A                 	db	10
 10224  00F473  0D                 	db	13
 10225  00F474  00                 	db	0
 10226  00F475                     STR_151:
 10227  00F475  4C                 	db	76	;'L'
 10228  00F476  6F                 	db	111	;'o'
 10229  00F477  61                 	db	97	;'a'
 10230  00F478  64                 	db	100	;'d'
 10231  00F479  20                 	db	32
 10232  00F47A  6F                 	db	111	;'o'
 10233  00F47B  6E                 	db	110	;'n'
 10234  00F47C  20                 	db	32
 10235  00F47D  74                 	db	116	;'t'
 10236  00F47E  69                 	db	105	;'i'
 10237  00F47F  6D                 	db	109	;'m'
 10238  00F480  65                 	db	101	;'e'
 10239  00F481  20                 	db	32
 10240  00F482  73                 	db	115	;'s'
 10241  00F483  69                 	db	105	;'i'
 10242  00F484  6E                 	db	110	;'n'
 10243  00F485  63                 	db	99	;'c'
 10244  00F486  65                 	db	101	;'e'
 10245  00F487  20                 	db	32
 10246  00F488  6C                 	db	108	;'l'
 10247  00F489  61                 	db	97	;'a'
 10248  00F48A  73                 	db	115	;'s'
 10249  00F48B  74                 	db	116	;'t'
 10250  00F48C  20                 	db	32
 10251  00F48D  64                 	db	100	;'d'
 10252  00F48E  65                 	db	101	;'e'
 10253  00F48F  76                 	db	118	;'v'
 10254  00F490  69                 	db	105	;'i'
 10255  00F491  63                 	db	99	;'c'
 10256  00F492  65                 	db	101	;'e'
 10257  00F493  20                 	db	32
 10258  00F494  72                 	db	114	;'r'
 10259  00F495  65                 	db	101	;'e'
 10260  00F496  73                 	db	115	;'s'
 10261  00F497  65                 	db	101	;'e'
 10262  00F498  74                 	db	116	;'t'
 10263  00F499  20                 	db	32
 10264  00F49A  69                 	db	105	;'i'
 10265  00F49B  73                 	db	115	;'s'
 10266  00F49C  20                 	db	32
 10267  00F49D  25                 	db	37
 10268  00F49E  64                 	db	100	;'d'
 10269  00F49F  20                 	db	32
 10270  00F4A0  73                 	db	115	;'s'
 10271  00F4A1  65                 	db	101	;'e'
 10272  00F4A2  63                 	db	99	;'c'
 10273  00F4A3  6F                 	db	111	;'o'
 10274  00F4A4  6E                 	db	110	;'n'
 10275  00F4A5  64                 	db	100	;'d'
 10276  00F4A6  73                 	db	115	;'s'
 10277  00F4A7  0A                 	db	10
 10278  00F4A8  0D                 	db	13
 10279  00F4A9  00                 	db	0
 10280  00F4AA                     STR_124:
 10281  00F4AA  41                 	db	65	;'A'
 10282  00F4AB  72                 	db	114	;'r'
 10283  00F4AC  65                 	db	101	;'e'
 10284  00F4AD  20                 	db	32
 10285  00F4AE  79                 	db	121	;'y'
 10286  00F4AF  6F                 	db	111	;'o'
 10287  00F4B0  75                 	db	117	;'u'
 10288  00F4B1  20                 	db	32
 10289  00F4B2  73                 	db	115	;'s'
 10290  00F4B3  75                 	db	117	;'u'
 10291  00F4B4  72                 	db	114	;'r'
 10292  00F4B5  65                 	db	101	;'e'
 10293  00F4B6  20                 	db	32
 10294  00F4B7  79                 	db	121	;'y'
 10295  00F4B8  6F                 	db	111	;'o'
 10296  00F4B9  75                 	db	117	;'u'
 10297  00F4BA  27                 	db	39
 10298  00F4BB  64                 	db	100	;'d'
 10299  00F4BC  20                 	db	32
 10300  00F4BD  6C                 	db	108	;'l'
 10301  00F4BE  69                 	db	105	;'i'
 10302  00F4BF  6B                 	db	107	;'k'
 10303  00F4C0  65                 	db	101	;'e'
 10304  00F4C1  20                 	db	32
 10305  00F4C2  74                 	db	116	;'t'
 10306  00F4C3  6F                 	db	111	;'o'
 10307  00F4C4  20                 	db	32
 10308  00F4C5  65                 	db	101	;'e'
 10309  00F4C6  6E                 	db	110	;'n'
 10310  00F4C7  61                 	db	97	;'a'
 10311  00F4C8  62                 	db	98	;'b'
 10312  00F4C9  6C                 	db	108	;'l'
 10313  00F4CA  65                 	db	101	;'e'
 10314  00F4CB  20                 	db	32
 10315  00F4CC  6F                 	db	111	;'o'
 10316  00F4CD  75                 	db	117	;'u'
 10317  00F4CE  74                 	db	116	;'t'
 10318  00F4CF  70                 	db	112	;'p'
 10319  00F4D0  75                 	db	117	;'u'
 10320  00F4D1  74                 	db	116	;'t'
 10321  00F4D2  20                 	db	32
 10322  00F4D3  64                 	db	100	;'d'
 10323  00F4D4  69                 	db	105	;'i'
 10324  00F4D5  6D                 	db	109	;'m'
 10325  00F4D6  6D                 	db	109	;'m'
 10326  00F4D7  69                 	db	105	;'i'
 10327  00F4D8  6E                 	db	110	;'n'
 10328  00F4D9  67                 	db	103	;'g'
 10329  00F4DA  3F                 	db	63	;'?'
 10330  00F4DB  0A                 	db	10
 10331  00F4DC  0D                 	db	13
 10332  00F4DD  00                 	db	0
 10333  00F4DE                     STR_65:
 10334  00F4DE  54                 	db	84	;'T'
 10335  00F4DF  68                 	db	104	;'h'
 10336  00F4E0  65                 	db	101	;'e'
 10337  00F4E1  20                 	db	32
 10338  00F4E2  63                 	db	99	;'c'
 10339  00F4E3  61                 	db	97	;'a'
 10340  00F4E4  75                 	db	117	;'u'
 10341  00F4E5  73                 	db	115	;'s'
 10342  00F4E6  65                 	db	101	;'e'
 10343  00F4E7  20                 	db	32
 10344  00F4E8  6F                 	db	111	;'o'
 10345  00F4E9  66                 	db	102	;'f'
 10346  00F4EA  20                 	db	32
 10347  00F4EB  74                 	db	116	;'t'
 10348  00F4EC  68                 	db	104	;'h'
 10349  00F4ED  65                 	db	101	;'e'
 10350  00F4EE  20                 	db	32
 10351  00F4EF  6D                 	db	109	;'m'
 10352  00F4F0  6F                 	db	111	;'o'
 10353  00F4F1  73                 	db	115	;'s'
 10354  00F4F2  74                 	db	116	;'t'
 10355  00F4F3  20                 	db	32
 10356  00F4F4  72                 	db	114	;'r'
 10357  00F4F5  65                 	db	101	;'e'
 10358  00F4F6  63                 	db	99	;'c'
 10359  00F4F7  65                 	db	101	;'e'
 10360  00F4F8  6E                 	db	110	;'n'
 10361  00F4F9  74                 	db	116	;'t'
 10362  00F4FA  20                 	db	32
 10363  00F4FB  64                 	db	100	;'d'
 10364  00F4FC  65                 	db	101	;'e'
 10365  00F4FD  76                 	db	118	;'v'
 10366  00F4FE  69                 	db	105	;'i'
 10367  00F4FF  63                 	db	99	;'c'
 10368  00F500  65                 	db	101	;'e'
 10369  00F501  20                 	db	32
 10370  00F502  72                 	db	114	;'r'
 10371  00F503  65                 	db	101	;'e'
 10372  00F504  73                 	db	115	;'s'
 10373  00F505  65                 	db	101	;'e'
 10374  00F506  74                 	db	116	;'t'
 10375  00F507  20                 	db	32
 10376  00F508  77                 	db	119	;'w'
 10377  00F509  61                 	db	97	;'a'
 10378  00F50A  73                 	db	115	;'s'
 10379  00F50B  3A                 	db	58	;':'
 10380  00F50C  20                 	db	32
 10381  00F50D  25                 	db	37
 10382  00F50E  73                 	db	115	;'s'
 10383  00F50F  0A                 	db	10
 10384  00F510  0D                 	db	13
 10385  00F511  00                 	db	0
 10386  00F512                     STR_157:
 10387  00F512  4D                 	db	77	;'M'
 10388  00F513  61                 	db	97	;'a'
 10389  00F514  78                 	db	120	;'x'
 10390  00F515  69                 	db	105	;'i'
 10391  00F516  6D                 	db	109	;'m'
 10392  00F517  75                 	db	117	;'u'
 10393  00F518  6D                 	db	109	;'m'
 10394  00F519  20                 	db	32
 10395  00F51A  72                 	db	114	;'r'
 10396  00F51B  65                 	db	101	;'e'
 10397  00F51C  63                 	db	99	;'c'
 10398  00F51D  6F                 	db	111	;'o'
 10399  00F51E  72                 	db	114	;'r'
 10400  00F51F  64                 	db	100	;'d'
 10401  00F520  65                 	db	101	;'e'
 10402  00F521  64                 	db	100	;'d'
 10403  00F522  20                 	db	32
 10404  00F523  2B                 	db	43
 10405  00F524  33                 	db	51	;'3'
 10406  00F525  2E                 	db	46
 10407  00F526  33                 	db	51	;'3'
 10408  00F527  56                 	db	86	;'V'
 10409  00F528  20                 	db	32
 10410  00F529  72                 	db	114	;'r'
 10411  00F52A  61                 	db	97	;'a'
 10412  00F52B  69                 	db	105	;'i'
 10413  00F52C  6C                 	db	108	;'l'
 10414  00F52D  20                 	db	32
 10415  00F52E  76                 	db	118	;'v'
 10416  00F52F  6F                 	db	111	;'o'
 10417  00F530  6C                 	db	108	;'l'
 10418  00F531  74                 	db	116	;'t'
 10419  00F532  61                 	db	97	;'a'
 10420  00F533  67                 	db	103	;'g'
 10421  00F534  65                 	db	101	;'e'
 10422  00F535  20                 	db	32
 10423  00F536  69                 	db	105	;'i'
 10424  00F537  73                 	db	115	;'s'
 10425  00F538  20                 	db	32
 10426  00F539  25                 	db	37
 10427  00F53A  2E                 	db	46
 10428  00F53B  33                 	db	51	;'3'
 10429  00F53C  66                 	db	102	;'f'
 10430  00F53D  20                 	db	32
 10431  00F53E  56                 	db	86	;'V'
 10432  00F53F  6F                 	db	111	;'o'
 10433  00F540  6C                 	db	108	;'l'
 10434  00F541  74                 	db	116	;'t'
 10435  00F542  73                 	db	115	;'s'
 10436  00F543  0A                 	db	10
 10437  00F544  0D                 	db	13
 10438  00F545  00                 	db	0
 10439  00F546                     STR_153:
 10440  00F546  4D                 	db	77	;'M'
 10441  00F547  61                 	db	97	;'a'
 10442  00F548  78                 	db	120	;'x'
 10443  00F549  69                 	db	105	;'i'
 10444  00F54A  6D                 	db	109	;'m'
 10445  00F54B  75                 	db	117	;'u'
 10446  00F54C  6D                 	db	109	;'m'
 10447  00F54D  20                 	db	32
 10448  00F54E  72                 	db	114	;'r'
 10449  00F54F  65                 	db	101	;'e'
 10450  00F550  63                 	db	99	;'c'
 10451  00F551  6F                 	db	111	;'o'
 10452  00F552  72                 	db	114	;'r'
 10453  00F553  64                 	db	100	;'d'
 10454  00F554  65                 	db	101	;'e'
 10455  00F555  64                 	db	100	;'d'
 10456  00F556  20                 	db	32
 10457  00F557  52                 	db	82	;'R'
 10458  00F558  4D                 	db	77	;'M'
 10459  00F559  53                 	db	83	;'S'
 10460  00F55A  20                 	db	32
 10461  00F55B  6F                 	db	111	;'o'
 10462  00F55C  75                 	db	117	;'u'
 10463  00F55D  74                 	db	116	;'t'
 10464  00F55E  70                 	db	112	;'p'
 10465  00F55F  75                 	db	117	;'u'
 10466  00F560  74                 	db	116	;'t'
 10467  00F561  20                 	db	32
 10468  00F562  63                 	db	99	;'c'
 10469  00F563  75                 	db	117	;'u'
 10470  00F564  72                 	db	114	;'r'
 10471  00F565  72                 	db	114	;'r'
 10472  00F566  65                 	db	101	;'e'
 10473  00F567  6E                 	db	110	;'n'
 10474  00F568  74                 	db	116	;'t'
 10475  00F569  20                 	db	32
 10476  00F56A  69                 	db	105	;'i'
 10477  00F56B  73                 	db	115	;'s'
 10478  00F56C  20                 	db	32
 10479  00F56D  25                 	db	37
 10480  00F56E  2E                 	db	46
 10481  00F56F  33                 	db	51	;'3'
 10482  00F570  66                 	db	102	;'f'
 10483  00F571  20                 	db	32
 10484  00F572  41                 	db	65	;'A'
 10485  00F573  72                 	db	114	;'r'
 10486  00F574  6D                 	db	109	;'m'
 10487  00F575  73                 	db	115	;'s'
 10488  00F576  0A                 	db	10
 10489  00F577  0D                 	db	13
 10490  00F578  00                 	db	0
 10491  00F579                     STR_159:
 10492  00F579  4D                 	db	77	;'M'
 10493  00F57A  61                 	db	97	;'a'
 10494  00F57B  78                 	db	120	;'x'
 10495  00F57C  69                 	db	105	;'i'
 10496  00F57D  6D                 	db	109	;'m'
 10497  00F57E  75                 	db	117	;'u'
 10498  00F57F  6D                 	db	109	;'m'
 10499  00F580  20                 	db	32
 10500  00F581  72                 	db	114	;'r'
 10501  00F582  65                 	db	101	;'e'
 10502  00F583  63                 	db	99	;'c'
 10503  00F584  6F                 	db	111	;'o'
 10504  00F585  72                 	db	114	;'r'
 10505  00F586  64                 	db	100	;'d'
 10506  00F587  65                 	db	101	;'e'
 10507  00F588  64                 	db	100	;'d'
 10508  00F589  20                 	db	32
 10509  00F58A  2B                 	db	43
 10510  00F58B  31                 	db	49	;'1'
 10511  00F58C  32                 	db	50	;'2'
 10512  00F58D  56                 	db	86	;'V'
 10513  00F58E  20                 	db	32
 10514  00F58F  72                 	db	114	;'r'
 10515  00F590  61                 	db	97	;'a'
 10516  00F591  69                 	db	105	;'i'
 10517  00F592  6C                 	db	108	;'l'
 10518  00F593  20                 	db	32
 10519  00F594  76                 	db	118	;'v'
 10520  00F595  6F                 	db	111	;'o'
 10521  00F596  6C                 	db	108	;'l'
 10522  00F597  74                 	db	116	;'t'
 10523  00F598  61                 	db	97	;'a'
 10524  00F599  67                 	db	103	;'g'
 10525  00F59A  65                 	db	101	;'e'
 10526  00F59B  20                 	db	32
 10527  00F59C  69                 	db	105	;'i'
 10528  00F59D  73                 	db	115	;'s'
 10529  00F59E  20                 	db	32
 10530  00F59F  25                 	db	37
 10531  00F5A0  2E                 	db	46
 10532  00F5A1  33                 	db	51	;'3'
 10533  00F5A2  66                 	db	102	;'f'
 10534  00F5A3  20                 	db	32
 10535  00F5A4  56                 	db	86	;'V'
 10536  00F5A5  6F                 	db	111	;'o'
 10537  00F5A6  6C                 	db	108	;'l'
 10538  00F5A7  74                 	db	116	;'t'
 10539  00F5A8  73                 	db	115	;'s'
 10540  00F5A9  0A                 	db	10
 10541  00F5AA  0D                 	db	13
 10542  00F5AB  00                 	db	0
 10543  00F5AC                     STR_87:
 10544  00F5AC  43                 	db	67	;'C'
 10545  00F5AD  61                 	db	97	;'a'
 10546  00F5AE  6C                 	db	108	;'l'
 10547  00F5AF  6C                 	db	108	;'l'
 10548  00F5B0  20                 	db	32
 10549  00F5B1  27                 	db	39
 10550  00F5B2  43                 	db	67	;'C'
 10551  00F5B3  6C                 	db	108	;'l'
 10552  00F5B4  65                 	db	101	;'e'
 10553  00F5B5  61                 	db	97	;'a'
 10554  00F5B6  72                 	db	114	;'r'
 10555  00F5B7  20                 	db	32
 10556  00F5B8  41                 	db	65	;'A'
 10557  00F5B9  44                 	db	68	;'D'
 10558  00F5BA  43                 	db	67	;'C'
 10559  00F5BB  20                 	db	32
 10560  00F5BC  45                 	db	69	;'E'
 10561  00F5BD  72                 	db	114	;'r'
 10562  00F5BE  72                 	db	114	;'r'
 10563  00F5BF  6F                 	db	111	;'o'
 10564  00F5C0  72                 	db	114	;'r'
 10565  00F5C1  73                 	db	115	;'s'
 10566  00F5C2  27                 	db	39
 10567  00F5C3  20                 	db	32
 10568  00F5C4  74                 	db	116	;'t'
 10569  00F5C5  6F                 	db	111	;'o'
 10570  00F5C6  20                 	db	32
 10571  00F5C7  63                 	db	99	;'c'
 10572  00F5C8  6C                 	db	108	;'l'
 10573  00F5C9  65                 	db	101	;'e'
 10574  00F5CA  61                 	db	97	;'a'
 10575  00F5CB  72                 	db	114	;'r'
 10576  00F5CC  20                 	db	32
 10577  00F5CD  41                 	db	65	;'A'
 10578  00F5CE  44                 	db	68	;'D'
 10579  00F5CF  43                 	db	67	;'C'
 10580  00F5D0  20                 	db	32
 10581  00F5D1  65                 	db	101	;'e'
 10582  00F5D2  72                 	db	114	;'r'
 10583  00F5D3  72                 	db	114	;'r'
 10584  00F5D4  6F                 	db	111	;'o'
 10585  00F5D5  72                 	db	114	;'r'
 10586  00F5D6  28                 	db	40
 10587  00F5D7  73                 	db	115	;'s'
 10588  00F5D8  29                 	db	41
 10589  00F5D9  0A                 	db	10
 10590  00F5DA  0D                 	db	13
 10591  00F5DB  00                 	db	0
 10592  00F5DC                     STR_69:
 10593  00F5DC  4D                 	db	77	;'M'
 10594  00F5DD  61                 	db	97	;'a'
 10595  00F5DE  72                 	db	114	;'r'
 10596  00F5DF  71                 	db	113	;'q'
 10597  00F5E0  75                 	db	117	;'u'
 10598  00F5E1  65                 	db	101	;'e'
 10599  00F5E2  74                 	db	116	;'t'
 10600  00F5E3  74                 	db	116	;'t'
 10601  00F5E4  65                 	db	101	;'e'
 10602  00F5E5  20                 	db	32
 10603  00F5E6  55                 	db	85	;'U'
 10604  00F5E7  6E                 	db	110	;'n'
 10605  00F5E8  69                 	db	105	;'i'
 10606  00F5E9  76                 	db	118	;'v'
 10607  00F5EA  65                 	db	101	;'e'
 10608  00F5EB  72                 	db	114	;'r'
 10609  00F5EC  73                 	db	115	;'s'
 10610  00F5ED  69                 	db	105	;'i'
 10611  00F5EE  74                 	db	116	;'t'
 10612  00F5EF  79                 	db	121	;'y'
 10613  00F5F0  20                 	db	32
 10614  00F5F1  45                 	db	69	;'E'
 10615  00F5F2  4C                 	db	76	;'L'
 10616  00F5F3  45                 	db	69	;'E'
 10617  00F5F4  4E                 	db	78	;'N'
 10618  00F5F5  20                 	db	32
 10619  00F5F6  33                 	db	51	;'3'
 10620  00F5F7  30                 	db	48	;'0'
 10621  00F5F8  33                 	db	51	;'3'
 10622  00F5F9  35                 	db	53	;'5'
 10623  00F5FA  20                 	db	32
 10624  00F5FB  46                 	db	70	;'F'
 10625  00F5FC  69                 	db	105	;'i'
 10626  00F5FD  6E                 	db	110	;'n'
 10627  00F5FE  61                 	db	97	;'a'
 10628  00F5FF  6C                 	db	108	;'l'
 10629  00F600  20                 	db	32
 10630  00F601  50                 	db	80	;'P'
 10631  00F602  72                 	db	114	;'r'
 10632  00F603  6F                 	db	111	;'o'
 10633  00F604  6A                 	db	106	;'j'
 10634  00F605  65                 	db	101	;'e'
 10635  00F606  63                 	db	99	;'c'
 10636  00F607  74                 	db	116	;'t'
 10637  00F608  0A                 	db	10
 10638  00F609  0D                 	db	13
 10639  00F60A  00                 	db	0
 10640  00F60B                     STR_79:
 10641  00F60B  54                 	db	84	;'T'
 10642  00F60C  68                 	db	104	;'h'
 10643  00F60D  65                 	db	101	;'e'
 10644  00F60E  20                 	db	32
 10645  00F60F  66                 	db	102	;'f'
 10646  00F610  6F                 	db	111	;'o'
 10647  00F611  6C                 	db	108	;'l'
 10648  00F612  6C                 	db	108	;'l'
 10649  00F613  6F                 	db	111	;'o'
 10650  00F614  77                 	db	119	;'w'
 10651  00F615  69                 	db	105	;'i'
 10652  00F616  6E                 	db	110	;'n'
 10653  00F617  67                 	db	103	;'g'
 10654  00F618  20                 	db	32
 10655  00F619  63                 	db	99	;'c'
 10656  00F61A  68                 	db	104	;'h'
 10657  00F61B  61                 	db	97	;'a'
 10658  00F61C  6E                 	db	110	;'n'
 10659  00F61D  6E                 	db	110	;'n'
 10660  00F61E  65                 	db	101	;'e'
 10661  00F61F  6C                 	db	108	;'l'
 10662  00F620  73                 	db	115	;'s'
 10663  00F621  20                 	db	32
 10664  00F622  63                 	db	99	;'c'
 10665  00F623  61                 	db	97	;'a'
 10666  00F624  75                 	db	117	;'u'
 10667  00F625  73                 	db	115	;'s'
 10668  00F626  65                 	db	101	;'e'
 10669  00F627  64                 	db	100	;'d'
 10670  00F628  20                 	db	32
 10671  00F629  61                 	db	97	;'a'
 10672  00F62A  6E                 	db	110	;'n'
 10673  00F62B  20                 	db	32
 10674  00F62C  41                 	db	65	;'A'
 10675  00F62D  44                 	db	68	;'D'
 10676  00F62E  43                 	db	67	;'C'
 10677  00F62F  20                 	db	32
 10678  00F630  65                 	db	101	;'e'
 10679  00F631  72                 	db	114	;'r'
 10680  00F632  72                 	db	114	;'r'
 10681  00F633  6F                 	db	111	;'o'
 10682  00F634  72                 	db	114	;'r'
 10683  00F635  3A                 	db	58	;':'
 10684  00F636  0A                 	db	10
 10685  00F637  0D                 	db	13
 10686  00F638  00                 	db	0
 10687  00F639                     STR_181:
 10688  00F639  45                 	db	69	;'E'
 10689  00F63A  72                 	db	114	;'r'
 10690  00F63B  72                 	db	114	;'r'
 10691  00F63C  6F                 	db	111	;'o'
 10692  00F63D  72                 	db	114	;'r'
 10693  00F63E  73                 	db	115	;'s'
 10694  00F63F  20                 	db	32
 10695  00F640  61                 	db	97	;'a'
 10696  00F641  6E                 	db	110	;'n'
 10697  00F642  64                 	db	100	;'d'
 10698  00F643  20                 	db	32
 10699  00F644  6E                 	db	110	;'n'
 10700  00F645  65                 	db	101	;'e'
 10701  00F646  67                 	db	103	;'g'
 10702  00F647  61                 	db	97	;'a'
 10703  00F648  74                 	db	116	;'t'
 10704  00F649  69                 	db	105	;'i'
 10705  00F64A  76                 	db	118	;'v'
 10706  00F64B  65                 	db	101	;'e'
 10707  00F64C  20                 	db	32
 10708  00F64D  72                 	db	114	;'r'
 10709  00F64E  65                 	db	101	;'e'
 10710  00F64F  73                 	db	115	;'s'
 10711  00F650  70                 	db	112	;'p'
 10712  00F651  6F                 	db	111	;'o'
 10713  00F652  6E                 	db	110	;'n'
 10714  00F653  73                 	db	115	;'s'
 10715  00F654  65                 	db	101	;'e'
 10716  00F655  73                 	db	115	;'s'
 10717  00F656  20                 	db	32
 10718  00F657  61                 	db	97	;'a'
 10719  00F658  70                 	db	112	;'p'
 10720  00F659  70                 	db	112	;'p'
 10721  00F65A  65                 	db	101	;'e'
 10722  00F65B  61                 	db	97	;'a'
 10723  00F65C  72                 	db	114	;'r'
 10724  00F65D  20                 	db	32
 10725  00F65E  69                 	db	105	;'i'
 10726  00F65F  6E                 	db	110	;'n'
 10727  00F660  20                 	db	32
 10728  00F661  72                 	db	114	;'r'
 10729  00F662  65                 	db	101	;'e'
 10730  00F663  64                 	db	100	;'d'
 10731  00F664  0A                 	db	10
 10732  00F665  0D                 	db	13
 10733  00F666  00                 	db	0
 10734  00F667                     STR_144:
 10735  00F667  45                 	db	69	;'E'
 10736  00F668  6E                 	db	110	;'n'
 10737  00F669  74                 	db	116	;'t'
 10738  00F66A  65                 	db	101	;'e'
 10739  00F66B  72                 	db	114	;'r'
 10740  00F66C  20                 	db	32
 10741  00F66D  27                 	db	39
 10742  00F66E  48                 	db	72	;'H'
 10743  00F66F  65                 	db	101	;'e'
 10744  00F670  6C                 	db	108	;'l'
 10745  00F671  70                 	db	112	;'p'
 10746  00F672  27                 	db	39
 10747  00F673  20                 	db	32
 10748  00F674  66                 	db	102	;'f'
 10749  00F675  6F                 	db	111	;'o'
 10750  00F676  72                 	db	114	;'r'
 10751  00F677  20                 	db	32
 10752  00F678  6C                 	db	108	;'l'
 10753  00F679  69                 	db	105	;'i'
 10754  00F67A  73                 	db	115	;'s'
 10755  00F67B  74                 	db	116	;'t'
 10756  00F67C  20                 	db	32
 10757  00F67D  6F                 	db	111	;'o'
 10758  00F67E  66                 	db	102	;'f'
 10759  00F67F  20                 	db	32
 10760  00F680  61                 	db	97	;'a'
 10761  00F681  76                 	db	118	;'v'
 10762  00F682  61                 	db	97	;'a'
 10763  00F683  69                 	db	105	;'i'
 10764  00F684  6C                 	db	108	;'l'
 10765  00F685  61                 	db	97	;'a'
 10766  00F686  62                 	db	98	;'b'
 10767  00F687  6C                 	db	108	;'l'
 10768  00F688  65                 	db	101	;'e'
 10769  00F689  20                 	db	32
 10770  00F68A  63                 	db	99	;'c'
 10771  00F68B  6F                 	db	111	;'o'
 10772  00F68C  6D                 	db	109	;'m'
 10773  00F68D  6D                 	db	109	;'m'
 10774  00F68E  61                 	db	97	;'a'
 10775  00F68F  6E                 	db	110	;'n'
 10776  00F690  64                 	db	100	;'d'
 10777  00F691  73                 	db	115	;'s'
 10778  00F692  0A                 	db	10
 10779  00F693  0D                 	db	13
 10780  00F694  00                 	db	0
 10781  00F695                     STR_155:
 10782  00F695  4D                 	db	77	;'M'
 10783  00F696  61                 	db	97	;'a'
 10784  00F697  78                 	db	120	;'x'
 10785  00F698  69                 	db	105	;'i'
 10786  00F699  6D                 	db	109	;'m'
 10787  00F69A  75                 	db	117	;'u'
 10788  00F69B  6D                 	db	109	;'m'
 10789  00F69C  20                 	db	32
 10790  00F69D  72                 	db	114	;'r'
 10791  00F69E  65                 	db	101	;'e'
 10792  00F69F  63                 	db	99	;'c'
 10793  00F6A0  6F                 	db	111	;'o'
 10794  00F6A1  72                 	db	114	;'r'
 10795  00F6A2  64                 	db	100	;'d'
 10796  00F6A3  65                 	db	101	;'e'
 10797  00F6A4  64                 	db	100	;'d'
 10798  00F6A5  20                 	db	32
 10799  00F6A6  6F                 	db	111	;'o'
 10800  00F6A7  75                 	db	117	;'u'
 10801  00F6A8  74                 	db	116	;'t'
 10802  00F6A9  70                 	db	112	;'p'
 10803  00F6AA  75                 	db	117	;'u'
 10804  00F6AB  74                 	db	116	;'t'
 10805  00F6AC  20                 	db	32
 10806  00F6AD  70                 	db	112	;'p'
 10807  00F6AE  6F                 	db	111	;'o'
 10808  00F6AF  77                 	db	119	;'w'
 10809  00F6B0  65                 	db	101	;'e'
 10810  00F6B1  72                 	db	114	;'r'
 10811  00F6B2  20                 	db	32
 10812  00F6B3  69                 	db	105	;'i'
 10813  00F6B4  73                 	db	115	;'s'
 10814  00F6B5  20                 	db	32
 10815  00F6B6  25                 	db	37
 10816  00F6B7  2E                 	db	46
 10817  00F6B8  33                 	db	51	;'3'
 10818  00F6B9  66                 	db	102	;'f'
 10819  00F6BA  20                 	db	32
 10820  00F6BB  57                 	db	87	;'W'
 10821  00F6BC  61                 	db	97	;'a'
 10822  00F6BD  74                 	db	116	;'t'
 10823  00F6BE  74                 	db	116	;'t'
 10824  00F6BF  73                 	db	115	;'s'
 10825  00F6C0  0A                 	db	10
 10826  00F6C1  0D                 	db	13
 10827  00F6C2  00                 	db	0
 10828  00F6C3                     STR_161:
 10829  00F6C3  4D                 	db	77	;'M'
 10830  00F6C4  61                 	db	97	;'a'
 10831  00F6C5  78                 	db	120	;'x'
 10832  00F6C6  69                 	db	105	;'i'
 10833  00F6C7  6D                 	db	109	;'m'
 10834  00F6C8  75                 	db	117	;'u'
 10835  00F6C9  6D                 	db	109	;'m'
 10836  00F6CA  20                 	db	32
 10837  00F6CB  72                 	db	114	;'r'
 10838  00F6CC  65                 	db	101	;'e'
 10839  00F6CD  63                 	db	99	;'c'
 10840  00F6CE  6F                 	db	111	;'o'
 10841  00F6CF  72                 	db	114	;'r'
 10842  00F6D0  64                 	db	100	;'d'
 10843  00F6D1  65                 	db	101	;'e'
 10844  00F6D2  64                 	db	100	;'d'
 10845  00F6D3  20                 	db	32
 10846  00F6D4  64                 	db	100	;'d'
 10847  00F6D5  69                 	db	105	;'i'
 10848  00F6D6  65                 	db	101	;'e'
 10849  00F6D7  20                 	db	32
 10850  00F6D8  74                 	db	116	;'t'
 10851  00F6D9  65                 	db	101	;'e'
 10852  00F6DA  6D                 	db	109	;'m'
 10853  00F6DB  70                 	db	112	;'p'
 10854  00F6DC  65                 	db	101	;'e'
 10855  00F6DD  72                 	db	114	;'r'
 10856  00F6DE  61                 	db	97	;'a'
 10857  00F6DF  74                 	db	116	;'t'
 10858  00F6E0  75                 	db	117	;'u'
 10859  00F6E1  72                 	db	114	;'r'
 10860  00F6E2  65                 	db	101	;'e'
 10861  00F6E3  20                 	db	32
 10862  00F6E4  69                 	db	105	;'i'
 10863  00F6E5  73                 	db	115	;'s'
 10864  00F6E6  20                 	db	32
 10865  00F6E7  25                 	db	37
 10866  00F6E8  2E                 	db	46
 10867  00F6E9  33                 	db	51	;'3'
 10868  00F6EA  66                 	db	102	;'f'
 10869  00F6EB  20                 	db	32
 10870  00F6EC  43                 	db	67	;'C'
 10871  00F6ED  0A                 	db	10
 10872  00F6EE  0D                 	db	13
 10873  00F6EF  00                 	db	0
 10874  00F6F0                     STR_131:
 10875  00F6F0  4C                 	db	76	;'L'
 10876  00F6F1  6F                 	db	111	;'o'
 10877  00F6F2  61                 	db	97	;'a'
 10878  00F6F3  64                 	db	100	;'d'
 10879  00F6F4  20                 	db	32
 10880  00F6F5  68                 	db	104	;'h'
 10881  00F6F6  61                 	db	97	;'a'
 10882  00F6F7  73                 	db	115	;'s'
 10883  00F6F8  20                 	db	32
 10884  00F6F9  62                 	db	98	;'b'
 10885  00F6FA  65                 	db	101	;'e'
 10886  00F6FB  65                 	db	101	;'e'
 10887  00F6FC  6E                 	db	110	;'n'
 10888  00F6FD  20                 	db	32
 10889  00F6FE  65                 	db	101	;'e'
 10890  00F6FF  6E                 	db	110	;'n'
 10891  00F700  61                 	db	97	;'a'
 10892  00F701  62                 	db	98	;'b'
 10893  00F702  6C                 	db	108	;'l'
 10894  00F703  65                 	db	101	;'e'
 10895  00F704  64                 	db	100	;'d'
 10896  00F705  2C                 	db	44
 10897  00F706  20                 	db	32
 10898  00F707  64                 	db	100	;'d'
 10899  00F708  69                 	db	105	;'i'
 10900  00F709  6D                 	db	109	;'m'
 10901  00F70A  6D                 	db	109	;'m'
 10902  00F70B  69                 	db	105	;'i'
 10903  00F70C  6E                 	db	110	;'n'
 10904  00F70D  67                 	db	103	;'g'
 10905  00F70E  20                 	db	32
 10906  00F70F  64                 	db	100	;'d'
 10907  00F710  69                 	db	105	;'i'
 10908  00F711  73                 	db	115	;'s'
 10909  00F712  61                 	db	97	;'a'
 10910  00F713  62                 	db	98	;'b'
 10911  00F714  6C                 	db	108	;'l'
 10912  00F715  65                 	db	101	;'e'
 10913  00F716  64                 	db	100	;'d'
 10914  00F717  0A                 	db	10
 10915  00F718  0D                 	db	13
 10916  00F719  00                 	db	0
 10917  00F71A                     STR_138:
 10918  00F71A  4C                 	db	76	;'L'
 10919  00F71B  6F                 	db	111	;'o'
 10920  00F71C  61                 	db	97	;'a'
 10921  00F71D  64                 	db	100	;'d'
 10922  00F71E  20                 	db	32
 10923  00F71F  61                 	db	97	;'a'
 10924  00F720  6E                 	db	110	;'n'
 10925  00F721  64                 	db	100	;'d'
 10926  00F722  20                 	db	32
 10927  00F723  64                 	db	100	;'d'
 10928  00F724  69                 	db	105	;'i'
 10929  00F725  6D                 	db	109	;'m'
 10930  00F726  6D                 	db	109	;'m'
 10931  00F727  69                 	db	105	;'i'
 10932  00F728  6E                 	db	110	;'n'
 10933  00F729  67                 	db	103	;'g'
 10934  00F72A  20                 	db	32
 10935  00F72B  61                 	db	97	;'a'
 10936  00F72C  72                 	db	114	;'r'
 10937  00F72D  65                 	db	101	;'e'
 10938  00F72E  20                 	db	32
 10939  00F72F  63                 	db	99	;'c'
 10940  00F730  75                 	db	117	;'u'
 10941  00F731  72                 	db	114	;'r'
 10942  00F732  72                 	db	114	;'r'
 10943  00F733  65                 	db	101	;'e'
 10944  00F734  6E                 	db	110	;'n'
 10945  00F735  74                 	db	116	;'t'
 10946  00F736  6C                 	db	108	;'l'
 10947  00F737  79                 	db	121	;'y'
 10948  00F738  20                 	db	32
 10949  00F739  64                 	db	100	;'d'
 10950  00F73A  69                 	db	105	;'i'
 10951  00F73B  73                 	db	115	;'s'
 10952  00F73C  61                 	db	97	;'a'
 10953  00F73D  62                 	db	98	;'b'
 10954  00F73E  6C                 	db	108	;'l'
 10955  00F73F  65                 	db	101	;'e'
 10956  00F740  64                 	db	100	;'d'
 10957  00F741  0A                 	db	10
 10958  00F742  0D                 	db	13
 10959  00F743  00                 	db	0
 10960  00F744                     STR_197:
 10961  00F744  57                 	db	87	;'W'
 10962  00F745  69                 	db	105	;'i'
 10963  00F746  6E                 	db	110	;'n'
 10964  00F747  64                 	db	100	;'d'
 10965  00F748  6F                 	db	111	;'o'
 10966  00F749  77                 	db	119	;'w'
 10967  00F74A  65                 	db	101	;'e'
 10968  00F74B  64                 	db	100	;'d'
 10969  00F74C  20                 	db	32
 10970  00F74D  57                 	db	87	;'W'
 10971  00F74E  61                 	db	97	;'a'
 10972  00F74F  74                 	db	116	;'t'
 10973  00F750  63                 	db	99	;'c'
 10974  00F751  68                 	db	104	;'h'
 10975  00F752  20                 	db	32
 10976  00F753  44                 	db	68	;'D'
 10977  00F754  6F                 	db	111	;'o'
 10978  00F755  67                 	db	103	;'g'
 10979  00F756  20                 	db	32
 10980  00F757  54                 	db	84	;'T'
 10981  00F758  69                 	db	105	;'i'
 10982  00F759  6D                 	db	109	;'m'
 10983  00F75A  65                 	db	101	;'e'
 10984  00F75B  72                 	db	114	;'r'
 10985  00F75C  20                 	db	32
 10986  00F75D  56                 	db	86	;'V'
 10987  00F75E  69                 	db	105	;'i'
 10988  00F75F  6F                 	db	111	;'o'
 10989  00F760  6C                 	db	108	;'l'
 10990  00F761  61                 	db	97	;'a'
 10991  00F762  74                 	db	116	;'t'
 10992  00F763  69                 	db	105	;'i'
 10993  00F764  6F                 	db	111	;'o'
 10994  00F765  6E                 	db	110	;'n'
 10995  00F766  20                 	db	32
 10996  00F767  52                 	db	82	;'R'
 10997  00F768  65                 	db	101	;'e'
 10998  00F769  73                 	db	115	;'s'
 10999  00F76A  65                 	db	101	;'e'
 11000  00F76B  74                 	db	116	;'t'
 11001  00F76C  00                 	db	0
 11002  00F76D                     STR_129:
 11003  00F76D  54                 	db	84	;'T'
 11004  00F76E  52                 	db	82	;'R'
 11005  00F76F  49                 	db	73	;'I'
 11006  00F770  41                 	db	65	;'A'
 11007  00F771  43                 	db	67	;'C'
 11008  00F772  20                 	db	32
 11009  00F773  6F                 	db	111	;'o'
 11010  00F774  75                 	db	117	;'u'
 11011  00F775  74                 	db	116	;'t'
 11012  00F776  70                 	db	112	;'p'
 11013  00F777  75                 	db	117	;'u'
 11014  00F778  74                 	db	116	;'t'
 11015  00F779  20                 	db	32
 11016  00F77A  64                 	db	100	;'d'
 11017  00F77B  69                 	db	105	;'i'
 11018  00F77C  6D                 	db	109	;'m'
 11019  00F77D  6D                 	db	109	;'m'
 11020  00F77E  69                 	db	105	;'i'
 11021  00F77F  6E                 	db	110	;'n'
 11022  00F780  67                 	db	103	;'g'
 11023  00F781  20                 	db	32
 11024  00F782  68                 	db	104	;'h'
 11025  00F783  61                 	db	97	;'a'
 11026  00F784  73                 	db	115	;'s'
 11027  00F785  20                 	db	32
 11028  00F786  62                 	db	98	;'b'
 11029  00F787  65                 	db	101	;'e'
 11030  00F788  65                 	db	101	;'e'
 11031  00F789  6E                 	db	110	;'n'
 11032  00F78A  20                 	db	32
 11033  00F78B  64                 	db	100	;'d'
 11034  00F78C  69                 	db	105	;'i'
 11035  00F78D  73                 	db	115	;'s'
 11036  00F78E  61                 	db	97	;'a'
 11037  00F78F  62                 	db	98	;'b'
 11038  00F790  6C                 	db	108	;'l'
 11039  00F791  65                 	db	101	;'e'
 11040  00F792  64                 	db	100	;'d'
 11041  00F793  0A                 	db	10
 11042  00F794  0D                 	db	13
 11043  00F795  00                 	db	0
 11044  00F796                     STR_180:
 11045  00F796  4D                 	db	77	;'M'
 11046  00F797  65                 	db	101	;'e'
 11047  00F798  61                 	db	97	;'a'
 11048  00F799  73                 	db	115	;'s'
 11049  00F79A  75                 	db	117	;'u'
 11050  00F79B  72                 	db	114	;'r'
 11051  00F79C  65                 	db	101	;'e'
 11052  00F79D  6D                 	db	109	;'m'
 11053  00F79E  65                 	db	101	;'e'
 11054  00F79F  6E                 	db	110	;'n'
 11055  00F7A0  74                 	db	116	;'t'
 11056  00F7A1  20                 	db	32
 11057  00F7A2  72                 	db	114	;'r'
 11058  00F7A3  65                 	db	101	;'e'
 11059  00F7A4  73                 	db	115	;'s'
 11060  00F7A5  70                 	db	112	;'p'
 11061  00F7A6  6F                 	db	111	;'o'
 11062  00F7A7  6E                 	db	110	;'n'
 11063  00F7A8  73                 	db	115	;'s'
 11064  00F7A9  65                 	db	101	;'e'
 11065  00F7AA  73                 	db	115	;'s'
 11066  00F7AB  20                 	db	32
 11067  00F7AC  61                 	db	97	;'a'
 11068  00F7AD  70                 	db	112	;'p'
 11069  00F7AE  70                 	db	112	;'p'
 11070  00F7AF  65                 	db	101	;'e'
 11071  00F7B0  61                 	db	97	;'a'
 11072  00F7B1  72                 	db	114	;'r'
 11073  00F7B2  20                 	db	32
 11074  00F7B3  69                 	db	105	;'i'
 11075  00F7B4  6E                 	db	110	;'n'
 11076  00F7B5  20                 	db	32
 11077  00F7B6  63                 	db	99	;'c'
 11078  00F7B7  79                 	db	121	;'y'
 11079  00F7B8  61                 	db	97	;'a'
 11080  00F7B9  6E                 	db	110	;'n'
 11081  00F7BA  0A                 	db	10
 11082  00F7BB  0D                 	db	13
 11083  00F7BC  00                 	db	0
 11084  00F7BD                     STR_96:
 11085  00F7BD  4E                 	db	78	;'N'
 11086  00F7BE  6F                 	db	111	;'o'
 11087  00F7BF  20                 	db	32
 11088  00F7C0  63                 	db	99	;'c'
 11089  00F7C1  6F                 	db	111	;'o'
 11090  00F7C2  6D                 	db	109	;'m'
 11091  00F7C3  6D                 	db	109	;'m'
 11092  00F7C4  75                 	db	117	;'u'
 11093  00F7C5  6E                 	db	110	;'n'
 11094  00F7C6  69                 	db	105	;'i'
 11095  00F7C7  63                 	db	99	;'c'
 11096  00F7C8  61                 	db	97	;'a'
 11097  00F7C9  74                 	db	116	;'t'
 11098  00F7CA  69                 	db	105	;'i'
 11099  00F7CB  6F                 	db	111	;'o'
 11100  00F7CC  6E                 	db	110	;'n'
 11101  00F7CD  73                 	db	115	;'s'
 11102  00F7CE  20                 	db	32
 11103  00F7CF  65                 	db	101	;'e'
 11104  00F7D0  72                 	db	114	;'r'
 11105  00F7D1  72                 	db	114	;'r'
 11106  00F7D2  6F                 	db	111	;'o'
 11107  00F7D3  72                 	db	114	;'r'
 11108  00F7D4  28                 	db	40
 11109  00F7D5  73                 	db	115	;'s'
 11110  00F7D6  29                 	db	41
 11111  00F7D7  20                 	db	32
 11112  00F7D8  64                 	db	100	;'d'
 11113  00F7D9  65                 	db	101	;'e'
 11114  00F7DA  74                 	db	116	;'t'
 11115  00F7DB  65                 	db	101	;'e'
 11116  00F7DC  63                 	db	99	;'c'
 11117  00F7DD  74                 	db	116	;'t'
 11118  00F7DE  65                 	db	101	;'e'
 11119  00F7DF  64                 	db	100	;'d'
 11120  00F7E0  0A                 	db	10
 11121  00F7E1  0D                 	db	13
 11122  00F7E2  00                 	db	0
 11123  00F7E3                     STR_108:
 11124  00F7E3  41                 	db	65	;'A'
 11125  00F7E4  56                 	db	86	;'V'
 11126  00F7E5  53                 	db	83	;'S'
 11127  00F7E6  53                 	db	83	;'S'
 11128  00F7E7  20                 	db	32
 11129  00F7E8  6D                 	db	109	;'m'
 11130  00F7E9  65                 	db	101	;'e'
 11131  00F7EA  61                 	db	97	;'a'
 11132  00F7EB  73                 	db	115	;'s'
 11133  00F7EC  75                 	db	117	;'u'
 11134  00F7ED  72                 	db	114	;'r'
 11135  00F7EE  65                 	db	101	;'e'
 11136  00F7EF  64                 	db	100	;'d'
 11137  00F7F0  20                 	db	32
 11138  00F7F1  61                 	db	97	;'a'
 11139  00F7F2  73                 	db	115	;'s'
 11140  00F7F3  20                 	db	32
 11141  00F7F4  25                 	db	37
 11142  00F7F5  2E                 	db	46
 11143  00F7F6  33                 	db	51	;'3'
 11144  00F7F7  66                 	db	102	;'f'
 11145  00F7F8  20                 	db	32
 11146  00F7F9  56                 	db	86	;'V'
 11147  00F7FA  6F                 	db	111	;'o'
 11148  00F7FB  6C                 	db	108	;'l'
 11149  00F7FC  74                 	db	116	;'t'
 11150  00F7FD  73                 	db	115	;'s'
 11151  00F7FE  20                 	db	32
 11152  00F7FF  62                 	db	98	;'b'
 11153  00F800  79                 	db	121	;'y'
 11154  00F801  20                 	db	32
 11155  00F802  41                 	db	65	;'A'
 11156  00F803  44                 	db	68	;'D'
 11157  00F804  43                 	db	67	;'C'
 11158  00F805  0A                 	db	10
 11159  00F806  0D                 	db	13
 11160  00F807  00                 	db	0
 11161  00F808                     STR_100:
 11162  00F808  2B                 	db	43
 11163  00F809  33                 	db	51	;'3'
 11164  00F80A  2E                 	db	46
 11165  00F80B  33                 	db	51	;'3'
 11166  00F80C  56                 	db	86	;'V'
 11167  00F80D  20                 	db	32
 11168  00F80E  72                 	db	114	;'r'
 11169  00F80F  61                 	db	97	;'a'
 11170  00F810  69                 	db	105	;'i'
 11171  00F811  6C                 	db	108	;'l'
 11172  00F812  20                 	db	32
 11173  00F813  6D                 	db	109	;'m'
 11174  00F814  65                 	db	101	;'e'
 11175  00F815  61                 	db	97	;'a'
 11176  00F816  73                 	db	115	;'s'
 11177  00F817  75                 	db	117	;'u'
 11178  00F818  72                 	db	114	;'r'
 11179  00F819  65                 	db	101	;'e'
 11180  00F81A  64                 	db	100	;'d'
 11181  00F81B  20                 	db	32
 11182  00F81C  61                 	db	97	;'a'
 11183  00F81D  73                 	db	115	;'s'
 11184  00F81E  20                 	db	32
 11185  00F81F  2B                 	db	43
 11186  00F820  25                 	db	37
 11187  00F821  2E                 	db	46
 11188  00F822  33                 	db	51	;'3'
 11189  00F823  66                 	db	102	;'f'
 11190  00F824  20                 	db	32
 11191  00F825  56                 	db	86	;'V'
 11192  00F826  6F                 	db	111	;'o'
 11193  00F827  6C                 	db	108	;'l'
 11194  00F828  74                 	db	116	;'t'
 11195  00F829  73                 	db	115	;'s'
 11196  00F82A  0A                 	db	10
 11197  00F82B  0D                 	db	13
 11198  00F82C  00                 	db	0
 11199  00F82D                     STR_145:
 11200  00F82D  44                 	db	68	;'D'
 11201  00F82E  69                 	db	105	;'i'
 11202  00F82F  6D                 	db	109	;'m'
 11203  00F830  6D                 	db	109	;'m'
 11204  00F831  69                 	db	105	;'i'
 11205  00F832  6E                 	db	110	;'n'
 11206  00F833  67                 	db	103	;'g'
 11207  00F834  20                 	db	32
 11208  00F835  68                 	db	104	;'h'
 11209  00F836  61                 	db	97	;'a'
 11210  00F837  73                 	db	115	;'s'
 11211  00F838  20                 	db	32
 11212  00F839  62                 	db	98	;'b'
 11213  00F83A  65                 	db	101	;'e'
 11214  00F83B  65                 	db	101	;'e'
 11215  00F83C  6E                 	db	110	;'n'
 11216  00F83D  20                 	db	32
 11217  00F83E  73                 	db	115	;'s'
 11218  00F83F  65                 	db	101	;'e'
 11219  00F840  74                 	db	116	;'t'
 11220  00F841  20                 	db	32
 11221  00F842  74                 	db	116	;'t'
 11222  00F843  6F                 	db	111	;'o'
 11223  00F844  20                 	db	32
 11224  00F845  25                 	db	37
 11225  00F846  64                 	db	100	;'d'
 11226  00F847  20                 	db	32
 11227  00F848  70                 	db	112	;'p'
 11228  00F849  65                 	db	101	;'e'
 11229  00F84A  72                 	db	114	;'r'
 11230  00F84B  63                 	db	99	;'c'
 11231  00F84C  65                 	db	101	;'e'
 11232  00F84D  6E                 	db	110	;'n'
 11233  00F84E  74                 	db	116	;'t'
 11234  00F84F  0A                 	db	10
 11235  00F850  0D                 	db	13
 11236  00F851  00                 	db	0
 11237  00F852                     STR_104:
 11238  00F852  44                 	db	68	;'D'
 11239  00F853  69                 	db	105	;'i'
 11240  00F854  65                 	db	101	;'e'
 11241  00F855  20                 	db	32
 11242  00F856  54                 	db	84	;'T'
 11243  00F857  65                 	db	101	;'e'
 11244  00F858  6D                 	db	109	;'m'
 11245  00F859  70                 	db	112	;'p'
 11246  00F85A  65                 	db	101	;'e'
 11247  00F85B  72                 	db	114	;'r'
 11248  00F85C  61                 	db	97	;'a'
 11249  00F85D  74                 	db	116	;'t'
 11250  00F85E  75                 	db	117	;'u'
 11251  00F85F  72                 	db	114	;'r'
 11252  00F860  65                 	db	101	;'e'
 11253  00F861  20                 	db	32
 11254  00F862  6D                 	db	109	;'m'
 11255  00F863  65                 	db	101	;'e'
 11256  00F864  61                 	db	97	;'a'
 11257  00F865  73                 	db	115	;'s'
 11258  00F866  75                 	db	117	;'u'
 11259  00F867  72                 	db	114	;'r'
 11260  00F868  65                 	db	101	;'e'
 11261  00F869  64                 	db	100	;'d'
 11262  00F86A  20                 	db	32
 11263  00F86B  61                 	db	97	;'a'
 11264  00F86C  73                 	db	115	;'s'
 11265  00F86D  20                 	db	32
 11266  00F86E  25                 	db	37
 11267  00F86F  2E                 	db	46
 11268  00F870  33                 	db	51	;'3'
 11269  00F871  66                 	db	102	;'f'
 11270  00F872  43                 	db	67	;'C'
 11271  00F873  0A                 	db	10
 11272  00F874  0D                 	db	13
 11273  00F875  00                 	db	0
 11274  00F876                     STR_102:
 11275  00F876  2B                 	db	43
 11276  00F877  31                 	db	49	;'1'
 11277  00F878  32                 	db	50	;'2'
 11278  00F879  56                 	db	86	;'V'
 11279  00F87A  20                 	db	32
 11280  00F87B  72                 	db	114	;'r'
 11281  00F87C  61                 	db	97	;'a'
 11282  00F87D  69                 	db	105	;'i'
 11283  00F87E  6C                 	db	108	;'l'
 11284  00F87F  20                 	db	32
 11285  00F880  6D                 	db	109	;'m'
 11286  00F881  65                 	db	101	;'e'
 11287  00F882  61                 	db	97	;'a'
 11288  00F883  73                 	db	115	;'s'
 11289  00F884  75                 	db	117	;'u'
 11290  00F885  72                 	db	114	;'r'
 11291  00F886  65                 	db	101	;'e'
 11292  00F887  64                 	db	100	;'d'
 11293  00F888  20                 	db	32
 11294  00F889  61                 	db	97	;'a'
 11295  00F88A  73                 	db	115	;'s'
 11296  00F88B  20                 	db	32
 11297  00F88C  2B                 	db	43
 11298  00F88D  25                 	db	37
 11299  00F88E  2E                 	db	46
 11300  00F88F  33                 	db	51	;'3'
 11301  00F890  66                 	db	102	;'f'
 11302  00F891  20                 	db	32
 11303  00F892  56                 	db	86	;'V'
 11304  00F893  6F                 	db	111	;'o'
 11305  00F894  6C                 	db	108	;'l'
 11306  00F895  74                 	db	116	;'t'
 11307  00F896  73                 	db	115	;'s'
 11308  00F897  0A                 	db	10
 11309  00F898  0D                 	db	13
 11310  00F899  00                 	db	0
 11311  00F89A                     STR_127:
 11312  00F89A  4F                 	db	79	;'O'
 11313  00F89B  75                 	db	117	;'u'
 11314  00F89C  74                 	db	116	;'t'
 11315  00F89D  70                 	db	112	;'p'
 11316  00F89E  75                 	db	117	;'u'
 11317  00F89F  74                 	db	116	;'t'
 11318  00F8A0  20                 	db	32
 11319  00F8A1  64                 	db	100	;'d'
 11320  00F8A2  69                 	db	105	;'i'
 11321  00F8A3  6D                 	db	109	;'m'
 11322  00F8A4  6D                 	db	109	;'m'
 11323  00F8A5  69                 	db	105	;'i'
 11324  00F8A6  6E                 	db	110	;'n'
 11325  00F8A7  67                 	db	103	;'g'
 11326  00F8A8  20                 	db	32
 11327  00F8A9  68                 	db	104	;'h'
 11328  00F8AA  61                 	db	97	;'a'
 11329  00F8AB  73                 	db	115	;'s'
 11330  00F8AC  20                 	db	32
 11331  00F8AD  62                 	db	98	;'b'
 11332  00F8AE  65                 	db	101	;'e'
 11333  00F8AF  65                 	db	101	;'e'
 11334  00F8B0  6E                 	db	110	;'n'
 11335  00F8B1  20                 	db	32
 11336  00F8B2  65                 	db	101	;'e'
 11337  00F8B3  6E                 	db	110	;'n'
 11338  00F8B4  61                 	db	97	;'a'
 11339  00F8B5  62                 	db	98	;'b'
 11340  00F8B6  6C                 	db	108	;'l'
 11341  00F8B7  65                 	db	101	;'e'
 11342  00F8B8  64                 	db	100	;'d'
 11343  00F8B9  0A                 	db	10
 11344  00F8BA  0D                 	db	13
 11345  00F8BB  00                 	db	0
 11346  00F8BC                     STR_98:
 11347  00F8BC  43                 	db	67	;'C'
 11348  00F8BD  6F                 	db	111	;'o'
 11349  00F8BE  6D                 	db	109	;'m'
 11350  00F8BF  6D                 	db	109	;'m'
 11351  00F8C0  75                 	db	117	;'u'
 11352  00F8C1  6E                 	db	110	;'n'
 11353  00F8C2  69                 	db	105	;'i'
 11354  00F8C3  63                 	db	99	;'c'
 11355  00F8C4  61                 	db	97	;'a'
 11356  00F8C5  74                 	db	116	;'t'
 11357  00F8C6  69                 	db	105	;'i'
 11358  00F8C7  6F                 	db	111	;'o'
 11359  00F8C8  6E                 	db	110	;'n'
 11360  00F8C9  73                 	db	115	;'s'
 11361  00F8CA  20                 	db	32
 11362  00F8CB  65                 	db	101	;'e'
 11363  00F8CC  72                 	db	114	;'r'
 11364  00F8CD  72                 	db	114	;'r'
 11365  00F8CE  6F                 	db	111	;'o'
 11366  00F8CF  72                 	db	114	;'r'
 11367  00F8D0  28                 	db	40
 11368  00F8D1  73                 	db	115	;'s'
 11369  00F8D2  29                 	db	41
 11370  00F8D3  20                 	db	32
 11371  00F8D4  63                 	db	99	;'c'
 11372  00F8D5  6C                 	db	108	;'l'
 11373  00F8D6  65                 	db	101	;'e'
 11374  00F8D7  61                 	db	97	;'a'
 11375  00F8D8  72                 	db	114	;'r'
 11376  00F8D9  65                 	db	101	;'e'
 11377  00F8DA  64                 	db	100	;'d'
 11378  00F8DB  0A                 	db	10
 11379  00F8DC  0D                 	db	13
 11380  00F8DD  00                 	db	0
 11381  00F8DE                     STR_112:
 11382  00F8DE  52                 	db	82	;'R'
 11383  00F8DF  4D                 	db	77	;'M'
 11384  00F8E0  53                 	db	83	;'S'
 11385  00F8E1  20                 	db	32
 11386  00F8E2  4F                 	db	79	;'O'
 11387  00F8E3  75                 	db	117	;'u'
 11388  00F8E4  74                 	db	116	;'t'
 11389  00F8E5  70                 	db	112	;'p'
 11390  00F8E6  75                 	db	117	;'u'
 11391  00F8E7  74                 	db	116	;'t'
 11392  00F8E8  20                 	db	32
 11393  00F8E9  43                 	db	67	;'C'
 11394  00F8EA  75                 	db	117	;'u'
 11395  00F8EB  72                 	db	114	;'r'
 11396  00F8EC  72                 	db	114	;'r'
 11397  00F8ED  65                 	db	101	;'e'
 11398  00F8EE  6E                 	db	110	;'n'
 11399  00F8EF  74                 	db	116	;'t'
 11400  00F8F0  20                 	db	32
 11401  00F8F1  69                 	db	105	;'i'
 11402  00F8F2  73                 	db	115	;'s'
 11403  00F8F3  20                 	db	32
 11404  00F8F4  25                 	db	37
 11405  00F8F5  2E                 	db	46
 11406  00F8F6  33                 	db	51	;'3'
 11407  00F8F7  66                 	db	102	;'f'
 11408  00F8F8  20                 	db	32
 11409  00F8F9  41                 	db	65	;'A'
 11410  00F8FA  72                 	db	114	;'r'
 11411  00F8FB  6D                 	db	109	;'m'
 11412  00F8FC  73                 	db	115	;'s'
 11413  00F8FD  0A                 	db	10
 11414  00F8FE  0D                 	db	13
 11415  00F8FF  00                 	db	0
 11416  00F900                     STR_114:
 11417  00F900  52                 	db	82	;'R'
 11418  00F901  4D                 	db	77	;'M'
 11419  00F902  53                 	db	83	;'S'
 11420  00F903  20                 	db	32
 11421  00F904  4F                 	db	79	;'O'
 11422  00F905  75                 	db	117	;'u'
 11423  00F906  74                 	db	116	;'t'
 11424  00F907  70                 	db	112	;'p'
 11425  00F908  75                 	db	117	;'u'
 11426  00F909  74                 	db	116	;'t'
 11427  00F90A  20                 	db	32
 11428  00F90B  56                 	db	86	;'V'
 11429  00F90C  6F                 	db	111	;'o'
 11430  00F90D  6C                 	db	108	;'l'
 11431  00F90E  74                 	db	116	;'t'
 11432  00F90F  61                 	db	97	;'a'
 11433  00F910  67                 	db	103	;'g'
 11434  00F911  65                 	db	101	;'e'
 11435  00F912  20                 	db	32
 11436  00F913  69                 	db	105	;'i'
 11437  00F914  73                 	db	115	;'s'
 11438  00F915  20                 	db	32
 11439  00F916  25                 	db	37
 11440  00F917  2E                 	db	46
 11441  00F918  33                 	db	51	;'3'
 11442  00F919  66                 	db	102	;'f'
 11443  00F91A  20                 	db	32
 11444  00F91B  56                 	db	86	;'V'
 11445  00F91C  72                 	db	114	;'r'
 11446  00F91D  6D                 	db	109	;'m'
 11447  00F91E  73                 	db	115	;'s'
 11448  00F91F  0A                 	db	10
 11449  00F920  0D                 	db	13
 11450  00F921  00                 	db	0
 11451  00F922                     STR_170:
 11452  00F922  48                 	db	72	;'H'
 11453  00F923  65                 	db	101	;'e'
 11454  00F924  6C                 	db	108	;'l'
 11455  00F925  70                 	db	112	;'p'
 11456  00F926  20                 	db	32
 11457  00F927  50                 	db	80	;'P'
 11458  00F928  72                 	db	114	;'r'
 11459  00F929  69                 	db	105	;'i'
 11460  00F92A  6D                 	db	109	;'m'
 11461  00F92B  61                 	db	97	;'a'
 11462  00F92C  72                 	db	114	;'r'
 11463  00F92D  79                 	db	121	;'y'
 11464  00F92E  20                 	db	32
 11465  00F92F  4D                 	db	77	;'M'
 11466  00F930  65                 	db	101	;'e'
 11467  00F931  61                 	db	97	;'a'
 11468  00F932  73                 	db	115	;'s'
 11469  00F933  75                 	db	117	;'u'
 11470  00F934  72                 	db	114	;'r'
 11471  00F935  65                 	db	101	;'e'
 11472  00F936  6D                 	db	109	;'m'
 11473  00F937  65                 	db	101	;'e'
 11474  00F938  6E                 	db	110	;'n'
 11475  00F939  74                 	db	116	;'t'
 11476  00F93A  20                 	db	32
 11477  00F93B  43                 	db	67	;'C'
 11478  00F93C  6F                 	db	111	;'o'
 11479  00F93D  6D                 	db	109	;'m'
 11480  00F93E  6D                 	db	109	;'m'
 11481  00F93F  61                 	db	97	;'a'
 11482  00F940  6E                 	db	110	;'n'
 11483  00F941  64                 	db	100	;'d'
 11484  00F942  73                 	db	115	;'s'
 11485  00F943  00                 	db	0
 11486  00F944                     STR_168:
 11487  00F944  48                 	db	72	;'H'
 11488  00F945  65                 	db	101	;'e'
 11489  00F946  6C                 	db	108	;'l'
 11490  00F947  70                 	db	112	;'p'
 11491  00F948  20                 	db	32
 11492  00F949  44                 	db	68	;'D'
 11493  00F94A  65                 	db	101	;'e'
 11494  00F94B  76                 	db	118	;'v'
 11495  00F94C  69                 	db	105	;'i'
 11496  00F94D  63                 	db	99	;'c'
 11497  00F94E  65                 	db	101	;'e'
 11498  00F94F  20                 	db	32
 11499  00F950  4D                 	db	77	;'M'
 11500  00F951  65                 	db	101	;'e'
 11501  00F952  61                 	db	97	;'a'
 11502  00F953  73                 	db	115	;'s'
 11503  00F954  75                 	db	117	;'u'
 11504  00F955  72                 	db	114	;'r'
 11505  00F956  65                 	db	101	;'e'
 11506  00F957  6D                 	db	109	;'m'
 11507  00F958  65                 	db	101	;'e'
 11508  00F959  6E                 	db	110	;'n'
 11509  00F95A  74                 	db	116	;'t'
 11510  00F95B  20                 	db	32
 11511  00F95C  43                 	db	67	;'C'
 11512  00F95D  6F                 	db	111	;'o'
 11513  00F95E  6D                 	db	109	;'m'
 11514  00F95F  6D                 	db	109	;'m'
 11515  00F960  61                 	db	97	;'a'
 11516  00F961  6E                 	db	110	;'n'
 11517  00F962  64                 	db	100	;'d'
 11518  00F963  73                 	db	115	;'s'
 11519  00F964  00                 	db	0
 11520  00F965                     STR_94:
 11521  00F965  20                 	db	32
 11522  00F966  20                 	db	32
 11523  00F967  20                 	db	32
 11524  00F968  20                 	db	32
 11525  00F969  55                 	db	85	;'U'
 11526  00F96A  53                 	db	83	;'S'
 11527  00F96B  42                 	db	66	;'B'
 11528  00F96C  20                 	db	32
 11529  00F96D  55                 	db	85	;'U'
 11530  00F96E  41                 	db	65	;'A'
 11531  00F96F  52                 	db	82	;'R'
 11532  00F970  54                 	db	84	;'T'
 11533  00F971  20                 	db	32
 11534  00F972  28                 	db	40
 11535  00F973  74                 	db	116	;'t'
 11536  00F974  68                 	db	104	;'h'
 11537  00F975  69                 	db	105	;'i'
 11538  00F976  73                 	db	115	;'s'
 11539  00F977  20                 	db	32
 11540  00F978  69                 	db	105	;'i'
 11541  00F979  6E                 	db	110	;'n'
 11542  00F97A  74                 	db	116	;'t'
 11543  00F97B  65                 	db	101	;'e'
 11544  00F97C  72                 	db	114	;'r'
 11545  00F97D  66                 	db	102	;'f'
 11546  00F97E  61                 	db	97	;'a'
 11547  00F97F  63                 	db	99	;'c'
 11548  00F980  65                 	db	101	;'e'
 11549  00F981  29                 	db	41
 11550  00F982  0A                 	db	10
 11551  00F983  0D                 	db	13
 11552  00F984  00                 	db	0
 11553  00F985                     STR_110:
 11554  00F985  4D                 	db	77	;'M'
 11555  00F986  65                 	db	101	;'e'
 11556  00F987  61                 	db	97	;'a'
 11557  00F988  73                 	db	115	;'s'
 11558  00F989  75                 	db	117	;'u'
 11559  00F98A  72                 	db	114	;'r'
 11560  00F98B  65                 	db	101	;'e'
 11561  00F98C  64                 	db	100	;'d'
 11562  00F98D  20                 	db	32
 11563  00F98E  43                 	db	67	;'C'
 11564  00F98F  75                 	db	117	;'u'
 11565  00F990  72                 	db	114	;'r'
 11566  00F991  72                 	db	114	;'r'
 11567  00F992  65                 	db	101	;'e'
 11568  00F993  6E                 	db	110	;'n'
 11569  00F994  74                 	db	116	;'t'
 11570  00F995  20                 	db	32
 11571  00F996  69                 	db	105	;'i'
 11572  00F997  73                 	db	115	;'s'
 11573  00F998  20                 	db	32
 11574  00F999  25                 	db	37
 11575  00F99A  2E                 	db	46
 11576  00F99B  33                 	db	51	;'3'
 11577  00F99C  66                 	db	102	;'f'
 11578  00F99D  20                 	db	32
 11579  00F99E  41                 	db	65	;'A'
 11580  00F99F  6D                 	db	109	;'m'
 11581  00F9A0  70                 	db	112	;'p'
 11582  00F9A1  73                 	db	115	;'s'
 11583  00F9A2  0A                 	db	10
 11584  00F9A3  0D                 	db	13
 11585  00F9A4  00                 	db	0
 11586  00F9A5                     STR_136:
 11587  00F9A5  44                 	db	68	;'D'
 11588  00F9A6  69                 	db	105	;'i'
 11589  00F9A7  6D                 	db	109	;'m'
 11590  00F9A8  6D                 	db	109	;'m'
 11591  00F9A9  69                 	db	105	;'i'
 11592  00F9AA  6E                 	db	110	;'n'
 11593  00F9AB  67                 	db	103	;'g'
 11594  00F9AC  20                 	db	32
 11595  00F9AD  69                 	db	105	;'i'
 11596  00F9AE  73                 	db	115	;'s'
 11597  00F9AF  20                 	db	32
 11598  00F9B0  63                 	db	99	;'c'
 11599  00F9B1  75                 	db	117	;'u'
 11600  00F9B2  72                 	db	114	;'r'
 11601  00F9B3  72                 	db	114	;'r'
 11602  00F9B4  65                 	db	101	;'e'
 11603  00F9B5  6E                 	db	110	;'n'
 11604  00F9B6  74                 	db	116	;'t'
 11605  00F9B7  6C                 	db	108	;'l'
 11606  00F9B8  79                 	db	121	;'y'
 11607  00F9B9  20                 	db	32
 11608  00F9BA  65                 	db	101	;'e'
 11609  00F9BB  6E                 	db	110	;'n'
 11610  00F9BC  61                 	db	97	;'a'
 11611  00F9BD  62                 	db	98	;'b'
 11612  00F9BE  6C                 	db	108	;'l'
 11613  00F9BF  65                 	db	101	;'e'
 11614  00F9C0  64                 	db	100	;'d'
 11615  00F9C1  0A                 	db	10
 11616  00F9C2  0D                 	db	13
 11617  00F9C3  00                 	db	0
 11618  00F9C4                     STR_187:
 11619  00F9C4  44                 	db	68	;'D'
 11620  00F9C5  72                 	db	114	;'r'
 11621  00F9C6  65                 	db	101	;'e'
 11622  00F9C7  77                 	db	119	;'w'
 11623  00F9C8  20                 	db	32
 11624  00F9C9  4D                 	db	77	;'M'
 11625  00F9CA  61                 	db	97	;'a'
 11626  00F9CB  61                 	db	97	;'a'
 11627  00F9CC  74                 	db	116	;'t'
 11628  00F9CD  6D                 	db	109	;'m'
 11629  00F9CE  61                 	db	97	;'a'
 11630  00F9CF  6E                 	db	110	;'n'
 11631  00F9D0  20                 	db	32
 11632  00F9D1  61                 	db	97	;'a'
 11633  00F9D2  6E                 	db	110	;'n'
 11634  00F9D3  64                 	db	100	;'d'
 11635  00F9D4  20                 	db	32
 11636  00F9D5  47                 	db	71	;'G'
 11637  00F9D6  61                 	db	97	;'a'
 11638  00F9D7  62                 	db	98	;'b'
 11639  00F9D8  65                 	db	101	;'e'
 11640  00F9D9  20                 	db	32
 11641  00F9DA  54                 	db	84	;'T'
 11642  00F9DB  68                 	db	104	;'h'
 11643  00F9DC  61                 	db	97	;'a'
 11644  00F9DD  6C                 	db	108	;'l'
 11645  00F9DE  6A                 	db	106	;'j'
 11646  00F9DF  69                 	db	105	;'i'
 11647  00F9E0  0A                 	db	10
 11648  00F9E1  0D                 	db	13
 11649  00F9E2  00                 	db	0
 11650  00F9E3                     STR_182:
 11651  00F9E3  55                 	db	85	;'U'
 11652  00F9E4  73                 	db	115	;'s'
 11653  00F9E5  65                 	db	101	;'e'
 11654  00F9E6  72                 	db	114	;'r'
 11655  00F9E7  20                 	db	32
 11656  00F9E8  69                 	db	105	;'i'
 11657  00F9E9  6E                 	db	110	;'n'
 11658  00F9EA  70                 	db	112	;'p'
 11659  00F9EB  75                 	db	117	;'u'
 11660  00F9EC  74                 	db	116	;'t'
 11661  00F9ED  20                 	db	32
 11662  00F9EE  61                 	db	97	;'a'
 11663  00F9EF  70                 	db	112	;'p'
 11664  00F9F0  70                 	db	112	;'p'
 11665  00F9F1  65                 	db	101	;'e'
 11666  00F9F2  61                 	db	97	;'a'
 11667  00F9F3  72                 	db	114	;'r'
 11668  00F9F4  73                 	db	115	;'s'
 11669  00F9F5  20                 	db	32
 11670  00F9F6  69                 	db	105	;'i'
 11671  00F9F7  6E                 	db	110	;'n'
 11672  00F9F8  20                 	db	32
 11673  00F9F9  77                 	db	119	;'w'
 11674  00F9FA  68                 	db	104	;'h'
 11675  00F9FB  69                 	db	105	;'i'
 11676  00F9FC  74                 	db	116	;'t'
 11677  00F9FD  65                 	db	101	;'e'
 11678  00F9FE  0A                 	db	10
 11679  00F9FF  0D                 	db	13
 11680  00FA00  00                 	db	0
 11681  00FA01                     STR_134:
 11682  00FA01  4C                 	db	76	;'L'
 11683  00FA02  6F                 	db	111	;'o'
 11684  00FA03  61                 	db	97	;'a'
 11685  00FA04  64                 	db	100	;'d'
 11686  00FA05  20                 	db	32
 11687  00FA06  69                 	db	105	;'i'
 11688  00FA07  73                 	db	115	;'s'
 11689  00FA08  20                 	db	32
 11690  00FA09  63                 	db	99	;'c'
 11691  00FA0A  75                 	db	117	;'u'
 11692  00FA0B  72                 	db	114	;'r'
 11693  00FA0C  72                 	db	114	;'r'
 11694  00FA0D  65                 	db	101	;'e'
 11695  00FA0E  6E                 	db	110	;'n'
 11696  00FA0F  74                 	db	116	;'t'
 11697  00FA10  6C                 	db	108	;'l'
 11698  00FA11  79                 	db	121	;'y'
 11699  00FA12  20                 	db	32
 11700  00FA13  64                 	db	100	;'d'
 11701  00FA14  69                 	db	105	;'i'
 11702  00FA15  73                 	db	115	;'s'
 11703  00FA16  61                 	db	97	;'a'
 11704  00FA17  62                 	db	98	;'b'
 11705  00FA18  6C                 	db	108	;'l'
 11706  00FA19  65                 	db	101	;'e'
 11707  00FA1A  64                 	db	100	;'d'
 11708  00FA1B  0A                 	db	10
 11709  00FA1C  0D                 	db	13
 11710  00FA1D  00                 	db	0
 11711  00FA1E                     STR_166:
 11712  00FA1E  48                 	db	72	;'H'
 11713  00FA1F  65                 	db	101	;'e'
 11714  00FA20  6C                 	db	108	;'l'
 11715  00FA21  70                 	db	112	;'p'
 11716  00FA22  20                 	db	32
 11717  00FA23  44                 	db	68	;'D'
 11718  00FA24  65                 	db	101	;'e'
 11719  00FA25  76                 	db	118	;'v'
 11720  00FA26  69                 	db	105	;'i'
 11721  00FA27  63                 	db	99	;'c'
 11722  00FA28  65                 	db	101	;'e'
 11723  00FA29  20                 	db	32
 11724  00FA2A  43                 	db	67	;'C'
 11725  00FA2B  6F                 	db	111	;'o'
 11726  00FA2C  6E                 	db	110	;'n'
 11727  00FA2D  74                 	db	116	;'t'
 11728  00FA2E  72                 	db	114	;'r'
 11729  00FA2F  6F                 	db	111	;'o'
 11730  00FA30  6C                 	db	108	;'l'
 11731  00FA31  20                 	db	32
 11732  00FA32  43                 	db	67	;'C'
 11733  00FA33  6F                 	db	111	;'o'
 11734  00FA34  6D                 	db	109	;'m'
 11735  00FA35  6D                 	db	109	;'m'
 11736  00FA36  61                 	db	97	;'a'
 11737  00FA37  6E                 	db	110	;'n'
 11738  00FA38  64                 	db	100	;'d'
 11739  00FA39  73                 	db	115	;'s'
 11740  00FA3A  00                 	db	0
 11741  00FA3B                     STR_172:
 11742  00FA3B  48                 	db	72	;'H'
 11743  00FA3C  65                 	db	101	;'e'
 11744  00FA3D  6C                 	db	108	;'l'
 11745  00FA3E  70                 	db	112	;'p'
 11746  00FA3F  20                 	db	32
 11747  00FA40  4F                 	db	79	;'O'
 11748  00FA41  75                 	db	117	;'u'
 11749  00FA42  74                 	db	116	;'t'
 11750  00FA43  70                 	db	112	;'p'
 11751  00FA44  75                 	db	117	;'u'
 11752  00FA45  74                 	db	116	;'t'
 11753  00FA46  20                 	db	32
 11754  00FA47  43                 	db	67	;'C'
 11755  00FA48  6F                 	db	111	;'o'
 11756  00FA49  6E                 	db	110	;'n'
 11757  00FA4A  74                 	db	116	;'t'
 11758  00FA4B  72                 	db	114	;'r'
 11759  00FA4C  6F                 	db	111	;'o'
 11760  00FA4D  6C                 	db	108	;'l'
 11761  00FA4E  20                 	db	32
 11762  00FA4F  43                 	db	67	;'C'
 11763  00FA50  6F                 	db	111	;'o'
 11764  00FA51  6D                 	db	109	;'m'
 11765  00FA52  6D                 	db	109	;'m'
 11766  00FA53  61                 	db	97	;'a'
 11767  00FA54  6E                 	db	110	;'n'
 11768  00FA55  64                 	db	100	;'d'
 11769  00FA56  73                 	db	115	;'s'
 11770  00FA57  00                 	db	0
 11771  00FA58                     STR_185:
 11772  00FA58  4D                 	db	77	;'M'
 11773  00FA59  61                 	db	97	;'a'
 11774  00FA5A  72                 	db	114	;'r'
 11775  00FA5B  71                 	db	113	;'q'
 11776  00FA5C  75                 	db	117	;'u'
 11777  00FA5D  65                 	db	101	;'e'
 11778  00FA5E  74                 	db	116	;'t'
 11779  00FA5F  74                 	db	116	;'t'
 11780  00FA60  65                 	db	101	;'e'
 11781  00FA61  20                 	db	32
 11782  00FA62  55                 	db	85	;'U'
 11783  00FA63  6E                 	db	110	;'n'
 11784  00FA64  69                 	db	105	;'i'
 11785  00FA65  76                 	db	118	;'v'
 11786  00FA66  65                 	db	101	;'e'
 11787  00FA67  72                 	db	114	;'r'
 11788  00FA68  73                 	db	115	;'s'
 11789  00FA69  69                 	db	105	;'i'
 11790  00FA6A  74                 	db	116	;'t'
 11791  00FA6B  79                 	db	121	;'y'
 11792  00FA6C  20                 	db	32
 11793  00FA6D  45                 	db	69	;'E'
 11794  00FA6E  45                 	db	69	;'E'
 11795  00FA6F  43                 	db	67	;'C'
 11796  00FA70  45                 	db	69	;'E'
 11797  00FA71  0A                 	db	10
 11798  00FA72  0D                 	db	13
 11799  00FA73  00                 	db	0
 11800  00FA74                     STR_133:
 11801  00FA74  4C                 	db	76	;'L'
 11802  00FA75  6F                 	db	111	;'o'
 11803  00FA76  61                 	db	97	;'a'
 11804  00FA77  64                 	db	100	;'d'
 11805  00FA78  20                 	db	32
 11806  00FA79  69                 	db	105	;'i'
 11807  00FA7A  73                 	db	115	;'s'
 11808  00FA7B  20                 	db	32
 11809  00FA7C  63                 	db	99	;'c'
 11810  00FA7D  75                 	db	117	;'u'
 11811  00FA7E  72                 	db	114	;'r'
 11812  00FA7F  72                 	db	114	;'r'
 11813  00FA80  65                 	db	101	;'e'
 11814  00FA81  6E                 	db	110	;'n'
 11815  00FA82  74                 	db	116	;'t'
 11816  00FA83  6C                 	db	108	;'l'
 11817  00FA84  79                 	db	121	;'y'
 11818  00FA85  20                 	db	32
 11819  00FA86  65                 	db	101	;'e'
 11820  00FA87  6E                 	db	110	;'n'
 11821  00FA88  61                 	db	97	;'a'
 11822  00FA89  62                 	db	98	;'b'
 11823  00FA8A  6C                 	db	108	;'l'
 11824  00FA8B  65                 	db	101	;'e'
 11825  00FA8C  64                 	db	100	;'d'
 11826  00FA8D  0A                 	db	10
 11827  00FA8E  0D                 	db	13
 11828  00FA8F  00                 	db	0
 11829  00FA90                     STR_198:
 11830  00FA90  52                 	db	82	;'R'
 11831  00FA91  45                 	db	69	;'E'
 11832  00FA92  53                 	db	83	;'S'
 11833  00FA93  45                 	db	69	;'E'
 11834  00FA94  54                 	db	84	;'T'
 11835  00FA95  20                 	db	32
 11836  00FA96  49                 	db	73	;'I'
 11837  00FA97  6E                 	db	110	;'n'
 11838  00FA98  73                 	db	115	;'s'
 11839  00FA99  74                 	db	116	;'t'
 11840  00FA9A  72                 	db	114	;'r'
 11841  00FA9B  75                 	db	117	;'u'
 11842  00FA9C  63                 	db	99	;'c'
 11843  00FA9D  74                 	db	116	;'t'
 11844  00FA9E  69                 	db	105	;'i'
 11845  00FA9F  6F                 	db	111	;'o'
 11846  00FAA0  6E                 	db	110	;'n'
 11847  00FAA1  20                 	db	32
 11848  00FAA2  45                 	db	69	;'E'
 11849  00FAA3  78                 	db	120	;'x'
 11850  00FAA4  65                 	db	101	;'e'
 11851  00FAA5  63                 	db	99	;'c'
 11852  00FAA6  75                 	db	117	;'u'
 11853  00FAA7  74                 	db	116	;'t'
 11854  00FAA8  65                 	db	101	;'e'
 11855  00FAA9  64                 	db	100	;'d'
 11856  00FAAA  00                 	db	0
 11857  00FAAB                     STR_88:
 11858  00FAAB  4E                 	db	78	;'N'
 11859  00FAAC  6F                 	db	111	;'o'
 11860  00FAAD  20                 	db	32
 11861  00FAAE  41                 	db	65	;'A'
 11862  00FAAF  44                 	db	68	;'D'
 11863  00FAB0  43                 	db	67	;'C'
 11864  00FAB1  20                 	db	32
 11865  00FAB2  65                 	db	101	;'e'
 11866  00FAB3  72                 	db	114	;'r'
 11867  00FAB4  72                 	db	114	;'r'
 11868  00FAB5  6F                 	db	111	;'o'
 11869  00FAB6  72                 	db	114	;'r'
 11870  00FAB7  28                 	db	40
 11871  00FAB8  73                 	db	115	;'s'
 11872  00FAB9  29                 	db	41
 11873  00FABA  20                 	db	32
 11874  00FABB  64                 	db	100	;'d'
 11875  00FABC  65                 	db	101	;'e'
 11876  00FABD  74                 	db	116	;'t'
 11877  00FABE  65                 	db	101	;'e'
 11878  00FABF  63                 	db	99	;'c'
 11879  00FAC0  74                 	db	116	;'t'
 11880  00FAC1  65                 	db	101	;'e'
 11881  00FAC2  64                 	db	100	;'d'
 11882  00FAC3  0A                 	db	10
 11883  00FAC4  0D                 	db	13
 11884  00FAC5  00                 	db	0
 11885  00FAC6                     STR_109:
 11886  00FAC6  4D                 	db	77	;'M'
 11887  00FAC7  65                 	db	101	;'e'
 11888  00FAC8  61                 	db	97	;'a'
 11889  00FAC9  73                 	db	115	;'s'
 11890  00FACA  75                 	db	117	;'u'
 11891  00FACB  72                 	db	114	;'r'
 11892  00FACC  65                 	db	101	;'e'
 11893  00FACD  20                 	db	32
 11894  00FACE  44                 	db	68	;'D'
 11895  00FACF  65                 	db	101	;'e'
 11896  00FAD0  74                 	db	116	;'t'
 11897  00FAD1  65                 	db	101	;'e'
 11898  00FAD2  63                 	db	99	;'c'
 11899  00FAD3  74                 	db	116	;'t'
 11900  00FAD4  65                 	db	101	;'e'
 11901  00FAD5  64                 	db	100	;'d'
 11902  00FAD6  20                 	db	32
 11903  00FAD7  43                 	db	67	;'C'
 11904  00FAD8  75                 	db	117	;'u'
 11905  00FAD9  72                 	db	114	;'r'
 11906  00FADA  72                 	db	114	;'r'
 11907  00FADB  65                 	db	101	;'e'
 11908  00FADC  6E                 	db	110	;'n'
 11909  00FADD  74                 	db	116	;'t'
 11910  00FADE  3F                 	db	63	;'?'
 11911  00FADF  00                 	db	0
 11912  00FAE0                     STR_78:
 11913  00FAE0  41                 	db	65	;'A'
 11914  00FAE1  44                 	db	68	;'D'
 11915  00FAE2  43                 	db	67	;'C'
 11916  00FAE3  20                 	db	32
 11917  00FAE4  65                 	db	101	;'e'
 11918  00FAE5  72                 	db	114	;'r'
 11919  00FAE6  72                 	db	114	;'r'
 11920  00FAE7  6F                 	db	111	;'o'
 11921  00FAE8  72                 	db	114	;'r'
 11922  00FAE9  28                 	db	40
 11923  00FAEA  73                 	db	115	;'s'
 11924  00FAEB  29                 	db	41
 11925  00FAEC  20                 	db	32
 11926  00FAED  64                 	db	100	;'d'
 11927  00FAEE  65                 	db	101	;'e'
 11928  00FAEF  74                 	db	116	;'t'
 11929  00FAF0  65                 	db	101	;'e'
 11930  00FAF1  63                 	db	99	;'c'
 11931  00FAF2  74                 	db	116	;'t'
 11932  00FAF3  65                 	db	101	;'e'
 11933  00FAF4  64                 	db	100	;'d'
 11934  00FAF5  21                 	db	33
 11935  00FAF6  0A                 	db	10
 11936  00FAF7  0D                 	db	13
 11937  00FAF8  00                 	db	0
 11938  00FAF9                     STR_140:
 11939  00FAF9  4C                 	db	76	;'L'
 11940  00FAFA  6F                 	db	111	;'o'
 11941  00FAFB  61                 	db	97	;'a'
 11942  00FAFC  64                 	db	100	;'d'
 11943  00FAFD  20                 	db	32
 11944  00FAFE  68                 	db	104	;'h'
 11945  00FAFF  61                 	db	97	;'a'
 11946  00FB00  73                 	db	115	;'s'
 11947  00FB01  20                 	db	32
 11948  00FB02  62                 	db	98	;'b'
 11949  00FB03  65                 	db	101	;'e'
 11950  00FB04  65                 	db	101	;'e'
 11951  00FB05  6E                 	db	110	;'n'
 11952  00FB06  20                 	db	32
 11953  00FB07  64                 	db	100	;'d'
 11954  00FB08  69                 	db	105	;'i'
 11955  00FB09  73                 	db	115	;'s'
 11956  00FB0A  61                 	db	97	;'a'
 11957  00FB0B  62                 	db	98	;'b'
 11958  00FB0C  6C                 	db	108	;'l'
 11959  00FB0D  65                 	db	101	;'e'
 11960  00FB0E  64                 	db	100	;'d'
 11961  00FB0F  0A                 	db	10
 11962  00FB10  0D                 	db	13
 11963  00FB11  00                 	db	0
 11964  00FB12                     STR_141:
 11965  00FB12  53                 	db	83	;'S'
 11966  00FB13  65                 	db	101	;'e'
 11967  00FB14  74                 	db	116	;'t'
 11968  00FB15  20                 	db	32
 11969  00FB16  44                 	db	68	;'D'
 11970  00FB17  69                 	db	105	;'i'
 11971  00FB18  6D                 	db	109	;'m'
 11972  00FB19  6D                 	db	109	;'m'
 11973  00FB1A  69                 	db	105	;'i'
 11974  00FB1B  6E                 	db	110	;'n'
 11975  00FB1C  67                 	db	103	;'g'
 11976  00FB1D  20                 	db	32
 11977  00FB1E  50                 	db	80	;'P'
 11978  00FB1F  65                 	db	101	;'e'
 11979  00FB20  72                 	db	114	;'r'
 11980  00FB21  63                 	db	99	;'c'
 11981  00FB22  65                 	db	101	;'e'
 11982  00FB23  6E                 	db	110	;'n'
 11983  00FB24  74                 	db	116	;'t'
 11984  00FB25  61                 	db	97	;'a'
 11985  00FB26  67                 	db	103	;'g'
 11986  00FB27  65                 	db	101	;'e'
 11987  00FB28  3A                 	db	58	;':'
 11988  00FB29  20                 	db	32
 11989  00FB2A  00                 	db	0
 11990  00FB2B                     STR_80:
 11991  00FB2B  20                 	db	32
 11992  00FB2C  20                 	db	32
 11993  00FB2D  20                 	db	32
 11994  00FB2E  20                 	db	32
 11995  00FB2F  47                 	db	71	;'G'
 11996  00FB30  65                 	db	101	;'e'
 11997  00FB31  6E                 	db	110	;'n'
 11998  00FB32  65                 	db	101	;'e'
 11999  00FB33  72                 	db	114	;'r'
 12000  00FB34  61                 	db	97	;'a'
 12001  00FB35  6C                 	db	108	;'l'
 12002  00FB36  20                 	db	32
 12003  00FB37  41                 	db	65	;'A'
 12004  00FB38  44                 	db	68	;'D'
 12005  00FB39  43                 	db	67	;'C'
 12006  00FB3A  20                 	db	32
 12007  00FB3B  65                 	db	101	;'e'
 12008  00FB3C  72                 	db	114	;'r'
 12009  00FB3D  72                 	db	114	;'r'
 12010  00FB3E  6F                 	db	111	;'o'
 12011  00FB3F  72                 	db	114	;'r'
 12012  00FB40  0A                 	db	10
 12013  00FB41  0D                 	db	13
 12014  00FB42  00                 	db	0
 12015  00FB43                     STR_93:
 12016  00FB43  20                 	db	32
 12017  00FB44  20                 	db	32
 12018  00FB45  20                 	db	32
 12019  00FB46  20                 	db	32
 12020  00FB47  4F                 	db	79	;'O'
 12021  00FB48  4C                 	db	76	;'L'
 12022  00FB49  45                 	db	69	;'E'
 12023  00FB4A  44                 	db	68	;'D'
 12024  00FB4B  20                 	db	32
 12025  00FB4C  44                 	db	68	;'D'
 12026  00FB4D  69                 	db	105	;'i'
 12027  00FB4E  73                 	db	115	;'s'
 12028  00FB4F  70                 	db	112	;'p'
 12029  00FB50  6C                 	db	108	;'l'
 12030  00FB51  61                 	db	97	;'a'
 12031  00FB52  79                 	db	121	;'y'
 12032  00FB53  20                 	db	32
 12033  00FB54  49                 	db	73	;'I'
 12034  00FB55  32                 	db	50	;'2'
 12035  00FB56  43                 	db	67	;'C'
 12036  00FB57  0A                 	db	10
 12037  00FB58  0D                 	db	13
 12038  00FB59  00                 	db	0
 12039  00FB5A                     STR_90:
 12040  00FB5A  41                 	db	65	;'A'
 12041  00FB5B  44                 	db	68	;'D'
 12042  00FB5C  43                 	db	67	;'C'
 12043  00FB5D  20                 	db	32
 12044  00FB5E  45                 	db	69	;'E'
 12045  00FB5F  72                 	db	114	;'r'
 12046  00FB60  72                 	db	114	;'r'
 12047  00FB61  6F                 	db	111	;'o'
 12048  00FB62  72                 	db	114	;'r'
 12049  00FB63  28                 	db	40
 12050  00FB64  73                 	db	115	;'s'
 12051  00FB65  29                 	db	41
 12052  00FB66  20                 	db	32
 12053  00FB67  63                 	db	99	;'c'
 12054  00FB68  6C                 	db	108	;'l'
 12055  00FB69  65                 	db	101	;'e'
 12056  00FB6A  61                 	db	97	;'a'
 12057  00FB6B  72                 	db	114	;'r'
 12058  00FB6C  65                 	db	101	;'e'
 12059  00FB6D  64                 	db	100	;'d'
 12060  00FB6E  0A                 	db	10
 12061  00FB6F  0D                 	db	13
 12062  00FB70  00                 	db	0
 12063  00FB71                     STR_200:
 12064  00FB71  53                 	db	83	;'S'
 12065  00FB72  74                 	db	116	;'t'
 12066  00FB73  61                 	db	97	;'a'
 12067  00FB74  63                 	db	99	;'c'
 12068  00FB75  6B                 	db	107	;'k'
 12069  00FB76  20                 	db	32
 12070  00FB77  55                 	db	85	;'U'
 12071  00FB78  6E                 	db	110	;'n'
 12072  00FB79  64                 	db	100	;'d'
 12073  00FB7A  65                 	db	101	;'e'
 12074  00FB7B  72                 	db	114	;'r'
 12075  00FB7C  66                 	db	102	;'f'
 12076  00FB7D  6C                 	db	108	;'l'
 12077  00FB7E  6F                 	db	111	;'o'
 12078  00FB7F  77                 	db	119	;'w'
 12079  00FB80  20                 	db	32
 12080  00FB81  52                 	db	82	;'R'
 12081  00FB82  65                 	db	101	;'e'
 12082  00FB83  73                 	db	115	;'s'
 12083  00FB84  65                 	db	101	;'e'
 12084  00FB85  74                 	db	116	;'t'
 12085  00FB86  00                 	db	0
 12086  00FB87                     STR_199:
 12087  00FB87  53                 	db	83	;'S'
 12088  00FB88  74                 	db	116	;'t'
 12089  00FB89  61                 	db	97	;'a'
 12090  00FB8A  63                 	db	99	;'c'
 12091  00FB8B  6B                 	db	107	;'k'
 12092  00FB8C  20                 	db	32
 12093  00FB8D  4F                 	db	79	;'O'
 12094  00FB8E  76                 	db	118	;'v'
 12095  00FB8F  65                 	db	101	;'e'
 12096  00FB90  72                 	db	114	;'r'
 12097  00FB91  66                 	db	102	;'f'
 12098  00FB92  6C                 	db	108	;'l'
 12099  00FB93  6F                 	db	111	;'o'
 12100  00FB94  77                 	db	119	;'w'
 12101  00FB95  20                 	db	32
 12102  00FB96  52                 	db	82	;'R'
 12103  00FB97  65                 	db	101	;'e'
 12104  00FB98  73                 	db	115	;'s'
 12105  00FB99  65                 	db	101	;'e'
 12106  00FB9A  74                 	db	116	;'t'
 12107  00FB9B  00                 	db	0
 12108  00FB9C                     STR_113:
 12109  00FB9C  4D                 	db	77	;'M'
 12110  00FB9D  65                 	db	101	;'e'
 12111  00FB9E  61                 	db	97	;'a'
 12112  00FB9F  73                 	db	115	;'s'
 12113  00FBA0  75                 	db	117	;'u'
 12114  00FBA1  72                 	db	114	;'r'
 12115  00FBA2  65                 	db	101	;'e'
 12116  00FBA3  20                 	db	32
 12117  00FBA4  52                 	db	82	;'R'
 12118  00FBA5  4D                 	db	77	;'M'
 12119  00FBA6  53                 	db	83	;'S'
 12120  00FBA7  20                 	db	32
 12121  00FBA8  56                 	db	86	;'V'
 12122  00FBA9  6F                 	db	111	;'o'
 12123  00FBAA  6C                 	db	108	;'l'
 12124  00FBAB  74                 	db	116	;'t'
 12125  00FBAC  61                 	db	97	;'a'
 12126  00FBAD  67                 	db	103	;'g'
 12127  00FBAE  65                 	db	101	;'e'
 12128  00FBAF  3F                 	db	63	;'?'
 12129  00FBB0  00                 	db	0
 12130  00FBB1                     STR_111:
 12131  00FBB1  4D                 	db	77	;'M'
 12132  00FBB2  65                 	db	101	;'e'
 12133  00FBB3  61                 	db	97	;'a'
 12134  00FBB4  73                 	db	115	;'s'
 12135  00FBB5  75                 	db	117	;'u'
 12136  00FBB6  72                 	db	114	;'r'
 12137  00FBB7  65                 	db	101	;'e'
 12138  00FBB8  20                 	db	32
 12139  00FBB9  52                 	db	82	;'R'
 12140  00FBBA  4D                 	db	77	;'M'
 12141  00FBBB  53                 	db	83	;'S'
 12142  00FBBC  20                 	db	32
 12143  00FBBD  43                 	db	67	;'C'
 12144  00FBBE  75                 	db	117	;'u'
 12145  00FBBF  72                 	db	114	;'r'
 12146  00FBC0  72                 	db	114	;'r'
 12147  00FBC1  65                 	db	101	;'e'
 12148  00FBC2  6E                 	db	110	;'n'
 12149  00FBC3  74                 	db	116	;'t'
 12150  00FBC4  3F                 	db	63	;'?'
 12151  00FBC5  00                 	db	0
 12152  00FBC6                     STR_156:
 12153  00FBC6  4D                 	db	77	;'M'
 12154  00FBC7  61                 	db	97	;'a'
 12155  00FBC8  78                 	db	120	;'x'
 12156  00FBC9  20                 	db	32
 12157  00FBCA  50                 	db	80	;'P'
 12158  00FBCB  4F                 	db	79	;'O'
 12159  00FBCC  53                 	db	83	;'S'
 12160  00FBCD  33                 	db	51	;'3'
 12161  00FBCE  50                 	db	80	;'P'
 12162  00FBCF  33                 	db	51	;'3'
 12163  00FBD0  20                 	db	32
 12164  00FBD1  56                 	db	86	;'V'
 12165  00FBD2  6F                 	db	111	;'o'
 12166  00FBD3  6C                 	db	108	;'l'
 12167  00FBD4  74                 	db	116	;'t'
 12168  00FBD5  61                 	db	97	;'a'
 12169  00FBD6  67                 	db	103	;'g'
 12170  00FBD7  65                 	db	101	;'e'
 12171  00FBD8  3F                 	db	63	;'?'
 12172  00FBD9  00                 	db	0
 12173  00FBDA                     STR_10:
 12174  00FBDA  31                 	db	49	;'1'
 12175  00FBDB  20                 	db	32
 12176  00FBDC  73                 	db	115	;'s'
 12177  00FBDD  74                 	db	116	;'t'
 12178  00FBDE  70                 	db	112	;'p'
 12179  00FBDF  2C                 	db	44
 12180  00FBE0  20                 	db	32
 12181  00FBE1  6E                 	db	110	;'n'
 12182  00FBE2  6F                 	db	111	;'o'
 12183  00FBE3  20                 	db	32
 12184  00FBE4  66                 	db	102	;'f'
 12185  00FBE5  6C                 	db	108	;'l'
 12186  00FBE6  6F                 	db	111	;'o'
 12187  00FBE7  77                 	db	119	;'w'
 12188  00FBE8  20                 	db	32
 12189  00FBE9  63                 	db	99	;'c'
 12190  00FBEA  74                 	db	116	;'t'
 12191  00FBEB  72                 	db	114	;'r'
 12192  00FBEC  6C                 	db	108	;'l'
 12193  00FBED  00                 	db	0
 12194  00FBEE                     STR_195:
 12195  00FBEE  4D                 	db	77	;'M'
 12196  00FBEF  61                 	db	97	;'a'
 12197  00FBF0  73                 	db	115	;'s'
 12198  00FBF1  74                 	db	116	;'t'
 12199  00FBF2  65                 	db	101	;'e'
 12200  00FBF3  72                 	db	114	;'r'
 12201  00FBF4  20                 	db	32
 12202  00FBF5  43                 	db	67	;'C'
 12203  00FBF6  6C                 	db	108	;'l'
 12204  00FBF7  65                 	db	101	;'e'
 12205  00FBF8  61                 	db	97	;'a'
 12206  00FBF9  72                 	db	114	;'r'
 12207  00FBFA  20                 	db	32
 12208  00FBFB  52                 	db	82	;'R'
 12209  00FBFC  65                 	db	101	;'e'
 12210  00FBFD  73                 	db	115	;'s'
 12211  00FBFE  65                 	db	101	;'e'
 12212  00FBFF  74                 	db	116	;'t'
 12213  00FC00  00                 	db	0
 12214  00FC01                     STR_158:
 12215  00FC01  4D                 	db	77	;'M'
 12216  00FC02  61                 	db	97	;'a'
 12217  00FC03  78                 	db	120	;'x'
 12218  00FC04  20                 	db	32
 12219  00FC05  50                 	db	80	;'P'
 12220  00FC06  4F                 	db	79	;'O'
 12221  00FC07  53                 	db	83	;'S'
 12222  00FC08  31                 	db	49	;'1'
 12223  00FC09  32                 	db	50	;'2'
 12224  00FC0A  20                 	db	32
 12225  00FC0B  56                 	db	86	;'V'
 12226  00FC0C  6F                 	db	111	;'o'
 12227  00FC0D  6C                 	db	108	;'l'
 12228  00FC0E  74                 	db	116	;'t'
 12229  00FC0F  61                 	db	97	;'a'
 12230  00FC10  67                 	db	103	;'g'
 12231  00FC11  65                 	db	101	;'e'
 12232  00FC12  3F                 	db	63	;'?'
 12233  00FC13  00                 	db	0
 12234  00FC14                     STR_103:
 12235  00FC14  4D                 	db	77	;'M'
 12236  00FC15  65                 	db	101	;'e'
 12237  00FC16  61                 	db	97	;'a'
 12238  00FC17  73                 	db	115	;'s'
 12239  00FC18  75                 	db	117	;'u'
 12240  00FC19  72                 	db	114	;'r'
 12241  00FC1A  65                 	db	101	;'e'
 12242  00FC1B  20                 	db	32
 12243  00FC1C  44                 	db	68	;'D'
 12244  00FC1D  69                 	db	105	;'i'
 12245  00FC1E  65                 	db	101	;'e'
 12246  00FC1F  20                 	db	32
 12247  00FC20  54                 	db	84	;'T'
 12248  00FC21  65                 	db	101	;'e'
 12249  00FC22  6D                 	db	109	;'m'
 12250  00FC23  70                 	db	112	;'p'
 12251  00FC24  3F                 	db	63	;'?'
 12252  00FC25  00                 	db	0
 12253  00FC26                     STR_97:
 12254  00FC26  43                 	db	67	;'C'
 12255  00FC27  6C                 	db	108	;'l'
 12256  00FC28  65                 	db	101	;'e'
 12257  00FC29  61                 	db	97	;'a'
 12258  00FC2A  72                 	db	114	;'r'
 12259  00FC2B  20                 	db	32
 12260  00FC2C  43                 	db	67	;'C'
 12261  00FC2D  6F                 	db	111	;'o'
 12262  00FC2E  6D                 	db	109	;'m'
 12263  00FC2F  6D                 	db	109	;'m'
 12264  00FC30  20                 	db	32
 12265  00FC31  45                 	db	69	;'E'
 12266  00FC32  72                 	db	114	;'r'
 12267  00FC33  72                 	db	114	;'r'
 12268  00FC34  6F                 	db	111	;'o'
 12269  00FC35  72                 	db	114	;'r'
 12270  00FC36  73                 	db	115	;'s'
 12271  00FC37  00                 	db	0
 12272  00FC38                     STR_215:
 12273  00FC38  30                 	db	48	;'0'
 12274  00FC39  31                 	db	49	;'1'
 12275  00FC3A  32                 	db	50	;'2'
 12276  00FC3B  33                 	db	51	;'3'
 12277  00FC3C  34                 	db	52	;'4'
 12278  00FC3D  35                 	db	53	;'5'
 12279  00FC3E  36                 	db	54	;'6'
 12280  00FC3F  37                 	db	55	;'7'
 12281  00FC40  38                 	db	56	;'8'
 12282  00FC41  39                 	db	57	;'9'
 12283  00FC42  41                 	db	65	;'A'
 12284  00FC43  42                 	db	66	;'B'
 12285  00FC44  43                 	db	67	;'C'
 12286  00FC45  44                 	db	68	;'D'
 12287  00FC46  45                 	db	69	;'E'
 12288  00FC47  46                 	db	70	;'F'
 12289  00FC48  00                 	db	0
 12290  00FC49                     STR_68:
 12291  00FC49  41                 	db	65	;'A'
 12292  00FC4A  43                 	db	67	;'C'
 12293  00FC4B  20                 	db	32
 12294  00FC4C  50                 	db	80	;'P'
 12295  00FC4D  6F                 	db	111	;'o'
 12296  00FC4E  77                 	db	119	;'w'
 12297  00FC4F  65                 	db	101	;'e'
 12298  00FC50  72                 	db	114	;'r'
 12299  00FC51  20                 	db	32
 12300  00FC52  4D                 	db	77	;'M'
 12301  00FC53  65                 	db	101	;'e'
 12302  00FC54  74                 	db	116	;'t'
 12303  00FC55  65                 	db	101	;'e'
 12304  00FC56  72                 	db	114	;'r'
 12305  00FC57  0A                 	db	10
 12306  00FC58  0D                 	db	13
 12307  00FC59  00                 	db	0
 12308  00FC5A                     STR_135:
 12309  00FC5A  44                 	db	68	;'D'
 12310  00FC5B  69                 	db	105	;'i'
 12311  00FC5C  6D                 	db	109	;'m'
 12312  00FC5D  6D                 	db	109	;'m'
 12313  00FC5E  69                 	db	105	;'i'
 12314  00FC5F  6E                 	db	110	;'n'
 12315  00FC60  67                 	db	103	;'g'
 12316  00FC61  20                 	db	32
 12317  00FC62  45                 	db	69	;'E'
 12318  00FC63  6E                 	db	110	;'n'
 12319  00FC64  61                 	db	97	;'a'
 12320  00FC65  62                 	db	98	;'b'
 12321  00FC66  6C                 	db	108	;'l'
 12322  00FC67  65                 	db	101	;'e'
 12323  00FC68  64                 	db	100	;'d'
 12324  00FC69  3F                 	db	63	;'?'
 12325  00FC6A  00                 	db	0
 12326  00FC6B                     STR_162:
 12327  00FC6B  4D                 	db	77	;'M'
 12328  00FC6C  61                 	db	97	;'a'
 12329  00FC6D  78                 	db	120	;'x'
 12330  00FC6E  20                 	db	32
 12331  00FC6F  46                 	db	70	;'F'
 12332  00FC70  56                 	db	86	;'V'
 12333  00FC71  52                 	db	82	;'R'
 12334  00FC72  20                 	db	32
 12335  00FC73  56                 	db	86	;'V'
 12336  00FC74  6F                 	db	111	;'o'
 12337  00FC75  6C                 	db	108	;'l'
 12338  00FC76  74                 	db	116	;'t'
 12339  00FC77  61                 	db	97	;'a'
 12340  00FC78  67                 	db	103	;'g'
 12341  00FC79  65                 	db	101	;'e'
 12342  00FC7A  3F                 	db	63	;'?'
 12343  00FC7B  00                 	db	0
 12344  00FC7C                     STR_152:
 12345  00FC7C  4D                 	db	77	;'M'
 12346  00FC7D  61                 	db	97	;'a'
 12347  00FC7E  78                 	db	120	;'x'
 12348  00FC7F  20                 	db	32
 12349  00FC80  52                 	db	82	;'R'
 12350  00FC81  4D                 	db	77	;'M'
 12351  00FC82  53                 	db	83	;'S'
 12352  00FC83  20                 	db	32
 12353  00FC84  43                 	db	67	;'C'
 12354  00FC85  75                 	db	117	;'u'
 12355  00FC86  72                 	db	114	;'r'
 12356  00FC87  72                 	db	114	;'r'
 12357  00FC88  65                 	db	101	;'e'
 12358  00FC89  6E                 	db	110	;'n'
 12359  00FC8A  74                 	db	116	;'t'
 12360  00FC8B  3F                 	db	63	;'?'
 12361  00FC8C  00                 	db	0
 12362  00FC8D                     STR_126:
 12363  00FC8D  45                 	db	69	;'E'
 12364  00FC8E  6E                 	db	110	;'n'
 12365  00FC8F  61                 	db	97	;'a'
 12366  00FC90  62                 	db	98	;'b'
 12367  00FC91  6C                 	db	108	;'l'
 12368  00FC92  65                 	db	101	;'e'
 12369  00FC93  20                 	db	32
 12370  00FC94  44                 	db	68	;'D'
 12371  00FC95  69                 	db	105	;'i'
 12372  00FC96  6D                 	db	109	;'m'
 12373  00FC97  6D                 	db	109	;'m'
 12374  00FC98  69                 	db	105	;'i'
 12375  00FC99  6E                 	db	110	;'n'
 12376  00FC9A  67                 	db	103	;'g'
 12377  00FC9B  20                 	db	32
 12378  00FC9C  59                 	db	89	;'Y'
 12379  00FC9D  00                 	db	0
 12380  00FC9E                     STR_164:
 12381  00FC9E  43                 	db	67	;'C'
 12382  00FC9F  6C                 	db	108	;'l'
 12383  00FCA0  65                 	db	101	;'e'
 12384  00FCA1  61                 	db	97	;'a'
 12385  00FCA2  72                 	db	114	;'r'
 12386  00FCA3  20                 	db	32
 12387  00FCA4  4D                 	db	77	;'M'
 12388  00FCA5  61                 	db	97	;'a'
 12389  00FCA6  78                 	db	120	;'x'
 12390  00FCA7  20                 	db	32
 12391  00FCA8  56                 	db	86	;'V'
 12392  00FCA9  61                 	db	97	;'a'
 12393  00FCAA  6C                 	db	108	;'l'
 12394  00FCAB  75                 	db	117	;'u'
 12395  00FCAC  65                 	db	101	;'e'
 12396  00FCAD  73                 	db	115	;'s'
 12397  00FCAE  00                 	db	0
 12398  00FCAF                     STR_89:
 12399  00FCAF  43                 	db	67	;'C'
 12400  00FCB0  6C                 	db	108	;'l'
 12401  00FCB1  65                 	db	101	;'e'
 12402  00FCB2  61                 	db	97	;'a'
 12403  00FCB3  72                 	db	114	;'r'
 12404  00FCB4  20                 	db	32
 12405  00FCB5  41                 	db	65	;'A'
 12406  00FCB6  44                 	db	68	;'D'
 12407  00FCB7  43                 	db	67	;'C'
 12408  00FCB8  20                 	db	32
 12409  00FCB9  45                 	db	69	;'E'
 12410  00FCBA  72                 	db	114	;'r'
 12411  00FCBB  72                 	db	114	;'r'
 12412  00FCBC  6F                 	db	111	;'o'
 12413  00FCBD  72                 	db	114	;'r'
 12414  00FCBE  73                 	db	115	;'s'
 12415  00FCBF  00                 	db	0
 12416  00FCC0                     STR_192:
 12417  00FCC0  55                 	db	85	;'U'
 12418  00FCC1  6E                 	db	110	;'n'
 12419  00FCC2  64                 	db	100	;'d'
 12420  00FCC3  65                 	db	101	;'e'
 12421  00FCC4  66                 	db	102	;'f'
 12422  00FCC5  69                 	db	105	;'i'
 12423  00FCC6  6E                 	db	110	;'n'
 12424  00FCC7  65                 	db	101	;'e'
 12425  00FCC8  64                 	db	100	;'d'
 12426  00FCC9  20                 	db	32
 12427  00FCCA  52                 	db	82	;'R'
 12428  00FCCB  65                 	db	101	;'e'
 12429  00FCCC  73                 	db	115	;'s'
 12430  00FCCD  65                 	db	101	;'e'
 12431  00FCCE  74                 	db	116	;'t'
 12432  00FCCF  00                 	db	0
 12433  00FCD0                     STR_194:
 12434  00FCD0  42                 	db	66	;'B'
 12435  00FCD1  72                 	db	114	;'r'
 12436  00FCD2  6F                 	db	111	;'o'
 12437  00FCD3  77                 	db	119	;'w'
 12438  00FCD4  6E                 	db	110	;'n'
 12439  00FCD5  20                 	db	32
 12440  00FCD6  4F                 	db	79	;'O'
 12441  00FCD7  75                 	db	117	;'u'
 12442  00FCD8  74                 	db	116	;'t'
 12443  00FCD9  20                 	db	32
 12444  00FCDA  52                 	db	82	;'R'
 12445  00FCDB  65                 	db	101	;'e'
 12446  00FCDC  73                 	db	115	;'s'
 12447  00FCDD  65                 	db	101	;'e'
 12448  00FCDE  74                 	db	116	;'t'
 12449  00FCDF  00                 	db	0
 12450  00FCE0                     STR_99:
 12451  00FCE0  4D                 	db	77	;'M'
 12452  00FCE1  65                 	db	101	;'e'
 12453  00FCE2  61                 	db	97	;'a'
 12454  00FCE3  73                 	db	115	;'s'
 12455  00FCE4  75                 	db	117	;'u'
 12456  00FCE5  72                 	db	114	;'r'
 12457  00FCE6  65                 	db	101	;'e'
 12458  00FCE7  20                 	db	32
 12459  00FCE8  50                 	db	80	;'P'
 12460  00FCE9  4F                 	db	79	;'O'
 12461  00FCEA  53                 	db	83	;'S'
 12462  00FCEB  33                 	db	51	;'3'
 12463  00FCEC  50                 	db	80	;'P'
 12464  00FCED  33                 	db	51	;'3'
 12465  00FCEE  3F                 	db	63	;'?'
 12466  00FCEF  00                 	db	0
 12467  00FCF0                     STR_148:
 12468  00FCF0  44                 	db	68	;'D'
 12469  00FCF1  65                 	db	101	;'e'
 12470  00FCF2  76                 	db	118	;'v'
 12471  00FCF3  69                 	db	105	;'i'
 12472  00FCF4  63                 	db	99	;'c'
 12473  00FCF5  65                 	db	101	;'e'
 12474  00FCF6  20                 	db	32
 12475  00FCF7  4F                 	db	79	;'O'
 12476  00FCF8  6E                 	db	110	;'n'
 12477  00FCF9  20                 	db	32
 12478  00FCFA  54                 	db	84	;'T'
 12479  00FCFB  69                 	db	105	;'i'
 12480  00FCFC  6D                 	db	109	;'m'
 12481  00FCFD  65                 	db	101	;'e'
 12482  00FCFE  3F                 	db	63	;'?'
 12483  00FCFF  00                 	db	0
 12484  00FD00                     STR_64:
 12485  00FD00  43                 	db	67	;'C'
 12486  00FD01  61                 	db	97	;'a'
 12487  00FD02  75                 	db	117	;'u'
 12488  00FD03  73                 	db	115	;'s'
 12489  00FD04  65                 	db	101	;'e'
 12490  00FD05  20                 	db	32
 12491  00FD06  6F                 	db	111	;'o'
 12492  00FD07  66                 	db	102	;'f'
 12493  00FD08  20                 	db	32
 12494  00FD09  52                 	db	82	;'R'
 12495  00FD0A  65                 	db	101	;'e'
 12496  00FD0B  73                 	db	115	;'s'
 12497  00FD0C  65                 	db	101	;'e'
 12498  00FD0D  74                 	db	116	;'t'
 12499  00FD0E  3F                 	db	63	;'?'
 12500  00FD0F  00                 	db	0
 12501  00FD10                     STR_117:
 12502  00FD10  4D                 	db	77	;'M'
 12503  00FD11  65                 	db	101	;'e'
 12504  00FD12  61                 	db	97	;'a'
 12505  00FD13  73                 	db	115	;'s'
 12506  00FD14  75                 	db	117	;'u'
 12507  00FD15  72                 	db	114	;'r'
 12508  00FD16  65                 	db	101	;'e'
 12509  00FD17  20                 	db	32
 12510  00FD18  45                 	db	69	;'E'
 12511  00FD19  6E                 	db	110	;'n'
 12512  00FD1A  65                 	db	101	;'e'
 12513  00FD1B  72                 	db	114	;'r'
 12514  00FD1C  67                 	db	103	;'g'
 12515  00FD1D  79                 	db	121	;'y'
 12516  00FD1E  3F                 	db	63	;'?'
 12517  00FD1F  00                 	db	0
 12518  00FD20                     STR_128:
 12519  00FD20  44                 	db	68	;'D'
 12520  00FD21  69                 	db	105	;'i'
 12521  00FD22  73                 	db	115	;'s'
 12522  00FD23  61                 	db	97	;'a'
 12523  00FD24  62                 	db	98	;'b'
 12524  00FD25  6C                 	db	108	;'l'
 12525  00FD26  65                 	db	101	;'e'
 12526  00FD27  20                 	db	32
 12527  00FD28  44                 	db	68	;'D'
 12528  00FD29  69                 	db	105	;'i'
 12529  00FD2A  6D                 	db	109	;'m'
 12530  00FD2B  6D                 	db	109	;'m'
 12531  00FD2C  69                 	db	105	;'i'
 12532  00FD2D  6E                 	db	110	;'n'
 12533  00FD2E  67                 	db	103	;'g'
 12534  00FD2F  00                 	db	0
 12535  00FD30                     STR_7:
 12536  00FD30  43                 	db	67	;'C'
 12537  00FD31  4F                 	db	79	;'O'
 12538  00FD32  4D                 	db	77	;'M'
 12539  00FD33  20                 	db	32
 12540  00FD34  50                 	db	80	;'P'
 12541  00FD35  6F                 	db	111	;'o'
 12542  00FD36  72                 	db	114	;'r'
 12543  00FD37  74                 	db	116	;'t'
 12544  00FD38  20                 	db	32
 12545  00FD39  53                 	db	83	;'S'
 12546  00FD3A  65                 	db	101	;'e'
 12547  00FD3B  74                 	db	116	;'t'
 12548  00FD3C  75                 	db	117	;'u'
 12549  00FD3D  70                 	db	112	;'p'
 12550  00FD3E  3A                 	db	58	;':'
 12551  00FD3F  00                 	db	0
 12552  00FD40                     STR_9:
 12553  00FD40  38                 	db	56	;'8'
 12554  00FD41  62                 	db	98	;'b'
 12555  00FD42  69                 	db	105	;'i'
 12556  00FD43  74                 	db	116	;'t'
 12557  00FD44  2C                 	db	44
 12558  00FD45  20                 	db	32
 12559  00FD46  6E                 	db	110	;'n'
 12560  00FD47  6F                 	db	111	;'o'
 12561  00FD48  20                 	db	32
 12562  00FD49  70                 	db	112	;'p'
 12563  00FD4A  61                 	db	97	;'a'
 12564  00FD4B  72                 	db	114	;'r'
 12565  00FD4C  69                 	db	105	;'i'
 12566  00FD4D  74                 	db	116	;'t'
 12567  00FD4E  79                 	db	121	;'y'
 12568  00FD4F  00                 	db	0
 12569  00FD50                     STR_208:
 12570  00FD50  52                 	db	82	;'R'
 12571  00FD51  45                 	db	69	;'E'
 12572  00FD52  53                 	db	83	;'S'
 12573  00FD53  45                 	db	69	;'E'
 12574  00FD54  54                 	db	84	;'T'
 12575  00FD55  20                 	db	32
 12576  00FD56  45                 	db	69	;'E'
 12577  00FD57  78                 	db	120	;'x'
 12578  00FD58  65                 	db	101	;'e'
 12579  00FD59  63                 	db	99	;'c'
 12580  00FD5A  75                 	db	117	;'u'
 12581  00FD5B  74                 	db	116	;'t'
 12582  00FD5C  65                 	db	101	;'e'
 12583  00FD5D  64                 	db	100	;'d'
 12584  00FD5E  00                 	db	0
 12585  00FD5F                     STR_193:
 12586  00FD5F  50                 	db	80	;'P'
 12587  00FD60  6F                 	db	111	;'o'
 12588  00FD61  77                 	db	119	;'w'
 12589  00FD62  65                 	db	101	;'e'
 12590  00FD63  72                 	db	114	;'r'
 12591  00FD64  20                 	db	32
 12592  00FD65  4F                 	db	79	;'O'
 12593  00FD66  6E                 	db	110	;'n'
 12594  00FD67  20                 	db	32
 12595  00FD68  52                 	db	82	;'R'
 12596  00FD69  65                 	db	101	;'e'
 12597  00FD6A  73                 	db	115	;'s'
 12598  00FD6B  65                 	db	101	;'e'
 12599  00FD6C  74                 	db	116	;'t'
 12600  00FD6D  00                 	db	0
 12601  00FD6E                     STR_86:
 12602  00FD6E  20                 	db	32
 12603  00FD6F  20                 	db	32
 12604  00FD70  20                 	db	32
 12605  00FD71  20                 	db	32
 12606  00FD72  44                 	db	68	;'D'
 12607  00FD73  69                 	db	105	;'i'
 12608  00FD74  65                 	db	101	;'e'
 12609  00FD75  20                 	db	32
 12610  00FD76  54                 	db	84	;'T'
 12611  00FD77  65                 	db	101	;'e'
 12612  00FD78  6D                 	db	109	;'m'
 12613  00FD79  70                 	db	112	;'p'
 12614  00FD7A  0A                 	db	10
 12615  00FD7B  0D                 	db	13
 12616  00FD7C  00                 	db	0
 12617  00FD7D                     STR_101:
 12618  00FD7D  4D                 	db	77	;'M'
 12619  00FD7E  65                 	db	101	;'e'
 12620  00FD7F  61                 	db	97	;'a'
 12621  00FD80  73                 	db	115	;'s'
 12622  00FD81  75                 	db	117	;'u'
 12623  00FD82  72                 	db	114	;'r'
 12624  00FD83  65                 	db	101	;'e'
 12625  00FD84  20                 	db	32
 12626  00FD85  50                 	db	80	;'P'
 12627  00FD86  4F                 	db	79	;'O'
 12628  00FD87  53                 	db	83	;'S'
 12629  00FD88  31                 	db	49	;'1'
 12630  00FD89  32                 	db	50	;'2'
 12631  00FD8A  3F                 	db	63	;'?'
 12632  00FD8B  00                 	db	0
 12633  00FD8C                     STR_115:
 12634  00FD8C  4D                 	db	77	;'M'
 12635  00FD8D  65                 	db	101	;'e'
 12636  00FD8E  61                 	db	97	;'a'
 12637  00FD8F  73                 	db	115	;'s'
 12638  00FD90  75                 	db	117	;'u'
 12639  00FD91  72                 	db	114	;'r'
 12640  00FD92  65                 	db	101	;'e'
 12641  00FD93  20                 	db	32
 12642  00FD94  50                 	db	80	;'P'
 12643  00FD95  6F                 	db	111	;'o'
 12644  00FD96  77                 	db	119	;'w'
 12645  00FD97  65                 	db	101	;'e'
 12646  00FD98  72                 	db	114	;'r'
 12647  00FD99  3F                 	db	63	;'?'
 12648  00FD9A  00                 	db	0
 12649  00FD9B                     STR_121:
 12650  00FD9B  45                 	db	69	;'E'
 12651  00FD9C  6E                 	db	110	;'n'
 12652  00FD9D  61                 	db	97	;'a'
 12653  00FD9E  62                 	db	98	;'b'
 12654  00FD9F  6C                 	db	108	;'l'
 12655  00FDA0  65                 	db	101	;'e'
 12656  00FDA1  20                 	db	32
 12657  00FDA2  44                 	db	68	;'D'
 12658  00FDA3  69                 	db	105	;'i'
 12659  00FDA4  6D                 	db	109	;'m'
 12660  00FDA5  6D                 	db	109	;'m'
 12661  00FDA6  69                 	db	105	;'i'
 12662  00FDA7  6E                 	db	110	;'n'
 12663  00FDA8  67                 	db	103	;'g'
 12664  00FDA9  00                 	db	0
 12665  00FDAA                     STR_2:
 12666  00FDAA  41                 	db	65	;'A'
 12667  00FDAB  43                 	db	67	;'C'
 12668  00FDAC  20                 	db	32
 12669  00FDAD  50                 	db	80	;'P'
 12670  00FDAE  6F                 	db	111	;'o'
 12671  00FDAF  77                 	db	119	;'w'
 12672  00FDB0  65                 	db	101	;'e'
 12673  00FDB1  72                 	db	114	;'r'
 12674  00FDB2  20                 	db	32
 12675  00FDB3  4D                 	db	77	;'M'
 12676  00FDB4  65                 	db	101	;'e'
 12677  00FDB5  74                 	db	116	;'t'
 12678  00FDB6  65                 	db	101	;'e'
 12679  00FDB7  72                 	db	114	;'r'
 12680  00FDB8  00                 	db	0
 12681  00FDB9                     STR_107:
 12682  00FDB9  4D                 	db	77	;'M'
 12683  00FDBA  65                 	db	101	;'e'
 12684  00FDBB  61                 	db	97	;'a'
 12685  00FDBC  73                 	db	115	;'s'
 12686  00FDBD  75                 	db	117	;'u'
 12687  00FDBE  72                 	db	114	;'r'
 12688  00FDBF  65                 	db	101	;'e'
 12689  00FDC0  20                 	db	32
 12690  00FDC1  41                 	db	65	;'A'
 12691  00FDC2  56                 	db	86	;'V'
 12692  00FDC3  53                 	db	83	;'S'
 12693  00FDC4  53                 	db	83	;'S'
 12694  00FDC5  3F                 	db	63	;'?'
 12695  00FDC6  00                 	db	0
 12696  00FDC7                     STR_132:
 12697  00FDC7  4C                 	db	76	;'L'
 12698  00FDC8  6F                 	db	111	;'o'
 12699  00FDC9  61                 	db	97	;'a'
 12700  00FDCA  64                 	db	100	;'d'
 12701  00FDCB  20                 	db	32
 12702  00FDCC  45                 	db	69	;'E'
 12703  00FDCD  6E                 	db	110	;'n'
 12704  00FDCE  61                 	db	97	;'a'
 12705  00FDCF  62                 	db	98	;'b'
 12706  00FDD0  6C                 	db	108	;'l'
 12707  00FDD1  65                 	db	101	;'e'
 12708  00FDD2  64                 	db	100	;'d'
 12709  00FDD3  3F                 	db	63	;'?'
 12710  00FDD4  00                 	db	0
 12711  00FDD5                     STR_150:
 12712  00FDD5  4C                 	db	76	;'L'
 12713  00FDD6  6F                 	db	111	;'o'
 12714  00FDD7  61                 	db	97	;'a'
 12715  00FDD8  64                 	db	100	;'d'
 12716  00FDD9  20                 	db	32
 12717  00FDDA  4F                 	db	79	;'O'
 12718  00FDDB  6E                 	db	110	;'n'
 12719  00FDDC  20                 	db	32
 12720  00FDDD  54                 	db	84	;'T'
 12721  00FDDE  69                 	db	105	;'i'
 12722  00FDDF  6D                 	db	109	;'m'
 12723  00FDE0  65                 	db	101	;'e'
 12724  00FDE1  3F                 	db	63	;'?'
 12725  00FDE2  00                 	db	0
 12726  00FDE3                     STR_160:
 12727  00FDE3  4D                 	db	77	;'M'
 12728  00FDE4  61                 	db	97	;'a'
 12729  00FDE5  78                 	db	120	;'x'
 12730  00FDE6  20                 	db	32
 12731  00FDE7  44                 	db	68	;'D'
 12732  00FDE8  69                 	db	105	;'i'
 12733  00FDE9  65                 	db	101	;'e'
 12734  00FDEA  20                 	db	32
 12735  00FDEB  54                 	db	84	;'T'
 12736  00FDEC  65                 	db	101	;'e'
 12737  00FDED  6D                 	db	109	;'m'
 12738  00FDEE  70                 	db	112	;'p'
 12739  00FDEF  3F                 	db	63	;'?'
 12740  00FDF0  00                 	db	0
 12741  00FDF1                     STR_13:
 12742  00FDF1  4C                 	db	76	;'L'
 12743  00FDF2  6F                 	db	111	;'o'
 12744  00FDF3  61                 	db	97	;'a'
 12745  00FDF4  64                 	db	100	;'d'
 12746  00FDF5  20                 	db	32
 12747  00FDF6  44                 	db	68	;'D'
 12748  00FDF7  69                 	db	105	;'i'
 12749  00FDF8  73                 	db	115	;'s'
 12750  00FDF9  61                 	db	97	;'a'
 12751  00FDFA  62                 	db	98	;'b'
 12752  00FDFB  6C                 	db	108	;'l'
 12753  00FDFC  65                 	db	101	;'e'
 12754  00FDFD  64                 	db	100	;'d'
 12755  00FDFE  00                 	db	0
 12756  00FDFF                     STR_11:
 12757  00FDFF  42                 	db	66	;'B'
 12758  00FE00  6F                 	db	111	;'o'
 12759  00FE01  6F                 	db	111	;'o'
 12760  00FE02  74                 	db	116	;'t'
 12761  00FE03  20                 	db	32
 12762  00FE04  43                 	db	67	;'C'
 12763  00FE05  6F                 	db	111	;'o'
 12764  00FE06  6D                 	db	109	;'m'
 12765  00FE07  70                 	db	112	;'p'
 12766  00FE08  6C                 	db	108	;'l'
 12767  00FE09  65                 	db	101	;'e'
 12768  00FE0A  74                 	db	116	;'t'
 12769  00FE0B  65                 	db	101	;'e'
 12770  00FE0C  00                 	db	0
 12771  00FE0D                     STR_4:
 12772  00FE0D  46                 	db	70	;'F'
 12773  00FE0E  69                 	db	105	;'i'
 12774  00FE0F  6E                 	db	110	;'n'
 12775  00FE10  61                 	db	97	;'a'
 12776  00FE11  6C                 	db	108	;'l'
 12777  00FE12  20                 	db	32
 12778  00FE13  50                 	db	80	;'P'
 12779  00FE14  72                 	db	114	;'r'
 12780  00FE15  6F                 	db	111	;'o'
 12781  00FE16  6A                 	db	106	;'j'
 12782  00FE17  65                 	db	101	;'e'
 12783  00FE18  63                 	db	99	;'c'
 12784  00FE19  74                 	db	116	;'t'
 12785  00FE1A  00                 	db	0
 12786  00FE1B                     STR_190:
 12787  00FE1B  50                 	db	80	;'P'
 12788  00FE1C  49                 	db	73	;'I'
 12789  00FE1D  43                 	db	67	;'C'
 12790  00FE1E  31                 	db	49	;'1'
 12791  00FE1F  38                 	db	56	;'8'
 12792  00FE20  4C                 	db	76	;'L'
 12793  00FE21  46                 	db	70	;'F'
 12794  00FE22  36                 	db	54	;'6'
 12795  00FE23  37                 	db	55	;'7'
 12796  00FE24  4B                 	db	75	;'K'
 12797  00FE25  34                 	db	52	;'4'
 12798  00FE26  30                 	db	48	;'0'
 12799  00FE27  00                 	db	0
 12800  00FE28                     STR_85:
 12801  00FE28  20                 	db	32
 12802  00FE29  20                 	db	32
 12803  00FE2A  20                 	db	32
 12804  00FE2B  20                 	db	32
 12805  00FE2C  50                 	db	80	;'P'
 12806  00FE2D  4F                 	db	79	;'O'
 12807  00FE2E  53                 	db	83	;'S'
 12808  00FE2F  33                 	db	51	;'3'
 12809  00FE30  50                 	db	80	;'P'
 12810  00FE31  33                 	db	51	;'3'
 12811  00FE32  0A                 	db	10
 12812  00FE33  0D                 	db	13
 12813  00FE34  00                 	db	0
 12814  00FE35                     STR_188:
 12815  00FE35  50                 	db	80	;'P'
 12816  00FE36  53                 	db	83	;'S'
 12817  00FE37  4F                 	db	79	;'O'
 12818  00FE38  43                 	db	67	;'C'
 12819  00FE39  73                 	db	115	;'s'
 12820  00FE3A  20                 	db	32
 12821  00FE3B  53                 	db	83	;'S'
 12822  00FE3C  55                 	db	85	;'U'
 12823  00FE3D  43                 	db	67	;'C'
 12824  00FE3E  4B                 	db	75	;'K'
 12825  00FE3F  0A                 	db	10
 12826  00FE40  0D                 	db	13
 12827  00FE41  00                 	db	0
 12828  00FE42                     STR_72:
 12829  00FE42  52                 	db	82	;'R'
 12830  00FE43  65                 	db	101	;'e'
 12831  00FE44  76                 	db	118	;'v'
 12832  00FE45  69                 	db	105	;'i'
 12833  00FE46  73                 	db	115	;'s'
 12834  00FE47  69                 	db	105	;'i'
 12835  00FE48  6F                 	db	111	;'o'
 12836  00FE49  6E                 	db	110	;'n'
 12837  00FE4A  20                 	db	32
 12838  00FE4B  49                 	db	73	;'I'
 12839  00FE4C  44                 	db	68	;'D'
 12840  00FE4D  3F                 	db	63	;'?'
 12841  00FE4E  00                 	db	0
 12842  00FE4F                     STR_105:
 12843  00FE4F  4D                 	db	77	;'M'
 12844  00FE50  65                 	db	101	;'e'
 12845  00FE51  61                 	db	97	;'a'
 12846  00FE52  73                 	db	115	;'s'
 12847  00FE53  75                 	db	117	;'u'
 12848  00FE54  72                 	db	114	;'r'
 12849  00FE55  65                 	db	101	;'e'
 12850  00FE56  20                 	db	32
 12851  00FE57  46                 	db	70	;'F'
 12852  00FE58  56                 	db	86	;'V'
 12853  00FE59  52                 	db	82	;'R'
 12854  00FE5A  3F                 	db	63	;'?'
 12855  00FE5B  00                 	db	0
 12856  00FE5C                     STR_91:
 12857  00FE5C  43                 	db	67	;'C'
 12858  00FE5D  6F                 	db	111	;'o'
 12859  00FE5E  6D                 	db	109	;'m'
 12860  00FE5F  6D                 	db	109	;'m'
 12861  00FE60  20                 	db	32
 12862  00FE61  45                 	db	69	;'E'
 12863  00FE62  72                 	db	114	;'r'
 12864  00FE63  72                 	db	114	;'r'
 12865  00FE64  6F                 	db	111	;'o'
 12866  00FE65  72                 	db	114	;'r'
 12867  00FE66  73                 	db	115	;'s'
 12868  00FE67  3F                 	db	63	;'?'
 12869  00FE68  00                 	db	0
 12870  00FE69                     STR_139:
 12871  00FE69  44                 	db	68	;'D'
 12872  00FE6A  69                 	db	105	;'i'
 12873  00FE6B  73                 	db	115	;'s'
 12874  00FE6C  61                 	db	97	;'a'
 12875  00FE6D  62                 	db	98	;'b'
 12876  00FE6E  6C                 	db	108	;'l'
 12877  00FE6F  65                 	db	101	;'e'
 12878  00FE70  20                 	db	32
 12879  00FE71  4C                 	db	76	;'L'
 12880  00FE72  6F                 	db	111	;'o'
 12881  00FE73  61                 	db	97	;'a'
 12882  00FE74  64                 	db	100	;'d'
 12883  00FE75  00                 	db	0
 12884  00FE76                     STR_119:
 12885  00FE76  43                 	db	67	;'C'
 12886  00FE77  6C                 	db	108	;'l'
 12887  00FE78  65                 	db	101	;'e'
 12888  00FE79  61                 	db	97	;'a'
 12889  00FE7A  72                 	db	114	;'r'
 12890  00FE7B  20                 	db	32
 12891  00FE7C  45                 	db	69	;'E'
 12892  00FE7D  6E                 	db	110	;'n'
 12893  00FE7E  65                 	db	101	;'e'
 12894  00FE7F  72                 	db	114	;'r'
 12895  00FE80  67                 	db	103	;'g'
 12896  00FE81  79                 	db	121	;'y'
 12897  00FE82  00                 	db	0
 12898  00FE83                     STR_6:
 12899  00FE83  52                 	db	82	;'R'
 12900  00FE84  65                 	db	101	;'e'
 12901  00FE85  76                 	db	118	;'v'
 12902  00FE86  69                 	db	105	;'i'
 12903  00FE87  73                 	db	115	;'s'
 12904  00FE88  69                 	db	105	;'i'
 12905  00FE89  6F                 	db	111	;'o'
 12906  00FE8A  6E                 	db	110	;'n'
 12907  00FE8B  20                 	db	32
 12908  00FE8C  49                 	db	73	;'I'
 12909  00FE8D  44                 	db	68	;'D'
 12910  00FE8E  3A                 	db	58	;':'
 12911  00FE8F  00                 	db	0
 12912  00FE90                     STR_15:
 12913  00FE90  4C                 	db	76	;'L'
 12914  00FE91  6F                 	db	111	;'o'
 12915  00FE92  61                 	db	97	;'a'
 12916  00FE93  64                 	db	100	;'d'
 12917  00FE94  20                 	db	32
 12918  00FE95  45                 	db	69	;'E'
 12919  00FE96  6E                 	db	110	;'n'
 12920  00FE97  61                 	db	97	;'a'
 12921  00FE98  62                 	db	98	;'b'
 12922  00FE99  6C                 	db	108	;'l'
 12923  00FE9A  65                 	db	101	;'e'
 12924  00FE9B  64                 	db	100	;'d'
 12925  00FE9C  00                 	db	0
 12926  00FE9D                     STR_189:
 12927  00FE9D  50                 	db	80	;'P'
 12928  00FE9E  49                 	db	73	;'I'
 12929  00FE9F  43                 	db	67	;'C'
 12930  00FEA0  31                 	db	49	;'1'
 12931  00FEA1  38                 	db	56	;'8'
 12932  00FEA2  46                 	db	70	;'F'
 12933  00FEA3  36                 	db	54	;'6'
 12934  00FEA4  37                 	db	55	;'7'
 12935  00FEA5  4B                 	db	75	;'K'
 12936  00FEA6  34                 	db	52	;'4'
 12937  00FEA7  30                 	db	48	;'0'
 12938  00FEA8  00                 	db	0
 12939  00FEA9                     STR_84:
 12940  00FEA9  20                 	db	32
 12941  00FEAA  20                 	db	32
 12942  00FEAB  20                 	db	32
 12943  00FEAC  20                 	db	32
 12944  00FEAD  50                 	db	80	;'P'
 12945  00FEAE  4F                 	db	79	;'O'
 12946  00FEAF  53                 	db	83	;'S'
 12947  00FEB0  31                 	db	49	;'1'
 12948  00FEB1  32                 	db	50	;'2'
 12949  00FEB2  0A                 	db	10
 12950  00FEB3  0D                 	db	13
 12951  00FEB4  00                 	db	0
 12952  00FEB5                     STR_77:
 12953  00FEB5  41                 	db	65	;'A'
 12954  00FEB6  44                 	db	68	;'D'
 12955  00FEB7  43                 	db	67	;'C'
 12956  00FEB8  20                 	db	32
 12957  00FEB9  45                 	db	69	;'E'
 12958  00FEBA  72                 	db	114	;'r'
 12959  00FEBB  72                 	db	114	;'r'
 12960  00FEBC  6F                 	db	111	;'o'
 12961  00FEBD  72                 	db	114	;'r'
 12962  00FEBE  73                 	db	115	;'s'
 12963  00FEBF  3F                 	db	63	;'?'
 12964  00FEC0  00                 	db	0
 12965  00FEC1                     STR_130:
 12966  00FEC1  45                 	db	69	;'E'
 12967  00FEC2  6E                 	db	110	;'n'
 12968  00FEC3  61                 	db	97	;'a'
 12969  00FEC4  62                 	db	98	;'b'
 12970  00FEC5  6C                 	db	108	;'l'
 12971  00FEC6  65                 	db	101	;'e'
 12972  00FEC7  20                 	db	32
 12973  00FEC8  4C                 	db	76	;'L'
 12974  00FEC9  6F                 	db	111	;'o'
 12975  00FECA  61                 	db	97	;'a'
 12976  00FECB  64                 	db	100	;'d'
 12977  00FECC  00                 	db	0
 12978  00FECD  25                 	db	37
 12979  00FECE  6C                 	db	108	;'l'
 12980  00FECF  75                 	db	117	;'u'
 12981  00FED0  2E                 	db	46
 12982  00FED1  25                 	db	37
 12983  00FED2  36                 	db	54	;'6'
 12984  00FED3  2E                 	db	46
 12985  00FED4  36                 	db	54	;'6'
 12986  00FED5  6C                 	db	108	;'l'
 12987  00FED6  75                 	db	117	;'u'
 12988  00FED7  00                 	db	0
 12989  00FED8                     STR_209:
 12990  00FED8  53                 	db	83	;'S'
 12991  00FED9  54                 	db	84	;'T'
 12992  00FEDA  4F                 	db	79	;'O'
 12993  00FEDB  46                 	db	70	;'F'
 12994  00FEDC  20                 	db	32
 12995  00FEDD  52                 	db	82	;'R'
 12996  00FEDE  65                 	db	101	;'e'
 12997  00FEDF  73                 	db	115	;'s'
 12998  00FEE0  65                 	db	101	;'e'
 12999  00FEE1  74                 	db	116	;'t'
 13000  00FEE2  00                 	db	0
 13001  00FEE3                     STR_210:
 13002  00FEE3  53                 	db	83	;'S'
 13003  00FEE4  54                 	db	84	;'T'
 13004  00FEE5  55                 	db	85	;'U'
 13005  00FEE6  46                 	db	70	;'F'
 13006  00FEE7  20                 	db	32
 13007  00FEE8  52                 	db	82	;'R'
 13008  00FEE9  65                 	db	101	;'e'
 13009  00FEEA  73                 	db	115	;'s'
 13010  00FEEB  65                 	db	101	;'e'
 13011  00FEEC  74                 	db	116	;'t'
 13012  00FEED  00                 	db	0
 13013  00FEEE                     STR_205:
 13014  00FEEE  4D                 	db	77	;'M'
 13015  00FEEF  43                 	db	67	;'C'
 13016  00FEF0  4C                 	db	76	;'L'
 13017  00FEF1  52                 	db	82	;'R'
 13018  00FEF2  20                 	db	32
 13019  00FEF3  52                 	db	82	;'R'
 13020  00FEF4  65                 	db	101	;'e'
 13021  00FEF5  73                 	db	115	;'s'
 13022  00FEF6  65                 	db	101	;'e'
 13023  00FEF7  74                 	db	116	;'t'
 13024  00FEF8  00                 	db	0
 13025  00FEF9                     STR_207:
 13026  00FEF9  57                 	db	87	;'W'
 13027  00FEFA  57                 	db	87	;'W'
 13028  00FEFB  44                 	db	68	;'D'
 13029  00FEFC  54                 	db	84	;'T'
 13030  00FEFD  20                 	db	32
 13031  00FEFE  52                 	db	82	;'R'
 13032  00FEFF  65                 	db	101	;'e'
 13033  00FF00  73                 	db	115	;'s'
 13034  00FF01  65                 	db	101	;'e'
 13035  00FF02  74                 	db	116	;'t'
 13036  00FF03  00                 	db	0
 13037  00FF04                     STR_83:
 13038  00FF04  20                 	db	32
 13039  00FF05  20                 	db	32
 13040  00FF06  20                 	db	32
 13041  00FF07  20                 	db	32
 13042  00FF08  49                 	db	73	;'I'
 13043  00FF09  53                 	db	83	;'S'
 13044  00FF0A  4E                 	db	78	;'N'
 13045  00FF0B  53                 	db	83	;'S'
 13046  00FF0C  0A                 	db	10
 13047  00FF0D  0D                 	db	13
 13048  00FF0E  00                 	db	0
 13049  00FF0F                     STR_81:
 13050  00FF0F  20                 	db	32
 13051  00FF10  20                 	db	32
 13052  00FF11  20                 	db	32
 13053  00FF12  20                 	db	32
 13054  00FF13  41                 	db	65	;'A'
 13055  00FF14  56                 	db	86	;'V'
 13056  00FF15  53                 	db	83	;'S'
 13057  00FF16  53                 	db	83	;'S'
 13058  00FF17  0A                 	db	10
 13059  00FF18  0D                 	db	13
 13060  00FF19  00                 	db	0
 13061  00FF1A                     STR_70:
 13062  00FF1A  44                 	db	68	;'D'
 13063  00FF1B  65                 	db	101	;'e'
 13064  00FF1C  76                 	db	118	;'v'
 13065  00FF1D  69                 	db	105	;'i'
 13066  00FF1E  63                 	db	99	;'c'
 13067  00FF1F  65                 	db	101	;'e'
 13068  00FF20  20                 	db	32
 13069  00FF21  49                 	db	73	;'I'
 13070  00FF22  44                 	db	68	;'D'
 13071  00FF23  3F                 	db	63	;'?'
 13072  00FF24  00                 	db	0
 13073  00FF25                     STR_154:
 13074  00FF25  4D                 	db	77	;'M'
 13075  00FF26  61                 	db	97	;'a'
 13076  00FF27  78                 	db	120	;'x'
 13077  00FF28  20                 	db	32
 13078  00FF29  50                 	db	80	;'P'
 13079  00FF2A  6F                 	db	111	;'o'
 13080  00FF2B  77                 	db	119	;'w'
 13081  00FF2C  65                 	db	101	;'e'
 13082  00FF2D  72                 	db	114	;'r'
 13083  00FF2E  3F                 	db	63	;'?'
 13084  00FF2F  00                 	db	0
 13085  00FF30                     STR_183:
 13086  00FF30  45                 	db	69	;'E'
 13087  00FF31  61                 	db	97	;'a'
 13088  00FF32  73                 	db	115	;'s'
 13089  00FF33  74                 	db	116	;'t'
 13090  00FF34  65                 	db	101	;'e'
 13091  00FF35  72                 	db	114	;'r'
 13092  00FF36  20                 	db	32
 13093  00FF37  45                 	db	69	;'E'
 13094  00FF38  67                 	db	103	;'g'
 13095  00FF39  67                 	db	103	;'g'
 13096  00FF3A  00                 	db	0
 13097  00FF3B                     STR_5:
 13098  00FF3B  44                 	db	68	;'D'
 13099  00FF3C  65                 	db	101	;'e'
 13100  00FF3D  76                 	db	118	;'v'
 13101  00FF3E  69                 	db	105	;'i'
 13102  00FF3F  63                 	db	99	;'c'
 13103  00FF40  65                 	db	101	;'e'
 13104  00FF41  20                 	db	32
 13105  00FF42  49                 	db	73	;'I'
 13106  00FF43  44                 	db	68	;'D'
 13107  00FF44  3A                 	db	58	;':'
 13108  00FF45  00                 	db	0
 13109  00FF46                     STR_204:
 13110  00FF46  42                 	db	66	;'B'
 13111  00FF47  4F                 	db	79	;'O'
 13112  00FF48  52                 	db	82	;'R'
 13113  00FF49  20                 	db	32
 13114  00FF4A  52                 	db	82	;'R'
 13115  00FF4B  65                 	db	101	;'e'
 13116  00FF4C  73                 	db	115	;'s'
 13117  00FF4D  65                 	db	101	;'e'
 13118  00FF4E  74                 	db	116	;'t'
 13119  00FF4F  00                 	db	0
 13120  00FF50                     STR_203:
 13121  00FF50  50                 	db	80	;'P'
 13122  00FF51  4F                 	db	79	;'O'
 13123  00FF52  52                 	db	82	;'R'
 13124  00FF53  20                 	db	32
 13125  00FF54  52                 	db	82	;'R'
 13126  00FF55  65                 	db	101	;'e'
 13127  00FF56  73                 	db	115	;'s'
 13128  00FF57  65                 	db	101	;'e'
 13129  00FF58  74                 	db	116	;'t'
 13130  00FF59  00                 	db	0
 13131  00FF5A                     STR_191:
 13132  00FF5A  55                 	db	85	;'U'
 13133  00FF5B  6E                 	db	110	;'n'
 13134  00FF5C  64                 	db	100	;'d'
 13135  00FF5D  65                 	db	101	;'e'
 13136  00FF5E  66                 	db	102	;'f'
 13137  00FF5F  69                 	db	105	;'i'
 13138  00FF60  6E                 	db	110	;'n'
 13139  00FF61  65                 	db	101	;'e'
 13140  00FF62  64                 	db	100	;'d'
 13141  00FF63  00                 	db	0
 13142  00FF64                     STR_82:
 13143  00FF64  20                 	db	32
 13144  00FF65  20                 	db	32
 13145  00FF66  20                 	db	32
 13146  00FF67  20                 	db	32
 13147  00FF68  46                 	db	70	;'F'
 13148  00FF69  56                 	db	86	;'V'
 13149  00FF6A  52                 	db	82	;'R'
 13150  00FF6B  0A                 	db	10
 13151  00FF6C  0D                 	db	13
 13152  00FF6D  00                 	db	0
 13153  00FF6E                     STR_74:
 13154  00FF6E  55                 	db	85	;'U'
 13155  00FF6F  73                 	db	115	;'s'
 13156  00FF70  65                 	db	101	;'e'
 13157  00FF71  72                 	db	114	;'r'
 13158  00FF72  20                 	db	32
 13159  00FF73  49                 	db	73	;'I'
 13160  00FF74  44                 	db	68	;'D'
 13161  00FF75  73                 	db	115	;'s'
 13162  00FF76  3F                 	db	63	;'?'
 13163  00FF77  00                 	db	0
 13164  00FF78                     STR_3:
 13165  00FF78  45                 	db	69	;'E'
 13166  00FF79  4C                 	db	76	;'L'
 13167  00FF7A  45                 	db	69	;'E'
 13168  00FF7B  4E                 	db	78	;'N'
 13169  00FF7C  20                 	db	32
 13170  00FF7D  33                 	db	51	;'3'
 13171  00FF7E  30                 	db	48	;'0'
 13172  00FF7F  33                 	db	51	;'3'
 13173  00FF80  35                 	db	53	;'5'
 13174  00FF81  00                 	db	0
 13175  00FF82                     STR_8:
 13176  00FF82  31                 	db	49	;'1'
 13177  00FF83  31                 	db	49	;'1'
 13178  00FF84  35                 	db	53	;'5'
 13179  00FF85  2E                 	db	46
 13180  00FF86  32                 	db	50	;'2'
 13181  00FF87  20                 	db	32
 13182  00FF88  6B                 	db	107	;'k'
 13183  00FF89  62                 	db	98	;'b'
 13184  00FF8A  73                 	db	115	;'s'
 13185  00FF8B  00                 	db	0
 13186  00FF8C                     STR_174:
 13187  00FF8C  48                 	db	72	;'H'
 13188  00FF8D  65                 	db	101	;'e'
 13189  00FF8E  6C                 	db	108	;'l'
 13190  00FF8F  70                 	db	112	;'p'
 13191  00FF90  20                 	db	32
 13192  00FF91  41                 	db	65	;'A'
 13193  00FF92  6C                 	db	108	;'l'
 13194  00FF93  6C                 	db	108	;'l'
 13195  00FF94  00                 	db	0
 13196  00FF95                     STR_214:
 13197  00FF95  28                 	db	40
 13198  00FF96  6E                 	db	110	;'n'
 13199  00FF97  75                 	db	117	;'u'
 13200  00FF98  6C                 	db	108	;'l'
 13201  00FF99  6C                 	db	108	;'l'
 13202  00FF9A  29                 	db	41
 13203  00FF9B  00                 	db	0
 13204  00FF9C                     STR_66:
 13205  00FF9C  2A                 	db	42
 13206  00FF9D  49                 	db	73	;'I'
 13207  00FF9E  44                 	db	68	;'D'
 13208  00FF9F  4E                 	db	78	;'N'
 13209  00FFA0  3F                 	db	63	;'?'
 13210  00FFA1  00                 	db	0
 13211  00FFA2                     STR_61:
 13212  00FFA2  43                 	db	67	;'C'
 13213  00FFA3  6C                 	db	108	;'l'
 13214  00FFA4  65                 	db	101	;'e'
 13215  00FFA5  61                 	db	97	;'a'
 13216  00FFA6  72                 	db	114	;'r'
 13217  00FFA7  00                 	db	0
 13218  00FFA8                     STR_12:
 13219  00FFA8  52                 	db	82	;'R'
 13220  00FFA9  65                 	db	101	;'e'
 13221  00FFAA  61                 	db	97	;'a'
 13222  00FFAB  64                 	db	100	;'d'
 13223  00FFAC  79                 	db	121	;'y'
 13224  00FFAD  00                 	db	0
 13225  00FFAE                     STR_176:
 13226  00FFAE  48                 	db	72	;'H'
 13227  00FFAF  65                 	db	101	;'e'
 13228  00FFB0  6C                 	db	108	;'l'
 13229  00FFB1  70                 	db	112	;'p'
 13230  00FFB2  00                 	db	0
 13231  00FFB3                     STR_19:
 13232  00FFB3  1B                 	db	27
 13233  00FFB4  5B                 	db	91	;'['
 13234  00FFB5  32                 	db	50	;'2'
 13235  00FFB6  4A                 	db	74	;'J'
 13236  00FFB7  00                 	db	0
 13237  00FFB8                     STR_67:
 13238  00FFB8  49                 	db	73	;'I'
 13239  00FFB9  44                 	db	68	;'D'
 13240  00FFBA  4E                 	db	78	;'N'
 13241  00FFBB  00                 	db	0
 13242  00FFBC                     STR_20:
 13243  00FFBC  1B                 	db	27
 13244  00FFBD  5B                 	db	91	;'['
 13245  00FFBE  48                 	db	72	;'H'
 13246  00FFBF  00                 	db	0
 13247  00FFC0  1B                 	db	27
 13248  00FFC1  5B                 	db	91	;'['
 13249  00FFC2  73                 	db	115	;'s'
 13250  00FFC3  00                 	db	0
 13251  00FFC4  1B                 	db	27
 13252  00FFC5  5B                 	db	91	;'['
 13253  00FFC6  75                 	db	117	;'u'
 13254  00FFC7  00                 	db	0
 13255  00FFC8                     STR_1:
 13256  00FFC8  1B                 	db	27
 13257  00FFC9  5B                 	db	91	;'['
 13258  00FFCA  4B                 	db	75	;'K'
 13259  00FFCB  00                 	db	0
 13260  00FFCC                     STR_37:
 13261  00FFCC  33                 	db	51	;'3'
 13262  00FFCD  30                 	db	48	;'0'
 13263  00FFCE  00                 	db	0
 13264  00FFCF                     STR_38:
 13265  00FFCF  33                 	db	51	;'3'
 13266  00FFD0  31                 	db	49	;'1'
 13267  00FFD1  00                 	db	0
 13268  00FFD2                     STR_48:
 13269  00FFD2  34                 	db	52	;'4'
 13270  00FFD3  31                 	db	49	;'1'
 13271  00FFD4  00                 	db	0
 13272  00FFD5                     STR_39:
 13273  00FFD5  33                 	db	51	;'3'
 13274  00FFD6  32                 	db	50	;'2'
 13275  00FFD7  00                 	db	0
 13276  00FFD8                     STR_49:
 13277  00FFD8  34                 	db	52	;'4'
 13278  00FFD9  32                 	db	50	;'2'
 13279  00FFDA  00                 	db	0
 13280  00FFDB                     STR_40:
 13281  00FFDB  33                 	db	51	;'3'
 13282  00FFDC  33                 	db	51	;'3'
 13283  00FFDD  00                 	db	0
 13284  00FFDE                     STR_50:
 13285  00FFDE  34                 	db	52	;'4'
 13286  00FFDF  33                 	db	51	;'3'
 13287  00FFE0  00                 	db	0
 13288  00FFE1                     STR_41:
 13289  00FFE1  33                 	db	51	;'3'
 13290  00FFE2  34                 	db	52	;'4'
 13291  00FFE3  00                 	db	0
 13292  00FFE4                     STR_51:
 13293  00FFE4  34                 	db	52	;'4'
 13294  00FFE5  34                 	db	52	;'4'
 13295  00FFE6  00                 	db	0
 13296  00FFE7                     STR_52:
 13297  00FFE7  34                 	db	52	;'4'
 13298  00FFE8  35                 	db	53	;'5'
 13299  00FFE9  00                 	db	0
 13300  00FFEA                     STR_43:
 13301  00FFEA  33                 	db	51	;'3'
 13302  00FFEB  36                 	db	54	;'6'
 13303  00FFEC  00                 	db	0
 13304  00FFED                     STR_53:
 13305  00FFED  34                 	db	52	;'4'
 13306  00FFEE  36                 	db	54	;'6'
 13307  00FFEF  00                 	db	0
 13308  00FFF0                     STR_44:
 13309  00FFF0  33                 	db	51	;'3'
 13310  00FFF1  37                 	db	55	;'7'
 13311  00FFF2  00                 	db	0
 13312  00FFF3                     STR_54:
 13313  00FFF3  34                 	db	52	;'4'
 13314  00FFF4  37                 	db	55	;'7'
 13315  00FFF5  00                 	db	0
 13316  00FFF6                     STR_28:
 13317  00FFF6  1B                 	db	27
 13318  00FFF7  5B                 	db	91	;'['
 13319  00FFF8  00                 	db	0
 13320  00FFF9                     STR_34:
 13321  00FFF9  38                 	db	56	;'8'
 13322  00FFFA  00                 	db	0
 13323  00FFFB                     STR_36:
 13324  00FFFB  3B                 	db	59	;';'
 13325  00FFFC  00                 	db	0
 13326  00FFFD                     STR_56:
 13327  00FFFD  6D                 	db	109	;'m'
 13328  00FFFE  00                 	db	0
 13329  0000                     
 13330                           ; #config settings
 13331  00FFFF  00                 	db	0	; dummy byte at the end
 13332  0000                     
 13333                           	psect	nvBANK2
 13334  0002FE                     __pnvBANK2:
 13335                           	opt stack 0
 13336  0002FE                     _reset_cause:
 13337                           	opt stack 0
 13338  0002FE                     	ds	1
 13339  0000                     _INT0PPS	set	3568
 13340  0000                     _HLVDCON0bits	set	3778
 13341  0000                     _HLVDCON0	set	3778
 13342  0000                     _HLVDCON1	set	3779
 13343  0000                     _PIR8bits	set	3643
 13344  0000                     _FVRCONbits	set	3780
 13345  0000                     _FVRCON	set	3780
 13346  0000                     _RC2REG	set	3825
 13347  0000                     _RC2STAbits	set	3829
 13348  0000                     _TX2REG	set	3826
 13349  0000                     _TX2STAbits	set	3830
 13350  0000                     _SP2BRGH	set	3828
 13351  0000                     _SP2BRGL	set	3827
 13352  0000                     _TX2STA	set	3830
 13353  0000                     _RC2STA	set	3829
 13354  0000                     _BAUD2CON	set	3831
 13355  0000                     _PIR1bits	set	3636
 13356  0000                     _PIE1bits	set	3626
 13357  0000                     _PIR0bits	set	3635
 13358  0000                     _PIE0bits	set	3625
 13359  0000                     _PIR2bits	set	3637
 13360  0000                     _PIE2bits	set	3627
 13361  0000                     _PIR5bits	set	3640
 13362  0000                     _PIE5bits	set	3630
 13363  0000                     _PIR3bits	set	3638
 13364  0000                     _PIE3bits	set	3628
 13365  0000                     _IPR1bits	set	3616
 13366  0000                     _IPR0bits	set	3615
 13367  0000                     _IPR2bits	set	3617
 13368  0000                     _IPR5bits	set	3620
 13369  0000                     _IPR3bits	set	3618
 13370  0000                     _SSP1DATPPS	set	3610
 13371  0000                     _RC7PPS	set	3689
 13372  0000                     _RX2PPS	set	3601
 13373  0000                     _RC6PPS	set	3688
 13374  0000                     _SSP1CLKPPS	set	3609
 13375  0000                     _RG7PPS	set	3721
 13376  0000                     _SLRCONH	set	3774
 13377  0000                     _SLRCONG	set	3769
 13378  0000                     _SLRCONF	set	3761
 13379  0000                     _SLRCONE	set	3756
 13380  0000                     _SLRCOND	set	3748
 13381  0000                     _SLRCONC	set	3743
 13382  0000                     _SLRCONB	set	3735
 13383  0000                     _SLRCONA	set	3727
 13384  0000                     _ODCOND	set	3749
 13385  0000                     _ODCONC	set	3744
 13386  0000                     _ODCONH	set	3775
 13387  0000                     _ODCONB	set	3736
 13388  0000                     _ODCONG	set	3770
 13389  0000                     _ODCONA	set	3728
 13390  0000                     _ODCONF	set	3762
 13391  0000                     _ODCONE	set	3757
 13392  0000                     _WPUH	set	3776
 13393  0000                     _WPUC	set	3745
 13394  0000                     _WPUA	set	3729
 13395  0000                     _WPUG	set	3771
 13396  0000                     _WPUB	set	3737
 13397  0000                     _WPUE	set	3758
 13398  0000                     _WPUF	set	3763
 13399  0000                     _WPUD	set	3750
 13400  0000                     _ANSELA	set	3730
 13401  0000                     _ANSELF	set	3764
 13402  0000                     _ANSELG	set	3772
 13403  0000                     _ANSELE	set	3759
 13404  0000                     _ANSELB	set	3738
 13405  0000                     _ANSELD	set	3751
 13406  0000                     _PMD5	set	3665
 13407  0000                     _PMD4	set	3664
 13408  0000                     _PMD3	set	3663
 13409  0000                     _PMD2	set	3662
 13410  0000                     _PMD1	set	3661
 13411  0000                     _PMD0	set	3660
 13412  0000                     _OSCTUNE	set	3656
 13413  0000                     _OSCFRQ	set	3657
 13414  0000                     _OSCEN	set	3655
 13415  0000                     _OSCCON3	set	3653
 13416  0000                     _OSCCON1	set	3651
 13417  0000                     _SBOREN	set	29279
 13418  0000                     _PLLR	set	29232
 13419  0000                     _T7GCONbits	set	3889
 13420  0000                     _T7CONbits	set	3888
 13421  0000                     _T7CON	set	3888
 13422  0000                     _TMR7L	set	3886
 13423  0000                     _TMR7H	set	3887
 13424  0000                     _T7CLK	set	3891
 13425  0000                     _T7GATE	set	3890
 13426  0000                     _T7GCON	set	3889
 13427  0000                     _ADCON1bits	set	3929
 13428  0000                     _ADPRE	set	3934
 13429  0000                     _ADCON3bits	set	3931
 13430  0000                     _ADCON2bits	set	3930
 13431  0000                     _ADACQ	set	3932
 13432  0000                     _ADCLK	set	3927
 13433  0000                     _ADACT	set	3926
 13434  0000                     _ADREF	set	3928
 13435  0000                     _ADCON3	set	3931
 13436  0000                     _ADCON2	set	3930
 13437  0000                     _ADCON1	set	3929
 13438  0000                     _ADCAP	set	3933
 13439  0000                     _ADPCH	set	3935
 13440  0000                     _PR2	set	4028
 13441  0000                     _TMR2	set	4027
 13442  0000                     _T2CONbits	set	4029
 13443  0000                     _T2RSTbits	set	4032
 13444  0000                     _T2HLTbits	set	4030
 13445  0000                     _T2CON	set	4029
 13446  0000                     _T2TMR	set	4027
 13447  0000                     _T2PR	set	4028
 13448  0000                     _T2RST	set	4032
 13449  0000                     _T2HLT	set	4030
 13450  0000                     _T2CLKCON	set	4031
 13451  0000                     _PCON0bits	set	4055
 13452  0000                     _LATGbits	set	3967
 13453  0000                     _LATFbits	set	3966
 13454  0000                     _SSP1BUF	set	3985
 13455  0000                     _SSP1CON2bits	set	3990
 13456  0000                     _SSP1CON1bits	set	3989
 13457  0000                     _SSP1ADD	set	3986
 13458  0000                     _SSP1CON3	set	3991
 13459  0000                     _SSP1CON1	set	3989
 13460  0000                     _SSP1STAT	set	3988
 13461  0000                     _PR4	set	4022
 13462  0000                     _TMR4	set	4021
 13463  0000                     _T4CONbits	set	4023
 13464  0000                     _T4RSTbits	set	4026
 13465  0000                     _T4HLTbits	set	4024
 13466  0000                     _T4CON	set	4023
 13467  0000                     _T4TMR	set	4021
 13468  0000                     _T4PR	set	4022
 13469  0000                     _T4RST	set	4026
 13470  0000                     _T4HLT	set	4024
 13471  0000                     _T4CLKCON	set	4025
 13472  0000                     _NVMDAT	set	3958
 13473  0000                     _NVMADRL	set	3956
 13474  0000                     _NVMADRH	set	3957
 13475  0000                     _NVMCON2	set	3960
 13476  0000                     _TABLAT	set	4085
 13477  0000                     _TBLPTRL	set	4086
 13478  0000                     _TBLPTRH	set	4087
 13479  0000                     _TBLPTRU	set	4088
 13480  0000                     _NVMCON1bits	set	3959
 13481  0000                     _T5GCONbits	set	4036
 13482  0000                     _T5CONbits	set	4035
 13483  0000                     _T5CON	set	4035
 13484  0000                     _TMR5L	set	4033
 13485  0000                     _TMR5H	set	4034
 13486  0000                     _T5CLK	set	4038
 13487  0000                     _T5GATE	set	4037
 13488  0000                     _T5GCON	set	4036
 13489  0000                     _ADERRL	set	3950
 13490  0000                     _ADERRH	set	3951
 13491  0000                     _ADPREVL	set	3937
 13492  0000                     _ADPREVH	set	3938
 13493  0000                     _ADFLTRL	set	3954
 13494  0000                     _ADFLTRH	set	3955
 13495  0000                     _ADSTATbits	set	3941
 13496  0000                     _ADACCL	set	3952
 13497  0000                     _ADACCH	set	3953
 13498  0000                     _ADCNT	set	3943
 13499  0000                     _ADRESL	set	3939
 13500  0000                     _ADRESH	set	3940
 13501  0000                     _ADCON0bits	set	3936
 13502  0000                     _ADCON0	set	3936
 13503  0000                     _ADSTAT	set	3941
 13504  0000                     _ADRPT	set	3942
 13505  0000                     _ADSTPTH	set	3945
 13506  0000                     _ADSTPTL	set	3944
 13507  0000                     _ADUTHH	set	3949
 13508  0000                     _ADUTHL	set	3948
 13509  0000                     _ADLTHH	set	3947
 13510  0000                     _ADLTHL	set	3946
 13511  0000                     _PR6	set	4016
 13512  0000                     _TMR6	set	4015
 13513  0000                     _T6CONbits	set	4017
 13514  0000                     _T6RSTbits	set	4020
 13515  0000                     _T6HLTbits	set	4018
 13516  0000                     _T6CON	set	4017
 13517  0000                     _T6TMR	set	4015
 13518  0000                     _T6PR	set	4016
 13519  0000                     _T6RST	set	4020
 13520  0000                     _T6HLT	set	4018
 13521  0000                     _T6CLKCON	set	4019
 13522  0000                     _INTCONbits	set	4082
 13523  0000                     _TRISD	set	3972
 13524  0000                     _TRISC	set	3971
 13525  0000                     _TRISH	set	3976
 13526  0000                     _TRISB	set	3970
 13527  0000                     _TRISG	set	3975
 13528  0000                     _TRISA	set	3969
 13529  0000                     _TRISF	set	3974
 13530  0000                     _TRISE	set	3973
 13531  0000                     _LATH	set	3968
 13532  0000                     _LATC	set	3963
 13533  0000                     _LATG	set	3967
 13534  0000                     _LATB	set	3962
 13535  0000                     _LATF	set	3966
 13536  0000                     _LATA	set	3961
 13537  0000                     _LATD	set	3964
 13538  0000                     _LATE	set	3965
 13539                           
 13540                           	psect	cinit
 13541  019A92                     __pcinit:
 13542                           	opt stack 0
 13543  019A92                     start_initialization:
 13544                           	opt stack 0
 13545  019A92                     __initialization:
 13546                           	opt stack 0
 13547                           
 13548                           ; Initialize objects allocated to BANK3 (36 bytes)
 13549                           ; load TBLPTR registers with __pidataBANK3
 13550  019A92  0EDE               	movlw	low __pidataBANK3
 13551  019A94  6EF6               	movwf	tblptrl,c
 13552  019A96  0EBB               	movlw	high __pidataBANK3
 13553  019A98  6EF7               	movwf	tblptrh,c
 13554  019A9A  0E01               	movlw	low (__pidataBANK3 shr (0+16))
 13555  019A9C  6EF8               	movwf	tblptru,c
 13556  019A9E  EE03  F0D5         	lfsr	0,__pdataBANK3
 13557  019AA2  EE10 F024          	lfsr	1,36
 13558  019AA6                     copy_data0:
 13559  019AA6  0009               	tblrd		*+
 13560  019AA8  CFF5 FFEE          	movff	tablat,postinc0
 13561  019AAC  50E5               	movf	postdec1,w,c
 13562  019AAE  50E1               	movf	fsr1l,w,c
 13563  019AB0  E1FA               	bnz	copy_data0
 13564                           
 13565                           ; Initialize objects allocated to BANK2 (16 bytes)
 13566                           ; load TBLPTR registers with __pidataBANK2
 13567  019AB2  0EC6               	movlw	low __pidataBANK2
 13568  019AB4  6EF6               	movwf	tblptrl,c
 13569  019AB6  0EBE               	movlw	high __pidataBANK2
 13570  019AB8  6EF7               	movwf	tblptrh,c
 13571  019ABA  0E01               	movlw	low (__pidataBANK2 shr (0+16))
 13572  019ABC  6EF8               	movwf	tblptru,c
 13573  019ABE  EE02  F0EE         	lfsr	0,__pdataBANK2
 13574  019AC2  EE10 F010          	lfsr	1,16
 13575  019AC6                     copy_data1:
 13576  019AC6  0009               	tblrd		*+
 13577  019AC8  CFF5 FFEE          	movff	tablat,postinc0
 13578  019ACC  50E5               	movf	postdec1,w,c
 13579  019ACE  50E1               	movf	fsr1l,w,c
 13580  019AD0  E1FA               	bnz	copy_data1
 13581                           
 13582                           ; Initialize objects allocated to BANK1 (5 bytes)
 13583                           ; load TBLPTR registers with __pidataBANK1
 13584  019AD2  0E0C               	movlw	low __pidataBANK1
 13585  019AD4  6EF6               	movwf	tblptrl,c
 13586  019AD6  0EC0               	movlw	high __pidataBANK1
 13587  019AD8  6EF7               	movwf	tblptrh,c
 13588  019ADA  0E01               	movlw	low (__pidataBANK1 shr (0+16))
 13589  019ADC  6EF8               	movwf	tblptru,c
 13590  019ADE  EE01  F0AC         	lfsr	0,__pdataBANK1
 13591  019AE2  EE10 F005          	lfsr	1,5
 13592  019AE6                     copy_data2:
 13593  019AE6  0009               	tblrd		*+
 13594  019AE8  CFF5 FFEE          	movff	tablat,postinc0
 13595  019AEC  50E5               	movf	postdec1,w,c
 13596  019AEE  50E1               	movf	fsr1l,w,c
 13597  019AF0  E1FA               	bnz	copy_data2
 13598                           
 13599                           ; Initialize objects allocated to BANK0 (4 bytes)
 13600                           ; load TBLPTR registers with __pidataBANK0
 13601  019AF2  0E11               	movlw	low __pidataBANK0
 13602  019AF4  6EF6               	movwf	tblptrl,c
 13603  019AF6  0EC0               	movlw	high __pidataBANK0
 13604  019AF8  6EF7               	movwf	tblptrh,c
 13605  019AFA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
 13606  019AFC  6EF8               	movwf	tblptru,c
 13607  019AFE  EE00  F0F7         	lfsr	0,__pdataBANK0
 13608  019B02  EE10 F004          	lfsr	1,4
 13609  019B06                     copy_data3:
 13610  019B06  0009               	tblrd		*+
 13611  019B08  CFF5 FFEE          	movff	tablat,postinc0
 13612  019B0C  50E5               	movf	postdec1,w,c
 13613  019B0E  50E1               	movf	fsr1l,w,c
 13614  019B10  E1FA               	bnz	copy_data3
 13615                           
 13616                           ; Clear objects allocated to BANK4 (128 bytes)
 13617  019B12  EE04  F000         	lfsr	0,__pbssBANK4
 13618  019B16  0E80               	movlw	128
 13619  019B18                     clear_0:
 13620  019B18  6AEE               	clrf	postinc0,c
 13621  019B1A  06E8               	decf	wreg,f,c
 13622  019B1C  E1FD               	bnz	clear_0
 13623                           
 13624                           ; Clear objects allocated to BANK3 (213 bytes)
 13625  019B1E  EE03  F000         	lfsr	0,__pbssBANK3
 13626  019B22  0ED5               	movlw	213
 13627  019B24                     clear_1:
 13628  019B24  6AEE               	clrf	postinc0,c
 13629  019B26  06E8               	decf	wreg,f,c
 13630  019B28  E1FD               	bnz	clear_1
 13631                           
 13632                           ; Clear objects allocated to BANK2 (93 bytes)
 13633  019B2A  EE02  F091         	lfsr	0,__pbssBANK2
 13634  019B2E  0E5D               	movlw	93
 13635  019B30                     clear_2:
 13636  019B30  6AEE               	clrf	postinc0,c
 13637  019B32  06E8               	decf	wreg,f,c
 13638  019B34  E1FD               	bnz	clear_2
 13639                           
 13640                           ; Clear objects allocated to BANK1 (76 bytes)
 13641  019B36  EE01  F060         	lfsr	0,__pbssBANK1
 13642  019B3A  0E4C               	movlw	76
 13643  019B3C                     clear_3:
 13644  019B3C  6AEE               	clrf	postinc0,c
 13645  019B3E  06E8               	decf	wreg,f,c
 13646  019B40  E1FD               	bnz	clear_3
 13647                           
 13648                           ; Clear objects allocated to BITBANK0 (1 bytes)
 13649  019B42  0100               	movlb	0
 13650  019B44  6BFB               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
 13651                           
 13652                           ; Clear objects allocated to BANK0 (7 bytes)
 13653  019B46  EE00  F0F0         	lfsr	0,__pbssBANK0
 13654  019B4A  0E07               	movlw	7
 13655  019B4C                     clear_4:
 13656  019B4C  6AEE               	clrf	postinc0,c
 13657  019B4E  06E8               	decf	wreg,f,c
 13658  019B50  E1FD               	bnz	clear_4
 13659                           
 13660                           ; Clear objects allocated to BITCOMRAM (1 bytes)
 13661  019B52  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
 13662  019B54                     end_of_initialization:
 13663                           	opt stack 0
 13664  019B54                     __end_of__initialization:
 13665                           	opt stack 0
 13666  019B54  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 13667  019B56  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13668  019B58  0100               	movlb	0
 13669  019B5A  EFF9  F0CB         	goto	_main	;jump to C main() function
 13670                           tblptru	equ	0xFF8
 13671                           tblptrh	equ	0xFF7
 13672                           tblptrl	equ	0xFF6
 13673                           tablat	equ	0xFF5
 13674                           postinc0	equ	0xFEE
 13675                           wreg	equ	0xFE8
 13676                           postdec1	equ	0xFE5
 13677                           fsr1l	equ	0xFE1
 13678                           
 13679                           	psect	bitbssCOMRAM
 13680  0002F0                     __pbitbssCOMRAM:
 13681                           	opt stack 0
 13682  0002F0                     _load_enable:
 13683                           	opt stack 0
 13684  0002F0                     	ds	1
 13685                           tblptru	equ	0xFF8
 13686                           tblptrh	equ	0xFF7
 13687                           tblptrl	equ	0xFF6
 13688                           tablat	equ	0xFF5
 13689                           postinc0	equ	0xFEE
 13690                           wreg	equ	0xFE8
 13691                           postdec1	equ	0xFE5
 13692                           fsr1l	equ	0xFE1
 13693                           
 13694                           	psect	bitbssBANK0
 13695  0007D8                     __pbitbssBANK0:
 13696                           	opt stack 0
 13697  0007D8                     _eusart2RxStringReady:
 13698                           	opt stack 0
 13699  0007D8                     	ds	1
 13700                           tblptru	equ	0xFF8
 13701                           tblptrh	equ	0xFF7
 13702                           tblptrl	equ	0xFF6
 13703                           tablat	equ	0xFF5
 13704                           postinc0	equ	0xFEE
 13705                           wreg	equ	0xFE8
 13706                           postdec1	equ	0xFE5
 13707                           fsr1l	equ	0xFE1
 13708                           
 13709                           	psect	bssBANK0
 13710  0000F0                     __pbssBANK0:
 13711                           	opt stack 0
 13712  0000F0                     _Total_Energy:
 13713                           	opt stack 0
 13714  0000F0                     	ds	4
 13715  0000F4                     _eusart2RxHead:
 13716                           	opt stack 0
 13717  0000F4                     	ds	1
 13718  0000F5                     I2C1_ISR@i2c_address:
 13719                           	opt stack 0
 13720  0000F5                     	ds	2
 13721                           tblptru	equ	0xFF8
 13722                           tblptrh	equ	0xFF7
 13723                           tblptrl	equ	0xFF6
 13724                           tablat	equ	0xFF5
 13725                           postinc0	equ	0xFEE
 13726                           wreg	equ	0xFE8
 13727                           postdec1	equ	0xFE5
 13728                           fsr1l	equ	0xFE1
 13729                           
 13730                           	psect	dataBANK0
 13731  0000F7                     __pdataBANK0:
 13732                           	opt stack 0
 13733  0000F7                     _TRIAC_Firing_Angle:
 13734                           	opt stack 0
 13735  0000F7                     	ds	4
 13736                           tblptru	equ	0xFF8
 13737                           tblptrh	equ	0xFF7
 13738                           tblptrl	equ	0xFF6
 13739                           tablat	equ	0xFF5
 13740                           postinc0	equ	0xFEE
 13741                           wreg	equ	0xFE8
 13742                           postdec1	equ	0xFE5
 13743                           fsr1l	equ	0xFE1
 13744                           
 13745                           	psect	bssBANK1
 13746  000160                     __pbssBANK1:
 13747                           	opt stack 0
 13748  000160                     _error_handler:
 13749                           	opt stack 0
 13750  000160                     	ds	9
 13751  000169                     _i2c1_object:
 13752                           	opt stack 0
 13753  000169                     	ds	7
 13754  000170                     _Avg_Power:
 13755                           	opt stack 0
 13756  000170                     	ds	4
 13757  000174                     _Irms:
 13758                           	opt stack 0
 13759  000174                     	ds	4
 13760  000178                     _Ipk:
 13761                           	opt stack 0
 13762  000178                     	ds	4
 13763  00017C                     _Temp_ADC_Result:
 13764                           	opt stack 0
 13765  00017C                     	ds	4
 13766  000180                     _POS12_ADC_Result:
 13767                           	opt stack 0
 13768  000180                     	ds	4
 13769  000184                     _POS3P3_ADC_Result:
 13770                           	opt stack 0
 13771  000184                     	ds	4
 13772  000188                     _TMR6_InterruptHandler:
 13773                           	opt stack 0
 13774  000188                     	ds	3
 13775  00018B                     TMR2_ISR@CountCallBack:
 13776                           	opt stack 0
 13777  00018B                     	ds	2
 13778  00018D                     I2C1_ISR@pi2c_buf_ptr:
 13779                           	opt stack 0
 13780  00018D                     	ds	2
 13781  00018F                     _p_i2c1_current:
 13782                           	opt stack 0
 13783  00018F                     	ds	2
 13784  000191                     _p_i2c1_trb_current:
 13785                           	opt stack 0
 13786  000191                     	ds	2
 13787  000193                     TMR4_ISR@CountCallBack:
 13788                           	opt stack 0
 13789  000193                     	ds	2
 13790  000195                     _timer5ReloadVal:
 13791                           	opt stack 0
 13792  000195                     	ds	2
 13793  000197                     _timer7ReloadVal:
 13794                           	opt stack 0
 13795  000197                     	ds	2
 13796  000199                     _current_adc_channel:
 13797                           	opt stack 0
 13798  000199                     	ds	1
 13799  00019A                     _background_color:
 13800                           	opt stack 0
 13801  00019A                     	ds	1
 13802  00019B                     _foreground_color:
 13803                           	opt stack 0
 13804  00019B                     	ds	1
 13805  00019C                     _attribute:
 13806                           	opt stack 0
 13807  00019C                     	ds	1
 13808  00019D                     _OLED_Frame:
 13809                           	opt stack 0
 13810  00019D                     	ds	1
 13811  00019E                     I2C1_ISR@i2c_10bit_address_restart:
 13812                           	opt stack 0
 13813  00019E                     	ds	1
 13814  00019F                     I2C1_ISR@i2c_bytes_left:
 13815                           	opt stack 0
 13816  00019F                     	ds	1
 13817  0001A0                     _i2c1_trb_count:
 13818                           	opt stack 0
 13819  0001A0                     	ds	1
 13820  0001A1                     _i2c1_state:
 13821                           	opt stack 0
 13822  0001A1                     	ds	1
 13823  0001A2                     _eusart2RxCount:
 13824                           	opt stack 0
 13825  0001A2                     	ds	1
 13826  0001A3                     _eusart2RxTail:
 13827                           	opt stack 0
 13828  0001A3                     	ds	1
 13829  0001A4                     _eusart2TxBufferRemaining:
 13830                           	opt stack 0
 13831  0001A4                     	ds	1
 13832  0001A5                     _eusart2TxTail:
 13833                           	opt stack 0
 13834  0001A5                     	ds	1
 13835  0001A6                     _eusart2TxHead:
 13836                           	opt stack 0
 13837  0001A6                     	ds	1
 13838  0001A7                     _FVR_ADC_Result:
 13839                           	opt stack 0
 13840  0001A7                     	ds	4
 13841  0001AB                     _OLED_I2C_Status:
 13842                           	opt stack 0
 13843  0001AB                     	ds	1
 13844                           tblptru	equ	0xFF8
 13845                           tblptrh	equ	0xFF7
 13846                           tblptrl	equ	0xFF6
 13847                           tablat	equ	0xFF5
 13848                           postinc0	equ	0xFEE
 13849                           wreg	equ	0xFE8
 13850                           postdec1	equ	0xFE5
 13851                           fsr1l	equ	0xFE1
 13852                           
 13853                           	psect	dataBANK1
 13854  0001AC                     __pdataBANK1:
 13855                           	opt stack 0
 13856  0001AC                     _Irms_offset:
 13857                           	opt stack 0
 13858  0001AC                     	ds	4
 13859  0001B0                     _next_channel:
 13860                           	opt stack 0
 13861  0001B0                     	ds	1
 13862                           tblptru	equ	0xFF8
 13863                           tblptrh	equ	0xFF7
 13864                           tblptrl	equ	0xFF6
 13865                           tablat	equ	0xFF5
 13866                           postinc0	equ	0xFEE
 13867                           wreg	equ	0xFE8
 13868                           postdec1	equ	0xFE5
 13869                           fsr1l	equ	0xFE1
 13870                           
 13871                           	psect	bssBANK2
 13872  000291                     __pbssBANK2:
 13873                           	opt stack 0
 13874  000291                     _max_FVR_ADC_Result:
 13875                           	opt stack 0
 13876  000291                     	ds	4
 13877  000295                     _max_Temp_ADC_Result:
 13878                           	opt stack 0
 13879  000295                     	ds	4
 13880  000299                     _max_POS12_ADC_Result:
 13881                           	opt stack 0
 13882  000299                     	ds	4
 13883  00029D                     _max_POS3P3_ADC_Result:
 13884                           	opt stack 0
 13885  00029D                     	ds	4
 13886  0002A1                     _max_Power:
 13887                           	opt stack 0
 13888  0002A1                     	ds	4
 13889  0002A5                     _max_Irms:
 13890                           	opt stack 0
 13891  0002A5                     	ds	4
 13892  0002A9                     _load_on_time:
 13893                           	opt stack 0
 13894  0002A9                     	ds	4
 13895  0002AD                     _dev_on_time:
 13896                           	opt stack 0
 13897  0002AD                     	ds	4
 13898  0002B1                     _Vrms:
 13899                           	opt stack 0
 13900  0002B1                     	ds	4
 13901  0002B5                     _Imeas:
 13902                           	opt stack 0
 13903  0002B5                     	ds	4
 13904  0002B9                     _Vpk:
 13905                           	opt stack 0
 13906  0002B9                     	ds	4
 13907  0002BD                     _ADC_Result_Scaling:
 13908                           	opt stack 0
 13909  0002BD                     	ds	4
 13910  0002C1                     _AVSS_ADC_Result:
 13911                           	opt stack 0
 13912  0002C1                     	ds	4
 13913  0002C5                     _TMR2_InterruptHandler:
 13914                           	opt stack 0
 13915  0002C5                     	ds	3
 13916  0002C8                     _TMR4_InterruptHandler:
 13917                           	opt stack 0
 13918  0002C8                     	ds	3
 13919  0002CB                     _INT0_InterruptHandler:
 13920                           	opt stack 0
 13921  0002CB                     	ds	3
 13922  0002CE                     _TMR5_InterruptHandler:
 13923                           	opt stack 0
 13924  0002CE                     	ds	3
 13925  0002D1                     _TMR7_InterruptHandler:
 13926                           	opt stack 0
 13927  0002D1                     	ds	3
 13928  0002D4                     _ADCC_ADTI_InterruptHandler:
 13929                           	opt stack 0
 13930  0002D4                     	ds	3
 13931  0002D7                     _EUSART2_RxDefaultInterruptHandler:
 13932                           	opt stack 0
 13933  0002D7                     	ds	3
 13934  0002DA                     _EUSART2_TxDefaultInterruptHandler:
 13935                           	opt stack 0
 13936  0002DA                     	ds	3
 13937  0002DD                     _errno:
 13938                           	opt stack 0
 13939  0002DD                     	ds	2
 13940  0002DF                     I2C1_MasterRead@trBlock:
 13941                           	opt stack 0
 13942  0002DF                     	ds	5
 13943  0002E4                     I2C1_MasterWrite@trBlock:
 13944                           	opt stack 0
 13945  0002E4                     	ds	5
 13946  0002E9                     _i2c1_tr_queue:
 13947                           	opt stack 0
 13948  0002E9                     	ds	5
 13949                           tblptru	equ	0xFF8
 13950                           tblptrh	equ	0xFF7
 13951                           tblptrl	equ	0xFF6
 13952                           tablat	equ	0xFF5
 13953                           postinc0	equ	0xFEE
 13954                           wreg	equ	0xFE8
 13955                           postdec1	equ	0xFE5
 13956                           fsr1l	equ	0xFE1
 13957                           
 13958                           	psect	dataBANK2
 13959  0002EE                     __pdataBANK2:
 13960                           	opt stack 0
 13961  0002EE                     getDeviceIDString@F17550:
 13962                           	opt stack 0
 13963  0002EE                     	ds	6
 13964  0002F4                     _Vpk_const:
 13965                           	opt stack 0
 13966  0002F4                     	ds	4
 13967  0002F8                     _Temp_ADC_Offset:
 13968                           	opt stack 0
 13969  0002F8                     	ds	4
 13970  0002FC                     _dimming_period:
 13971                           	opt stack 0
 13972  0002FC                     	ds	2
 13973                           tblptru	equ	0xFF8
 13974                           tblptrh	equ	0xFF7
 13975                           tblptrl	equ	0xFF6
 13976                           tablat	equ	0xFF5
 13977                           postinc0	equ	0xFEE
 13978                           wreg	equ	0xFE8
 13979                           postdec1	equ	0xFE5
 13980                           fsr1l	equ	0xFE1
 13981                           
 13982                           	psect	bssBANK3
 13983  000300                     __pbssBANK3:
 13984                           	opt stack 0
 13985  000300                     _eusart2RxBuffer:
 13986                           	opt stack 0
 13987  000300                     	ds	64
 13988  000340                     _OLED_RAM_Buffer:
 13989                           	opt stack 0
 13990  000340                     	ds	68
 13991  000384                     _line:
 13992                           	opt stack 0
 13993  000384                     	ds	64
 13994  0003C4                     ftoa@buf:
 13995                           	opt stack 0
 13996  0003C4                     	ds	17
 13997                           tblptru	equ	0xFF8
 13998                           tblptrh	equ	0xFF7
 13999                           tblptrl	equ	0xFF6
 14000                           tablat	equ	0xFF5
 14001                           postinc0	equ	0xFEE
 14002                           wreg	equ	0xFE8
 14003                           postdec1	equ	0xFE5
 14004                           fsr1l	equ	0xFE1
 14005                           
 14006                           	psect	dataBANK3
 14007  0003D5                     __pdataBANK3:
 14008                           	opt stack 0
 14009  0003D5                     getCauseOfResetStringSmall@strings:
 14010                           	opt stack 0
 14011  0003D5                     	ds	18
 14012  0003E7                     getCauseOfResetString@strings:
 14013                           	opt stack 0
 14014  0003E7                     	ds	18
 14015                           tblptru	equ	0xFF8
 14016                           tblptrh	equ	0xFF7
 14017                           tblptrl	equ	0xFF6
 14018                           tablat	equ	0xFF5
 14019                           postinc0	equ	0xFEE
 14020                           wreg	equ	0xFE8
 14021                           postdec1	equ	0xFE5
 14022                           fsr1l	equ	0xFE1
 14023                           
 14024                           	psect	bssBANK4
 14025  000400                     __pbssBANK4:
 14026                           	opt stack 0
 14027  000400                     _eusart2TxBuffer:
 14028                           	opt stack 0
 14029  000400                     	ds	128
 14030                           tblptru	equ	0xFF8
 14031                           tblptrh	equ	0xFF7
 14032                           tblptrl	equ	0xFF6
 14033                           tablat	equ	0xFF5
 14034                           postinc0	equ	0xFEE
 14035                           wreg	equ	0xFE8
 14036                           postdec1	equ	0xFE5
 14037                           fsr1l	equ	0xFE1
 14038                           
 14039                           	psect	cstackBANK4
 14040  000480                     __pcstackBANK4:
 14041                           	opt stack 0
 14042  000480                     terminal_textAttributes@foreground_color:
 14043                           	opt stack 0
 14044                           
 14045                           ; 1 bytes @ 0x0
 14046  000480                     	ds	1
 14047  000481                     terminal_textAttributes@output_buff:
 14048                           	opt stack 0
 14049                           
 14050                           ; 15 bytes @ 0x1
 14051  000481                     	ds	15
 14052  000490                     ringBufferLUT@line:
 14053                           	opt stack 0
 14054                           
 14055                           ; 2 bytes @ 0x10
 14056  000490                     	ds	2
 14057  000492                     ??_ringBufferLUT:
 14058                           
 14059                           ; 1 bytes @ 0x12
 14060  000492                     	ds	2
 14061  000494                     ringBufferLUT@arg_buff:
 14062                           	opt stack 0
 14063                           
 14064                           ; 3 bytes @ 0x14
 14065  000494                     	ds	3
 14066  000497                     ringBufferLUT@angle_degrees:
 14067                           	opt stack 0
 14068                           
 14069                           ; 4 bytes @ 0x17
 14070  000497                     	ds	4
 14071  00049B                     ringBufferLUT@max_current_print:
 14072                           	opt stack 0
 14073                           
 14074                           ; 4 bytes @ 0x1B
 14075  00049B                     	ds	4
 14076  00049F                     ringBufferLUT@max_Power_print:
 14077                           	opt stack 0
 14078                           
 14079                           ; 4 bytes @ 0x1F
 14080  00049F                     	ds	4
 14081  0004A3                     ringBufferLUT@max_voltage_print:
 14082                           	opt stack 0
 14083                           
 14084                           ; 4 bytes @ 0x23
 14085  0004A3                     	ds	4
 14086  0004A7                     ringBufferLUT@max_voltage_print_3728:
 14087                           	opt stack 0
 14088                           
 14089                           ; 4 bytes @ 0x27
 14090  0004A7                     	ds	4
 14091  0004AB                     ringBufferLUT@max_temp_print:
 14092                           	opt stack 0
 14093                           
 14094                           ; 4 bytes @ 0x2B
 14095  0004AB                     	ds	4
 14096  0004AF                     ringBufferLUT@max_voltage_print_3734:
 14097                           	opt stack 0
 14098                           
 14099                           ; 4 bytes @ 0x2F
 14100  0004AF                     	ds	4
 14101  0004B3                     ringBufferLUT@index:
 14102                           	opt stack 0
 14103                           
 14104                           ; 2 bytes @ 0x33
 14105  0004B3                     	ds	2
 14106  0004B5                     ringBufferLUT@percentage:
 14107                           	opt stack 0
 14108                           
 14109                           ; 2 bytes @ 0x35
 14110  0004B5                     	ds	2
 14111  0004B7                     ringBufferLUT@userID:
 14112                           	opt stack 0
 14113                           
 14114                           ; 2 bytes @ 0x37
 14115  0004B7                     	ds	2
 14116  0004B9                     ??_terminal_ringBufferPull:
 14117                           
 14118                           ; 1 bytes @ 0x39
 14119  0004B9                     	ds	3
 14120  0004BC                     terminal_ringBufferPull@charNumber:
 14121                           	opt stack 0
 14122                           
 14123                           ; 2 bytes @ 0x3C
 14124  0004BC                     	ds	2
 14125  0004BE                     terminal_ringBufferPull@index_3378:
 14126                           	opt stack 0
 14127                           
 14128                           ; 2 bytes @ 0x3E
 14129  0004BE                     	ds	2
 14130  0004C0                     terminal_ringBufferPull@index:
 14131                           	opt stack 0
 14132                           
 14133                           ; 2 bytes @ 0x40
 14134  0004C0                     	ds	2
 14135  0004C2                     ??_main:
 14136                           
 14137                           ; 1 bytes @ 0x42
 14138  0004C2                     	ds	2
 14139                           tblptru	equ	0xFF8
 14140                           tblptrh	equ	0xFF7
 14141                           tblptrl	equ	0xFF6
 14142                           tablat	equ	0xFF5
 14143                           postinc0	equ	0xFEE
 14144                           wreg	equ	0xFE8
 14145                           postdec1	equ	0xFE5
 14146                           fsr1l	equ	0xFE1
 14147                           
 14148                           	psect	cstackBANK3
 14149  0003F9                     __pcstackBANK3:
 14150                           	opt stack 0
 14151  0003F9                     printf@ap:
 14152                           	opt stack 0
 14153                           
 14154                           ; 2 bytes @ 0x0
 14155  0003F9                     	ds	2
 14156  0003FB                     printf@pb:
 14157                           	opt stack 0
 14158                           
 14159                           ; 5 bytes @ 0x2
 14160  0003FB                     	ds	5
 14161                           tblptru	equ	0xFF8
 14162                           tblptrh	equ	0xFF7
 14163                           tblptrl	equ	0xFF6
 14164                           tablat	equ	0xFF5
 14165                           postinc0	equ	0xFEE
 14166                           wreg	equ	0xFE8
 14167                           postdec1	equ	0xFE5
 14168                           fsr1l	equ	0xFE1
 14169                           
 14170                           	psect	cstackBANK2
 14171  000200                     __pcstackBANK2:
 14172                           	opt stack 0
 14173  000200                     ??_OLED_PutChar:
 14174  000200                     ?_strstr:
 14175                           	opt stack 0
 14176  000200                     ?___flneg:
 14177                           	opt stack 0
 14178  000200                     ?___llmod:
 14179                           	opt stack 0
 14180  000200                     OLED_Command@temp:
 14181                           	opt stack 0
 14182  000200                     strstr@s1:
 14183                           	opt stack 0
 14184  000200                     getUserID@initialOffset:
 14185                           	opt stack 0
 14186  000200                     ___flneg@f1:
 14187                           	opt stack 0
 14188  000200                     ___llmod@dividend:
 14189                           	opt stack 0
 14190  000200                     getDeviceIDString@strings:
 14191                           	opt stack 0
 14192                           
 14193                           ; 6 bytes @ 0x0
 14194  000200                     	ds	1
 14195  000201                     OLED_Command@length:
 14196                           	opt stack 0
 14197                           
 14198                           ; 1 bytes @ 0x1
 14199  000201                     	ds	1
 14200  000202                     OLED_Command@data_array:
 14201                           	opt stack 0
 14202  000202                     strstr@s2:
 14203                           	opt stack 0
 14204                           
 14205                           ; 2 bytes @ 0x2
 14206  000202                     	ds	2
 14207  000204                     ??_OLED_YX:
 14208  000204                     ?___fladd:
 14209                           	opt stack 0
 14210  000204                     getUserID@inputUserID:
 14211                           	opt stack 0
 14212  000204                     ___llmod@divisor:
 14213                           	opt stack 0
 14214  000204                     ___fladd@b:
 14215                           	opt stack 0
 14216  000204                     OLED_PutChar@data_array:
 14217                           	opt stack 0
 14218                           
 14219                           ; 9 bytes @ 0x4
 14220  000204                     	ds	1
 14221  000205                     getUserID@IDOffset:
 14222                           	opt stack 0
 14223  000205                     OLED_YX@Row:
 14224                           	opt stack 0
 14225                           
 14226                           ; 1 bytes @ 0x5
 14227  000205                     	ds	1
 14228  000206                     strcpy@to:
 14229                           	opt stack 0
 14230                           
 14231                           ; 2 bytes @ 0x6
 14232  000206                     	ds	2
 14233  000208                     strcpy@from:
 14234                           	opt stack 0
 14235  000208                     ___fladd@a:
 14236                           	opt stack 0
 14237                           
 14238                           ; 4 bytes @ 0x8
 14239  000208                     	ds	2
 14240  00020A                     strcpy@cp:
 14241                           	opt stack 0
 14242                           
 14243                           ; 2 bytes @ 0xA
 14244  00020A                     	ds	2
 14245  00020C                     ??___fladd:
 14246                           
 14247                           ; 1 bytes @ 0xC
 14248  00020C                     	ds	1
 14249  00020D                     OLED_PutChar@input_base:
 14250                           	opt stack 0
 14251                           
 14252                           ; 2 bytes @ 0xD
 14253  00020D                     	ds	2
 14254  00020F                     OLED_PutChar@length:
 14255                           	opt stack 0
 14256                           
 14257                           ; 1 bytes @ 0xF
 14258  00020F                     	ds	1
 14259  000210                     OLED_PutChar@ch:
 14260                           	opt stack 0
 14261                           
 14262                           ; 1 bytes @ 0x10
 14263  000210                     	ds	1
 14264  000211                     OLED_Clear@row:
 14265                           	opt stack 0
 14266  000211                     OLED_WriteString@s:
 14267                           	opt stack 0
 14268                           
 14269                           ; 2 bytes @ 0x11
 14270  000211                     	ds	2
 14271  000213                     OLED_Clear@col:
 14272                           	opt stack 0
 14273                           
 14274                           ; 2 bytes @ 0x13
 14275  000213                     	ds	1
 14276  000214                     ___fladd@signs:
 14277                           	opt stack 0
 14278                           
 14279                           ; 1 bytes @ 0x14
 14280  000214                     	ds	1
 14281  000215                     ___fladd@aexp:
 14282                           	opt stack 0
 14283  000215                     OLED_updateCallback@dev_id_str:
 14284                           	opt stack 0
 14285                           
 14286                           ; 16 bytes @ 0x15
 14287  000215                     	ds	1
 14288  000216                     ___fladd@bexp:
 14289                           	opt stack 0
 14290                           
 14291                           ; 1 bytes @ 0x16
 14292  000216                     	ds	1
 14293  000217                     ___fladd@grs:
 14294                           	opt stack 0
 14295                           
 14296                           ; 1 bytes @ 0x17
 14297  000217                     	ds	1
 14298  000218                     ?___fldiv:
 14299                           	opt stack 0
 14300  000218                     ?___flsub:
 14301                           	opt stack 0
 14302  000218                     ___flsub@b:
 14303                           	opt stack 0
 14304  000218                     ___fldiv@b:
 14305                           	opt stack 0
 14306                           
 14307                           ; 4 bytes @ 0x18
 14308  000218                     	ds	4
 14309  00021C                     ___flsub@a:
 14310                           	opt stack 0
 14311  00021C                     ___fldiv@a:
 14312                           	opt stack 0
 14313                           
 14314                           ; 4 bytes @ 0x1C
 14315  00021C                     	ds	4
 14316  000220                     ??___fldiv:
 14317                           
 14318                           ; 1 bytes @ 0x20
 14319  000220                     	ds	4
 14320  000224                     ___fldiv@sign:
 14321                           	opt stack 0
 14322                           
 14323                           ; 1 bytes @ 0x24
 14324  000224                     	ds	1
 14325  000225                     ___fldiv@rem:
 14326                           	opt stack 0
 14327  000225                     OLED_updateCallback@rev_id_str:
 14328                           	opt stack 0
 14329                           
 14330                           ; 5 bytes @ 0x25
 14331  000225                     	ds	4
 14332  000229                     ___fldiv@new_exp:
 14333                           	opt stack 0
 14334                           
 14335                           ; 2 bytes @ 0x29
 14336  000229                     	ds	2
 14337  00022B                     ___fldiv@grs:
 14338                           	opt stack 0
 14339                           
 14340                           ; 4 bytes @ 0x2B
 14341  00022B                     	ds	4
 14342  00022F                     ___fldiv@bexp:
 14343                           	opt stack 0
 14344                           
 14345                           ; 1 bytes @ 0x2F
 14346  00022F                     	ds	1
 14347  000230                     ___fldiv@aexp:
 14348                           	opt stack 0
 14349                           
 14350                           ; 1 bytes @ 0x30
 14351  000230                     	ds	1
 14352  000231                     ?___flmul:
 14353                           	opt stack 0
 14354  000231                     ___flmul@b:
 14355                           	opt stack 0
 14356                           
 14357                           ; 4 bytes @ 0x31
 14358  000231                     	ds	4
 14359  000235                     ___flmul@a:
 14360                           	opt stack 0
 14361                           
 14362                           ; 4 bytes @ 0x35
 14363  000235                     	ds	4
 14364  000239                     ??___flmul:
 14365                           
 14366                           ; 1 bytes @ 0x39
 14367  000239                     	ds	4
 14368  00023D                     ___flmul@sign:
 14369                           	opt stack 0
 14370                           
 14371                           ; 1 bytes @ 0x3D
 14372  00023D                     	ds	1
 14373  00023E                     ___flmul@aexp:
 14374                           	opt stack 0
 14375                           
 14376                           ; 1 bytes @ 0x3E
 14377  00023E                     	ds	1
 14378  00023F                     ___flmul@grs:
 14379                           	opt stack 0
 14380                           
 14381                           ; 4 bytes @ 0x3F
 14382  00023F                     	ds	4
 14383  000243                     ___flmul@bexp:
 14384                           	opt stack 0
 14385                           
 14386                           ; 1 bytes @ 0x43
 14387  000243                     	ds	1
 14388  000244                     ___flmul@prod:
 14389                           	opt stack 0
 14390                           
 14391                           ; 4 bytes @ 0x44
 14392  000244                     	ds	4
 14393  000248                     ___flmul@temp:
 14394                           	opt stack 0
 14395                           
 14396                           ; 2 bytes @ 0x48
 14397  000248                     	ds	2
 14398  00024A                     ?_fround:
 14399                           	opt stack 0
 14400  00024A                     ?_scale:
 14401                           	opt stack 0
 14402                           
 14403                           ; 4 bytes @ 0x4A
 14404  00024A                     	ds	4
 14405  00024E                     _fround$5589:
 14406                           	opt stack 0
 14407  00024E                     _scale$5590:
 14408                           	opt stack 0
 14409                           
 14410                           ; 4 bytes @ 0x4E
 14411  00024E                     	ds	4
 14412  000252                     scale@scl:
 14413                           	opt stack 0
 14414  000252                     _fround$5588:
 14415                           	opt stack 0
 14416                           
 14417                           ; 4 bytes @ 0x52
 14418  000252                     	ds	1
 14419  000253                     ?___fltol:
 14420                           	opt stack 0
 14421  000253                     ___fltol@f1:
 14422                           	opt stack 0
 14423                           
 14424                           ; 4 bytes @ 0x53
 14425  000253                     	ds	3
 14426  000256                     fround@prec:
 14427                           	opt stack 0
 14428                           
 14429                           ; 1 bytes @ 0x56
 14430  000256                     	ds	1
 14431  000257                     ??___fltol:
 14432                           
 14433                           ; 1 bytes @ 0x57
 14434  000257                     	ds	4
 14435  00025B                     ?__doprnt:
 14436                           	opt stack 0
 14437  00025B                     __doprnt@pb:
 14438                           	opt stack 0
 14439                           
 14440                           ; 2 bytes @ 0x5B
 14441  00025B                     	ds	2
 14442  00025D                     __doprnt@f:
 14443                           	opt stack 0
 14444                           
 14445                           ; 2 bytes @ 0x5D
 14446  00025D                     	ds	2
 14447  00025F                     __doprnt@ap:
 14448                           	opt stack 0
 14449                           
 14450                           ; 2 bytes @ 0x5F
 14451  00025F                     	ds	2
 14452  000261                     ??__doprnt:
 14453                           
 14454                           ; 1 bytes @ 0x61
 14455  000261                     	ds	6
 14456  000267                     __doprnt$5591:
 14457                           	opt stack 0
 14458                           
 14459                           ; 4 bytes @ 0x67
 14460  000267                     	ds	4
 14461  00026B                     __doprnt@idx:
 14462                           	opt stack 0
 14463                           
 14464                           ; 1 bytes @ 0x6B
 14465  00026B                     	ds	1
 14466  00026C                     __doprnt@cp:
 14467                           	opt stack 0
 14468                           
 14469                           ; 2 bytes @ 0x6C
 14470  00026C                     	ds	2
 14471  00026E                     __doprnt@len:
 14472                           	opt stack 0
 14473                           
 14474                           ; 2 bytes @ 0x6E
 14475  00026E                     	ds	2
 14476  000270                     __doprnt@exp:
 14477                           	opt stack 0
 14478                           
 14479                           ; 2 bytes @ 0x70
 14480  000270                     	ds	2
 14481  000272                     __doprnt@tmpval:
 14482                           	opt stack 0
 14483                           
 14484                           ; 4 bytes @ 0x72
 14485  000272                     	ds	4
 14486  000276                     __doprnt@fval:
 14487                           	opt stack 0
 14488                           
 14489                           ; 4 bytes @ 0x76
 14490  000276                     	ds	4
 14491  00027A                     __doprnt@val:
 14492                           	opt stack 0
 14493                           
 14494                           ; 4 bytes @ 0x7A
 14495  00027A                     	ds	4
 14496  00027E                     __doprnt@width:
 14497                           	opt stack 0
 14498                           
 14499                           ; 2 bytes @ 0x7E
 14500  00027E                     	ds	2
 14501  000280                     __doprnt@flag:
 14502                           	opt stack 0
 14503                           
 14504                           ; 2 bytes @ 0x80
 14505  000280                     	ds	2
 14506  000282                     __doprnt@prec:
 14507                           	opt stack 0
 14508                           
 14509                           ; 2 bytes @ 0x82
 14510  000282                     	ds	2
 14511  000284                     __doprnt@c:
 14512                           	opt stack 0
 14513                           
 14514                           ; 1 bytes @ 0x84
 14515  000284                     	ds	1
 14516  000285                     ?_printf:
 14517                           	opt stack 0
 14518  000285                     printf@f:
 14519                           	opt stack 0
 14520                           
 14521                           ; 2 bytes @ 0x85
 14522  000285                     	ds	10
 14523  00028F                     terminal_textAttributes@background_color:
 14524                           	opt stack 0
 14525                           
 14526                           ; 1 bytes @ 0x8F
 14527  00028F                     	ds	1
 14528  000290                     terminal_textAttributes@input_attribute:
 14529                           	opt stack 0
 14530                           
 14531                           ; 1 bytes @ 0x90
 14532  000290                     	ds	1
 14533                           tblptru	equ	0xFF8
 14534                           tblptrh	equ	0xFF7
 14535                           tblptrl	equ	0xFF6
 14536                           tablat	equ	0xFF5
 14537                           postinc0	equ	0xFEE
 14538                           wreg	equ	0xFE8
 14539                           postdec1	equ	0xFE5
 14540                           fsr1l	equ	0xFE1
 14541                           
 14542                           	psect	cstackBANK1
 14543  000100                     __pcstackBANK1:
 14544                           	opt stack 0
 14545  000100                     ??_heartbeatTimerCallback:
 14546  000100                     ?i1_getCauseOfResetStringSmall:
 14547                           	opt stack 0
 14548  000100                     ADCC_StartConversion@channel:
 14549                           	opt stack 0
 14550  000100                     TMR7_WriteTimer@timerVal:
 14551                           	opt stack 0
 14552  000100                     i1I2C1_MasterTRBInsert@ptrb_list:
 14553                           	opt stack 0
 14554  000100                     i1I2C1_MasterWriteTRBBuild@ptrb:
 14555                           	opt stack 0
 14556  000100                     i1memmove@d1:
 14557                           	opt stack 0
 14558  000100                     i1FLASH_ReadByte@flashAddr:
 14559                           	opt stack 0
 14560                           
 14561                           ; 4 bytes @ 0x0
 14562  000100                     	ds	1
 14563  000101                     
 14564                           ; 1 bytes @ 0x1
 14565  000101                     	ds	1
 14566  000102                     i1getCauseOfResetStringSmall@r:
 14567                           	opt stack 0
 14568  000102                     i1I2C1_MasterTRBInsert@pflag:
 14569                           	opt stack 0
 14570  000102                     i1I2C1_MasterWriteTRBBuild@pdata:
 14571                           	opt stack 0
 14572  000102                     i1memmove@s1:
 14573                           	opt stack 0
 14574                           
 14575                           ; 2 bytes @ 0x2
 14576  000102                     	ds	2
 14577  000104                     ?i1_FLASH_ReadWord:
 14578                           	opt stack 0
 14579  000104                     i1I2C1_MasterWriteTRBBuild@length:
 14580                           	opt stack 0
 14581  000104                     i1memmove@n:
 14582                           	opt stack 0
 14583  000104                     i1FLASH_ReadWord@flashAddr:
 14584                           	opt stack 0
 14585                           
 14586                           ; 4 bytes @ 0x4
 14587  000104                     	ds	1
 14588  000105                     i1I2C1_MasterTRBInsert@count:
 14589                           	opt stack 0
 14590  000105                     i1I2C1_MasterWriteTRBBuild@address:
 14591                           	opt stack 0
 14592                           
 14593                           ; 2 bytes @ 0x5
 14594  000105                     	ds	1
 14595  000106                     ??i1_memmove:
 14596                           
 14597                           ; 1 bytes @ 0x6
 14598  000106                     	ds	1
 14599  000107                     ??i1_I2C1_MasterWriteTRBBuild:
 14600                           
 14601                           ; 1 bytes @ 0x7
 14602  000107                     	ds	1
 14603  000108                     ??i1_FLASH_ReadWord:
 14604  000108                     i1memmove@d:
 14605                           	opt stack 0
 14606                           
 14607                           ; 2 bytes @ 0x8
 14608  000108                     	ds	1
 14609  000109                     i1I2C1_MasterWrite@pdata:
 14610                           	opt stack 0
 14611                           
 14612                           ; 2 bytes @ 0x9
 14613  000109                     	ds	1
 14614  00010A                     i1memmove@s:
 14615                           	opt stack 0
 14616                           
 14617                           ; 2 bytes @ 0xA
 14618  00010A                     	ds	1
 14619  00010B                     ??i1_getMajorRevisionID:
 14620  00010B                     ?i1_getDeviceID:
 14621                           	opt stack 0
 14622  00010B                     i1I2C1_MasterWrite@length:
 14623                           	opt stack 0
 14624  00010B                     i1getMinorRevisionID@REVID_RAW:
 14625                           	opt stack 0
 14626                           
 14627                           ; 2 bytes @ 0xB
 14628  00010B                     	ds	1
 14629  00010C                     i1I2C1_MasterWrite@address:
 14630                           	opt stack 0
 14631                           
 14632                           ; 2 bytes @ 0xC
 14633  00010C                     	ds	1
 14634  00010D                     ?i1_getDeviceIDString:
 14635                           	opt stack 0
 14636  00010D                     i1getDeviceIDString@inputDevID:
 14637                           	opt stack 0
 14638                           
 14639                           ; 2 bytes @ 0xD
 14640  00010D                     	ds	1
 14641  00010E                     i1I2C1_MasterWrite@pflag:
 14642                           	opt stack 0
 14643  00010E                     i1getMajorRevisionID@REVID_RAW:
 14644                           	opt stack 0
 14645                           
 14646                           ; 2 bytes @ 0xE
 14647  00010E                     	ds	1
 14648  00010F                     ??i1_getDeviceIDString:
 14649                           
 14650                           ; 1 bytes @ 0xF
 14651  00010F                     	ds	1
 14652  000110                     ??i1_OLED_PutChar:
 14653  000110                     i1OLED_Command@data_array:
 14654                           	opt stack 0
 14655                           
 14656                           ; 2 bytes @ 0x10
 14657  000110                     	ds	1
 14658  000111                     i1getDeviceIDString@strings:
 14659                           	opt stack 0
 14660                           
 14661                           ; 6 bytes @ 0x11
 14662  000111                     	ds	1
 14663  000112                     i1OLED_Command@temp:
 14664                           	opt stack 0
 14665                           
 14666                           ; 1 bytes @ 0x12
 14667  000112                     	ds	1
 14668  000113                     i1OLED_Command@length:
 14669                           	opt stack 0
 14670                           
 14671                           ; 1 bytes @ 0x13
 14672  000113                     	ds	1
 14673  000114                     i1OLED_YX@Column:
 14674                           	opt stack 0
 14675  000114                     i1OLED_PutChar@data_array:
 14676                           	opt stack 0
 14677                           
 14678                           ; 9 bytes @ 0x14
 14679  000114                     	ds	1
 14680  000115                     ??i1_OLED_YX:
 14681                           
 14682                           ; 1 bytes @ 0x15
 14683  000115                     	ds	1
 14684  000116                     i1OLED_YX@Row:
 14685                           	opt stack 0
 14686                           
 14687                           ; 1 bytes @ 0x16
 14688  000116                     	ds	1
 14689  000117                     i1strcpy@to:
 14690                           	opt stack 0
 14691                           
 14692                           ; 2 bytes @ 0x17
 14693  000117                     	ds	2
 14694  000119                     i1strcpy@from:
 14695                           	opt stack 0
 14696                           
 14697                           ; 2 bytes @ 0x19
 14698  000119                     	ds	2
 14699  00011B                     i1strcpy@cp:
 14700                           	opt stack 0
 14701                           
 14702                           ; 2 bytes @ 0x1B
 14703  00011B                     	ds	2
 14704  00011D                     i1OLED_PutChar@input_base:
 14705                           	opt stack 0
 14706                           
 14707                           ; 2 bytes @ 0x1D
 14708  00011D                     	ds	2
 14709  00011F                     i1OLED_PutChar@length:
 14710                           	opt stack 0
 14711                           
 14712                           ; 1 bytes @ 0x1F
 14713  00011F                     	ds	1
 14714  000120                     i1OLED_PutChar@ch:
 14715                           	opt stack 0
 14716                           
 14717                           ; 1 bytes @ 0x20
 14718  000120                     	ds	1
 14719  000121                     i1OLED_Clear@row:
 14720                           	opt stack 0
 14721  000121                     i1OLED_WriteString@s:
 14722                           	opt stack 0
 14723                           
 14724                           ; 2 bytes @ 0x21
 14725  000121                     	ds	2
 14726  000123                     i1OLED_Clear@col:
 14727                           	opt stack 0
 14728                           
 14729                           ; 2 bytes @ 0x23
 14730  000123                     	ds	2
 14731  000125                     i1OLED_updateCallback@dev_id_str:
 14732                           	opt stack 0
 14733                           
 14734                           ; 16 bytes @ 0x25
 14735  000125                     	ds	16
 14736  000135                     i1OLED_updateCallback@rev_id_str:
 14737                           	opt stack 0
 14738                           
 14739                           ; 5 bytes @ 0x35
 14740  000135                     	ds	5
 14741  00013A                     ??_INTERRUPT_InterruptManagerLow:
 14742                           
 14743                           ; 1 bytes @ 0x3A
 14744  00013A                     	ds	21
 14745  00014F                     ??_isdigit:
 14746  00014F                     ?_getCauseOfResetStringSmall:
 14747                           	opt stack 0
 14748  00014F                     ?_strlen:
 14749                           	opt stack 0
 14750  00014F                     ?_strcmp:
 14751                           	opt stack 0
 14752  00014F                     ?_getCauseOfResetString:
 14753                           	opt stack 0
 14754  00014F                     ?_strchr:
 14755                           	opt stack 0
 14756  00014F                     ?___wmul:
 14757                           	opt stack 0
 14758  00014F                     ?___awmod:
 14759                           	opt stack 0
 14760  00014F                     ?__tdiv_to_l_:
 14761                           	opt stack 0
 14762  00014F                     ?__div_to_l_:
 14763                           	opt stack 0
 14764  00014F                     ?___lldiv:
 14765                           	opt stack 0
 14766  00014F                     ?___xxtofl:
 14767                           	opt stack 0
 14768  00014F                     EUSART2_Read@readValue:
 14769                           	opt stack 0
 14770  00014F                     EUSART2_Write@txData:
 14771                           	opt stack 0
 14772  00014F                     getCauseOfReset@return_reset_cause:
 14773                           	opt stack 0
 14774  00014F                     DATAEE_WriteByte@bAdd:
 14775                           	opt stack 0
 14776  00014F                     DATAEE_ReadByte@bAdd:
 14777                           	opt stack 0
 14778  00014F                     I2C1_MasterTRBInsert@ptrb_list:
 14779                           	opt stack 0
 14780  00014F                     I2C1_MasterWriteTRBBuild@ptrb:
 14781                           	opt stack 0
 14782  00014F                     ___wmul@multiplier:
 14783                           	opt stack 0
 14784  00014F                     ___awmod@dividend:
 14785                           	opt stack 0
 14786  00014F                     memmove@d1:
 14787                           	opt stack 0
 14788  00014F                     strcat@to:
 14789                           	opt stack 0
 14790  00014F                     strcmp@s1:
 14791                           	opt stack 0
 14792  00014F                     strlen@s:
 14793                           	opt stack 0
 14794  00014F                     strncpy@to:
 14795                           	opt stack 0
 14796  00014F                     strchr@ptr:
 14797                           	opt stack 0
 14798  00014F                     TMR6_SetInterruptHandler@InterruptHandler:
 14799                           	opt stack 0
 14800  00014F                     EUSART2_SetTxInterruptHandler@interruptHandler:
 14801                           	opt stack 0
 14802  00014F                     EUSART2_SetRxInterruptHandler@interruptHandler:
 14803                           	opt stack 0
 14804  00014F                     ADCC_SetADTIInterruptHandler@InterruptHandler:
 14805                           	opt stack 0
 14806  00014F                     TMR7_SetInterruptHandler@InterruptHandler:
 14807                           	opt stack 0
 14808  00014F                     TMR5_SetInterruptHandler@InterruptHandler:
 14809                           	opt stack 0
 14810  00014F                     INT0_SetInterruptHandler@InterruptHandler:
 14811                           	opt stack 0
 14812  00014F                     TMR4_SetInterruptHandler@InterruptHandler:
 14813                           	opt stack 0
 14814  00014F                     TMR2_SetInterruptHandler@InterruptHandler:
 14815                           	opt stack 0
 14816  00014F                     __tdiv_to_l_@f1:
 14817                           	opt stack 0
 14818  00014F                     FLASH_ReadByte@flashAddr:
 14819                           	opt stack 0
 14820  00014F                     __div_to_l_@f1:
 14821                           	opt stack 0
 14822  00014F                     ___flge@ff1:
 14823                           	opt stack 0
 14824  00014F                     ___lldiv@dividend:
 14825                           	opt stack 0
 14826  00014F                     ___xxtofl@val:
 14827                           	opt stack 0
 14828                           
 14829                           ; 4 bytes @ 0x4F
 14830  00014F                     	ds	1
 14831  000150                     putch@txData:
 14832                           	opt stack 0
 14833  000150                     _isdigit$4697:
 14834                           	opt stack 0
 14835                           
 14836                           ; 1 bytes @ 0x50
 14837  000150                     	ds	1
 14838  000151                     ??_strlen:
 14839  000151                     ?_readDoubleFromEEPROM:
 14840                           	opt stack 0
 14841  000151                     DATAEE_WriteByte@bData:
 14842                           	opt stack 0
 14843  000151                     getCauseOfResetString@r:
 14844                           	opt stack 0
 14845  000151                     getCauseOfResetStringSmall@r:
 14846                           	opt stack 0
 14847  000151                     isdigit@c:
 14848                           	opt stack 0
 14849  000151                     I2C1_MasterTRBInsert@pflag:
 14850                           	opt stack 0
 14851  000151                     I2C1_MasterWriteTRBBuild@pdata:
 14852                           	opt stack 0
 14853  000151                     readDoubleFromEEPROM@starting_address:
 14854                           	opt stack 0
 14855  000151                     ___wmul@multiplicand:
 14856                           	opt stack 0
 14857  000151                     ___awmod@divisor:
 14858                           	opt stack 0
 14859  000151                     memmove@s1:
 14860                           	opt stack 0
 14861  000151                     strcat@from:
 14862                           	opt stack 0
 14863  000151                     strcmp@s2:
 14864                           	opt stack 0
 14865  000151                     strncpy@from:
 14866                           	opt stack 0
 14867  000151                     strchr@chr:
 14868                           	opt stack 0
 14869                           
 14870                           ; 2 bytes @ 0x51
 14871  000151                     	ds	1
 14872  000152                     ??_TMR7_Initialize:
 14873  000152                     ??_TMR5_Initialize:
 14874  000152                     DATAEE_WriteByte@GIEBitValue:
 14875                           	opt stack 0
 14876  000152                     __tdiv_to_l_@f2:
 14877                           	opt stack 0
 14878                           
 14879                           ; 3 bytes @ 0x52
 14880  000152                     	ds	1
 14881  000153                     ??_strcmp:
 14882  000153                     ??___xxtofl:
 14883  000153                     ?_FLASH_ReadWord:
 14884                           	opt stack 0
 14885  000153                     I2C1_MasterWriteTRBBuild@length:
 14886                           	opt stack 0
 14887  000153                     ___awmod@counter:
 14888                           	opt stack 0
 14889  000153                     ___wmul@product:
 14890                           	opt stack 0
 14891  000153                     memmove@n:
 14892                           	opt stack 0
 14893  000153                     strcat@cp:
 14894                           	opt stack 0
 14895  000153                     strlen@cp:
 14896                           	opt stack 0
 14897  000153                     strncpy@size:
 14898                           	opt stack 0
 14899  000153                     FLASH_ReadWord@flashAddr:
 14900                           	opt stack 0
 14901  000153                     writeDoubleToEEPROM@input_double:
 14902                           	opt stack 0
 14903  000153                     __div_to_l_@f2:
 14904                           	opt stack 0
 14905  000153                     ___flge@ff2:
 14906                           	opt stack 0
 14907  000153                     ___lldiv@divisor:
 14908                           	opt stack 0
 14909                           
 14910                           ; 4 bytes @ 0x53
 14911  000153                     	ds	1
 14912  000154                     I2C1_MasterTRBInsert@count:
 14913                           	opt stack 0
 14914  000154                     ___awmod@sign:
 14915                           	opt stack 0
 14916  000154                     strcmp@r:
 14917                           	opt stack 0
 14918  000154                     I2C1_MasterWriteTRBBuild@address:
 14919                           	opt stack 0
 14920                           
 14921                           ; 2 bytes @ 0x54
 14922  000154                     	ds	1
 14923  000155                     ??_memmove:
 14924  000155                     ??__tdiv_to_l_:
 14925  000155                     ?_atoi:
 14926                           	opt stack 0
 14927  000155                     ?_strncmp:
 14928                           	opt stack 0
 14929  000155                     ?___awdiv:
 14930                           	opt stack 0
 14931  000155                     atoi@s:
 14932                           	opt stack 0
 14933  000155                     ___awdiv@dividend:
 14934                           	opt stack 0
 14935  000155                     strncpy@cp:
 14936                           	opt stack 0
 14937  000155                     strncmp@s1:
 14938                           	opt stack 0
 14939  000155                     readDoubleFromEEPROM@output_data:
 14940                           	opt stack 0
 14941                           
 14942                           ; 4 bytes @ 0x55
 14943  000155                     	ds	1
 14944  000156                     ??_I2C1_MasterWriteTRBBuild:
 14945                           
 14946                           ; 1 bytes @ 0x56
 14947  000156                     	ds	1
 14948  000157                     ??_atoi:
 14949  000157                     ??_FLASH_ReadWord:
 14950  000157                     ??___flge:
 14951  000157                     ___xxtofl@sign:
 14952                           	opt stack 0
 14953  000157                     writeDoubleToEEPROM@starting_address:
 14954                           	opt stack 0
 14955  000157                     ___awdiv@divisor:
 14956                           	opt stack 0
 14957  000157                     memmove@d:
 14958                           	opt stack 0
 14959  000157                     strncmp@s2:
 14960                           	opt stack 0
 14961  000157                     __div_to_l_@quot:
 14962                           	opt stack 0
 14963  000157                     ___lldiv@quotient:
 14964                           	opt stack 0
 14965                           
 14966                           ; 4 bytes @ 0x57
 14967  000157                     	ds	1
 14968  000158                     ___xxtofl@exp:
 14969                           	opt stack 0
 14970  000158                     I2C1_MasterWrite@pdata:
 14971                           	opt stack 0
 14972  000158                     __tdiv_to_l_@quot:
 14973                           	opt stack 0
 14974                           
 14975                           ; 4 bytes @ 0x58
 14976  000158                     	ds	1
 14977  000159                     atoi@sign:
 14978                           	opt stack 0
 14979  000159                     ___awdiv@counter:
 14980                           	opt stack 0
 14981  000159                     readDoubleFromEEPROM@byte_index:
 14982                           	opt stack 0
 14983  000159                     memmove@s:
 14984                           	opt stack 0
 14985  000159                     strncmp@len:
 14986                           	opt stack 0
 14987  000159                     writeDoubleToEEPROM@input_data:
 14988                           	opt stack 0
 14989  000159                     ___xxtofl@arg:
 14990                           	opt stack 0
 14991                           
 14992                           ; 4 bytes @ 0x59
 14993  000159                     	ds	1
 14994  00015A                     ??_getMajorRevisionID:
 14995  00015A                     ?_getDeviceID:
 14996                           	opt stack 0
 14997  00015A                     ?_getUserID:
 14998                           	opt stack 0
 14999  00015A                     I2C1_MasterWrite@length:
 15000                           	opt stack 0
 15001  00015A                     ___awdiv@sign:
 15002                           	opt stack 0
 15003  00015A                     getMinorRevisionID@REVID_RAW:
 15004                           	opt stack 0
 15005  00015A                     atoi@a:
 15006                           	opt stack 0
 15007                           
 15008                           ; 2 bytes @ 0x5A
 15009  00015A                     	ds	1
 15010  00015B                     ??_strncmp:
 15011  00015B                     __div_to_l_@cntr:
 15012                           	opt stack 0
 15013  00015B                     ___lldiv@counter:
 15014                           	opt stack 0
 15015  00015B                     I2C1_MasterWrite@address:
 15016                           	opt stack 0
 15017  00015B                     ___awdiv@quotient:
 15018                           	opt stack 0
 15019                           
 15020                           ; 2 bytes @ 0x5B
 15021  00015B                     	ds	1
 15022  00015C                     ?_getDeviceIDString:
 15023                           	opt stack 0
 15024  00015C                     __div_to_l_@exp1:
 15025                           	opt stack 0
 15026  00015C                     __tdiv_to_l_@cntr:
 15027                           	opt stack 0
 15028  00015C                     ___llmod@counter:
 15029                           	opt stack 0
 15030  00015C                     getDeviceIDString@inputDevID:
 15031                           	opt stack 0
 15032                           
 15033                           ; 2 bytes @ 0x5C
 15034  00015C                     	ds	1
 15035  00015D                     ___fltol@sign1:
 15036                           	opt stack 0
 15037  00015D                     __tdiv_to_l_@exp1:
 15038                           	opt stack 0
 15039  00015D                     I2C1_MasterWrite@pflag:
 15040                           	opt stack 0
 15041  00015D                     getMajorRevisionID@REVID_RAW:
 15042                           	opt stack 0
 15043  00015D                     writeDoubleToEEPROM@byte_index:
 15044                           	opt stack 0
 15045                           
 15046                           ; 2 bytes @ 0x5D
 15047  00015D                     	ds	1
 15048  00015E                     ??_getDeviceIDString:
 15049  00015E                     ___fltol@exp1:
 15050                           	opt stack 0
 15051                           
 15052                           ; 1 bytes @ 0x5E
 15053  00015E                     	ds	1
 15054  00015F                     OLED_YX@Column:
 15055                           	opt stack 0
 15056                           
 15057                           ; 1 bytes @ 0x5F
 15058  00015F                     	ds	1
 15059  000160                     tblptru	equ	0xFF8
 15060                           tblptrh	equ	0xFF7
 15061                           tblptrl	equ	0xFF6
 15062                           tablat	equ	0xFF5
 15063                           postinc0	equ	0xFEE
 15064                           wreg	equ	0xFE8
 15065                           postdec1	equ	0xFE5
 15066                           fsr1l	equ	0xFE1
 15067                           
 15068                           ; 1 bytes @ 0x60
 15069                           
 15070                           	psect	cstackBANK0
 15071  000060                     __pcstackBANK0:
 15072                           	opt stack 0
 15073  000060                     ??i2___fladd:
 15074                           
 15075                           ; 1 bytes @ 0x0
 15076  000060                     	ds	8
 15077  000068                     i2___fladd@signs:
 15078                           	opt stack 0
 15079                           
 15080                           ; 1 bytes @ 0x8
 15081  000068                     	ds	1
 15082  000069                     i2___fladd@aexp:
 15083                           	opt stack 0
 15084                           
 15085                           ; 1 bytes @ 0x9
 15086  000069                     	ds	1
 15087  00006A                     i2___fladd@bexp:
 15088                           	opt stack 0
 15089                           
 15090                           ; 1 bytes @ 0xA
 15091  00006A                     	ds	1
 15092  00006B                     i2___fladd@grs:
 15093                           	opt stack 0
 15094                           
 15095                           ; 1 bytes @ 0xB
 15096  00006B                     	ds	1
 15097  00006C                     ?_sqrt:
 15098                           	opt stack 0
 15099  00006C                     ?_eval_poly:
 15100                           	opt stack 0
 15101  00006C                     ?i2___fltol:
 15102                           	opt stack 0
 15103  00006C                     eval_poly@x:
 15104                           	opt stack 0
 15105  00006C                     sqrt@a:
 15106                           	opt stack 0
 15107  00006C                     i2___fltol@f1:
 15108                           	opt stack 0
 15109                           
 15110                           ; 4 bytes @ 0xC
 15111  00006C                     	ds	4
 15112  000070                     ??_sqrt:
 15113  000070                     ??i2___fltol:
 15114  000070                     eval_poly@d:
 15115                           	opt stack 0
 15116                           
 15117                           ; 2 bytes @ 0x10
 15118  000070                     	ds	2
 15119  000072                     eval_poly@n:
 15120                           	opt stack 0
 15121                           
 15122                           ; 2 bytes @ 0x12
 15123  000072                     	ds	2
 15124  000074                     ??_eval_poly:
 15125  000074                     sqrt@sign:
 15126                           	opt stack 0
 15127  000074                     i2___fltol@sign1:
 15128                           	opt stack 0
 15129                           
 15130                           ; 1 bytes @ 0x14
 15131  000074                     	ds	1
 15132  000075                     sqrt@i:
 15133                           	opt stack 0
 15134  000075                     i2___fltol@exp1:
 15135                           	opt stack 0
 15136                           
 15137                           ; 1 bytes @ 0x15
 15138  000075                     	ds	1
 15139  000076                     ?_abs:
 15140                           	opt stack 0
 15141  000076                     ?_floor:
 15142                           	opt stack 0
 15143  000076                     abs@a:
 15144                           	opt stack 0
 15145  000076                     sqrt@tfrac:
 15146                           	opt stack 0
 15147  000076                     floor@x:
 15148                           	opt stack 0
 15149                           
 15150                           ; 4 bytes @ 0x16
 15151  000076                     	ds	2
 15152  000078                     ??_abs:
 15153  000078                     eval_poly@res:
 15154                           	opt stack 0
 15155                           
 15156                           ; 4 bytes @ 0x18
 15157  000078                     	ds	2
 15158  00007A                     sqrt@p:
 15159                           	opt stack 0
 15160  00007A                     floor@i:
 15161                           	opt stack 0
 15162                           
 15163                           ; 4 bytes @ 0x1A
 15164  00007A                     	ds	1
 15165  00007B                     sqrt@grs:
 15166                           	opt stack 0
 15167                           
 15168                           ; 4 bytes @ 0x1B
 15169  00007B                     	ds	1
 15170  00007C                     ?_atan:
 15171                           	opt stack 0
 15172  00007C                     atan@f:
 15173                           	opt stack 0
 15174                           
 15175                           ; 4 bytes @ 0x1C
 15176  00007C                     	ds	2
 15177  00007E                     floor@expon:
 15178                           	opt stack 0
 15179                           
 15180                           ; 2 bytes @ 0x1E
 15181  00007E                     	ds	1
 15182  00007F                     sqrt@exp:
 15183                           	opt stack 0
 15184                           
 15185                           ; 2 bytes @ 0x1F
 15186  00007F                     	ds	1
 15187  000080                     ?i2___flsub:
 15188                           	opt stack 0
 15189  000080                     atan@y:
 15190                           	opt stack 0
 15191  000080                     i2___flsub@b:
 15192                           	opt stack 0
 15193                           
 15194                           ; 4 bytes @ 0x20
 15195  000080                     	ds	1
 15196  000081                     sqrt@root:
 15197                           	opt stack 0
 15198                           
 15199                           ; 4 bytes @ 0x21
 15200  000081                     	ds	3
 15201  000084                     atan@x:
 15202                           	opt stack 0
 15203  000084                     i2___flsub@a:
 15204                           	opt stack 0
 15205                           
 15206                           ; 4 bytes @ 0x24
 15207  000084                     	ds	1
 15208  000085                     sqrt@frac:
 15209                           	opt stack 0
 15210                           
 15211                           ; 4 bytes @ 0x25
 15212  000085                     	ds	3
 15213  000088                     ?i2__doprnt:
 15214                           	opt stack 0
 15215  000088                     ?_sin:
 15216                           	opt stack 0
 15217  000088                     atan@recip:
 15218                           	opt stack 0
 15219  000088                     i2__doprnt@pb:
 15220                           	opt stack 0
 15221  000088                     sin@f:
 15222                           	opt stack 0
 15223                           
 15224                           ; 4 bytes @ 0x28
 15225  000088                     	ds	1
 15226  000089                     atan@val_squared:
 15227                           	opt stack 0
 15228                           
 15229                           ; 4 bytes @ 0x29
 15230  000089                     	ds	1
 15231  00008A                     i2__doprnt@f:
 15232                           	opt stack 0
 15233                           
 15234                           ; 2 bytes @ 0x2A
 15235  00008A                     	ds	2
 15236  00008C                     i2__doprnt@ap:
 15237                           	opt stack 0
 15238  00008C                     sin@y:
 15239                           	opt stack 0
 15240                           
 15241                           ; 4 bytes @ 0x2C
 15242  00008C                     	ds	1
 15243  00008D                     atan@val:
 15244                           	opt stack 0
 15245                           
 15246                           ; 4 bytes @ 0x2D
 15247  00008D                     	ds	1
 15248  00008E                     ??i2__doprnt:
 15249                           
 15250                           ; 1 bytes @ 0x2E
 15251  00008E                     	ds	2
 15252  000090                     _sin$5958:
 15253                           	opt stack 0
 15254                           
 15255                           ; 4 bytes @ 0x30
 15256  000090                     	ds	1
 15257  000091                     ?_asin:
 15258                           	opt stack 0
 15259  000091                     asin@x:
 15260                           	opt stack 0
 15261                           
 15262                           ; 4 bytes @ 0x31
 15263  000091                     	ds	3
 15264  000094                     sin@x2:
 15265                           	opt stack 0
 15266  000094                     i2__doprnt$5962:
 15267                           	opt stack 0
 15268                           
 15269                           ; 4 bytes @ 0x34
 15270  000094                     	ds	1
 15271  000095                     asin@sgn:
 15272                           	opt stack 0
 15273                           
 15274                           ; 4 bytes @ 0x35
 15275  000095                     	ds	3
 15276  000098                     sin@sgn:
 15277                           	opt stack 0
 15278  000098                     i2__doprnt@idx:
 15279                           	opt stack 0
 15280                           
 15281                           ; 1 bytes @ 0x38
 15282  000098                     	ds	1
 15283  000099                     ?_currentMeasuredToPeak:
 15284                           	opt stack 0
 15285  000099                     i2__doprnt@cp:
 15286                           	opt stack 0
 15287  000099                     currentMeasuredToPeak@Measured:
 15288                           	opt stack 0
 15289  000099                     _asin$5957:
 15290                           	opt stack 0
 15291                           
 15292                           ; 4 bytes @ 0x39
 15293  000099                     	ds	2
 15294  00009B                     i2__doprnt@len:
 15295                           	opt stack 0
 15296                           
 15297                           ; 2 bytes @ 0x3B
 15298  00009B                     	ds	2
 15299  00009D                     i2__doprnt@exp:
 15300                           	opt stack 0
 15301  00009D                     currentMeasuredToPeak@Angle:
 15302                           	opt stack 0
 15303  00009D                     _asin$5956:
 15304                           	opt stack 0
 15305                           
 15306                           ; 4 bytes @ 0x3D
 15307  00009D                     	ds	2
 15308  00009F                     i2__doprnt@tmpval:
 15309                           	opt stack 0
 15310                           
 15311                           ; 4 bytes @ 0x3F
 15312  00009F                     	ds	2
 15313  0000A1                     currentMeasuredToPeak@Peak:
 15314                           	opt stack 0
 15315  0000A1                     asin@y:
 15316                           	opt stack 0
 15317                           
 15318                           ; 4 bytes @ 0x41
 15319  0000A1                     	ds	2
 15320  0000A3                     i2__doprnt@fval:
 15321                           	opt stack 0
 15322                           
 15323                           ; 4 bytes @ 0x43
 15324  0000A3                     	ds	2
 15325  0000A5                     _asin$5955:
 15326                           	opt stack 0
 15327                           
 15328                           ; 4 bytes @ 0x45
 15329  0000A5                     	ds	2
 15330  0000A7                     i2__doprnt@val:
 15331                           	opt stack 0
 15332                           
 15333                           ; 4 bytes @ 0x47
 15334  0000A7                     	ds	2
 15335  0000A9                     ?_acos:
 15336                           	opt stack 0
 15337  0000A9                     acos@x:
 15338                           	opt stack 0
 15339                           
 15340                           ; 4 bytes @ 0x49
 15341  0000A9                     	ds	2
 15342  0000AB                     i2__doprnt@width:
 15343                           	opt stack 0
 15344                           
 15345                           ; 2 bytes @ 0x4B
 15346  0000AB                     	ds	2
 15347  0000AD                     i2__doprnt@flag:
 15348                           	opt stack 0
 15349  0000AD                     _acos$5954:
 15350                           	opt stack 0
 15351                           
 15352                           ; 4 bytes @ 0x4D
 15353  0000AD                     	ds	2
 15354  0000AF                     i2__doprnt@prec:
 15355                           	opt stack 0
 15356                           
 15357                           ; 2 bytes @ 0x4F
 15358  0000AF                     	ds	2
 15359  0000B1                     ?_peakToRMS:
 15360                           	opt stack 0
 15361  0000B1                     i2__doprnt@c:
 15362                           	opt stack 0
 15363  0000B1                     peakToRMS@Peak:
 15364                           	opt stack 0
 15365                           
 15366                           ; 4 bytes @ 0x51
 15367  0000B1                     	ds	1
 15368  0000B2                     ?i2_printf:
 15369                           	opt stack 0
 15370  0000B2                     i2printf@f:
 15371                           	opt stack 0
 15372                           
 15373                           ; 2 bytes @ 0x52
 15374  0000B2                     	ds	2
 15375  0000B4                     i2printf@ap:
 15376                           	opt stack 0
 15377                           
 15378                           ; 2 bytes @ 0x54
 15379  0000B4                     	ds	1
 15380  0000B5                     peakToRMS@Angle:
 15381                           	opt stack 0
 15382                           
 15383                           ; 4 bytes @ 0x55
 15384  0000B5                     	ds	1
 15385  0000B6                     i2printf@pb:
 15386                           	opt stack 0
 15387                           
 15388                           ; 5 bytes @ 0x56
 15389  0000B6                     	ds	3
 15390  0000B9                     _peakToRMS$5947:
 15391                           	opt stack 0
 15392                           
 15393                           ; 4 bytes @ 0x59
 15394  0000B9                     	ds	4
 15395  0000BD                     _peakToRMS$5948:
 15396                           	opt stack 0
 15397                           
 15398                           ; 4 bytes @ 0x5D
 15399  0000BD                     	ds	4
 15400  0000C1                     _peakToRMS$5946:
 15401                           	opt stack 0
 15402                           
 15403                           ; 4 bytes @ 0x61
 15404  0000C1                     	ds	4
 15405  0000C5                     peakToRMS@RMS:
 15406                           	opt stack 0
 15407                           
 15408                           ; 4 bytes @ 0x65
 15409  0000C5                     	ds	4
 15410  0000C9                     _ADC_PostProcessingCallback$5951:
 15411                           	opt stack 0
 15412                           
 15413                           ; 4 bytes @ 0x69
 15414  0000C9                     	ds	4
 15415  0000CD                     _ADC_PostProcessingCallback$5952:
 15416                           	opt stack 0
 15417                           
 15418                           ; 4 bytes @ 0x6D
 15419  0000CD                     	ds	4
 15420  0000D1                     _ADC_PostProcessingCallback$5953:
 15421                           	opt stack 0
 15422                           
 15423                           ; 4 bytes @ 0x71
 15424  0000D1                     	ds	4
 15425  0000D5                     ADC_PostProcessingCallback@current_adc_channel:
 15426                           	opt stack 0
 15427                           
 15428                           ; 1 bytes @ 0x75
 15429  0000D5                     	ds	1
 15430  0000D6                     _ADC_PostProcessingCallback$5949:
 15431                           	opt stack 0
 15432                           
 15433                           ; 4 bytes @ 0x76
 15434  0000D6                     	ds	4
 15435  0000DA                     _ADC_PostProcessingCallback$5950:
 15436                           	opt stack 0
 15437                           
 15438                           ; 4 bytes @ 0x7A
 15439  0000DA                     	ds	4
 15440  0000DE                     ??_INTERRUPT_InterruptManagerHigh:
 15441                           
 15442                           ; 1 bytes @ 0x7E
 15443  0000DE                     	ds	18
 15444                           tblptru	equ	0xFF8
 15445                           tblptrh	equ	0xFF7
 15446                           tblptrl	equ	0xFF6
 15447                           tablat	equ	0xFF5
 15448                           postinc0	equ	0xFEE
 15449                           wreg	equ	0xFE8
 15450                           postdec1	equ	0xFE5
 15451                           fsr1l	equ	0xFE1
 15452                           
 15453                           	psect	cstackCOMRAM
 15454  000001                     __pcstackCOMRAM:
 15455                           	opt stack 0
 15456  000001                     ??_I2C1_Stop:
 15457  000001                     ??i2_isdigit:
 15458  000001                     ?_ADCC_GetConversionResult:
 15459                           	opt stack 0
 15460  000001                     ?_ADCC_GetFilterValue:
 15461                           	opt stack 0
 15462  000001                     ?i2___wmul:
 15463                           	opt stack 0
 15464  000001                     ?i2___awmod:
 15465                           	opt stack 0
 15466  000001                     ?i2__div_to_l_:
 15467                           	opt stack 0
 15468  000001                     ?i2__tdiv_to_l_:
 15469                           	opt stack 0
 15470  000001                     ?i2___lldiv:
 15471                           	opt stack 0
 15472  000001                     i2EUSART2_Write@txData:
 15473                           	opt stack 0
 15474  000001                     TMR5_WriteTimer@timerVal:
 15475                           	opt stack 0
 15476  000001                     i2DATAEE_WriteByte@bAdd:
 15477                           	opt stack 0
 15478  000001                     i2DATAEE_ReadByte@bAdd:
 15479                           	opt stack 0
 15480  000001                     i2___wmul@multiplier:
 15481                           	opt stack 0
 15482  000001                     i2___awmod@dividend:
 15483                           	opt stack 0
 15484  000001                     i2__tdiv_to_l_@f1:
 15485                           	opt stack 0
 15486  000001                     frexp@value:
 15487                           	opt stack 0
 15488  000001                     i2__div_to_l_@f1:
 15489                           	opt stack 0
 15490  000001                     i2___lldiv@dividend:
 15491                           	opt stack 0
 15492                           
 15493                           ; 4 bytes @ 0x0
 15494  000001                     	ds	1
 15495  000002                     i2putch@txData:
 15496                           	opt stack 0
 15497  000002                     i2_isdigit$4697:
 15498                           	opt stack 0
 15499                           
 15500                           ; 1 bytes @ 0x1
 15501  000002                     	ds	1
 15502  000003                     ??_ADCC_GetConversionResult:
 15503  000003                     ??_ADCC_GetFilterValue:
 15504  000003                     ?i2_readDoubleFromEEPROM:
 15505                           	opt stack 0
 15506  000003                     I2C1_Stop@completion_code:
 15507                           	opt stack 0
 15508  000003                     i2DATAEE_WriteByte@bData:
 15509                           	opt stack 0
 15510  000003                     i2isdigit@c:
 15511                           	opt stack 0
 15512  000003                     i2readDoubleFromEEPROM@starting_address:
 15513                           	opt stack 0
 15514  000003                     i2___wmul@multiplicand:
 15515                           	opt stack 0
 15516  000003                     i2___awmod@divisor:
 15517                           	opt stack 0
 15518                           
 15519                           ; 2 bytes @ 0x2
 15520  000003                     	ds	1
 15521  000004                     ??_I2C1_ISR:
 15522  000004                     i2DATAEE_WriteByte@GIEBitValue:
 15523                           	opt stack 0
 15524  000004                     i2__tdiv_to_l_@f2:
 15525                           	opt stack 0
 15526                           
 15527                           ; 3 bytes @ 0x3
 15528  000004                     	ds	1
 15529  000005                     ?i2___xxtofl:
 15530                           	opt stack 0
 15531  000005                     i2___awmod@counter:
 15532                           	opt stack 0
 15533  000005                     frexp@eptr:
 15534                           	opt stack 0
 15535  000005                     i2___wmul@product:
 15536                           	opt stack 0
 15537  000005                     i2writeDoubleToEEPROM@input_double:
 15538                           	opt stack 0
 15539  000005                     i2__div_to_l_@f2:
 15540                           	opt stack 0
 15541  000005                     i2___lldiv@divisor:
 15542                           	opt stack 0
 15543  000005                     i2___xxtofl@val:
 15544                           	opt stack 0
 15545                           
 15546                           ; 4 bytes @ 0x4
 15547  000005                     	ds	1
 15548  000006                     i2___awmod@sign:
 15549                           	opt stack 0
 15550                           
 15551                           ; 1 bytes @ 0x5
 15552  000006                     	ds	1
 15553  000007                     ??_frexp:
 15554  000007                     ??i2__tdiv_to_l_:
 15555  000007                     ?i2___awdiv:
 15556                           	opt stack 0
 15557  000007                     i2___awdiv@dividend:
 15558                           	opt stack 0
 15559  000007                     i2readDoubleFromEEPROM@output_data:
 15560                           	opt stack 0
 15561                           
 15562                           ; 4 bytes @ 0x6
 15563  000007                     	ds	2
 15564  000009                     ??i2___xxtofl:
 15565  000009                     i2writeDoubleToEEPROM@starting_address:
 15566                           	opt stack 0
 15567  000009                     i2___awdiv@divisor:
 15568                           	opt stack 0
 15569  000009                     i2__div_to_l_@quot:
 15570                           	opt stack 0
 15571  000009                     i2___lldiv@quotient:
 15572                           	opt stack 0
 15573                           
 15574                           ; 4 bytes @ 0x8
 15575  000009                     	ds	1
 15576  00000A                     i2__tdiv_to_l_@quot:
 15577                           	opt stack 0
 15578                           
 15579                           ; 4 bytes @ 0x9
 15580  00000A                     	ds	1
 15581  00000B                     i2___awdiv@counter:
 15582                           	opt stack 0
 15583  00000B                     i2readDoubleFromEEPROM@byte_index:
 15584                           	opt stack 0
 15585  00000B                     i2writeDoubleToEEPROM@input_data:
 15586                           	opt stack 0
 15587                           
 15588                           ; 4 bytes @ 0xA
 15589  00000B                     	ds	1
 15590  00000C                     i2___awdiv@sign:
 15591                           	opt stack 0
 15592                           
 15593                           ; 1 bytes @ 0xB
 15594  00000C                     	ds	1
 15595  00000D                     i2__div_to_l_@cntr:
 15596                           	opt stack 0
 15597  00000D                     i2___lldiv@counter:
 15598                           	opt stack 0
 15599  00000D                     i2___xxtofl@sign:
 15600                           	opt stack 0
 15601  00000D                     i2___awdiv@quotient:
 15602                           	opt stack 0
 15603                           
 15604                           ; 2 bytes @ 0xC
 15605  00000D                     	ds	1
 15606  00000E                     ?i2___llmod:
 15607                           	opt stack 0
 15608  00000E                     i2__div_to_l_@exp1:
 15609                           	opt stack 0
 15610  00000E                     i2__tdiv_to_l_@cntr:
 15611                           	opt stack 0
 15612  00000E                     i2___xxtofl@exp:
 15613                           	opt stack 0
 15614  00000E                     i2___llmod@dividend:
 15615                           	opt stack 0
 15616                           
 15617                           ; 4 bytes @ 0xD
 15618  00000E                     	ds	1
 15619  00000F                     i2__tdiv_to_l_@exp1:
 15620                           	opt stack 0
 15621  00000F                     i2writeDoubleToEEPROM@byte_index:
 15622                           	opt stack 0
 15623  00000F                     i2___xxtofl@arg:
 15624                           	opt stack 0
 15625                           
 15626                           ; 4 bytes @ 0xE
 15627  00000F                     	ds	2
 15628  000011                     
 15629                           ; 1 bytes @ 0x10
 15630  000011                     	ds	1
 15631  000012                     i2___llmod@divisor:
 15632                           	opt stack 0
 15633                           
 15634                           ; 4 bytes @ 0x11
 15635  000012                     	ds	1
 15636  000013                     ?i2___fldiv:
 15637                           	opt stack 0
 15638  000013                     i2___fldiv@b:
 15639                           	opt stack 0
 15640                           
 15641                           ; 4 bytes @ 0x12
 15642  000013                     	ds	3
 15643  000016                     i2___llmod@counter:
 15644                           	opt stack 0
 15645                           
 15646                           ; 1 bytes @ 0x15
 15647  000016                     	ds	1
 15648  000017                     i2___fldiv@a:
 15649                           	opt stack 0
 15650                           
 15651                           ; 4 bytes @ 0x16
 15652  000017                     	ds	4
 15653  00001B                     ??i2___fldiv:
 15654                           
 15655                           ; 1 bytes @ 0x1A
 15656  00001B                     	ds	4
 15657  00001F                     i2___fldiv@sign:
 15658                           	opt stack 0
 15659                           
 15660                           ; 1 bytes @ 0x1E
 15661  00001F                     	ds	1
 15662  000020                     i2___fldiv@rem:
 15663                           	opt stack 0
 15664                           
 15665                           ; 4 bytes @ 0x1F
 15666  000020                     	ds	4
 15667  000024                     i2___fldiv@new_exp:
 15668                           	opt stack 0
 15669                           
 15670                           ; 2 bytes @ 0x23
 15671  000024                     	ds	2
 15672  000026                     i2___fldiv@grs:
 15673                           	opt stack 0
 15674                           
 15675                           ; 4 bytes @ 0x25
 15676  000026                     	ds	4
 15677  00002A                     i2___fldiv@bexp:
 15678                           	opt stack 0
 15679                           
 15680                           ; 1 bytes @ 0x29
 15681  00002A                     	ds	1
 15682  00002B                     i2___fldiv@aexp:
 15683                           	opt stack 0
 15684                           
 15685                           ; 1 bytes @ 0x2A
 15686  00002B                     	ds	1
 15687  00002C                     ?i2___flneg:
 15688                           	opt stack 0
 15689  00002C                     i2___flneg@f1:
 15690                           	opt stack 0
 15691                           
 15692                           ; 4 bytes @ 0x2B
 15693  00002C                     	ds	4
 15694  000030                     ?_fabs:
 15695                           	opt stack 0
 15696  000030                     ?i2___flmul:
 15697                           	opt stack 0
 15698  000030                     fabs@d:
 15699                           	opt stack 0
 15700  000030                     i2___flmul@b:
 15701                           	opt stack 0
 15702                           
 15703                           ; 4 bytes @ 0x2F
 15704  000030                     	ds	4
 15705  000034                     i2___flge@ff1:
 15706                           	opt stack 0
 15707  000034                     i2___flmul@a:
 15708                           	opt stack 0
 15709                           
 15710                           ; 4 bytes @ 0x33
 15711  000034                     	ds	4
 15712  000038                     ??i2___flmul:
 15713  000038                     i2___flge@ff2:
 15714                           	opt stack 0
 15715                           
 15716                           ; 4 bytes @ 0x37
 15717  000038                     	ds	4
 15718  00003C                     ??i2___flge:
 15719  00003C                     i2___flmul@sign:
 15720                           	opt stack 0
 15721                           
 15722                           ; 1 bytes @ 0x3B
 15723  00003C                     	ds	1
 15724  00003D                     i2___flmul@aexp:
 15725                           	opt stack 0
 15726                           
 15727                           ; 1 bytes @ 0x3C
 15728  00003D                     	ds	1
 15729  00003E                     i2___flmul@grs:
 15730                           	opt stack 0
 15731                           
 15732                           ; 4 bytes @ 0x3D
 15733  00003E                     	ds	2
 15734  000040                     writeEnergyToEEPROMCallback@current_value:
 15735                           	opt stack 0
 15736                           
 15737                           ; 4 bytes @ 0x3F
 15738  000040                     	ds	2
 15739  000042                     i2___flmul@bexp:
 15740                           	opt stack 0
 15741                           
 15742                           ; 1 bytes @ 0x41
 15743  000042                     	ds	1
 15744  000043                     i2___flmul@prod:
 15745                           	opt stack 0
 15746                           
 15747                           ; 4 bytes @ 0x42
 15748  000043                     	ds	1
 15749  000044                     
 15750                           ; 1 bytes @ 0x43
 15751  000044                     	ds	3
 15752  000047                     i2___flmul@temp:
 15753                           	opt stack 0
 15754                           
 15755                           ; 2 bytes @ 0x46
 15756  000047                     	ds	2
 15757  000049                     ?i2_fround:
 15758                           	opt stack 0
 15759  000049                     ?i2_scale:
 15760                           	opt stack 0
 15761                           
 15762                           ; 4 bytes @ 0x48
 15763  000049                     	ds	4
 15764  00004D                     i2_fround$5960:
 15765                           	opt stack 0
 15766  00004D                     i2_scale$5961:
 15767                           	opt stack 0
 15768                           
 15769                           ; 4 bytes @ 0x4C
 15770  00004D                     	ds	4
 15771  000051                     i2scale@scl:
 15772                           	opt stack 0
 15773  000051                     i2_fround$5959:
 15774                           	opt stack 0
 15775                           
 15776                           ; 4 bytes @ 0x50
 15777  000051                     	ds	4
 15778  000055                     i2fround@prec:
 15779                           	opt stack 0
 15780                           
 15781                           ; 1 bytes @ 0x54
 15782  000055                     	ds	1
 15783  000056                     ?i2___fladd:
 15784                           	opt stack 0
 15785  000056                     i2___fladd@b:
 15786                           	opt stack 0
 15787                           
 15788                           ; 4 bytes @ 0x55
 15789  000056                     	ds	4
 15790  00005A                     i2___fladd@a:
 15791                           	opt stack 0
 15792                           
 15793                           ; 4 bytes @ 0x59
 15794  00005A                     	ds	4
 15795  00005E                     tblptru	equ	0xFF8
 15796                           tblptrh	equ	0xFF7
 15797                           tblptrl	equ	0xFF6
 15798                           tablat	equ	0xFF5
 15799                           postinc0	equ	0xFEE
 15800                           wreg	equ	0xFE8
 15801                           postdec1	equ	0xFE5
 15802                           fsr1l	equ	0xFE1
 15803                           
 15804                           ; 1 bytes @ 0x5D
 15805 ;;
 15806 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 15807 ;;
 15808 ;; *************** function _main *****************
 15809 ;; Defined at:
 15810 ;;		line 573 in file "main.c"
 15811 ;; Parameters:    Size  Location     Type
 15812 ;;		None
 15813 ;; Auto vars:     Size  Location     Type
 15814 ;;		None
 15815 ;; Return value:  Size  Location     Type
 15816 ;;                  1    wreg      void 
 15817 ;; Registers used:
 15818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15819 ;; Tracked objects:
 15820 ;;		On entry : 0/0
 15821 ;;		On exit  : 0/0
 15822 ;;		Unchanged: 0/0
 15823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15826 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0
 15827 ;;      Totals:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0
 15828 ;;Total ram usage:        2 bytes
 15829 ;; Hardware stack levels required when called:   28
 15830 ;; This function calls:
 15831 ;;		_ADCC_SetADTIInterruptHandler
 15832 ;;		_INT0_SetInterruptHandler
 15833 ;;		_OLED_Clear
 15834 ;;		_OLED_Init
 15835 ;;		_OLED_updateCallback
 15836 ;;		_SYSTEM_Initialize
 15837 ;;		_TMR2_SetInterruptHandler
 15838 ;;		_TMR4_SetInterruptHandler
 15839 ;;		_TMR5_SetInterruptHandler
 15840 ;;		_TMR5_StopTimer
 15841 ;;		_TMR6_SetInterruptHandler
 15842 ;;		_TMR7_SetInterruptHandler
 15843 ;;		_getCauseOfReset
 15844 ;;		_recoverSRAMMaxFromEEPROM
 15845 ;;		_saveSRAMMaxToEEPROM
 15846 ;;		_terminal_clearTerminal
 15847 ;;		_terminal_ringBufferPull
 15848 ;;		_terminal_setCursorHome
 15849 ;;		_terminal_textAttributesReset
 15850 ;;		_updateErrorLEDs
 15851 ;; This function is called by:
 15852 ;;		Startup code after reset
 15853 ;; This function uses a non-reentrant model
 15854 ;;
 15855                           
 15856                           	psect	text0
 15857  0197F2                     __ptext0:
 15858                           	opt stack 0
 15859  0197F2                     _main:
 15860                           	opt stack 3
 15861                           
 15862                           ;main.c: 577: reset_cause = getCauseOfReset();
 15863                           
 15864                           ;incstack = 0
 15865  0197F2  ECF2  F0D6         	call	_getCauseOfReset	;wreg free
 15866  0197F6  0102               	movlb	2	; () banked
 15867  0197F8  6FFE               	movwf	_reset_cause& (0+255),b
 15868                           
 15869                           ; BSR set to: 2
 15870                           ;main.c: 581: _delay((unsigned long)((250)*(64000000/4000.0)));
 15871  0197FA  0E15               	movlw	21
 15872  0197FC  0104               	movlb	4	; () banked
 15873  0197FE  6FC3               	movwf	(??_main+1)& (0+255),b
 15874  019800  0E4B               	movlw	75
 15875  019802  6FC2               	movwf	??_main& (0+255),b
 15876  019804  0EBE               	movlw	190
 15877  019806                     u37247:
 15878  019806  2EE8               	decfsz	wreg,f,c
 15879  019808  D7FE               	bra	u37247
 15880  01980A  2FC2               	decfsz	??_main& (0+255),f,b
 15881  01980C  D7FC               	bra	u37247
 15882  01980E  2FC3               	decfsz	(??_main+1)& (0+255),f,b
 15883  019810  D7FA               	bra	u37247
 15884  019812  F000               	nop	
 15885                           
 15886                           ;main.c: 584: SYSTEM_Initialize();
 15887  019814  ECDE  F0DA         	call	_SYSTEM_Initialize	;wreg free
 15888                           
 15889                           ;main.c: 587: LATGbits.LATG0 = 0;
 15890  019818  907F               	bcf	3967,0,c	;volatile
 15891                           
 15892                           ;main.c: 588: LATGbits.LATG1 = 0;
 15893  01981A  927F               	bcf	3967,1,c	;volatile
 15894                           
 15895                           ;main.c: 589: load_enable = 0;
 15896  01981C  905E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 15897                           
 15898                           ;main.c: 592: TMR6_SetInterruptHandler(heartbeatTimerCallback);
 15899  01981E  0E42               	movlw	low _heartbeatTimerCallback
 15900  019820  0101               	movlb	1	; () banked
 15901  019822  6F4F               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 15902  019824  0EB4               	movlw	high _heartbeatTimerCallback
 15903  019826  6F50               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15904  019828  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
 15905  01982A  6F51               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15906  01982C  EC99  F0DF         	call	_TMR6_SetInterruptHandler	;wreg free
 15907                           
 15908                           ;main.c: 595: ADCC_SetADTIInterruptHandler(ADC_PostProcessingCallback);
 15909  019830  0E38               	movlw	low _ADC_PostProcessingCallback
 15910  019832  0101               	movlb	1	; () banked
 15911  019834  6F4F               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 15912  019836  0E41               	movlw	high _ADC_PostProcessingCallback
 15913  019838  6F50               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 15914  01983A  0E01               	movlw	low (_ADC_PostProcessingCallback shr (0+16))
 15915  01983C  6F51               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 15916  01983E  ECCA  F0DF         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 15917                           
 15918                           ;main.c: 598: TMR7_SetInterruptHandler(acquisitionTimerCallback);
 15919  019842  0EB4               	movlw	low _acquisitionTimerCallback
 15920  019844  0101               	movlb	1	; () banked
 15921  019846  6F4F               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 15922  019848  0EBE               	movlw	high _acquisitionTimerCallback
 15923  01984A  6F50               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15924  01984C  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
 15925  01984E  6F51               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15926  019850  EC92  F0DF         	call	_TMR7_SetInterruptHandler	;wreg free
 15927                           
 15928                           ;main.c: 601: INT0_SetInterruptHandler(dimmingOffTimeCallback);
 15929  019854  0E38               	movlw	low _dimmingOffTimeCallback
 15930  019856  0101               	movlb	1	; () banked
 15931  019858  6F4F               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 15932  01985A  0EBE               	movlw	high _dimmingOffTimeCallback
 15933  01985C  6F50               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15934  01985E  0E01               	movlw	low (_dimmingOffTimeCallback shr (0+16))
 15935  019860  6F51               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15936  019862  ECB5  F0DF         	call	_INT0_SetInterruptHandler	;wreg free
 15937                           
 15938                           ;main.c: 604: TMR5_SetInterruptHandler(dimmingOnTimeCallback);
 15939  019866  0EB0               	movlw	low _dimmingOnTimeCallback
 15940  019868  0101               	movlb	1	; () banked
 15941  01986A  6F4F               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 15942  01986C  0EBF               	movlw	high _dimmingOnTimeCallback
 15943  01986E  6F50               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15944  019870  0E01               	movlw	low (_dimmingOnTimeCallback shr (0+16))
 15945  019872  6F51               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15946  019874  ECA0  F0DF         	call	_TMR5_SetInterruptHandler	;wreg free
 15947                           
 15948                           ;main.c: 607: TMR4_SetInterruptHandler(writeEnergyToEEPROMCallback);
 15949  019878  0E56               	movlw	low _writeEnergyToEEPROMCallback
 15950  01987A  0101               	movlb	1	; () banked
 15951  01987C  6F4F               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 15952  01987E  0EA4               	movlw	high _writeEnergyToEEPROMCallback
 15953  019880  6F50               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15954  019882  0E01               	movlw	low (_writeEnergyToEEPROMCallback shr (0+16))
 15955  019884  6F51               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15956  019886  ECA7  F0DF         	call	_TMR4_SetInterruptHandler	;wreg free
 15957                           
 15958                           ;main.c: 610: TMR2_SetInterruptHandler(OLED_updateCallback);
 15959  01988A  0E7E               	movlw	low _OLED_updateCallback
 15960  01988C  0101               	movlb	1	; () banked
 15961  01988E  6F4F               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
 15962  019890  0E79               	movlw	high _OLED_updateCallback
 15963  019892  6F50               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15964  019894  0E01               	movlw	low (_OLED_updateCallback shr (0+16))
 15965  019896  6F51               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15966  019898  ECAE  F0DF         	call	_TMR2_SetInterruptHandler	;wreg free
 15967                           
 15968                           ;main.c: 613: TMR5_StopTimer();
 15969  01989C  EC0B  F0E0         	call	_TMR5_StopTimer	;wreg free
 15970                           
 15971                           ;main.c: 614: PIE0bits.INT0IE = 0;
 15972  0198A0  010E               	movlb	14	; () banked
 15973  0198A2  9129               	bcf	41,0,b	;volatile
 15974                           
 15975                           ; BSR set to: 14
 15976                           ;main.c: 617: recoverSRAMMaxFromEEPROM();
 15977  0198A4  ECD7  F0C5         	call	_recoverSRAMMaxFromEEPROM	;wreg free
 15978                           
 15979                           ;main.c: 620: (INTCONbits.GIEH = 1);
 15980  0198A8  8EF2               	bsf	intcon,7,c	;volatile
 15981                           
 15982                           ;main.c: 623: (INTCONbits.GIEL = 1);
 15983  0198AA  8CF2               	bsf	intcon,6,c	;volatile
 15984                           
 15985                           ;main.c: 626: terminal_clearTerminal();
 15986  0198AC  EC7B  F0DF         	call	_terminal_clearTerminal	;wreg free
 15987                           
 15988                           ;main.c: 627: terminal_setCursorHome();
 15989  0198B0  EC6B  F0DF         	call	_terminal_setCursorHome	;wreg free
 15990                           
 15991                           ;main.c: 628: terminal_textAttributesReset();
 15992  0198B4  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 15993                           
 15994                           ;main.c: 631: OLED_Init();
 15995  0198B8  EC85  F0D0         	call	_OLED_Init	;wreg free
 15996                           
 15997                           ;main.c: 632: OLED_Clear();
 15998  0198BC  EC01  F0DA         	call	_OLED_Clear	;wreg free
 15999                           
 16000                           ;main.c: 634: OLED_Frame = Boot_Frame_1;
 16001  0198C0  0E00               	movlw	0
 16002  0198C2  0101               	movlb	1	; () banked
 16003  0198C4  6F9D               	movwf	_OLED_Frame& (0+255),b
 16004                           
 16005                           ; BSR set to: 1
 16006                           ;main.c: 635: OLED_updateCallback();
 16007  0198C6  ECBF  F0BC         	call	_OLED_updateCallback	;wreg free
 16008  0198CA                     
 16009                           ;main.c: 639: {
 16010                           ;main.c: 642: if (eusart2RxStringReady) {
 16011  0198CA  0100               	movlb	0	; () banked
 16012  0198CC  B1FB               	btfsc	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 16013                           
 16014                           ; BSR set to: 0
 16015                           ;main.c: 644: terminal_ringBufferPull();
 16016  0198CE  EC3A  F0C5         	call	_terminal_ringBufferPull	;wreg free
 16017                           
 16018                           ;main.c: 646: }
 16019                           ;main.c: 649: saveSRAMMaxToEEPROM();
 16020  0198D2  EC49  F0BF         	call	_saveSRAMMaxToEEPROM	;wreg free
 16021                           
 16022                           ;main.c: 652: updateErrorLEDs();
 16023  0198D6  EC04  F0DF         	call	_updateErrorLEDs	;wreg free
 16024  0198DA  D7F7               	goto	l1431
 16025  0198DC                     __end_of_main:
 16026                           	opt stack 0
 16027                           tblptru	equ	0xFF8
 16028                           tblptrh	equ	0xFF7
 16029                           tblptrl	equ	0xFF6
 16030                           tablat	equ	0xFF5
 16031                           intcon	equ	0xFF2
 16032                           postinc0	equ	0xFEE
 16033                           wreg	equ	0xFE8
 16034                           postdec1	equ	0xFE5
 16035                           fsr1l	equ	0xFE1
 16036                           
 16037 ;; *************** function _updateErrorLEDs *****************
 16038 ;; Defined at:
 16039 ;;		line 54 in file "error_handling.c"
 16040 ;; Parameters:    Size  Location     Type
 16041 ;;		None
 16042 ;; Auto vars:     Size  Location     Type
 16043 ;;		None
 16044 ;; Return value:  Size  Location     Type
 16045 ;;                  1    wreg      void 
 16046 ;; Registers used:
 16047 ;;		wreg, status,2, cstack
 16048 ;; Tracked objects:
 16049 ;;		On entry : 0/0
 16050 ;;		On exit  : 0/0
 16051 ;;		Unchanged: 0/0
 16052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16057 ;;Total ram usage:        0 bytes
 16058 ;; Hardware stack levels used:    1
 16059 ;; Hardware stack levels required when called:   20
 16060 ;; This function calls:
 16061 ;;		_getADCError
 16062 ;;		_getCOMMError
 16063 ;; This function is called by:
 16064 ;;		_main
 16065 ;; This function uses a non-reentrant model
 16066 ;;
 16067                           
 16068                           	psect	text1
 16069  01BE08                     __ptext1:
 16070                           	opt stack 0
 16071  01BE08                     _updateErrorLEDs:
 16072                           	opt stack 10
 16073                           
 16074                           ;error_handling.c: 57: if (getADCError()) {
 16075                           
 16076                           ;incstack = 0
 16077  01BE08  EC1E  F0DC         	call	_getADCError	;wreg free
 16078  01BE0C  0900               	iorlw	0
 16079  01BE0E  A4D8               	btfss	status,2,c
 16080                           
 16081                           ;error_handling.c: 59: LATFbits.LATF3 = 1;
 16082  01BE10  867E               	bsf	3966,3,c	;volatile
 16083                           
 16084                           ;error_handling.c: 61: }
 16085                           ;error_handling.c: 64: if (getCOMMError()) {
 16086  01BE12  EC28  F0DF         	call	_getCOMMError	;wreg free
 16087  01BE16  0900               	iorlw	0
 16088  01BE18  B4D8               	btfsc	status,2,c
 16089  01BE1A  0012               	return	
 16090                           
 16091                           ;error_handling.c: 66: LATFbits.LATF1 = 1;
 16092  01BE1C  827E               	bsf	3966,1,c	;volatile
 16093  01BE1E  0012               	return	
 16094  01BE20                     __end_of_updateErrorLEDs:
 16095                           	opt stack 0
 16096                           tblptru	equ	0xFF8
 16097                           tblptrh	equ	0xFF7
 16098                           tblptrl	equ	0xFF6
 16099                           tablat	equ	0xFF5
 16100                           intcon	equ	0xFF2
 16101                           postinc0	equ	0xFEE
 16102                           wreg	equ	0xFE8
 16103                           postdec1	equ	0xFE5
 16104                           fsr1l	equ	0xFE1
 16105                           status	equ	0xFD8
 16106                           
 16107 ;; *************** function _terminal_setCursorHome *****************
 16108 ;; Defined at:
 16109 ;;		line 85 in file "ring_buffer_interface.c"
 16110 ;; Parameters:    Size  Location     Type
 16111 ;;		None
 16112 ;; Auto vars:     Size  Location     Type
 16113 ;;		None
 16114 ;; Return value:  Size  Location     Type
 16115 ;;                  1    wreg      void 
 16116 ;; Registers used:
 16117 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16118 ;; Tracked objects:
 16119 ;;		On entry : 0/0
 16120 ;;		On exit  : 0/0
 16121 ;;		Unchanged: 0/0
 16122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16127 ;;Total ram usage:        0 bytes
 16128 ;; Hardware stack levels used:    1
 16129 ;; Hardware stack levels required when called:   23
 16130 ;; This function calls:
 16131 ;;		_printf
 16132 ;; This function is called by:
 16133 ;;		_main
 16134 ;; This function uses a non-reentrant model
 16135 ;;
 16136                           
 16137                           	psect	text2
 16138  01BED6                     __ptext2:
 16139                           	opt stack 0
 16140  01BED6                     _terminal_setCursorHome:
 16141                           	opt stack 7
 16142                           
 16143                           ;ring_buffer_interface.c: 86: printf("\033[H");
 16144                           
 16145                           ;incstack = 0
 16146  01BED6  0EBC               	movlw	low STR_20
 16147  01BED8  0102               	movlb	2	; () banked
 16148  01BEDA  6F85               	movwf	printf@f& (0+255),b
 16149  01BEDC  0EFF               	movlw	high STR_20
 16150  01BEDE  6F86               	movwf	(printf@f+1)& (0+255),b
 16151  01BEE0  ECA0  F0DA         	call	_printf	;wreg free
 16152  01BEE4  0012               	return		;funcret
 16153  01BEE6                     __end_of_terminal_setCursorHome:
 16154                           	opt stack 0
 16155                           tblptru	equ	0xFF8
 16156                           tblptrh	equ	0xFF7
 16157                           tblptrl	equ	0xFF6
 16158                           tablat	equ	0xFF5
 16159                           intcon	equ	0xFF2
 16160                           postinc0	equ	0xFEE
 16161                           wreg	equ	0xFE8
 16162                           postdec1	equ	0xFE5
 16163                           fsr1l	equ	0xFE1
 16164                           status	equ	0xFD8
 16165                           
 16166 ;; *************** function _terminal_ringBufferPull *****************
 16167 ;; Defined at:
 16168 ;;		line 12 in file "ring_buffer_interface.c"
 16169 ;; Parameters:    Size  Location     Type
 16170 ;;		None
 16171 ;; Auto vars:     Size  Location     Type
 16172 ;;  index           2   62[BANK4 ] int 
 16173 ;;  index           2   64[BANK4 ] int 
 16174 ;;  charNumber      2   60[BANK4 ] int 
 16175 ;; Return value:  Size  Location     Type
 16176 ;;                  1    wreg      void 
 16177 ;; Registers used:
 16178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 16179 ;; Tracked objects:
 16180 ;;		On entry : 0/0
 16181 ;;		On exit  : 0/0
 16182 ;;		Unchanged: 0/0
 16183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16185 ;;      Locals:         0       0       0       0       0       6       0       0       0       0       0       0       
      +0       0       0
 16186 ;;      Temps:          0       0       0       0       0       3       0       0       0       0       0       0       
      +0       0       0
 16187 ;;      Totals:         0       0       0       0       0       9       0       0       0       0       0       0       
      +0       0       0
 16188 ;;Total ram usage:        9 bytes
 16189 ;; Hardware stack levels used:    1
 16190 ;; Hardware stack levels required when called:   27
 16191 ;; This function calls:
 16192 ;;		_EUSART2_Read
 16193 ;;		_ringBufferLUT
 16194 ;;		_strlen
 16195 ;; This function is called by:
 16196 ;;		_main
 16197 ;; This function uses a non-reentrant model
 16198 ;;
 16199                           
 16200                           	psect	text3
 16201  018A74                     __ptext3:
 16202                           	opt stack 0
 16203  018A74                     _terminal_ringBufferPull:
 16204                           	opt stack 3
 16205                           
 16206                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
 16207                           
 16208                           ;incstack = 0
 16209  018A74  C1A2  F4BC         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
 16210  018A78  0104               	movlb	4	; () banked
 16211  018A7A  6BBD               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
 16212                           
 16213                           ; BSR set to: 4
 16214                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
 16215  018A7C  0E00               	movlw	0
 16216  018A7E  6FC1               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
 16217  018A80  0E00               	movlw	0
 16218  018A82  6FC0               	movwf	terminal_ringBufferPull@index& (0+255),b
 16219  018A84                     l25671:
 16220                           
 16221                           ; BSR set to: 4
 16222  018A84  BFC1               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
 16223  018A86  D006               	goto	l1472
 16224  018A88  51C1               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
 16225  018A8A  E10F               	bnz	l25681
 16226  018A8C  0E40               	movlw	64
 16227  018A8E  5DC0               	subwf	terminal_ringBufferPull@index& (0+255),w,b
 16228  018A90  B0D8               	btfsc	status,0,c
 16229  018A92  D00B               	goto	u36930
 16230  018A94                     l1472:
 16231                           
 16232                           ; BSR set to: 4
 16233                           ;ring_buffer_interface.c: 19: line[index] = '\0';
 16234                           
 16235                           ; BSR set to: 4
 16236  018A94  0E84               	movlw	low _line
 16237  018A96  25C0               	addwf	terminal_ringBufferPull@index& (0+255),w,b
 16238  018A98  6ED9               	movwf	fsr2l,c
 16239  018A9A  0E03               	movlw	high _line
 16240  018A9C  21C1               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
 16241  018A9E  6EDA               	movwf	fsr2h,c
 16242  018AA0  0E00               	movlw	0
 16243  018AA2  6EDF               	movwf	indf2,c
 16244                           
 16245                           ; BSR set to: 4
 16246  018AA4  4BC0               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
 16247  018AA6  2BC1               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
 16248  018AA8  D7ED               	goto	l25671
 16249  018AAA                     u36930:
 16250  018AAA                     l25681:
 16251                           
 16252                           ; BSR set to: 4
 16253                           ;ring_buffer_interface.c: 21: }
 16254                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
 16255  018AAA  0E00               	movlw	0
 16256  018AAC  6FBF               	movwf	(terminal_ringBufferPull@index_3378+1)& (0+255),b
 16257  018AAE  0E00               	movlw	0
 16258  018AB0  6FBE               	movwf	terminal_ringBufferPull@index_3378& (0+255),b
 16259  018AB2  D00E               	goto	l1474
 16260  018AB4                     
 16261                           ; BSR set to: 4
 16262                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
 16263                           
 16264                           ; BSR set to: 4
 16265  018AB4  ECE9  F0D8         	call	_EUSART2_Read	;wreg free
 16266  018AB8  0104               	movlb	4	; () banked
 16267  018ABA  6FB9               	movwf	??_terminal_ringBufferPull& (0+255),b
 16268  018ABC  0E84               	movlw	low _line
 16269  018ABE  25BE               	addwf	terminal_ringBufferPull@index_3378& (0+255),w,b
 16270  018AC0  6ED9               	movwf	fsr2l,c
 16271  018AC2  0E03               	movlw	high _line
 16272  018AC4  21BF               	addwfc	(terminal_ringBufferPull@index_3378+1)& (0+255),w,b
 16273  018AC6  6EDA               	movwf	fsr2h,c
 16274  018AC8  C4B9  FFDF         	movff	??_terminal_ringBufferPull,indf2
 16275                           
 16276                           ; BSR set to: 4
 16277  018ACC  4BBE               	infsnz	terminal_ringBufferPull@index_3378& (0+255),f,b
 16278  018ACE  2BBF               	incf	(terminal_ringBufferPull@index_3378+1)& (0+255),f,b
 16279  018AD0                     l1474:
 16280                           
 16281                           ; BSR set to: 4
 16282                           
 16283                           ; BSR set to: 4
 16284  018AD0  51BC               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
 16285  018AD2  5DBE               	subwf	terminal_ringBufferPull@index_3378& (0+255),w,b
 16286  018AD4  51BF               	movf	(terminal_ringBufferPull@index_3378+1)& (0+255),w,b
 16287  018AD6  0A80               	xorlw	128
 16288  018AD8  6FB9               	movwf	??_terminal_ringBufferPull& (0+255),b
 16289  018ADA  51BD               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
 16290  018ADC  0A80               	xorlw	128
 16291  018ADE  59B9               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
 16292  018AE0  A0D8               	btfss	status,0,c
 16293  018AE2  D7E8               	goto	l1475
 16294                           
 16295                           ; BSR set to: 4
 16296                           ;ring_buffer_interface.c: 28: }
 16297                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
 16298  018AE4  C0F4  F1A3         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
 16299                           
 16300                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
 16301                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
 16302  018AE8  D01C               	goto	l1477
 16303  018AEA                     
 16304                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
 16305                           
 16306                           ; BSR set to: 4
 16307  018AEA  0EFF               	movlw	255
 16308  018AEC  0104               	movlb	4	; () banked
 16309  018AEE  6FB9               	movwf	??_terminal_ringBufferPull& (0+255),b
 16310  018AF0  0EFF               	movlw	255
 16311  018AF2  6FBA               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 16312  018AF4  0E84               	movlw	low _line
 16313  018AF6  0101               	movlb	1	; () banked
 16314  018AF8  6F4F               	movwf	strlen@s& (0+255),b
 16315  018AFA  0E03               	movlw	high _line
 16316  018AFC  6F50               	movwf	(strlen@s+1)& (0+255),b
 16317  018AFE  EC1C  F0D6         	call	_strlen	;wreg free
 16318  018B02  0104               	movlb	4	; () banked
 16319  018B04  51B9               	movf	??_terminal_ringBufferPull& (0+255),w,b
 16320  018B06  0101               	movlb	1	; () banked
 16321  018B08  274F               	addwf	?_strlen& (0+255),f,b
 16322  018B0A  0104               	movlb	4	; () banked
 16323  018B0C  51BA               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 16324  018B0E  0101               	movlb	1	; () banked
 16325  018B10  2350               	addwfc	(?_strlen+1)& (0+255),f,b
 16326  018B12  0E84               	movlw	low _line
 16327  018B14  254F               	addwf	?_strlen& (0+255),w,b
 16328  018B16  6ED9               	movwf	fsr2l,c
 16329  018B18  0E03               	movlw	high _line
 16330  018B1A  2150               	addwfc	(?_strlen+1)& (0+255),w,b
 16331  018B1C  6EDA               	movwf	fsr2h,c
 16332  018B1E  0E00               	movlw	0
 16333  018B20  6EDF               	movwf	indf2,c
 16334  018B22                     l1477:
 16335  018B22  0EFF               	movlw	255
 16336  018B24  0104               	movlb	4	; () banked
 16337  018B26  6FB9               	movwf	??_terminal_ringBufferPull& (0+255),b
 16338  018B28  0EFF               	movlw	255
 16339  018B2A  6FBA               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 16340  018B2C  0E84               	movlw	low _line
 16341  018B2E  0101               	movlb	1	; () banked
 16342  018B30  6F4F               	movwf	strlen@s& (0+255),b
 16343  018B32  0E03               	movlw	high _line
 16344  018B34  6F50               	movwf	(strlen@s+1)& (0+255),b
 16345  018B36  EC1C  F0D6         	call	_strlen	;wreg free
 16346  018B3A  0104               	movlb	4	; () banked
 16347  018B3C  51B9               	movf	??_terminal_ringBufferPull& (0+255),w,b
 16348  018B3E  0101               	movlb	1	; () banked
 16349  018B40  274F               	addwf	?_strlen& (0+255),f,b
 16350  018B42  0104               	movlb	4	; () banked
 16351  018B44  51BA               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 16352  018B46  0101               	movlb	1	; () banked
 16353  018B48  2350               	addwfc	(?_strlen+1)& (0+255),f,b
 16354  018B4A  0E84               	movlw	low _line
 16355  018B4C  254F               	addwf	?_strlen& (0+255),w,b
 16356  018B4E  6ED9               	movwf	fsr2l,c
 16357  018B50  0E03               	movlw	high _line
 16358  018B52  2150               	addwfc	(?_strlen+1)& (0+255),w,b
 16359  018B54  6EDA               	movwf	fsr2h,c
 16360  018B56  0E0A               	movlw	10
 16361  018B58  18DE               	xorwf	postinc2,w,c
 16362  018B5A  B4D8               	btfsc	status,2,c
 16363  018B5C  D7C6               	goto	l1478
 16364                           
 16365                           ; BSR set to: 1
 16366  018B5E  0EFF               	movlw	255
 16367  018B60  0104               	movlb	4	; () banked
 16368  018B62  6FB9               	movwf	??_terminal_ringBufferPull& (0+255),b
 16369  018B64  0EFF               	movlw	255
 16370  018B66  6FBA               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
 16371  018B68  0E84               	movlw	low _line
 16372  018B6A  0101               	movlb	1	; () banked
 16373  018B6C  6F4F               	movwf	strlen@s& (0+255),b
 16374  018B6E  0E03               	movlw	high _line
 16375  018B70  6F50               	movwf	(strlen@s+1)& (0+255),b
 16376  018B72  EC1C  F0D6         	call	_strlen	;wreg free
 16377  018B76  0104               	movlb	4	; () banked
 16378  018B78  51B9               	movf	??_terminal_ringBufferPull& (0+255),w,b
 16379  018B7A  0101               	movlb	1	; () banked
 16380  018B7C  274F               	addwf	?_strlen& (0+255),f,b
 16381  018B7E  0104               	movlb	4	; () banked
 16382  018B80  51BA               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
 16383  018B82  0101               	movlb	1	; () banked
 16384  018B84  2350               	addwfc	(?_strlen+1)& (0+255),f,b
 16385  018B86  0E84               	movlw	low _line
 16386  018B88  254F               	addwf	?_strlen& (0+255),w,b
 16387  018B8A  6ED9               	movwf	fsr2l,c
 16388  018B8C  0E03               	movlw	high _line
 16389  018B8E  2150               	addwfc	(?_strlen+1)& (0+255),w,b
 16390  018B90  6EDA               	movwf	fsr2h,c
 16391  018B92  0E0D               	movlw	13
 16392  018B94  18DE               	xorwf	postinc2,w,c
 16393  018B96  B4D8               	btfsc	status,2,c
 16394  018B98  D7A8               	goto	l1478
 16395                           
 16396                           ; BSR set to: 1
 16397                           ;ring_buffer_interface.c: 40: }
 16398                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
 16399  018B9A  0100               	movlb	0	; () banked
 16400  018B9C  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 16401                           
 16402                           ; BSR set to: 0
 16403                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
 16404  018B9E  0E84               	movlw	low _line
 16405  018BA0  0104               	movlb	4	; () banked
 16406  018BA2  6F90               	movwf	ringBufferLUT@line& (0+255),b
 16407  018BA4  0E03               	movlw	high _line
 16408  018BA6  6F91               	movwf	(ringBufferLUT@line+1)& (0+255),b
 16409  018BA8  EC00  F080         	call	_ringBufferLUT	;wreg free
 16410  018BAC  0012               	return		;funcret
 16411  018BAE                     __end_of_terminal_ringBufferPull:
 16412                           	opt stack 0
 16413                           tblptru	equ	0xFF8
 16414                           tblptrh	equ	0xFF7
 16415                           tblptrl	equ	0xFF6
 16416                           tablat	equ	0xFF5
 16417                           intcon	equ	0xFF2
 16418                           postinc0	equ	0xFEE
 16419                           wreg	equ	0xFE8
 16420                           postdec1	equ	0xFE5
 16421                           fsr1l	equ	0xFE1
 16422                           indf2	equ	0xFDF
 16423                           postinc2	equ	0xFDE
 16424                           fsr2h	equ	0xFDA
 16425                           fsr2l	equ	0xFD9
 16426                           status	equ	0xFD8
 16427                           
 16428 ;; *************** function _ringBufferLUT *****************
 16429 ;; Defined at:
 16430 ;;		line 65 in file "ring_buffer_LUT.c"
 16431 ;; Parameters:    Size  Location     Type
 16432 ;;  line            2   16[BANK4 ] PTR unsigned char 
 16433 ;;		 -> line(64), 
 16434 ;; Auto vars:     Size  Location     Type
 16435 ;;  angle_degree    4   23[BANK4 ] PTR unsigned char 
 16436 ;;  index           2   51[BANK4 ] int 
 16437 ;;  userID          2   55[BANK4 ] int 
 16438 ;;  max_voltage_    4   47[BANK4 ] int 
 16439 ;;  max_temp_pri    4   43[BANK4 ] int 
 16440 ;;  max_voltage_    4   39[BANK4 ] int 
 16441 ;;  max_voltage_    4   35[BANK4 ] int 
 16442 ;;  max_Power_pr    4   31[BANK4 ] int 
 16443 ;;  max_current_    4   27[BANK4 ] int 
 16444 ;;  arg_buff        3   20[BANK4 ] unsigned char [3]
 16445 ;;  percentage      2   53[BANK4 ] int 
 16446 ;; Return value:  Size  Location     Type
 16447 ;;                  1    wreg      void 
 16448 ;; Registers used:
 16449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 16450 ;; Tracked objects:
 16451 ;;		On entry : 0/0
 16452 ;;		On exit  : 0/0
 16453 ;;		Unchanged: 0/0
 16454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16455 ;;      Params:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0
 16456 ;;      Locals:         0       0       0       0       0      37       0       0       0       0       0       0       
      +0       0       0
 16457 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0
 16458 ;;      Totals:         0       0       0       0       0      41       0       0       0       0       0       0       
      +0       0       0
 16459 ;;Total ram usage:       41 bytes
 16460 ;; Hardware stack levels used:    1
 16461 ;; Hardware stack levels required when called:   26
 16462 ;; This function calls:
 16463 ;;		_OLED_updateCallback
 16464 ;;		_TMR5_StopTimer
 16465 ;;		___fladd
 16466 ;;		___fldiv
 16467 ;;		___flmul
 16468 ;;		___flneg
 16469 ;;		___wmul
 16470 ;;		___xxtofl
 16471 ;;		_atoi
 16472 ;;		_clearADCErrors
 16473 ;;		_clearCOMMErrors
 16474 ;;		_getADCError
 16475 ;;		_getCOMMError
 16476 ;;		_getCauseOfResetString
 16477 ;;		_getDeviceID
 16478 ;;		_getDeviceIDString
 16479 ;;		_getMajorRevisionID
 16480 ;;		_getMinorRevisionID
 16481 ;;		_getUserID
 16482 ;;		_printf
 16483 ;;		_readDoubleFromEEPROM
 16484 ;;		_strcmp
 16485 ;;		_strstr
 16486 ;;		_terminal_printNewline
 16487 ;;		_terminal_textAttributes
 16488 ;;		_terminal_textAttributesReset
 16489 ;;		_writeDoubleToEEPROM
 16490 ;; This function is called by:
 16491 ;;		_terminal_ringBufferPull
 16492 ;; This function uses a non-reentrant model
 16493 ;;
 16494                           
 16495                           	psect	text4
 16496  010000                     __ptext4:
 16497                           	opt stack 0
 16498  010000                     _ringBufferLUT:
 16499                           	opt stack 3
 16500                           
 16501                           ;ring_buffer_LUT.c: 71: if((0 == strcmp(line, "Reset"))) {
 16502                           
 16503                           ;incstack = 0
 16504  010000  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 16505  010004  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16506  010008  0EDD               	movlw	low (STR_209+5)
 16507  01000A  0101               	movlb	1	; () banked
 16508  01000C  6F51               	movwf	strcmp@s2& (0+255),b
 16509  01000E  0EFE               	movlw	high (STR_209+5)
 16510  010010  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 16511  010012  EC1B  F0D7         	call	_strcmp	;wreg free
 16512  010016  0101               	movlb	1	; () banked
 16513  010018  514F               	movf	?_strcmp& (0+255),w,b
 16514  01001A  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 16515  01001C  A4D8               	btfss	status,2,c
 16516  01001E  D026               	goto	l1659
 16517                           
 16518                           ; BSR set to: 1
 16519                           ;ring_buffer_LUT.c: 75: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 16520  010020  C0F0  F153         	movff	_Total_Energy,writeDoubleToEEPROM@input_double	;volatile
 16521  010024  C0F1  F154         	movff	_Total_Energy+1,writeDoubleToEEPROM@input_double+1	;volatile
 16522  010028  C0F2  F155         	movff	_Total_Energy+2,writeDoubleToEEPROM@input_double+2	;volatile
 16523  01002C  C0F3  F156         	movff	_Total_Energy+3,writeDoubleToEEPROM@input_double+3	;volatile
 16524  010030  0E99               	movlw	low _Total_Energy_address
 16525  010032  6EF6               	movwf	tblptrl,c
 16526  010034                     	if	1	;There is more than 1 active tblptr byte
 16527  010034  0ECE               	movlw	high _Total_Energy_address
 16528  010036  6EF7               	movwf	tblptrh,c
 16529  010038                     	endif
 16530  010038                     	if	1	;There are 3 active tblptr bytes
 16531  010038  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 16532  01003A  6EF8               	movwf	tblptru,c
 16533  01003C                     	endif
 16534  01003C  0009               	tblrd		*+
 16535  01003E  CFF5 F157          	movff	tablat,writeDoubleToEEPROM@starting_address
 16536  010042  000A               	tblrd		*-
 16537  010044  CFF5 F158          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 16538  010048  EC43  F0D7         	call	_writeDoubleToEEPROM	;wreg free
 16539                           
 16540                           ;ring_buffer_LUT.c: 78: printf("\033[2J");
 16541  01004C  0EB3               	movlw	low STR_19
 16542  01004E  0102               	movlb	2	; () banked
 16543  010050  6F85               	movwf	printf@f& (0+255),b
 16544  010052  0EFF               	movlw	high STR_19
 16545  010054  6F86               	movwf	(printf@f+1)& (0+255),b
 16546  010056  ECA0  F0DA         	call	_printf	;wreg free
 16547                           
 16548                           ;ring_buffer_LUT.c: 81: printf("\033[H");
 16549  01005A  0EBC               	movlw	low STR_20
 16550  01005C  0102               	movlb	2	; () banked
 16551  01005E  6F85               	movwf	printf@f& (0+255),b
 16552  010060  0EFF               	movlw	high STR_20
 16553  010062  6F86               	movwf	(printf@f+1)& (0+255),b
 16554  010064  ECA0  F0DA         	call	_printf	;wreg free
 16555  010068  00FF               	reset		;# 
 16556                           
 16557                           ;ring_buffer_LUT.c: 86: }
 16558  01006A  0012               	return	
 16559  01006C                     l1659:
 16560                           
 16561                           ;ring_buffer_LUT.c: 89: else if((0 == strcmp(line, "Clear"))) {
 16562  01006C  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 16563  010070  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16564  010074  0EA2               	movlw	low STR_61
 16565  010076  0101               	movlb	1	; () banked
 16566  010078  6F51               	movwf	strcmp@s2& (0+255),b
 16567  01007A  0EFF               	movlw	high STR_61
 16568  01007C  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 16569  01007E  EC1B  F0D7         	call	_strcmp	;wreg free
 16570  010082  0101               	movlb	1	; () banked
 16571  010084  514F               	movf	?_strcmp& (0+255),w,b
 16572  010086  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 16573  010088  A4D8               	btfss	status,2,c
 16574  01008A  D00F               	goto	l1661
 16575                           
 16576                           ; BSR set to: 1
 16577                           ;ring_buffer_LUT.c: 92: printf("\033[2J");
 16578  01008C  0EB3               	movlw	low STR_19
 16579  01008E  0102               	movlb	2	; () banked
 16580  010090  6F85               	movwf	printf@f& (0+255),b
 16581  010092  0EFF               	movlw	high STR_19
 16582  010094  6F86               	movwf	(printf@f+1)& (0+255),b
 16583  010096  ECA0  F0DA         	call	_printf	;wreg free
 16584                           
 16585                           ;ring_buffer_LUT.c: 95: printf("\033[H");
 16586  01009A  0EBC               	movlw	low STR_20
 16587  01009C  0102               	movlb	2	; () banked
 16588  01009E  6F85               	movwf	printf@f& (0+255),b
 16589  0100A0  0EFF               	movlw	high STR_20
 16590  0100A2  6F86               	movwf	(printf@f+1)& (0+255),b
 16591  0100A4  ECA0  F0DA         	call	_printf	;wreg free
 16592                           
 16593                           ;ring_buffer_LUT.c: 97: }
 16594  0100A8  0012               	return	
 16595  0100AA                     l1661:
 16596                           
 16597                           ;ring_buffer_LUT.c: 100: else if((0 == strcmp(line, "Cause of Reset?"))) {
 16598  0100AA  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 16599  0100AE  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16600  0100B2  0E00               	movlw	low STR_64
 16601  0100B4  0101               	movlb	1	; () banked
 16602  0100B6  6F51               	movwf	strcmp@s2& (0+255),b
 16603  0100B8  0EFD               	movlw	high STR_64
 16604  0100BA  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 16605  0100BC  EC1B  F0D7         	call	_strcmp	;wreg free
 16606  0100C0  0101               	movlb	1	; () banked
 16607  0100C2  514F               	movf	?_strcmp& (0+255),w,b
 16608  0100C4  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 16609  0100C6  A4D8               	btfss	status,2,c
 16610  0100C8  D019               	goto	l1663
 16611                           
 16612                           ; BSR set to: 1
 16613                           ;ring_buffer_LUT.c: 102: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16614  0100CA  0E00               	movlw	0
 16615  0100CC  0102               	movlb	2	; () banked
 16616  0100CE  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 16617  0100D0  0E00               	movlw	0
 16618  0100D2  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16619  0100D4  0E02               	movlw	2
 16620  0100D6  ECA8  F0AA         	call	_terminal_textAttributes
 16621                           
 16622                           ;ring_buffer_LUT.c: 105: printf("The cause of the most recent device reset was: %s\n\r",
 16623                           ;ring_buffer_LUT.c: 106: getCauseOfResetString(reset_cause));
 16624  0100DA  0EDE               	movlw	low STR_65
 16625  0100DC  0102               	movlb	2	; () banked
 16626  0100DE  6F85               	movwf	printf@f& (0+255),b
 16627  0100E0  0EF4               	movlw	high STR_65
 16628  0100E2  6F86               	movwf	(printf@f+1)& (0+255),b
 16629  0100E4  51FE               	movf	_reset_cause& (0+255),w,b
 16630  0100E6  EC85  F0DC         	call	_getCauseOfResetString
 16631  0100EA  C14F  F287         	movff	?_getCauseOfResetString,?_printf+2
 16632  0100EE  C150  F288         	movff	?_getCauseOfResetString+1,?_printf+3
 16633  0100F2  ECA0  F0DA         	call	_printf	;wreg free
 16634                           
 16635                           ;ring_buffer_LUT.c: 108: terminal_textAttributesReset();
 16636  0100F6  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 16637                           
 16638                           ;ring_buffer_LUT.c: 110: }
 16639  0100FA  0012               	return	
 16640  0100FC                     l1663:
 16641                           
 16642                           ;ring_buffer_LUT.c: 113: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN
      +                          "))) {
 16643  0100FC  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 16644  010100  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16645  010104  0E9C               	movlw	low STR_66
 16646  010106  0101               	movlb	1	; () banked
 16647  010108  6F51               	movwf	strcmp@s2& (0+255),b
 16648  01010A  0EFF               	movlw	high STR_66
 16649  01010C  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 16650  01010E  EC1B  F0D7         	call	_strcmp	;wreg free
 16651  010112  0101               	movlb	1	; () banked
 16652  010114  514F               	movf	?_strcmp& (0+255),w,b
 16653  010116  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 16654  010118  B4D8               	btfsc	status,2,c
 16655  01011A  D00F               	goto	u36000
 16656                           
 16657                           ; BSR set to: 1
 16658  01011C  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 16659  010120  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16660  010124  0EB8               	movlw	low STR_67
 16661  010126  6F51               	movwf	strcmp@s2& (0+255),b
 16662  010128  0EFF               	movlw	high STR_67
 16663  01012A  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 16664  01012C  EC1B  F0D7         	call	_strcmp	;wreg free
 16665  010130  0101               	movlb	1	; () banked
 16666  010132  514F               	movf	?_strcmp& (0+255),w,b
 16667  010134  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 16668  010136  A4D8               	btfss	status,2,c
 16669  010138  D019               	goto	l1665
 16670  01013A                     u36000:
 16671                           
 16672                           ; BSR set to: 1
 16673                           ;ring_buffer_LUT.c: 115: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16674                           
 16675                           ; BSR set to: 1
 16676  01013A  0E00               	movlw	0
 16677  01013C  0102               	movlb	2	; () banked
 16678  01013E  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 16679  010140  0E00               	movlw	0
 16680  010142  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16681  010144  0E02               	movlw	2
 16682  010146  ECA8  F0AA         	call	_terminal_textAttributes
 16683                           
 16684                           ;ring_buffer_LUT.c: 116: printf("AC Power Meter\n\r");
 16685  01014A  0E49               	movlw	low STR_68
 16686  01014C  0102               	movlb	2	; () banked
 16687  01014E  6F85               	movwf	printf@f& (0+255),b
 16688  010150  0EFC               	movlw	high STR_68
 16689  010152  6F86               	movwf	(printf@f+1)& (0+255),b
 16690  010154  ECA0  F0DA         	call	_printf	;wreg free
 16691                           
 16692                           ;ring_buffer_LUT.c: 117: printf("Marquette University ELEN 3035 Final Project\n\r");
 16693  010158  0EDC               	movlw	low STR_69
 16694  01015A  0102               	movlb	2	; () banked
 16695  01015C  6F85               	movwf	printf@f& (0+255),b
 16696  01015E  0EF5               	movlw	high STR_69
 16697  010160  6F86               	movwf	(printf@f+1)& (0+255),b
 16698  010162  ECA0  F0DA         	call	_printf	;wreg free
 16699                           
 16700                           ;ring_buffer_LUT.c: 118: terminal_textAttributesReset();
 16701  010166  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 16702                           
 16703                           ;ring_buffer_LUT.c: 120: }
 16704  01016A  0012               	return	
 16705  01016C                     l1665:
 16706                           
 16707                           ;ring_buffer_LUT.c: 123: else if((0 == strcmp(line, "Device ID?"))) {
 16708  01016C  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 16709  010170  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16710  010174  0E1A               	movlw	low STR_70
 16711  010176  0101               	movlb	1	; () banked
 16712  010178  6F51               	movwf	strcmp@s2& (0+255),b
 16713  01017A  0EFF               	movlw	high STR_70
 16714  01017C  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 16715  01017E  EC1B  F0D7         	call	_strcmp	;wreg free
 16716  010182  0101               	movlb	1	; () banked
 16717  010184  514F               	movf	?_strcmp& (0+255),w,b
 16718  010186  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 16719  010188  A4D8               	btfss	status,2,c
 16720  01018A  D024               	goto	l1669
 16721                           
 16722                           ; BSR set to: 1
 16723                           ;ring_buffer_LUT.c: 125: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16724  01018C  0E00               	movlw	0
 16725  01018E  0102               	movlb	2	; () banked
 16726  010190  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 16727  010192  0E00               	movlw	0
 16728  010194  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16729  010196  0E02               	movlw	2
 16730  010198  ECA8  F0AA         	call	_terminal_textAttributes
 16731                           
 16732                           ;ring_buffer_LUT.c: 128: printf("Device ID stored in Flash is: 0x%X. This corresponds to
      +                           a device "
 16733                           ;ring_buffer_LUT.c: 129: "part number of %s\n\r",
 16734                           ;ring_buffer_LUT.c: 130: getDeviceID(),
 16735                           ;ring_buffer_LUT.c: 131: getDeviceIDString(getDeviceID()));
 16736  01019C  0EF1               	movlw	low STR_71
 16737  01019E  0102               	movlb	2	; () banked
 16738  0101A0  6F85               	movwf	printf@f& (0+255),b
 16739  0101A2  0EEF               	movlw	high STR_71
 16740  0101A4  6F86               	movwf	(printf@f+1)& (0+255),b
 16741  0101A6  EC59  F0DE         	call	_getDeviceID	;wreg free
 16742  0101AA  C15A  F287         	movff	?_getDeviceID,?_printf+2
 16743  0101AE  C15B  F288         	movff	?_getDeviceID+1,?_printf+3
 16744  0101B2  EC59  F0DE         	call	_getDeviceID	;wreg free
 16745  0101B6  C15A  F15C         	movff	?_getDeviceID,getDeviceIDString@inputDevID
 16746  0101BA  C15B  F15D         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
 16747  0101BE  ECBC  F0D5         	call	_getDeviceIDString	;wreg free
 16748  0101C2  C15C  F289         	movff	?_getDeviceIDString,?_printf+4
 16749  0101C6  C15D  F28A         	movff	?_getDeviceIDString+1,?_printf+5
 16750  0101CA  ECA0  F0DA         	call	_printf	;wreg free
 16751                           
 16752                           ;ring_buffer_LUT.c: 133: terminal_textAttributesReset();
 16753  0101CE  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 16754                           
 16755                           ;ring_buffer_LUT.c: 135: }
 16756  0101D2  0012               	return	
 16757  0101D4                     l1669:
 16758                           
 16759                           ;ring_buffer_LUT.c: 138: else if((0 == strcmp(line, "Revision ID?"))) {
 16760  0101D4  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 16761  0101D8  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16762  0101DC  0E42               	movlw	low STR_72
 16763  0101DE  0101               	movlb	1	; () banked
 16764  0101E0  6F51               	movwf	strcmp@s2& (0+255),b
 16765  0101E2  0EFE               	movlw	high STR_72
 16766  0101E4  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 16767  0101E6  EC1B  F0D7         	call	_strcmp	;wreg free
 16768  0101EA  0101               	movlb	1	; () banked
 16769  0101EC  514F               	movf	?_strcmp& (0+255),w,b
 16770  0101EE  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 16771  0101F0  A4D8               	btfss	status,2,c
 16772  0101F2  D025               	goto	l1671
 16773                           
 16774                           ; BSR set to: 1
 16775                           ;ring_buffer_LUT.c: 140: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16776  0101F4  0E00               	movlw	0
 16777  0101F6  0102               	movlb	2	; () banked
 16778  0101F8  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 16779  0101FA  0E00               	movlw	0
 16780  0101FC  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16781  0101FE  0E02               	movlw	2
 16782  010200  ECA8  F0AA         	call	_terminal_textAttributes
 16783                           
 16784                           ;ring_buffer_LUT.c: 143: printf("Device silicon revision ID as stored in Flash is: %c%03
      +                          d\n\r",
 16785                           ;ring_buffer_LUT.c: 144: ((char) getMajorRevisionID() + 65),getMinorRevisionID());
 16786  010204  0E10               	movlw	low STR_73
 16787  010206  0102               	movlb	2	; () banked
 16788  010208  6F85               	movwf	printf@f& (0+255),b
 16789  01020A  0EF2               	movlw	high STR_73
 16790  01020C  6F86               	movwf	(printf@f+1)& (0+255),b
 16791  01020E  ECFD  F0DA         	call	_getMajorRevisionID	;wreg free
 16792  010212  0104               	movlb	4	; () banked
 16793  010214  6F92               	movwf	??_ringBufferLUT& (0+255),b
 16794  010216  0E41               	movlw	65
 16795  010218  2592               	addwf	??_ringBufferLUT& (0+255),w,b
 16796  01021A  0102               	movlb	2	; () banked
 16797  01021C  6F87               	movwf	(?_printf+2)& (0+255),b
 16798  01021E  6B88               	clrf	(?_printf+3)& (0+255),b
 16799  010220  0E00               	movlw	0
 16800  010222  2388               	addwfc	(?_printf+3)& (0+255),f,b
 16801  010224  EC7D  F0DD         	call	_getMinorRevisionID	;wreg free
 16802  010228  0104               	movlb	4	; () banked
 16803  01022A  6F93               	movwf	(??_ringBufferLUT+1)& (0+255),b
 16804  01022C  5193               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 16805  01022E  0102               	movlb	2	; () banked
 16806  010230  6F89               	movwf	(?_printf+4)& (0+255),b
 16807  010232  6B8A               	clrf	(?_printf+5)& (0+255),b
 16808  010234  ECA0  F0DA         	call	_printf	;wreg free
 16809                           
 16810                           ;ring_buffer_LUT.c: 146: terminal_textAttributesReset();
 16811  010238  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 16812                           
 16813                           ;ring_buffer_LUT.c: 148: }
 16814  01023C  0012               	return	
 16815  01023E                     l1671:
 16816                           
 16817                           ;ring_buffer_LUT.c: 151: else if((0 == strcmp(line, "User IDs?"))) {
 16818  01023E  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 16819  010242  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16820  010246  0E6E               	movlw	low STR_74
 16821  010248  0101               	movlb	1	; () banked
 16822  01024A  6F51               	movwf	strcmp@s2& (0+255),b
 16823  01024C  0EFF               	movlw	high STR_74
 16824  01024E  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 16825  010250  EC1B  F0D7         	call	_strcmp	;wreg free
 16826  010254  0101               	movlb	1	; () banked
 16827  010256  514F               	movf	?_strcmp& (0+255),w,b
 16828  010258  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 16829  01025A  A4D8               	btfss	status,2,c
 16830  01025C  D045               	goto	l1673
 16831                           
 16832                           ; BSR set to: 1
 16833                           ;ring_buffer_LUT.c: 153: terminal_textAttributes(GREEN, BLACK, NORMAL);
 16834  01025E  0E00               	movlw	0
 16835  010260  0102               	movlb	2	; () banked
 16836  010262  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 16837  010264  0E00               	movlw	0
 16838  010266  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16839  010268  0E02               	movlw	2
 16840  01026A  ECA8  F0AA         	call	_terminal_textAttributes
 16841                           
 16842                           ;ring_buffer_LUT.c: 155: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
 16843  01026E  0E17               	movlw	low STR_75
 16844  010270  0102               	movlb	2	; () banked
 16845  010272  6F85               	movwf	printf@f& (0+255),b
 16846  010274  0EF1               	movlw	high STR_75
 16847  010276  6F86               	movwf	(printf@f+1)& (0+255),b
 16848  010278  ECA0  F0DA         	call	_printf	;wreg free
 16849                           
 16850                           ;ring_buffer_LUT.c: 158: for (int userID = 0; userID <= 7; userID++) {
 16851  01027C  0E00               	movlw	0
 16852  01027E  0104               	movlb	4	; () banked
 16853  010280  6FB8               	movwf	(ringBufferLUT@userID+1)& (0+255),b
 16854  010282  0E00               	movlw	0
 16855  010284  6FB7               	movwf	ringBufferLUT@userID& (0+255),b
 16856  010286                     l25147:
 16857                           
 16858                           ; BSR set to: 4
 16859  010286  BFB8               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
 16860  010288  D006               	goto	l1674
 16861  01028A  51B8               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
 16862  01028C  E124               	bnz	l25157
 16863  01028E  0E08               	movlw	8
 16864  010290  5DB7               	subwf	ringBufferLUT@userID& (0+255),w,b
 16865  010292  B0D8               	btfsc	status,0,c
 16866  010294  D020               	goto	u36050
 16867  010296                     l1674:
 16868                           
 16869                           ; BSR set to: 4
 16870                           ;ring_buffer_LUT.c: 160: printf("    User ID Word %d (Flash address 0x20000%X): 0x%X\n\r
      +                          ",
 16871                           ;ring_buffer_LUT.c: 161: userID,
 16872                           ;ring_buffer_LUT.c: 162: (2 * userID),
 16873                           ;ring_buffer_LUT.c: 163: getUserID(userID));
 16874                           
 16875                           ; BSR set to: 4
 16876  010296  0E9F               	movlw	low STR_76
 16877  010298  0102               	movlb	2	; () banked
 16878  01029A  6F85               	movwf	printf@f& (0+255),b
 16879  01029C  0EF3               	movlw	high STR_76
 16880  01029E  6F86               	movwf	(printf@f+1)& (0+255),b
 16881  0102A0  C4B7  F287         	movff	ringBufferLUT@userID,?_printf+2
 16882  0102A4  C4B8  F288         	movff	ringBufferLUT@userID+1,?_printf+3
 16883  0102A8  90D8               	bcf	status,0,c
 16884  0102AA  0104               	movlb	4	; () banked
 16885  0102AC  35B7               	rlcf	ringBufferLUT@userID& (0+255),w,b
 16886  0102AE  0102               	movlb	2	; () banked
 16887  0102B0  6F89               	movwf	(?_printf+4)& (0+255),b
 16888  0102B2  0104               	movlb	4	; () banked
 16889  0102B4  35B8               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
 16890  0102B6  0102               	movlb	2	; () banked
 16891  0102B8  6F8A               	movwf	(?_printf+5)& (0+255),b
 16892  0102BA  0104               	movlb	4	; () banked
 16893  0102BC  51B7               	movf	ringBufferLUT@userID& (0+255),w,b
 16894  0102BE  ECA0  F0D6         	call	_getUserID
 16895  0102C2  C15A  F28B         	movff	?_getUserID,?_printf+6
 16896  0102C6  C15B  F28C         	movff	?_getUserID+1,?_printf+7
 16897  0102CA  ECA0  F0DA         	call	_printf	;wreg free
 16898  0102CE  0104               	movlb	4	; () banked
 16899  0102D0  4BB7               	infsnz	ringBufferLUT@userID& (0+255),f,b
 16900  0102D2  2BB8               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
 16901  0102D4  D7D8               	goto	l25147
 16902  0102D6                     u36050:
 16903  0102D6                     l25157:
 16904                           
 16905                           ; BSR set to: 4
 16906                           ;ring_buffer_LUT.c: 165: }
 16907                           ;ring_buffer_LUT.c: 167: terminal_textAttributesReset();
 16908  0102D6  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 16909                           
 16910                           ;ring_buffer_LUT.c: 169: if (error_handler.USB_UART_COMM_error_flag) {
 16911  0102DA  0101               	movlb	1	; () banked
 16912  0102DC  5168               	movf	(_error_handler+8)& (0+255),w,b
 16913  0102DE  B4D8               	btfsc	status,2,c
 16914  0102E0  0012               	return	
 16915                           
 16916                           ; BSR set to: 1
 16917                           ;ring_buffer_LUT.c: 170: error_handler.USB_UART_COMM_error_flag = 0;
 16918  0102E2  0E00               	movlw	0
 16919  0102E4  6F68               	movwf	(_error_handler+8)& (0+255),b
 16920                           
 16921                           ; BSR set to: 1
 16922                           ;ring_buffer_LUT.c: 171: }
 16923                           ;ring_buffer_LUT.c: 173: }
 16924  0102E6  0012               	return	
 16925  0102E8                     l1673:
 16926                           
 16927                           ; BSR set to: 1
 16928                           ;ring_buffer_LUT.c: 176: else if((0 == strcmp(line, "ADC Errors?"))) {
 16929                           
 16930                           ; BSR set to: 1
 16931  0102E8  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 16932  0102EC  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 16933  0102F0  0EB5               	movlw	low STR_77
 16934  0102F2  6F51               	movwf	strcmp@s2& (0+255),b
 16935  0102F4  0EFE               	movlw	high STR_77
 16936  0102F6  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 16937  0102F8  EC1B  F0D7         	call	_strcmp	;wreg free
 16938  0102FC  0101               	movlb	1	; () banked
 16939  0102FE  514F               	movf	?_strcmp& (0+255),w,b
 16940  010300  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 16941  010302  A4D8               	btfss	status,2,c
 16942  010304  D08C               	goto	l1678
 16943                           
 16944                           ; BSR set to: 1
 16945                           ;ring_buffer_LUT.c: 178: if (getADCError()) {
 16946  010306  EC1E  F0DC         	call	_getADCError	;wreg free
 16947  01030A  0900               	iorlw	0
 16948  01030C  B4D8               	btfsc	status,2,c
 16949  01030E  D075               	goto	l1679
 16950                           
 16951                           ;ring_buffer_LUT.c: 180: terminal_textAttributes(RED, BLACK, NORMAL);
 16952  010310  0E00               	movlw	0
 16953  010312  0102               	movlb	2	; () banked
 16954  010314  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 16955  010316  0E00               	movlw	0
 16956  010318  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 16957  01031A  0E01               	movlw	1
 16958  01031C  ECA8  F0AA         	call	_terminal_textAttributes
 16959                           
 16960                           ;ring_buffer_LUT.c: 181: printf("ADC error(s) detected!\n\r");
 16961  010320  0EE0               	movlw	low STR_78
 16962  010322  0102               	movlb	2	; () banked
 16963  010324  6F85               	movwf	printf@f& (0+255),b
 16964  010326  0EFA               	movlw	high STR_78
 16965  010328  6F86               	movwf	(printf@f+1)& (0+255),b
 16966  01032A  ECA0  F0DA         	call	_printf	;wreg free
 16967                           
 16968                           ;ring_buffer_LUT.c: 182: printf("The following channels caused an ADC error:\n\r");
 16969  01032E  0E0B               	movlw	low STR_79
 16970  010330  0102               	movlb	2	; () banked
 16971  010332  6F85               	movwf	printf@f& (0+255),b
 16972  010334  0EF6               	movlw	high STR_79
 16973  010336  6F86               	movwf	(printf@f+1)& (0+255),b
 16974  010338  ECA0  F0DA         	call	_printf	;wreg free
 16975                           
 16976                           ;ring_buffer_LUT.c: 184: if (error_handler.ADC_general_error_flag) {
 16977  01033C  0101               	movlb	1	; () banked
 16978  01033E  5166               	movf	(_error_handler+6)& (0+255),w,b
 16979  010340  B4D8               	btfsc	status,2,c
 16980  010342  D007               	goto	l1680
 16981                           
 16982                           ; BSR set to: 1
 16983                           ;ring_buffer_LUT.c: 185: printf("    General ADC error\n\r");
 16984  010344  0E2B               	movlw	low STR_80
 16985  010346  0102               	movlb	2	; () banked
 16986  010348  6F85               	movwf	printf@f& (0+255),b
 16987  01034A  0EFB               	movlw	high STR_80
 16988  01034C  6F86               	movwf	(printf@f+1)& (0+255),b
 16989  01034E  ECA0  F0DA         	call	_printf	;wreg free
 16990  010352                     l1680:
 16991                           
 16992                           ;ring_buffer_LUT.c: 186: }
 16993                           ;ring_buffer_LUT.c: 188: if (error_handler.AVSS_ADC_error_flag) {
 16994  010352  0101               	movlb	1	; () banked
 16995  010354  5163               	movf	(_error_handler+3)& (0+255),w,b
 16996  010356  B4D8               	btfsc	status,2,c
 16997  010358  D007               	goto	l1681
 16998                           
 16999                           ; BSR set to: 1
 17000                           ;ring_buffer_LUT.c: 189: printf("    AVSS\n\r");
 17001  01035A  0E0F               	movlw	low STR_81
 17002  01035C  0102               	movlb	2	; () banked
 17003  01035E  6F85               	movwf	printf@f& (0+255),b
 17004  010360  0EFF               	movlw	high STR_81
 17005  010362  6F86               	movwf	(printf@f+1)& (0+255),b
 17006  010364  ECA0  F0DA         	call	_printf	;wreg free
 17007  010368                     l1681:
 17008                           
 17009                           ;ring_buffer_LUT.c: 190: }
 17010                           ;ring_buffer_LUT.c: 192: if (error_handler.FVR_ADC_error_flag) {
 17011  010368  0101               	movlb	1	; () banked
 17012  01036A  5165               	movf	(_error_handler+5)& (0+255),w,b
 17013  01036C  B4D8               	btfsc	status,2,c
 17014  01036E  D007               	goto	l1682
 17015                           
 17016                           ; BSR set to: 1
 17017                           ;ring_buffer_LUT.c: 193: printf("    FVR\n\r");
 17018  010370  0E64               	movlw	low STR_82
 17019  010372  0102               	movlb	2	; () banked
 17020  010374  6F85               	movwf	printf@f& (0+255),b
 17021  010376  0EFF               	movlw	high STR_82
 17022  010378  6F86               	movwf	(printf@f+1)& (0+255),b
 17023  01037A  ECA0  F0DA         	call	_printf	;wreg free
 17024  01037E                     l1682:
 17025                           
 17026                           ;ring_buffer_LUT.c: 194: }
 17027                           ;ring_buffer_LUT.c: 196: if (error_handler.ISNS_ADC_error_flag) {
 17028  01037E  0101               	movlb	1	; () banked
 17029  010380  5160               	movf	_error_handler& (0+255),w,b
 17030  010382  B4D8               	btfsc	status,2,c
 17031  010384  D007               	goto	l1683
 17032                           
 17033                           ; BSR set to: 1
 17034                           ;ring_buffer_LUT.c: 197: printf("    ISNS\n\r");
 17035  010386  0E04               	movlw	low STR_83
 17036  010388  0102               	movlb	2	; () banked
 17037  01038A  6F85               	movwf	printf@f& (0+255),b
 17038  01038C  0EFF               	movlw	high STR_83
 17039  01038E  6F86               	movwf	(printf@f+1)& (0+255),b
 17040  010390  ECA0  F0DA         	call	_printf	;wreg free
 17041  010394                     l1683:
 17042                           
 17043                           ;ring_buffer_LUT.c: 198: }
 17044                           ;ring_buffer_LUT.c: 200: if (error_handler.POS12_ADC_error_flag) {
 17045  010394  0101               	movlb	1	; () banked
 17046  010396  5161               	movf	(_error_handler+1)& (0+255),w,b
 17047  010398  B4D8               	btfsc	status,2,c
 17048  01039A  D007               	goto	l1684
 17049                           
 17050                           ; BSR set to: 1
 17051                           ;ring_buffer_LUT.c: 201: printf("    POS12\n\r");
 17052  01039C  0EA9               	movlw	low STR_84
 17053  01039E  0102               	movlb	2	; () banked
 17054  0103A0  6F85               	movwf	printf@f& (0+255),b
 17055  0103A2  0EFE               	movlw	high STR_84
 17056  0103A4  6F86               	movwf	(printf@f+1)& (0+255),b
 17057  0103A6  ECA0  F0DA         	call	_printf	;wreg free
 17058  0103AA                     l1684:
 17059                           
 17060                           ;ring_buffer_LUT.c: 202: }
 17061                           ;ring_buffer_LUT.c: 204: if (error_handler.POS3P3_ADC_error_flag) {
 17062  0103AA  0101               	movlb	1	; () banked
 17063  0103AC  5162               	movf	(_error_handler+2)& (0+255),w,b
 17064  0103AE  B4D8               	btfsc	status,2,c
 17065  0103B0  D007               	goto	l1685
 17066                           
 17067                           ; BSR set to: 1
 17068                           ;ring_buffer_LUT.c: 205: printf("    POS3P3\n\r");
 17069  0103B2  0E28               	movlw	low STR_85
 17070  0103B4  0102               	movlb	2	; () banked
 17071  0103B6  6F85               	movwf	printf@f& (0+255),b
 17072  0103B8  0EFE               	movlw	high STR_85
 17073  0103BA  6F86               	movwf	(printf@f+1)& (0+255),b
 17074  0103BC  ECA0  F0DA         	call	_printf	;wreg free
 17075  0103C0                     l1685:
 17076                           
 17077                           ;ring_buffer_LUT.c: 206: }
 17078                           ;ring_buffer_LUT.c: 208: if (error_handler.Temp_ADC_error_flag) {
 17079  0103C0  0101               	movlb	1	; () banked
 17080  0103C2  5164               	movf	(_error_handler+4)& (0+255),w,b
 17081  0103C4  B4D8               	btfsc	status,2,c
 17082  0103C6  D007               	goto	l1686
 17083                           
 17084                           ; BSR set to: 1
 17085                           ;ring_buffer_LUT.c: 209: printf("    Die Temp\n\r");
 17086  0103C8  0E6E               	movlw	low STR_86
 17087  0103CA  0102               	movlb	2	; () banked
 17088  0103CC  6F85               	movwf	printf@f& (0+255),b
 17089  0103CE  0EFD               	movlw	high STR_86
 17090  0103D0  6F86               	movwf	(printf@f+1)& (0+255),b
 17091  0103D2  ECA0  F0DA         	call	_printf	;wreg free
 17092  0103D6                     l1686:
 17093                           
 17094                           ;ring_buffer_LUT.c: 210: }
 17095                           ;ring_buffer_LUT.c: 212: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17096  0103D6  0E00               	movlw	0
 17097  0103D8  0102               	movlb	2	; () banked
 17098  0103DA  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17099  0103DC  0E00               	movlw	0
 17100  0103DE  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17101  0103E0  0E03               	movlw	3
 17102  0103E2  ECA8  F0AA         	call	_terminal_textAttributes
 17103                           
 17104                           ;ring_buffer_LUT.c: 213: printf("Call 'Clear ADC Errors' to clear ADC error(s)\n\r");
 17105  0103E6  0EAC               	movlw	low STR_87
 17106  0103E8  0102               	movlb	2	; () banked
 17107  0103EA  6F85               	movwf	printf@f& (0+255),b
 17108  0103EC  0EF5               	movlw	high STR_87
 17109  0103EE  6F86               	movwf	(printf@f+1)& (0+255),b
 17110  0103F0  ECA0  F0DA         	call	_printf	;wreg free
 17111                           
 17112                           ;ring_buffer_LUT.c: 214: terminal_textAttributesReset();
 17113  0103F4  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17114                           
 17115                           ;ring_buffer_LUT.c: 216: }
 17116  0103F8  0012               	return	
 17117  0103FA                     l1679:
 17118                           
 17119                           ;ring_buffer_LUT.c: 218: else {
 17120                           ;ring_buffer_LUT.c: 220: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17121  0103FA  0E00               	movlw	0
 17122  0103FC  0102               	movlb	2	; () banked
 17123  0103FE  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17124  010400  0E00               	movlw	0
 17125  010402  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17126  010404  0E02               	movlw	2
 17127  010406  ECA8  F0AA         	call	_terminal_textAttributes
 17128                           
 17129                           ;ring_buffer_LUT.c: 221: printf("No ADC error(s) detected\n\r");
 17130  01040A  0EAB               	movlw	low STR_88
 17131  01040C  0102               	movlb	2	; () banked
 17132  01040E  6F85               	movwf	printf@f& (0+255),b
 17133  010410  0EFA               	movlw	high STR_88
 17134  010412  6F86               	movwf	(printf@f+1)& (0+255),b
 17135  010414  ECA0  F0DA         	call	_printf	;wreg free
 17136                           
 17137                           ;ring_buffer_LUT.c: 222: terminal_textAttributesReset();
 17138  010418  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17139                           
 17140                           ;ring_buffer_LUT.c: 224: }
 17141                           ;ring_buffer_LUT.c: 226: }
 17142  01041C  0012               	return	
 17143  01041E                     l1678:
 17144                           
 17145                           ;ring_buffer_LUT.c: 229: else if((0 == strcmp(line, "Clear ADC Errors"))) {
 17146  01041E  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 17147  010422  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17148  010426  0EAF               	movlw	low STR_89
 17149  010428  0101               	movlb	1	; () banked
 17150  01042A  6F51               	movwf	strcmp@s2& (0+255),b
 17151  01042C  0EFC               	movlw	high STR_89
 17152  01042E  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 17153  010430  EC1B  F0D7         	call	_strcmp	;wreg free
 17154  010434  0101               	movlb	1	; () banked
 17155  010436  514F               	movf	?_strcmp& (0+255),w,b
 17156  010438  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 17157  01043A  A4D8               	btfss	status,2,c
 17158  01043C  D014               	goto	l1689
 17159                           
 17160                           ; BSR set to: 1
 17161                           ;ring_buffer_LUT.c: 231: clearADCErrors();
 17162  01043E  EC37  F0DE         	call	_clearADCErrors	;wreg free
 17163                           
 17164                           ;ring_buffer_LUT.c: 233: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17165  010442  0E00               	movlw	0
 17166  010444  0102               	movlb	2	; () banked
 17167  010446  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17168  010448  0E00               	movlw	0
 17169  01044A  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17170  01044C  0E02               	movlw	2
 17171  01044E  ECA8  F0AA         	call	_terminal_textAttributes
 17172                           
 17173                           ;ring_buffer_LUT.c: 234: printf("ADC Error(s) cleared\n\r");
 17174  010452  0E5A               	movlw	low STR_90
 17175  010454  0102               	movlb	2	; () banked
 17176  010456  6F85               	movwf	printf@f& (0+255),b
 17177  010458  0EFB               	movlw	high STR_90
 17178  01045A  6F86               	movwf	(printf@f+1)& (0+255),b
 17179  01045C  ECA0  F0DA         	call	_printf	;wreg free
 17180                           
 17181                           ;ring_buffer_LUT.c: 235: terminal_textAttributesReset();
 17182  010460  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17183                           
 17184                           ;ring_buffer_LUT.c: 237: }
 17185  010464  0012               	return	
 17186  010466                     l1689:
 17187                           
 17188                           ;ring_buffer_LUT.c: 240: else if((0 == strcmp(line, "Comm Errors?"))) {
 17189  010466  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 17190  01046A  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17191  01046E  0E5C               	movlw	low STR_91
 17192  010470  0101               	movlb	1	; () banked
 17193  010472  6F51               	movwf	strcmp@s2& (0+255),b
 17194  010474  0EFE               	movlw	high STR_91
 17195  010476  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 17196  010478  EC1B  F0D7         	call	_strcmp	;wreg free
 17197  01047C  0101               	movlb	1	; () banked
 17198  01047E  514F               	movf	?_strcmp& (0+255),w,b
 17199  010480  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 17200  010482  A4D8               	btfss	status,2,c
 17201  010484  D04E               	goto	l1691
 17202                           
 17203                           ; BSR set to: 1
 17204                           ;ring_buffer_LUT.c: 242: if (getCOMMError()) {
 17205  010486  EC28  F0DF         	call	_getCOMMError	;wreg free
 17206  01048A  0900               	iorlw	0
 17207  01048C  B4D8               	btfsc	status,2,c
 17208  01048E  D037               	goto	l1692
 17209                           
 17210                           ;ring_buffer_LUT.c: 244: terminal_textAttributes(RED, BLACK, NORMAL);
 17211  010490  0E00               	movlw	0
 17212  010492  0102               	movlb	2	; () banked
 17213  010494  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17214  010496  0E00               	movlw	0
 17215  010498  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17216  01049A  0E01               	movlw	1
 17217  01049C  ECA8  F0AA         	call	_terminal_textAttributes
 17218                           
 17219                           ;ring_buffer_LUT.c: 245: printf("Communications error(s) detected! Interfaces causing er
      +                          ror(s):\n\r");
 17220  0104A0  0ED6               	movlw	low STR_92
 17221  0104A2  0102               	movlb	2	; () banked
 17222  0104A4  6F85               	movwf	printf@f& (0+255),b
 17223  0104A6  0EF0               	movlw	high STR_92
 17224  0104A8  6F86               	movwf	(printf@f+1)& (0+255),b
 17225  0104AA  ECA0  F0DA         	call	_printf	;wreg free
 17226                           
 17227                           ;ring_buffer_LUT.c: 247: if (error_handler.I2C_COMM_error_flag) {
 17228  0104AE  0101               	movlb	1	; () banked
 17229  0104B0  5167               	movf	(_error_handler+7)& (0+255),w,b
 17230  0104B2  B4D8               	btfsc	status,2,c
 17231  0104B4  D007               	goto	l1693
 17232                           
 17233                           ; BSR set to: 1
 17234                           ;ring_buffer_LUT.c: 248: printf("    OLED Display I2C\n\r");
 17235  0104B6  0E43               	movlw	low STR_93
 17236  0104B8  0102               	movlb	2	; () banked
 17237  0104BA  6F85               	movwf	printf@f& (0+255),b
 17238  0104BC  0EFB               	movlw	high STR_93
 17239  0104BE  6F86               	movwf	(printf@f+1)& (0+255),b
 17240  0104C0  ECA0  F0DA         	call	_printf	;wreg free
 17241  0104C4                     l1693:
 17242                           
 17243                           ;ring_buffer_LUT.c: 249: }
 17244                           ;ring_buffer_LUT.c: 251: if (error_handler.USB_UART_COMM_error_flag) {
 17245  0104C4  0101               	movlb	1	; () banked
 17246  0104C6  5168               	movf	(_error_handler+8)& (0+255),w,b
 17247  0104C8  B4D8               	btfsc	status,2,c
 17248  0104CA  D007               	goto	l1694
 17249                           
 17250                           ; BSR set to: 1
 17251                           ;ring_buffer_LUT.c: 252: printf("    USB UART (this interface)\n\r");
 17252  0104CC  0E65               	movlw	low STR_94
 17253  0104CE  0102               	movlb	2	; () banked
 17254  0104D0  6F85               	movwf	printf@f& (0+255),b
 17255  0104D2  0EF9               	movlw	high STR_94
 17256  0104D4  6F86               	movwf	(printf@f+1)& (0+255),b
 17257  0104D6  ECA0  F0DA         	call	_printf	;wreg free
 17258  0104DA                     l1694:
 17259                           
 17260                           ;ring_buffer_LUT.c: 253: }
 17261                           ;ring_buffer_LUT.c: 255: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17262  0104DA  0E00               	movlw	0
 17263  0104DC  0102               	movlb	2	; () banked
 17264  0104DE  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17265  0104E0  0E00               	movlw	0
 17266  0104E2  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17267  0104E4  0E03               	movlw	3
 17268  0104E6  ECA8  F0AA         	call	_terminal_textAttributes
 17269                           
 17270                           ;ring_buffer_LUT.c: 256: printf("Call 'Clear COMM Errors' to clear communications error(
      +                          s)\n\r");
 17271  0104EA  0ED4               	movlw	low STR_95
 17272  0104EC  0102               	movlb	2	; () banked
 17273  0104EE  6F85               	movwf	printf@f& (0+255),b
 17274  0104F0  0EF1               	movlw	high STR_95
 17275  0104F2  6F86               	movwf	(printf@f+1)& (0+255),b
 17276  0104F4  ECA0  F0DA         	call	_printf	;wreg free
 17277                           
 17278                           ;ring_buffer_LUT.c: 257: terminal_textAttributesReset();
 17279  0104F8  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17280                           
 17281                           ;ring_buffer_LUT.c: 259: }
 17282  0104FC  0012               	return	
 17283  0104FE                     l1692:
 17284                           
 17285                           ;ring_buffer_LUT.c: 261: else {
 17286                           ;ring_buffer_LUT.c: 263: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17287  0104FE  0E00               	movlw	0
 17288  010500  0102               	movlb	2	; () banked
 17289  010502  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17290  010504  0E00               	movlw	0
 17291  010506  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17292  010508  0E02               	movlw	2
 17293  01050A  ECA8  F0AA         	call	_terminal_textAttributes
 17294                           
 17295                           ;ring_buffer_LUT.c: 264: printf("No communications error(s) detected\n\r");
 17296  01050E  0EBD               	movlw	low STR_96
 17297  010510  0102               	movlb	2	; () banked
 17298  010512  6F85               	movwf	printf@f& (0+255),b
 17299  010514  0EF7               	movlw	high STR_96
 17300  010516  6F86               	movwf	(printf@f+1)& (0+255),b
 17301  010518  ECA0  F0DA         	call	_printf	;wreg free
 17302                           
 17303                           ;ring_buffer_LUT.c: 265: terminal_textAttributesReset();
 17304  01051C  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17305                           
 17306                           ;ring_buffer_LUT.c: 267: }
 17307                           ;ring_buffer_LUT.c: 268: }
 17308  010520  0012               	return	
 17309  010522                     l1691:
 17310                           
 17311                           ;ring_buffer_LUT.c: 271: else if((0 == strcmp(line, "Clear Comm Errors"))) {
 17312  010522  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 17313  010526  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17314  01052A  0E26               	movlw	low STR_97
 17315  01052C  0101               	movlb	1	; () banked
 17316  01052E  6F51               	movwf	strcmp@s2& (0+255),b
 17317  010530  0EFC               	movlw	high STR_97
 17318  010532  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 17319  010534  EC1B  F0D7         	call	_strcmp	;wreg free
 17320  010538  0101               	movlb	1	; () banked
 17321  01053A  514F               	movf	?_strcmp& (0+255),w,b
 17322  01053C  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 17323  01053E  A4D8               	btfss	status,2,c
 17324  010540  D014               	goto	l1697
 17325                           
 17326                           ; BSR set to: 1
 17327                           ;ring_buffer_LUT.c: 273: clearCOMMErrors();
 17328  010542  EC8B  F0DF         	call	_clearCOMMErrors	;wreg free
 17329                           
 17330                           ;ring_buffer_LUT.c: 275: terminal_textAttributes(GREEN, BLACK, NORMAL);
 17331  010546  0E00               	movlw	0
 17332  010548  0102               	movlb	2	; () banked
 17333  01054A  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17334  01054C  0E00               	movlw	0
 17335  01054E  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17336  010550  0E02               	movlw	2
 17337  010552  ECA8  F0AA         	call	_terminal_textAttributes
 17338                           
 17339                           ;ring_buffer_LUT.c: 276: printf("Communications error(s) cleared\n\r");
 17340  010556  0EBC               	movlw	low STR_98
 17341  010558  0102               	movlb	2	; () banked
 17342  01055A  6F85               	movwf	printf@f& (0+255),b
 17343  01055C  0EF8               	movlw	high STR_98
 17344  01055E  6F86               	movwf	(printf@f+1)& (0+255),b
 17345  010560  ECA0  F0DA         	call	_printf	;wreg free
 17346                           
 17347                           ;ring_buffer_LUT.c: 277: terminal_textAttributesReset();
 17348  010564  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17349                           
 17350                           ;ring_buffer_LUT.c: 279: }
 17351  010568  0012               	return	
 17352  01056A                     l1697:
 17353                           
 17354                           ;ring_buffer_LUT.c: 283: else if((0 == strcmp(line, "Measure POS3P3?"))) {
 17355  01056A  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 17356  01056E  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17357  010572  0EE0               	movlw	low STR_99
 17358  010574  0101               	movlb	1	; () banked
 17359  010576  6F51               	movwf	strcmp@s2& (0+255),b
 17360  010578  0EFC               	movlw	high STR_99
 17361  01057A  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 17362  01057C  EC1B  F0D7         	call	_strcmp	;wreg free
 17363  010580  0101               	movlb	1	; () banked
 17364  010582  514F               	movf	?_strcmp& (0+255),w,b
 17365  010584  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 17366  010586  A4D8               	btfss	status,2,c
 17367  010588  D01A               	goto	l1699
 17368                           
 17369                           ; BSR set to: 1
 17370                           ;ring_buffer_LUT.c: 285: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17371  01058A  0E00               	movlw	0
 17372  01058C  0102               	movlb	2	; () banked
 17373  01058E  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17374  010590  0E00               	movlw	0
 17375  010592  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17376  010594  0E06               	movlw	6
 17377  010596  ECA8  F0AA         	call	_terminal_textAttributes
 17378                           
 17379                           ;ring_buffer_LUT.c: 286: printf("+3.3V rail measured as +%.3f Volts\n\r", POS3P3_ADC_Res
      +                          ult);
 17380  01059A  0E08               	movlw	low STR_100
 17381  01059C  0102               	movlb	2	; () banked
 17382  01059E  6F85               	movwf	printf@f& (0+255),b
 17383  0105A0  0EF8               	movlw	high STR_100
 17384  0105A2  6F86               	movwf	(printf@f+1)& (0+255),b
 17385  0105A4  C184  F287         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
 17386  0105A8  C185  F288         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
 17387  0105AC  C186  F289         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
 17388  0105B0  C187  F28A         	movff	_POS3P3_ADC_Result+3,?_printf+5	;volatile
 17389  0105B4  ECA0  F0DA         	call	_printf	;wreg free
 17390                           
 17391                           ;ring_buffer_LUT.c: 287: terminal_textAttributesReset();
 17392  0105B8  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17393                           
 17394                           ;ring_buffer_LUT.c: 289: }
 17395  0105BC  0012               	return	
 17396  0105BE                     l1699:
 17397                           
 17398                           ;ring_buffer_LUT.c: 292: else if((0 == strcmp(line, "Measure POS12?"))) {
 17399  0105BE  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 17400  0105C2  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17401  0105C6  0E7D               	movlw	low STR_101
 17402  0105C8  0101               	movlb	1	; () banked
 17403  0105CA  6F51               	movwf	strcmp@s2& (0+255),b
 17404  0105CC  0EFD               	movlw	high STR_101
 17405  0105CE  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 17406  0105D0  EC1B  F0D7         	call	_strcmp	;wreg free
 17407  0105D4  0101               	movlb	1	; () banked
 17408  0105D6  514F               	movf	?_strcmp& (0+255),w,b
 17409  0105D8  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 17410  0105DA  A4D8               	btfss	status,2,c
 17411  0105DC  D01A               	goto	l1701
 17412                           
 17413                           ; BSR set to: 1
 17414                           ;ring_buffer_LUT.c: 294: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17415  0105DE  0E00               	movlw	0
 17416  0105E0  0102               	movlb	2	; () banked
 17417  0105E2  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17418  0105E4  0E00               	movlw	0
 17419  0105E6  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17420  0105E8  0E06               	movlw	6
 17421  0105EA  ECA8  F0AA         	call	_terminal_textAttributes
 17422                           
 17423                           ;ring_buffer_LUT.c: 295: printf("+12V rail measured as +%.3f Volts\n\r", POS12_ADC_Resul
      +                          t);
 17424  0105EE  0E76               	movlw	low STR_102
 17425  0105F0  0102               	movlb	2	; () banked
 17426  0105F2  6F85               	movwf	printf@f& (0+255),b
 17427  0105F4  0EF8               	movlw	high STR_102
 17428  0105F6  6F86               	movwf	(printf@f+1)& (0+255),b
 17429  0105F8  C180  F287         	movff	_POS12_ADC_Result,?_printf+2	;volatile
 17430  0105FC  C181  F288         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
 17431  010600  C182  F289         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
 17432  010604  C183  F28A         	movff	_POS12_ADC_Result+3,?_printf+5	;volatile
 17433  010608  ECA0  F0DA         	call	_printf	;wreg free
 17434                           
 17435                           ;ring_buffer_LUT.c: 296: terminal_textAttributesReset();
 17436  01060C  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17437                           
 17438                           ;ring_buffer_LUT.c: 298: }
 17439  010610  0012               	return	
 17440  010612                     l1701:
 17441                           
 17442                           ;ring_buffer_LUT.c: 301: else if((0 == strcmp(line, "Measure Die Temp?"))) {
 17443  010612  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 17444  010616  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17445  01061A  0E14               	movlw	low STR_103
 17446  01061C  0101               	movlb	1	; () banked
 17447  01061E  6F51               	movwf	strcmp@s2& (0+255),b
 17448  010620  0EFC               	movlw	high STR_103
 17449  010622  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 17450  010624  EC1B  F0D7         	call	_strcmp	;wreg free
 17451  010628  0101               	movlb	1	; () banked
 17452  01062A  514F               	movf	?_strcmp& (0+255),w,b
 17453  01062C  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 17454  01062E  A4D8               	btfss	status,2,c
 17455  010630  D01A               	goto	l1703
 17456                           
 17457                           ; BSR set to: 1
 17458                           ;ring_buffer_LUT.c: 303: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17459  010632  0E00               	movlw	0
 17460  010634  0102               	movlb	2	; () banked
 17461  010636  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17462  010638  0E00               	movlw	0
 17463  01063A  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17464  01063C  0E06               	movlw	6
 17465  01063E  ECA8  F0AA         	call	_terminal_textAttributes
 17466                           
 17467                           ;ring_buffer_LUT.c: 304: printf("Die Temperature measured as %.3fC\n\r", Temp_ADC_Result
      +                          );
 17468  010642  0E52               	movlw	low STR_104
 17469  010644  0102               	movlb	2	; () banked
 17470  010646  6F85               	movwf	printf@f& (0+255),b
 17471  010648  0EF8               	movlw	high STR_104
 17472  01064A  6F86               	movwf	(printf@f+1)& (0+255),b
 17473  01064C  C17C  F287         	movff	_Temp_ADC_Result,?_printf+2	;volatile
 17474  010650  C17D  F288         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
 17475  010654  C17E  F289         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
 17476  010658  C17F  F28A         	movff	_Temp_ADC_Result+3,?_printf+5	;volatile
 17477  01065C  ECA0  F0DA         	call	_printf	;wreg free
 17478                           
 17479                           ;ring_buffer_LUT.c: 305: terminal_textAttributesReset();
 17480  010660  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17481                           
 17482                           ;ring_buffer_LUT.c: 309: }
 17483  010664  0012               	return	
 17484  010666                     l1703:
 17485                           
 17486                           ;ring_buffer_LUT.c: 312: else if((0 == strcmp(line, "Measure FVR?"))) {
 17487  010666  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 17488  01066A  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17489  01066E  0E4F               	movlw	low STR_105
 17490  010670  0101               	movlb	1	; () banked
 17491  010672  6F51               	movwf	strcmp@s2& (0+255),b
 17492  010674  0EFE               	movlw	high STR_105
 17493  010676  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 17494  010678  EC1B  F0D7         	call	_strcmp	;wreg free
 17495  01067C  0101               	movlb	1	; () banked
 17496  01067E  514F               	movf	?_strcmp& (0+255),w,b
 17497  010680  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 17498  010682  A4D8               	btfss	status,2,c
 17499  010684  D01A               	goto	l1705
 17500                           
 17501                           ; BSR set to: 1
 17502                           ;ring_buffer_LUT.c: 314: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17503  010686  0E00               	movlw	0
 17504  010688  0102               	movlb	2	; () banked
 17505  01068A  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17506  01068C  0E00               	movlw	0
 17507  01068E  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17508  010690  0E06               	movlw	6
 17509  010692  ECA8  F0AA         	call	_terminal_textAttributes
 17510                           
 17511                           ;ring_buffer_LUT.c: 315: printf("Fixed Voltage Reference Buffer 1 measured as %.3f Volts
      +                          \n\r", FVR_ADC_Result);
 17512  010696  0EC0               	movlw	low STR_106
 17513  010698  0102               	movlb	2	; () banked
 17514  01069A  6F85               	movwf	printf@f& (0+255),b
 17515  01069C  0EF2               	movlw	high STR_106
 17516  01069E  6F86               	movwf	(printf@f+1)& (0+255),b
 17517  0106A0  C1A7  F287         	movff	_FVR_ADC_Result,?_printf+2	;volatile
 17518  0106A4  C1A8  F288         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
 17519  0106A8  C1A9  F289         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
 17520  0106AC  C1AA  F28A         	movff	_FVR_ADC_Result+3,?_printf+5	;volatile
 17521  0106B0  ECA0  F0DA         	call	_printf	;wreg free
 17522                           
 17523                           ;ring_buffer_LUT.c: 316: terminal_textAttributesReset();
 17524  0106B4  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17525                           
 17526                           ;ring_buffer_LUT.c: 318: }
 17527  0106B8  0012               	return	
 17528  0106BA                     l1705:
 17529                           
 17530                           ;ring_buffer_LUT.c: 321: else if((0 == strcmp(line, "Measure AVSS?"))) {
 17531  0106BA  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 17532  0106BE  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17533  0106C2  0EB9               	movlw	low STR_107
 17534  0106C4  0101               	movlb	1	; () banked
 17535  0106C6  6F51               	movwf	strcmp@s2& (0+255),b
 17536  0106C8  0EFD               	movlw	high STR_107
 17537  0106CA  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 17538  0106CC  EC1B  F0D7         	call	_strcmp	;wreg free
 17539  0106D0  0101               	movlb	1	; () banked
 17540  0106D2  514F               	movf	?_strcmp& (0+255),w,b
 17541  0106D4  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 17542  0106D6  A4D8               	btfss	status,2,c
 17543  0106D8  D01A               	goto	l1707
 17544                           
 17545                           ; BSR set to: 1
 17546                           ;ring_buffer_LUT.c: 323: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17547  0106DA  0E00               	movlw	0
 17548  0106DC  0102               	movlb	2	; () banked
 17549  0106DE  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17550  0106E0  0E00               	movlw	0
 17551  0106E2  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17552  0106E4  0E06               	movlw	6
 17553  0106E6  ECA8  F0AA         	call	_terminal_textAttributes
 17554                           
 17555                           ;ring_buffer_LUT.c: 324: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
 17556  0106EA  0EE3               	movlw	low STR_108
 17557  0106EC  0102               	movlb	2	; () banked
 17558  0106EE  6F85               	movwf	printf@f& (0+255),b
 17559  0106F0  0EF7               	movlw	high STR_108
 17560  0106F2  6F86               	movwf	(printf@f+1)& (0+255),b
 17561  0106F4  C2C1  F287         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
 17562  0106F8  C2C2  F288         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
 17563  0106FC  C2C3  F289         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
 17564  010700  C2C4  F28A         	movff	_AVSS_ADC_Result+3,?_printf+5	;volatile
 17565  010704  ECA0  F0DA         	call	_printf	;wreg free
 17566                           
 17567                           ;ring_buffer_LUT.c: 325: terminal_textAttributesReset();
 17568  010708  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17569                           
 17570                           ;ring_buffer_LUT.c: 327: }
 17571  01070C  0012               	return	
 17572  01070E                     l1707:
 17573                           
 17574                           ;ring_buffer_LUT.c: 330: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
 17575  01070E  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 17576  010712  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17577  010716  0EC6               	movlw	low STR_109
 17578  010718  0101               	movlb	1	; () banked
 17579  01071A  6F51               	movwf	strcmp@s2& (0+255),b
 17580  01071C  0EFA               	movlw	high STR_109
 17581  01071E  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 17582  010720  EC1B  F0D7         	call	_strcmp	;wreg free
 17583  010724  0101               	movlb	1	; () banked
 17584  010726  514F               	movf	?_strcmp& (0+255),w,b
 17585  010728  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 17586  01072A  A4D8               	btfss	status,2,c
 17587  01072C  D01A               	goto	l1709
 17588                           
 17589                           ; BSR set to: 1
 17590                           ;ring_buffer_LUT.c: 332: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17591  01072E  0E00               	movlw	0
 17592  010730  0102               	movlb	2	; () banked
 17593  010732  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17594  010734  0E00               	movlw	0
 17595  010736  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17596  010738  0E06               	movlw	6
 17597  01073A  ECA8  F0AA         	call	_terminal_textAttributes
 17598                           
 17599                           ;ring_buffer_LUT.c: 333: printf("Measured Current is %.3f Amps\n\r", Imeas);
 17600  01073E  0E85               	movlw	low STR_110
 17601  010740  0102               	movlb	2	; () banked
 17602  010742  6F85               	movwf	printf@f& (0+255),b
 17603  010744  0EF9               	movlw	high STR_110
 17604  010746  6F86               	movwf	(printf@f+1)& (0+255),b
 17605  010748  C2B5  F287         	movff	_Imeas,?_printf+2	;volatile
 17606  01074C  C2B6  F288         	movff	_Imeas+1,?_printf+3	;volatile
 17607  010750  C2B7  F289         	movff	_Imeas+2,?_printf+4	;volatile
 17608  010754  C2B8  F28A         	movff	_Imeas+3,?_printf+5	;volatile
 17609  010758  ECA0  F0DA         	call	_printf	;wreg free
 17610                           
 17611                           ;ring_buffer_LUT.c: 334: terminal_textAttributesReset();
 17612  01075C  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17613                           
 17614                           ;ring_buffer_LUT.c: 336: }
 17615  010760  0012               	return	
 17616  010762                     l1709:
 17617                           
 17618                           ;ring_buffer_LUT.c: 339: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
 17619  010762  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 17620  010766  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17621  01076A  0EB1               	movlw	low STR_111
 17622  01076C  0101               	movlb	1	; () banked
 17623  01076E  6F51               	movwf	strcmp@s2& (0+255),b
 17624  010770  0EFB               	movlw	high STR_111
 17625  010772  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 17626  010774  EC1B  F0D7         	call	_strcmp	;wreg free
 17627  010778  0101               	movlb	1	; () banked
 17628  01077A  514F               	movf	?_strcmp& (0+255),w,b
 17629  01077C  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 17630  01077E  A4D8               	btfss	status,2,c
 17631  010780  D01A               	goto	l1711
 17632                           
 17633                           ; BSR set to: 1
 17634                           ;ring_buffer_LUT.c: 341: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17635  010782  0E00               	movlw	0
 17636  010784  0102               	movlb	2	; () banked
 17637  010786  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17638  010788  0E00               	movlw	0
 17639  01078A  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17640  01078C  0E06               	movlw	6
 17641  01078E  ECA8  F0AA         	call	_terminal_textAttributes
 17642                           
 17643                           ;ring_buffer_LUT.c: 342: printf("RMS Output Current is %.3f Arms\n\r", Irms);
 17644  010792  0EDE               	movlw	low STR_112
 17645  010794  0102               	movlb	2	; () banked
 17646  010796  6F85               	movwf	printf@f& (0+255),b
 17647  010798  0EF8               	movlw	high STR_112
 17648  01079A  6F86               	movwf	(printf@f+1)& (0+255),b
 17649  01079C  C174  F287         	movff	_Irms,?_printf+2	;volatile
 17650  0107A0  C175  F288         	movff	_Irms+1,?_printf+3	;volatile
 17651  0107A4  C176  F289         	movff	_Irms+2,?_printf+4	;volatile
 17652  0107A8  C177  F28A         	movff	_Irms+3,?_printf+5	;volatile
 17653  0107AC  ECA0  F0DA         	call	_printf	;wreg free
 17654                           
 17655                           ;ring_buffer_LUT.c: 343: terminal_textAttributesReset();
 17656  0107B0  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17657                           
 17658                           ;ring_buffer_LUT.c: 345: }
 17659  0107B4  0012               	return	
 17660  0107B6                     l1711:
 17661                           
 17662                           ;ring_buffer_LUT.c: 348: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
 17663  0107B6  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 17664  0107BA  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17665  0107BE  0E9C               	movlw	low STR_113
 17666  0107C0  0101               	movlb	1	; () banked
 17667  0107C2  6F51               	movwf	strcmp@s2& (0+255),b
 17668  0107C4  0EFB               	movlw	high STR_113
 17669  0107C6  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 17670  0107C8  EC1B  F0D7         	call	_strcmp	;wreg free
 17671  0107CC  0101               	movlb	1	; () banked
 17672  0107CE  514F               	movf	?_strcmp& (0+255),w,b
 17673  0107D0  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 17674  0107D2  A4D8               	btfss	status,2,c
 17675  0107D4  D01A               	goto	l1713
 17676                           
 17677                           ; BSR set to: 1
 17678                           ;ring_buffer_LUT.c: 350: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17679  0107D6  0E00               	movlw	0
 17680  0107D8  0102               	movlb	2	; () banked
 17681  0107DA  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17682  0107DC  0E00               	movlw	0
 17683  0107DE  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17684  0107E0  0E06               	movlw	6
 17685  0107E2  ECA8  F0AA         	call	_terminal_textAttributes
 17686                           
 17687                           ;ring_buffer_LUT.c: 351: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
 17688  0107E6  0E00               	movlw	low STR_114
 17689  0107E8  0102               	movlb	2	; () banked
 17690  0107EA  6F85               	movwf	printf@f& (0+255),b
 17691  0107EC  0EF9               	movlw	high STR_114
 17692  0107EE  6F86               	movwf	(printf@f+1)& (0+255),b
 17693  0107F0  C2B1  F287         	movff	_Vrms,?_printf+2	;volatile
 17694  0107F4  C2B2  F288         	movff	_Vrms+1,?_printf+3	;volatile
 17695  0107F8  C2B3  F289         	movff	_Vrms+2,?_printf+4	;volatile
 17696  0107FC  C2B4  F28A         	movff	_Vrms+3,?_printf+5	;volatile
 17697  010800  ECA0  F0DA         	call	_printf	;wreg free
 17698                           
 17699                           ;ring_buffer_LUT.c: 352: terminal_textAttributesReset();
 17700  010804  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17701                           
 17702                           ;ring_buffer_LUT.c: 354: }
 17703  010808  0012               	return	
 17704  01080A                     l1713:
 17705                           
 17706                           ;ring_buffer_LUT.c: 357: else if ((0 == strcmp(line, "Measure Power?"))) {
 17707  01080A  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 17708  01080E  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17709  010812  0E8C               	movlw	low STR_115
 17710  010814  0101               	movlb	1	; () banked
 17711  010816  6F51               	movwf	strcmp@s2& (0+255),b
 17712  010818  0EFD               	movlw	high STR_115
 17713  01081A  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 17714  01081C  EC1B  F0D7         	call	_strcmp	;wreg free
 17715  010820  0101               	movlb	1	; () banked
 17716  010822  514F               	movf	?_strcmp& (0+255),w,b
 17717  010824  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 17718  010826  A4D8               	btfss	status,2,c
 17719  010828  D01A               	goto	l1715
 17720                           
 17721                           ; BSR set to: 1
 17722                           ;ring_buffer_LUT.c: 359: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17723  01082A  0E00               	movlw	0
 17724  01082C  0102               	movlb	2	; () banked
 17725  01082E  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17726  010830  0E00               	movlw	0
 17727  010832  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17728  010834  0E06               	movlw	6
 17729  010836  ECA8  F0AA         	call	_terminal_textAttributes
 17730                           
 17731                           ;ring_buffer_LUT.c: 360: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
 17732  01083A  0EFA               	movlw	low STR_116
 17733  01083C  0102               	movlb	2	; () banked
 17734  01083E  6F85               	movwf	printf@f& (0+255),b
 17735  010840  0EF2               	movlw	high STR_116
 17736  010842  6F86               	movwf	(printf@f+1)& (0+255),b
 17737  010844  C170  F287         	movff	_Avg_Power,?_printf+2	;volatile
 17738  010848  C171  F288         	movff	_Avg_Power+1,?_printf+3	;volatile
 17739  01084C  C172  F289         	movff	_Avg_Power+2,?_printf+4	;volatile
 17740  010850  C173  F28A         	movff	_Avg_Power+3,?_printf+5	;volatile
 17741  010854  ECA0  F0DA         	call	_printf	;wreg free
 17742                           
 17743                           ;ring_buffer_LUT.c: 361: terminal_textAttributesReset();
 17744  010858  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17745                           
 17746                           ;ring_buffer_LUT.c: 363: }
 17747  01085C  0012               	return	
 17748  01085E                     l1715:
 17749                           
 17750                           ;ring_buffer_LUT.c: 366: else if ((0 == strcmp(line, "Measure Energy?"))) {
 17751  01085E  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 17752  010862  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17753  010866  0E10               	movlw	low STR_117
 17754  010868  0101               	movlb	1	; () banked
 17755  01086A  6F51               	movwf	strcmp@s2& (0+255),b
 17756  01086C  0EFD               	movlw	high STR_117
 17757  01086E  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 17758  010870  EC1B  F0D7         	call	_strcmp	;wreg free
 17759  010874  0101               	movlb	1	; () banked
 17760  010876  514F               	movf	?_strcmp& (0+255),w,b
 17761  010878  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 17762  01087A  A4D8               	btfss	status,2,c
 17763  01087C  D01A               	goto	l1717
 17764                           
 17765                           ; BSR set to: 1
 17766                           ;ring_buffer_LUT.c: 368: terminal_textAttributes(CYAN, BLACK, NORMAL);
 17767  01087E  0E00               	movlw	0
 17768  010880  0102               	movlb	2	; () banked
 17769  010882  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17770  010884  0E00               	movlw	0
 17771  010886  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17772  010888  0E06               	movlw	6
 17773  01088A  ECA8  F0AA         	call	_terminal_textAttributes
 17774                           
 17775                           ;ring_buffer_LUT.c: 369: printf("Measured output energy since last measurement reset is 
      +                          %.3f Watt Hours\n\r", Total_Energy);
 17776  01088E  0E46               	movlw	low STR_118
 17777  010890  0102               	movlb	2	; () banked
 17778  010892  6F85               	movwf	printf@f& (0+255),b
 17779  010894  0EF0               	movlw	high STR_118
 17780  010896  6F86               	movwf	(printf@f+1)& (0+255),b
 17781  010898  C0F0  F287         	movff	_Total_Energy,?_printf+2	;volatile
 17782  01089C  C0F1  F288         	movff	_Total_Energy+1,?_printf+3	;volatile
 17783  0108A0  C0F2  F289         	movff	_Total_Energy+2,?_printf+4	;volatile
 17784  0108A4  C0F3  F28A         	movff	_Total_Energy+3,?_printf+5	;volatile
 17785  0108A8  ECA0  F0DA         	call	_printf	;wreg free
 17786                           
 17787                           ;ring_buffer_LUT.c: 370: terminal_textAttributesReset();
 17788  0108AC  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17789                           
 17790                           ;ring_buffer_LUT.c: 372: }
 17791  0108B0  0012               	return	
 17792  0108B2                     l1717:
 17793                           
 17794                           ;ring_buffer_LUT.c: 375: else if ((0 == strcmp(line, "Clear Energy"))) {
 17795  0108B2  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 17796  0108B6  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17797  0108BA  0E76               	movlw	low STR_119
 17798  0108BC  0101               	movlb	1	; () banked
 17799  0108BE  6F51               	movwf	strcmp@s2& (0+255),b
 17800  0108C0  0EFE               	movlw	high STR_119
 17801  0108C2  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 17802  0108C4  EC1B  F0D7         	call	_strcmp	;wreg free
 17803  0108C8  0101               	movlb	1	; () banked
 17804  0108CA  514F               	movf	?_strcmp& (0+255),w,b
 17805  0108CC  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 17806  0108CE  A4D8               	btfss	status,2,c
 17807  0108D0  D032               	goto	l1719
 17808                           
 17809                           ; BSR set to: 1
 17810                           ;ring_buffer_LUT.c: 378: Total_Energy = 0.0;
 17811  0108D2  0E00               	movlw	0
 17812  0108D4  0100               	movlb	0	; () banked
 17813  0108D6  6FF0               	movwf	_Total_Energy& (0+255),b	;volatile
 17814  0108D8  0E00               	movlw	0
 17815  0108DA  6FF1               	movwf	(_Total_Energy+1)& (0+255),b	;volatile
 17816  0108DC  0E00               	movlw	0
 17817  0108DE  6FF2               	movwf	(_Total_Energy+2)& (0+255),b	;volatile
 17818  0108E0  0E00               	movlw	0
 17819  0108E2  6FF3               	movwf	(_Total_Energy+3)& (0+255),b	;volatile
 17820                           
 17821                           ; BSR set to: 0
 17822                           ;ring_buffer_LUT.c: 379: writeDoubleToEEPROM(0.0, Total_Energy_address);
 17823  0108E4  0E00               	movlw	0
 17824  0108E6  0101               	movlb	1	; () banked
 17825  0108E8  6F53               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 17826  0108EA  0E00               	movlw	0
 17827  0108EC  6F54               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 17828  0108EE  0E00               	movlw	0
 17829  0108F0  6F55               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 17830  0108F2  0E00               	movlw	0
 17831  0108F4  6F56               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 17832  0108F6  0E99               	movlw	low _Total_Energy_address
 17833  0108F8  6EF6               	movwf	tblptrl,c
 17834  0108FA                     	if	1	;There is more than 1 active tblptr byte
 17835  0108FA  0ECE               	movlw	high _Total_Energy_address
 17836  0108FC  6EF7               	movwf	tblptrh,c
 17837  0108FE                     	endif
 17838  0108FE                     	if	1	;There are 3 active tblptr bytes
 17839  0108FE  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 17840  010900  6EF8               	movwf	tblptru,c
 17841  010902                     	endif
 17842  010902  0009               	tblrd		*+
 17843  010904  CFF5 F157          	movff	tablat,writeDoubleToEEPROM@starting_address
 17844  010908  000A               	tblrd		*-
 17845  01090A  CFF5 F158          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 17846  01090E  EC43  F0D7         	call	_writeDoubleToEEPROM	;wreg free
 17847                           
 17848                           ;ring_buffer_LUT.c: 381: terminal_textAttributes(RED, BLACK, NORMAL);
 17849  010912  0E00               	movlw	0
 17850  010914  0102               	movlb	2	; () banked
 17851  010916  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17852  010918  0E00               	movlw	0
 17853  01091A  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17854  01091C  0E01               	movlw	1
 17855  01091E  ECA8  F0AA         	call	_terminal_textAttributes
 17856                           
 17857                           ;ring_buffer_LUT.c: 382: printf("Measured output energy has been reset to zero Watt Hour
      +                          s\n\r");
 17858  010922  0E4B               	movlw	low STR_120
 17859  010924  0102               	movlb	2	; () banked
 17860  010926  6F85               	movwf	printf@f& (0+255),b
 17861  010928  0EF2               	movlw	high STR_120
 17862  01092A  6F86               	movwf	(printf@f+1)& (0+255),b
 17863  01092C  ECA0  F0DA         	call	_printf	;wreg free
 17864                           
 17865                           ;ring_buffer_LUT.c: 383: terminal_textAttributesReset();
 17866  010930  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17867                           
 17868                           ;ring_buffer_LUT.c: 385: }
 17869  010934  0012               	return	
 17870  010936                     l1719:
 17871                           
 17872                           ;ring_buffer_LUT.c: 388: else if ((0 == strcmp(line, "Enable Dimming"))) {
 17873  010936  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 17874  01093A  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17875  01093E  0E9B               	movlw	low STR_121
 17876  010940  0101               	movlb	1	; () banked
 17877  010942  6F51               	movwf	strcmp@s2& (0+255),b
 17878  010944  0EFD               	movlw	high STR_121
 17879  010946  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 17880  010948  EC1B  F0D7         	call	_strcmp	;wreg free
 17881  01094C  0101               	movlb	1	; () banked
 17882  01094E  514F               	movf	?_strcmp& (0+255),w,b
 17883  010950  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 17884  010952  A4D8               	btfss	status,2,c
 17885  010954  D04D               	goto	l1721
 17886                           
 17887                           ; BSR set to: 1
 17888                           ;ring_buffer_LUT.c: 392: terminal_textAttributes(BLACK, RED, UNDERSCORE);
 17889  010956  0E01               	movlw	1
 17890  010958  0102               	movlb	2	; () banked
 17891  01095A  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17892  01095C  0E02               	movlw	2
 17893  01095E  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17894  010960  0E00               	movlw	0
 17895  010962  ECA8  F0AA         	call	_terminal_textAttributes
 17896                           
 17897                           ;ring_buffer_LUT.c: 393: printf("WARNING: Using the dimming feature with load devices ot
      +                          her than a light bulb can result in device damage");
 17898  010966  0E63               	movlw	low STR_122
 17899  010968  0102               	movlb	2	; () banked
 17900  01096A  6F85               	movwf	printf@f& (0+255),b
 17901  01096C  0EEE               	movlw	high STR_122
 17902  01096E  6F86               	movwf	(printf@f+1)& (0+255),b
 17903  010970  ECA0  F0DA         	call	_printf	;wreg free
 17904                           
 17905                           ;ring_buffer_LUT.c: 394: terminal_textAttributesReset();
 17906  010974  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17907                           
 17908                           ;ring_buffer_LUT.c: 395: terminal_printNewline();
 17909  010978  EC73  F0DF         	call	_terminal_printNewline	;wreg free
 17910                           
 17911                           ;ring_buffer_LUT.c: 396: terminal_textAttributes(BLACK, RED, UNDERSCORE);
 17912  01097C  0E01               	movlw	1
 17913  01097E  0102               	movlb	2	; () banked
 17914  010980  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17915  010982  0E02               	movlw	2
 17916  010984  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17917  010986  0E00               	movlw	0
 17918  010988  ECA8  F0AA         	call	_terminal_textAttributes
 17919                           
 17920                           ;ring_buffer_LUT.c: 397: printf("Only enable dimming if you are completely sure the load
      +                           is compatible with a solid state dimming circuit");
 17921  01098C  0ECC               	movlw	low STR_123
 17922  01098E  0102               	movlb	2	; () banked
 17923  010990  6F85               	movwf	printf@f& (0+255),b
 17924  010992  0EEE               	movlw	high STR_123
 17925  010994  6F86               	movwf	(printf@f+1)& (0+255),b
 17926  010996  ECA0  F0DA         	call	_printf	;wreg free
 17927                           
 17928                           ;ring_buffer_LUT.c: 398: terminal_textAttributesReset();
 17929  01099A  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17930                           
 17931                           ;ring_buffer_LUT.c: 399: terminal_printNewline();
 17932  01099E  EC73  F0DF         	call	_terminal_printNewline	;wreg free
 17933                           
 17934                           ;ring_buffer_LUT.c: 400: terminal_textAttributes(BLACK, YELLOW, NORMAL);
 17935  0109A2  0E03               	movlw	3
 17936  0109A4  0102               	movlb	2	; () banked
 17937  0109A6  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17938  0109A8  0E00               	movlw	0
 17939  0109AA  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17940  0109AC  0E00               	movlw	0
 17941  0109AE  ECA8  F0AA         	call	_terminal_textAttributes
 17942                           
 17943                           ;ring_buffer_LUT.c: 401: printf("Are you sure you'd like to enable output dimming?\n\r")
      +                          ;
 17944  0109B2  0EAA               	movlw	low STR_124
 17945  0109B4  0102               	movlb	2	; () banked
 17946  0109B6  6F85               	movwf	printf@f& (0+255),b
 17947  0109B8  0EF4               	movlw	high STR_124
 17948  0109BA  6F86               	movwf	(printf@f+1)& (0+255),b
 17949  0109BC  ECA0  F0DA         	call	_printf	;wreg free
 17950                           
 17951                           ;ring_buffer_LUT.c: 402: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 17952  0109C0  0E00               	movlw	0
 17953  0109C2  0102               	movlb	2	; () banked
 17954  0109C4  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 17955  0109C6  0E00               	movlw	0
 17956  0109C8  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 17957  0109CA  0E03               	movlw	3
 17958  0109CC  ECA8  F0AA         	call	_terminal_textAttributes
 17959                           
 17960                           ;ring_buffer_LUT.c: 403: printf("If yes, reply 'Enable Dimming Y' on the next line:\n\r"
      +                          );
 17961  0109D0  0E0B               	movlw	low STR_125
 17962  0109D2  0102               	movlb	2	; () banked
 17963  0109D4  6F85               	movwf	printf@f& (0+255),b
 17964  0109D6  0EF4               	movlw	high STR_125
 17965  0109D8  6F86               	movwf	(printf@f+1)& (0+255),b
 17966  0109DA  ECA0  F0DA         	call	_printf	;wreg free
 17967                           
 17968                           ;ring_buffer_LUT.c: 404: terminal_textAttributesReset();
 17969  0109DE  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 17970                           
 17971                           ;ring_buffer_LUT.c: 406: if (error_handler.USB_UART_COMM_error_flag) {
 17972  0109E2  0101               	movlb	1	; () banked
 17973  0109E4  5168               	movf	(_error_handler+8)& (0+255),w,b
 17974  0109E6  B4D8               	btfsc	status,2,c
 17975  0109E8  0012               	return	
 17976                           
 17977                           ; BSR set to: 1
 17978                           ;ring_buffer_LUT.c: 407: error_handler.USB_UART_COMM_error_flag = 0;
 17979  0109EA  0E00               	movlw	0
 17980  0109EC  6F68               	movwf	(_error_handler+8)& (0+255),b
 17981                           
 17982                           ; BSR set to: 1
 17983                           ;ring_buffer_LUT.c: 408: }
 17984                           ;ring_buffer_LUT.c: 410: }
 17985  0109EE  0012               	return	
 17986  0109F0                     l1721:
 17987                           
 17988                           ; BSR set to: 1
 17989                           ;ring_buffer_LUT.c: 413: else if ((0 == strcmp(line, "Enable Dimming Y"))) {
 17990                           
 17991                           ; BSR set to: 1
 17992  0109F0  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 17993  0109F4  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 17994  0109F8  0E8D               	movlw	low STR_126
 17995  0109FA  6F51               	movwf	strcmp@s2& (0+255),b
 17996  0109FC  0EFC               	movlw	high STR_126
 17997  0109FE  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 17998  010A00  EC1B  F0D7         	call	_strcmp	;wreg free
 17999  010A04  0101               	movlb	1	; () banked
 18000  010A06  514F               	movf	?_strcmp& (0+255),w,b
 18001  010A08  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 18002  010A0A  A4D8               	btfss	status,2,c
 18003  010A0C  D015               	goto	l1724
 18004                           
 18005                           ; BSR set to: 1
 18006                           ;ring_buffer_LUT.c: 416: LATGbits.LATG0 = 0;
 18007  010A0E  907F               	bcf	3967,0,c	;volatile
 18008                           
 18009                           ;ring_buffer_LUT.c: 419: PIE0bits.INT0IE = 1;
 18010  010A10  010E               	movlb	14	; () banked
 18011  010A12  8129               	bsf	41,0,b	;volatile
 18012                           
 18013                           ; BSR set to: 14
 18014                           ;ring_buffer_LUT.c: 421: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18015  010A14  0E00               	movlw	0
 18016  010A16  0102               	movlb	2	; () banked
 18017  010A18  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 18018  010A1A  0E00               	movlw	0
 18019  010A1C  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18020  010A1E  0E02               	movlw	2
 18021  010A20  ECA8  F0AA         	call	_terminal_textAttributes
 18022                           
 18023                           ;ring_buffer_LUT.c: 422: printf("Output dimming has been enabled\n\r");
 18024  010A24  0E9A               	movlw	low STR_127
 18025  010A26  0102               	movlb	2	; () banked
 18026  010A28  6F85               	movwf	printf@f& (0+255),b
 18027  010A2A  0EF8               	movlw	high STR_127
 18028  010A2C  6F86               	movwf	(printf@f+1)& (0+255),b
 18029  010A2E  ECA0  F0DA         	call	_printf	;wreg free
 18030                           
 18031                           ;ring_buffer_LUT.c: 423: terminal_textAttributesReset();
 18032  010A32  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 18033                           
 18034                           ;ring_buffer_LUT.c: 425: }
 18035  010A36  0012               	return	
 18036  010A38                     l1724:
 18037                           
 18038                           ;ring_buffer_LUT.c: 428: else if ((0 == strcmp(line, "Disable Dimming"))) {
 18039  010A38  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 18040  010A3C  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18041  010A40  0E20               	movlw	low STR_128
 18042  010A42  0101               	movlb	1	; () banked
 18043  010A44  6F51               	movwf	strcmp@s2& (0+255),b
 18044  010A46  0EFD               	movlw	high STR_128
 18045  010A48  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 18046  010A4A  EC1B  F0D7         	call	_strcmp	;wreg free
 18047  010A4E  0101               	movlb	1	; () banked
 18048  010A50  514F               	movf	?_strcmp& (0+255),w,b
 18049  010A52  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 18050  010A54  A4D8               	btfss	status,2,c
 18051  010A56  D017               	goto	l1726
 18052                           
 18053                           ; BSR set to: 1
 18054                           ;ring_buffer_LUT.c: 431: LATGbits.LATG0 = 1;
 18055  010A58  807F               	bsf	3967,0,c	;volatile
 18056                           
 18057                           ;ring_buffer_LUT.c: 434: PIE0bits.INT0IE = 0;
 18058  010A5A  010E               	movlb	14	; () banked
 18059  010A5C  9129               	bcf	41,0,b	;volatile
 18060                           
 18061                           ; BSR set to: 14
 18062                           ;ring_buffer_LUT.c: 435: TMR5_StopTimer();
 18063  010A5E  EC0B  F0E0         	call	_TMR5_StopTimer	;wreg free
 18064                           
 18065                           ;ring_buffer_LUT.c: 437: terminal_textAttributes(RED, BLACK, NORMAL);
 18066  010A62  0E00               	movlw	0
 18067  010A64  0102               	movlb	2	; () banked
 18068  010A66  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 18069  010A68  0E00               	movlw	0
 18070  010A6A  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18071  010A6C  0E01               	movlw	1
 18072  010A6E  ECA8  F0AA         	call	_terminal_textAttributes
 18073                           
 18074                           ;ring_buffer_LUT.c: 438: printf("TRIAC output dimming has been disabled\n\r");
 18075  010A72  0E6D               	movlw	low STR_129
 18076  010A74  0102               	movlb	2	; () banked
 18077  010A76  6F85               	movwf	printf@f& (0+255),b
 18078  010A78  0EF7               	movlw	high STR_129
 18079  010A7A  6F86               	movwf	(printf@f+1)& (0+255),b
 18080  010A7C  ECA0  F0DA         	call	_printf	;wreg free
 18081                           
 18082                           ;ring_buffer_LUT.c: 439: terminal_textAttributesReset();
 18083  010A80  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 18084                           
 18085                           ;ring_buffer_LUT.c: 441: }
 18086  010A84  0012               	return	
 18087  010A86                     l1726:
 18088                           
 18089                           ;ring_buffer_LUT.c: 444: else if ((0 == strcmp(line, "Enable Load"))) {
 18090  010A86  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 18091  010A8A  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18092  010A8E  0EC1               	movlw	low STR_130
 18093  010A90  0101               	movlb	1	; () banked
 18094  010A92  6F51               	movwf	strcmp@s2& (0+255),b
 18095  010A94  0EFE               	movlw	high STR_130
 18096  010A96  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 18097  010A98  EC1B  F0D7         	call	_strcmp	;wreg free
 18098  010A9C  0101               	movlb	1	; () banked
 18099  010A9E  514F               	movf	?_strcmp& (0+255),w,b
 18100  010AA0  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 18101  010AA2  A4D8               	btfss	status,2,c
 18102  010AA4  D019               	goto	l1728
 18103                           
 18104                           ; BSR set to: 1
 18105                           ;ring_buffer_LUT.c: 446: LATGbits.LATG0 = 1;
 18106  010AA6  807F               	bsf	3967,0,c	;volatile
 18107                           
 18108                           ;ring_buffer_LUT.c: 447: LATGbits.LATG1 = 0;
 18109  010AA8  927F               	bcf	3967,1,c	;volatile
 18110                           
 18111                           ;ring_buffer_LUT.c: 448: load_enable = 1;
 18112  010AAA  805E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 18113                           
 18114                           ; BSR set to: 1
 18115                           ;ring_buffer_LUT.c: 450: OLED_Frame = Load_Enabled;
 18116  010AAC  0E06               	movlw	6
 18117  010AAE  6F9D               	movwf	_OLED_Frame& (0+255),b
 18118                           
 18119                           ; BSR set to: 1
 18120                           ;ring_buffer_LUT.c: 451: OLED_updateCallback();
 18121  010AB0  ECBF  F0BC         	call	_OLED_updateCallback	;wreg free
 18122                           
 18123                           ;ring_buffer_LUT.c: 453: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18124  010AB4  0E00               	movlw	0
 18125  010AB6  0102               	movlb	2	; () banked
 18126  010AB8  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 18127  010ABA  0E00               	movlw	0
 18128  010ABC  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18129  010ABE  0E02               	movlw	2
 18130  010AC0  ECA8  F0AA         	call	_terminal_textAttributes
 18131                           
 18132                           ;ring_buffer_LUT.c: 454: printf("Load has been enabled, dimming disabled\n\r");
 18133  010AC4  0EF0               	movlw	low STR_131
 18134  010AC6  0102               	movlb	2	; () banked
 18135  010AC8  6F85               	movwf	printf@f& (0+255),b
 18136  010ACA  0EF6               	movlw	high STR_131
 18137  010ACC  6F86               	movwf	(printf@f+1)& (0+255),b
 18138  010ACE  ECA0  F0DA         	call	_printf	;wreg free
 18139                           
 18140                           ;ring_buffer_LUT.c: 455: terminal_textAttributesReset();
 18141  010AD2  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 18142                           
 18143                           ;ring_buffer_LUT.c: 457: }
 18144  010AD6  0012               	return	
 18145  010AD8                     l1728:
 18146                           
 18147                           ;ring_buffer_LUT.c: 460: else if ((0 == strcmp(line, "Load Enabled?"))) {
 18148  010AD8  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 18149  010ADC  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18150  010AE0  0EC7               	movlw	low STR_132
 18151  010AE2  0101               	movlb	1	; () banked
 18152  010AE4  6F51               	movwf	strcmp@s2& (0+255),b
 18153  010AE6  0EFD               	movlw	high STR_132
 18154  010AE8  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 18155  010AEA  EC1B  F0D7         	call	_strcmp	;wreg free
 18156  010AEE  0101               	movlb	1	; () banked
 18157  010AF0  514F               	movf	?_strcmp& (0+255),w,b
 18158  010AF2  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 18159  010AF4  A4D8               	btfss	status,2,c
 18160  010AF6  D026               	goto	l1730
 18161                           
 18162                           ; BSR set to: 1
 18163                           ;ring_buffer_LUT.c: 462: if (load_enable == 1) {
 18164  010AF8  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 18165  010AFA  D012               	goto	l1731
 18166                           
 18167                           ; BSR set to: 1
 18168                           ;ring_buffer_LUT.c: 464: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18169  010AFC  0E00               	movlw	0
 18170  010AFE  0102               	movlb	2	; () banked
 18171  010B00  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 18172  010B02  0E00               	movlw	0
 18173  010B04  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18174  010B06  0E02               	movlw	2
 18175  010B08  ECA8  F0AA         	call	_terminal_textAttributes
 18176                           
 18177                           ;ring_buffer_LUT.c: 465: printf("Load is currently enabled\n\r");
 18178  010B0C  0E74               	movlw	low STR_133
 18179  010B0E  0102               	movlb	2	; () banked
 18180  010B10  6F85               	movwf	printf@f& (0+255),b
 18181  010B12  0EFA               	movlw	high STR_133
 18182  010B14  6F86               	movwf	(printf@f+1)& (0+255),b
 18183  010B16  ECA0  F0DA         	call	_printf	;wreg free
 18184                           
 18185                           ;ring_buffer_LUT.c: 466: terminal_textAttributesReset();
 18186  010B1A  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 18187                           
 18188                           ;ring_buffer_LUT.c: 468: }
 18189  010B1E  0012               	return	
 18190  010B20                     l1731:
 18191                           
 18192                           ;ring_buffer_LUT.c: 470: else {
 18193                           ;ring_buffer_LUT.c: 472: terminal_textAttributes(RED, BLACK, NORMAL);
 18194  010B20  0E00               	movlw	0
 18195  010B22  0102               	movlb	2	; () banked
 18196  010B24  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 18197  010B26  0E00               	movlw	0
 18198  010B28  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18199  010B2A  0E01               	movlw	1
 18200  010B2C  ECA8  F0AA         	call	_terminal_textAttributes
 18201                           
 18202                           ;ring_buffer_LUT.c: 473: printf("Load is currently disabled\n\r");
 18203  010B30  0E01               	movlw	low STR_134
 18204  010B32  0102               	movlb	2	; () banked
 18205  010B34  6F85               	movwf	printf@f& (0+255),b
 18206  010B36  0EFA               	movlw	high STR_134
 18207  010B38  6F86               	movwf	(printf@f+1)& (0+255),b
 18208  010B3A  ECA0  F0DA         	call	_printf	;wreg free
 18209                           
 18210                           ;ring_buffer_LUT.c: 474: terminal_textAttributesReset();
 18211  010B3E  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 18212                           
 18213                           ;ring_buffer_LUT.c: 477: }
 18214                           ;ring_buffer_LUT.c: 479: }
 18215  010B42  0012               	return	
 18216  010B44                     l1730:
 18217                           
 18218                           ;ring_buffer_LUT.c: 482: else if ((0 == strcmp(line, "Dimming Enabled?"))) {
 18219  010B44  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 18220  010B48  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18221  010B4C  0E5A               	movlw	low STR_135
 18222  010B4E  0101               	movlb	1	; () banked
 18223  010B50  6F51               	movwf	strcmp@s2& (0+255),b
 18224  010B52  0EFC               	movlw	high STR_135
 18225  010B54  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 18226  010B56  EC1B  F0D7         	call	_strcmp	;wreg free
 18227  010B5A  0101               	movlb	1	; () banked
 18228  010B5C  514F               	movf	?_strcmp& (0+255),w,b
 18229  010B5E  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 18230  010B60  A4D8               	btfss	status,2,c
 18231  010B62  D03B               	goto	l1734
 18232                           
 18233                           ; BSR set to: 1
 18234                           ;ring_buffer_LUT.c: 484: if (load_enable == 1 && LATGbits.LATG0 != 1) {
 18235  010B64  B05E               	btfsc	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 18236                           
 18237                           ; BSR set to: 1
 18238  010B66  B07F               	btfsc	3967,0,c	;volatile
 18239  010B68  D012               	goto	l1735
 18240                           
 18241                           ; BSR set to: 1
 18242                           ;ring_buffer_LUT.c: 486: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18243  010B6A  0E00               	movlw	0
 18244  010B6C  0102               	movlb	2	; () banked
 18245  010B6E  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 18246  010B70  0E00               	movlw	0
 18247  010B72  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18248  010B74  0E02               	movlw	2
 18249  010B76  ECA8  F0AA         	call	_terminal_textAttributes
 18250                           
 18251                           ;ring_buffer_LUT.c: 487: printf("Dimming is currently enabled\n\r");
 18252  010B7A  0EA5               	movlw	low STR_136
 18253  010B7C  0102               	movlb	2	; () banked
 18254  010B7E  6F85               	movwf	printf@f& (0+255),b
 18255  010B80  0EF9               	movlw	high STR_136
 18256  010B82  6F86               	movwf	(printf@f+1)& (0+255),b
 18257  010B84  ECA0  F0DA         	call	_printf	;wreg free
 18258                           
 18259                           ;ring_buffer_LUT.c: 488: terminal_textAttributesReset();
 18260  010B88  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 18261                           
 18262                           ;ring_buffer_LUT.c: 490: }
 18263  010B8C  0012               	return	
 18264  010B8E                     l1735:
 18265                           
 18266                           ; BSR set to: 1
 18267                           ;ring_buffer_LUT.c: 492: else if (load_enable == 1){
 18268  010B8E  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 18269  010B90  D012               	goto	l1737
 18270                           
 18271                           ; BSR set to: 1
 18272                           ;ring_buffer_LUT.c: 494: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18273  010B92  0E00               	movlw	0
 18274  010B94  0102               	movlb	2	; () banked
 18275  010B96  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 18276  010B98  0E00               	movlw	0
 18277  010B9A  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18278  010B9C  0E03               	movlw	3
 18279  010B9E  ECA8  F0AA         	call	_terminal_textAttributes
 18280                           
 18281                           ;ring_buffer_LUT.c: 495: printf("Load is currently enabled, but dimming is disabled\n\r"
      +                          );
 18282  010BA2  0E40               	movlw	low STR_137
 18283  010BA4  0102               	movlb	2	; () banked
 18284  010BA6  6F85               	movwf	printf@f& (0+255),b
 18285  010BA8  0EF4               	movlw	high STR_137
 18286  010BAA  6F86               	movwf	(printf@f+1)& (0+255),b
 18287  010BAC  ECA0  F0DA         	call	_printf	;wreg free
 18288                           
 18289                           ;ring_buffer_LUT.c: 496: terminal_textAttributesReset();
 18290  010BB0  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 18291                           
 18292                           ;ring_buffer_LUT.c: 498: }
 18293  010BB4  0012               	return	
 18294  010BB6                     l1737:
 18295                           
 18296                           ;ring_buffer_LUT.c: 500: else {
 18297                           ;ring_buffer_LUT.c: 502: terminal_textAttributes(RED, BLACK, NORMAL);
 18298  010BB6  0E00               	movlw	0
 18299  010BB8  0102               	movlb	2	; () banked
 18300  010BBA  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 18301  010BBC  0E00               	movlw	0
 18302  010BBE  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18303  010BC0  0E01               	movlw	1
 18304  010BC2  ECA8  F0AA         	call	_terminal_textAttributes
 18305                           
 18306                           ;ring_buffer_LUT.c: 503: printf("Load and dimming are currently disabled\n\r");
 18307  010BC6  0E1A               	movlw	low STR_138
 18308  010BC8  0102               	movlb	2	; () banked
 18309  010BCA  6F85               	movwf	printf@f& (0+255),b
 18310  010BCC  0EF7               	movlw	high STR_138
 18311  010BCE  6F86               	movwf	(printf@f+1)& (0+255),b
 18312  010BD0  ECA0  F0DA         	call	_printf	;wreg free
 18313                           
 18314                           ;ring_buffer_LUT.c: 504: terminal_textAttributesReset();
 18315  010BD4  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 18316                           
 18317                           ;ring_buffer_LUT.c: 506: }
 18318                           ;ring_buffer_LUT.c: 510: }
 18319  010BD8  0012               	return	
 18320  010BDA                     l1734:
 18321                           
 18322                           ;ring_buffer_LUT.c: 515: else if ((0 == strcmp(line, "Disable Load"))) {
 18323  010BDA  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 18324  010BDE  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18325  010BE2  0E69               	movlw	low STR_139
 18326  010BE4  0101               	movlb	1	; () banked
 18327  010BE6  6F51               	movwf	strcmp@s2& (0+255),b
 18328  010BE8  0EFE               	movlw	high STR_139
 18329  010BEA  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 18330  010BEC  EC1B  F0D7         	call	_strcmp	;wreg free
 18331  010BF0  0101               	movlb	1	; () banked
 18332  010BF2  514F               	movf	?_strcmp& (0+255),w,b
 18333  010BF4  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 18334  010BF6  A4D8               	btfss	status,2,c
 18335  010BF8  D015               	goto	l1740
 18336                           
 18337                           ; BSR set to: 1
 18338                           ;ring_buffer_LUT.c: 517: LATGbits.LATG1 = 0;
 18339  010BFA  927F               	bcf	3967,1,c	;volatile
 18340                           
 18341                           ;ring_buffer_LUT.c: 518: LATGbits.LATG0 = 0;
 18342  010BFC  907F               	bcf	3967,0,c	;volatile
 18343                           
 18344                           ;ring_buffer_LUT.c: 519: load_enable = 0;
 18345  010BFE  905E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 18346                           
 18347                           ; BSR set to: 1
 18348                           ;ring_buffer_LUT.c: 521: terminal_textAttributes(RED, BLACK, NORMAL);
 18349  010C00  0E00               	movlw	0
 18350  010C02  0102               	movlb	2	; () banked
 18351  010C04  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 18352  010C06  0E00               	movlw	0
 18353  010C08  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18354  010C0A  0E01               	movlw	1
 18355  010C0C  ECA8  F0AA         	call	_terminal_textAttributes
 18356                           
 18357                           ;ring_buffer_LUT.c: 522: printf("Load has been disabled\n\r");
 18358  010C10  0EF9               	movlw	low STR_140
 18359  010C12  0102               	movlb	2	; () banked
 18360  010C14  6F85               	movwf	printf@f& (0+255),b
 18361  010C16  0EFA               	movlw	high STR_140
 18362  010C18  6F86               	movwf	(printf@f+1)& (0+255),b
 18363  010C1A  ECA0  F0DA         	call	_printf	;wreg free
 18364                           
 18365                           ;ring_buffer_LUT.c: 523: terminal_textAttributesReset();
 18366  010C1E  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 18367                           
 18368                           ;ring_buffer_LUT.c: 525: }
 18369  010C22  0012               	return	
 18370  010C24                     l1740:
 18371                           
 18372                           ;ring_buffer_LUT.c: 528: else if ((strstr(line, "Set Dimming Percentage: "))) {
 18373  010C24  C490  F200         	movff	ringBufferLUT@line,strstr@s1
 18374  010C28  C491  F201         	movff	ringBufferLUT@line+1,strstr@s1+1
 18375  010C2C  0E12               	movlw	low STR_141
 18376  010C2E  0102               	movlb	2	; () banked
 18377  010C30  6F02               	movwf	strstr@s2& (0+255),b
 18378  010C32  0EFB               	movlw	high STR_141
 18379  010C34  6F03               	movwf	(strstr@s2+1)& (0+255),b
 18380  010C36  ECD2  F0D0         	call	_strstr	;wreg free
 18381  010C3A  0102               	movlb	2	; () banked
 18382  010C3C  5100               	movf	?_strstr& (0+255),w,b
 18383  010C3E  1101               	iorwf	(?_strstr+1)& (0+255),w,b
 18384  010C40  B4D8               	btfsc	status,2,c
 18385  010C42  D12A               	goto	l1742
 18386                           
 18387                           ; BSR set to: 2
 18388                           ;ring_buffer_LUT.c: 531: char arg_buff[3];
 18389                           ;ring_buffer_LUT.c: 534: for (int index = 0; index < 3; index++) {
 18390  010C44  0E00               	movlw	0
 18391  010C46  0104               	movlb	4	; () banked
 18392  010C48  6FB4               	movwf	(ringBufferLUT@index+1)& (0+255),b
 18393  010C4A  0E00               	movlw	0
 18394  010C4C  6FB3               	movwf	ringBufferLUT@index& (0+255),b
 18395  010C4E                     l25357:
 18396                           
 18397                           ; BSR set to: 4
 18398  010C4E  BFB4               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
 18399  010C50  D006               	goto	l1743
 18400  010C52  51B4               	movf	(ringBufferLUT@index+1)& (0+255),w,b
 18401  010C54  E11B               	bnz	l25367
 18402  010C56  0E03               	movlw	3
 18403  010C58  5DB3               	subwf	ringBufferLUT@index& (0+255),w,b
 18404  010C5A  B0D8               	btfsc	status,0,c
 18405  010C5C  D017               	goto	u36470
 18406  010C5E                     l1743:
 18407                           
 18408                           ; BSR set to: 4
 18409                           ;ring_buffer_LUT.c: 536: arg_buff[index] = line[index + 24];
 18410                           
 18411                           ; BSR set to: 4
 18412  010C5E  0E18               	movlw	24
 18413  010C60  25B3               	addwf	ringBufferLUT@index& (0+255),w,b
 18414  010C62  6F92               	movwf	??_ringBufferLUT& (0+255),b
 18415  010C64  0E00               	movlw	0
 18416  010C66  21B4               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 18417  010C68  6F93               	movwf	(??_ringBufferLUT+1)& (0+255),b
 18418  010C6A  5192               	movf	??_ringBufferLUT& (0+255),w,b
 18419  010C6C  2590               	addwf	ringBufferLUT@line& (0+255),w,b
 18420  010C6E  6ED9               	movwf	fsr2l,c
 18421  010C70  5193               	movf	(??_ringBufferLUT+1)& (0+255),w,b
 18422  010C72  2191               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
 18423  010C74  6EDA               	movwf	fsr2h,c
 18424  010C76  0E94               	movlw	low ringBufferLUT@arg_buff
 18425  010C78  25B3               	addwf	ringBufferLUT@index& (0+255),w,b
 18426  010C7A  6EE1               	movwf	fsr1l,c
 18427  010C7C  0E04               	movlw	high ringBufferLUT@arg_buff
 18428  010C7E  21B4               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
 18429  010C80  6EE2               	movwf	fsr1h,c
 18430  010C82  CFDF FFE7          	movff	indf2,indf1
 18431                           
 18432                           ; BSR set to: 4
 18433  010C86  4BB3               	infsnz	ringBufferLUT@index& (0+255),f,b
 18434  010C88  2BB4               	incf	(ringBufferLUT@index+1)& (0+255),f,b
 18435  010C8A  D7E1               	goto	l25357
 18436  010C8C                     u36470:
 18437  010C8C                     l25367:
 18438                           
 18439                           ; BSR set to: 4
 18440                           ;ring_buffer_LUT.c: 538: }
 18441                           ;ring_buffer_LUT.c: 540: int percentage = atoi(arg_buff);
 18442  010C8C  0E94               	movlw	low ringBufferLUT@arg_buff
 18443  010C8E  0101               	movlb	1	; () banked
 18444  010C90  6F55               	movwf	atoi@s& (0+255),b
 18445  010C92  0E04               	movlw	high ringBufferLUT@arg_buff
 18446  010C94  6F56               	movwf	(atoi@s+1)& (0+255),b
 18447  010C96  ECDD  F0CC         	call	_atoi	;wreg free
 18448  010C9A  C155  F4B5         	movff	?_atoi,ringBufferLUT@percentage
 18449  010C9E  C156  F4B6         	movff	?_atoi+1,ringBufferLUT@percentage+1
 18450                           
 18451                           ;ring_buffer_LUT.c: 543: if ( (percentage >= 100) ||
 18452                           ;ring_buffer_LUT.c: 544: (percentage <= 0)) {
 18453  010CA2  0104               	movlb	4	; () banked
 18454  010CA4  BFB6               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 18455  010CA6  D006               	goto	u36480
 18456  010CA8  51B6               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 18457  010CAA  E10B               	bnz	l25373
 18458  010CAC  0E64               	movlw	100
 18459  010CAE  5DB5               	subwf	ringBufferLUT@percentage& (0+255),w,b
 18460  010CB0  B0D8               	btfsc	status,0,c
 18461  010CB2  D007               	goto	u36490
 18462  010CB4                     u36480:
 18463                           
 18464                           ; BSR set to: 4
 18465  010CB4  BFB6               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
 18466  010CB6  D005               	goto	u36490
 18467  010CB8  51B6               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
 18468  010CBA  E12B               	bnz	l25375
 18469  010CBC  05B5               	decf	ringBufferLUT@percentage& (0+255),w,b
 18470  010CBE  B0D8               	btfsc	status,0,c
 18471  010CC0  D028               	goto	l1745
 18472  010CC2                     u36490:
 18473  010CC2                     l25373:
 18474                           
 18475                           ; BSR set to: 4
 18476                           ;ring_buffer_LUT.c: 546: terminal_textAttributes(RED, BLACK, NORMAL);
 18477  010CC2  0E00               	movlw	0
 18478  010CC4  0102               	movlb	2	; () banked
 18479  010CC6  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 18480  010CC8  0E00               	movlw	0
 18481  010CCA  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18482  010CCC  0E01               	movlw	1
 18483  010CCE  ECA8  F0AA         	call	_terminal_textAttributes
 18484                           
 18485                           ;ring_buffer_LUT.c: 547: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
 18486  010CD2  0E9B               	movlw	low STR_142
 18487  010CD4  0102               	movlb	2	; () banked
 18488  010CD6  6F85               	movwf	printf@f& (0+255),b
 18489  010CD8  0EEF               	movlw	high STR_142
 18490  010CDA  6F86               	movwf	(printf@f+1)& (0+255),b
 18491  010CDC  ECA0  F0DA         	call	_printf	;wreg free
 18492                           
 18493                           ;ring_buffer_LUT.c: 548: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 18494  010CE0  0E00               	movlw	0
 18495  010CE2  0102               	movlb	2	; () banked
 18496  010CE4  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 18497  010CE6  0E00               	movlw	0
 18498  010CE8  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18499  010CEA  0E03               	movlw	3
 18500  010CEC  ECA8  F0AA         	call	_terminal_textAttributes
 18501                           
 18502                           ;ring_buffer_LUT.c: 549: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
 18503  010CF0  0E35               	movlw	low STR_143
 18504  010CF2  0102               	movlb	2	; () banked
 18505  010CF4  6F85               	movwf	printf@f& (0+255),b
 18506  010CF6  0EEF               	movlw	high STR_143
 18507  010CF8  6F86               	movwf	(printf@f+1)& (0+255),b
 18508  010CFA  ECA0  F0DA         	call	_printf	;wreg free
 18509                           
 18510                           ;ring_buffer_LUT.c: 550: printf("Enter 'Help' for list of available commands\n\r");
 18511  010CFE  0E67               	movlw	low STR_144
 18512  010D00  0102               	movlb	2	; () banked
 18513  010D02  6F85               	movwf	printf@f& (0+255),b
 18514  010D04  0EF6               	movlw	high STR_144
 18515  010D06  6F86               	movwf	(printf@f+1)& (0+255),b
 18516  010D08  ECA0  F0DA         	call	_printf	;wreg free
 18517                           
 18518                           ;ring_buffer_LUT.c: 551: terminal_textAttributesReset();
 18519  010D0C  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 18520                           
 18521                           ;ring_buffer_LUT.c: 553: }
 18522  010D10  D0BC               	goto	l1748
 18523  010D12                     l1745:
 18524  010D12                     l25375:
 18525                           
 18526                           ;ring_buffer_LUT.c: 556: else {
 18527                           ;ring_buffer_LUT.c: 559: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
 18528  010D12  0E00               	movlw	0
 18529  010D14  0102               	movlb	2	; () banked
 18530  010D16  6F1C               	movwf	___fldiv@a& (0+255),b
 18531  010D18  0E00               	movlw	0
 18532  010D1A  6F1D               	movwf	(___fldiv@a+1)& (0+255),b
 18533  010D1C  0EC8               	movlw	200
 18534  010D1E  6F1E               	movwf	(___fldiv@a+2)& (0+255),b
 18535  010D20  0E42               	movlw	66
 18536  010D22  6F1F               	movwf	(___fldiv@a+3)& (0+255),b
 18537  010D24  0E00               	movlw	0
 18538  010D26  6F08               	movwf	___fladd@a& (0+255),b
 18539  010D28  0E00               	movlw	0
 18540  010D2A  6F09               	movwf	(___fladd@a+1)& (0+255),b
 18541  010D2C  0EC8               	movlw	200
 18542  010D2E  6F0A               	movwf	(___fladd@a+2)& (0+255),b
 18543  010D30  0E42               	movlw	66
 18544  010D32  6F0B               	movwf	(___fladd@a+3)& (0+255),b
 18545  010D34  C4B5  F14F         	movff	ringBufferLUT@percentage,___xxtofl@val
 18546  010D38  C4B6  F150         	movff	ringBufferLUT@percentage+1,___xxtofl@val+1
 18547  010D3C  0101               	movlb	1	; () banked
 18548  010D3E  0E00               	movlw	0
 18549  010D40  BF50               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 18550  010D42  0EFF               	movlw	-1
 18551  010D44  6F51               	movwf	(___xxtofl@val+2)& (0+255),b
 18552  010D46  6F52               	movwf	(___xxtofl@val+3)& (0+255),b
 18553  010D48  0E01               	movlw	1
 18554  010D4A  ECE8  F0C3         	call	___xxtofl
 18555  010D4E  C14F  F200         	movff	?___xxtofl,___flneg@f1
 18556  010D52  C150  F201         	movff	?___xxtofl+1,___flneg@f1+1
 18557  010D56  C151  F202         	movff	?___xxtofl+2,___flneg@f1+2
 18558  010D5A  C152  F203         	movff	?___xxtofl+3,___flneg@f1+3
 18559  010D5E  ECB5  F0DC         	call	___flneg	;wreg free
 18560  010D62  C200  F204         	movff	?___flneg,___fladd@b
 18561  010D66  C201  F205         	movff	?___flneg+1,___fladd@b+1
 18562  010D6A  C202  F206         	movff	?___flneg+2,___fladd@b+2
 18563  010D6E  C203  F207         	movff	?___flneg+3,___fladd@b+3
 18564  010D72  ECAD  F0AF         	call	___fladd	;wreg free
 18565  010D76  C204  F218         	movff	?___fladd,___fldiv@b
 18566  010D7A  C205  F219         	movff	?___fladd+1,___fldiv@b+1
 18567  010D7E  C206  F21A         	movff	?___fladd+2,___fldiv@b+2
 18568  010D82  C207  F21B         	movff	?___fladd+3,___fldiv@b+3
 18569  010D86  ECB3  F0B8         	call	___fldiv	;wreg free
 18570  010D8A  C218  F231         	movff	?___fldiv,___flmul@b
 18571  010D8E  C219  F232         	movff	?___fldiv+1,___flmul@b+1
 18572  010D92  C21A  F233         	movff	?___fldiv+2,___flmul@b+2
 18573  010D96  C21B  F234         	movff	?___fldiv+3,___flmul@b+3
 18574  010D9A  0EDB               	movlw	219
 18575  010D9C  0102               	movlb	2	; () banked
 18576  010D9E  6F35               	movwf	___flmul@a& (0+255),b
 18577  010DA0  0E0F               	movlw	15
 18578  010DA2  6F36               	movwf	(___flmul@a+1)& (0+255),b
 18579  010DA4  0E49               	movlw	73
 18580  010DA6  6F37               	movwf	(___flmul@a+2)& (0+255),b
 18581  010DA8  0E40               	movlw	64
 18582  010DAA  6F38               	movwf	(___flmul@a+3)& (0+255),b
 18583  010DAC  EC5C  F0AC         	call	___flmul	;wreg free
 18584  010DB0  C231  F0F7         	movff	?___flmul,_TRIAC_Firing_Angle	;volatile
 18585  010DB4  C232  F0F8         	movff	?___flmul+1,_TRIAC_Firing_Angle+1	;volatile
 18586  010DB8  C233  F0F9         	movff	?___flmul+2,_TRIAC_Firing_Angle+2	;volatile
 18587  010DBC  C234  F0FA         	movff	?___flmul+3,_TRIAC_Firing_Angle+3	;volatile
 18588                           
 18589                           ;ring_buffer_LUT.c: 560: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
 18590  010DC0  C0F7  F231         	movff	_TRIAC_Firing_Angle,___flmul@b	;volatile
 18591  010DC4  C0F8  F232         	movff	_TRIAC_Firing_Angle+1,___flmul@b+1	;volatile
 18592  010DC8  C0F9  F233         	movff	_TRIAC_Firing_Angle+2,___flmul@b+2	;volatile
 18593  010DCC  C0FA  F234         	movff	_TRIAC_Firing_Angle+3,___flmul@b+3	;volatile
 18594  010DD0  0EE1               	movlw	225
 18595  010DD2  0102               	movlb	2	; () banked
 18596  010DD4  6F35               	movwf	___flmul@a& (0+255),b
 18597  010DD6  0E2E               	movlw	46
 18598  010DD8  6F36               	movwf	(___flmul@a+1)& (0+255),b
 18599  010DDA  0E65               	movlw	101
 18600  010DDC  6F37               	movwf	(___flmul@a+2)& (0+255),b
 18601  010DDE  0E42               	movlw	66
 18602  010DE0  6F38               	movwf	(___flmul@a+3)& (0+255),b
 18603  010DE2  EC5C  F0AC         	call	___flmul	;wreg free
 18604  010DE6  C231  F497         	movff	?___flmul,ringBufferLUT@angle_degrees
 18605  010DEA  C232  F498         	movff	?___flmul+1,ringBufferLUT@angle_degrees+1
 18606  010DEE  C233  F499         	movff	?___flmul+2,ringBufferLUT@angle_degrees+2
 18607  010DF2  C234  F49A         	movff	?___flmul+3,ringBufferLUT@angle_degrees+3
 18608                           
 18609                           ;ring_buffer_LUT.c: 561: dimming_period = (percentage) * (0xFFFF / 100);
 18610  010DF6  C4B5  F14F         	movff	ringBufferLUT@percentage,___wmul@multiplier
 18611  010DFA  C4B6  F150         	movff	ringBufferLUT@percentage+1,___wmul@multiplier+1
 18612  010DFE  0E02               	movlw	2
 18613  010E00  0101               	movlb	1	; () banked
 18614  010E02  6F52               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18615  010E04  0E8F               	movlw	143
 18616  010E06  6F51               	movwf	___wmul@multiplicand& (0+255),b
 18617  010E08  EC41  F0DD         	call	___wmul	;wreg free
 18618  010E0C  C14F  F2FC         	movff	?___wmul,_dimming_period	;volatile
 18619  010E10  C150  F2FD         	movff	?___wmul+1,_dimming_period+1	;volatile
 18620                           
 18621                           ;ring_buffer_LUT.c: 563: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18622  010E14  0E00               	movlw	0
 18623  010E16  0102               	movlb	2	; () banked
 18624  010E18  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 18625  010E1A  0E00               	movlw	0
 18626  010E1C  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18627  010E1E  0E02               	movlw	2
 18628  010E20  ECA8  F0AA         	call	_terminal_textAttributes
 18629                           
 18630                           ;ring_buffer_LUT.c: 564: printf("Dimming has been set to %d percent\n\r", percentage);
 18631  010E24  0E2D               	movlw	low STR_145
 18632  010E26  0102               	movlb	2	; () banked
 18633  010E28  6F85               	movwf	printf@f& (0+255),b
 18634  010E2A  0EF8               	movlw	high STR_145
 18635  010E2C  6F86               	movwf	(printf@f+1)& (0+255),b
 18636  010E2E  C4B5  F287         	movff	ringBufferLUT@percentage,?_printf+2
 18637  010E32  C4B6  F288         	movff	ringBufferLUT@percentage+1,?_printf+3
 18638  010E36  ECA0  F0DA         	call	_printf	;wreg free
 18639                           
 18640                           ;ring_buffer_LUT.c: 565: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
 18641  010E3A  0E57               	movlw	low STR_146
 18642  010E3C  0102               	movlb	2	; () banked
 18643  010E3E  6F85               	movwf	printf@f& (0+255),b
 18644  010E40  0EF1               	movlw	high STR_146
 18645  010E42  6F86               	movwf	(printf@f+1)& (0+255),b
 18646  010E44  C0F7  F287         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
 18647  010E48  C0F8  F288         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
 18648  010E4C  C0F9  F289         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
 18649  010E50  C0FA  F28A         	movff	_TRIAC_Firing_Angle+3,?_printf+5	;volatile
 18650  010E54  C497  F28B         	movff	ringBufferLUT@angle_degrees,?_printf+6
 18651  010E58  C498  F28C         	movff	ringBufferLUT@angle_degrees+1,?_printf+7
 18652  010E5C  C499  F28D         	movff	ringBufferLUT@angle_degrees+2,?_printf+8
 18653  010E60  C49A  F28E         	movff	ringBufferLUT@angle_degrees+3,?_printf+9
 18654  010E64  ECA0  F0DA         	call	_printf	;wreg free
 18655                           
 18656                           ;ring_buffer_LUT.c: 566: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
 18657  010E68  0E8F               	movlw	low STR_147
 18658  010E6A  0102               	movlb	2	; () banked
 18659  010E6C  6F85               	movwf	printf@f& (0+255),b
 18660  010E6E  0EF0               	movlw	high STR_147
 18661  010E70  6F86               	movwf	(printf@f+1)& (0+255),b
 18662  010E72  C2FC  F287         	movff	_dimming_period,?_printf+2	;volatile
 18663  010E76  C2FD  F288         	movff	_dimming_period+1,?_printf+3	;volatile
 18664  010E7A  C2FC  F289         	movff	_dimming_period,?_printf+4	;volatile
 18665  010E7E  C2FD  F28A         	movff	_dimming_period+1,?_printf+5	;volatile
 18666  010E82  ECA0  F0DA         	call	_printf	;wreg free
 18667                           
 18668                           ;ring_buffer_LUT.c: 567: terminal_textAttributesReset();
 18669  010E86  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 18670  010E8A                     l1748:
 18671                           
 18672                           ;ring_buffer_LUT.c: 569: }
 18673                           ;ring_buffer_LUT.c: 571: if (error_handler.USB_UART_COMM_error_flag) {
 18674  010E8A  0101               	movlb	1	; () banked
 18675  010E8C  5168               	movf	(_error_handler+8)& (0+255),w,b
 18676  010E8E  B4D8               	btfsc	status,2,c
 18677  010E90  0012               	return	
 18678                           
 18679                           ; BSR set to: 1
 18680                           ;ring_buffer_LUT.c: 572: error_handler.USB_UART_COMM_error_flag = 0;
 18681  010E92  0E00               	movlw	0
 18682  010E94  6F68               	movwf	(_error_handler+8)& (0+255),b
 18683                           
 18684                           ; BSR set to: 1
 18685                           ;ring_buffer_LUT.c: 573: }
 18686                           ;ring_buffer_LUT.c: 575: }
 18687  010E96  0012               	return	
 18688  010E98                     l1742:
 18689                           
 18690                           ;ring_buffer_LUT.c: 578: else if((0 == strcmp(line, "Device On Time?"))) {
 18691                           
 18692                           ; BSR set to: 1
 18693  010E98  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 18694  010E9C  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18695  010EA0  0EF0               	movlw	low STR_148
 18696  010EA2  0101               	movlb	1	; () banked
 18697  010EA4  6F51               	movwf	strcmp@s2& (0+255),b
 18698  010EA6  0EFC               	movlw	high STR_148
 18699  010EA8  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 18700  010EAA  EC1B  F0D7         	call	_strcmp	;wreg free
 18701  010EAE  0101               	movlb	1	; () banked
 18702  010EB0  514F               	movf	?_strcmp& (0+255),w,b
 18703  010EB2  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 18704  010EB4  A4D8               	btfss	status,2,c
 18705  010EB6  D01A               	goto	l1751
 18706                           
 18707                           ; BSR set to: 1
 18708                           ;ring_buffer_LUT.c: 580: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18709  010EB8  0E00               	movlw	0
 18710  010EBA  0102               	movlb	2	; () banked
 18711  010EBC  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 18712  010EBE  0E00               	movlw	0
 18713  010EC0  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18714  010EC2  0E02               	movlw	2
 18715  010EC4  ECA8  F0AA         	call	_terminal_textAttributes
 18716                           
 18717                           ;ring_buffer_LUT.c: 581: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
 18718  010EC8  0E86               	movlw	low STR_149
 18719  010ECA  0102               	movlb	2	; () banked
 18720  010ECC  6F85               	movwf	printf@f& (0+255),b
 18721  010ECE  0EF2               	movlw	high STR_149
 18722  010ED0  6F86               	movwf	(printf@f+1)& (0+255),b
 18723  010ED2  C2AD  F287         	movff	_dev_on_time,?_printf+2	;volatile
 18724  010ED6  C2AE  F288         	movff	_dev_on_time+1,?_printf+3	;volatile
 18725  010EDA  C2AF  F289         	movff	_dev_on_time+2,?_printf+4	;volatile
 18726  010EDE  C2B0  F28A         	movff	_dev_on_time+3,?_printf+5	;volatile
 18727  010EE2  ECA0  F0DA         	call	_printf	;wreg free
 18728                           
 18729                           ;ring_buffer_LUT.c: 582: terminal_textAttributesReset();
 18730  010EE6  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 18731                           
 18732                           ;ring_buffer_LUT.c: 584: }
 18733  010EEA  0012               	return	
 18734  010EEC                     l1751:
 18735                           
 18736                           ;ring_buffer_LUT.c: 587: else if((0 == strcmp(line, "Load On Time?"))) {
 18737  010EEC  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 18738  010EF0  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18739  010EF4  0ED5               	movlw	low STR_150
 18740  010EF6  0101               	movlb	1	; () banked
 18741  010EF8  6F51               	movwf	strcmp@s2& (0+255),b
 18742  010EFA  0EFD               	movlw	high STR_150
 18743  010EFC  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 18744  010EFE  EC1B  F0D7         	call	_strcmp	;wreg free
 18745  010F02  0101               	movlb	1	; () banked
 18746  010F04  514F               	movf	?_strcmp& (0+255),w,b
 18747  010F06  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 18748  010F08  A4D8               	btfss	status,2,c
 18749  010F0A  D01A               	goto	l1753
 18750                           
 18751                           ; BSR set to: 1
 18752                           ;ring_buffer_LUT.c: 589: terminal_textAttributes(GREEN, BLACK, NORMAL);
 18753  010F0C  0E00               	movlw	0
 18754  010F0E  0102               	movlb	2	; () banked
 18755  010F10  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 18756  010F12  0E00               	movlw	0
 18757  010F14  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18758  010F16  0E02               	movlw	2
 18759  010F18  ECA8  F0AA         	call	_terminal_textAttributes
 18760                           
 18761                           ;ring_buffer_LUT.c: 590: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
 18762  010F1C  0E75               	movlw	low STR_151
 18763  010F1E  0102               	movlb	2	; () banked
 18764  010F20  6F85               	movwf	printf@f& (0+255),b
 18765  010F22  0EF4               	movlw	high STR_151
 18766  010F24  6F86               	movwf	(printf@f+1)& (0+255),b
 18767  010F26  C2A9  F287         	movff	_load_on_time,?_printf+2	;volatile
 18768  010F2A  C2AA  F288         	movff	_load_on_time+1,?_printf+3	;volatile
 18769  010F2E  C2AB  F289         	movff	_load_on_time+2,?_printf+4	;volatile
 18770  010F32  C2AC  F28A         	movff	_load_on_time+3,?_printf+5	;volatile
 18771  010F36  ECA0  F0DA         	call	_printf	;wreg free
 18772                           
 18773                           ;ring_buffer_LUT.c: 591: terminal_textAttributesReset();
 18774  010F3A  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 18775                           
 18776                           ;ring_buffer_LUT.c: 593: }
 18777  010F3E  0012               	return	
 18778  010F40                     l1753:
 18779                           
 18780                           ;ring_buffer_LUT.c: 596: else if((0 == strcmp(line, "Max RMS Current?"))) {
 18781  010F40  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 18782  010F44  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18783  010F48  0E7C               	movlw	low STR_152
 18784  010F4A  0101               	movlb	1	; () banked
 18785  010F4C  6F51               	movwf	strcmp@s2& (0+255),b
 18786  010F4E  0EFC               	movlw	high STR_152
 18787  010F50  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 18788  010F52  EC1B  F0D7         	call	_strcmp	;wreg free
 18789  010F56  0101               	movlb	1	; () banked
 18790  010F58  514F               	movf	?_strcmp& (0+255),w,b
 18791  010F5A  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 18792  010F5C  A4D8               	btfss	status,2,c
 18793  010F5E  D030               	goto	l1755
 18794                           
 18795                           ; BSR set to: 1
 18796                           ;ring_buffer_LUT.c: 599: double max_current_print = readDoubleFromEEPROM(max_Irms_addres
      +                          s);
 18797  010F60  0E97               	movlw	low _max_Irms_address
 18798  010F62  6EF6               	movwf	tblptrl,c
 18799  010F64                     	if	1	;There is more than 1 active tblptr byte
 18800  010F64  0ECE               	movlw	high _max_Irms_address
 18801  010F66  6EF7               	movwf	tblptrh,c
 18802  010F68                     	endif
 18803  010F68                     	if	1	;There are 3 active tblptr bytes
 18804  010F68  0E00               	movlw	low (_max_Irms_address shr (0+16))
 18805  010F6A  6EF8               	movwf	tblptru,c
 18806  010F6C                     	endif
 18807  010F6C  0009               	tblrd		*+
 18808  010F6E  CFF5 F151          	movff	tablat,readDoubleFromEEPROM@starting_address
 18809  010F72  000A               	tblrd		*-
 18810  010F74  CFF5 F152          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18811  010F78  ECC9  F0D6         	call	_readDoubleFromEEPROM	;wreg free
 18812  010F7C  C151  F49B         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_current_print
 18813  010F80  C152  F49C         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_current_print+1
 18814  010F84  C153  F49D         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_current_print+2
 18815  010F88  C154  F49E         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_current_print+3
 18816                           
 18817                           ;ring_buffer_LUT.c: 601: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18818  010F8C  0E00               	movlw	0
 18819  010F8E  0102               	movlb	2	; () banked
 18820  010F90  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 18821  010F92  0E00               	movlw	0
 18822  010F94  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18823  010F96  0E06               	movlw	6
 18824  010F98  ECA8  F0AA         	call	_terminal_textAttributes
 18825                           
 18826                           ;ring_buffer_LUT.c: 602: printf("Maximum recorded RMS output current is %.3f Arms\n\r", 
      +                          max_current_print);
 18827  010F9C  0E46               	movlw	low STR_153
 18828  010F9E  0102               	movlb	2	; () banked
 18829  010FA0  6F85               	movwf	printf@f& (0+255),b
 18830  010FA2  0EF5               	movlw	high STR_153
 18831  010FA4  6F86               	movwf	(printf@f+1)& (0+255),b
 18832  010FA6  C49B  F287         	movff	ringBufferLUT@max_current_print,?_printf+2
 18833  010FAA  C49C  F288         	movff	ringBufferLUT@max_current_print+1,?_printf+3
 18834  010FAE  C49D  F289         	movff	ringBufferLUT@max_current_print+2,?_printf+4
 18835  010FB2  C49E  F28A         	movff	ringBufferLUT@max_current_print+3,?_printf+5
 18836  010FB6  ECA0  F0DA         	call	_printf	;wreg free
 18837                           
 18838                           ;ring_buffer_LUT.c: 603: terminal_textAttributesReset();
 18839  010FBA  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 18840                           
 18841                           ;ring_buffer_LUT.c: 605: }
 18842  010FBE  0012               	return	
 18843  010FC0                     l1755:
 18844                           
 18845                           ;ring_buffer_LUT.c: 608: else if((0 == strcmp(line, "Max Power?"))) {
 18846  010FC0  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 18847  010FC4  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18848  010FC8  0E25               	movlw	low STR_154
 18849  010FCA  0101               	movlb	1	; () banked
 18850  010FCC  6F51               	movwf	strcmp@s2& (0+255),b
 18851  010FCE  0EFF               	movlw	high STR_154
 18852  010FD0  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 18853  010FD2  EC1B  F0D7         	call	_strcmp	;wreg free
 18854  010FD6  0101               	movlb	1	; () banked
 18855  010FD8  514F               	movf	?_strcmp& (0+255),w,b
 18856  010FDA  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 18857  010FDC  A4D8               	btfss	status,2,c
 18858  010FDE  D030               	goto	l1757
 18859                           
 18860                           ; BSR set to: 1
 18861                           ;ring_buffer_LUT.c: 611: double max_Power_print = readDoubleFromEEPROM(max_Power_address
      +                          );
 18862  010FE0  0E95               	movlw	low _max_Power_address
 18863  010FE2  6EF6               	movwf	tblptrl,c
 18864  010FE4                     	if	1	;There is more than 1 active tblptr byte
 18865  010FE4  0ECE               	movlw	high _max_Power_address
 18866  010FE6  6EF7               	movwf	tblptrh,c
 18867  010FE8                     	endif
 18868  010FE8                     	if	1	;There are 3 active tblptr bytes
 18869  010FE8  0E00               	movlw	low (_max_Power_address shr (0+16))
 18870  010FEA  6EF8               	movwf	tblptru,c
 18871  010FEC                     	endif
 18872  010FEC  0009               	tblrd		*+
 18873  010FEE  CFF5 F151          	movff	tablat,readDoubleFromEEPROM@starting_address
 18874  010FF2  000A               	tblrd		*-
 18875  010FF4  CFF5 F152          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18876  010FF8  ECC9  F0D6         	call	_readDoubleFromEEPROM	;wreg free
 18877  010FFC  C151  F49F         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_Power_print
 18878  011000  C152  F4A0         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_Power_print+1
 18879  011004  C153  F4A1         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_Power_print+2
 18880  011008  C154  F4A2         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_Power_print+3
 18881                           
 18882                           ;ring_buffer_LUT.c: 613: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18883  01100C  0E00               	movlw	0
 18884  01100E  0102               	movlb	2	; () banked
 18885  011010  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 18886  011012  0E00               	movlw	0
 18887  011014  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18888  011016  0E06               	movlw	6
 18889  011018  ECA8  F0AA         	call	_terminal_textAttributes
 18890                           
 18891                           ;ring_buffer_LUT.c: 614: printf("Maximum recorded output power is %.3f Watts\n\r", max_P
      +                          ower_print);
 18892  01101C  0E95               	movlw	low STR_155
 18893  01101E  0102               	movlb	2	; () banked
 18894  011020  6F85               	movwf	printf@f& (0+255),b
 18895  011022  0EF6               	movlw	high STR_155
 18896  011024  6F86               	movwf	(printf@f+1)& (0+255),b
 18897  011026  C49F  F287         	movff	ringBufferLUT@max_Power_print,?_printf+2
 18898  01102A  C4A0  F288         	movff	ringBufferLUT@max_Power_print+1,?_printf+3
 18899  01102E  C4A1  F289         	movff	ringBufferLUT@max_Power_print+2,?_printf+4
 18900  011032  C4A2  F28A         	movff	ringBufferLUT@max_Power_print+3,?_printf+5
 18901  011036  ECA0  F0DA         	call	_printf	;wreg free
 18902                           
 18903                           ;ring_buffer_LUT.c: 615: terminal_textAttributesReset();
 18904  01103A  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 18905                           
 18906                           ;ring_buffer_LUT.c: 617: }
 18907  01103E  0012               	return	
 18908  011040                     l1757:
 18909                           
 18910                           ;ring_buffer_LUT.c: 620: else if((0 == strcmp(line, "Max POS3P3 Voltage?"))) {
 18911  011040  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 18912  011044  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18913  011048  0EC6               	movlw	low STR_156
 18914  01104A  0101               	movlb	1	; () banked
 18915  01104C  6F51               	movwf	strcmp@s2& (0+255),b
 18916  01104E  0EFB               	movlw	high STR_156
 18917  011050  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 18918  011052  EC1B  F0D7         	call	_strcmp	;wreg free
 18919  011056  0101               	movlb	1	; () banked
 18920  011058  514F               	movf	?_strcmp& (0+255),w,b
 18921  01105A  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 18922  01105C  A4D8               	btfss	status,2,c
 18923  01105E  D030               	goto	l1759
 18924                           
 18925                           ; BSR set to: 1
 18926                           ;ring_buffer_LUT.c: 623: double max_voltage_print = readDoubleFromEEPROM(max_POS3P3_ADC_
      +                          Result_address);
 18927  011060  0E93               	movlw	low _max_POS3P3_ADC_Result_address
 18928  011062  6EF6               	movwf	tblptrl,c
 18929  011064                     	if	1	;There is more than 1 active tblptr byte
 18930  011064  0ECE               	movlw	high _max_POS3P3_ADC_Result_address
 18931  011066  6EF7               	movwf	tblptrh,c
 18932  011068                     	endif
 18933  011068                     	if	1	;There are 3 active tblptr bytes
 18934  011068  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 18935  01106A  6EF8               	movwf	tblptru,c
 18936  01106C                     	endif
 18937  01106C  0009               	tblrd		*+
 18938  01106E  CFF5 F151          	movff	tablat,readDoubleFromEEPROM@starting_address
 18939  011072  000A               	tblrd		*-
 18940  011074  CFF5 F152          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 18941  011078  ECC9  F0D6         	call	_readDoubleFromEEPROM	;wreg free
 18942  01107C  C151  F4A3         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print
 18943  011080  C152  F4A4         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print+1
 18944  011084  C153  F4A5         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print+2
 18945  011088  C154  F4A6         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print+3
 18946                           
 18947                           ;ring_buffer_LUT.c: 625: terminal_textAttributes(CYAN, BLACK, NORMAL);
 18948  01108C  0E00               	movlw	0
 18949  01108E  0102               	movlb	2	; () banked
 18950  011090  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 18951  011092  0E00               	movlw	0
 18952  011094  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 18953  011096  0E06               	movlw	6
 18954  011098  ECA8  F0AA         	call	_terminal_textAttributes
 18955                           
 18956                           ;ring_buffer_LUT.c: 626: printf("Maximum recorded +3.3V rail voltage is %.3f Volts\n\r",
      +                           max_voltage_print);
 18957  01109C  0E12               	movlw	low STR_157
 18958  01109E  0102               	movlb	2	; () banked
 18959  0110A0  6F85               	movwf	printf@f& (0+255),b
 18960  0110A2  0EF5               	movlw	high STR_157
 18961  0110A4  6F86               	movwf	(printf@f+1)& (0+255),b
 18962  0110A6  C4A3  F287         	movff	ringBufferLUT@max_voltage_print,?_printf+2
 18963  0110AA  C4A4  F288         	movff	ringBufferLUT@max_voltage_print+1,?_printf+3
 18964  0110AE  C4A5  F289         	movff	ringBufferLUT@max_voltage_print+2,?_printf+4
 18965  0110B2  C4A6  F28A         	movff	ringBufferLUT@max_voltage_print+3,?_printf+5
 18966  0110B6  ECA0  F0DA         	call	_printf	;wreg free
 18967                           
 18968                           ;ring_buffer_LUT.c: 627: terminal_textAttributesReset();
 18969  0110BA  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 18970                           
 18971                           ;ring_buffer_LUT.c: 629: }
 18972  0110BE  0012               	return	
 18973  0110C0                     l1759:
 18974                           
 18975                           ;ring_buffer_LUT.c: 632: else if((0 == strcmp(line, "Max POS12 Voltage?"))) {
 18976  0110C0  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 18977  0110C4  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 18978  0110C8  0E01               	movlw	low STR_158
 18979  0110CA  0101               	movlb	1	; () banked
 18980  0110CC  6F51               	movwf	strcmp@s2& (0+255),b
 18981  0110CE  0EFC               	movlw	high STR_158
 18982  0110D0  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 18983  0110D2  EC1B  F0D7         	call	_strcmp	;wreg free
 18984  0110D6  0101               	movlb	1	; () banked
 18985  0110D8  514F               	movf	?_strcmp& (0+255),w,b
 18986  0110DA  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 18987  0110DC  A4D8               	btfss	status,2,c
 18988  0110DE  D030               	goto	l1761
 18989                           
 18990                           ; BSR set to: 1
 18991                           ;ring_buffer_LUT.c: 635: double max_voltage_print = readDoubleFromEEPROM(max_POS12_ADC_R
      +                          esult_address);
 18992  0110E0  0E91               	movlw	low _max_POS12_ADC_Result_address
 18993  0110E2  6EF6               	movwf	tblptrl,c
 18994  0110E4                     	if	1	;There is more than 1 active tblptr byte
 18995  0110E4  0ECE               	movlw	high _max_POS12_ADC_Result_address
 18996  0110E6  6EF7               	movwf	tblptrh,c
 18997  0110E8                     	endif
 18998  0110E8                     	if	1	;There are 3 active tblptr bytes
 18999  0110E8  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 19000  0110EA  6EF8               	movwf	tblptru,c
 19001  0110EC                     	endif
 19002  0110EC  0009               	tblrd		*+
 19003  0110EE  CFF5 F151          	movff	tablat,readDoubleFromEEPROM@starting_address
 19004  0110F2  000A               	tblrd		*-
 19005  0110F4  CFF5 F152          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 19006  0110F8  ECC9  F0D6         	call	_readDoubleFromEEPROM	;wreg free
 19007  0110FC  C151  F4A7         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_3728
 19008  011100  C152  F4A8         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_3728+1
 19009  011104  C153  F4A9         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_3728+2
 19010  011108  C154  F4AA         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_3728+3
 19011                           
 19012                           ;ring_buffer_LUT.c: 637: terminal_textAttributes(CYAN, BLACK, NORMAL);
 19013  01110C  0E00               	movlw	0
 19014  01110E  0102               	movlb	2	; () banked
 19015  011110  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 19016  011112  0E00               	movlw	0
 19017  011114  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19018  011116  0E06               	movlw	6
 19019  011118  ECA8  F0AA         	call	_terminal_textAttributes
 19020                           
 19021                           ;ring_buffer_LUT.c: 638: printf("Maximum recorded +12V rail voltage is %.3f Volts\n\r", 
      +                          max_voltage_print);
 19022  01111C  0E79               	movlw	low STR_159
 19023  01111E  0102               	movlb	2	; () banked
 19024  011120  6F85               	movwf	printf@f& (0+255),b
 19025  011122  0EF5               	movlw	high STR_159
 19026  011124  6F86               	movwf	(printf@f+1)& (0+255),b
 19027  011126  C4A7  F287         	movff	ringBufferLUT@max_voltage_print_3728,?_printf+2
 19028  01112A  C4A8  F288         	movff	ringBufferLUT@max_voltage_print_3728+1,?_printf+3
 19029  01112E  C4A9  F289         	movff	ringBufferLUT@max_voltage_print_3728+2,?_printf+4
 19030  011132  C4AA  F28A         	movff	ringBufferLUT@max_voltage_print_3728+3,?_printf+5
 19031  011136  ECA0  F0DA         	call	_printf	;wreg free
 19032                           
 19033                           ;ring_buffer_LUT.c: 639: terminal_textAttributesReset();
 19034  01113A  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 19035                           
 19036                           ;ring_buffer_LUT.c: 641: }
 19037  01113E  0012               	return	
 19038  011140                     l1761:
 19039                           
 19040                           ;ring_buffer_LUT.c: 644: else if((0 == strcmp(line, "Max Die Temp?"))) {
 19041  011140  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 19042  011144  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19043  011148  0EE3               	movlw	low STR_160
 19044  01114A  0101               	movlb	1	; () banked
 19045  01114C  6F51               	movwf	strcmp@s2& (0+255),b
 19046  01114E  0EFD               	movlw	high STR_160
 19047  011150  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 19048  011152  EC1B  F0D7         	call	_strcmp	;wreg free
 19049  011156  0101               	movlb	1	; () banked
 19050  011158  514F               	movf	?_strcmp& (0+255),w,b
 19051  01115A  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 19052  01115C  A4D8               	btfss	status,2,c
 19053  01115E  D030               	goto	l1763
 19054                           
 19055                           ; BSR set to: 1
 19056                           ;ring_buffer_LUT.c: 647: double max_temp_print = readDoubleFromEEPROM(max_Temp_ADC_Resul
      +                          t_address);
 19057  011160  0E8F               	movlw	low _max_Temp_ADC_Result_address
 19058  011162  6EF6               	movwf	tblptrl,c
 19059  011164                     	if	1	;There is more than 1 active tblptr byte
 19060  011164  0ECE               	movlw	high _max_Temp_ADC_Result_address
 19061  011166  6EF7               	movwf	tblptrh,c
 19062  011168                     	endif
 19063  011168                     	if	1	;There are 3 active tblptr bytes
 19064  011168  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 19065  01116A  6EF8               	movwf	tblptru,c
 19066  01116C                     	endif
 19067  01116C  0009               	tblrd		*+
 19068  01116E  CFF5 F151          	movff	tablat,readDoubleFromEEPROM@starting_address
 19069  011172  000A               	tblrd		*-
 19070  011174  CFF5 F152          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 19071  011178  ECC9  F0D6         	call	_readDoubleFromEEPROM	;wreg free
 19072  01117C  C151  F4AB         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_temp_print
 19073  011180  C152  F4AC         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_temp_print+1
 19074  011184  C153  F4AD         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_temp_print+2
 19075  011188  C154  F4AE         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_temp_print+3
 19076                           
 19077                           ;ring_buffer_LUT.c: 649: terminal_textAttributes(CYAN, BLACK, NORMAL);
 19078  01118C  0E00               	movlw	0
 19079  01118E  0102               	movlb	2	; () banked
 19080  011190  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 19081  011192  0E00               	movlw	0
 19082  011194  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19083  011196  0E06               	movlw	6
 19084  011198  ECA8  F0AA         	call	_terminal_textAttributes
 19085                           
 19086                           ;ring_buffer_LUT.c: 650: printf("Maximum recorded die temperature is %.3f C\n\r", max_te
      +                          mp_print);
 19087  01119C  0EC3               	movlw	low STR_161
 19088  01119E  0102               	movlb	2	; () banked
 19089  0111A0  6F85               	movwf	printf@f& (0+255),b
 19090  0111A2  0EF6               	movlw	high STR_161
 19091  0111A4  6F86               	movwf	(printf@f+1)& (0+255),b
 19092  0111A6  C4AB  F287         	movff	ringBufferLUT@max_temp_print,?_printf+2
 19093  0111AA  C4AC  F288         	movff	ringBufferLUT@max_temp_print+1,?_printf+3
 19094  0111AE  C4AD  F289         	movff	ringBufferLUT@max_temp_print+2,?_printf+4
 19095  0111B2  C4AE  F28A         	movff	ringBufferLUT@max_temp_print+3,?_printf+5
 19096  0111B6  ECA0  F0DA         	call	_printf	;wreg free
 19097                           
 19098                           ;ring_buffer_LUT.c: 651: terminal_textAttributesReset();
 19099  0111BA  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 19100                           
 19101                           ;ring_buffer_LUT.c: 653: }
 19102  0111BE  0012               	return	
 19103  0111C0                     l1763:
 19104                           
 19105                           ;ring_buffer_LUT.c: 656: else if((0 == strcmp(line, "Max FVR Voltage?"))) {
 19106  0111C0  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 19107  0111C4  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19108  0111C8  0E6B               	movlw	low STR_162
 19109  0111CA  0101               	movlb	1	; () banked
 19110  0111CC  6F51               	movwf	strcmp@s2& (0+255),b
 19111  0111CE  0EFC               	movlw	high STR_162
 19112  0111D0  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 19113  0111D2  EC1B  F0D7         	call	_strcmp	;wreg free
 19114  0111D6  0101               	movlb	1	; () banked
 19115  0111D8  514F               	movf	?_strcmp& (0+255),w,b
 19116  0111DA  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 19117  0111DC  A4D8               	btfss	status,2,c
 19118  0111DE  D030               	goto	l1765
 19119                           
 19120                           ; BSR set to: 1
 19121                           ;ring_buffer_LUT.c: 659: double max_voltage_print = readDoubleFromEEPROM(max_FVR_ADC_Res
      +                          ult_address);
 19122  0111E0  0E8D               	movlw	low _max_FVR_ADC_Result_address
 19123  0111E2  6EF6               	movwf	tblptrl,c
 19124  0111E4                     	if	1	;There is more than 1 active tblptr byte
 19125  0111E4  0ECE               	movlw	high _max_FVR_ADC_Result_address
 19126  0111E6  6EF7               	movwf	tblptrh,c
 19127  0111E8                     	endif
 19128  0111E8                     	if	1	;There are 3 active tblptr bytes
 19129  0111E8  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 19130  0111EA  6EF8               	movwf	tblptru,c
 19131  0111EC                     	endif
 19132  0111EC  0009               	tblrd		*+
 19133  0111EE  CFF5 F151          	movff	tablat,readDoubleFromEEPROM@starting_address
 19134  0111F2  000A               	tblrd		*-
 19135  0111F4  CFF5 F152          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 19136  0111F8  ECC9  F0D6         	call	_readDoubleFromEEPROM	;wreg free
 19137  0111FC  C151  F4AF         	movff	?_readDoubleFromEEPROM,ringBufferLUT@max_voltage_print_3734
 19138  011200  C152  F4B0         	movff	?_readDoubleFromEEPROM+1,ringBufferLUT@max_voltage_print_3734+1
 19139  011204  C153  F4B1         	movff	?_readDoubleFromEEPROM+2,ringBufferLUT@max_voltage_print_3734+2
 19140  011208  C154  F4B2         	movff	?_readDoubleFromEEPROM+3,ringBufferLUT@max_voltage_print_3734+3
 19141                           
 19142                           ;ring_buffer_LUT.c: 661: terminal_textAttributes(CYAN, BLACK, NORMAL);
 19143  01120C  0E00               	movlw	0
 19144  01120E  0102               	movlb	2	; () banked
 19145  011210  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 19146  011212  0E00               	movlw	0
 19147  011214  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19148  011216  0E06               	movlw	6
 19149  011218  ECA8  F0AA         	call	_terminal_textAttributes
 19150                           
 19151                           ;ring_buffer_LUT.c: 662: printf("Maximum recorded FVR buffer 1 voltage is %.3f Volts\n\r
      +                          ", max_voltage_print);
 19152  01121C  0ED5               	movlw	low STR_163
 19153  01121E  0102               	movlb	2	; () banked
 19154  011220  6F85               	movwf	printf@f& (0+255),b
 19155  011222  0EF3               	movlw	high STR_163
 19156  011224  6F86               	movwf	(printf@f+1)& (0+255),b
 19157  011226  C4AF  F287         	movff	ringBufferLUT@max_voltage_print_3734,?_printf+2
 19158  01122A  C4B0  F288         	movff	ringBufferLUT@max_voltage_print_3734+1,?_printf+3
 19159  01122E  C4B1  F289         	movff	ringBufferLUT@max_voltage_print_3734+2,?_printf+4
 19160  011232  C4B2  F28A         	movff	ringBufferLUT@max_voltage_print_3734+3,?_printf+5
 19161  011236  ECA0  F0DA         	call	_printf	;wreg free
 19162                           
 19163                           ;ring_buffer_LUT.c: 663: terminal_textAttributesReset();
 19164  01123A  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 19165                           
 19166                           ;ring_buffer_LUT.c: 665: }
 19167  01123E  0012               	return	
 19168  011240                     l1765:
 19169                           
 19170                           ;ring_buffer_LUT.c: 668: else if((0 == strcmp(line, "Clear Max Values"))) {
 19171  011240  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 19172  011244  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19173  011248  0E9E               	movlw	low STR_164
 19174  01124A  0101               	movlb	1	; () banked
 19175  01124C  6F51               	movwf	strcmp@s2& (0+255),b
 19176  01124E  0EFC               	movlw	high STR_164
 19177  011250  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 19178  011252  EC1B  F0D7         	call	_strcmp	;wreg free
 19179  011256  0101               	movlb	1	; () banked
 19180  011258  514F               	movf	?_strcmp& (0+255),w,b
 19181  01125A  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 19182  01125C  A4D8               	btfss	status,2,c
 19183  01125E  D0CB               	goto	l1767
 19184                           
 19185                           ; BSR set to: 1
 19186                           ;ring_buffer_LUT.c: 671: writeDoubleToEEPROM(0.0, max_Irms_address);
 19187  011260  0E00               	movlw	0
 19188  011262  6F53               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 19189  011264  0E00               	movlw	0
 19190  011266  6F54               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 19191  011268  0E00               	movlw	0
 19192  01126A  6F55               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 19193  01126C  0E00               	movlw	0
 19194  01126E  6F56               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 19195  011270  0E97               	movlw	low _max_Irms_address
 19196  011272  6EF6               	movwf	tblptrl,c
 19197  011274                     	if	1	;There is more than 1 active tblptr byte
 19198  011274  0ECE               	movlw	high _max_Irms_address
 19199  011276  6EF7               	movwf	tblptrh,c
 19200  011278                     	endif
 19201  011278                     	if	1	;There are 3 active tblptr bytes
 19202  011278  0E00               	movlw	low (_max_Irms_address shr (0+16))
 19203  01127A  6EF8               	movwf	tblptru,c
 19204  01127C                     	endif
 19205  01127C  0009               	tblrd		*+
 19206  01127E  CFF5 F157          	movff	tablat,writeDoubleToEEPROM@starting_address
 19207  011282  000A               	tblrd		*-
 19208  011284  CFF5 F158          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 19209  011288  EC43  F0D7         	call	_writeDoubleToEEPROM	;wreg free
 19210                           
 19211                           ;ring_buffer_LUT.c: 672: writeDoubleToEEPROM(0.0, max_Power_address);
 19212  01128C  0E00               	movlw	0
 19213  01128E  0101               	movlb	1	; () banked
 19214  011290  6F53               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 19215  011292  0E00               	movlw	0
 19216  011294  6F54               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 19217  011296  0E00               	movlw	0
 19218  011298  6F55               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 19219  01129A  0E00               	movlw	0
 19220  01129C  6F56               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 19221  01129E  0E95               	movlw	low _max_Power_address
 19222  0112A0  6EF6               	movwf	tblptrl,c
 19223  0112A2                     	if	1	;There is more than 1 active tblptr byte
 19224  0112A2  0ECE               	movlw	high _max_Power_address
 19225  0112A4  6EF7               	movwf	tblptrh,c
 19226  0112A6                     	endif
 19227  0112A6                     	if	1	;There are 3 active tblptr bytes
 19228  0112A6  0E00               	movlw	low (_max_Power_address shr (0+16))
 19229  0112A8  6EF8               	movwf	tblptru,c
 19230  0112AA                     	endif
 19231  0112AA  0009               	tblrd		*+
 19232  0112AC  CFF5 F157          	movff	tablat,writeDoubleToEEPROM@starting_address
 19233  0112B0  000A               	tblrd		*-
 19234  0112B2  CFF5 F158          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 19235  0112B6  EC43  F0D7         	call	_writeDoubleToEEPROM	;wreg free
 19236                           
 19237                           ;ring_buffer_LUT.c: 673: writeDoubleToEEPROM(0.0, max_POS3P3_ADC_Result_address);
 19238  0112BA  0E00               	movlw	0
 19239  0112BC  0101               	movlb	1	; () banked
 19240  0112BE  6F53               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 19241  0112C0  0E00               	movlw	0
 19242  0112C2  6F54               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 19243  0112C4  0E00               	movlw	0
 19244  0112C6  6F55               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 19245  0112C8  0E00               	movlw	0
 19246  0112CA  6F56               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 19247  0112CC  0E93               	movlw	low _max_POS3P3_ADC_Result_address
 19248  0112CE  6EF6               	movwf	tblptrl,c
 19249  0112D0                     	if	1	;There is more than 1 active tblptr byte
 19250  0112D0  0ECE               	movlw	high _max_POS3P3_ADC_Result_address
 19251  0112D2  6EF7               	movwf	tblptrh,c
 19252  0112D4                     	endif
 19253  0112D4                     	if	1	;There are 3 active tblptr bytes
 19254  0112D4  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 19255  0112D6  6EF8               	movwf	tblptru,c
 19256  0112D8                     	endif
 19257  0112D8  0009               	tblrd		*+
 19258  0112DA  CFF5 F157          	movff	tablat,writeDoubleToEEPROM@starting_address
 19259  0112DE  000A               	tblrd		*-
 19260  0112E0  CFF5 F158          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 19261  0112E4  EC43  F0D7         	call	_writeDoubleToEEPROM	;wreg free
 19262                           
 19263                           ;ring_buffer_LUT.c: 674: writeDoubleToEEPROM(0.0, max_POS12_ADC_Result_address);
 19264  0112E8  0E00               	movlw	0
 19265  0112EA  0101               	movlb	1	; () banked
 19266  0112EC  6F53               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 19267  0112EE  0E00               	movlw	0
 19268  0112F0  6F54               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 19269  0112F2  0E00               	movlw	0
 19270  0112F4  6F55               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 19271  0112F6  0E00               	movlw	0
 19272  0112F8  6F56               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 19273  0112FA  0E91               	movlw	low _max_POS12_ADC_Result_address
 19274  0112FC  6EF6               	movwf	tblptrl,c
 19275  0112FE                     	if	1	;There is more than 1 active tblptr byte
 19276  0112FE  0ECE               	movlw	high _max_POS12_ADC_Result_address
 19277  011300  6EF7               	movwf	tblptrh,c
 19278  011302                     	endif
 19279  011302                     	if	1	;There are 3 active tblptr bytes
 19280  011302  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 19281  011304  6EF8               	movwf	tblptru,c
 19282  011306                     	endif
 19283  011306  0009               	tblrd		*+
 19284  011308  CFF5 F157          	movff	tablat,writeDoubleToEEPROM@starting_address
 19285  01130C  000A               	tblrd		*-
 19286  01130E  CFF5 F158          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 19287  011312  EC43  F0D7         	call	_writeDoubleToEEPROM	;wreg free
 19288                           
 19289                           ;ring_buffer_LUT.c: 675: writeDoubleToEEPROM(0.0, max_Temp_ADC_Result_address);
 19290  011316  0E00               	movlw	0
 19291  011318  0101               	movlb	1	; () banked
 19292  01131A  6F53               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 19293  01131C  0E00               	movlw	0
 19294  01131E  6F54               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 19295  011320  0E00               	movlw	0
 19296  011322  6F55               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 19297  011324  0E00               	movlw	0
 19298  011326  6F56               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 19299  011328  0E8F               	movlw	low _max_Temp_ADC_Result_address
 19300  01132A  6EF6               	movwf	tblptrl,c
 19301  01132C                     	if	1	;There is more than 1 active tblptr byte
 19302  01132C  0ECE               	movlw	high _max_Temp_ADC_Result_address
 19303  01132E  6EF7               	movwf	tblptrh,c
 19304  011330                     	endif
 19305  011330                     	if	1	;There are 3 active tblptr bytes
 19306  011330  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 19307  011332  6EF8               	movwf	tblptru,c
 19308  011334                     	endif
 19309  011334  0009               	tblrd		*+
 19310  011336  CFF5 F157          	movff	tablat,writeDoubleToEEPROM@starting_address
 19311  01133A  000A               	tblrd		*-
 19312  01133C  CFF5 F158          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 19313  011340  EC43  F0D7         	call	_writeDoubleToEEPROM	;wreg free
 19314                           
 19315                           ;ring_buffer_LUT.c: 676: writeDoubleToEEPROM(0.0, max_FVR_ADC_Result_address);
 19316  011344  0E00               	movlw	0
 19317  011346  0101               	movlb	1	; () banked
 19318  011348  6F53               	movwf	writeDoubleToEEPROM@input_double& (0+255),b
 19319  01134A  0E00               	movlw	0
 19320  01134C  6F54               	movwf	(writeDoubleToEEPROM@input_double+1)& (0+255),b
 19321  01134E  0E00               	movlw	0
 19322  011350  6F55               	movwf	(writeDoubleToEEPROM@input_double+2)& (0+255),b
 19323  011352  0E00               	movlw	0
 19324  011354  6F56               	movwf	(writeDoubleToEEPROM@input_double+3)& (0+255),b
 19325  011356  0E8D               	movlw	low _max_FVR_ADC_Result_address
 19326  011358  6EF6               	movwf	tblptrl,c
 19327  01135A                     	if	1	;There is more than 1 active tblptr byte
 19328  01135A  0ECE               	movlw	high _max_FVR_ADC_Result_address
 19329  01135C  6EF7               	movwf	tblptrh,c
 19330  01135E                     	endif
 19331  01135E                     	if	1	;There are 3 active tblptr bytes
 19332  01135E  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 19333  011360  6EF8               	movwf	tblptru,c
 19334  011362                     	endif
 19335  011362  0009               	tblrd		*+
 19336  011364  CFF5 F157          	movff	tablat,writeDoubleToEEPROM@starting_address
 19337  011368  000A               	tblrd		*-
 19338  01136A  CFF5 F158          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 19339  01136E  EC43  F0D7         	call	_writeDoubleToEEPROM	;wreg free
 19340                           
 19341                           ;ring_buffer_LUT.c: 679: max_Irms = 0.0;
 19342  011372  0E00               	movlw	0
 19343  011374  0102               	movlb	2	; () banked
 19344  011376  6FA5               	movwf	_max_Irms& (0+255),b	;volatile
 19345  011378  0E00               	movlw	0
 19346  01137A  6FA6               	movwf	(_max_Irms+1)& (0+255),b	;volatile
 19347  01137C  0E00               	movlw	0
 19348  01137E  6FA7               	movwf	(_max_Irms+2)& (0+255),b	;volatile
 19349  011380  0E00               	movlw	0
 19350  011382  6FA8               	movwf	(_max_Irms+3)& (0+255),b	;volatile
 19351                           
 19352                           ; BSR set to: 2
 19353                           ;ring_buffer_LUT.c: 680: max_Power = 0.0;
 19354  011384  0E00               	movlw	0
 19355  011386  6FA1               	movwf	_max_Power& (0+255),b	;volatile
 19356  011388  0E00               	movlw	0
 19357  01138A  6FA2               	movwf	(_max_Power+1)& (0+255),b	;volatile
 19358  01138C  0E00               	movlw	0
 19359  01138E  6FA3               	movwf	(_max_Power+2)& (0+255),b	;volatile
 19360  011390  0E00               	movlw	0
 19361  011392  6FA4               	movwf	(_max_Power+3)& (0+255),b	;volatile
 19362                           
 19363                           ; BSR set to: 2
 19364                           ;ring_buffer_LUT.c: 681: max_POS3P3_ADC_Result = 0.0;
 19365  011394  0E00               	movlw	0
 19366  011396  6F9D               	movwf	_max_POS3P3_ADC_Result& (0+255),b	;volatile
 19367  011398  0E00               	movlw	0
 19368  01139A  6F9E               	movwf	(_max_POS3P3_ADC_Result+1)& (0+255),b	;volatile
 19369  01139C  0E00               	movlw	0
 19370  01139E  6F9F               	movwf	(_max_POS3P3_ADC_Result+2)& (0+255),b	;volatile
 19371  0113A0  0E00               	movlw	0
 19372  0113A2  6FA0               	movwf	(_max_POS3P3_ADC_Result+3)& (0+255),b	;volatile
 19373                           
 19374                           ; BSR set to: 2
 19375                           ;ring_buffer_LUT.c: 682: max_POS12_ADC_Result = 0.0;
 19376  0113A4  0E00               	movlw	0
 19377  0113A6  6F99               	movwf	_max_POS12_ADC_Result& (0+255),b	;volatile
 19378  0113A8  0E00               	movlw	0
 19379  0113AA  6F9A               	movwf	(_max_POS12_ADC_Result+1)& (0+255),b	;volatile
 19380  0113AC  0E00               	movlw	0
 19381  0113AE  6F9B               	movwf	(_max_POS12_ADC_Result+2)& (0+255),b	;volatile
 19382  0113B0  0E00               	movlw	0
 19383  0113B2  6F9C               	movwf	(_max_POS12_ADC_Result+3)& (0+255),b	;volatile
 19384                           
 19385                           ; BSR set to: 2
 19386                           ;ring_buffer_LUT.c: 683: max_Temp_ADC_Result = 0.0;
 19387  0113B4  0E00               	movlw	0
 19388  0113B6  6F95               	movwf	_max_Temp_ADC_Result& (0+255),b	;volatile
 19389  0113B8  0E00               	movlw	0
 19390  0113BA  6F96               	movwf	(_max_Temp_ADC_Result+1)& (0+255),b	;volatile
 19391  0113BC  0E00               	movlw	0
 19392  0113BE  6F97               	movwf	(_max_Temp_ADC_Result+2)& (0+255),b	;volatile
 19393  0113C0  0E00               	movlw	0
 19394  0113C2  6F98               	movwf	(_max_Temp_ADC_Result+3)& (0+255),b	;volatile
 19395                           
 19396                           ; BSR set to: 2
 19397                           ;ring_buffer_LUT.c: 684: max_FVR_ADC_Result = 0.0;
 19398  0113C4  0E00               	movlw	0
 19399  0113C6  6F91               	movwf	_max_FVR_ADC_Result& (0+255),b	;volatile
 19400  0113C8  0E00               	movlw	0
 19401  0113CA  6F92               	movwf	(_max_FVR_ADC_Result+1)& (0+255),b	;volatile
 19402  0113CC  0E00               	movlw	0
 19403  0113CE  6F93               	movwf	(_max_FVR_ADC_Result+2)& (0+255),b	;volatile
 19404  0113D0  0E00               	movlw	0
 19405  0113D2  6F94               	movwf	(_max_FVR_ADC_Result+3)& (0+255),b	;volatile
 19406                           
 19407                           ; BSR set to: 2
 19408                           ;ring_buffer_LUT.c: 686: terminal_textAttributes(GREEN, BLACK, NORMAL);
 19409  0113D4  0E00               	movlw	0
 19410  0113D6  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 19411  0113D8  0E00               	movlw	0
 19412  0113DA  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19413  0113DC  0E02               	movlw	2
 19414  0113DE  ECA8  F0AA         	call	_terminal_textAttributes
 19415                           
 19416                           ;ring_buffer_LUT.c: 687: printf("Maximum recorded values erased from SRAM and EEPROM\n\r
      +                          ");
 19417  0113E2  0E69               	movlw	low STR_165
 19418  0113E4  0102               	movlb	2	; () banked
 19419  0113E6  6F85               	movwf	printf@f& (0+255),b
 19420  0113E8  0EF3               	movlw	high STR_165
 19421  0113EA  6F86               	movwf	(printf@f+1)& (0+255),b
 19422  0113EC  ECA0  F0DA         	call	_printf	;wreg free
 19423                           
 19424                           ;ring_buffer_LUT.c: 688: terminal_textAttributesReset();
 19425  0113F0  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 19426                           
 19427                           ;ring_buffer_LUT.c: 690: }
 19428  0113F4  0012               	return	
 19429  0113F6                     l1767:
 19430                           
 19431                           ;ring_buffer_LUT.c: 694: else if((0 == strcmp(line, "Help Device Control Commands"))) {
 19432  0113F6  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 19433  0113FA  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19434  0113FE  0E1E               	movlw	low STR_166
 19435  011400  0101               	movlb	1	; () banked
 19436  011402  6F51               	movwf	strcmp@s2& (0+255),b
 19437  011404  0EFA               	movlw	high STR_166
 19438  011406  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 19439  011408  EC1B  F0D7         	call	_strcmp	;wreg free
 19440  01140C  0101               	movlb	1	; () banked
 19441  01140E  514F               	movf	?_strcmp& (0+255),w,b
 19442  011410  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 19443  011412  A4D8               	btfss	status,2,c
 19444  011414  D018               	goto	l1769
 19445                           
 19446                           ; BSR set to: 1
 19447                           ;ring_buffer_LUT.c: 696: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 19448  011416  0E00               	movlw	0
 19449  011418  0102               	movlb	2	; () banked
 19450  01141A  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 19451  01141C  0E00               	movlw	0
 19452  01141E  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19453  011420  0E03               	movlw	3
 19454  011422  ECA8  F0AA         	call	_terminal_textAttributes
 19455                           
 19456                           ;ring_buffer_LUT.c: 697: printf("List of supported Device Control Commands:\n\r"
 19457                           ;ring_buffer_LUT.c: 699: "   Reset: Clears the terminal and resets the microcontroller\n
      +                          \r"
 19458                           ;ring_buffer_LUT.c: 700: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 19459                           ;ring_buffer_LUT.c: 701: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 19460                           ;ring_buffer_LUT.c: 702: "   *IDN?: Returns device identification string\n\r"
 19461                           ;ring_buffer_LUT.c: 703: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
 19462  011426  0EF9               	movlw	low STR_167
 19463  011428  0102               	movlb	2	; () banked
 19464  01142A  6F85               	movwf	printf@f& (0+255),b
 19465  01142C  0EDD               	movlw	high STR_167
 19466  01142E  6F86               	movwf	(printf@f+1)& (0+255),b
 19467  011430  ECA0  F0DA         	call	_printf	;wreg free
 19468                           
 19469                           ;ring_buffer_LUT.c: 715: terminal_textAttributesReset();
 19470  011434  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 19471                           
 19472                           ;ring_buffer_LUT.c: 717: if (error_handler.USB_UART_COMM_error_flag) {
 19473  011438  0101               	movlb	1	; () banked
 19474  01143A  5168               	movf	(_error_handler+8)& (0+255),w,b
 19475  01143C  B4D8               	btfsc	status,2,c
 19476  01143E  0012               	return	
 19477                           
 19478                           ; BSR set to: 1
 19479                           ;ring_buffer_LUT.c: 718: error_handler.USB_UART_COMM_error_flag = 0;
 19480  011440  0E00               	movlw	0
 19481  011442  6F68               	movwf	(_error_handler+8)& (0+255),b
 19482                           
 19483                           ; BSR set to: 1
 19484                           ;ring_buffer_LUT.c: 719: }
 19485                           ;ring_buffer_LUT.c: 721: }
 19486  011444  0012               	return	
 19487  011446                     l1769:
 19488                           
 19489                           ; BSR set to: 1
 19490                           ;ring_buffer_LUT.c: 724: else if((0 == strcmp(line, "Help Device Measurement Commands"))
      +                          ) {
 19491                           
 19492                           ; BSR set to: 1
 19493  011446  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 19494  01144A  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19495  01144E  0E44               	movlw	low STR_168
 19496  011450  6F51               	movwf	strcmp@s2& (0+255),b
 19497  011452  0EF9               	movlw	high STR_168
 19498  011454  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 19499  011456  EC1B  F0D7         	call	_strcmp	;wreg free
 19500  01145A  0101               	movlb	1	; () banked
 19501  01145C  514F               	movf	?_strcmp& (0+255),w,b
 19502  01145E  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 19503  011460  A4D8               	btfss	status,2,c
 19504  011462  D018               	goto	l1772
 19505                           
 19506                           ; BSR set to: 1
 19507                           ;ring_buffer_LUT.c: 726: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 19508  011464  0E00               	movlw	0
 19509  011466  0102               	movlb	2	; () banked
 19510  011468  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 19511  01146A  0E00               	movlw	0
 19512  01146C  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19513  01146E  0E03               	movlw	3
 19514  011470  ECA8  F0AA         	call	_terminal_textAttributes
 19515                           
 19516                           ;ring_buffer_LUT.c: 727: printf("List of supported Device Measurement Commands:\n\r"
 19517                           ;ring_buffer_LUT.c: 729: "   Measure POS3P3?: Returns +3.3V ADC Conversion in volts\n\r"
 19518                           ;ring_buffer_LUT.c: 730: "   Measure POS12?: Returns +12V ADC Conversion in volts\n\r"
 19519                           ;ring_buffer_LUT.c: 731: "   Measure Die Temp?: Returns the microcontroller die temperat
      +                          ure in degrees C\n\r"
 19520                           ;ring_buffer_LUT.c: 732: "   Measure FVR?: Returns the internal fixed voltage reference 
      +                          buffer 1 output in volts\n\r"
 19521                           ;ring_buffer_LUT.c: 733: "   Measure AVSS?: Returns the measured value of Analog VSS in 
      +                          volts\n\r"
 19522  011474  0EB3               	movlw	low STR_169
 19523  011476  0102               	movlb	2	; () banked
 19524  011478  6F85               	movwf	printf@f& (0+255),b
 19525  01147A  0EE4               	movlw	high STR_169
 19526  01147C  6F86               	movwf	(printf@f+1)& (0+255),b
 19527  01147E  ECA0  F0DA         	call	_printf	;wreg free
 19528                           
 19529                           ;ring_buffer_LUT.c: 740: terminal_textAttributesReset();
 19530  011482  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 19531                           
 19532                           ;ring_buffer_LUT.c: 742: if (error_handler.USB_UART_COMM_error_flag) {
 19533  011486  0101               	movlb	1	; () banked
 19534  011488  5168               	movf	(_error_handler+8)& (0+255),w,b
 19535  01148A  B4D8               	btfsc	status,2,c
 19536  01148C  0012               	return	
 19537                           
 19538                           ; BSR set to: 1
 19539                           ;ring_buffer_LUT.c: 743: error_handler.USB_UART_COMM_error_flag = 0;
 19540  01148E  0E00               	movlw	0
 19541  011490  6F68               	movwf	(_error_handler+8)& (0+255),b
 19542                           
 19543                           ; BSR set to: 1
 19544                           ;ring_buffer_LUT.c: 744: }
 19545                           ;ring_buffer_LUT.c: 746: }
 19546  011492  0012               	return	
 19547  011494                     l1772:
 19548                           
 19549                           ; BSR set to: 1
 19550                           ;ring_buffer_LUT.c: 749: else if((0 == strcmp(line, "Help Primary Measurement Commands")
      +                          )) {
 19551                           
 19552                           ; BSR set to: 1
 19553  011494  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 19554  011498  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19555  01149C  0E22               	movlw	low STR_170
 19556  01149E  6F51               	movwf	strcmp@s2& (0+255),b
 19557  0114A0  0EF9               	movlw	high STR_170
 19558  0114A2  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 19559  0114A4  EC1B  F0D7         	call	_strcmp	;wreg free
 19560  0114A8  0101               	movlb	1	; () banked
 19561  0114AA  514F               	movf	?_strcmp& (0+255),w,b
 19562  0114AC  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 19563  0114AE  A4D8               	btfss	status,2,c
 19564  0114B0  D018               	goto	l1775
 19565                           
 19566                           ; BSR set to: 1
 19567                           ;ring_buffer_LUT.c: 751: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 19568  0114B2  0E00               	movlw	0
 19569  0114B4  0102               	movlb	2	; () banked
 19570  0114B6  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 19571  0114B8  0E00               	movlw	0
 19572  0114BA  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19573  0114BC  0E03               	movlw	3
 19574  0114BE  ECA8  F0AA         	call	_terminal_textAttributes
 19575                           
 19576                           ;ring_buffer_LUT.c: 752: printf("List of supported Primary Measurement Commands:\n\r"
 19577                           ;ring_buffer_LUT.c: 754: "   Measure Detected Current?: Returns measured output current 
      +                          in amps as seen by ADC\n\r"
 19578                           ;ring_buffer_LUT.c: 755: "   Measure RMS Current?: Returns the calculated RMS output cur
      +                          rent from measurements and TRIAC firing angle\n\r"
 19579                           ;ring_buffer_LUT.c: 756: "   Measure RMS Voltage?: Returns the calculated RMS output vol
      +                          tage from TRIAC firing angle\n\r"
 19580                           ;ring_buffer_LUT.c: 757: "   Measure Power?: Returns the calculated output power in Watt
      +                          s\n\r"
 19581  0114C2  0EC7               	movlw	low STR_171
 19582  0114C4  0102               	movlb	2	; () banked
 19583  0114C6  6F85               	movwf	printf@f& (0+255),b
 19584  0114C8  0EE1               	movlw	high STR_171
 19585  0114CA  6F86               	movwf	(printf@f+1)& (0+255),b
 19586  0114CC  ECA0  F0DA         	call	_printf	;wreg free
 19587                           
 19588                           ;ring_buffer_LUT.c: 765: terminal_textAttributesReset();
 19589  0114D0  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 19590                           
 19591                           ;ring_buffer_LUT.c: 767: if (error_handler.USB_UART_COMM_error_flag) {
 19592  0114D4  0101               	movlb	1	; () banked
 19593  0114D6  5168               	movf	(_error_handler+8)& (0+255),w,b
 19594  0114D8  B4D8               	btfsc	status,2,c
 19595  0114DA  0012               	return	
 19596                           
 19597                           ; BSR set to: 1
 19598                           ;ring_buffer_LUT.c: 768: error_handler.USB_UART_COMM_error_flag = 0;
 19599  0114DC  0E00               	movlw	0
 19600  0114DE  6F68               	movwf	(_error_handler+8)& (0+255),b
 19601                           
 19602                           ; BSR set to: 1
 19603                           ;ring_buffer_LUT.c: 769: }
 19604                           ;ring_buffer_LUT.c: 771: }
 19605  0114E0  0012               	return	
 19606  0114E2                     l1775:
 19607                           
 19608                           ; BSR set to: 1
 19609                           ;ring_buffer_LUT.c: 774: else if((0 == strcmp(line, "Help Output Control Commands"))) {
 19610                           
 19611                           ; BSR set to: 1
 19612  0114E2  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 19613  0114E6  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19614  0114EA  0E3B               	movlw	low STR_172
 19615  0114EC  6F51               	movwf	strcmp@s2& (0+255),b
 19616  0114EE  0EFA               	movlw	high STR_172
 19617  0114F0  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 19618  0114F2  EC1B  F0D7         	call	_strcmp	;wreg free
 19619  0114F6  0101               	movlb	1	; () banked
 19620  0114F8  514F               	movf	?_strcmp& (0+255),w,b
 19621  0114FA  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 19622  0114FC  A4D8               	btfss	status,2,c
 19623  0114FE  D018               	goto	l1778
 19624                           
 19625                           ; BSR set to: 1
 19626                           ;ring_buffer_LUT.c: 776: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 19627  011500  0E00               	movlw	0
 19628  011502  0102               	movlb	2	; () banked
 19629  011504  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 19630  011506  0E00               	movlw	0
 19631  011508  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19632  01150A  0E03               	movlw	3
 19633  01150C  ECA8  F0AA         	call	_terminal_textAttributes
 19634                           
 19635                           ;ring_buffer_LUT.c: 777: printf("List of supported Output Control Commands:\n\r"
 19636                           ;ring_buffer_LUT.c: 779: "   Enable Dimming: Enable TRIAC output dimming\n\r"
 19637                           ;ring_buffer_LUT.c: 780: "   Disable Dimming: Disable TRIAC output dimming\n\r"
 19638                           ;ring_buffer_LUT.c: 781: "   Enable Load: Enables the output TRIAC with dimming disabled
      +                          \n\r"
 19639                           ;ring_buffer_LUT.c: 782: "   Disable Load: Disables the output TRIAC completely\n\r"
 19640                           ;ring_buffer_LUT.c: 783: "   Load Enabled?: Returns if the output load is enabled or dis
      +                          abled\n\r"
 19641  011510  0E83               	movlw	low STR_173
 19642  011512  0102               	movlb	2	; () banked
 19643  011514  6F85               	movwf	printf@f& (0+255),b
 19644  011516  0EE7               	movlw	high STR_173
 19645  011518  6F86               	movwf	(printf@f+1)& (0+255),b
 19646  01151A  ECA0  F0DA         	call	_printf	;wreg free
 19647                           
 19648                           ;ring_buffer_LUT.c: 788: terminal_textAttributesReset();
 19649  01151E  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 19650                           
 19651                           ;ring_buffer_LUT.c: 790: if (error_handler.USB_UART_COMM_error_flag) {
 19652  011522  0101               	movlb	1	; () banked
 19653  011524  5168               	movf	(_error_handler+8)& (0+255),w,b
 19654  011526  B4D8               	btfsc	status,2,c
 19655  011528  0012               	return	
 19656                           
 19657                           ; BSR set to: 1
 19658                           ;ring_buffer_LUT.c: 791: error_handler.USB_UART_COMM_error_flag = 0;
 19659  01152A  0E00               	movlw	0
 19660  01152C  6F68               	movwf	(_error_handler+8)& (0+255),b
 19661                           
 19662                           ; BSR set to: 1
 19663                           ;ring_buffer_LUT.c: 792: }
 19664                           ;ring_buffer_LUT.c: 794: }
 19665  01152E  0012               	return	
 19666  011530                     l1778:
 19667                           
 19668                           ; BSR set to: 1
 19669                           ;ring_buffer_LUT.c: 797: else if((0 == strcmp(line, "Help All"))) {
 19670                           
 19671                           ; BSR set to: 1
 19672  011530  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 19673  011534  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19674  011538  0E8C               	movlw	low STR_174
 19675  01153A  6F51               	movwf	strcmp@s2& (0+255),b
 19676  01153C  0EFF               	movlw	high STR_174
 19677  01153E  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 19678  011540  EC1B  F0D7         	call	_strcmp	;wreg free
 19679  011544  0101               	movlb	1	; () banked
 19680  011546  514F               	movf	?_strcmp& (0+255),w,b
 19681  011548  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 19682  01154A  A4D8               	btfss	status,2,c
 19683  01154C  D018               	goto	l1781
 19684                           
 19685                           ; BSR set to: 1
 19686                           ;ring_buffer_LUT.c: 799: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 19687  01154E  0E00               	movlw	0
 19688  011550  0102               	movlb	2	; () banked
 19689  011552  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 19690  011554  0E00               	movlw	0
 19691  011556  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19692  011558  0E03               	movlw	3
 19693  01155A  ECA8  F0AA         	call	_terminal_textAttributes
 19694                           
 19695                           ;ring_buffer_LUT.c: 800: printf("List of all supported commands:\n\r"
 19696                           ;ring_buffer_LUT.c: 802: "Device Control Commands: Commands to view and control low leve
      +                          l system functionality\n\r"
 19697                           ;ring_buffer_LUT.c: 803: "   Reset: Clears the terminal and resets the microcontroller\n
      +                          \r"
 19698                           ;ring_buffer_LUT.c: 804: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
 19699                           ;ring_buffer_LUT.c: 805: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
 19700                           ;ring_buffer_LUT.c: 806: "   *IDN?: Returns device identification string\n\r"
 19701  01155E  0EEB               	movlw	low STR_175
 19702  011560  0102               	movlb	2	; () banked
 19703  011562  6F85               	movwf	printf@f& (0+255),b
 19704  011564  0ED1               	movlw	high STR_175
 19705  011566  6F86               	movwf	(printf@f+1)& (0+255),b
 19706  011568  ECA0  F0DA         	call	_printf	;wreg free
 19707                           
 19708                           ;ring_buffer_LUT.c: 851: terminal_textAttributesReset();
 19709  01156C  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 19710                           
 19711                           ;ring_buffer_LUT.c: 853: if (error_handler.USB_UART_COMM_error_flag) {
 19712  011570  0101               	movlb	1	; () banked
 19713  011572  5168               	movf	(_error_handler+8)& (0+255),w,b
 19714  011574  B4D8               	btfsc	status,2,c
 19715  011576  0012               	return	
 19716                           
 19717                           ; BSR set to: 1
 19718                           ;ring_buffer_LUT.c: 854: error_handler.USB_UART_COMM_error_flag = 0;
 19719  011578  0E00               	movlw	0
 19720  01157A  6F68               	movwf	(_error_handler+8)& (0+255),b
 19721                           
 19722                           ; BSR set to: 1
 19723                           ;ring_buffer_LUT.c: 855: }
 19724                           ;ring_buffer_LUT.c: 857: }
 19725  01157C  0012               	return	
 19726  01157E                     l1781:
 19727                           
 19728                           ; BSR set to: 1
 19729                           ;ring_buffer_LUT.c: 861: else if((0 == strcmp(line, "Help"))) {
 19730                           
 19731                           ; BSR set to: 1
 19732  01157E  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 19733  011582  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19734  011586  0EAE               	movlw	low STR_176
 19735  011588  6F51               	movwf	strcmp@s2& (0+255),b
 19736  01158A  0EFF               	movlw	high STR_176
 19737  01158C  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 19738  01158E  EC1B  F0D7         	call	_strcmp	;wreg free
 19739  011592  0101               	movlb	1	; () banked
 19740  011594  514F               	movf	?_strcmp& (0+255),w,b
 19741  011596  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 19742  011598  A4D8               	btfss	status,2,c
 19743  01159A  D057               	goto	l1784
 19744                           
 19745                           ; BSR set to: 1
 19746                           ;ring_buffer_LUT.c: 863: terminal_textAttributes(YELLOW, BLACK, NORMAL);
 19747  01159C  0E00               	movlw	0
 19748  01159E  0102               	movlb	2	; () banked
 19749  0115A0  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 19750  0115A2  0E00               	movlw	0
 19751  0115A4  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19752  0115A6  0E03               	movlw	3
 19753  0115A8  ECA8  F0AA         	call	_terminal_textAttributes
 19754                           
 19755                           ;ring_buffer_LUT.c: 864: printf("Please specify what type of commands you'd like help wi
      +                          th:\n\r"
 19756                           ;ring_buffer_LUT.c: 865: "Try 'Help <command set>'\n\r\n\r"
 19757                           ;ring_buffer_LUT.c: 867: "Supported Command Sets:\n\r"
 19758                           ;ring_buffer_LUT.c: 868: "   Device Control Commands: Commands to view and control low l
      +                          evel system functionality\n\r"
 19759                           ;ring_buffer_LUT.c: 869: "   Device Measurement Commands: View low level system measurem
      +                          ents\n\r"
 19760                           ;ring_buffer_LUT.c: 870: "   Primary Measurement Commands: View high level output measur
      +                          ements and calculations\n\r"
 19761  0115AC  0E6F               	movlw	low STR_177
 19762  0115AE  0102               	movlb	2	; () banked
 19763  0115B0  6F85               	movwf	printf@f& (0+255),b
 19764  0115B2  0EE9               	movlw	high STR_177
 19765  0115B4  6F86               	movwf	(printf@f+1)& (0+255),b
 19766  0115B6  ECA0  F0DA         	call	_printf	;wreg free
 19767                           
 19768                           ;ring_buffer_LUT.c: 877: terminal_printNewline();
 19769  0115BA  EC73  F0DF         	call	_terminal_printNewline	;wreg free
 19770                           
 19771                           ;ring_buffer_LUT.c: 878: printf("Help messages and neutral responses appear in yellow\n\
      +                          r");
 19772  0115BE  0E32               	movlw	low STR_178
 19773  0115C0  0102               	movlb	2	; () banked
 19774  0115C2  6F85               	movwf	printf@f& (0+255),b
 19775  0115C4  0EF3               	movlw	high STR_178
 19776  0115C6  6F86               	movwf	(printf@f+1)& (0+255),b
 19777  0115C8  ECA0  F0DA         	call	_printf	;wreg free
 19778                           
 19779                           ;ring_buffer_LUT.c: 880: terminal_textAttributes(GREEN, BLACK, NORMAL);
 19780  0115CC  0E00               	movlw	0
 19781  0115CE  0102               	movlb	2	; () banked
 19782  0115D0  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 19783  0115D2  0E00               	movlw	0
 19784  0115D4  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19785  0115D6  0E02               	movlw	2
 19786  0115D8  ECA8  F0AA         	call	_terminal_textAttributes
 19787                           
 19788                           ;ring_buffer_LUT.c: 881: printf("System parameters and affirmative responses appear in g
      +                          reen\n\r");
 19789  0115DC  0E96               	movlw	low STR_179
 19790  0115DE  0102               	movlb	2	; () banked
 19791  0115E0  6F85               	movwf	printf@f& (0+255),b
 19792  0115E2  0EF1               	movlw	high STR_179
 19793  0115E4  6F86               	movwf	(printf@f+1)& (0+255),b
 19794  0115E6  ECA0  F0DA         	call	_printf	;wreg free
 19795                           
 19796                           ;ring_buffer_LUT.c: 882: terminal_textAttributes(CYAN, BLACK, NORMAL);
 19797  0115EA  0E00               	movlw	0
 19798  0115EC  0102               	movlb	2	; () banked
 19799  0115EE  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 19800  0115F0  0E00               	movlw	0
 19801  0115F2  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19802  0115F4  0E06               	movlw	6
 19803  0115F6  ECA8  F0AA         	call	_terminal_textAttributes
 19804                           
 19805                           ;ring_buffer_LUT.c: 883: printf("Measurement responses appear in cyan\n\r");
 19806  0115FA  0E96               	movlw	low STR_180
 19807  0115FC  0102               	movlb	2	; () banked
 19808  0115FE  6F85               	movwf	printf@f& (0+255),b
 19809  011600  0EF7               	movlw	high STR_180
 19810  011602  6F86               	movwf	(printf@f+1)& (0+255),b
 19811  011604  ECA0  F0DA         	call	_printf	;wreg free
 19812                           
 19813                           ;ring_buffer_LUT.c: 884: terminal_textAttributes(RED, BLACK, NORMAL);
 19814  011608  0E00               	movlw	0
 19815  01160A  0102               	movlb	2	; () banked
 19816  01160C  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 19817  01160E  0E00               	movlw	0
 19818  011610  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19819  011612  0E01               	movlw	1
 19820  011614  ECA8  F0AA         	call	_terminal_textAttributes
 19821                           
 19822                           ;ring_buffer_LUT.c: 885: printf("Errors and negative responses appear in red\n\r");
 19823  011618  0E39               	movlw	low STR_181
 19824  01161A  0102               	movlb	2	; () banked
 19825  01161C  6F85               	movwf	printf@f& (0+255),b
 19826  01161E  0EF6               	movlw	high STR_181
 19827  011620  6F86               	movwf	(printf@f+1)& (0+255),b
 19828  011622  ECA0  F0DA         	call	_printf	;wreg free
 19829                           
 19830                           ;ring_buffer_LUT.c: 886: terminal_textAttributesReset();
 19831  011626  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 19832                           
 19833                           ;ring_buffer_LUT.c: 887: printf("User input appears in white\n\r");
 19834  01162A  0EE3               	movlw	low STR_182
 19835  01162C  0102               	movlb	2	; () banked
 19836  01162E  6F85               	movwf	printf@f& (0+255),b
 19837  011630  0EF9               	movlw	high STR_182
 19838  011632  6F86               	movwf	(printf@f+1)& (0+255),b
 19839  011634  ECA0  F0DA         	call	_printf	;wreg free
 19840                           
 19841                           ;ring_buffer_LUT.c: 890: terminal_printNewline();
 19842  011638  EC73  F0DF         	call	_terminal_printNewline	;wreg free
 19843                           
 19844                           ;ring_buffer_LUT.c: 892: if (error_handler.USB_UART_COMM_error_flag) {
 19845  01163C  0101               	movlb	1	; () banked
 19846  01163E  5168               	movf	(_error_handler+8)& (0+255),w,b
 19847  011640  B4D8               	btfsc	status,2,c
 19848  011642  0012               	return	
 19849                           
 19850                           ; BSR set to: 1
 19851                           ;ring_buffer_LUT.c: 893: error_handler.USB_UART_COMM_error_flag = 0;
 19852  011644  0E00               	movlw	0
 19853  011646  6F68               	movwf	(_error_handler+8)& (0+255),b
 19854                           
 19855                           ; BSR set to: 1
 19856                           ;ring_buffer_LUT.c: 894: }
 19857                           ;ring_buffer_LUT.c: 896: }
 19858  011648  0012               	return	
 19859  01164A                     l1784:
 19860                           
 19861                           ; BSR set to: 1
 19862                           ;ring_buffer_LUT.c: 899: else if ((0 == strcmp(line, "Easter Egg"))) {
 19863                           
 19864                           ; BSR set to: 1
 19865  01164A  C490  F14F         	movff	ringBufferLUT@line,strcmp@s1
 19866  01164E  C491  F150         	movff	ringBufferLUT@line+1,strcmp@s1+1
 19867  011652  0E30               	movlw	low STR_183
 19868  011654  6F51               	movwf	strcmp@s2& (0+255),b
 19869  011656  0EFF               	movlw	high STR_183
 19870  011658  6F52               	movwf	(strcmp@s2+1)& (0+255),b
 19871  01165A  EC1B  F0D7         	call	_strcmp	;wreg free
 19872  01165E  0101               	movlb	1	; () banked
 19873  011660  514F               	movf	?_strcmp& (0+255),w,b
 19874  011662  1150               	iorwf	(?_strcmp+1)& (0+255),w,b
 19875  011664  A4D8               	btfss	status,2,c
 19876  011666  0012               	return	
 19877                           
 19878                           ; BSR set to: 1
 19879                           ;ring_buffer_LUT.c: 901: terminal_printNewline();
 19880  011668  EC73  F0DF         	call	_terminal_printNewline	;wreg free
 19881                           
 19882                           ;ring_buffer_LUT.c: 902: terminal_textAttributes(RED, BLACK, NORMAL);
 19883  01166C  0E00               	movlw	0
 19884  01166E  0102               	movlb	2	; () banked
 19885  011670  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 19886  011672  0E00               	movlw	0
 19887  011674  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19888  011676  0E01               	movlw	1
 19889  011678  ECA8  F0AA         	call	_terminal_textAttributes
 19890                           
 19891                           ;ring_buffer_LUT.c: 903: printf(
 19892                           ;ring_buffer_LUT.c: 904: "    _   ___   ___                      __  __     _           
      +                                         _   ___  _      \n\r"
 19893                           ;ring_buffer_LUT.c: 905: "   /_\\ / __| | _ \\_____ __ _____ _ _  |  \\/  |___| |_ ___ _
      +                           _   __ _ _ _  __| | |   \\(_)_ __  _ __  ___ _ _ \n\r"
 19894                           ;ring_buffer_LUT.c: 906: "  / _ \\ (__  |  _/ _ \\ V  V / -_) '_| | |\\/| / -_)  _/ -_) 
      +                          '_| / _` | ' \\/ _` | | |) | | '  \\| '  \\/ -_) '_|\n\r"
 19895                           ;ring_buffer_LUT.c: 907: " /_/ \\_\\___| |_| \\___/\\_/\\_/\\___|_|   |_|  |_\\___|\\__\
      +                          \___|_|   \\__,_|_||_\\__,_| |___/|_|_|_|_|_|_|_\\___|_|  \n\r"
 19896  01167C  0E45               	movlw	low STR_184
 19897  01167E  0102               	movlb	2	; () banked
 19898  011680  6F85               	movwf	printf@f& (0+255),b
 19899  011682  0EEB               	movlw	high STR_184
 19900  011684  6F86               	movwf	(printf@f+1)& (0+255),b
 19901  011686  ECA0  F0DA         	call	_printf	;wreg free
 19902                           
 19903                           ;ring_buffer_LUT.c: 912: terminal_printNewline();
 19904  01168A  EC73  F0DF         	call	_terminal_printNewline	;wreg free
 19905                           
 19906                           ;ring_buffer_LUT.c: 913: terminal_textAttributes(YELLOW, BLUE, NORMAL);
 19907  01168E  0E04               	movlw	4
 19908  011690  0102               	movlb	2	; () banked
 19909  011692  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 19910  011694  0E00               	movlw	0
 19911  011696  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19912  011698  0E03               	movlw	3
 19913  01169A  ECA8  F0AA         	call	_terminal_textAttributes
 19914                           
 19915                           ;ring_buffer_LUT.c: 914: printf("Marquette University EECE\n\r");
 19916  01169E  0E58               	movlw	low STR_185
 19917  0116A0  0102               	movlb	2	; () banked
 19918  0116A2  6F85               	movwf	printf@f& (0+255),b
 19919  0116A4  0EFA               	movlw	high STR_185
 19920  0116A6  6F86               	movwf	(printf@f+1)& (0+255),b
 19921  0116A8  ECA0  F0DA         	call	_printf	;wreg free
 19922                           
 19923                           ;ring_buffer_LUT.c: 915: terminal_textAttributes(GREEN, BLACK, NORMAL);
 19924  0116AC  0E00               	movlw	0
 19925  0116AE  0102               	movlb	2	; () banked
 19926  0116B0  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 19927  0116B2  0E00               	movlw	0
 19928  0116B4  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19929  0116B6  0E02               	movlw	2
 19930  0116B8  ECA8  F0AA         	call	_terminal_textAttributes
 19931                           
 19932                           ;ring_buffer_LUT.c: 916: printf("ELEN 3035 Final Project\n\r");
 19933  0116BC  0EF1               	movlw	low (STR_69+21)
 19934  0116BE  0102               	movlb	2	; () banked
 19935  0116C0  6F85               	movwf	printf@f& (0+255),b
 19936  0116C2  0EF5               	movlw	high (STR_69+21)
 19937  0116C4  6F86               	movwf	(printf@f+1)& (0+255),b
 19938  0116C6  ECA0  F0DA         	call	_printf	;wreg free
 19939                           
 19940                           ;ring_buffer_LUT.c: 917: printf("Drew Maatman and Gabe Thalji\n\r");
 19941  0116CA  0EC4               	movlw	low STR_187
 19942  0116CC  0102               	movlb	2	; () banked
 19943  0116CE  6F85               	movwf	printf@f& (0+255),b
 19944  0116D0  0EF9               	movlw	high STR_187
 19945  0116D2  6F86               	movwf	(printf@f+1)& (0+255),b
 19946  0116D4  ECA0  F0DA         	call	_printf	;wreg free
 19947                           
 19948                           ;ring_buffer_LUT.c: 918: terminal_textAttributes(YELLOW, BLACK, BOLD);
 19949  0116D8  0E00               	movlw	0
 19950  0116DA  0102               	movlb	2	; () banked
 19951  0116DC  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 19952  0116DE  0E01               	movlw	1
 19953  0116E0  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 19954  0116E2  0E03               	movlw	3
 19955  0116E4  ECA8  F0AA         	call	_terminal_textAttributes
 19956                           
 19957                           ;ring_buffer_LUT.c: 919: printf("PSOCs SUCK\n\r");
 19958  0116E8  0E35               	movlw	low STR_188
 19959  0116EA  0102               	movlb	2	; () banked
 19960  0116EC  6F85               	movwf	printf@f& (0+255),b
 19961  0116EE  0EFE               	movlw	high STR_188
 19962  0116F0  6F86               	movwf	(printf@f+1)& (0+255),b
 19963  0116F2  ECA0  F0DA         	call	_printf	;wreg free
 19964                           
 19965                           ;ring_buffer_LUT.c: 920: terminal_textAttributesReset();
 19966  0116F6  EC51  F0DF         	call	_terminal_textAttributesReset	;wreg free
 19967                           
 19968                           ;ring_buffer_LUT.c: 921: terminal_printNewline();
 19969  0116FA  EC73  F0DF         	call	_terminal_printNewline	;wreg free
 19970                           
 19971                           ;ring_buffer_LUT.c: 923: if (error_handler.USB_UART_COMM_error_flag) {
 19972  0116FE  0101               	movlb	1	; () banked
 19973  011700  5168               	movf	(_error_handler+8)& (0+255),w,b
 19974  011702  B4D8               	btfsc	status,2,c
 19975  011704  0012               	return	
 19976                           
 19977                           ; BSR set to: 1
 19978                           ;ring_buffer_LUT.c: 924: error_handler.USB_UART_COMM_error_flag = 0;
 19979  011706  0E00               	movlw	0
 19980  011708  6F68               	movwf	(_error_handler+8)& (0+255),b
 19981                           
 19982                           ; BSR set to: 1
 19983                           
 19984                           ; BSR set to: 1
 19985                           
 19986                           ; BSR set to: 1
 19987                           
 19988                           ; BSR set to: 1
 19989                           
 19990                           ; BSR set to: 1
 19991                           
 19992                           ; BSR set to: 1
 19993                           
 19994                           ; BSR set to: 1
 19995                           
 19996                           ; BSR set to: 1
 19997                           
 19998                           ; BSR set to: 1
 19999                           
 20000                           ; BSR set to: 1
 20001                           
 20002                           ; BSR set to: 1
 20003                           
 20004                           ; BSR set to: 1
 20005                           
 20006                           ; BSR set to: 1
 20007                           
 20008                           ; BSR set to: 1
 20009                           
 20010                           ; BSR set to: 1
 20011                           
 20012                           ; BSR set to: 1
 20013                           
 20014                           ; BSR set to: 1
 20015                           
 20016                           ; BSR set to: 1
 20017                           
 20018                           ; BSR set to: 1
 20019                           
 20020                           ; BSR set to: 1
 20021                           
 20022                           ; BSR set to: 1
 20023                           
 20024                           ; BSR set to: 1
 20025                           
 20026                           ; BSR set to: 1
 20027                           
 20028                           ; BSR set to: 1
 20029                           
 20030                           ; BSR set to: 1
 20031                           
 20032                           ; BSR set to: 1
 20033                           
 20034                           ; BSR set to: 1
 20035                           
 20036                           ; BSR set to: 1
 20037                           
 20038                           ; BSR set to: 1
 20039                           
 20040                           ; BSR set to: 1
 20041                           
 20042                           ; BSR set to: 1
 20043                           
 20044                           ; BSR set to: 1
 20045                           
 20046                           ; BSR set to: 1
 20047                           
 20048                           ; BSR set to: 1
 20049                           
 20050                           ; BSR set to: 1
 20051                           
 20052                           ; BSR set to: 1
 20053                           
 20054                           ; BSR set to: 1
 20055                           
 20056                           ; BSR set to: 1
 20057                           
 20058                           ; BSR set to: 1
 20059                           
 20060                           ; BSR set to: 1
 20061                           
 20062                           ; BSR set to: 1
 20063                           
 20064                           ; BSR set to: 1
 20065                           
 20066                           ; BSR set to: 1
 20067                           
 20068                           ; BSR set to: 1
 20069                           
 20070                           ; BSR set to: 1
 20071                           
 20072                           ; BSR set to: 1
 20073  01170A  0012               	return	
 20074  01170C                     __end_of_ringBufferLUT:
 20075                           	opt stack 0
 20076                           tblptru	equ	0xFF8
 20077                           tblptrh	equ	0xFF7
 20078                           tblptrl	equ	0xFF6
 20079                           tablat	equ	0xFF5
 20080                           intcon	equ	0xFF2
 20081                           postinc0	equ	0xFEE
 20082                           wreg	equ	0xFE8
 20083                           indf1	equ	0xFE7
 20084                           postdec1	equ	0xFE5
 20085                           fsr1h	equ	0xFE2
 20086                           fsr1l	equ	0xFE1
 20087                           indf2	equ	0xFDF
 20088                           postinc2	equ	0xFDE
 20089                           fsr2h	equ	0xFDA
 20090                           fsr2l	equ	0xFD9
 20091                           status	equ	0xFD8
 20092                           
 20093 ;; *************** function _terminal_textAttributesReset *****************
 20094 ;; Defined at:
 20095 ;;		line 223 in file "ring_buffer_interface.c"
 20096 ;; Parameters:    Size  Location     Type
 20097 ;;		None
 20098 ;; Auto vars:     Size  Location     Type
 20099 ;;		None
 20100 ;; Return value:  Size  Location     Type
 20101 ;;                  1    wreg      void 
 20102 ;; Registers used:
 20103 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20104 ;; Tracked objects:
 20105 ;;		On entry : 0/0
 20106 ;;		On exit  : 0/0
 20107 ;;		Unchanged: 0/0
 20108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20113 ;;Total ram usage:        0 bytes
 20114 ;; Hardware stack levels used:    1
 20115 ;; Hardware stack levels required when called:   24
 20116 ;; This function calls:
 20117 ;;		_terminal_textAttributes
 20118 ;; This function is called by:
 20119 ;;		_main
 20120 ;;		_ringBufferLUT
 20121 ;; This function uses a non-reentrant model
 20122 ;;
 20123                           
 20124                           	psect	text5
 20125  01BEA2                     __ptext5:
 20126                           	opt stack 0
 20127  01BEA2                     _terminal_textAttributesReset:
 20128                           	opt stack 6
 20129                           
 20130                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
 20131                           
 20132                           ;incstack = 0
 20133  01BEA2  0E00               	movlw	0
 20134  01BEA4  0102               	movlb	2	; () banked
 20135  01BEA6  6F8F               	movwf	terminal_textAttributes@background_color& (0+255),b
 20136  01BEA8  0E00               	movlw	0
 20137  01BEAA  6F90               	movwf	terminal_textAttributes@input_attribute& (0+255),b
 20138  01BEAC  0E07               	movlw	7
 20139  01BEAE  ECA8  F0AA         	call	_terminal_textAttributes
 20140  01BEB2  0012               	return		;funcret
 20141  01BEB4                     __end_of_terminal_textAttributesReset:
 20142                           	opt stack 0
 20143                           tblptru	equ	0xFF8
 20144                           tblptrh	equ	0xFF7
 20145                           tblptrl	equ	0xFF6
 20146                           tablat	equ	0xFF5
 20147                           intcon	equ	0xFF2
 20148                           postinc0	equ	0xFEE
 20149                           wreg	equ	0xFE8
 20150                           indf1	equ	0xFE7
 20151                           postdec1	equ	0xFE5
 20152                           fsr1h	equ	0xFE2
 20153                           fsr1l	equ	0xFE1
 20154                           indf2	equ	0xFDF
 20155                           postinc2	equ	0xFDE
 20156                           fsr2h	equ	0xFDA
 20157                           fsr2l	equ	0xFD9
 20158                           status	equ	0xFD8
 20159                           
 20160 ;; *************** function _terminal_textAttributes *****************
 20161 ;; Defined at:
 20162 ;;		line 115 in file "ring_buffer_interface.c"
 20163 ;; Parameters:    Size  Location     Type
 20164 ;;  foreground_c    1    wreg     enum E18149
 20165 ;;  background_c    1  143[BANK2 ] enum E18149
 20166 ;;  input_attrib    1  144[BANK2 ] enum E18141
 20167 ;; Auto vars:     Size  Location     Type
 20168 ;;  foreground_c    1    0[BANK4 ] enum E18149
 20169 ;;  output_buff    15    1[BANK4 ] unsigned char [15]
 20170 ;; Return value:  Size  Location     Type
 20171 ;;                  1    wreg      void 
 20172 ;; Registers used:
 20173 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20174 ;; Tracked objects:
 20175 ;;		On entry : 0/0
 20176 ;;		On exit  : 0/0
 20177 ;;		Unchanged: 0/0
 20178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20179 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 20180 ;;      Locals:         0       0       0       0       0      16       0       0       0       0       0       0       
      +0       0       0
 20181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20182 ;;      Totals:         0       0       0       2       0      16       0       0       0       0       0       0       
      +0       0       0
 20183 ;;Total ram usage:       18 bytes
 20184 ;; Hardware stack levels used:    1
 20185 ;; Hardware stack levels required when called:   23
 20186 ;; This function calls:
 20187 ;;		_printf
 20188 ;;		_strcat
 20189 ;;		_strncpy
 20190 ;; This function is called by:
 20191 ;;		_terminal_textAttributesReset
 20192 ;;		_ringBufferLUT
 20193 ;; This function uses a non-reentrant model
 20194 ;;
 20195                           
 20196                           	psect	text6
 20197  015550                     __ptext6:
 20198                           	opt stack 0
 20199  015550                     _terminal_textAttributes:
 20200                           	opt stack 6
 20201                           
 20202                           ;incstack = 0
 20203                           ;terminal_textAttributes@foreground_color stored from wreg
 20204  015550  0104               	movlb	4	; () banked
 20205  015552  6F80               	movwf	terminal_textAttributes@foreground_color& (0+255),b
 20206                           
 20207                           ;ring_buffer_interface.c: 119: char output_buff[15];
 20208                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
 20209  015554  0E81               	movlw	low terminal_textAttributes@output_buff
 20210  015556  0101               	movlb	1	; () banked
 20211  015558  6F4F               	movwf	strncpy@to& (0+255),b
 20212  01555A  0E04               	movlw	high terminal_textAttributes@output_buff
 20213  01555C  6F50               	movwf	(strncpy@to+1)& (0+255),b
 20214  01555E  0EF6               	movlw	low STR_28
 20215  015560  6F51               	movwf	strncpy@from& (0+255),b
 20216  015562  0EFF               	movlw	high STR_28
 20217  015564  6F52               	movwf	(strncpy@from+1)& (0+255),b
 20218  015566  0E00               	movlw	0
 20219  015568  6F54               	movwf	(strncpy@size+1)& (0+255),b
 20220  01556A  0E0F               	movlw	15
 20221  01556C  6F53               	movwf	strncpy@size& (0+255),b
 20222  01556E  ECEE  F0D4         	call	_strncpy	;wreg free
 20223                           
 20224                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
 20225  015572  D054               	goto	l1501
 20226  015574                     
 20227                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
 20228  015574  0E81               	movlw	low terminal_textAttributes@output_buff
 20229  015576  0101               	movlb	1	; () banked
 20230  015578  6F4F               	movwf	strcat@to& (0+255),b
 20231  01557A  0E04               	movlw	high terminal_textAttributes@output_buff
 20232  01557C  6F50               	movwf	(strcat@to+1)& (0+255),b
 20233  01557E  0ECD               	movlw	low (STR_37+1)
 20234  015580  6F51               	movwf	strcat@from& (0+255),b
 20235  015582  0EFF               	movlw	high (STR_37+1)
 20236  015584  6F52               	movwf	(strcat@from+1)& (0+255),b
 20237  015586  EC2E  F0D8         	call	_strcat	;wreg free
 20238                           
 20239                           ;ring_buffer_interface.c: 127: break;
 20240  01558A  D05D               	goto	l1503
 20241  01558C                     
 20242                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
 20243  01558C  0E81               	movlw	low terminal_textAttributes@output_buff
 20244  01558E  0101               	movlb	1	; () banked
 20245  015590  6F4F               	movwf	strcat@to& (0+255),b
 20246  015592  0E04               	movlw	high terminal_textAttributes@output_buff
 20247  015594  6F50               	movwf	(strcat@to+1)& (0+255),b
 20248  015596  0ED0               	movlw	low (STR_38+1)
 20249  015598  6F51               	movwf	strcat@from& (0+255),b
 20250  01559A  0EFF               	movlw	high (STR_38+1)
 20251  01559C  6F52               	movwf	(strcat@from+1)& (0+255),b
 20252  01559E  EC2E  F0D8         	call	_strcat	;wreg free
 20253                           
 20254                           ;ring_buffer_interface.c: 130: break;
 20255  0155A2  D051               	goto	l1503
 20256  0155A4                     
 20257                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
 20258  0155A4  0E81               	movlw	low terminal_textAttributes@output_buff
 20259  0155A6  0101               	movlb	1	; () banked
 20260  0155A8  6F4F               	movwf	strcat@to& (0+255),b
 20261  0155AA  0E04               	movlw	high terminal_textAttributes@output_buff
 20262  0155AC  6F50               	movwf	(strcat@to+1)& (0+255),b
 20263  0155AE  0EE2               	movlw	low (STR_41+1)
 20264  0155B0  6F51               	movwf	strcat@from& (0+255),b
 20265  0155B2  0EFF               	movlw	high (STR_41+1)
 20266  0155B4  6F52               	movwf	(strcat@from+1)& (0+255),b
 20267  0155B6  EC2E  F0D8         	call	_strcat	;wreg free
 20268                           
 20269                           ;ring_buffer_interface.c: 133: break;
 20270  0155BA  D045               	goto	l1503
 20271  0155BC                     
 20272                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
 20273  0155BC  0E81               	movlw	low terminal_textAttributes@output_buff
 20274  0155BE  0101               	movlb	1	; () banked
 20275  0155C0  6F4F               	movwf	strcat@to& (0+255),b
 20276  0155C2  0E04               	movlw	high terminal_textAttributes@output_buff
 20277  0155C4  6F50               	movwf	(strcat@to+1)& (0+255),b
 20278  0155C6  0E80               	movlw	low (STR_3+8)
 20279  0155C8  6F51               	movwf	strcat@from& (0+255),b
 20280  0155CA  0EFF               	movlw	high (STR_3+8)
 20281  0155CC  6F52               	movwf	(strcat@from+1)& (0+255),b
 20282  0155CE  EC2E  F0D8         	call	_strcat	;wreg free
 20283                           
 20284                           ;ring_buffer_interface.c: 136: break;
 20285  0155D2  D039               	goto	l1503
 20286  0155D4                     
 20287                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
 20288  0155D4  0E81               	movlw	low terminal_textAttributes@output_buff
 20289  0155D6  0101               	movlb	1	; () banked
 20290  0155D8  6F4F               	movwf	strcat@to& (0+255),b
 20291  0155DA  0E04               	movlw	high terminal_textAttributes@output_buff
 20292  0155DC  6F50               	movwf	(strcat@to+1)& (0+255),b
 20293  0155DE  0EF1               	movlw	low (STR_44+1)
 20294  0155E0  6F51               	movwf	strcat@from& (0+255),b
 20295  0155E2  0EFF               	movlw	high (STR_44+1)
 20296  0155E4  6F52               	movwf	(strcat@from+1)& (0+255),b
 20297  0155E6  EC2E  F0D8         	call	_strcat	;wreg free
 20298                           
 20299                           ;ring_buffer_interface.c: 139: break;
 20300  0155EA  D02D               	goto	l1503
 20301  0155EC                     
 20302                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
 20303  0155EC  0E81               	movlw	low terminal_textAttributes@output_buff
 20304  0155EE  0101               	movlb	1	; () banked
 20305  0155F0  6F4F               	movwf	strcat@to& (0+255),b
 20306  0155F2  0E04               	movlw	high terminal_textAttributes@output_buff
 20307  0155F4  6F50               	movwf	(strcat@to+1)& (0+255),b
 20308  0155F6  0EF9               	movlw	low STR_34
 20309  0155F8  6F51               	movwf	strcat@from& (0+255),b
 20310  0155FA  0EFF               	movlw	high STR_34
 20311  0155FC  6F52               	movwf	(strcat@from+1)& (0+255),b
 20312  0155FE  EC2E  F0D8         	call	_strcat	;wreg free
 20313                           
 20314                           ;ring_buffer_interface.c: 142: break;
 20315  015602  D021               	goto	l1503
 20316  015604                     
 20317                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
 20318  015604  0E81               	movlw	low terminal_textAttributes@output_buff
 20319  015606  0101               	movlb	1	; () banked
 20320  015608  6F4F               	movwf	strcat@to& (0+255),b
 20321  01560A  0E04               	movlw	high terminal_textAttributes@output_buff
 20322  01560C  6F50               	movwf	(strcat@to+1)& (0+255),b
 20323  01560E  0ECD               	movlw	low (STR_37+1)
 20324  015610  6F51               	movwf	strcat@from& (0+255),b
 20325  015612  0EFF               	movlw	high (STR_37+1)
 20326  015614  6F52               	movwf	(strcat@from+1)& (0+255),b
 20327  015616  EC2E  F0D8         	call	_strcat	;wreg free
 20328                           
 20329                           ;ring_buffer_interface.c: 147: }
 20330                           
 20331                           ;ring_buffer_interface.c: 146: break;
 20332  01561A  D015               	goto	l1503
 20333  01561C                     l1501:
 20334  01561C  0102               	movlb	2	; () banked
 20335  01561E  5190               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
 20336                           
 20337                           ; Switch size 1, requested type "space"
 20338                           ; Number of cases is 6, Range of values is 0 to 5
 20339                           ; switch strategies available:
 20340                           ; Name         Instructions Cycles
 20341                           ; simple_byte           19    10 (average)
 20342                           ;	Chosen strategy is simple_byte
 20343  015620  0A00               	xorlw	0	; case 0
 20344  015622  B4D8               	btfsc	status,2,c
 20345  015624  D7A7               	goto	l1502
 20346  015626  0A01               	xorlw	1	; case 1
 20347  015628  B4D8               	btfsc	status,2,c
 20348  01562A  D7B0               	goto	l1504
 20349  01562C  0A03               	xorlw	3	; case 2
 20350  01562E  B4D8               	btfsc	status,2,c
 20351  015630  D7B9               	goto	l1505
 20352  015632  0A01               	xorlw	1	; case 3
 20353  015634  B4D8               	btfsc	status,2,c
 20354  015636  D7C2               	goto	l1506
 20355  015638  0A07               	xorlw	7	; case 4
 20356  01563A  B4D8               	btfsc	status,2,c
 20357  01563C  D7CB               	goto	l1507
 20358  01563E  0A01               	xorlw	1	; case 5
 20359  015640  B4D8               	btfsc	status,2,c
 20360  015642  D7D4               	goto	l1508
 20361  015644  D7DF               	goto	l1509
 20362  015646                     l1503:
 20363                           
 20364                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
 20365                           
 20366                           ; BSR set to: 2
 20367  015646  0E81               	movlw	low terminal_textAttributes@output_buff
 20368  015648  0101               	movlb	1	; () banked
 20369  01564A  6F4F               	movwf	strcat@to& (0+255),b
 20370  01564C  0E04               	movlw	high terminal_textAttributes@output_buff
 20371  01564E  6F50               	movwf	(strcat@to+1)& (0+255),b
 20372  015650  0EFB               	movlw	low STR_36
 20373  015652  6F51               	movwf	strcat@from& (0+255),b
 20374  015654  0EFF               	movlw	high STR_36
 20375  015656  6F52               	movwf	(strcat@from+1)& (0+255),b
 20376  015658  EC2E  F0D8         	call	_strcat	;wreg free
 20377                           
 20378                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
 20379  01565C  D06C               	goto	l1510
 20380  01565E                     
 20381                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
 20382  01565E  0E81               	movlw	low terminal_textAttributes@output_buff
 20383  015660  0101               	movlb	1	; () banked
 20384  015662  6F4F               	movwf	strcat@to& (0+255),b
 20385  015664  0E04               	movlw	high terminal_textAttributes@output_buff
 20386  015666  6F50               	movwf	(strcat@to+1)& (0+255),b
 20387  015668  0ECC               	movlw	low STR_37
 20388  01566A  6F51               	movwf	strcat@from& (0+255),b
 20389  01566C  0EFF               	movlw	high STR_37
 20390  01566E  6F52               	movwf	(strcat@from+1)& (0+255),b
 20391  015670  EC2E  F0D8         	call	_strcat	;wreg free
 20392                           
 20393                           ;ring_buffer_interface.c: 155: break;
 20394  015674  D07B               	goto	l1512
 20395  015676                     
 20396                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
 20397  015676  0E81               	movlw	low terminal_textAttributes@output_buff
 20398  015678  0101               	movlb	1	; () banked
 20399  01567A  6F4F               	movwf	strcat@to& (0+255),b
 20400  01567C  0E04               	movlw	high terminal_textAttributes@output_buff
 20401  01567E  6F50               	movwf	(strcat@to+1)& (0+255),b
 20402  015680  0ECF               	movlw	low STR_38
 20403  015682  6F51               	movwf	strcat@from& (0+255),b
 20404  015684  0EFF               	movlw	high STR_38
 20405  015686  6F52               	movwf	(strcat@from+1)& (0+255),b
 20406  015688  EC2E  F0D8         	call	_strcat	;wreg free
 20407                           
 20408                           ;ring_buffer_interface.c: 158: break;
 20409  01568C  D06F               	goto	l1512
 20410  01568E                     
 20411                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
 20412  01568E  0E81               	movlw	low terminal_textAttributes@output_buff
 20413  015690  0101               	movlb	1	; () banked
 20414  015692  6F4F               	movwf	strcat@to& (0+255),b
 20415  015694  0E04               	movlw	high terminal_textAttributes@output_buff
 20416  015696  6F50               	movwf	(strcat@to+1)& (0+255),b
 20417  015698  0ED5               	movlw	low STR_39
 20418  01569A  6F51               	movwf	strcat@from& (0+255),b
 20419  01569C  0EFF               	movlw	high STR_39
 20420  01569E  6F52               	movwf	(strcat@from+1)& (0+255),b
 20421  0156A0  EC2E  F0D8         	call	_strcat	;wreg free
 20422                           
 20423                           ;ring_buffer_interface.c: 161: break;
 20424  0156A4  D063               	goto	l1512
 20425  0156A6                     
 20426                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
 20427  0156A6  0E81               	movlw	low terminal_textAttributes@output_buff
 20428  0156A8  0101               	movlb	1	; () banked
 20429  0156AA  6F4F               	movwf	strcat@to& (0+255),b
 20430  0156AC  0E04               	movlw	high terminal_textAttributes@output_buff
 20431  0156AE  6F50               	movwf	(strcat@to+1)& (0+255),b
 20432  0156B0  0EDB               	movlw	low STR_40
 20433  0156B2  6F51               	movwf	strcat@from& (0+255),b
 20434  0156B4  0EFF               	movlw	high STR_40
 20435  0156B6  6F52               	movwf	(strcat@from+1)& (0+255),b
 20436  0156B8  EC2E  F0D8         	call	_strcat	;wreg free
 20437                           
 20438                           ;ring_buffer_interface.c: 164: break;
 20439  0156BC  D057               	goto	l1512
 20440  0156BE                     
 20441                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
 20442  0156BE  0E81               	movlw	low terminal_textAttributes@output_buff
 20443  0156C0  0101               	movlb	1	; () banked
 20444  0156C2  6F4F               	movwf	strcat@to& (0+255),b
 20445  0156C4  0E04               	movlw	high terminal_textAttributes@output_buff
 20446  0156C6  6F50               	movwf	(strcat@to+1)& (0+255),b
 20447  0156C8  0EE1               	movlw	low STR_41
 20448  0156CA  6F51               	movwf	strcat@from& (0+255),b
 20449  0156CC  0EFF               	movlw	high STR_41
 20450  0156CE  6F52               	movwf	(strcat@from+1)& (0+255),b
 20451  0156D0  EC2E  F0D8         	call	_strcat	;wreg free
 20452                           
 20453                           ;ring_buffer_interface.c: 167: break;
 20454  0156D4  D04B               	goto	l1512
 20455  0156D6                     
 20456                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 20457  0156D6  0E81               	movlw	low terminal_textAttributes@output_buff
 20458  0156D8  0101               	movlb	1	; () banked
 20459  0156DA  6F4F               	movwf	strcat@to& (0+255),b
 20460  0156DC  0E04               	movlw	high terminal_textAttributes@output_buff
 20461  0156DE  6F50               	movwf	(strcat@to+1)& (0+255),b
 20462  0156E0  0E7F               	movlw	low (STR_3+7)
 20463  0156E2  6F51               	movwf	strcat@from& (0+255),b
 20464  0156E4  0EFF               	movlw	high (STR_3+7)
 20465  0156E6  6F52               	movwf	(strcat@from+1)& (0+255),b
 20466  0156E8  EC2E  F0D8         	call	_strcat	;wreg free
 20467                           
 20468                           ;ring_buffer_interface.c: 170: break;
 20469  0156EC  D03F               	goto	l1512
 20470  0156EE                     
 20471                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 20472  0156EE  0E81               	movlw	low terminal_textAttributes@output_buff
 20473  0156F0  0101               	movlb	1	; () banked
 20474  0156F2  6F4F               	movwf	strcat@to& (0+255),b
 20475  0156F4  0E04               	movlw	high terminal_textAttributes@output_buff
 20476  0156F6  6F50               	movwf	(strcat@to+1)& (0+255),b
 20477  0156F8  0EEA               	movlw	low STR_43
 20478  0156FA  6F51               	movwf	strcat@from& (0+255),b
 20479  0156FC  0EFF               	movlw	high STR_43
 20480  0156FE  6F52               	movwf	(strcat@from+1)& (0+255),b
 20481  015700  EC2E  F0D8         	call	_strcat	;wreg free
 20482                           
 20483                           ;ring_buffer_interface.c: 173: break;
 20484  015704  D033               	goto	l1512
 20485  015706                     
 20486                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 20487  015706  0E81               	movlw	low terminal_textAttributes@output_buff
 20488  015708  0101               	movlb	1	; () banked
 20489  01570A  6F4F               	movwf	strcat@to& (0+255),b
 20490  01570C  0E04               	movlw	high terminal_textAttributes@output_buff
 20491  01570E  6F50               	movwf	(strcat@to+1)& (0+255),b
 20492  015710  0EF0               	movlw	low STR_44
 20493  015712  6F51               	movwf	strcat@from& (0+255),b
 20494  015714  0EFF               	movlw	high STR_44
 20495  015716  6F52               	movwf	(strcat@from+1)& (0+255),b
 20496  015718  EC2E  F0D8         	call	_strcat	;wreg free
 20497                           
 20498                           ;ring_buffer_interface.c: 176: break;
 20499  01571C  D027               	goto	l1512
 20500  01571E                     
 20501                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 20502  01571E  0E81               	movlw	low terminal_textAttributes@output_buff
 20503  015720  0101               	movlb	1	; () banked
 20504  015722  6F4F               	movwf	strcat@to& (0+255),b
 20505  015724  0E04               	movlw	high terminal_textAttributes@output_buff
 20506  015726  6F50               	movwf	(strcat@to+1)& (0+255),b
 20507  015728  0EF0               	movlw	low STR_44
 20508  01572A  6F51               	movwf	strcat@from& (0+255),b
 20509  01572C  0EFF               	movlw	high STR_44
 20510  01572E  6F52               	movwf	(strcat@from+1)& (0+255),b
 20511  015730  EC2E  F0D8         	call	_strcat	;wreg free
 20512                           
 20513                           ;ring_buffer_interface.c: 181: }
 20514                           
 20515                           ;ring_buffer_interface.c: 180: break;
 20516  015734  D01B               	goto	l1512
 20517  015736                     l1510:
 20518  015736  0104               	movlb	4	; () banked
 20519  015738  5180               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 20520                           
 20521                           ; Switch size 1, requested type "space"
 20522                           ; Number of cases is 8, Range of values is 0 to 7
 20523                           ; switch strategies available:
 20524                           ; Name         Instructions Cycles
 20525                           ; simple_byte           25    13 (average)
 20526                           ;	Chosen strategy is simple_byte
 20527  01573A  0A00               	xorlw	0	; case 0
 20528  01573C  B4D8               	btfsc	status,2,c
 20529  01573E  D78F               	goto	l1511
 20530  015740  0A01               	xorlw	1	; case 1
 20531  015742  B4D8               	btfsc	status,2,c
 20532  015744  D798               	goto	l1513
 20533  015746  0A03               	xorlw	3	; case 2
 20534  015748  B4D8               	btfsc	status,2,c
 20535  01574A  D7A1               	goto	l1514
 20536  01574C  0A01               	xorlw	1	; case 3
 20537  01574E  B4D8               	btfsc	status,2,c
 20538  015750  D7AA               	goto	l1515
 20539  015752  0A07               	xorlw	7	; case 4
 20540  015754  B4D8               	btfsc	status,2,c
 20541  015756  D7B3               	goto	l1516
 20542  015758  0A01               	xorlw	1	; case 5
 20543  01575A  B4D8               	btfsc	status,2,c
 20544  01575C  D7BC               	goto	l1517
 20545  01575E  0A03               	xorlw	3	; case 6
 20546  015760  B4D8               	btfsc	status,2,c
 20547  015762  D7C5               	goto	l1518
 20548  015764  0A01               	xorlw	1	; case 7
 20549  015766  B4D8               	btfsc	status,2,c
 20550  015768  D7CE               	goto	l1519
 20551  01576A  D7D9               	goto	l1520
 20552  01576C                     l1512:
 20553                           
 20554                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 20555                           
 20556                           ; BSR set to: 4
 20557  01576C  0E81               	movlw	low terminal_textAttributes@output_buff
 20558  01576E  0101               	movlb	1	; () banked
 20559  015770  6F4F               	movwf	strcat@to& (0+255),b
 20560  015772  0E04               	movlw	high terminal_textAttributes@output_buff
 20561  015774  6F50               	movwf	(strcat@to+1)& (0+255),b
 20562  015776  0EFB               	movlw	low STR_36
 20563  015778  6F51               	movwf	strcat@from& (0+255),b
 20564  01577A  0EFF               	movlw	high STR_36
 20565  01577C  6F52               	movwf	(strcat@from+1)& (0+255),b
 20566  01577E  EC2E  F0D8         	call	_strcat	;wreg free
 20567                           
 20568                           ;ring_buffer_interface.c: 185: switch (background_color) {
 20569  015782  D06C               	goto	l1521
 20570  015784                     
 20571                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 20572  015784  0E81               	movlw	low terminal_textAttributes@output_buff
 20573  015786  0101               	movlb	1	; () banked
 20574  015788  6F4F               	movwf	strcat@to& (0+255),b
 20575  01578A  0E04               	movlw	high terminal_textAttributes@output_buff
 20576  01578C  6F50               	movwf	(strcat@to+1)& (0+255),b
 20577  01578E  0EA6               	movlw	low (STR_189+9)
 20578  015790  6F51               	movwf	strcat@from& (0+255),b
 20579  015792  0EFE               	movlw	high (STR_189+9)
 20580  015794  6F52               	movwf	(strcat@from+1)& (0+255),b
 20581  015796  EC2E  F0D8         	call	_strcat	;wreg free
 20582                           
 20583                           ;ring_buffer_interface.c: 189: break;
 20584  01579A  D07B               	goto	l1523
 20585  01579C                     
 20586                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 20587  01579C  0E81               	movlw	low terminal_textAttributes@output_buff
 20588  01579E  0101               	movlb	1	; () banked
 20589  0157A0  6F4F               	movwf	strcat@to& (0+255),b
 20590  0157A2  0E04               	movlw	high terminal_textAttributes@output_buff
 20591  0157A4  6F50               	movwf	(strcat@to+1)& (0+255),b
 20592  0157A6  0ED2               	movlw	low STR_48
 20593  0157A8  6F51               	movwf	strcat@from& (0+255),b
 20594  0157AA  0EFF               	movlw	high STR_48
 20595  0157AC  6F52               	movwf	(strcat@from+1)& (0+255),b
 20596  0157AE  EC2E  F0D8         	call	_strcat	;wreg free
 20597                           
 20598                           ;ring_buffer_interface.c: 192: break;
 20599  0157B2  D06F               	goto	l1523
 20600  0157B4                     
 20601                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 20602  0157B4  0E81               	movlw	low terminal_textAttributes@output_buff
 20603  0157B6  0101               	movlb	1	; () banked
 20604  0157B8  6F4F               	movwf	strcat@to& (0+255),b
 20605  0157BA  0E04               	movlw	high terminal_textAttributes@output_buff
 20606  0157BC  6F50               	movwf	(strcat@to+1)& (0+255),b
 20607  0157BE  0ED8               	movlw	low STR_49
 20608  0157C0  6F51               	movwf	strcat@from& (0+255),b
 20609  0157C2  0EFF               	movlw	high STR_49
 20610  0157C4  6F52               	movwf	(strcat@from+1)& (0+255),b
 20611  0157C6  EC2E  F0D8         	call	_strcat	;wreg free
 20612                           
 20613                           ;ring_buffer_interface.c: 195: break;
 20614  0157CA  D063               	goto	l1523
 20615  0157CC                     
 20616                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 20617  0157CC  0E81               	movlw	low terminal_textAttributes@output_buff
 20618  0157CE  0101               	movlb	1	; () banked
 20619  0157D0  6F4F               	movwf	strcat@to& (0+255),b
 20620  0157D2  0E04               	movlw	high terminal_textAttributes@output_buff
 20621  0157D4  6F50               	movwf	(strcat@to+1)& (0+255),b
 20622  0157D6  0EDE               	movlw	low STR_50
 20623  0157D8  6F51               	movwf	strcat@from& (0+255),b
 20624  0157DA  0EFF               	movlw	high STR_50
 20625  0157DC  6F52               	movwf	(strcat@from+1)& (0+255),b
 20626  0157DE  EC2E  F0D8         	call	_strcat	;wreg free
 20627                           
 20628                           ;ring_buffer_interface.c: 198: break;
 20629  0157E2  D057               	goto	l1523
 20630  0157E4                     
 20631                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 20632  0157E4  0E81               	movlw	low terminal_textAttributes@output_buff
 20633  0157E6  0101               	movlb	1	; () banked
 20634  0157E8  6F4F               	movwf	strcat@to& (0+255),b
 20635  0157EA  0E04               	movlw	high terminal_textAttributes@output_buff
 20636  0157EC  6F50               	movwf	(strcat@to+1)& (0+255),b
 20637  0157EE  0EE4               	movlw	low STR_51
 20638  0157F0  6F51               	movwf	strcat@from& (0+255),b
 20639  0157F2  0EFF               	movlw	high STR_51
 20640  0157F4  6F52               	movwf	(strcat@from+1)& (0+255),b
 20641  0157F6  EC2E  F0D8         	call	_strcat	;wreg free
 20642                           
 20643                           ;ring_buffer_interface.c: 201: break;
 20644  0157FA  D04B               	goto	l1523
 20645  0157FC                     
 20646                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 20647  0157FC  0E81               	movlw	low terminal_textAttributes@output_buff
 20648  0157FE  0101               	movlb	1	; () banked
 20649  015800  6F4F               	movwf	strcat@to& (0+255),b
 20650  015802  0E04               	movlw	high terminal_textAttributes@output_buff
 20651  015804  6F50               	movwf	(strcat@to+1)& (0+255),b
 20652  015806  0EE7               	movlw	low STR_52
 20653  015808  6F51               	movwf	strcat@from& (0+255),b
 20654  01580A  0EFF               	movlw	high STR_52
 20655  01580C  6F52               	movwf	(strcat@from+1)& (0+255),b
 20656  01580E  EC2E  F0D8         	call	_strcat	;wreg free
 20657                           
 20658                           ;ring_buffer_interface.c: 204: break;
 20659  015812  D03F               	goto	l1523
 20660  015814                     
 20661                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 20662  015814  0E81               	movlw	low terminal_textAttributes@output_buff
 20663  015816  0101               	movlb	1	; () banked
 20664  015818  6F4F               	movwf	strcat@to& (0+255),b
 20665  01581A  0E04               	movlw	high terminal_textAttributes@output_buff
 20666  01581C  6F50               	movwf	(strcat@to+1)& (0+255),b
 20667  01581E  0EED               	movlw	low STR_53
 20668  015820  6F51               	movwf	strcat@from& (0+255),b
 20669  015822  0EFF               	movlw	high STR_53
 20670  015824  6F52               	movwf	(strcat@from+1)& (0+255),b
 20671  015826  EC2E  F0D8         	call	_strcat	;wreg free
 20672                           
 20673                           ;ring_buffer_interface.c: 207: break;
 20674  01582A  D033               	goto	l1523
 20675  01582C                     
 20676                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 20677  01582C  0E81               	movlw	low terminal_textAttributes@output_buff
 20678  01582E  0101               	movlb	1	; () banked
 20679  015830  6F4F               	movwf	strcat@to& (0+255),b
 20680  015832  0E04               	movlw	high terminal_textAttributes@output_buff
 20681  015834  6F50               	movwf	(strcat@to+1)& (0+255),b
 20682  015836  0EF3               	movlw	low STR_54
 20683  015838  6F51               	movwf	strcat@from& (0+255),b
 20684  01583A  0EFF               	movlw	high STR_54
 20685  01583C  6F52               	movwf	(strcat@from+1)& (0+255),b
 20686  01583E  EC2E  F0D8         	call	_strcat	;wreg free
 20687                           
 20688                           ;ring_buffer_interface.c: 210: break;
 20689  015842  D027               	goto	l1523
 20690  015844                     
 20691                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 20692  015844  0E81               	movlw	low terminal_textAttributes@output_buff
 20693  015846  0101               	movlb	1	; () banked
 20694  015848  6F4F               	movwf	strcat@to& (0+255),b
 20695  01584A  0E04               	movlw	high terminal_textAttributes@output_buff
 20696  01584C  6F50               	movwf	(strcat@to+1)& (0+255),b
 20697  01584E  0EF3               	movlw	low STR_54
 20698  015850  6F51               	movwf	strcat@from& (0+255),b
 20699  015852  0EFF               	movlw	high STR_54
 20700  015854  6F52               	movwf	(strcat@from+1)& (0+255),b
 20701  015856  EC2E  F0D8         	call	_strcat	;wreg free
 20702                           
 20703                           ;ring_buffer_interface.c: 215: }
 20704                           
 20705                           ;ring_buffer_interface.c: 214: break;
 20706  01585A  D01B               	goto	l1523
 20707  01585C                     l1521:
 20708  01585C  0102               	movlb	2	; () banked
 20709  01585E  518F               	movf	terminal_textAttributes@background_color& (0+255),w,b
 20710                           
 20711                           ; Switch size 1, requested type "space"
 20712                           ; Number of cases is 8, Range of values is 0 to 7
 20713                           ; switch strategies available:
 20714                           ; Name         Instructions Cycles
 20715                           ; simple_byte           25    13 (average)
 20716                           ;	Chosen strategy is simple_byte
 20717  015860  0A00               	xorlw	0	; case 0
 20718  015862  B4D8               	btfsc	status,2,c
 20719  015864  D78F               	goto	l1522
 20720  015866  0A01               	xorlw	1	; case 1
 20721  015868  B4D8               	btfsc	status,2,c
 20722  01586A  D798               	goto	l1524
 20723  01586C  0A03               	xorlw	3	; case 2
 20724  01586E  B4D8               	btfsc	status,2,c
 20725  015870  D7A1               	goto	l1525
 20726  015872  0A01               	xorlw	1	; case 3
 20727  015874  B4D8               	btfsc	status,2,c
 20728  015876  D7AA               	goto	l1526
 20729  015878  0A07               	xorlw	7	; case 4
 20730  01587A  B4D8               	btfsc	status,2,c
 20731  01587C  D7B3               	goto	l1527
 20732  01587E  0A01               	xorlw	1	; case 5
 20733  015880  B4D8               	btfsc	status,2,c
 20734  015882  D7BC               	goto	l1528
 20735  015884  0A03               	xorlw	3	; case 6
 20736  015886  B4D8               	btfsc	status,2,c
 20737  015888  D7C5               	goto	l1529
 20738  01588A  0A01               	xorlw	1	; case 7
 20739  01588C  B4D8               	btfsc	status,2,c
 20740  01588E  D7CE               	goto	l1530
 20741  015890  D7D9               	goto	l1531
 20742  015892                     l1523:
 20743                           
 20744                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 20745                           
 20746                           ; BSR set to: 2
 20747  015892  0E81               	movlw	low terminal_textAttributes@output_buff
 20748  015894  0101               	movlb	1	; () banked
 20749  015896  6F4F               	movwf	strcat@to& (0+255),b
 20750  015898  0E04               	movlw	high terminal_textAttributes@output_buff
 20751  01589A  6F50               	movwf	(strcat@to+1)& (0+255),b
 20752  01589C  0EFD               	movlw	low STR_56
 20753  01589E  6F51               	movwf	strcat@from& (0+255),b
 20754  0158A0  0EFF               	movlw	high STR_56
 20755  0158A2  6F52               	movwf	(strcat@from+1)& (0+255),b
 20756  0158A4  EC2E  F0D8         	call	_strcat	;wreg free
 20757                           
 20758                           ;ring_buffer_interface.c: 219: printf(output_buff);
 20759  0158A8  0E81               	movlw	low terminal_textAttributes@output_buff
 20760  0158AA  0102               	movlb	2	; () banked
 20761  0158AC  6F85               	movwf	printf@f& (0+255),b
 20762  0158AE  0E04               	movlw	high terminal_textAttributes@output_buff
 20763  0158B0  6F86               	movwf	(printf@f+1)& (0+255),b
 20764  0158B2  ECA0  F0DA         	call	_printf	;wreg free
 20765  0158B6  0012               	return		;funcret
 20766  0158B8                     __end_of_terminal_textAttributes:
 20767                           	opt stack 0
 20768                           tblptru	equ	0xFF8
 20769                           tblptrh	equ	0xFF7
 20770                           tblptrl	equ	0xFF6
 20771                           tablat	equ	0xFF5
 20772                           intcon	equ	0xFF2
 20773                           postinc0	equ	0xFEE
 20774                           wreg	equ	0xFE8
 20775                           indf1	equ	0xFE7
 20776                           postdec1	equ	0xFE5
 20777                           fsr1h	equ	0xFE2
 20778                           fsr1l	equ	0xFE1
 20779                           indf2	equ	0xFDF
 20780                           postinc2	equ	0xFDE
 20781                           fsr2h	equ	0xFDA
 20782                           fsr2l	equ	0xFD9
 20783                           status	equ	0xFD8
 20784                           
 20785 ;; *************** function _strncpy *****************
 20786 ;; Defined at:
 20787 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 20788 ;; Parameters:    Size  Location     Type
 20789 ;;  to              2   79[BANK1 ] PTR unsigned char 
 20790 ;;		 -> terminal_textAttributes@output_buff(15), 
 20791 ;;  from            2   81[BANK1 ] PTR const unsigned char 
 20792 ;;		 -> STR_28(3), 
 20793 ;;  size            2   83[BANK1 ] unsigned int 
 20794 ;; Auto vars:     Size  Location     Type
 20795 ;;  cp              2   85[BANK1 ] PTR unsigned char 
 20796 ;;		 -> terminal_textAttributes@output_buff(15), 
 20797 ;; Return value:  Size  Location     Type
 20798 ;;                  2   79[BANK1 ] PTR unsigned char 
 20799 ;; Registers used:
 20800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20801 ;; Tracked objects:
 20802 ;;		On entry : 0/0
 20803 ;;		On exit  : 0/0
 20804 ;;		Unchanged: 0/0
 20805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20806 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20807 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20809 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20810 ;;Total ram usage:        8 bytes
 20811 ;; Hardware stack levels used:    1
 20812 ;; Hardware stack levels required when called:   19
 20813 ;; This function calls:
 20814 ;;		Nothing
 20815 ;; This function is called by:
 20816 ;;		_terminal_textAttributes
 20817 ;; This function uses a non-reentrant model
 20818 ;;
 20819                           
 20820                           	psect	text7
 20821  01A9DC                     __ptext7:
 20822                           	opt stack 0
 20823  01A9DC                     _strncpy:
 20824                           	opt stack 9
 20825                           
 20826                           ;incstack = 0
 20827  01A9DC  C14F  F155         	movff	strncpy@to,strncpy@cp
 20828  01A9E0  C150  F156         	movff	strncpy@to+1,strncpy@cp+1
 20829  01A9E4  D018               	goto	l3048
 20830  01A9E6  0101               	movlb	1	; () banked
 20831  01A9E8  0753               	decf	strncpy@size& (0+255),f,b
 20832  01A9EA  A0D8               	btfss	status,0,c
 20833  01A9EC  0754               	decf	(strncpy@size+1)& (0+255),f,b
 20834                           
 20835                           ; BSR set to: 1
 20836  01A9EE  C151  FFF6         	movff	strncpy@from,tblptrl
 20837  01A9F2  C152  FFF7         	movff	strncpy@from+1,tblptrh
 20838  01A9F6  4B51               	infsnz	strncpy@from& (0+255),f,b
 20839  01A9F8  2B52               	incf	(strncpy@from+1)& (0+255),f,b
 20840  01A9FA                     	if	0	;tblptru may be non-zero
 20841  01A9FA                     	endif
 20842  01A9FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20843  01A9FA  0E00               	movlw	low (__mediumconst shr (0+16))
 20844  01A9FC  6EF8               	movwf	tblptru,c
 20845  01A9FE                     	endif
 20846  01A9FE  C155  FFD9         	movff	strncpy@cp,fsr2l
 20847  01AA02  C156  FFDA         	movff	strncpy@cp+1,fsr2h
 20848  01AA06  4B55               	infsnz	strncpy@cp& (0+255),f,b
 20849  01AA08  2B56               	incf	(strncpy@cp+1)& (0+255),f,b
 20850  01AA0A  0008               	tblrd		*
 20851  01AA0C  CFF5 FFDF          	movff	tablat,indf2
 20852  01AA10  50DF               	movf	indf2,w,c
 20853  01AA12  B4D8               	btfsc	status,2,c
 20854  01AA14  D00E               	goto	l3050
 20855  01AA16                     l3048:
 20856                           
 20857                           ; BSR set to: 1
 20858                           
 20859                           ; BSR set to: 1
 20860  01AA16  0101               	movlb	1	; () banked
 20861  01AA18  5153               	movf	strncpy@size& (0+255),w,b
 20862  01AA1A  1154               	iorwf	(strncpy@size+1)& (0+255),w,b
 20863  01AA1C  B4D8               	btfsc	status,2,c
 20864  01AA1E  D009               	goto	l3050
 20865  01AA20  D7E2               	goto	l3047
 20866  01AA22                     l16915:
 20867                           
 20868                           ; BSR set to: 1
 20869  01AA22  C155  FFD9         	movff	strncpy@cp,fsr2l
 20870  01AA26  C156  FFDA         	movff	strncpy@cp+1,fsr2h
 20871  01AA2A  0E00               	movlw	0
 20872  01AA2C  6EDF               	movwf	indf2,c
 20873                           
 20874                           ; BSR set to: 1
 20875  01AA2E  4B55               	infsnz	strncpy@cp& (0+255),f,b
 20876  01AA30  2B56               	incf	(strncpy@cp+1)& (0+255),f,b
 20877  01AA32                     l3050:
 20878                           
 20879                           ; BSR set to: 1
 20880                           
 20881                           ; BSR set to: 1
 20882  01AA32  0753               	decf	strncpy@size& (0+255),f,b
 20883  01AA34  A0D8               	btfss	status,0,c
 20884  01AA36  0754               	decf	(strncpy@size+1)& (0+255),f,b
 20885  01AA38  2953               	incf	strncpy@size& (0+255),w,b
 20886  01AA3A  E1F3               	bnz	l16915
 20887  01AA3C  2954               	incf	(strncpy@size+1)& (0+255),w,b
 20888  01AA3E  B4D8               	btfsc	status,2,c
 20889  01AA40  0012               	return	
 20890  01AA42  D7EF               	goto	l3051
 20891  01AA44                     __end_of_strncpy:
 20892                           	opt stack 0
 20893                           tblptru	equ	0xFF8
 20894                           tblptrh	equ	0xFF7
 20895                           tblptrl	equ	0xFF6
 20896                           tablat	equ	0xFF5
 20897                           intcon	equ	0xFF2
 20898                           postinc0	equ	0xFEE
 20899                           wreg	equ	0xFE8
 20900                           indf1	equ	0xFE7
 20901                           postdec1	equ	0xFE5
 20902                           fsr1h	equ	0xFE2
 20903                           fsr1l	equ	0xFE1
 20904                           indf2	equ	0xFDF
 20905                           postinc2	equ	0xFDE
 20906                           fsr2h	equ	0xFDA
 20907                           fsr2l	equ	0xFD9
 20908                           status	equ	0xFD8
 20909                           
 20910 ;; *************** function _strcat *****************
 20911 ;; Defined at:
 20912 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 20913 ;; Parameters:    Size  Location     Type
 20914 ;;  to              2   79[BANK1 ] PTR unsigned char 
 20915 ;;		 -> terminal_textAttributes@output_buff(15), 
 20916 ;;  from            2   81[BANK1 ] PTR const unsigned char 
 20917 ;;		 -> STR_56(2), STR_55(3), STR_54(3), STR_53(3), 
 20918 ;;		 -> STR_52(3), STR_51(3), STR_50(3), STR_49(3), 
 20919 ;;		 -> STR_48(3), STR_47(3), STR_46(2), STR_45(3), 
 20920 ;;		 -> STR_44(3), STR_43(3), STR_42(3), STR_41(3), 
 20921 ;;		 -> STR_40(3), STR_39(3), STR_38(3), STR_37(3), 
 20922 ;;		 -> STR_36(2), STR_35(2), STR_34(2), STR_33(2), 
 20923 ;;		 -> STR_32(2), STR_31(2), STR_30(2), STR_29(2), 
 20924 ;; Auto vars:     Size  Location     Type
 20925 ;;  cp              2   83[BANK1 ] PTR unsigned char 
 20926 ;;		 -> terminal_textAttributes@output_buff(15), 
 20927 ;; Return value:  Size  Location     Type
 20928 ;;                  2   79[BANK1 ] PTR unsigned char 
 20929 ;; Registers used:
 20930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20931 ;; Tracked objects:
 20932 ;;		On entry : 0/0
 20933 ;;		On exit  : 0/0
 20934 ;;		Unchanged: 0/0
 20935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20936 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20937 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20939 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20940 ;;Total ram usage:        6 bytes
 20941 ;; Hardware stack levels used:    1
 20942 ;; Hardware stack levels required when called:   19
 20943 ;; This function calls:
 20944 ;;		Nothing
 20945 ;; This function is called by:
 20946 ;;		_terminal_textAttributes
 20947 ;; This function uses a non-reentrant model
 20948 ;;
 20949                           
 20950                           	psect	text8
 20951  01B05C                     __ptext8:
 20952                           	opt stack 0
 20953  01B05C                     _strcat:
 20954                           	opt stack 9
 20955                           
 20956                           ; BSR set to: 1
 20957                           ;incstack = 0
 20958  01B05C  C14F  F153         	movff	strcat@to,strcat@cp
 20959  01B060  C150  F154         	movff	strcat@to+1,strcat@cp+1
 20960  01B064  D003               	goto	l3017
 20961  01B066  0101               	movlb	1	; () banked
 20962  01B068  4B53               	infsnz	strcat@cp& (0+255),f,b
 20963  01B06A  2B54               	incf	(strcat@cp+1)& (0+255),f,b
 20964  01B06C                     l3017:
 20965                           
 20966                           ; BSR set to: 1
 20967  01B06C  C153  FFD9         	movff	strcat@cp,fsr2l
 20968  01B070  C154  FFDA         	movff	strcat@cp+1,fsr2h
 20969  01B074  50DF               	movf	indf2,w,c
 20970  01B076  B4D8               	btfsc	status,2,c
 20971  01B078  D006               	goto	l3020
 20972  01B07A  D7F5               	goto	l3018
 20973  01B07C  0101               	movlb	1	; () banked
 20974  01B07E  4B53               	infsnz	strcat@cp& (0+255),f,b
 20975  01B080  2B54               	incf	(strcat@cp+1)& (0+255),f,b
 20976  01B082  4B51               	infsnz	strcat@from& (0+255),f,b
 20977  01B084  2B52               	incf	(strcat@from+1)& (0+255),f,b
 20978  01B086                     l3020:
 20979                           
 20980                           ; BSR set to: 1
 20981  01B086  C151  FFF6         	movff	strcat@from,tblptrl
 20982  01B08A  C152  FFF7         	movff	strcat@from+1,tblptrh
 20983  01B08E                     	if	0	;tblptru may be non-zero
 20984  01B08E                     	endif
 20985  01B08E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20986  01B08E  0E00               	movlw	low (__mediumconst shr (0+16))
 20987  01B090  6EF8               	movwf	tblptru,c
 20988  01B092                     	endif
 20989  01B092  C153  FFD9         	movff	strcat@cp,fsr2l
 20990  01B096  C154  FFDA         	movff	strcat@cp+1,fsr2h
 20991  01B09A  0008               	tblrd		*
 20992  01B09C  CFF5 FFDF          	movff	tablat,indf2
 20993  01B0A0  50DF               	movf	indf2,w,c
 20994  01B0A2  B4D8               	btfsc	status,2,c
 20995  01B0A4  0012               	return	
 20996  01B0A6  D7EA               	goto	l3021
 20997  01B0A8                     __end_of_strcat:
 20998                           	opt stack 0
 20999                           tblptru	equ	0xFF8
 21000                           tblptrh	equ	0xFF7
 21001                           tblptrl	equ	0xFF6
 21002                           tablat	equ	0xFF5
 21003                           intcon	equ	0xFF2
 21004                           postinc0	equ	0xFEE
 21005                           wreg	equ	0xFE8
 21006                           indf1	equ	0xFE7
 21007                           postdec1	equ	0xFE5
 21008                           fsr1h	equ	0xFE2
 21009                           fsr1l	equ	0xFE1
 21010                           indf2	equ	0xFDF
 21011                           postinc2	equ	0xFDE
 21012                           fsr2h	equ	0xFDA
 21013                           fsr2l	equ	0xFD9
 21014                           status	equ	0xFD8
 21015                           
 21016 ;; *************** function _terminal_printNewline *****************
 21017 ;; Defined at:
 21018 ;;		line 230 in file "ring_buffer_interface.c"
 21019 ;; Parameters:    Size  Location     Type
 21020 ;;		None
 21021 ;; Auto vars:     Size  Location     Type
 21022 ;;		None
 21023 ;; Return value:  Size  Location     Type
 21024 ;;                  1    wreg      void 
 21025 ;; Registers used:
 21026 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21027 ;; Tracked objects:
 21028 ;;		On entry : 0/0
 21029 ;;		On exit  : 0/0
 21030 ;;		Unchanged: 0/0
 21031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21036 ;;Total ram usage:        0 bytes
 21037 ;; Hardware stack levels used:    1
 21038 ;; Hardware stack levels required when called:   23
 21039 ;; This function calls:
 21040 ;;		_printf
 21041 ;; This function is called by:
 21042 ;;		_ringBufferLUT
 21043 ;; This function uses a non-reentrant model
 21044 ;;
 21045                           
 21046                           	psect	text9
 21047  01BEE6                     __ptext9:
 21048                           	opt stack 0
 21049  01BEE6                     _terminal_printNewline:
 21050                           	opt stack 5
 21051                           
 21052                           ;ring_buffer_interface.c: 232: printf("\n\r");
 21053                           
 21054                           ;incstack = 0
 21055  01BEE6  0E80               	movlw	low (STR_169+717)
 21056  01BEE8  0102               	movlb	2	; () banked
 21057  01BEEA  6F85               	movwf	printf@f& (0+255),b
 21058  01BEEC  0EE7               	movlw	high (STR_169+717)
 21059  01BEEE  6F86               	movwf	(printf@f+1)& (0+255),b
 21060  01BEF0  ECA0  F0DA         	call	_printf	;wreg free
 21061  01BEF4  0012               	return		;funcret
 21062  01BEF6                     __end_of_terminal_printNewline:
 21063                           	opt stack 0
 21064                           tblptru	equ	0xFF8
 21065                           tblptrh	equ	0xFF7
 21066                           tblptrl	equ	0xFF6
 21067                           tablat	equ	0xFF5
 21068                           intcon	equ	0xFF2
 21069                           postinc0	equ	0xFEE
 21070                           wreg	equ	0xFE8
 21071                           indf1	equ	0xFE7
 21072                           postdec1	equ	0xFE5
 21073                           fsr1h	equ	0xFE2
 21074                           fsr1l	equ	0xFE1
 21075                           indf2	equ	0xFDF
 21076                           postinc2	equ	0xFDE
 21077                           fsr2h	equ	0xFDA
 21078                           fsr2l	equ	0xFD9
 21079                           status	equ	0xFD8
 21080                           
 21081 ;; *************** function _strstr *****************
 21082 ;; Defined at:
 21083 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 21084 ;; Parameters:    Size  Location     Type
 21085 ;;  s1              2    0[BANK2 ] PTR const unsigned char 
 21086 ;;		 -> line(64), NULL(0), 
 21087 ;;  s2              2    2[BANK2 ] PTR const unsigned char 
 21088 ;;		 -> STR_141(25), 
 21089 ;; Auto vars:     Size  Location     Type
 21090 ;;		None
 21091 ;; Return value:  Size  Location     Type
 21092 ;;                  2    0[BANK2 ] PTR unsigned char 
 21093 ;; Registers used:
 21094 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21095 ;; Tracked objects:
 21096 ;;		On entry : 0/0
 21097 ;;		On exit  : 0/0
 21098 ;;		Unchanged: 0/0
 21099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21100 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
 21101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21103 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
 21104 ;;Total ram usage:        4 bytes
 21105 ;; Hardware stack levels used:    1
 21106 ;; Hardware stack levels required when called:   20
 21107 ;; This function calls:
 21108 ;;		_strchr
 21109 ;;		_strlen
 21110 ;;		_strncmp
 21111 ;; This function is called by:
 21112 ;;		_ringBufferLUT
 21113 ;; This function uses a non-reentrant model
 21114 ;;
 21115                           
 21116                           	psect	text10
 21117  01A1A4                     __ptext10:
 21118                           	opt stack 0
 21119  01A1A4                     _strstr:
 21120                           	opt stack 8
 21121                           
 21122                           ;incstack = 0
 21123  01A1A4  D038               	goto	l3062
 21124  01A1A6  C200  F155         	movff	strstr@s1,strncmp@s1
 21125  01A1AA  C201  F156         	movff	strstr@s1+1,strncmp@s1+1
 21126  01A1AE  C202  F157         	movff	strstr@s2,strncmp@s2
 21127  01A1B2  C203  F158         	movff	strstr@s2+1,strncmp@s2+1
 21128  01A1B6  C202  F14F         	movff	strstr@s2,strlen@s
 21129  01A1BA  C203  F150         	movff	strstr@s2+1,strlen@s+1
 21130  01A1BE  EC1C  F0D6         	call	_strlen	;wreg free
 21131  01A1C2  C14F  F159         	movff	?_strlen,strncmp@len
 21132  01A1C6  C150  F15A         	movff	?_strlen+1,strncmp@len+1
 21133  01A1CA  EC1C  F0D1         	call	_strncmp	;wreg free
 21134  01A1CE  0101               	movlb	1	; () banked
 21135  01A1D0  5155               	movf	?_strncmp& (0+255),w,b
 21136  01A1D2  1156               	iorwf	(?_strncmp+1)& (0+255),w,b
 21137  01A1D4  A4D8               	btfss	status,2,c
 21138  01A1D6  D005               	goto	l3064
 21139                           
 21140                           ; BSR set to: 1
 21141  01A1D8  C200  F200         	movff	strstr@s1,?_strstr
 21142  01A1DC  C201  F201         	movff	strstr@s1+1,?_strstr+1
 21143                           
 21144                           ; BSR set to: 1
 21145  01A1E0  0012               	return	
 21146  01A1E2                     l3064:
 21147                           
 21148                           ; BSR set to: 1
 21149                           
 21150                           ; BSR set to: 1
 21151  01A1E2  0E01               	movlw	1
 21152  01A1E4  0102               	movlb	2	; () banked
 21153  01A1E6  2500               	addwf	strstr@s1& (0+255),w,b
 21154  01A1E8  0101               	movlb	1	; () banked
 21155  01A1EA  6F4F               	movwf	strchr@ptr& (0+255),b
 21156  01A1EC  0E00               	movlw	0
 21157  01A1EE  0102               	movlb	2	; () banked
 21158  01A1F0  2101               	addwfc	(strstr@s1+1)& (0+255),w,b
 21159  01A1F2  0101               	movlb	1	; () banked
 21160  01A1F4  6F50               	movwf	(strchr@ptr+1)& (0+255),b
 21161  01A1F6  C202  FFF6         	movff	strstr@s2,tblptrl
 21162  01A1FA  C203  FFF7         	movff	strstr@s2+1,tblptrh
 21163  01A1FE                     	if	0	;tblptru may be non-zero
 21164  01A1FE                     	endif
 21165  01A1FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21166  01A1FE  0E00               	movlw	low (__mediumconst shr (0+16))
 21167  01A200  6EF8               	movwf	tblptru,c
 21168  01A202                     	endif
 21169  01A202  0008               	tblrd		*
 21170  01A204  50F5               	movf	tablat,w,c
 21171  01A206  6F51               	movwf	strchr@chr& (0+255),b
 21172  01A208  6B52               	clrf	(strchr@chr+1)& (0+255),b
 21173  01A20A  ECB0  F0DB         	call	_strchr	;wreg free
 21174  01A20E  C14F  F200         	movff	?_strchr,strstr@s1
 21175  01A212  C150  F201         	movff	?_strchr+1,strstr@s1+1
 21176  01A216                     l3062:
 21177  01A216  0102               	movlb	2	; () banked
 21178  01A218  5100               	movf	strstr@s1& (0+255),w,b
 21179  01A21A  1101               	iorwf	(strstr@s1+1)& (0+255),w,b
 21180  01A21C  B4D8               	btfsc	status,2,c
 21181  01A21E  D007               	goto	u22860
 21182                           
 21183                           ; BSR set to: 2
 21184  01A220  C200  FFD9         	movff	strstr@s1,fsr2l
 21185  01A224  C201  FFDA         	movff	strstr@s1+1,fsr2h
 21186  01A228  50DF               	movf	indf2,w,c
 21187  01A22A  A4D8               	btfss	status,2,c
 21188  01A22C  D7BC               	goto	l3063
 21189  01A22E                     u22860:
 21190                           
 21191                           ; BSR set to: 2
 21192                           
 21193                           ; BSR set to: 2
 21194                           
 21195                           ; BSR set to: 2
 21196  01A22E  0E00               	movlw	0
 21197  01A230  6F00               	movwf	?_strstr& (0+255),b
 21198  01A232  0E00               	movlw	0
 21199  01A234  6F01               	movwf	(?_strstr+1)& (0+255),b
 21200  01A236  0012               	return	
 21201  01A238                     __end_of_strstr:
 21202                           	opt stack 0
 21203                           tblptru	equ	0xFF8
 21204                           tblptrh	equ	0xFF7
 21205                           tblptrl	equ	0xFF6
 21206                           tablat	equ	0xFF5
 21207                           intcon	equ	0xFF2
 21208                           postinc0	equ	0xFEE
 21209                           wreg	equ	0xFE8
 21210                           indf1	equ	0xFE7
 21211                           postdec1	equ	0xFE5
 21212                           fsr1h	equ	0xFE2
 21213                           fsr1l	equ	0xFE1
 21214                           indf2	equ	0xFDF
 21215                           postinc2	equ	0xFDE
 21216                           fsr2h	equ	0xFDA
 21217                           fsr2l	equ	0xFD9
 21218                           status	equ	0xFD8
 21219                           
 21220 ;; *************** function _strncmp *****************
 21221 ;; Defined at:
 21222 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 21223 ;; Parameters:    Size  Location     Type
 21224 ;;  s1              2   85[BANK1 ] PTR const unsigned char 
 21225 ;;		 -> line(64), NULL(0), 
 21226 ;;  s2              2   87[BANK1 ] PTR const unsigned char 
 21227 ;;		 -> STR_141(25), 
 21228 ;;  len             2   89[BANK1 ] unsigned int 
 21229 ;; Auto vars:     Size  Location     Type
 21230 ;;		None
 21231 ;; Return value:  Size  Location     Type
 21232 ;;                  2   85[BANK1 ] int 
 21233 ;; Registers used:
 21234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21235 ;; Tracked objects:
 21236 ;;		On entry : 0/0
 21237 ;;		On exit  : 0/0
 21238 ;;		Unchanged: 0/0
 21239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21240 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21242 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21243 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21244 ;;Total ram usage:        9 bytes
 21245 ;; Hardware stack levels used:    1
 21246 ;; Hardware stack levels required when called:   19
 21247 ;; This function calls:
 21248 ;;		Nothing
 21249 ;; This function is called by:
 21250 ;;		_strstr
 21251 ;; This function uses a non-reentrant model
 21252 ;;
 21253                           
 21254                           	psect	text11
 21255  01A238                     __ptext11:
 21256                           	opt stack 0
 21257  01A238                     _strncmp:
 21258                           	opt stack 8
 21259                           
 21260                           ;incstack = 0
 21261  01A238  D039               	goto	l3121
 21262  01A23A                     l17403:
 21263  01A23A  C155  FFD9         	movff	strncmp@s1,fsr2l
 21264  01A23E  C156  FFDA         	movff	strncmp@s1+1,fsr2h
 21265  01A242  50DF               	movf	indf2,w,c
 21266  01A244  B4D8               	btfsc	status,2,c
 21267  01A246  D012               	goto	u22270
 21268  01A248  C155  FFD9         	movff	strncmp@s1,fsr2l
 21269  01A24C  C156  FFDA         	movff	strncmp@s1+1,fsr2h
 21270  01A250  50DF               	movf	indf2,w,c
 21271  01A252  0101               	movlb	1	; () banked
 21272  01A254  6F5B               	movwf	??_strncmp& (0+255),b
 21273  01A256  C157  FFF6         	movff	strncmp@s2,tblptrl
 21274  01A25A  C158  FFF7         	movff	strncmp@s2+1,tblptrh
 21275  01A25E                     	if	0	;tblptru may be non-zero
 21276  01A25E                     	endif
 21277  01A25E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21278  01A25E  0E00               	movlw	low (__mediumconst shr (0+16))
 21279  01A260  6EF8               	movwf	tblptru,c
 21280  01A262                     	endif
 21281  01A262  0008               	tblrd		*
 21282  01A264  50F5               	movf	tablat,w,c
 21283  01A266  195B               	xorwf	??_strncmp& (0+255),w,b
 21284  01A268  B4D8               	btfsc	status,2,c
 21285  01A26A  D01C               	goto	l3123
 21286  01A26C                     u22270:
 21287                           
 21288                           ; BSR set to: 1
 21289  01A26C  C157  FFF6         	movff	strncmp@s2,tblptrl
 21290  01A270  C158  FFF7         	movff	strncmp@s2+1,tblptrh
 21291  01A274                     	if	0	;tblptru may be non-zero
 21292  01A274                     	endif
 21293  01A274                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21294  01A274  0E00               	movlw	low (__mediumconst shr (0+16))
 21295  01A276  6EF8               	movwf	tblptru,c
 21296  01A278                     	endif
 21297  01A278  0008               	tblrd		*
 21298  01A27A  50F5               	movf	tablat,w,c
 21299  01A27C  0101               	movlb	1	; () banked
 21300  01A27E  6F5B               	movwf	??_strncmp& (0+255),b
 21301  01A280  6B5C               	clrf	(??_strncmp+1)& (0+255),b
 21302  01A282  1F5B               	comf	??_strncmp& (0+255),f,b
 21303  01A284  1F5C               	comf	(??_strncmp+1)& (0+255),f,b
 21304  01A286  4B5B               	infsnz	??_strncmp& (0+255),f,b
 21305  01A288  2B5C               	incf	(??_strncmp+1)& (0+255),f,b
 21306  01A28A  C155  FFD9         	movff	strncmp@s1,fsr2l
 21307  01A28E  C156  FFDA         	movff	strncmp@s1+1,fsr2h
 21308  01A292  50DF               	movf	indf2,w,c
 21309  01A294  6F5D               	movwf	(??_strncmp+2)& (0+255),b
 21310  01A296  515D               	movf	(??_strncmp+2)& (0+255),w,b
 21311  01A298  255B               	addwf	??_strncmp& (0+255),w,b
 21312  01A29A  6F55               	movwf	?_strncmp& (0+255),b
 21313  01A29C  0E00               	movlw	0
 21314  01A29E  215C               	addwfc	(??_strncmp+1)& (0+255),w,b
 21315  01A2A0  6F56               	movwf	(?_strncmp+1)& (0+255),b
 21316                           
 21317                           ; BSR set to: 1
 21318  01A2A2  0012               	return	
 21319  01A2A4                     l3123:
 21320                           
 21321                           ; BSR set to: 1
 21322                           
 21323                           ; BSR set to: 1
 21324  01A2A4  4B55               	infsnz	strncmp@s1& (0+255),f,b
 21325  01A2A6  2B56               	incf	(strncmp@s1+1)& (0+255),f,b
 21326  01A2A8  4B57               	infsnz	strncmp@s2& (0+255),f,b
 21327  01A2AA  2B58               	incf	(strncmp@s2+1)& (0+255),f,b
 21328  01A2AC                     l3121:
 21329                           
 21330                           ; BSR set to: 1
 21331  01A2AC  0101               	movlb	1	; () banked
 21332  01A2AE  0759               	decf	strncmp@len& (0+255),f,b
 21333  01A2B0  A0D8               	btfss	status,0,c
 21334  01A2B2  075A               	decf	(strncmp@len+1)& (0+255),f,b
 21335  01A2B4  2959               	incf	strncmp@len& (0+255),w,b
 21336  01A2B6  E1C1               	bnz	l17403
 21337  01A2B8  295A               	incf	(strncmp@len+1)& (0+255),w,b
 21338  01A2BA  A4D8               	btfss	status,2,c
 21339  01A2BC  D7BE               	goto	l3122
 21340                           
 21341                           ; BSR set to: 1
 21342                           
 21343                           ; BSR set to: 1
 21344  01A2BE  0E00               	movlw	0
 21345  01A2C0  6F56               	movwf	(?_strncmp+1)& (0+255),b
 21346  01A2C2  0E00               	movlw	0
 21347  01A2C4  6F55               	movwf	?_strncmp& (0+255),b
 21348  01A2C6  0012               	return	
 21349  01A2C8                     __end_of_strncmp:
 21350                           	opt stack 0
 21351                           tblptru	equ	0xFF8
 21352                           tblptrh	equ	0xFF7
 21353                           tblptrl	equ	0xFF6
 21354                           tablat	equ	0xFF5
 21355                           intcon	equ	0xFF2
 21356                           postinc0	equ	0xFEE
 21357                           wreg	equ	0xFE8
 21358                           indf1	equ	0xFE7
 21359                           postdec1	equ	0xFE5
 21360                           fsr1h	equ	0xFE2
 21361                           fsr1l	equ	0xFE1
 21362                           indf2	equ	0xFDF
 21363                           postinc2	equ	0xFDE
 21364                           fsr2h	equ	0xFDA
 21365                           fsr2l	equ	0xFD9
 21366                           status	equ	0xFD8
 21367                           
 21368 ;; *************** function _strlen *****************
 21369 ;; Defined at:
 21370 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 21371 ;; Parameters:    Size  Location     Type
 21372 ;;  s               2   79[BANK1 ] PTR const unsigned char 
 21373 ;;		 -> STR_141(25), line(64), 
 21374 ;; Auto vars:     Size  Location     Type
 21375 ;;  cp              2   83[BANK1 ] PTR const unsigned char 
 21376 ;;		 -> STR_141(25), line(64), 
 21377 ;; Return value:  Size  Location     Type
 21378 ;;                  2   79[BANK1 ] unsigned int 
 21379 ;; Registers used:
 21380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21381 ;; Tracked objects:
 21382 ;;		On entry : 0/0
 21383 ;;		On exit  : 0/0
 21384 ;;		Unchanged: 0/0
 21385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21386 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21387 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21388 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21389 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21390 ;;Total ram usage:        6 bytes
 21391 ;; Hardware stack levels used:    1
 21392 ;; Hardware stack levels required when called:   19
 21393 ;; This function calls:
 21394 ;;		Nothing
 21395 ;; This function is called by:
 21396 ;;		_terminal_ringBufferPull
 21397 ;;		_strstr
 21398 ;; This function uses a non-reentrant model
 21399 ;;
 21400                           
 21401                           	psect	text12
 21402  01AC38                     __ptext12:
 21403                           	opt stack 0
 21404  01AC38                     _strlen:
 21405                           	opt stack 10
 21406                           
 21407                           ; BSR set to: 1
 21408                           ;incstack = 0
 21409  01AC38  C14F  F153         	movff	strlen@s,strlen@cp
 21410  01AC3C  C150  F154         	movff	strlen@s+1,strlen@cp+1
 21411  01AC40  D003               	goto	l3040
 21412  01AC42  0101               	movlb	1	; () banked
 21413  01AC44  4B53               	infsnz	strlen@cp& (0+255),f,b
 21414  01AC46  2B54               	incf	(strlen@cp+1)& (0+255),f,b
 21415  01AC48                     l3040:
 21416                           
 21417                           ; BSR set to: 1
 21418  01AC48  C153  FFF6         	movff	strlen@cp,tblptrl
 21419  01AC4C  C154  FFF7         	movff	strlen@cp+1,tblptrh
 21420  01AC50  0E00               	movlw	low (__mediumconst shr (0+16))
 21421  01AC52  6EF8               	movwf	tblptru,c
 21422  01AC54  0E0D               	movlw	(high __ramtop+-1)
 21423  01AC56  64F7               	cpfsgt	tblptrh,c
 21424  01AC58  D003               	bra	u22247
 21425  01AC5A  0008               	tblrd		*
 21426  01AC5C  50F5               	movf	tablat,w,c
 21427  01AC5E  D005               	bra	u22240
 21428  01AC60                     u22247:
 21429  01AC60  CFF6 FFE9          	movff	tblptrl,fsr0l
 21430  01AC64  CFF7 FFEA          	movff	tblptrh,fsr0h
 21431  01AC68  50EF               	movf	indf0,w,c
 21432  01AC6A                     u22240:
 21433  01AC6A  0900               	iorlw	0
 21434  01AC6C  A4D8               	btfss	status,2,c
 21435  01AC6E  D7E9               	goto	l3041
 21436  01AC70  C14F  F151         	movff	strlen@s,??_strlen
 21437  01AC74  C150  F152         	movff	strlen@s+1,??_strlen+1
 21438  01AC78  0101               	movlb	1	; () banked
 21439  01AC7A  1F51               	comf	??_strlen& (0+255),f,b
 21440  01AC7C  1F52               	comf	(??_strlen+1)& (0+255),f,b
 21441  01AC7E  4B51               	infsnz	??_strlen& (0+255),f,b
 21442  01AC80  2B52               	incf	(??_strlen+1)& (0+255),f,b
 21443  01AC82  5153               	movf	strlen@cp& (0+255),w,b
 21444  01AC84  2551               	addwf	??_strlen& (0+255),w,b
 21445  01AC86  6F4F               	movwf	?_strlen& (0+255),b
 21446  01AC88  5154               	movf	(strlen@cp+1)& (0+255),w,b
 21447  01AC8A  2152               	addwfc	(??_strlen+1)& (0+255),w,b
 21448  01AC8C  6F50               	movwf	(?_strlen+1)& (0+255),b
 21449  01AC8E  0012               	return	
 21450  01AC90                     __end_of_strlen:
 21451                           	opt stack 0
 21452                           tblptru	equ	0xFF8
 21453                           tblptrh	equ	0xFF7
 21454                           tblptrl	equ	0xFF6
 21455                           tablat	equ	0xFF5
 21456                           intcon	equ	0xFF2
 21457                           indf0	equ	0xFEF
 21458                           postinc0	equ	0xFEE
 21459                           fsr0h	equ	0xFEA
 21460                           fsr0l	equ	0xFE9
 21461                           wreg	equ	0xFE8
 21462                           indf1	equ	0xFE7
 21463                           postdec1	equ	0xFE5
 21464                           fsr1h	equ	0xFE2
 21465                           fsr1l	equ	0xFE1
 21466                           indf2	equ	0xFDF
 21467                           postinc2	equ	0xFDE
 21468                           fsr2h	equ	0xFDA
 21469                           fsr2l	equ	0xFD9
 21470                           status	equ	0xFD8
 21471                           
 21472 ;; *************** function _strchr *****************
 21473 ;; Defined at:
 21474 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 21475 ;; Parameters:    Size  Location     Type
 21476 ;;  ptr             2   79[BANK1 ] PTR const unsigned char 
 21477 ;;		 -> line(64), NULL(0), 
 21478 ;;  chr             2   81[BANK1 ] int 
 21479 ;; Auto vars:     Size  Location     Type
 21480 ;;		None
 21481 ;; Return value:  Size  Location     Type
 21482 ;;                  2   79[BANK1 ] PTR unsigned char 
 21483 ;; Registers used:
 21484 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21485 ;; Tracked objects:
 21486 ;;		On entry : 0/0
 21487 ;;		On exit  : 0/0
 21488 ;;		Unchanged: 0/0
 21489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21490 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21492 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21493 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21494 ;;Total ram usage:        5 bytes
 21495 ;; Hardware stack levels used:    1
 21496 ;; Hardware stack levels required when called:   19
 21497 ;; This function calls:
 21498 ;;		Nothing
 21499 ;; This function is called by:
 21500 ;;		_strstr
 21501 ;; This function uses a non-reentrant model
 21502 ;;
 21503                           
 21504                           	psect	text13
 21505  01B760                     __ptext13:
 21506                           	opt stack 0
 21507  01B760                     _strchr:
 21508                           	opt stack 8
 21509                           
 21510                           ; BSR set to: 1
 21511                           ;incstack = 0
 21512  01B760  C14F  FFD9         	movff	strchr@ptr,fsr2l
 21513  01B764  C150  FFDA         	movff	strchr@ptr+1,fsr2h
 21514  01B768  0101               	movlb	1	; () banked
 21515  01B76A  5151               	movf	strchr@chr& (0+255),w,b
 21516  01B76C  18DE               	xorwf	postinc2,w,c
 21517  01B76E  A4D8               	btfss	status,2,c
 21518  01B770  D005               	goto	l3116
 21519                           
 21520                           ; BSR set to: 1
 21521  01B772  C14F  F14F         	movff	strchr@ptr,?_strchr
 21522  01B776  C150  F150         	movff	strchr@ptr+1,?_strchr+1
 21523                           
 21524                           ; BSR set to: 1
 21525  01B77A  0012               	return	
 21526  01B77C                     l3116:
 21527                           
 21528                           ; BSR set to: 1
 21529                           
 21530                           ; BSR set to: 1
 21531  01B77C  C14F  FFD9         	movff	strchr@ptr,fsr2l
 21532  01B780  C150  FFDA         	movff	strchr@ptr+1,fsr2h
 21533  01B784  4B4F               	infsnz	strchr@ptr& (0+255),f,b
 21534  01B786  2B50               	incf	(strchr@ptr+1)& (0+255),f,b
 21535  01B788  50DF               	movf	indf2,w,c
 21536  01B78A  A4D8               	btfss	status,2,c
 21537  01B78C  D7E9               	goto	_strchr
 21538                           
 21539                           ; BSR set to: 1
 21540                           
 21541                           ; BSR set to: 1
 21542  01B78E  0E00               	movlw	0
 21543  01B790  6F4F               	movwf	?_strchr& (0+255),b
 21544  01B792  0E00               	movlw	0
 21545  01B794  6F50               	movwf	(?_strchr+1)& (0+255),b
 21546  01B796  0012               	return	
 21547  01B798                     __end_of_strchr:
 21548                           	opt stack 0
 21549                           tblptru	equ	0xFF8
 21550                           tblptrh	equ	0xFF7
 21551                           tblptrl	equ	0xFF6
 21552                           tablat	equ	0xFF5
 21553                           intcon	equ	0xFF2
 21554                           indf0	equ	0xFEF
 21555                           postinc0	equ	0xFEE
 21556                           fsr0h	equ	0xFEA
 21557                           fsr0l	equ	0xFE9
 21558                           wreg	equ	0xFE8
 21559                           indf1	equ	0xFE7
 21560                           postdec1	equ	0xFE5
 21561                           fsr1h	equ	0xFE2
 21562                           fsr1l	equ	0xFE1
 21563                           indf2	equ	0xFDF
 21564                           postinc2	equ	0xFDE
 21565                           fsr2h	equ	0xFDA
 21566                           fsr2l	equ	0xFD9
 21567                           status	equ	0xFD8
 21568                           
 21569 ;; *************** function _strcmp *****************
 21570 ;; Defined at:
 21571 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 21572 ;; Parameters:    Size  Location     Type
 21573 ;;  s1              2   79[BANK1 ] PTR const unsigned char 
 21574 ;;		 -> line(64), 
 21575 ;;  s2              2   81[BANK1 ] PTR const unsigned char 
 21576 ;;		 -> STR_183(11), STR_176(5), STR_174(9), STR_172(29), 
 21577 ;;		 -> STR_170(34), STR_168(33), STR_166(29), STR_164(17), 
 21578 ;;		 -> STR_162(17), STR_160(14), STR_158(19), STR_156(20), 
 21579 ;;		 -> STR_154(11), STR_152(17), STR_150(14), STR_148(16), 
 21580 ;;		 -> STR_139(13), STR_135(17), STR_132(14), STR_130(12), 
 21581 ;;		 -> STR_128(16), STR_126(17), STR_121(15), STR_119(13), 
 21582 ;;		 -> STR_117(16), STR_115(15), STR_113(21), STR_111(21), 
 21583 ;;		 -> STR_109(26), STR_107(14), STR_105(13), STR_103(18), 
 21584 ;;		 -> STR_101(15), STR_99(16), STR_97(18), STR_91(13), 
 21585 ;;		 -> STR_89(17), STR_77(12), STR_74(10), STR_72(13), 
 21586 ;;		 -> STR_70(11), STR_67(4), STR_66(6), STR_64(16), 
 21587 ;;		 -> STR_61(6), STR_58(6), 
 21588 ;; Auto vars:     Size  Location     Type
 21589 ;;  r               1   84[BANK1 ] char 
 21590 ;; Return value:  Size  Location     Type
 21591 ;;                  2   79[BANK1 ] int 
 21592 ;; Registers used:
 21593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21594 ;; Tracked objects:
 21595 ;;		On entry : 0/0
 21596 ;;		On exit  : 0/0
 21597 ;;		Unchanged: 0/0
 21598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21599 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21600 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21601 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21602 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21603 ;;Total ram usage:        6 bytes
 21604 ;; Hardware stack levels used:    1
 21605 ;; Hardware stack levels required when called:   19
 21606 ;; This function calls:
 21607 ;;		Nothing
 21608 ;; This function is called by:
 21609 ;;		_ringBufferLUT
 21610 ;; This function uses a non-reentrant model
 21611 ;;
 21612                           
 21613                           	psect	text14
 21614  01AE36                     __ptext14:
 21615                           	opt stack 0
 21616  01AE36                     _strcmp:
 21617                           	opt stack 9
 21618                           
 21619                           ; BSR set to: 1
 21620                           ;incstack = 0
 21621  01AE36  D005               	goto	l3026
 21622  01AE38  0101               	movlb	1	; () banked
 21623  01AE3A  4B4F               	infsnz	strcmp@s1& (0+255),f,b
 21624  01AE3C  2B50               	incf	(strcmp@s1+1)& (0+255),f,b
 21625  01AE3E  4B51               	infsnz	strcmp@s2& (0+255),f,b
 21626  01AE40  2B52               	incf	(strcmp@s2+1)& (0+255),f,b
 21627  01AE42                     l3026:
 21628                           
 21629                           ; BSR set to: 1
 21630  01AE42  C14F  FFD9         	movff	strcmp@s1,fsr2l
 21631  01AE46  C150  FFDA         	movff	strcmp@s1+1,fsr2h
 21632  01AE4A  50DF               	movf	indf2,w,c
 21633  01AE4C  0101               	movlb	1	; () banked
 21634  01AE4E  6F53               	movwf	??_strcmp& (0+255),b
 21635  01AE50  C151  FFF6         	movff	strcmp@s2,tblptrl
 21636  01AE54  C152  FFF7         	movff	strcmp@s2+1,tblptrh
 21637  01AE58                     	if	0	;tblptru may be non-zero
 21638  01AE58                     	endif
 21639  01AE58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21640  01AE58  0E00               	movlw	low (__mediumconst shr (0+16))
 21641  01AE5A  6EF8               	movwf	tblptru,c
 21642  01AE5C                     	endif
 21643  01AE5C  0008               	tblrd		*
 21644  01AE5E  50F5               	movf	tablat,w,c
 21645  01AE60  0800               	sublw	0
 21646  01AE62  2553               	addwf	??_strcmp& (0+255),w,b
 21647  01AE64  6F54               	movwf	strcmp@r& (0+255),b
 21648  01AE66  5154               	movf	strcmp@r& (0+255),w,b
 21649  01AE68  A4D8               	btfss	status,2,c
 21650  01AE6A  D007               	goto	u22730
 21651                           
 21652                           ; BSR set to: 1
 21653  01AE6C  C14F  FFD9         	movff	strcmp@s1,fsr2l
 21654  01AE70  C150  FFDA         	movff	strcmp@s1+1,fsr2h
 21655  01AE74  50DF               	movf	indf2,w,c
 21656  01AE76  A4D8               	btfss	status,2,c
 21657  01AE78  D7DF               	goto	l3027
 21658  01AE7A                     u22730:
 21659                           
 21660                           ; BSR set to: 1
 21661                           
 21662                           ; BSR set to: 1
 21663                           
 21664                           ; BSR set to: 1
 21665  01AE7A  5154               	movf	strcmp@r& (0+255),w,b
 21666  01AE7C  6F4F               	movwf	?_strcmp& (0+255),b
 21667  01AE7E  6B50               	clrf	(?_strcmp+1)& (0+255),b
 21668  01AE80  BF4F               	btfsc	?_strcmp& (0+255),7,b
 21669  01AE82  0750               	decf	(?_strcmp+1)& (0+255),f,b
 21670  01AE84  0012               	return	
 21671  01AE86                     __end_of_strcmp:
 21672                           	opt stack 0
 21673                           tblptru	equ	0xFF8
 21674                           tblptrh	equ	0xFF7
 21675                           tblptrl	equ	0xFF6
 21676                           tablat	equ	0xFF5
 21677                           intcon	equ	0xFF2
 21678                           indf0	equ	0xFEF
 21679                           postinc0	equ	0xFEE
 21680                           fsr0h	equ	0xFEA
 21681                           fsr0l	equ	0xFE9
 21682                           wreg	equ	0xFE8
 21683                           indf1	equ	0xFE7
 21684                           postdec1	equ	0xFE5
 21685                           fsr1h	equ	0xFE2
 21686                           fsr1l	equ	0xFE1
 21687                           indf2	equ	0xFDF
 21688                           postinc2	equ	0xFDE
 21689                           fsr2h	equ	0xFDA
 21690                           fsr2l	equ	0xFD9
 21691                           status	equ	0xFD8
 21692                           
 21693 ;; *************** function _getUserID *****************
 21694 ;; Defined at:
 21695 ;;		line 65 in file "device_IDs.c"
 21696 ;; Parameters:    Size  Location     Type
 21697 ;;  inputUserID     1    wreg     unsigned char 
 21698 ;; Auto vars:     Size  Location     Type
 21699 ;;  inputUserID     1    4[BANK2 ] unsigned char 
 21700 ;;  initialOffse    4    0[BANK2 ] unsigned long 
 21701 ;;  IDOffset        1    5[BANK2 ] unsigned char 
 21702 ;; Return value:  Size  Location     Type
 21703 ;;                  2   90[BANK1 ] unsigned int 
 21704 ;; Registers used:
 21705 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21706 ;; Tracked objects:
 21707 ;;		On entry : 0/0
 21708 ;;		On exit  : 0/0
 21709 ;;		Unchanged: 0/0
 21710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21711 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21712 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0
 21713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21714 ;;      Totals:         0       0       2       6       0       0       0       0       0       0       0       0       
      +0       0       0
 21715 ;;Total ram usage:        8 bytes
 21716 ;; Hardware stack levels used:    1
 21717 ;; Hardware stack levels required when called:   21
 21718 ;; This function calls:
 21719 ;;		_FLASH_ReadWord
 21720 ;; This function is called by:
 21721 ;;		_ringBufferLUT
 21722 ;; This function uses a non-reentrant model
 21723 ;;
 21724                           
 21725                           	psect	text15
 21726  01AD40                     __ptext15:
 21727                           	opt stack 0
 21728  01AD40                     _getUserID:
 21729                           	opt stack 7
 21730                           
 21731                           ; BSR set to: 1
 21732                           ;incstack = 0
 21733                           ;getUserID@inputUserID stored from wreg
 21734  01AD40  0102               	movlb	2	; () banked
 21735  01AD42  6F04               	movwf	getUserID@inputUserID& (0+255),b
 21736                           
 21737                           ;device_IDs.c: 68: uint32_t initialOffset = 0x200000;
 21738  01AD44  0E00               	movlw	0
 21739  01AD46  0102               	movlb	2	; () banked
 21740  01AD48  6F00               	movwf	getUserID@initialOffset& (0+255),b
 21741  01AD4A  0E00               	movlw	0
 21742  01AD4C  6F01               	movwf	(getUserID@initialOffset+1)& (0+255),b
 21743  01AD4E  0E20               	movlw	32
 21744  01AD50  6F02               	movwf	(getUserID@initialOffset+2)& (0+255),b
 21745  01AD52  0E00               	movlw	0
 21746  01AD54  6F03               	movwf	(getUserID@initialOffset+3)& (0+255),b
 21747                           
 21748                           ; BSR set to: 2
 21749                           ;device_IDs.c: 71: uint8_t IDOffset = inputUserID * 2;
 21750  01AD56  5104               	movf	getUserID@inputUserID& (0+255),w,b
 21751  01AD58  0D02               	mullw	2
 21752  01AD5A  CFF3 F205          	movff	prodl,getUserID@IDOffset
 21753                           
 21754                           ; BSR set to: 2
 21755                           ;device_IDs.c: 73: return FLASH_ReadWord(initialOffset + IDOffset);
 21756  01AD5E  5105               	movf	getUserID@IDOffset& (0+255),w,b
 21757  01AD60  2500               	addwf	getUserID@initialOffset& (0+255),w,b
 21758  01AD62  0101               	movlb	1	; () banked
 21759  01AD64  6F53               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 21760  01AD66  0E00               	movlw	0
 21761  01AD68  0102               	movlb	2	; () banked
 21762  01AD6A  2101               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 21763  01AD6C  0101               	movlb	1	; () banked
 21764  01AD6E  6F54               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 21765  01AD70  0E00               	movlw	0
 21766  01AD72  0102               	movlb	2	; () banked
 21767  01AD74  2102               	addwfc	(getUserID@initialOffset+2)& (0+255),w,b
 21768  01AD76  0101               	movlb	1	; () banked
 21769  01AD78  6F55               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 21770  01AD7A  0E00               	movlw	0
 21771  01AD7C  0102               	movlb	2	; () banked
 21772  01AD7E  2103               	addwfc	(getUserID@initialOffset+3)& (0+255),w,b
 21773  01AD80  0101               	movlb	1	; () banked
 21774  01AD82  6F56               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 21775  01AD84  ECBF  F0D9         	call	_FLASH_ReadWord	;wreg free
 21776  01AD88  C153  F15A         	movff	?_FLASH_ReadWord,?_getUserID
 21777  01AD8C  C154  F15B         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 21778  01AD90  0012               	return	
 21779  01AD92                     __end_of_getUserID:
 21780                           	opt stack 0
 21781                           tblptru	equ	0xFF8
 21782                           tblptrh	equ	0xFF7
 21783                           tblptrl	equ	0xFF6
 21784                           tablat	equ	0xFF5
 21785                           prodl	equ	0xFF3
 21786                           intcon	equ	0xFF2
 21787                           indf0	equ	0xFEF
 21788                           postinc0	equ	0xFEE
 21789                           fsr0h	equ	0xFEA
 21790                           fsr0l	equ	0xFE9
 21791                           wreg	equ	0xFE8
 21792                           indf1	equ	0xFE7
 21793                           postdec1	equ	0xFE5
 21794                           fsr1h	equ	0xFE2
 21795                           fsr1l	equ	0xFE1
 21796                           indf2	equ	0xFDF
 21797                           postinc2	equ	0xFDE
 21798                           fsr2h	equ	0xFDA
 21799                           fsr2l	equ	0xFD9
 21800                           status	equ	0xFD8
 21801                           
 21802 ;; *************** function _getCauseOfResetString *****************
 21803 ;; Defined at:
 21804 ;;		line 81 in file "cause_of_reset.c"
 21805 ;; Parameters:    Size  Location     Type
 21806 ;;  r               1    wreg     enum E17455
 21807 ;; Auto vars:     Size  Location     Type
 21808 ;;  r               1   81[BANK1 ] enum E17455
 21809 ;; Return value:  Size  Location     Type
 21810 ;;                  2   79[BANK1 ] PTR inline unsigned char
 21811 ;; Registers used:
 21812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21813 ;; Tracked objects:
 21814 ;;		On entry : 0/0
 21815 ;;		On exit  : 0/0
 21816 ;;		Unchanged: 0/0
 21817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21818 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21819 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21821 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21822 ;;Total ram usage:        3 bytes
 21823 ;; Hardware stack levels used:    1
 21824 ;; Hardware stack levels required when called:   19
 21825 ;; This function calls:
 21826 ;;		Nothing
 21827 ;; This function is called by:
 21828 ;;		_ringBufferLUT
 21829 ;; This function uses a non-reentrant model
 21830 ;;
 21831                           
 21832                           	psect	text16
 21833  01B90A                     __ptext16:
 21834                           	opt stack 0
 21835  01B90A                     _getCauseOfResetString:
 21836                           	opt stack 9
 21837                           
 21838                           ;incstack = 0
 21839                           ;getCauseOfResetString@r stored from wreg
 21840  01B90A  0101               	movlb	1	; () banked
 21841  01B90C  6F51               	movwf	getCauseOfResetString@r& (0+255),b
 21842                           
 21843                           ;cause_of_reset.c: 84: static char *strings[] = {
 21844                           ;cause_of_reset.c: 85: "Undefined Reset",
 21845                           ;cause_of_reset.c: 86: "Power On Reset",
 21846                           ;cause_of_reset.c: 87: "Brown Out Reset",
 21847                           ;cause_of_reset.c: 88: "Master Clear Reset",
 21848                           ;cause_of_reset.c: 89: "Watch Dog Timer Violation Reset",
 21849                           ;cause_of_reset.c: 90: "Windowed Watch Dog Timer Violation Reset",
 21850                           ;cause_of_reset.c: 91: "RESET Instruction Executed",
 21851                           ;cause_of_reset.c: 92: "Stack Overflow Reset",
 21852                           ;cause_of_reset.c: 93: "Stack Underflow Reset",
 21853                           ;cause_of_reset.c: 94: };
 21854  01B90E  0E09               	movlw	9
 21855  01B910  0101               	movlb	1	; () banked
 21856  01B912  6151               	cpfslt	getCauseOfResetString@r& (0+255),b
 21857  01B914  D00D               	goto	l1837
 21858                           
 21859                           ; BSR set to: 1
 21860                           ;cause_of_reset.c: 99: return strings[r];
 21861  01B916  5151               	movf	getCauseOfResetString@r& (0+255),w,b
 21862  01B918  0D02               	mullw	2
 21863  01B91A  0EE7               	movlw	low getCauseOfResetString@strings
 21864  01B91C  24F3               	addwf	prodl,w,c
 21865  01B91E  6ED9               	movwf	fsr2l,c
 21866  01B920  0E03               	movlw	high getCauseOfResetString@strings
 21867  01B922  20F4               	addwfc	prodh,w,c
 21868  01B924  6EDA               	movwf	fsr2h,c
 21869  01B926  CFDE F14F          	movff	postinc2,?_getCauseOfResetString
 21870  01B92A  CFDD F150          	movff	postdec2,?_getCauseOfResetString+1
 21871                           
 21872                           ; BSR set to: 1
 21873                           ;cause_of_reset.c: 101: }
 21874                           
 21875                           ; BSR set to: 1
 21876  01B92E  0012               	return	
 21877  01B930                     l1837:
 21878                           
 21879                           ; BSR set to: 1
 21880                           ;cause_of_reset.c: 103: else {
 21881                           ;cause_of_reset.c: 105: return "Undefined Reset";
 21882                           
 21883                           ; BSR set to: 1
 21884  01B930  0EC0               	movlw	low STR_192
 21885  01B932  6F4F               	movwf	?_getCauseOfResetString& (0+255),b
 21886  01B934  0EFC               	movlw	high STR_192
 21887  01B936  6F50               	movwf	(?_getCauseOfResetString+1)& (0+255),b
 21888                           
 21889                           ; BSR set to: 1
 21890  01B938  0012               	return	
 21891  01B93A                     __end_of_getCauseOfResetString:
 21892                           	opt stack 0
 21893                           tblptru	equ	0xFF8
 21894                           tblptrh	equ	0xFF7
 21895                           tblptrl	equ	0xFF6
 21896                           tablat	equ	0xFF5
 21897                           prodh	equ	0xFF4
 21898                           prodl	equ	0xFF3
 21899                           intcon	equ	0xFF2
 21900                           indf0	equ	0xFEF
 21901                           postinc0	equ	0xFEE
 21902                           fsr0h	equ	0xFEA
 21903                           fsr0l	equ	0xFE9
 21904                           wreg	equ	0xFE8
 21905                           indf1	equ	0xFE7
 21906                           postdec1	equ	0xFE5
 21907                           fsr1h	equ	0xFE2
 21908                           fsr1l	equ	0xFE1
 21909                           indf2	equ	0xFDF
 21910                           postinc2	equ	0xFDE
 21911                           postdec2	equ	0xFDD
 21912                           fsr2h	equ	0xFDA
 21913                           fsr2l	equ	0xFD9
 21914                           status	equ	0xFD8
 21915                           
 21916 ;; *************** function _getCOMMError *****************
 21917 ;; Defined at:
 21918 ;;		line 35 in file "error_handling.c"
 21919 ;; Parameters:    Size  Location     Type
 21920 ;;		None
 21921 ;; Auto vars:     Size  Location     Type
 21922 ;;		None
 21923 ;; Return value:  Size  Location     Type
 21924 ;;                  1    wreg      unsigned char 
 21925 ;; Registers used:
 21926 ;;		wreg, status,2
 21927 ;; Tracked objects:
 21928 ;;		On entry : 0/0
 21929 ;;		On exit  : 0/0
 21930 ;;		Unchanged: 0/0
 21931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21936 ;;Total ram usage:        0 bytes
 21937 ;; Hardware stack levels used:    1
 21938 ;; Hardware stack levels required when called:   19
 21939 ;; This function calls:
 21940 ;;		Nothing
 21941 ;; This function is called by:
 21942 ;;		_ringBufferLUT
 21943 ;;		_updateErrorLEDs
 21944 ;; This function uses a non-reentrant model
 21945 ;;
 21946                           
 21947                           	psect	text17
 21948  01BE50                     __ptext17:
 21949                           	opt stack 0
 21950  01BE50                     _getCOMMError:
 21951                           	opt stack 10
 21952                           
 21953                           ;error_handling.c: 38: if ( error_handler.I2C_COMM_error_flag ||
 21954                           ;error_handling.c: 39: error_handler.USB_UART_COMM_error_flag ) {
 21955                           
 21956                           ; BSR set to: 1
 21957                           ;incstack = 0
 21958  01BE50  0101               	movlb	1	; () banked
 21959  01BE52  5167               	movf	(_error_handler+7)& (0+255),w,b
 21960  01BE54  A4D8               	btfss	status,2,c
 21961  01BE56  D003               	goto	u22830
 21962                           
 21963                           ; BSR set to: 1
 21964  01BE58  5168               	movf	(_error_handler+8)& (0+255),w,b
 21965  01BE5A  B4D8               	btfsc	status,2,c
 21966  01BE5C  D002               	goto	l1960
 21967  01BE5E                     u22830:
 21968                           
 21969                           ; BSR set to: 1
 21970                           ;error_handling.c: 41: return 1;
 21971                           
 21972                           ; BSR set to: 1
 21973  01BE5E  0E01               	movlw	1
 21974                           
 21975                           ; BSR set to: 1
 21976                           ;error_handling.c: 43: }
 21977                           
 21978                           ; BSR set to: 1
 21979  01BE60  0012               	return	
 21980  01BE62                     l1960:
 21981                           
 21982                           ; BSR set to: 1
 21983                           ;error_handling.c: 45: else {
 21984                           ;error_handling.c: 47: return 0;
 21985                           
 21986                           ; BSR set to: 1
 21987  01BE62  0E00               	movlw	0
 21988                           
 21989                           ; BSR set to: 1
 21990  01BE64  0012               	return	
 21991  01BE66                     __end_of_getCOMMError:
 21992                           	opt stack 0
 21993                           tblptru	equ	0xFF8
 21994                           tblptrh	equ	0xFF7
 21995                           tblptrl	equ	0xFF6
 21996                           tablat	equ	0xFF5
 21997                           prodh	equ	0xFF4
 21998                           prodl	equ	0xFF3
 21999                           intcon	equ	0xFF2
 22000                           indf0	equ	0xFEF
 22001                           postinc0	equ	0xFEE
 22002                           fsr0h	equ	0xFEA
 22003                           fsr0l	equ	0xFE9
 22004                           wreg	equ	0xFE8
 22005                           indf1	equ	0xFE7
 22006                           postdec1	equ	0xFE5
 22007                           fsr1h	equ	0xFE2
 22008                           fsr1l	equ	0xFE1
 22009                           indf2	equ	0xFDF
 22010                           postinc2	equ	0xFDE
 22011                           postdec2	equ	0xFDD
 22012                           fsr2h	equ	0xFDA
 22013                           fsr2l	equ	0xFD9
 22014                           status	equ	0xFD8
 22015                           
 22016 ;; *************** function _getADCError *****************
 22017 ;; Defined at:
 22018 ;;		line 11 in file "error_handling.c"
 22019 ;; Parameters:    Size  Location     Type
 22020 ;;		None
 22021 ;; Auto vars:     Size  Location     Type
 22022 ;;		None
 22023 ;; Return value:  Size  Location     Type
 22024 ;;                  1    wreg      unsigned char 
 22025 ;; Registers used:
 22026 ;;		wreg, status,2
 22027 ;; Tracked objects:
 22028 ;;		On entry : 0/0
 22029 ;;		On exit  : 0/0
 22030 ;;		Unchanged: 0/0
 22031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22036 ;;Total ram usage:        0 bytes
 22037 ;; Hardware stack levels used:    1
 22038 ;; Hardware stack levels required when called:   19
 22039 ;; This function calls:
 22040 ;;		Nothing
 22041 ;; This function is called by:
 22042 ;;		_ringBufferLUT
 22043 ;;		_updateErrorLEDs
 22044 ;; This function uses a non-reentrant model
 22045 ;;
 22046                           
 22047                           	psect	text18
 22048  01B83C                     __ptext18:
 22049                           	opt stack 0
 22050  01B83C                     _getADCError:
 22051                           	opt stack 10
 22052                           
 22053                           ;error_handling.c: 14: if ( error_handler.ADC_general_error_flag ||
 22054                           ;error_handling.c: 15: error_handler.AVSS_ADC_error_flag ||
 22055                           ;error_handling.c: 16: error_handler.FVR_ADC_error_flag ||
 22056                           ;error_handling.c: 17: error_handler.ISNS_ADC_error_flag ||
 22057                           ;error_handling.c: 18: error_handler.POS12_ADC_error_flag ||
 22058                           ;error_handling.c: 19: error_handler.POS3P3_ADC_error_flag ||
 22059                           ;error_handling.c: 20: error_handler.Temp_ADC_error_flag ) {
 22060                           
 22061                           ; BSR set to: 1
 22062                           ;incstack = 0
 22063  01B83C  0101               	movlb	1	; () banked
 22064  01B83E  5166               	movf	(_error_handler+6)& (0+255),w,b
 22065  01B840  A4D8               	btfss	status,2,c
 22066  01B842  D012               	goto	u22810
 22067                           
 22068                           ; BSR set to: 1
 22069  01B844  5163               	movf	(_error_handler+3)& (0+255),w,b
 22070  01B846  A4D8               	btfss	status,2,c
 22071  01B848  D00F               	goto	u22810
 22072                           
 22073                           ; BSR set to: 1
 22074  01B84A  5165               	movf	(_error_handler+5)& (0+255),w,b
 22075  01B84C  A4D8               	btfss	status,2,c
 22076  01B84E  D00C               	goto	u22810
 22077                           
 22078                           ; BSR set to: 1
 22079  01B850  5160               	movf	_error_handler& (0+255),w,b
 22080  01B852  A4D8               	btfss	status,2,c
 22081  01B854  D009               	goto	u22810
 22082                           
 22083                           ; BSR set to: 1
 22084  01B856  5161               	movf	(_error_handler+1)& (0+255),w,b
 22085  01B858  A4D8               	btfss	status,2,c
 22086  01B85A  D006               	goto	u22810
 22087                           
 22088                           ; BSR set to: 1
 22089  01B85C  5162               	movf	(_error_handler+2)& (0+255),w,b
 22090  01B85E  A4D8               	btfss	status,2,c
 22091  01B860  D003               	goto	u22810
 22092                           
 22093                           ; BSR set to: 1
 22094  01B862  5164               	movf	(_error_handler+4)& (0+255),w,b
 22095  01B864  B4D8               	btfsc	status,2,c
 22096  01B866  D002               	goto	l1953
 22097  01B868                     u22810:
 22098                           
 22099                           ; BSR set to: 1
 22100                           ;error_handling.c: 22: return 1;
 22101                           
 22102                           ; BSR set to: 1
 22103  01B868  0E01               	movlw	1
 22104                           
 22105                           ; BSR set to: 1
 22106                           ;error_handling.c: 24: }
 22107                           
 22108                           ; BSR set to: 1
 22109  01B86A  0012               	return	
 22110  01B86C                     l1953:
 22111                           
 22112                           ; BSR set to: 1
 22113                           ;error_handling.c: 26: else {
 22114                           ;error_handling.c: 28: return 0;
 22115                           
 22116                           ; BSR set to: 1
 22117  01B86C  0E00               	movlw	0
 22118                           
 22119                           ; BSR set to: 1
 22120  01B86E  0012               	return	
 22121  01B870                     __end_of_getADCError:
 22122                           	opt stack 0
 22123                           tblptru	equ	0xFF8
 22124                           tblptrh	equ	0xFF7
 22125                           tblptrl	equ	0xFF6
 22126                           tablat	equ	0xFF5
 22127                           prodh	equ	0xFF4
 22128                           prodl	equ	0xFF3
 22129                           intcon	equ	0xFF2
 22130                           indf0	equ	0xFEF
 22131                           postinc0	equ	0xFEE
 22132                           fsr0h	equ	0xFEA
 22133                           fsr0l	equ	0xFE9
 22134                           wreg	equ	0xFE8
 22135                           indf1	equ	0xFE7
 22136                           postdec1	equ	0xFE5
 22137                           fsr1h	equ	0xFE2
 22138                           fsr1l	equ	0xFE1
 22139                           indf2	equ	0xFDF
 22140                           postinc2	equ	0xFDE
 22141                           postdec2	equ	0xFDD
 22142                           fsr2h	equ	0xFDA
 22143                           fsr2l	equ	0xFD9
 22144                           status	equ	0xFD8
 22145                           
 22146 ;; *************** function _clearCOMMErrors *****************
 22147 ;; Defined at:
 22148 ;;		line 90 in file "error_handling.c"
 22149 ;; Parameters:    Size  Location     Type
 22150 ;;		None
 22151 ;; Auto vars:     Size  Location     Type
 22152 ;;		None
 22153 ;; Return value:  Size  Location     Type
 22154 ;;                  1    wreg      void 
 22155 ;; Registers used:
 22156 ;;		wreg, status,2
 22157 ;; Tracked objects:
 22158 ;;		On entry : 0/0
 22159 ;;		On exit  : 0/0
 22160 ;;		Unchanged: 0/0
 22161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22166 ;;Total ram usage:        0 bytes
 22167 ;; Hardware stack levels used:    1
 22168 ;; Hardware stack levels required when called:   19
 22169 ;; This function calls:
 22170 ;;		Nothing
 22171 ;; This function is called by:
 22172 ;;		_ringBufferLUT
 22173 ;; This function uses a non-reentrant model
 22174 ;;
 22175                           
 22176                           	psect	text19
 22177  01BF16                     __ptext19:
 22178                           	opt stack 0
 22179  01BF16                     _clearCOMMErrors:
 22180                           	opt stack 9
 22181                           
 22182                           ;error_handling.c: 93: error_handler.I2C_COMM_error_flag = 0;
 22183                           
 22184                           ; BSR set to: 1
 22185                           ;incstack = 0
 22186  01BF16  0E00               	movlw	0
 22187  01BF18  0101               	movlb	1	; () banked
 22188  01BF1A  6F67               	movwf	(_error_handler+7)& (0+255),b
 22189                           
 22190                           ;error_handling.c: 94: error_handler.USB_UART_COMM_error_flag = 0;
 22191  01BF1C  0E00               	movlw	0
 22192  01BF1E  6F68               	movwf	(_error_handler+8)& (0+255),b
 22193                           
 22194                           ; BSR set to: 1
 22195                           ;error_handling.c: 97: LATFbits.LATF1 = 0;
 22196  01BF20  927E               	bcf	3966,1,c	;volatile
 22197                           
 22198                           ; BSR set to: 1
 22199  01BF22  0012               	return		;funcret
 22200  01BF24                     __end_of_clearCOMMErrors:
 22201                           	opt stack 0
 22202                           tblptru	equ	0xFF8
 22203                           tblptrh	equ	0xFF7
 22204                           tblptrl	equ	0xFF6
 22205                           tablat	equ	0xFF5
 22206                           prodh	equ	0xFF4
 22207                           prodl	equ	0xFF3
 22208                           intcon	equ	0xFF2
 22209                           indf0	equ	0xFEF
 22210                           postinc0	equ	0xFEE
 22211                           fsr0h	equ	0xFEA
 22212                           fsr0l	equ	0xFE9
 22213                           wreg	equ	0xFE8
 22214                           indf1	equ	0xFE7
 22215                           postdec1	equ	0xFE5
 22216                           fsr1h	equ	0xFE2
 22217                           fsr1l	equ	0xFE1
 22218                           indf2	equ	0xFDF
 22219                           postinc2	equ	0xFDE
 22220                           postdec2	equ	0xFDD
 22221                           fsr2h	equ	0xFDA
 22222                           fsr2l	equ	0xFD9
 22223                           status	equ	0xFD8
 22224                           
 22225 ;; *************** function _clearADCErrors *****************
 22226 ;; Defined at:
 22227 ;;		line 73 in file "error_handling.c"
 22228 ;; Parameters:    Size  Location     Type
 22229 ;;		None
 22230 ;; Auto vars:     Size  Location     Type
 22231 ;;		None
 22232 ;; Return value:  Size  Location     Type
 22233 ;;                  1    wreg      void 
 22234 ;; Registers used:
 22235 ;;		wreg, status,2
 22236 ;; Tracked objects:
 22237 ;;		On entry : 0/0
 22238 ;;		On exit  : 0/0
 22239 ;;		Unchanged: 0/0
 22240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22245 ;;Total ram usage:        0 bytes
 22246 ;; Hardware stack levels used:    1
 22247 ;; Hardware stack levels required when called:   19
 22248 ;; This function calls:
 22249 ;;		Nothing
 22250 ;; This function is called by:
 22251 ;;		_ringBufferLUT
 22252 ;; This function uses a non-reentrant model
 22253 ;;
 22254                           
 22255                           	psect	text20
 22256  01BC6E                     __ptext20:
 22257                           	opt stack 0
 22258  01BC6E                     _clearADCErrors:
 22259                           	opt stack 9
 22260                           
 22261                           ;error_handling.c: 76: error_handler.ISNS_ADC_error_flag = 0;
 22262                           
 22263                           ; BSR set to: 1
 22264                           ;incstack = 0
 22265  01BC6E  0E00               	movlw	0
 22266  01BC70  0101               	movlb	1	; () banked
 22267  01BC72  6F60               	movwf	_error_handler& (0+255),b
 22268                           
 22269                           ;error_handling.c: 77: error_handler.POS12_ADC_error_flag = 0;
 22270  01BC74  0E00               	movlw	0
 22271  01BC76  6F61               	movwf	(_error_handler+1)& (0+255),b
 22272                           
 22273                           ;error_handling.c: 78: error_handler.POS3P3_ADC_error_flag = 0;
 22274  01BC78  0E00               	movlw	0
 22275  01BC7A  6F62               	movwf	(_error_handler+2)& (0+255),b
 22276                           
 22277                           ;error_handling.c: 79: error_handler.AVSS_ADC_error_flag = 0;
 22278  01BC7C  0E00               	movlw	0
 22279  01BC7E  6F63               	movwf	(_error_handler+3)& (0+255),b
 22280                           
 22281                           ;error_handling.c: 80: error_handler.Temp_ADC_error_flag = 0;
 22282  01BC80  0E00               	movlw	0
 22283  01BC82  6F64               	movwf	(_error_handler+4)& (0+255),b
 22284                           
 22285                           ;error_handling.c: 81: error_handler.FVR_ADC_error_flag = 0;
 22286  01BC84  0E00               	movlw	0
 22287  01BC86  6F65               	movwf	(_error_handler+5)& (0+255),b
 22288                           
 22289                           ;error_handling.c: 82: error_handler.ADC_general_error_flag = 0;
 22290  01BC88  0E00               	movlw	0
 22291  01BC8A  6F66               	movwf	(_error_handler+6)& (0+255),b
 22292                           
 22293                           ; BSR set to: 1
 22294                           ;error_handling.c: 85: LATFbits.LATF3 = 0;
 22295  01BC8C  967E               	bcf	3966,3,c	;volatile
 22296                           
 22297                           ; BSR set to: 1
 22298  01BC8E  0012               	return		;funcret
 22299  01BC90                     __end_of_clearADCErrors:
 22300                           	opt stack 0
 22301                           tblptru	equ	0xFF8
 22302                           tblptrh	equ	0xFF7
 22303                           tblptrl	equ	0xFF6
 22304                           tablat	equ	0xFF5
 22305                           prodh	equ	0xFF4
 22306                           prodl	equ	0xFF3
 22307                           intcon	equ	0xFF2
 22308                           indf0	equ	0xFEF
 22309                           postinc0	equ	0xFEE
 22310                           fsr0h	equ	0xFEA
 22311                           fsr0l	equ	0xFE9
 22312                           wreg	equ	0xFE8
 22313                           indf1	equ	0xFE7
 22314                           postdec1	equ	0xFE5
 22315                           fsr1h	equ	0xFE2
 22316                           fsr1l	equ	0xFE1
 22317                           indf2	equ	0xFDF
 22318                           postinc2	equ	0xFDE
 22319                           postdec2	equ	0xFDD
 22320                           fsr2h	equ	0xFDA
 22321                           fsr2l	equ	0xFD9
 22322                           status	equ	0xFD8
 22323                           
 22324 ;; *************** function _atoi *****************
 22325 ;; Defined at:
 22326 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 22327 ;; Parameters:    Size  Location     Type
 22328 ;;  s               2   85[BANK1 ] PTR const unsigned char 
 22329 ;;		 -> ringBufferLUT@arg_buff(3), 
 22330 ;; Auto vars:     Size  Location     Type
 22331 ;;  a               2   90[BANK1 ] int 
 22332 ;;  sign            1   89[BANK1 ] unsigned char 
 22333 ;; Return value:  Size  Location     Type
 22334 ;;                  2   85[BANK1 ] int 
 22335 ;; Registers used:
 22336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22337 ;; Tracked objects:
 22338 ;;		On entry : 0/0
 22339 ;;		On exit  : 0/0
 22340 ;;		Unchanged: 0/0
 22341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22342 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22343 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22344 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22345 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22346 ;;Total ram usage:        7 bytes
 22347 ;; Hardware stack levels used:    1
 22348 ;; Hardware stack levels required when called:   20
 22349 ;; This function calls:
 22350 ;;		___wmul
 22351 ;;		_isdigit
 22352 ;; This function is called by:
 22353 ;;		_ringBufferLUT
 22354 ;; This function uses a non-reentrant model
 22355 ;;
 22356                           
 22357                           	psect	text21
 22358  0199BA                     __ptext21:
 22359                           	opt stack 0
 22360  0199BA                     _atoi:
 22361                           	opt stack 8
 22362                           
 22363                           ; BSR set to: 1
 22364                           ;incstack = 0
 22365  0199BA  D003               	goto	l2480
 22366  0199BC  0101               	movlb	1	; () banked
 22367  0199BE  4B55               	infsnz	atoi@s& (0+255),f,b
 22368  0199C0  2B56               	incf	(atoi@s+1)& (0+255),f,b
 22369  0199C2                     l2480:
 22370                           
 22371                           ; BSR set to: 1
 22372  0199C2  C155  FFD9         	movff	atoi@s,fsr2l
 22373  0199C6  C156  FFDA         	movff	atoi@s+1,fsr2h
 22374  0199CA  0E20               	movlw	32
 22375  0199CC  18DE               	xorwf	postinc2,w,c
 22376  0199CE  B4D8               	btfsc	status,2,c
 22377  0199D0  D7F5               	goto	l2481
 22378  0199D2  C155  FFD9         	movff	atoi@s,fsr2l
 22379  0199D6  C156  FFDA         	movff	atoi@s+1,fsr2h
 22380  0199DA  0E09               	movlw	9
 22381  0199DC  18DE               	xorwf	postinc2,w,c
 22382  0199DE  B4D8               	btfsc	status,2,c
 22383  0199E0  D7ED               	goto	l2481
 22384  0199E2  0E00               	movlw	0
 22385  0199E4  0101               	movlb	1	; () banked
 22386  0199E6  6F5B               	movwf	(atoi@a+1)& (0+255),b
 22387  0199E8  0E00               	movlw	0
 22388  0199EA  6F5A               	movwf	atoi@a& (0+255),b
 22389  0199EC  0E00               	movlw	0
 22390  0199EE  6F59               	movwf	atoi@sign& (0+255),b
 22391                           
 22392                           ; BSR set to: 1
 22393  0199F0  C155  FFD9         	movff	atoi@s,fsr2l
 22394  0199F4  C156  FFDA         	movff	atoi@s+1,fsr2h
 22395  0199F8  0E2D               	movlw	45
 22396  0199FA  18DE               	xorwf	postinc2,w,c
 22397  0199FC  A4D8               	btfss	status,2,c
 22398  0199FE  D002               	goto	l2483
 22399                           
 22400                           ; BSR set to: 1
 22401  019A00  2B59               	incf	atoi@sign& (0+255),f,b
 22402  019A02  D026               	goto	l18015
 22403  019A04                     l2483:
 22404                           
 22405                           ; BSR set to: 1
 22406                           
 22407                           ; BSR set to: 1
 22408  019A04  C155  FFD9         	movff	atoi@s,fsr2l
 22409  019A08  C156  FFDA         	movff	atoi@s+1,fsr2h
 22410  019A0C  0E2B               	movlw	43
 22411  019A0E  18DE               	xorwf	postinc2,w,c
 22412  019A10  A4D8               	btfss	status,2,c
 22413  019A12  D020               	goto	l2486
 22414  019A14  D01D               	goto	l18015
 22415  019A16                     
 22416                           ; BSR set to: 1
 22417  019A16  C15A  F14F         	movff	atoi@a,___wmul@multiplier
 22418  019A1A  C15B  F150         	movff	atoi@a+1,___wmul@multiplier+1
 22419  019A1E  0E00               	movlw	0
 22420  019A20  0101               	movlb	1	; () banked
 22421  019A22  6F52               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22422  019A24  0E0A               	movlw	10
 22423  019A26  6F51               	movwf	___wmul@multiplicand& (0+255),b
 22424  019A28  EC41  F0DD         	call	___wmul	;wreg free
 22425  019A2C  C155  FFD9         	movff	atoi@s,fsr2l
 22426  019A30  C156  FFDA         	movff	atoi@s+1,fsr2h
 22427  019A34  50DF               	movf	indf2,w,c
 22428  019A36  0101               	movlb	1	; () banked
 22429  019A38  6F57               	movwf	??_atoi& (0+255),b
 22430  019A3A  6B58               	clrf	(??_atoi+1)& (0+255),b
 22431  019A3C  514F               	movf	?___wmul& (0+255),w,b
 22432  019A3E  2757               	addwf	??_atoi& (0+255),f,b
 22433  019A40  5150               	movf	(?___wmul+1)& (0+255),w,b
 22434  019A42  2358               	addwfc	(??_atoi+1)& (0+255),f,b
 22435  019A44  0ED0               	movlw	208
 22436  019A46  2557               	addwf	??_atoi& (0+255),w,b
 22437  019A48  6F5A               	movwf	atoi@a& (0+255),b
 22438  019A4A  0EFF               	movlw	255
 22439  019A4C  2158               	addwfc	(??_atoi+1)& (0+255),w,b
 22440  019A4E  6F5B               	movwf	(atoi@a+1)& (0+255),b
 22441  019A50                     l18015:
 22442                           
 22443                           ; BSR set to: 1
 22444  019A50  4B55               	infsnz	atoi@s& (0+255),f,b
 22445  019A52  2B56               	incf	(atoi@s+1)& (0+255),f,b
 22446  019A54                     l2486:
 22447                           
 22448                           ; BSR set to: 1
 22449                           
 22450                           ; BSR set to: 1
 22451  019A54  C155  FFD9         	movff	atoi@s,fsr2l
 22452  019A58  C156  FFDA         	movff	atoi@s+1,fsr2h
 22453  019A5C  50DF               	movf	indf2,w,c
 22454  019A5E  EC48  F0DE         	call	_isdigit
 22455  019A62  B0D8               	btfsc	status,0,c
 22456  019A64  D7D8               	goto	l2487
 22457  019A66  0101               	movlb	1	; () banked
 22458  019A68  5159               	movf	atoi@sign& (0+255),w,b
 22459  019A6A  B4D8               	btfsc	status,2,c
 22460  019A6C  D00D               	goto	l2489
 22461                           
 22462                           ; BSR set to: 1
 22463  019A6E  C15A  F157         	movff	atoi@a,??_atoi
 22464  019A72  C15B  F158         	movff	atoi@a+1,??_atoi+1
 22465  019A76  1F57               	comf	??_atoi& (0+255),f,b
 22466  019A78  1F58               	comf	(??_atoi+1)& (0+255),f,b
 22467  019A7A  4B57               	infsnz	??_atoi& (0+255),f,b
 22468  019A7C  2B58               	incf	(??_atoi+1)& (0+255),f,b
 22469  019A7E  C157  F155         	movff	??_atoi,?_atoi
 22470  019A82  C158  F156         	movff	??_atoi+1,?_atoi+1
 22471  019A86  0012               	return	
 22472  019A88                     l2489:
 22473                           
 22474                           ; BSR set to: 1
 22475  019A88  C15A  F155         	movff	atoi@a,?_atoi
 22476  019A8C  C15B  F156         	movff	atoi@a+1,?_atoi+1
 22477                           
 22478                           ; BSR set to: 1
 22479  019A90  0012               	return		;funcret
 22480  019A92                     __end_of_atoi:
 22481                           	opt stack 0
 22482                           tblptru	equ	0xFF8
 22483                           tblptrh	equ	0xFF7
 22484                           tblptrl	equ	0xFF6
 22485                           tablat	equ	0xFF5
 22486                           prodh	equ	0xFF4
 22487                           prodl	equ	0xFF3
 22488                           intcon	equ	0xFF2
 22489                           indf0	equ	0xFEF
 22490                           postinc0	equ	0xFEE
 22491                           fsr0h	equ	0xFEA
 22492                           fsr0l	equ	0xFE9
 22493                           wreg	equ	0xFE8
 22494                           indf1	equ	0xFE7
 22495                           postdec1	equ	0xFE5
 22496                           fsr1h	equ	0xFE2
 22497                           fsr1l	equ	0xFE1
 22498                           indf2	equ	0xFDF
 22499                           postinc2	equ	0xFDE
 22500                           postdec2	equ	0xFDD
 22501                           fsr2h	equ	0xFDA
 22502                           fsr2l	equ	0xFD9
 22503                           status	equ	0xFD8
 22504                           
 22505 ;; *************** function ___fldiv *****************
 22506 ;; Defined at:
 22507 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 22508 ;; Parameters:    Size  Location     Type
 22509 ;;  b               4   24[BANK2 ] int 
 22510 ;;  a               4   28[BANK2 ] int 
 22511 ;; Auto vars:     Size  Location     Type
 22512 ;;  grs             4   43[BANK2 ] unsigned long 
 22513 ;;  rem             4   37[BANK2 ] unsigned long 
 22514 ;;  new_exp         2   41[BANK2 ] int 
 22515 ;;  aexp            1   48[BANK2 ] unsigned char 
 22516 ;;  bexp            1   47[BANK2 ] unsigned char 
 22517 ;;  sign            1   36[BANK2 ] unsigned char 
 22518 ;; Return value:  Size  Location     Type
 22519 ;;                  4   24[BANK2 ] unsigned char 
 22520 ;; Registers used:
 22521 ;;		wreg, status,2, status,0
 22522 ;; Tracked objects:
 22523 ;;		On entry : 0/0
 22524 ;;		On exit  : 0/0
 22525 ;;		Unchanged: 0/0
 22526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22527 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0
 22528 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0
 22529 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
 22530 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0
 22531 ;;Total ram usage:       25 bytes
 22532 ;; Hardware stack levels used:    1
 22533 ;; Hardware stack levels required when called:   19
 22534 ;; This function calls:
 22535 ;;		Nothing
 22536 ;; This function is called by:
 22537 ;;		_ringBufferLUT
 22538 ;; This function uses a non-reentrant model
 22539 ;;
 22540                           
 22541                           	psect	text22
 22542  017166                     __ptext22:
 22543                           	opt stack 0
 22544  017166                     ___fldiv:
 22545                           	opt stack 9
 22546                           
 22547                           ; BSR set to: 1
 22548                           ;incstack = 0
 22549  017166  0102               	movlb	2	; () banked
 22550  017168  511B               	movf	(___fldiv@b+3)& (0+255),w,b
 22551  01716A  0B80               	andlw	128
 22552  01716C  6F24               	movwf	___fldiv@sign& (0+255),b
 22553  01716E  511B               	movf	(___fldiv@b+3)& (0+255),w,b
 22554  017170  251B               	addwf	(___fldiv@b+3)& (0+255),w,b
 22555  017172  6F2F               	movwf	___fldiv@bexp& (0+255),b
 22556                           
 22557                           ; BSR set to: 2
 22558  017174  BF1A               	btfsc	(___fldiv@b+2)& (0+255),7,b
 22559                           
 22560                           ; BSR set to: 2
 22561  017176  812F               	bsf	___fldiv@bexp& (0+255),0,b
 22562                           
 22563                           ; BSR set to: 2
 22564                           
 22565                           ; BSR set to: 2
 22566  017178  512F               	movf	___fldiv@bexp& (0+255),w,b
 22567  01717A  B4D8               	btfsc	status,2,c
 22568  01717C  D00D               	goto	l2928
 22569                           
 22570                           ; BSR set to: 2
 22571  01717E  292F               	incf	___fldiv@bexp& (0+255),w,b
 22572  017180  A4D8               	btfss	status,2,c
 22573  017182  D008               	goto	l2929
 22574                           
 22575                           ; BSR set to: 2
 22576  017184  0E00               	movlw	0
 22577  017186  6F18               	movwf	___fldiv@b& (0+255),b
 22578  017188  0E00               	movlw	0
 22579  01718A  6F19               	movwf	(___fldiv@b+1)& (0+255),b
 22580  01718C  0E00               	movlw	0
 22581  01718E  6F1A               	movwf	(___fldiv@b+2)& (0+255),b
 22582  017190  0E00               	movlw	0
 22583  017192  6F1B               	movwf	(___fldiv@b+3)& (0+255),b
 22584  017194                     l2929:
 22585                           
 22586                           ; BSR set to: 2
 22587                           
 22588                           ; BSR set to: 2
 22589  017194  8F1A               	bsf	(___fldiv@b+2)& (0+255),7,b
 22590  017196  D006               	goto	L1
 22591  017198                     l2928:
 22592                           
 22593                           ; BSR set to: 2
 22594                           
 22595                           ; BSR set to: 2
 22596  017198  0E00               	movlw	0
 22597  01719A  6F18               	movwf	___fldiv@b& (0+255),b
 22598  01719C  0E00               	movlw	0
 22599  01719E  6F19               	movwf	(___fldiv@b+1)& (0+255),b
 22600  0171A0  0E00               	movlw	0
 22601  0171A2  6F1A               	movwf	(___fldiv@b+2)& (0+255),b
 22602  0171A4                     L1:
 22603  0171A4  0E00               	movlw	0
 22604  0171A6  6F1B               	movwf	(___fldiv@b+3)& (0+255),b
 22605                           
 22606                           ; BSR set to: 2
 22607                           
 22608                           ; BSR set to: 2
 22609  0171A8  511F               	movf	(___fldiv@a+3)& (0+255),w,b
 22610  0171AA  0B80               	andlw	128
 22611  0171AC  1B24               	xorwf	___fldiv@sign& (0+255),f,b
 22612                           
 22613                           ; BSR set to: 2
 22614  0171AE  511F               	movf	(___fldiv@a+3)& (0+255),w,b
 22615  0171B0  251F               	addwf	(___fldiv@a+3)& (0+255),w,b
 22616  0171B2  6F30               	movwf	___fldiv@aexp& (0+255),b
 22617                           
 22618                           ; BSR set to: 2
 22619  0171B4  BF1E               	btfsc	(___fldiv@a+2)& (0+255),7,b
 22620                           
 22621                           ; BSR set to: 2
 22622  0171B6  8130               	bsf	___fldiv@aexp& (0+255),0,b
 22623                           
 22624                           ; BSR set to: 2
 22625                           
 22626                           ; BSR set to: 2
 22627  0171B8  5130               	movf	___fldiv@aexp& (0+255),w,b
 22628  0171BA  B4D8               	btfsc	status,2,c
 22629  0171BC  D00D               	goto	l2932
 22630                           
 22631                           ; BSR set to: 2
 22632  0171BE  2930               	incf	___fldiv@aexp& (0+255),w,b
 22633  0171C0  A4D8               	btfss	status,2,c
 22634  0171C2  D008               	goto	l2933
 22635                           
 22636                           ; BSR set to: 2
 22637  0171C4  0E00               	movlw	0
 22638  0171C6  6F1C               	movwf	___fldiv@a& (0+255),b
 22639  0171C8  0E00               	movlw	0
 22640  0171CA  6F1D               	movwf	(___fldiv@a+1)& (0+255),b
 22641  0171CC  0E00               	movlw	0
 22642  0171CE  6F1E               	movwf	(___fldiv@a+2)& (0+255),b
 22643  0171D0  0E00               	movlw	0
 22644  0171D2  6F1F               	movwf	(___fldiv@a+3)& (0+255),b
 22645  0171D4                     l2933:
 22646                           
 22647                           ; BSR set to: 2
 22648                           
 22649                           ; BSR set to: 2
 22650  0171D4  8F1E               	bsf	(___fldiv@a+2)& (0+255),7,b
 22651  0171D6  D006               	goto	L2
 22652  0171D8                     l2932:
 22653                           
 22654                           ; BSR set to: 2
 22655                           
 22656                           ; BSR set to: 2
 22657  0171D8  0E00               	movlw	0
 22658  0171DA  6F1C               	movwf	___fldiv@a& (0+255),b
 22659  0171DC  0E00               	movlw	0
 22660  0171DE  6F1D               	movwf	(___fldiv@a+1)& (0+255),b
 22661  0171E0  0E00               	movlw	0
 22662  0171E2  6F1E               	movwf	(___fldiv@a+2)& (0+255),b
 22663  0171E4                     L2:
 22664  0171E4  0E00               	movlw	0
 22665  0171E6  6F1F               	movwf	(___fldiv@a+3)& (0+255),b
 22666                           
 22667                           ; BSR set to: 2
 22668                           
 22669                           ; BSR set to: 2
 22670  0171E8  511C               	movf	___fldiv@a& (0+255),w,b
 22671  0171EA  111D               	iorwf	(___fldiv@a+1)& (0+255),w,b
 22672  0171EC  111E               	iorwf	(___fldiv@a+2)& (0+255),w,b
 22673  0171EE  111F               	iorwf	(___fldiv@a+3)& (0+255),w,b
 22674  0171F0  A4D8               	btfss	status,2,c
 22675  0171F2  D015               	goto	l2935
 22676                           
 22677                           ; BSR set to: 2
 22678  0171F4  0E00               	movlw	0
 22679  0171F6  6F18               	movwf	___fldiv@b& (0+255),b
 22680  0171F8  0E00               	movlw	0
 22681  0171FA  6F19               	movwf	(___fldiv@b+1)& (0+255),b
 22682  0171FC  0E00               	movlw	0
 22683  0171FE  6F1A               	movwf	(___fldiv@b+2)& (0+255),b
 22684  017200  0E00               	movlw	0
 22685  017202  6F1B               	movwf	(___fldiv@b+3)& (0+255),b
 22686                           
 22687                           ; BSR set to: 2
 22688  017204  0E80               	movlw	128
 22689  017206  131A               	iorwf	(___fldiv@b+2)& (0+255),f,b
 22690  017208  0E7F               	movlw	127
 22691  01720A  131B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 22692                           
 22693                           ; BSR set to: 2
 22694  01720C  C218  F218         	movff	___fldiv@b,?___fldiv
 22695  017210  C219  F219         	movff	___fldiv@b+1,?___fldiv+1
 22696  017214  C21A  F21A         	movff	___fldiv@b+2,?___fldiv+2
 22697  017218  C21B  F21B         	movff	___fldiv@b+3,?___fldiv+3
 22698                           
 22699                           ; BSR set to: 2
 22700  01721C  0012               	return	
 22701  01721E                     l2935:
 22702                           
 22703                           ; BSR set to: 2
 22704                           
 22705                           ; BSR set to: 2
 22706  01721E  512F               	movf	___fldiv@bexp& (0+255),w,b
 22707  017220  A4D8               	btfss	status,2,c
 22708  017222  D011               	goto	l2937
 22709                           
 22710                           ; BSR set to: 2
 22711  017224  0E00               	movlw	0
 22712  017226  6F18               	movwf	___fldiv@b& (0+255),b
 22713  017228  0E00               	movlw	0
 22714  01722A  6F19               	movwf	(___fldiv@b+1)& (0+255),b
 22715  01722C  0E00               	movlw	0
 22716  01722E  6F1A               	movwf	(___fldiv@b+2)& (0+255),b
 22717  017230  0E00               	movlw	0
 22718  017232  6F1B               	movwf	(___fldiv@b+3)& (0+255),b
 22719                           
 22720                           ; BSR set to: 2
 22721  017234  C218  F218         	movff	___fldiv@b,?___fldiv
 22722  017238  C219  F219         	movff	___fldiv@b+1,?___fldiv+1
 22723  01723C  C21A  F21A         	movff	___fldiv@b+2,?___fldiv+2
 22724  017240  C21B  F21B         	movff	___fldiv@b+3,?___fldiv+3
 22725                           
 22726                           ; BSR set to: 2
 22727  017244  0012               	return	
 22728  017246                     l2937:
 22729                           
 22730                           ; BSR set to: 2
 22731                           
 22732                           ; BSR set to: 2
 22733  017246  5130               	movf	___fldiv@aexp& (0+255),w,b
 22734  017248  6F20               	movwf	??___fldiv& (0+255),b
 22735  01724A  6B21               	clrf	(??___fldiv+1)& (0+255),b
 22736  01724C  1F20               	comf	??___fldiv& (0+255),f,b
 22737  01724E  1F21               	comf	(??___fldiv+1)& (0+255),f,b
 22738  017250  4B20               	infsnz	??___fldiv& (0+255),f,b
 22739  017252  2B21               	incf	(??___fldiv+1)& (0+255),f,b
 22740  017254  512F               	movf	___fldiv@bexp& (0+255),w,b
 22741  017256  6F22               	movwf	(??___fldiv+2)& (0+255),b
 22742  017258  6B23               	clrf	(??___fldiv+3)& (0+255),b
 22743  01725A  5120               	movf	??___fldiv& (0+255),w,b
 22744  01725C  2722               	addwf	(??___fldiv+2)& (0+255),f,b
 22745  01725E  5121               	movf	(??___fldiv+1)& (0+255),w,b
 22746  017260  2323               	addwfc	(??___fldiv+3)& (0+255),f,b
 22747  017262  0E7F               	movlw	127
 22748  017264  2522               	addwf	(??___fldiv+2)& (0+255),w,b
 22749  017266  6F29               	movwf	___fldiv@new_exp& (0+255),b
 22750  017268  0E00               	movlw	0
 22751  01726A  2123               	addwfc	(??___fldiv+3)& (0+255),w,b
 22752  01726C  6F2A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 22753                           
 22754                           ; BSR set to: 2
 22755  01726E  C218  F225         	movff	___fldiv@b,___fldiv@rem
 22756  017272  C219  F226         	movff	___fldiv@b+1,___fldiv@rem+1
 22757  017276  C21A  F227         	movff	___fldiv@b+2,___fldiv@rem+2
 22758  01727A  C21B  F228         	movff	___fldiv@b+3,___fldiv@rem+3
 22759                           
 22760                           ; BSR set to: 2
 22761  01727E  0E00               	movlw	0
 22762  017280  6F18               	movwf	___fldiv@b& (0+255),b
 22763  017282  0E00               	movlw	0
 22764  017284  6F19               	movwf	(___fldiv@b+1)& (0+255),b
 22765  017286  0E00               	movlw	0
 22766  017288  6F1A               	movwf	(___fldiv@b+2)& (0+255),b
 22767  01728A  0E00               	movlw	0
 22768  01728C  6F1B               	movwf	(___fldiv@b+3)& (0+255),b
 22769                           
 22770                           ; BSR set to: 2
 22771  01728E  0E00               	movlw	0
 22772  017290  6F2B               	movwf	___fldiv@grs& (0+255),b
 22773  017292  0E00               	movlw	0
 22774  017294  6F2C               	movwf	(___fldiv@grs+1)& (0+255),b
 22775  017296  0E00               	movlw	0
 22776  017298  6F2D               	movwf	(___fldiv@grs+2)& (0+255),b
 22777  01729A  0E00               	movlw	0
 22778  01729C  6F2E               	movwf	(___fldiv@grs+3)& (0+255),b
 22779                           
 22780                           ; BSR set to: 2
 22781  01729E  0E00               	movlw	0
 22782  0172A0  6F30               	movwf	___fldiv@aexp& (0+255),b
 22783  0172A2  D028               	goto	l2938
 22784  0172A4                     
 22785                           ; BSR set to: 2
 22786                           
 22787                           ; BSR set to: 2
 22788  0172A4  5130               	movf	___fldiv@aexp& (0+255),w,b
 22789  0172A6  B4D8               	btfsc	status,2,c
 22790  0172A8  D011               	goto	l2940
 22791                           
 22792                           ; BSR set to: 2
 22793  0172AA  90D8               	bcf	status,0,c
 22794  0172AC  3725               	rlcf	___fldiv@rem& (0+255),f,b
 22795  0172AE  3726               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 22796  0172B0  3727               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 22797  0172B2  3728               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 22798  0172B4  90D8               	bcf	status,0,c
 22799  0172B6  3718               	rlcf	___fldiv@b& (0+255),f,b
 22800  0172B8  3719               	rlcf	(___fldiv@b+1)& (0+255),f,b
 22801  0172BA  371A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 22802  0172BC  371B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 22803                           
 22804                           ; BSR set to: 2
 22805  0172BE  BF2E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 22806                           
 22807                           ; BSR set to: 2
 22808  0172C0  8118               	bsf	___fldiv@b& (0+255),0,b
 22809                           
 22810                           ; BSR set to: 2
 22811  0172C2  90D8               	bcf	status,0,c
 22812  0172C4  372B               	rlcf	___fldiv@grs& (0+255),f,b
 22813  0172C6  372C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 22814  0172C8  372D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 22815  0172CA  372E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 22816  0172CC                     l2940:
 22817                           
 22818                           ; BSR set to: 2
 22819                           
 22820                           ; BSR set to: 2
 22821  0172CC  511C               	movf	___fldiv@a& (0+255),w,b
 22822  0172CE  5D25               	subwf	___fldiv@rem& (0+255),w,b
 22823  0172D0  511D               	movf	(___fldiv@a+1)& (0+255),w,b
 22824  0172D2  5926               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 22825  0172D4  511E               	movf	(___fldiv@a+2)& (0+255),w,b
 22826  0172D6  5927               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 22827  0172D8  511F               	movf	(___fldiv@a+3)& (0+255),w,b
 22828  0172DA  5928               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 22829  0172DC  A0D8               	btfss	status,0,c
 22830  0172DE  D009               	goto	l2942
 22831                           
 22832                           ; BSR set to: 2
 22833  0172E0  8D2E               	bsf	(___fldiv@grs+3)& (0+255),6,b
 22834                           
 22835                           ; BSR set to: 2
 22836  0172E2  511C               	movf	___fldiv@a& (0+255),w,b
 22837  0172E4  5F25               	subwf	___fldiv@rem& (0+255),f,b
 22838  0172E6  511D               	movf	(___fldiv@a+1)& (0+255),w,b
 22839  0172E8  5B26               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 22840  0172EA  511E               	movf	(___fldiv@a+2)& (0+255),w,b
 22841  0172EC  5B27               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 22842  0172EE  511F               	movf	(___fldiv@a+3)& (0+255),w,b
 22843  0172F0  5B28               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 22844  0172F2                     l2942:
 22845                           
 22846                           ; BSR set to: 2
 22847                           
 22848                           ; BSR set to: 2
 22849  0172F2  2B30               	incf	___fldiv@aexp& (0+255),f,b
 22850  0172F4                     l2938:
 22851                           
 22852                           ; BSR set to: 2
 22853  0172F4  0E19               	movlw	25
 22854  0172F6  6530               	cpfsgt	___fldiv@aexp& (0+255),b
 22855  0172F8  D7D5               	goto	l2939
 22856                           
 22857                           ; BSR set to: 2
 22858                           
 22859                           ; BSR set to: 2
 22860  0172FA  5125               	movf	___fldiv@rem& (0+255),w,b
 22861  0172FC  1126               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 22862  0172FE  1127               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 22863  017300  1128               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 22864  017302  B4D8               	btfsc	status,2,c
 22865  017304  D011               	goto	l2945
 22866                           
 22867                           ; BSR set to: 2
 22868  017306  812B               	bsf	___fldiv@grs& (0+255),0,b
 22869                           
 22870                           ; BSR set to: 2
 22871  017308  D00F               	goto	l2945
 22872  01730A                     
 22873                           ; BSR set to: 2
 22874                           
 22875                           ; BSR set to: 2
 22876  01730A  90D8               	bcf	status,0,c
 22877  01730C  3718               	rlcf	___fldiv@b& (0+255),f,b
 22878  01730E  3719               	rlcf	(___fldiv@b+1)& (0+255),f,b
 22879  017310  371A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 22880  017312  371B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 22881                           
 22882                           ; BSR set to: 2
 22883  017314  BF2E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 22884                           
 22885                           ; BSR set to: 2
 22886  017316  8118               	bsf	___fldiv@b& (0+255),0,b
 22887                           
 22888                           ; BSR set to: 2
 22889  017318  90D8               	bcf	status,0,c
 22890  01731A  372B               	rlcf	___fldiv@grs& (0+255),f,b
 22891  01731C  372C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 22892  01731E  372D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 22893  017320  372E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 22894  017322  0729               	decf	___fldiv@new_exp& (0+255),f,b
 22895  017324  A0D8               	btfss	status,0,c
 22896  017326  072A               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 22897  017328                     l2945:
 22898                           
 22899                           ; BSR set to: 2
 22900                           
 22901                           ; BSR set to: 2
 22902  017328  AF1A               	btfss	(___fldiv@b+2)& (0+255),7,b
 22903  01732A  D7EF               	goto	l2946
 22904                           
 22905                           ; BSR set to: 2
 22906                           
 22907                           ; BSR set to: 2
 22908  01732C  0E00               	movlw	0
 22909  01732E  6F30               	movwf	___fldiv@aexp& (0+255),b
 22910                           
 22911                           ; BSR set to: 2
 22912  017330  AF2E               	btfss	(___fldiv@grs+3)& (0+255),7,b
 22913  017332  D016               	goto	l2952
 22914                           
 22915                           ; BSR set to: 2
 22916  017334  0EFF               	movlw	255
 22917  017336  152B               	andwf	___fldiv@grs& (0+255),w,b
 22918  017338  6F20               	movwf	??___fldiv& (0+255),b
 22919  01733A  0EFF               	movlw	255
 22920  01733C  152C               	andwf	(___fldiv@grs+1)& (0+255),w,b
 22921  01733E  6F21               	movwf	(??___fldiv+1)& (0+255),b
 22922  017340  0EFF               	movlw	255
 22923  017342  152D               	andwf	(___fldiv@grs+2)& (0+255),w,b
 22924  017344  6F22               	movwf	(??___fldiv+2)& (0+255),b
 22925  017346  0E7F               	movlw	127
 22926  017348  152E               	andwf	(___fldiv@grs+3)& (0+255),w,b
 22927  01734A  6F23               	movwf	(??___fldiv+3)& (0+255),b
 22928  01734C  5120               	movf	??___fldiv& (0+255),w,b
 22929  01734E  1121               	iorwf	(??___fldiv+1)& (0+255),w,b
 22930  017350  1122               	iorwf	(??___fldiv+2)& (0+255),w,b
 22931  017352  1123               	iorwf	(??___fldiv+3)& (0+255),w,b
 22932  017354  A4D8               	btfss	status,2,c
 22933  017356  D002               	goto	u23100
 22934                           
 22935                           ; BSR set to: 2
 22936                           
 22937                           ; BSR set to: 2
 22938  017358  A118               	btfss	___fldiv@b& (0+255),0,b
 22939  01735A  D002               	goto	l2952
 22940  01735C                     u23100:
 22941                           
 22942                           ; BSR set to: 2
 22943  01735C  0E01               	movlw	1
 22944  01735E  6F30               	movwf	___fldiv@aexp& (0+255),b
 22945  017360                     l2952:
 22946                           
 22947                           ; BSR set to: 2
 22948                           
 22949                           ; BSR set to: 2
 22950                           
 22951                           ; BSR set to: 2
 22952  017360  5130               	movf	___fldiv@aexp& (0+255),w,b
 22953  017362  B4D8               	btfsc	status,2,c
 22954  017364  D01F               	goto	l2954
 22955                           
 22956                           ; BSR set to: 2
 22957  017366  0E01               	movlw	1
 22958  017368  2718               	addwf	___fldiv@b& (0+255),f,b
 22959  01736A  0E00               	movlw	0
 22960  01736C  2319               	addwfc	(___fldiv@b+1)& (0+255),f,b
 22961  01736E  231A               	addwfc	(___fldiv@b+2)& (0+255),f,b
 22962  017370  231B               	addwfc	(___fldiv@b+3)& (0+255),f,b
 22963                           
 22964                           ; BSR set to: 2
 22965  017372  A11B               	btfss	(___fldiv@b+3)& (0+255),0,b
 22966  017374  D017               	goto	l2954
 22967                           
 22968                           ; BSR set to: 2
 22969  017376  C218  F220         	movff	___fldiv@b,??___fldiv
 22970  01737A  C219  F221         	movff	___fldiv@b+1,??___fldiv+1
 22971  01737E  C21A  F222         	movff	___fldiv@b+2,??___fldiv+2
 22972  017382  C21B  F223         	movff	___fldiv@b+3,??___fldiv+3
 22973  017386  3523               	rlcf	(??___fldiv+3)& (0+255),w,b
 22974  017388  3323               	rrcf	(??___fldiv+3)& (0+255),f,b
 22975  01738A  3322               	rrcf	(??___fldiv+2)& (0+255),f,b
 22976  01738C  3321               	rrcf	(??___fldiv+1)& (0+255),f,b
 22977  01738E  3320               	rrcf	??___fldiv& (0+255),f,b
 22978  017390  C220  F218         	movff	??___fldiv,___fldiv@b
 22979  017394  C221  F219         	movff	??___fldiv+1,___fldiv@b+1
 22980  017398  C222  F21A         	movff	??___fldiv+2,___fldiv@b+2
 22981  01739C  C223  F21B         	movff	??___fldiv+3,___fldiv@b+3
 22982                           
 22983                           ; BSR set to: 2
 22984  0173A0  4B29               	infsnz	___fldiv@new_exp& (0+255),f,b
 22985  0173A2  2B2A               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 22986  0173A4                     l2954:
 22987                           
 22988                           ; BSR set to: 2
 22989                           
 22990                           ; BSR set to: 2
 22991                           
 22992                           ; BSR set to: 2
 22993  0173A4  BF2A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 22994  0173A6  D010               	goto	l2955
 22995  0173A8  512A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 22996  0173AA  E103               	bnz	u23130
 22997  0173AC  2929               	incf	___fldiv@new_exp& (0+255),w,b
 22998  0173AE  A0D8               	btfss	status,0,c
 22999  0173B0  D00B               	goto	l2955
 23000  0173B2                     u23130:
 23001                           
 23002                           ; BSR set to: 2
 23003  0173B2  0E00               	movlw	0
 23004  0173B4  6F2A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 23005  0173B6  6929               	setf	___fldiv@new_exp& (0+255),b
 23006  0173B8  0E00               	movlw	0
 23007  0173BA  6F18               	movwf	___fldiv@b& (0+255),b
 23008  0173BC  0E00               	movlw	0
 23009  0173BE  6F19               	movwf	(___fldiv@b+1)& (0+255),b
 23010  0173C0  0E00               	movlw	0
 23011  0173C2  6F1A               	movwf	(___fldiv@b+2)& (0+255),b
 23012  0173C4  0E00               	movlw	0
 23013  0173C6  6F1B               	movwf	(___fldiv@b+3)& (0+255),b
 23014  0173C8                     l2955:
 23015                           
 23016                           ; BSR set to: 2
 23017                           
 23018                           ; BSR set to: 2
 23019  0173C8  BF2A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 23020  0173CA  D005               	goto	u23140
 23021  0173CC  512A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 23022  0173CE  E111               	bnz	l18143
 23023  0173D0  0529               	decf	___fldiv@new_exp& (0+255),w,b
 23024  0173D2  B0D8               	btfsc	status,0,c
 23025  0173D4  D00E               	goto	l2956
 23026  0173D6                     u23140:
 23027                           
 23028                           ; BSR set to: 2
 23029  0173D6  0E00               	movlw	0
 23030  0173D8  6F2A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 23031  0173DA  0E00               	movlw	0
 23032  0173DC  6F29               	movwf	___fldiv@new_exp& (0+255),b
 23033  0173DE  0E00               	movlw	0
 23034  0173E0  6F18               	movwf	___fldiv@b& (0+255),b
 23035  0173E2  0E00               	movlw	0
 23036  0173E4  6F19               	movwf	(___fldiv@b+1)& (0+255),b
 23037  0173E6  0E00               	movlw	0
 23038  0173E8  6F1A               	movwf	(___fldiv@b+2)& (0+255),b
 23039  0173EA  0E00               	movlw	0
 23040  0173EC  6F1B               	movwf	(___fldiv@b+3)& (0+255),b
 23041  0173EE  0E00               	movlw	0
 23042  0173F0  6F24               	movwf	___fldiv@sign& (0+255),b
 23043  0173F2                     l2956:
 23044  0173F2                     l18143:
 23045                           
 23046                           ; BSR set to: 2
 23047  0173F2  C229  F22F         	movff	___fldiv@new_exp,___fldiv@bexp
 23048                           
 23049                           ; BSR set to: 2
 23050  0173F6  A12F               	btfss	___fldiv@bexp& (0+255),0,b
 23051  0173F8  D002               	goto	l2957
 23052                           
 23053                           ; BSR set to: 2
 23054  0173FA  8F1A               	bsf	(___fldiv@b+2)& (0+255),7,b
 23055  0173FC  D001               	goto	l2958
 23056  0173FE                     l2957:
 23057                           
 23058                           ; BSR set to: 2
 23059                           
 23060                           ; BSR set to: 2
 23061  0173FE  9F1A               	bcf	(___fldiv@b+2)& (0+255),7,b
 23062  017400                     l2958:
 23063                           
 23064                           ; BSR set to: 2
 23065                           
 23066                           ; BSR set to: 2
 23067  017400  90D8               	bcf	status,0,c
 23068  017402  312F               	rrcf	___fldiv@bexp& (0+255),w,b
 23069  017404  6F1B               	movwf	(___fldiv@b+3)& (0+255),b
 23070                           
 23071                           ; BSR set to: 2
 23072  017406  5124               	movf	___fldiv@sign& (0+255),w,b
 23073  017408  131B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 23074                           
 23075                           ; BSR set to: 2
 23076  01740A  C218  F218         	movff	___fldiv@b,?___fldiv
 23077  01740E  C219  F219         	movff	___fldiv@b+1,?___fldiv+1
 23078  017412  C21A  F21A         	movff	___fldiv@b+2,?___fldiv+2
 23079  017416  C21B  F21B         	movff	___fldiv@b+3,?___fldiv+3
 23080  01741A  0012               	return	
 23081  01741C                     __end_of___fldiv:
 23082                           	opt stack 0
 23083                           tblptru	equ	0xFF8
 23084                           tblptrh	equ	0xFF7
 23085                           tblptrl	equ	0xFF6
 23086                           tablat	equ	0xFF5
 23087                           prodh	equ	0xFF4
 23088                           prodl	equ	0xFF3
 23089                           intcon	equ	0xFF2
 23090                           indf0	equ	0xFEF
 23091                           postinc0	equ	0xFEE
 23092                           fsr0h	equ	0xFEA
 23093                           fsr0l	equ	0xFE9
 23094                           wreg	equ	0xFE8
 23095                           indf1	equ	0xFE7
 23096                           postdec1	equ	0xFE5
 23097                           fsr1h	equ	0xFE2
 23098                           fsr1l	equ	0xFE1
 23099                           indf2	equ	0xFDF
 23100                           postinc2	equ	0xFDE
 23101                           postdec2	equ	0xFDD
 23102                           fsr2h	equ	0xFDA
 23103                           fsr2l	equ	0xFD9
 23104                           status	equ	0xFD8
 23105                           
 23106 ;; *************** function _TMR5_StopTimer *****************
 23107 ;; Defined at:
 23108 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 23109 ;; Parameters:    Size  Location     Type
 23110 ;;		None
 23111 ;; Auto vars:     Size  Location     Type
 23112 ;;		None
 23113 ;; Return value:  Size  Location     Type
 23114 ;;                  1    wreg      void 
 23115 ;; Registers used:
 23116 ;;		None
 23117 ;; Tracked objects:
 23118 ;;		On entry : 0/0
 23119 ;;		On exit  : 0/0
 23120 ;;		Unchanged: 0/0
 23121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23126 ;;Total ram usage:        0 bytes
 23127 ;; Hardware stack levels used:    1
 23128 ;; Hardware stack levels required when called:   19
 23129 ;; This function calls:
 23130 ;;		Nothing
 23131 ;; This function is called by:
 23132 ;;		_main
 23133 ;;		_ringBufferLUT
 23134 ;; This function uses a non-reentrant model
 23135 ;;
 23136                           
 23137                           	psect	text23
 23138  01C016                     __ptext23:
 23139                           	opt stack 0
 23140  01C016                     _TMR5_StopTimer:
 23141                           	opt stack 9
 23142                           
 23143                           ;tmr5.c: 108: T5CONbits.TMR5ON = 0;
 23144                           
 23145                           ; BSR set to: 2
 23146                           ;incstack = 0
 23147  01C016  90C3               	bcf	4035,0,c	;volatile
 23148  01C018  0012               	return		;funcret
 23149  01C01A                     __end_of_TMR5_StopTimer:
 23150                           	opt stack 0
 23151                           tblptru	equ	0xFF8
 23152                           tblptrh	equ	0xFF7
 23153                           tblptrl	equ	0xFF6
 23154                           tablat	equ	0xFF5
 23155                           prodh	equ	0xFF4
 23156                           prodl	equ	0xFF3
 23157                           intcon	equ	0xFF2
 23158                           indf0	equ	0xFEF
 23159                           postinc0	equ	0xFEE
 23160                           fsr0h	equ	0xFEA
 23161                           fsr0l	equ	0xFE9
 23162                           wreg	equ	0xFE8
 23163                           indf1	equ	0xFE7
 23164                           postdec1	equ	0xFE5
 23165                           fsr1h	equ	0xFE2
 23166                           fsr1l	equ	0xFE1
 23167                           indf2	equ	0xFDF
 23168                           postinc2	equ	0xFDE
 23169                           postdec2	equ	0xFDD
 23170                           fsr2h	equ	0xFDA
 23171                           fsr2l	equ	0xFD9
 23172                           status	equ	0xFD8
 23173                           
 23174 ;; *************** function _OLED_updateCallback *****************
 23175 ;; Defined at:
 23176 ;;		line 472 in file "main.c"
 23177 ;; Parameters:    Size  Location     Type
 23178 ;;		None
 23179 ;; Auto vars:     Size  Location     Type
 23180 ;;  dev_id_str     16   21[BANK2 ] unsigned char [16]
 23181 ;;  rev_id_str      5   37[BANK2 ] unsigned char [5]
 23182 ;; Return value:  Size  Location     Type
 23183 ;;                  1    wreg      void 
 23184 ;; Registers used:
 23185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23186 ;; Tracked objects:
 23187 ;;		On entry : 0/0
 23188 ;;		On exit  : 0/0
 23189 ;;		Unchanged: 0/0
 23190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23192 ;;      Locals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0       0
 23193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23194 ;;      Totals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0       0
 23195 ;;Total ram usage:       21 bytes
 23196 ;; Hardware stack levels used:    1
 23197 ;; Hardware stack levels required when called:   25
 23198 ;; This function calls:
 23199 ;;		_OLED_UpdateFromRAMBuffer
 23200 ;;		_getCauseOfResetStringSmall
 23201 ;;		_getDeviceID
 23202 ;;		_getDeviceIDString
 23203 ;;		_getMajorRevisionID
 23204 ;;		_getMinorRevisionID
 23205 ;;		_strcpy
 23206 ;; This function is called by:
 23207 ;;		_main
 23208 ;;		_ringBufferLUT
 23209 ;;		_TMR2_CallBack
 23210 ;; This function uses a non-reentrant model
 23211 ;;
 23212                           
 23213                           	psect	text24
 23214  01797E                     __ptext24:
 23215                           	opt stack 0
 23216  01797E                     _OLED_updateCallback:
 23217                           	opt stack 0
 23218                           
 23219                           ;Skip over the trampoline to the duplicate function for level 1
 23220  01797E  B05F               	btfsc	btemp,0,c
 23221  017980  EF07  F0BE         	goto	i1_OLED_updateCallback
 23222  017984                     _OLED_updateCallback$intlevel0:
 23223                           	opt stack 3
 23224                           
 23225                           ;main.c: 474: switch (OLED_Frame) {
 23226                           
 23227                           ;incstack = 0
 23228  017984  D11F               	goto	l1411
 23229  017986                     
 23230                           ;main.c: 478: strcpy(OLED_RAM_Buffer.line0, "AC Power Meter");
 23231  017986  0E40               	movlw	low _OLED_RAM_Buffer
 23232  017988  0102               	movlb	2	; () banked
 23233  01798A  6F06               	movwf	strcpy@to& (0+255),b
 23234  01798C  0E03               	movlw	high _OLED_RAM_Buffer
 23235  01798E  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23236  017990  0EAA               	movlw	low STR_2
 23237  017992  6F08               	movwf	strcpy@from& (0+255),b
 23238  017994  0EFD               	movlw	high STR_2
 23239  017996  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23240  017998  ECC5  F0D8         	call	_strcpy	;wreg free
 23241                           
 23242                           ;main.c: 479: strcpy(OLED_RAM_Buffer.line1, "ELEN 3035");
 23243  01799C  0E51               	movlw	low (_OLED_RAM_Buffer+17)
 23244  01799E  0102               	movlb	2	; () banked
 23245  0179A0  6F06               	movwf	strcpy@to& (0+255),b
 23246  0179A2  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 23247  0179A4  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23248  0179A6  0E78               	movlw	low STR_3
 23249  0179A8  6F08               	movwf	strcpy@from& (0+255),b
 23250  0179AA  0EFF               	movlw	high STR_3
 23251  0179AC  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23252  0179AE  ECC5  F0D8         	call	_strcpy	;wreg free
 23253                           
 23254                           ;main.c: 480: strcpy(OLED_RAM_Buffer.line2, "Final Project");
 23255  0179B2  0E62               	movlw	low (_OLED_RAM_Buffer+34)
 23256  0179B4  0102               	movlb	2	; () banked
 23257  0179B6  6F06               	movwf	strcpy@to& (0+255),b
 23258  0179B8  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 23259  0179BA  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23260  0179BC  0E0D               	movlw	low STR_4
 23261  0179BE  6F08               	movwf	strcpy@from& (0+255),b
 23262  0179C0  0EFE               	movlw	high STR_4
 23263  0179C2  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23264  0179C4  ECC5  F0D8         	call	_strcpy	;wreg free
 23265                           
 23266                           ;main.c: 481: strcpy(OLED_RAM_Buffer.line3, getCauseOfResetStringSmall(reset_cause));
 23267  0179C8  0E73               	movlw	low (_OLED_RAM_Buffer+51)
 23268  0179CA  0102               	movlb	2	; () banked
 23269  0179CC  6F06               	movwf	strcpy@to& (0+255),b
 23270  0179CE  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 23271  0179D0  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23272  0179D2  51FE               	movf	_reset_cause& (0+255),w,b
 23273  0179D4  EC9D  F0DC         	call	_getCauseOfResetStringSmall
 23274  0179D8  C14F  F208         	movff	?_getCauseOfResetStringSmall,strcpy@from
 23275  0179DC  C150  F209         	movff	?_getCauseOfResetStringSmall+1,strcpy@from+1
 23276  0179E0  ECC5  F0D8         	call	_strcpy	;wreg free
 23277                           
 23278                           ;main.c: 482: OLED_UpdateFromRAMBuffer();
 23279  0179E4  ECEB  F0D2         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 23280                           
 23281                           ;main.c: 483: OLED_Frame = Boot_Frame_2;
 23282  0179E8  0E01               	movlw	1
 23283  0179EA  0101               	movlb	1	; () banked
 23284  0179EC  6F9D               	movwf	_OLED_Frame& (0+255),b
 23285                           
 23286                           ;main.c: 484: break;
 23287  0179EE  0012               	return	
 23288  0179F0                     
 23289                           ; BSR set to: 1
 23290                           ;main.c: 489: strcpy(OLED_RAM_Buffer.line0, "Device ID:");
 23291                           
 23292                           ; BSR set to: 1
 23293  0179F0  0E40               	movlw	low _OLED_RAM_Buffer
 23294  0179F2  0102               	movlb	2	; () banked
 23295  0179F4  6F06               	movwf	strcpy@to& (0+255),b
 23296  0179F6  0E03               	movlw	high _OLED_RAM_Buffer
 23297  0179F8  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23298  0179FA  0E3B               	movlw	low STR_5
 23299  0179FC  6F08               	movwf	strcpy@from& (0+255),b
 23300  0179FE  0EFF               	movlw	high STR_5
 23301  017A00  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23302  017A02  ECC5  F0D8         	call	_strcpy	;wreg free
 23303                           
 23304                           ;main.c: 490: char dev_id_str[16];
 23305                           ;main.c: 491: strcpy(dev_id_str, getDeviceIDString(getDeviceID()));
 23306  017A06  0E15               	movlw	low OLED_updateCallback@dev_id_str
 23307  017A08  0102               	movlb	2	; () banked
 23308  017A0A  6F06               	movwf	strcpy@to& (0+255),b
 23309  017A0C  0E02               	movlw	high OLED_updateCallback@dev_id_str
 23310  017A0E  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23311  017A10  EC59  F0DE         	call	_getDeviceID	;wreg free
 23312  017A14  C15A  F15C         	movff	?_getDeviceID,getDeviceIDString@inputDevID
 23313  017A18  C15B  F15D         	movff	?_getDeviceID+1,getDeviceIDString@inputDevID+1
 23314  017A1C  ECBC  F0D5         	call	_getDeviceIDString	;wreg free
 23315  017A20  C15C  F208         	movff	?_getDeviceIDString,strcpy@from
 23316  017A24  C15D  F209         	movff	?_getDeviceIDString+1,strcpy@from+1
 23317  017A28  ECC5  F0D8         	call	_strcpy	;wreg free
 23318                           
 23319                           ;main.c: 492: strcpy(OLED_RAM_Buffer.line1, dev_id_str);
 23320  017A2C  0E51               	movlw	low (_OLED_RAM_Buffer+17)
 23321  017A2E  0102               	movlb	2	; () banked
 23322  017A30  6F06               	movwf	strcpy@to& (0+255),b
 23323  017A32  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 23324  017A34  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23325  017A36  0E15               	movlw	low OLED_updateCallback@dev_id_str
 23326  017A38  6F08               	movwf	strcpy@from& (0+255),b
 23327  017A3A  0E02               	movlw	high OLED_updateCallback@dev_id_str
 23328  017A3C  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23329  017A3E  ECC5  F0D8         	call	_strcpy	;wreg free
 23330                           
 23331                           ;main.c: 495: strcpy(OLED_RAM_Buffer.line2, "Revision ID:");
 23332  017A42  0E62               	movlw	low (_OLED_RAM_Buffer+34)
 23333  017A44  0102               	movlb	2	; () banked
 23334  017A46  6F06               	movwf	strcpy@to& (0+255),b
 23335  017A48  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 23336  017A4A  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23337  017A4C  0E83               	movlw	low STR_6
 23338  017A4E  6F08               	movwf	strcpy@from& (0+255),b
 23339  017A50  0EFE               	movlw	high STR_6
 23340  017A52  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23341  017A54  ECC5  F0D8         	call	_strcpy	;wreg free
 23342                           
 23343                           ;main.c: 497: char rev_id_str[5];
 23344                           ;main.c: 498: rev_id_str[0] = (char) getMajorRevisionID() + 65;
 23345  017A58  ECFD  F0DA         	call	_getMajorRevisionID	;wreg free
 23346  017A5C  0F41               	addlw	65
 23347  017A5E  0102               	movlb	2	; () banked
 23348  017A60  6F25               	movwf	OLED_updateCallback@rev_id_str& (0+255),b
 23349                           
 23350                           ; BSR set to: 2
 23351                           ;main.c: 499: rev_id_str[1] = '0';
 23352  017A62  0E30               	movlw	48
 23353  017A64  6F26               	movwf	(OLED_updateCallback@rev_id_str+1)& (0+255),b
 23354                           
 23355                           ; BSR set to: 2
 23356                           ;main.c: 500: rev_id_str[2] = '0';
 23357  017A66  0E30               	movlw	48
 23358  017A68  6F27               	movwf	(OLED_updateCallback@rev_id_str+2)& (0+255),b
 23359                           
 23360                           ; BSR set to: 2
 23361                           ;main.c: 501: rev_id_str[3] = getMinorRevisionID() + 48;
 23362  017A6A  EC7D  F0DD         	call	_getMinorRevisionID	;wreg free
 23363  017A6E  0F30               	addlw	48
 23364  017A70  0102               	movlb	2	; () banked
 23365  017A72  6F28               	movwf	(OLED_updateCallback@rev_id_str+3)& (0+255),b
 23366                           
 23367                           ; BSR set to: 2
 23368                           ;main.c: 502: rev_id_str[4] = '\0';
 23369  017A74  0E00               	movlw	0
 23370  017A76  6F29               	movwf	(OLED_updateCallback@rev_id_str+4)& (0+255),b
 23371                           
 23372                           ; BSR set to: 2
 23373                           ;main.c: 503: strcpy(OLED_RAM_Buffer.line3, rev_id_str);
 23374  017A78  0E73               	movlw	low (_OLED_RAM_Buffer+51)
 23375  017A7A  6F06               	movwf	strcpy@to& (0+255),b
 23376  017A7C  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 23377  017A7E  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23378  017A80  0E25               	movlw	low OLED_updateCallback@rev_id_str
 23379  017A82  6F08               	movwf	strcpy@from& (0+255),b
 23380  017A84  0E02               	movlw	high OLED_updateCallback@rev_id_str
 23381  017A86  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23382  017A88  ECC5  F0D8         	call	_strcpy	;wreg free
 23383                           
 23384                           ;main.c: 505: OLED_UpdateFromRAMBuffer();
 23385  017A8C  ECEB  F0D2         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 23386                           
 23387                           ;main.c: 506: OLED_Frame = Boot_Frame_3;
 23388  017A90  0E02               	movlw	2
 23389  017A92  0101               	movlb	1	; () banked
 23390  017A94  6F9D               	movwf	_OLED_Frame& (0+255),b
 23391                           
 23392                           ;main.c: 507: break;
 23393  017A96  0012               	return	
 23394  017A98                     
 23395                           ; BSR set to: 1
 23396                           ;main.c: 510: strcpy(OLED_RAM_Buffer.line0, "COM Port Setup:");
 23397                           
 23398                           ; BSR set to: 1
 23399  017A98  0E40               	movlw	low _OLED_RAM_Buffer
 23400  017A9A  0102               	movlb	2	; () banked
 23401  017A9C  6F06               	movwf	strcpy@to& (0+255),b
 23402  017A9E  0E03               	movlw	high _OLED_RAM_Buffer
 23403  017AA0  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23404  017AA2  0E30               	movlw	low STR_7
 23405  017AA4  6F08               	movwf	strcpy@from& (0+255),b
 23406  017AA6  0EFD               	movlw	high STR_7
 23407  017AA8  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23408  017AAA  ECC5  F0D8         	call	_strcpy	;wreg free
 23409                           
 23410                           ;main.c: 511: strcpy(OLED_RAM_Buffer.line1, "115.2 kbs");
 23411  017AAE  0E51               	movlw	low (_OLED_RAM_Buffer+17)
 23412  017AB0  0102               	movlb	2	; () banked
 23413  017AB2  6F06               	movwf	strcpy@to& (0+255),b
 23414  017AB4  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 23415  017AB6  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23416  017AB8  0E82               	movlw	low STR_8
 23417  017ABA  6F08               	movwf	strcpy@from& (0+255),b
 23418  017ABC  0EFF               	movlw	high STR_8
 23419  017ABE  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23420  017AC0  ECC5  F0D8         	call	_strcpy	;wreg free
 23421                           
 23422                           ;main.c: 512: strcpy(OLED_RAM_Buffer.line2, "8bit, no parity");
 23423  017AC4  0E62               	movlw	low (_OLED_RAM_Buffer+34)
 23424  017AC6  0102               	movlb	2	; () banked
 23425  017AC8  6F06               	movwf	strcpy@to& (0+255),b
 23426  017ACA  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 23427  017ACC  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23428  017ACE  0E40               	movlw	low STR_9
 23429  017AD0  6F08               	movwf	strcpy@from& (0+255),b
 23430  017AD2  0EFD               	movlw	high STR_9
 23431  017AD4  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23432  017AD6  ECC5  F0D8         	call	_strcpy	;wreg free
 23433                           
 23434                           ;main.c: 513: strcpy(OLED_RAM_Buffer.line3, "1 stp, no flow ctrl");
 23435  017ADA  0E73               	movlw	low (_OLED_RAM_Buffer+51)
 23436  017ADC  0102               	movlb	2	; () banked
 23437  017ADE  6F06               	movwf	strcpy@to& (0+255),b
 23438  017AE0  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 23439  017AE2  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23440  017AE4  0EDA               	movlw	low STR_10
 23441  017AE6  6F08               	movwf	strcpy@from& (0+255),b
 23442  017AE8  0EFB               	movlw	high STR_10
 23443  017AEA  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23444  017AEC  ECC5  F0D8         	call	_strcpy	;wreg free
 23445                           
 23446                           ;main.c: 515: OLED_UpdateFromRAMBuffer();
 23447  017AF0  ECEB  F0D2         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 23448                           
 23449                           ;main.c: 516: OLED_Frame = Boot_Frame_4;;
 23450  017AF4  0E03               	movlw	3
 23451  017AF6  0101               	movlb	1	; () banked
 23452  017AF8  6F9D               	movwf	_OLED_Frame& (0+255),b
 23453                           
 23454                           ;main.c: 517: break;
 23455  017AFA  0012               	return	
 23456  017AFC                     
 23457                           ; BSR set to: 1
 23458                           ;main.c: 520: strcpy(OLED_RAM_Buffer.line0, "Boot Complete");
 23459                           
 23460                           ; BSR set to: 1
 23461  017AFC  0E40               	movlw	low _OLED_RAM_Buffer
 23462  017AFE  0102               	movlb	2	; () banked
 23463  017B00  6F06               	movwf	strcpy@to& (0+255),b
 23464  017B02  0E03               	movlw	high _OLED_RAM_Buffer
 23465  017B04  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23466  017B06  0EFF               	movlw	low STR_11
 23467  017B08  6F08               	movwf	strcpy@from& (0+255),b
 23468  017B0A  0EFD               	movlw	high STR_11
 23469  017B0C  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23470  017B0E  ECC5  F0D8         	call	_strcpy	;wreg free
 23471                           
 23472                           ;main.c: 521: strcpy(OLED_RAM_Buffer.line1, "Ready");
 23473  017B12  0E51               	movlw	low (_OLED_RAM_Buffer+17)
 23474  017B14  0102               	movlb	2	; () banked
 23475  017B16  6F06               	movwf	strcpy@to& (0+255),b
 23476  017B18  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 23477  017B1A  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23478  017B1C  0EA8               	movlw	low STR_12
 23479  017B1E  6F08               	movwf	strcpy@from& (0+255),b
 23480  017B20  0EFF               	movlw	high STR_12
 23481  017B22  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23482  017B24  ECC5  F0D8         	call	_strcpy	;wreg free
 23483                           
 23484                           ;main.c: 522: strcpy(OLED_RAM_Buffer.line2, "Load Disabled");
 23485  017B28  0E62               	movlw	low (_OLED_RAM_Buffer+34)
 23486  017B2A  0102               	movlb	2	; () banked
 23487  017B2C  6F06               	movwf	strcpy@to& (0+255),b
 23488  017B2E  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 23489  017B30  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23490  017B32  0EF1               	movlw	low STR_13
 23491  017B34  6F08               	movwf	strcpy@from& (0+255),b
 23492  017B36  0EFD               	movlw	high STR_13
 23493  017B38  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23494  017B3A  ECC5  F0D8         	call	_strcpy	;wreg free
 23495                           
 23496                           ;main.c: 523: strcpy(OLED_RAM_Buffer.line3, " ");
 23497  017B3E  0E73               	movlw	low (_OLED_RAM_Buffer+51)
 23498  017B40  0102               	movlb	2	; () banked
 23499  017B42  6F06               	movwf	strcpy@to& (0+255),b
 23500  017B44  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 23501  017B46  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23502  017B48  0E29               	movlw	low (STR_141+23)
 23503  017B4A  6F08               	movwf	strcpy@from& (0+255),b
 23504  017B4C  0EFB               	movlw	high (STR_141+23)
 23505  017B4E  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23506  017B50  ECC5  F0D8         	call	_strcpy	;wreg free
 23507                           
 23508                           ;main.c: 525: OLED_UpdateFromRAMBuffer();
 23509  017B54  ECEB  F0D2         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 23510                           
 23511                           ;main.c: 526: OLED_Frame = Idle;
 23512  017B58  0E0B               	movlw	11
 23513  017B5A  0101               	movlb	1	; () banked
 23514  017B5C  6F9D               	movwf	_OLED_Frame& (0+255),b
 23515                           
 23516                           ; BSR set to: 1
 23517                           ;main.c: 534: break;
 23518                           
 23519                           ;main.c: 533: case Max_Values:
 23520                           
 23521                           ; BSR set to: 1
 23522                           ;main.c: 531: break;
 23523                           
 23524                           ;main.c: 530: case Current_Values:
 23525                           
 23526                           ;main.c: 528: break;
 23527  017B5E  0012               	return	
 23528  017B60                     
 23529                           ; BSR set to: 1
 23530                           ;main.c: 537: strcpy(OLED_RAM_Buffer.line0, "Load Enabled");
 23531                           
 23532                           ; BSR set to: 1
 23533  017B60  0E40               	movlw	low _OLED_RAM_Buffer
 23534  017B62  0102               	movlb	2	; () banked
 23535  017B64  6F06               	movwf	strcpy@to& (0+255),b
 23536  017B66  0E03               	movlw	high _OLED_RAM_Buffer
 23537  017B68  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23538  017B6A  0E90               	movlw	low STR_15
 23539  017B6C  6F08               	movwf	strcpy@from& (0+255),b
 23540  017B6E  0EFE               	movlw	high STR_15
 23541  017B70  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23542  017B72  ECC5  F0D8         	call	_strcpy	;wreg free
 23543                           
 23544                           ;main.c: 538: strcpy(OLED_RAM_Buffer.line1, " ");
 23545  017B76  0E51               	movlw	low (_OLED_RAM_Buffer+17)
 23546  017B78  0102               	movlb	2	; () banked
 23547  017B7A  6F06               	movwf	strcpy@to& (0+255),b
 23548  017B7C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 23549  017B7E  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23550  017B80  0E29               	movlw	low (STR_141+23)
 23551  017B82  6F08               	movwf	strcpy@from& (0+255),b
 23552  017B84  0EFB               	movlw	high (STR_141+23)
 23553  017B86  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23554  017B88  ECC5  F0D8         	call	_strcpy	;wreg free
 23555                           
 23556                           ;main.c: 539: strcpy(OLED_RAM_Buffer.line2, " ");
 23557  017B8C  0E62               	movlw	low (_OLED_RAM_Buffer+34)
 23558  017B8E  0102               	movlb	2	; () banked
 23559  017B90  6F06               	movwf	strcpy@to& (0+255),b
 23560  017B92  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 23561  017B94  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23562  017B96  0E29               	movlw	low (STR_141+23)
 23563  017B98  6F08               	movwf	strcpy@from& (0+255),b
 23564  017B9A  0EFB               	movlw	high (STR_141+23)
 23565  017B9C  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23566  017B9E  ECC5  F0D8         	call	_strcpy	;wreg free
 23567                           
 23568                           ;main.c: 540: strcpy(OLED_RAM_Buffer.line3, " ");
 23569  017BA2  0E73               	movlw	low (_OLED_RAM_Buffer+51)
 23570  017BA4  0102               	movlb	2	; () banked
 23571  017BA6  6F06               	movwf	strcpy@to& (0+255),b
 23572  017BA8  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 23573  017BAA  6F07               	movwf	(strcpy@to+1)& (0+255),b
 23574  017BAC  0E29               	movlw	low (STR_141+23)
 23575  017BAE  6F08               	movwf	strcpy@from& (0+255),b
 23576  017BB0  0EFB               	movlw	high (STR_141+23)
 23577  017BB2  6F09               	movwf	(strcpy@from+1)& (0+255),b
 23578  017BB4  ECC5  F0D8         	call	_strcpy	;wreg free
 23579                           
 23580                           ;main.c: 542: OLED_UpdateFromRAMBuffer();
 23581  017BB8  ECEB  F0D2         	call	_OLED_UpdateFromRAMBuffer	;wreg free
 23582                           
 23583                           ;main.c: 544: OLED_Frame = Idle;
 23584  017BBC  0E0B               	movlw	11
 23585  017BBE  0101               	movlb	1	; () banked
 23586  017BC0  6F9D               	movwf	_OLED_Frame& (0+255),b
 23587                           
 23588                           ; BSR set to: 1
 23589                           ;main.c: 566: }
 23590                           
 23591                           ; BSR set to: 1
 23592                           ;main.c: 564: break;
 23593                           
 23594                           ;main.c: 563: default:
 23595                           
 23596                           ; BSR set to: 1
 23597                           ;main.c: 561: break;
 23598                           
 23599                           ;main.c: 560: case Idle:
 23600                           
 23601                           ; BSR set to: 1
 23602                           ;main.c: 558: break;
 23603                           
 23604                           ;main.c: 557: case Dimming_Percentage:
 23605                           
 23606                           ; BSR set to: 1
 23607                           ;main.c: 555: break;
 23608                           
 23609                           ;main.c: 554: case Dimming_Disabled:
 23610                           
 23611                           ; BSR set to: 1
 23612                           ;main.c: 552: break;
 23613                           
 23614                           ;main.c: 551: case Dimming_Enabled:
 23615                           
 23616                           ; BSR set to: 1
 23617                           ;main.c: 549: break;
 23618                           
 23619                           ;main.c: 548: case Load_Disabled:
 23620                           
 23621                           ;main.c: 546: break;
 23622  017BC2  0012               	return	
 23623  017BC4                     l1411:
 23624                           
 23625                           ; BSR set to: 1
 23626  017BC4  0101               	movlb	1	; () banked
 23627  017BC6  519D               	movf	_OLED_Frame& (0+255),w,b
 23628                           
 23629                           ; Switch size 1, requested type "space"
 23630                           ; Number of cases is 12, Range of values is 0 to 11
 23631                           ; switch strategies available:
 23632                           ; Name         Instructions Cycles
 23633                           ; simple_byte           37    19 (average)
 23634                           ;	Chosen strategy is simple_byte
 23635  017BC8  0A00               	xorlw	0	; case 0
 23636  017BCA  B4D8               	btfsc	status,2,c
 23637  017BCC  D6DC               	goto	l1412
 23638  017BCE  0A01               	xorlw	1	; case 1
 23639  017BD0  B4D8               	btfsc	status,2,c
 23640  017BD2  D70E               	goto	l1414
 23641  017BD4  0A03               	xorlw	3	; case 2
 23642  017BD6  B4D8               	btfsc	status,2,c
 23643  017BD8  D75F               	goto	l1415
 23644  017BDA  0A01               	xorlw	1	; case 3
 23645  017BDC  B4D8               	btfsc	status,2,c
 23646  017BDE  D78E               	goto	l1416
 23647  017BE0  0A07               	xorlw	7	; case 4
 23648  017BE2  B4D8               	btfsc	status,2,c
 23649  017BE4  0012               	return	
 23650  017BE6  0A01               	xorlw	1	; case 5
 23651  017BE8  B4D8               	btfsc	status,2,c
 23652  017BEA  0012               	return	
 23653  017BEC  0A03               	xorlw	3	; case 6
 23654  017BEE  B4D8               	btfsc	status,2,c
 23655  017BF0  D7B7               	goto	l1419
 23656  017BF2  0A01               	xorlw	1	; case 7
 23657  017BF4  B4D8               	btfsc	status,2,c
 23658  017BF6  0012               	return	
 23659  017BF8  0A0F               	xorlw	15	; case 8
 23660  017BFA  B4D8               	btfsc	status,2,c
 23661  017BFC  0012               	return	
 23662  017BFE  0A01               	xorlw	1	; case 9
 23663  017C00  B4D8               	btfsc	status,2,c
 23664  017C02  0012               	return	
 23665  017C04  0A03               	xorlw	3	; case 10
 23666  017C06  B4D8               	btfsc	status,2,c
 23667  017C08  0012               	return	
 23668  017C0A  0A01               	xorlw	1	; case 11
 23669  017C0C  0012               	return	
 23670  017C0E                     __end_of_OLED_updateCallback:
 23671                           	opt stack 0
 23672                           tblptru	equ	0xFF8
 23673                           tblptrh	equ	0xFF7
 23674                           tblptrl	equ	0xFF6
 23675                           tablat	equ	0xFF5
 23676                           prodh	equ	0xFF4
 23677                           prodl	equ	0xFF3
 23678                           intcon	equ	0xFF2
 23679                           indf0	equ	0xFEF
 23680                           postinc0	equ	0xFEE
 23681                           fsr0h	equ	0xFEA
 23682                           fsr0l	equ	0xFE9
 23683                           wreg	equ	0xFE8
 23684                           indf1	equ	0xFE7
 23685                           postdec1	equ	0xFE5
 23686                           fsr1h	equ	0xFE2
 23687                           fsr1l	equ	0xFE1
 23688                           indf2	equ	0xFDF
 23689                           postinc2	equ	0xFDE
 23690                           postdec2	equ	0xFDD
 23691                           fsr2h	equ	0xFDA
 23692                           fsr2l	equ	0xFD9
 23693                           status	equ	0xFD8
 23694                           
 23695 ;; *************** function _strcpy *****************
 23696 ;; Defined at:
 23697 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 23698 ;; Parameters:    Size  Location     Type
 23699 ;;  to              2    6[BANK2 ] PTR unsigned char 
 23700 ;;		 -> OLED_updateCallback@dev_id_str(16), OLED_RAM_Buffer(68), 
 23701 ;;  from            2    8[BANK2 ] PTR const unsigned char 
 23702 ;;		 -> STR_211(10), STR_210(11), STR_209(11), STR_208(15), 
 23703 ;;		 -> STR_207(11), STR_206(10), STR_205(11), STR_204(10), 
 23704 ;;		 -> STR_203(10), STR_202(10), STR_191(10), STR_190(13), 
 23705 ;;		 -> STR_189(12), STR_18(2), STR_17(2), STR_16(2), 
 23706 ;;		 -> STR_15(13), STR_14(2), STR_13(14), STR_12(6), 
 23707 ;;		 -> STR_11(14), STR_10(20), STR_9(16), STR_8(10), 
 23708 ;;		 -> STR_7(16), OLED_updateCallback@rev_id_str(5), STR_6(13), OLED_updateCallback@dev_id_str(16), 
 23709 ;;		 -> STR_5(11), STR_4(14), STR_3(10), STR_2(15), 
 23710 ;; Auto vars:     Size  Location     Type
 23711 ;;  cp              2   10[BANK2 ] PTR unsigned char 
 23712 ;;		 -> OLED_updateCallback@dev_id_str(16), OLED_RAM_Buffer(68), 
 23713 ;; Return value:  Size  Location     Type
 23714 ;;                  2    6[BANK2 ] PTR unsigned char 
 23715 ;; Registers used:
 23716 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 23717 ;; Tracked objects:
 23718 ;;		On entry : 0/0
 23719 ;;		On exit  : 0/0
 23720 ;;		Unchanged: 0/0
 23721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23722 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
 23723 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 23724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23725 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0
 23726 ;;Total ram usage:        6 bytes
 23727 ;; Hardware stack levels used:    1
 23728 ;; Hardware stack levels required when called:   19
 23729 ;; This function calls:
 23730 ;;		Nothing
 23731 ;; This function is called by:
 23732 ;;		_OLED_updateCallback
 23733 ;; This function uses a non-reentrant model
 23734 ;;
 23735                           
 23736                           	psect	text25
 23737  01B18A                     __ptext25:
 23738                           	opt stack 0
 23739  01B18A                     _strcpy:
 23740                           	opt stack 8
 23741                           
 23742                           ; BSR set to: 1
 23743                           ;incstack = 0
 23744  01B18A  C206  F20A         	movff	strcpy@to,strcpy@cp
 23745  01B18E  C207  F20B         	movff	strcpy@to+1,strcpy@cp+1
 23746  01B192  D005               	goto	l3034
 23747  01B194  0102               	movlb	2	; () banked
 23748  01B196  4B0A               	infsnz	strcpy@cp& (0+255),f,b
 23749  01B198  2B0B               	incf	(strcpy@cp+1)& (0+255),f,b
 23750  01B19A  4B08               	infsnz	strcpy@from& (0+255),f,b
 23751  01B19C  2B09               	incf	(strcpy@from+1)& (0+255),f,b
 23752  01B19E                     l3034:
 23753                           
 23754                           ; BSR set to: 2
 23755  01B19E  C208  FFF6         	movff	strcpy@from,tblptrl
 23756  01B1A2  C209  FFF7         	movff	strcpy@from+1,tblptrh
 23757  01B1A6  0E00               	movlw	low (__mediumconst shr (0+16))
 23758  01B1A8  6EF8               	movwf	tblptru,c
 23759  01B1AA  C20A  FFD9         	movff	strcpy@cp,fsr2l
 23760  01B1AE  C20B  FFDA         	movff	strcpy@cp+1,fsr2h
 23761  01B1B2  0E0D               	movlw	(high __ramtop+-1)
 23762  01B1B4  64F7               	cpfsgt	tblptrh,c
 23763  01B1B6  D003               	bra	u22197
 23764  01B1B8  0008               	tblrd		*
 23765  01B1BA  50F5               	movf	tablat,w,c
 23766  01B1BC  D005               	bra	u22190
 23767  01B1BE                     u22197:
 23768  01B1BE  CFF6 FFE9          	movff	tblptrl,fsr0l
 23769  01B1C2  CFF7 FFEA          	movff	tblptrh,fsr0h
 23770  01B1C6  50EF               	movf	indf0,w,c
 23771  01B1C8                     u22190:
 23772  01B1C8  6EDF               	movwf	indf2,c
 23773  01B1CA  50DF               	movf	indf2,w,c
 23774  01B1CC  B4D8               	btfsc	status,2,c
 23775  01B1CE  0012               	return	
 23776  01B1D0  D7E1               	goto	l3035
 23777  01B1D2                     __end_of_strcpy:
 23778                           	opt stack 0
 23779                           tblptru	equ	0xFF8
 23780                           tblptrh	equ	0xFF7
 23781                           tblptrl	equ	0xFF6
 23782                           tablat	equ	0xFF5
 23783                           prodh	equ	0xFF4
 23784                           prodl	equ	0xFF3
 23785                           intcon	equ	0xFF2
 23786                           indf0	equ	0xFEF
 23787                           postinc0	equ	0xFEE
 23788                           fsr0h	equ	0xFEA
 23789                           fsr0l	equ	0xFE9
 23790                           wreg	equ	0xFE8
 23791                           indf1	equ	0xFE7
 23792                           postdec1	equ	0xFE5
 23793                           fsr1h	equ	0xFE2
 23794                           fsr1l	equ	0xFE1
 23795                           indf2	equ	0xFDF
 23796                           postinc2	equ	0xFDE
 23797                           postdec2	equ	0xFDD
 23798                           fsr2h	equ	0xFDA
 23799                           fsr2l	equ	0xFD9
 23800                           status	equ	0xFD8
 23801                           
 23802 ;; *************** function _getMinorRevisionID *****************
 23803 ;; Defined at:
 23804 ;;		line 23 in file "device_IDs.c"
 23805 ;; Parameters:    Size  Location     Type
 23806 ;;		None
 23807 ;; Auto vars:     Size  Location     Type
 23808 ;;  REVID_RAW       2   90[BANK1 ] unsigned int 
 23809 ;; Return value:  Size  Location     Type
 23810 ;;                  1    wreg      unsigned char 
 23811 ;; Registers used:
 23812 ;;		wreg, status,2, status,0, cstack
 23813 ;; Tracked objects:
 23814 ;;		On entry : 0/0
 23815 ;;		On exit  : 0/0
 23816 ;;		Unchanged: 0/0
 23817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23819 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23821 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23822 ;;Total ram usage:        2 bytes
 23823 ;; Hardware stack levels used:    1
 23824 ;; Hardware stack levels required when called:   21
 23825 ;; This function calls:
 23826 ;;		_FLASH_ReadWord
 23827 ;; This function is called by:
 23828 ;;		_OLED_updateCallback
 23829 ;;		_ringBufferLUT
 23830 ;; This function uses a non-reentrant model
 23831 ;;
 23832                           
 23833                           	psect	text26
 23834  01BAFA                     __ptext26:
 23835                           	opt stack 0
 23836  01BAFA                     _getMinorRevisionID:
 23837                           	opt stack 7
 23838                           
 23839                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 23840                           
 23841                           ;incstack = 0
 23842  01BAFA  0EFC               	movlw	252
 23843  01BAFC  0101               	movlb	1	; () banked
 23844  01BAFE  6F53               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 23845  01BB00  0EFF               	movlw	255
 23846  01BB02  6F54               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 23847  01BB04  0E3F               	movlw	63
 23848  01BB06  6F55               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 23849  01BB08  0E00               	movlw	0
 23850  01BB0A  6F56               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 23851  01BB0C  ECBF  F0D9         	call	_FLASH_ReadWord	;wreg free
 23852  01BB10  C153  F15A         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 23853  01BB14  C154  F15B         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 23854                           
 23855                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 23856  01BB18  0101               	movlb	1	; () banked
 23857  01BB1A  515A               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 23858  01BB1C  0B1F               	andlw	31
 23859  01BB1E  0012               	return	
 23860  01BB20                     __end_of_getMinorRevisionID:
 23861                           	opt stack 0
 23862                           tblptru	equ	0xFF8
 23863                           tblptrh	equ	0xFF7
 23864                           tblptrl	equ	0xFF6
 23865                           tablat	equ	0xFF5
 23866                           prodh	equ	0xFF4
 23867                           prodl	equ	0xFF3
 23868                           intcon	equ	0xFF2
 23869                           indf0	equ	0xFEF
 23870                           postinc0	equ	0xFEE
 23871                           fsr0h	equ	0xFEA
 23872                           fsr0l	equ	0xFE9
 23873                           wreg	equ	0xFE8
 23874                           indf1	equ	0xFE7
 23875                           postdec1	equ	0xFE5
 23876                           fsr1h	equ	0xFE2
 23877                           fsr1l	equ	0xFE1
 23878                           indf2	equ	0xFDF
 23879                           postinc2	equ	0xFDE
 23880                           postdec2	equ	0xFDD
 23881                           fsr2h	equ	0xFDA
 23882                           fsr2l	equ	0xFD9
 23883                           status	equ	0xFD8
 23884                           
 23885 ;; *************** function _getMajorRevisionID *****************
 23886 ;; Defined at:
 23887 ;;		line 12 in file "device_IDs.c"
 23888 ;; Parameters:    Size  Location     Type
 23889 ;;		None
 23890 ;; Auto vars:     Size  Location     Type
 23891 ;;  REVID_RAW       2   93[BANK1 ] unsigned int 
 23892 ;; Return value:  Size  Location     Type
 23893 ;;                  1    wreg      unsigned char 
 23894 ;; Registers used:
 23895 ;;		wreg, status,2, status,0, cstack
 23896 ;; Tracked objects:
 23897 ;;		On entry : 0/0
 23898 ;;		On exit  : 0/0
 23899 ;;		Unchanged: 0/0
 23900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23902 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23903 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23904 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23905 ;;Total ram usage:        5 bytes
 23906 ;; Hardware stack levels used:    1
 23907 ;; Hardware stack levels required when called:   21
 23908 ;; This function calls:
 23909 ;;		_FLASH_ReadWord
 23910 ;; This function is called by:
 23911 ;;		_OLED_updateCallback
 23912 ;;		_ringBufferLUT
 23913 ;; This function uses a non-reentrant model
 23914 ;;
 23915                           
 23916                           	psect	text27
 23917  01B5FA                     __ptext27:
 23918                           	opt stack 0
 23919  01B5FA                     _getMajorRevisionID:
 23920                           	opt stack 7
 23921                           
 23922                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 23923                           
 23924                           ; BSR set to: 1
 23925                           ;incstack = 0
 23926  01B5FA  0EFC               	movlw	252
 23927  01B5FC  0101               	movlb	1	; () banked
 23928  01B5FE  6F53               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 23929  01B600  0EFF               	movlw	255
 23930  01B602  6F54               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 23931  01B604  0E3F               	movlw	63
 23932  01B606  6F55               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 23933  01B608  0E00               	movlw	0
 23934  01B60A  6F56               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 23935  01B60C  ECBF  F0D9         	call	_FLASH_ReadWord	;wreg free
 23936  01B610  C153  F15D         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 23937  01B614  C154  F15E         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 23938                           
 23939                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 23940  01B618  C15D  F15A         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 23941  01B61C  C15E  F15B         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 23942  01B620  0E06               	movlw	6
 23943  01B622  0101               	movlb	1	; () banked
 23944  01B624  6F5C               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 23945  01B626                     u22235:
 23946  01B626  90D8               	bcf	status,0,c
 23947  01B628  335B               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 23948  01B62A  335A               	rrcf	??_getMajorRevisionID& (0+255),f,b
 23949  01B62C  2F5C               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 23950  01B62E  D7FB               	goto	u22235
 23951  01B630  515A               	movf	??_getMajorRevisionID& (0+255),w,b
 23952  01B632  0B1F               	andlw	31
 23953  01B634  0012               	return	
 23954  01B636                     __end_of_getMajorRevisionID:
 23955                           	opt stack 0
 23956                           tblptru	equ	0xFF8
 23957                           tblptrh	equ	0xFF7
 23958                           tblptrl	equ	0xFF6
 23959                           tablat	equ	0xFF5
 23960                           prodh	equ	0xFF4
 23961                           prodl	equ	0xFF3
 23962                           intcon	equ	0xFF2
 23963                           indf0	equ	0xFEF
 23964                           postinc0	equ	0xFEE
 23965                           fsr0h	equ	0xFEA
 23966                           fsr0l	equ	0xFE9
 23967                           wreg	equ	0xFE8
 23968                           indf1	equ	0xFE7
 23969                           postdec1	equ	0xFE5
 23970                           fsr1h	equ	0xFE2
 23971                           fsr1l	equ	0xFE1
 23972                           indf2	equ	0xFDF
 23973                           postinc2	equ	0xFDE
 23974                           postdec2	equ	0xFDD
 23975                           fsr2h	equ	0xFDA
 23976                           fsr2l	equ	0xFD9
 23977                           status	equ	0xFD8
 23978                           
 23979 ;; *************** function _getDeviceIDString *****************
 23980 ;; Defined at:
 23981 ;;		line 34 in file "device_IDs.c"
 23982 ;; Parameters:    Size  Location     Type
 23983 ;;  inputDevID      2   92[BANK1 ] unsigned int 
 23984 ;; Auto vars:     Size  Location     Type
 23985 ;;  strings         6    0[BANK2 ] PTR const unsigned char 
 23986 ;;		 -> STR_191(10), STR_190(13), STR_189(12), 
 23987 ;; Return value:  Size  Location     Type
 23988 ;;                  2   92[BANK1 ] PTR inline unsigned char
 23989 ;; Registers used:
 23990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23991 ;; Tracked objects:
 23992 ;;		On entry : 0/0
 23993 ;;		On exit  : 0/0
 23994 ;;		Unchanged: 0/0
 23995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23996 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23997 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0
 23998 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23999 ;;      Totals:         0       0       4       6       0       0       0       0       0       0       0       0       
      +0       0       0
 24000 ;;Total ram usage:       10 bytes
 24001 ;; Hardware stack levels used:    1
 24002 ;; Hardware stack levels required when called:   19
 24003 ;; This function calls:
 24004 ;;		Nothing
 24005 ;; This function is called by:
 24006 ;;		_OLED_updateCallback
 24007 ;;		_ringBufferLUT
 24008 ;; This function uses a non-reentrant model
 24009 ;;
 24010                           
 24011                           	psect	text28
 24012  01AB78                     __ptext28:
 24013                           	opt stack 0
 24014  01AB78                     _getDeviceIDString:
 24015                           	opt stack 9
 24016                           
 24017                           ;device_IDs.c: 37: const char *strings[] = {
 24018                           ;device_IDs.c: 39: "PIC18F67K40",
 24019                           ;device_IDs.c: 40: "PIC18LF67K40",
 24020                           ;device_IDs.c: 41: "Undefined"
 24021                           ;device_IDs.c: 43: };
 24022                           
 24023                           ; BSR set to: 1
 24024                           ;incstack = 0
 24025  01AB78  EE22  F0EE         	lfsr	2,getDeviceIDString@F17550
 24026  01AB7C  EE12  F000         	lfsr	1,getDeviceIDString@strings
 24027  01AB80  0E05               	movlw	5
 24028  01AB82                     u22221:
 24029  01AB82  CFDB FFE3          	movff	plusw2,plusw1
 24030  01AB86  06E8               	decf	wreg,f,c
 24031  01AB88  E2FC               	bc	u22221
 24032                           
 24033                           ;device_IDs.c: 47: switch (inputDevID) {
 24034  01AB8A  D00F               	goto	l1805
 24035  01AB8C                     
 24036                           ;device_IDs.c: 50: return strings[0];
 24037  01AB8C  C200  F15C         	movff	getDeviceIDString@strings,?_getDeviceIDString
 24038  01AB90  C201  F15D         	movff	getDeviceIDString@strings+1,?_getDeviceIDString+1
 24039                           
 24040                           ;device_IDs.c: 51: break;
 24041  01AB94  0012               	return	
 24042  01AB96                     
 24043                           ;device_IDs.c: 54: return strings[1];
 24044  01AB96  C202  F15C         	movff	getDeviceIDString@strings+2,?_getDeviceIDString
 24045  01AB9A  C203  F15D         	movff	getDeviceIDString@strings+3,?_getDeviceIDString+1
 24046                           
 24047                           ;device_IDs.c: 55: break;
 24048  01AB9E  0012               	return	
 24049  01ABA0                     
 24050                           ;device_IDs.c: 58: return strings[2];
 24051  01ABA0  C204  F15C         	movff	getDeviceIDString@strings+4,?_getDeviceIDString
 24052  01ABA4  C205  F15D         	movff	getDeviceIDString@strings+5,?_getDeviceIDString+1
 24053                           
 24054                           ;device_IDs.c: 61: }
 24055                           
 24056                           ;device_IDs.c: 59: break;
 24057  01ABA8  0012               	return	
 24058  01ABAA                     l1805:
 24059  01ABAA  C15C  F15E         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 24060  01ABAE  C15D  F15F         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 24061                           
 24062                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24063                           ; Switch size 1, requested type "space"
 24064                           ; Number of cases is 2, Range of values is 106 to 107
 24065                           ; switch strategies available:
 24066                           ; Name         Instructions Cycles
 24067                           ; simple_byte            7     4 (average)
 24068                           ;	Chosen strategy is simple_byte
 24069  01ABB2  0101               	movlb	1	; () banked
 24070  01ABB4  515F               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 24071  01ABB6  0A6A               	xorlw	106	; case 106
 24072  01ABB8  B4D8               	btfsc	status,2,c
 24073  01ABBA  D004               	goto	l25893
 24074  01ABBC  0A01               	xorlw	1	; case 107
 24075  01ABBE  B4D8               	btfsc	status,2,c
 24076  01ABC0  D006               	goto	l25895
 24077  01ABC2  D7EE               	goto	l1810
 24078  01ABC4                     l25893:
 24079                           
 24080                           ; BSR set to: 1
 24081                           ; Switch size 1, requested type "space"
 24082                           ; Number of cases is 1, Range of values is 192 to 192
 24083                           ; switch strategies available:
 24084                           ; Name         Instructions Cycles
 24085                           ; simple_byte            4     3 (average)
 24086                           ;	Chosen strategy is simple_byte
 24087  01ABC4  515E               	movf	??_getDeviceIDString& (0+255),w,b
 24088  01ABC6  0AC0               	xorlw	192	; case 192
 24089  01ABC8  B4D8               	btfsc	status,2,c
 24090  01ABCA  D7E0               	goto	l1806
 24091  01ABCC  D7E9               	goto	l1810
 24092  01ABCE                     l25895:
 24093                           
 24094                           ; BSR set to: 1
 24095                           ; Switch size 1, requested type "space"
 24096                           ; Number of cases is 1, Range of values is 32 to 32
 24097                           ; switch strategies available:
 24098                           ; Name         Instructions Cycles
 24099                           ; simple_byte            4     3 (average)
 24100                           ;	Chosen strategy is simple_byte
 24101  01ABCE  515E               	movf	??_getDeviceIDString& (0+255),w,b
 24102  01ABD0  0A20               	xorlw	32	; case 32
 24103  01ABD2  B4D8               	btfsc	status,2,c
 24104  01ABD4  D7E0               	goto	l1809
 24105  01ABD6  D7E4               	goto	l1810
 24106  01ABD8                     __end_of_getDeviceIDString:
 24107                           	opt stack 0
 24108                           tblptru	equ	0xFF8
 24109                           tblptrh	equ	0xFF7
 24110                           tblptrl	equ	0xFF6
 24111                           tablat	equ	0xFF5
 24112                           prodh	equ	0xFF4
 24113                           prodl	equ	0xFF3
 24114                           intcon	equ	0xFF2
 24115                           indf0	equ	0xFEF
 24116                           postinc0	equ	0xFEE
 24117                           fsr0h	equ	0xFEA
 24118                           fsr0l	equ	0xFE9
 24119                           wreg	equ	0xFE8
 24120                           indf1	equ	0xFE7
 24121                           postdec1	equ	0xFE5
 24122                           plusw1	equ	0xFE3
 24123                           fsr1h	equ	0xFE2
 24124                           fsr1l	equ	0xFE1
 24125                           indf2	equ	0xFDF
 24126                           postinc2	equ	0xFDE
 24127                           postdec2	equ	0xFDD
 24128                           plusw2	equ	0xFDB
 24129                           fsr2h	equ	0xFDA
 24130                           fsr2l	equ	0xFD9
 24131                           status	equ	0xFD8
 24132                           
 24133 ;; *************** function _getDeviceID *****************
 24134 ;; Defined at:
 24135 ;;		line 4 in file "device_IDs.c"
 24136 ;; Parameters:    Size  Location     Type
 24137 ;;		None
 24138 ;; Auto vars:     Size  Location     Type
 24139 ;;		None
 24140 ;; Return value:  Size  Location     Type
 24141 ;;                  2   90[BANK1 ] unsigned int 
 24142 ;; Registers used:
 24143 ;;		wreg, status,2, status,0, cstack
 24144 ;; Tracked objects:
 24145 ;;		On entry : 0/0
 24146 ;;		On exit  : 0/0
 24147 ;;		Unchanged: 0/0
 24148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24149 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24152 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24153 ;;Total ram usage:        2 bytes
 24154 ;; Hardware stack levels used:    1
 24155 ;; Hardware stack levels required when called:   21
 24156 ;; This function calls:
 24157 ;;		_FLASH_ReadWord
 24158 ;; This function is called by:
 24159 ;;		_OLED_updateCallback
 24160 ;;		_ringBufferLUT
 24161 ;; This function uses a non-reentrant model
 24162 ;;
 24163                           
 24164                           	psect	text29
 24165  01BCB2                     __ptext29:
 24166                           	opt stack 0
 24167  01BCB2                     _getDeviceID:
 24168                           	opt stack 7
 24169                           
 24170                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 24171                           
 24172                           ;incstack = 0
 24173  01BCB2  0EFE               	movlw	254
 24174  01BCB4  0101               	movlb	1	; () banked
 24175  01BCB6  6F53               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 24176  01BCB8  0EFF               	movlw	255
 24177  01BCBA  6F54               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 24178  01BCBC  0E3F               	movlw	63
 24179  01BCBE  6F55               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 24180  01BCC0  0E00               	movlw	0
 24181  01BCC2  6F56               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 24182  01BCC4  ECBF  F0D9         	call	_FLASH_ReadWord	;wreg free
 24183  01BCC8  C153  F15A         	movff	?_FLASH_ReadWord,?_getDeviceID
 24184  01BCCC  C154  F15B         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 24185  01BCD0  0012               	return	
 24186  01BCD2                     __end_of_getDeviceID:
 24187                           	opt stack 0
 24188                           tblptru	equ	0xFF8
 24189                           tblptrh	equ	0xFF7
 24190                           tblptrl	equ	0xFF6
 24191                           tablat	equ	0xFF5
 24192                           prodh	equ	0xFF4
 24193                           prodl	equ	0xFF3
 24194                           intcon	equ	0xFF2
 24195                           indf0	equ	0xFEF
 24196                           postinc0	equ	0xFEE
 24197                           fsr0h	equ	0xFEA
 24198                           fsr0l	equ	0xFE9
 24199                           wreg	equ	0xFE8
 24200                           indf1	equ	0xFE7
 24201                           postdec1	equ	0xFE5
 24202                           plusw1	equ	0xFE3
 24203                           fsr1h	equ	0xFE2
 24204                           fsr1l	equ	0xFE1
 24205                           indf2	equ	0xFDF
 24206                           postinc2	equ	0xFDE
 24207                           postdec2	equ	0xFDD
 24208                           plusw2	equ	0xFDB
 24209                           fsr2h	equ	0xFDA
 24210                           fsr2l	equ	0xFD9
 24211                           status	equ	0xFD8
 24212                           
 24213 ;; *************** function _FLASH_ReadWord *****************
 24214 ;; Defined at:
 24215 ;;		line 71 in file "mcc_generated_files/memory.c"
 24216 ;; Parameters:    Size  Location     Type
 24217 ;;  flashAddr       4   83[BANK1 ] unsigned long 
 24218 ;; Auto vars:     Size  Location     Type
 24219 ;;		None
 24220 ;; Return value:  Size  Location     Type
 24221 ;;                  2   83[BANK1 ] unsigned int 
 24222 ;; Registers used:
 24223 ;;		wreg, status,2, status,0, cstack
 24224 ;; Tracked objects:
 24225 ;;		On entry : 0/0
 24226 ;;		On exit  : 0/0
 24227 ;;		Unchanged: 0/0
 24228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24229 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24231 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24232 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24233 ;;Total ram usage:        7 bytes
 24234 ;; Hardware stack levels used:    1
 24235 ;; Hardware stack levels required when called:   20
 24236 ;; This function calls:
 24237 ;;		_FLASH_ReadByte
 24238 ;; This function is called by:
 24239 ;;		_getDeviceID
 24240 ;;		_getMajorRevisionID
 24241 ;;		_getMinorRevisionID
 24242 ;;		_getUserID
 24243 ;; This function uses a non-reentrant model
 24244 ;;
 24245                           
 24246                           	psect	text30
 24247  01B37E                     __ptext30:
 24248                           	opt stack 0
 24249  01B37E                     _FLASH_ReadWord:
 24250                           	opt stack 7
 24251                           
 24252                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 24253                           
 24254                           ;incstack = 0
 24255  01B37E  C153  F14F         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 24256  01B382  C154  F150         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 24257  01B386  C155  F151         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 24258  01B38A  C156  F152         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 24259  01B38E  ECD0  F0DE         	call	_FLASH_ReadByte	;wreg free
 24260  01B392  0101               	movlb	1	; () banked
 24261  01B394  6F57               	movwf	??_FLASH_ReadWord& (0+255),b
 24262  01B396  0E01               	movlw	1
 24263  01B398  2553               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 24264  01B39A  6F4F               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 24265  01B39C  0E00               	movlw	0
 24266  01B39E  2154               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 24267  01B3A0  6F50               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 24268  01B3A2  0E00               	movlw	0
 24269  01B3A4  2155               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 24270  01B3A6  6F51               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 24271  01B3A8  0E00               	movlw	0
 24272  01B3AA  2156               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 24273  01B3AC  6F52               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 24274  01B3AE  ECD0  F0DE         	call	_FLASH_ReadByte	;wreg free
 24275  01B3B2  0101               	movlb	1	; () banked
 24276  01B3B4  6F58               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 24277  01B3B6  5157               	movf	??_FLASH_ReadWord& (0+255),w,b
 24278  01B3B8  6F53               	movwf	?_FLASH_ReadWord& (0+255),b
 24279  01B3BA  C158  F154         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 24280  01B3BE  0012               	return	
 24281  01B3C0                     __end_of_FLASH_ReadWord:
 24282                           	opt stack 0
 24283                           tblptru	equ	0xFF8
 24284                           tblptrh	equ	0xFF7
 24285                           tblptrl	equ	0xFF6
 24286                           tablat	equ	0xFF5
 24287                           prodh	equ	0xFF4
 24288                           prodl	equ	0xFF3
 24289                           intcon	equ	0xFF2
 24290                           indf0	equ	0xFEF
 24291                           postinc0	equ	0xFEE
 24292                           fsr0h	equ	0xFEA
 24293                           fsr0l	equ	0xFE9
 24294                           wreg	equ	0xFE8
 24295                           indf1	equ	0xFE7
 24296                           postdec1	equ	0xFE5
 24297                           plusw1	equ	0xFE3
 24298                           fsr1h	equ	0xFE2
 24299                           fsr1l	equ	0xFE1
 24300                           indf2	equ	0xFDF
 24301                           postinc2	equ	0xFDE
 24302                           postdec2	equ	0xFDD
 24303                           plusw2	equ	0xFDB
 24304                           fsr2h	equ	0xFDA
 24305                           fsr2l	equ	0xFD9
 24306                           status	equ	0xFD8
 24307                           
 24308 ;; *************** function _FLASH_ReadByte *****************
 24309 ;; Defined at:
 24310 ;;		line 59 in file "mcc_generated_files/memory.c"
 24311 ;; Parameters:    Size  Location     Type
 24312 ;;  flashAddr       4   79[BANK1 ] unsigned long 
 24313 ;; Auto vars:     Size  Location     Type
 24314 ;;		None
 24315 ;; Return value:  Size  Location     Type
 24316 ;;                  1    wreg      unsigned char 
 24317 ;; Registers used:
 24318 ;;		wreg, status,2
 24319 ;; Tracked objects:
 24320 ;;		On entry : 0/0
 24321 ;;		On exit  : 0/0
 24322 ;;		Unchanged: 0/0
 24323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24324 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24327 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24328 ;;Total ram usage:        4 bytes
 24329 ;; Hardware stack levels used:    1
 24330 ;; Hardware stack levels required when called:   19
 24331 ;; This function calls:
 24332 ;;		Nothing
 24333 ;; This function is called by:
 24334 ;;		_FLASH_ReadWord
 24335 ;;		_FLASH_WriteByte
 24336 ;; This function uses a non-reentrant model
 24337 ;;
 24338                           
 24339                           	psect	text31
 24340  01BDA0                     __ptext31:
 24341                           	opt stack 0
 24342  01BDA0                     _FLASH_ReadByte:
 24343                           	opt stack 7
 24344                           
 24345                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 24346                           
 24347                           ; BSR set to: 1
 24348                           ;incstack = 0
 24349  01BDA0  5077               	movf	3959,w,c	;volsfr
 24350  01BDA2  0B3F               	andlw	-193
 24351  01BDA4  0980               	iorlw	128
 24352  01BDA6  6E77               	movwf	3959,c	;volsfr
 24353                           
 24354                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 24355  01BDA8  C151  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 24356                           
 24357                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 24358  01BDAC  C150  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 24359                           
 24360                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 24361  01BDB0  C14F  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 24362  01BDB4  0008               	tblrd		*	;# 
 24363                           
 24364                           ;memory.c: 68: return (TABLAT);
 24365  01BDB6  50F5               	movf	tablat,w,c	;volatile
 24366  01BDB8  0012               	return	
 24367  01BDBA                     __end_of_FLASH_ReadByte:
 24368                           	opt stack 0
 24369                           tblptru	equ	0xFF8
 24370                           tblptrh	equ	0xFF7
 24371                           tblptrl	equ	0xFF6
 24372                           tablat	equ	0xFF5
 24373                           prodh	equ	0xFF4
 24374                           prodl	equ	0xFF3
 24375                           intcon	equ	0xFF2
 24376                           indf0	equ	0xFEF
 24377                           postinc0	equ	0xFEE
 24378                           fsr0h	equ	0xFEA
 24379                           fsr0l	equ	0xFE9
 24380                           wreg	equ	0xFE8
 24381                           indf1	equ	0xFE7
 24382                           postdec1	equ	0xFE5
 24383                           plusw1	equ	0xFE3
 24384                           fsr1h	equ	0xFE2
 24385                           fsr1l	equ	0xFE1
 24386                           indf2	equ	0xFDF
 24387                           postinc2	equ	0xFDE
 24388                           postdec2	equ	0xFDD
 24389                           plusw2	equ	0xFDB
 24390                           fsr2h	equ	0xFDA
 24391                           fsr2l	equ	0xFD9
 24392                           status	equ	0xFD8
 24393                           
 24394 ;; *************** function _getCauseOfResetStringSmall *****************
 24395 ;; Defined at:
 24396 ;;		line 112 in file "cause_of_reset.c"
 24397 ;; Parameters:    Size  Location     Type
 24398 ;;  r               1    wreg     enum E17455
 24399 ;; Auto vars:     Size  Location     Type
 24400 ;;  r               1   81[BANK1 ] enum E17455
 24401 ;; Return value:  Size  Location     Type
 24402 ;;                  2   79[BANK1 ] PTR inline unsigned char
 24403 ;; Registers used:
 24404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24405 ;; Tracked objects:
 24406 ;;		On entry : 0/0
 24407 ;;		On exit  : 0/0
 24408 ;;		Unchanged: 0/0
 24409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24410 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24411 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24413 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24414 ;;Total ram usage:        3 bytes
 24415 ;; Hardware stack levels used:    1
 24416 ;; Hardware stack levels required when called:   19
 24417 ;; This function calls:
 24418 ;;		Nothing
 24419 ;; This function is called by:
 24420 ;;		_OLED_updateCallback
 24421 ;; This function uses a non-reentrant model
 24422 ;;
 24423                           
 24424                           	psect	text32
 24425  01B93A                     __ptext32:
 24426                           	opt stack 0
 24427  01B93A                     _getCauseOfResetStringSmall:
 24428                           	opt stack 8
 24429                           
 24430                           ;incstack = 0
 24431                           ;getCauseOfResetStringSmall@r stored from wreg
 24432  01B93A  0101               	movlb	1	; () banked
 24433  01B93C  6F51               	movwf	getCauseOfResetStringSmall@r& (0+255),b
 24434                           
 24435                           ;cause_of_reset.c: 115: static char *strings[] = {
 24436                           ;cause_of_reset.c: 116: "Undefined",
 24437                           ;cause_of_reset.c: 117: "POR Reset",
 24438                           ;cause_of_reset.c: 118: "BOR Reset",
 24439                           ;cause_of_reset.c: 119: "MCLR Reset",
 24440                           ;cause_of_reset.c: 120: "WDT Reset",
 24441                           ;cause_of_reset.c: 121: "WWDT Reset",
 24442                           ;cause_of_reset.c: 122: "RESET Executed",
 24443                           ;cause_of_reset.c: 123: "STOF Reset",
 24444                           ;cause_of_reset.c: 124: "STUF Reset",
 24445                           ;cause_of_reset.c: 125: };
 24446                           ;cause_of_reset.c: 128: if (r <= 8) {
 24447  01B93E  0E09               	movlw	9
 24448  01B940  0101               	movlb	1	; () banked
 24449  01B942  6151               	cpfslt	getCauseOfResetStringSmall@r& (0+255),b
 24450  01B944  D00D               	goto	l1844
 24451                           
 24452                           ; BSR set to: 1
 24453                           ;cause_of_reset.c: 130: return strings[r];
 24454  01B946  5151               	movf	getCauseOfResetStringSmall@r& (0+255),w,b
 24455  01B948  0D02               	mullw	2
 24456  01B94A  0ED5               	movlw	low getCauseOfResetStringSmall@strings
 24457  01B94C  24F3               	addwf	prodl,w,c
 24458  01B94E  6ED9               	movwf	fsr2l,c
 24459  01B950  0E03               	movlw	high getCauseOfResetStringSmall@strings
 24460  01B952  20F4               	addwfc	prodh,w,c
 24461  01B954  6EDA               	movwf	fsr2h,c
 24462  01B956  CFDE F14F          	movff	postinc2,?_getCauseOfResetStringSmall
 24463  01B95A  CFDD F150          	movff	postdec2,?_getCauseOfResetStringSmall+1
 24464                           
 24465                           ; BSR set to: 1
 24466                           ;cause_of_reset.c: 132: }
 24467                           
 24468                           ; BSR set to: 1
 24469  01B95E  0012               	return	
 24470  01B960                     l1844:
 24471                           
 24472                           ; BSR set to: 1
 24473                           ;cause_of_reset.c: 134: else {
 24474                           ;cause_of_reset.c: 136: return "Undefined";
 24475                           
 24476                           ; BSR set to: 1
 24477  01B960  0E5A               	movlw	low STR_191
 24478  01B962  6F4F               	movwf	?_getCauseOfResetStringSmall& (0+255),b
 24479  01B964  0EFF               	movlw	high STR_191
 24480  01B966  6F50               	movwf	(?_getCauseOfResetStringSmall+1)& (0+255),b
 24481                           
 24482                           ; BSR set to: 1
 24483  01B968  0012               	return	
 24484  01B96A                     __end_of_getCauseOfResetStringSmall:
 24485                           	opt stack 0
 24486                           tblptru	equ	0xFF8
 24487                           tblptrh	equ	0xFF7
 24488                           tblptrl	equ	0xFF6
 24489                           tablat	equ	0xFF5
 24490                           prodh	equ	0xFF4
 24491                           prodl	equ	0xFF3
 24492                           intcon	equ	0xFF2
 24493                           indf0	equ	0xFEF
 24494                           postinc0	equ	0xFEE
 24495                           fsr0h	equ	0xFEA
 24496                           fsr0l	equ	0xFE9
 24497                           wreg	equ	0xFE8
 24498                           indf1	equ	0xFE7
 24499                           postdec1	equ	0xFE5
 24500                           plusw1	equ	0xFE3
 24501                           fsr1h	equ	0xFE2
 24502                           fsr1l	equ	0xFE1
 24503                           indf2	equ	0xFDF
 24504                           postinc2	equ	0xFDE
 24505                           postdec2	equ	0xFDD
 24506                           plusw2	equ	0xFDB
 24507                           fsr2h	equ	0xFDA
 24508                           fsr2l	equ	0xFD9
 24509                           status	equ	0xFD8
 24510                           
 24511 ;; *************** function _OLED_UpdateFromRAMBuffer *****************
 24512 ;; Defined at:
 24513 ;;		line 313 in file "oled.c"
 24514 ;; Parameters:    Size  Location     Type
 24515 ;;		None
 24516 ;; Auto vars:     Size  Location     Type
 24517 ;;		None
 24518 ;; Return value:  Size  Location     Type
 24519 ;;                  1    wreg      void 
 24520 ;; Registers used:
 24521 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24522 ;; Tracked objects:
 24523 ;;		On entry : 0/0
 24524 ;;		On exit  : 0/0
 24525 ;;		Unchanged: 0/0
 24526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24531 ;;Total ram usage:        0 bytes
 24532 ;; Hardware stack levels used:    1
 24533 ;; Hardware stack levels required when called:   24
 24534 ;; This function calls:
 24535 ;;		_OLED_Clear
 24536 ;;		_OLED_WriteString
 24537 ;;		_OLED_YX
 24538 ;; This function is called by:
 24539 ;;		_OLED_updateCallback
 24540 ;; This function uses a non-reentrant model
 24541 ;;
 24542                           
 24543                           	psect	text33
 24544  01A5D6                     __ptext33:
 24545                           	opt stack 0
 24546  01A5D6                     _OLED_UpdateFromRAMBuffer:
 24547                           	opt stack 3
 24548                           
 24549                           ;oled.c: 315: OLED_YX(0,0);
 24550                           
 24551                           ; BSR set to: 1
 24552                           ;incstack = 0
 24553  01A5D6  0E00               	movlw	0
 24554  01A5D8  0101               	movlb	1	; () banked
 24555  01A5DA  6F5F               	movwf	OLED_YX@Column& (0+255),b
 24556  01A5DC  0E00               	movlw	0
 24557  01A5DE  EC81  F0DA         	call	_OLED_YX
 24558                           
 24559                           ;oled.c: 316: OLED_Clear();
 24560  01A5E2  EC01  F0DA         	call	_OLED_Clear	;wreg free
 24561                           
 24562                           ;oled.c: 317: OLED_YX(0,0);
 24563  01A5E6  0E00               	movlw	0
 24564  01A5E8  0101               	movlb	1	; () banked
 24565  01A5EA  6F5F               	movwf	OLED_YX@Column& (0+255),b
 24566  01A5EC  0E00               	movlw	0
 24567  01A5EE  EC81  F0DA         	call	_OLED_YX
 24568                           
 24569                           ;oled.c: 318: OLED_WriteString(OLED_RAM_Buffer.line0);
 24570  01A5F2  0E40               	movlw	low _OLED_RAM_Buffer
 24571  01A5F4  0102               	movlb	2	; () banked
 24572  01A5F6  6F11               	movwf	OLED_WriteString@s& (0+255),b
 24573  01A5F8  0E03               	movlw	high _OLED_RAM_Buffer
 24574  01A5FA  6F12               	movwf	(OLED_WriteString@s+1)& (0+255),b
 24575  01A5FC  EC48  F0D6         	call	_OLED_WriteString	;wreg free
 24576                           
 24577                           ;oled.c: 319: OLED_YX(1,0);
 24578  01A600  0E00               	movlw	0
 24579  01A602  0101               	movlb	1	; () banked
 24580  01A604  6F5F               	movwf	OLED_YX@Column& (0+255),b
 24581  01A606  0E01               	movlw	1
 24582  01A608  EC81  F0DA         	call	_OLED_YX
 24583                           
 24584                           ;oled.c: 320: OLED_WriteString(OLED_RAM_Buffer.line1);
 24585  01A60C  0E51               	movlw	low (_OLED_RAM_Buffer+17)
 24586  01A60E  0102               	movlb	2	; () banked
 24587  01A610  6F11               	movwf	OLED_WriteString@s& (0+255),b
 24588  01A612  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 24589  01A614  6F12               	movwf	(OLED_WriteString@s+1)& (0+255),b
 24590  01A616  EC48  F0D6         	call	_OLED_WriteString	;wreg free
 24591                           
 24592                           ;oled.c: 321: OLED_YX(2,0);
 24593  01A61A  0E00               	movlw	0
 24594  01A61C  0101               	movlb	1	; () banked
 24595  01A61E  6F5F               	movwf	OLED_YX@Column& (0+255),b
 24596  01A620  0E02               	movlw	2
 24597  01A622  EC81  F0DA         	call	_OLED_YX
 24598                           
 24599                           ;oled.c: 322: OLED_WriteString(OLED_RAM_Buffer.line2);
 24600  01A626  0E62               	movlw	low (_OLED_RAM_Buffer+34)
 24601  01A628  0102               	movlb	2	; () banked
 24602  01A62A  6F11               	movwf	OLED_WriteString@s& (0+255),b
 24603  01A62C  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 24604  01A62E  6F12               	movwf	(OLED_WriteString@s+1)& (0+255),b
 24605  01A630  EC48  F0D6         	call	_OLED_WriteString	;wreg free
 24606                           
 24607                           ;oled.c: 323: OLED_YX(3,0);
 24608  01A634  0E00               	movlw	0
 24609  01A636  0101               	movlb	1	; () banked
 24610  01A638  6F5F               	movwf	OLED_YX@Column& (0+255),b
 24611  01A63A  0E03               	movlw	3
 24612  01A63C  EC81  F0DA         	call	_OLED_YX
 24613                           
 24614                           ;oled.c: 324: OLED_WriteString(OLED_RAM_Buffer.line3);
 24615  01A640  0E73               	movlw	low (_OLED_RAM_Buffer+51)
 24616  01A642  0102               	movlb	2	; () banked
 24617  01A644  6F11               	movwf	OLED_WriteString@s& (0+255),b
 24618  01A646  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 24619  01A648  6F12               	movwf	(OLED_WriteString@s+1)& (0+255),b
 24620  01A64A  EC48  F0D6         	call	_OLED_WriteString	;wreg free
 24621  01A64E  0012               	return		;funcret
 24622  01A650                     __end_of_OLED_UpdateFromRAMBuffer:
 24623                           	opt stack 0
 24624                           tblptru	equ	0xFF8
 24625                           tblptrh	equ	0xFF7
 24626                           tblptrl	equ	0xFF6
 24627                           tablat	equ	0xFF5
 24628                           prodh	equ	0xFF4
 24629                           prodl	equ	0xFF3
 24630                           intcon	equ	0xFF2
 24631                           indf0	equ	0xFEF
 24632                           postinc0	equ	0xFEE
 24633                           fsr0h	equ	0xFEA
 24634                           fsr0l	equ	0xFE9
 24635                           wreg	equ	0xFE8
 24636                           indf1	equ	0xFE7
 24637                           postdec1	equ	0xFE5
 24638                           plusw1	equ	0xFE3
 24639                           fsr1h	equ	0xFE2
 24640                           fsr1l	equ	0xFE1
 24641                           indf2	equ	0xFDF
 24642                           postinc2	equ	0xFDE
 24643                           postdec2	equ	0xFDD
 24644                           plusw2	equ	0xFDB
 24645                           fsr2h	equ	0xFDA
 24646                           fsr2l	equ	0xFD9
 24647                           status	equ	0xFD8
 24648                           
 24649 ;; *************** function _OLED_YX *****************
 24650 ;; Defined at:
 24651 ;;		line 220 in file "oled.c"
 24652 ;; Parameters:    Size  Location     Type
 24653 ;;  Row             1    wreg     unsigned char 
 24654 ;;  Column          1   95[BANK1 ] unsigned char 
 24655 ;; Auto vars:     Size  Location     Type
 24656 ;;  Row             1    5[BANK2 ] unsigned char 
 24657 ;; Return value:  Size  Location     Type
 24658 ;;                  1    wreg      void 
 24659 ;; Registers used:
 24660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24661 ;; Tracked objects:
 24662 ;;		On entry : 0/0
 24663 ;;		On exit  : 0/0
 24664 ;;		Unchanged: 0/0
 24665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24666 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24667 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0
 24668 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0
 24669 ;;      Totals:         0       0       1       2       0       0       0       0       0       0       0       0       
      +0       0       0
 24670 ;;Total ram usage:        3 bytes
 24671 ;; Hardware stack levels used:    1
 24672 ;; Hardware stack levels required when called:   23
 24673 ;; This function calls:
 24674 ;;		_OLED_Command
 24675 ;; This function is called by:
 24676 ;;		_OLED_UpdateFromRAMBuffer
 24677 ;; This function uses a non-reentrant model
 24678 ;;
 24679                           
 24680                           	psect	text34
 24681  01B502                     __ptext34:
 24682                           	opt stack 0
 24683  01B502                     _OLED_YX:
 24684                           	opt stack 3
 24685                           
 24686                           ;incstack = 0
 24687                           ;OLED_YX@Row stored from wreg
 24688  01B502  0102               	movlb	2	; () banked
 24689  01B504  6F05               	movwf	OLED_YX@Row& (0+255),b
 24690                           
 24691                           ;oled.c: 222: OLED_Command(0xB0 + Row);
 24692  01B506  0102               	movlb	2	; () banked
 24693  01B508  5105               	movf	OLED_YX@Row& (0+255),w,b
 24694  01B50A  0FB0               	addlw	176
 24695  01B50C  ECB9  F0D4         	call	_OLED_Command
 24696                           
 24697                           ;oled.c: 224: OLED_Command(0x00 + (8 * Column & 0x0F));
 24698  01B510  0101               	movlb	1	; () banked
 24699  01B512  515F               	movf	OLED_YX@Column& (0+255),w,b
 24700  01B514  0D08               	mullw	8
 24701  01B516  50F3               	movf	prodl,w,c
 24702  01B518  0B0F               	andlw	15
 24703  01B51A  ECB9  F0D4         	call	_OLED_Command
 24704                           
 24705                           ;oled.c: 226: OLED_Command(0x10 + ((8* Column >> 4) & 0x0F));
 24706  01B51E  0101               	movlb	1	; () banked
 24707  01B520  515F               	movf	OLED_YX@Column& (0+255),w,b
 24708  01B522  0D08               	mullw	8
 24709  01B524  0E04               	movlw	4
 24710  01B526  0102               	movlb	2	; () banked
 24711  01B528  6F04               	movwf	??_OLED_YX& (0+255),b
 24712  01B52A                     u27485:
 24713  01B52A  34F4               	rlcf	prodh,w,c
 24714  01B52C  32F4               	rrcf	prodh,f,c
 24715  01B52E  32F3               	rrcf	prodl,f,c
 24716  01B530  2F04               	decfsz	??_OLED_YX& (0+255),f,b
 24717  01B532  D7FB               	goto	u27485
 24718  01B534  50F3               	movf	prodl,w,c
 24719  01B536  0B0F               	andlw	15
 24720  01B538  0F10               	addlw	16
 24721  01B53A  ECB9  F0D4         	call	_OLED_Command
 24722  01B53E  0012               	return		;funcret
 24723  01B540                     __end_of_OLED_YX:
 24724                           	opt stack 0
 24725                           tblptru	equ	0xFF8
 24726                           tblptrh	equ	0xFF7
 24727                           tblptrl	equ	0xFF6
 24728                           tablat	equ	0xFF5
 24729                           prodh	equ	0xFF4
 24730                           prodl	equ	0xFF3
 24731                           intcon	equ	0xFF2
 24732                           indf0	equ	0xFEF
 24733                           postinc0	equ	0xFEE
 24734                           fsr0h	equ	0xFEA
 24735                           fsr0l	equ	0xFE9
 24736                           wreg	equ	0xFE8
 24737                           indf1	equ	0xFE7
 24738                           postdec1	equ	0xFE5
 24739                           plusw1	equ	0xFE3
 24740                           fsr1h	equ	0xFE2
 24741                           fsr1l	equ	0xFE1
 24742                           indf2	equ	0xFDF
 24743                           postinc2	equ	0xFDE
 24744                           postdec2	equ	0xFDD
 24745                           plusw2	equ	0xFDB
 24746                           fsr2h	equ	0xFDA
 24747                           fsr2l	equ	0xFD9
 24748                           status	equ	0xFD8
 24749                           
 24750 ;; *************** function _OLED_WriteString *****************
 24751 ;; Defined at:
 24752 ;;		line 281 in file "oled.c"
 24753 ;; Parameters:    Size  Location     Type
 24754 ;;  s               2   17[BANK2 ] PTR unsigned char 
 24755 ;;		 -> ftoa@buf(17), STR_213(1), STR_212(1), OLED_WriteInteger@s(20), 
 24756 ;;		 -> OLED_RAM_Buffer(68), 
 24757 ;; Auto vars:     Size  Location     Type
 24758 ;;		None
 24759 ;; Return value:  Size  Location     Type
 24760 ;;                  1    wreg      void 
 24761 ;; Registers used:
 24762 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24763 ;; Tracked objects:
 24764 ;;		On entry : 0/0
 24765 ;;		On exit  : 0/0
 24766 ;;		Unchanged: 0/0
 24767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24768 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 24769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24771 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0
 24772 ;;Total ram usage:        2 bytes
 24773 ;; Hardware stack levels used:    1
 24774 ;; Hardware stack levels required when called:   23
 24775 ;; This function calls:
 24776 ;;		_OLED_PutChar
 24777 ;; This function is called by:
 24778 ;;		_OLED_UpdateFromRAMBuffer
 24779 ;;		_OLED_WriteInteger
 24780 ;;		_OLED_WriteFloat
 24781 ;; This function uses a non-reentrant model
 24782 ;;
 24783                           
 24784                           	psect	text35
 24785  01AC90                     __ptext35:
 24786                           	opt stack 0
 24787  01AC90                     _OLED_WriteString:
 24788                           	opt stack 3
 24789                           
 24790                           ;oled.c: 283: while(*s) {
 24791                           
 24792                           ;incstack = 0
 24793  01AC90  D016               	goto	l1930
 24794  01AC92                     
 24795                           ;oled.c: 285: OLED_PutChar(*s++);
 24796  01AC92  C211  FFF6         	movff	OLED_WriteString@s,tblptrl
 24797  01AC96  C212  FFF7         	movff	OLED_WriteString@s+1,tblptrh
 24798  01AC9A  0E00               	movlw	low (__mediumconst shr (0+16))
 24799  01AC9C  6EF8               	movwf	tblptru,c
 24800  01AC9E  0E0D               	movlw	(high __ramtop+-1)
 24801  01ACA0  64F7               	cpfsgt	tblptrh,c
 24802  01ACA2  D003               	bra	u27497
 24803  01ACA4  0008               	tblrd		*
 24804  01ACA6  50F5               	movf	tablat,w,c
 24805  01ACA8  D005               	bra	u27490
 24806  01ACAA                     u27497:
 24807  01ACAA  CFF6 FFE9          	movff	tblptrl,fsr0l
 24808  01ACAE  CFF7 FFEA          	movff	tblptrh,fsr0h
 24809  01ACB2  50EF               	movf	indf0,w,c
 24810  01ACB4                     u27490:
 24811  01ACB4  EC15  F0CE         	call	_OLED_PutChar
 24812  01ACB8  0102               	movlb	2	; () banked
 24813  01ACBA  4B11               	infsnz	OLED_WriteString@s& (0+255),f,b
 24814  01ACBC  2B12               	incf	(OLED_WriteString@s+1)& (0+255),f,b
 24815  01ACBE                     l1930:
 24816                           
 24817                           ; BSR set to: 2
 24818  01ACBE  C211  FFF6         	movff	OLED_WriteString@s,tblptrl
 24819  01ACC2  C212  FFF7         	movff	OLED_WriteString@s+1,tblptrh
 24820  01ACC6  0E00               	movlw	low (__mediumconst shr (0+16))
 24821  01ACC8  6EF8               	movwf	tblptru,c
 24822  01ACCA  0E0D               	movlw	(high __ramtop+-1)
 24823  01ACCC  64F7               	cpfsgt	tblptrh,c
 24824  01ACCE  D003               	bra	u27507
 24825  01ACD0  0008               	tblrd		*
 24826  01ACD2  50F5               	movf	tablat,w,c
 24827  01ACD4  D005               	bra	u27500
 24828  01ACD6                     u27507:
 24829  01ACD6  CFF6 FFE9          	movff	tblptrl,fsr0l
 24830  01ACDA  CFF7 FFEA          	movff	tblptrh,fsr0h
 24831  01ACDE  50EF               	movf	indf0,w,c
 24832  01ACE0                     u27500:
 24833  01ACE0  0900               	iorlw	0
 24834  01ACE2  B4D8               	btfsc	status,2,c
 24835  01ACE4  0012               	return	
 24836  01ACE6  D7D5               	goto	l1931
 24837  01ACE8                     __end_of_OLED_WriteString:
 24838                           	opt stack 0
 24839                           tblptru	equ	0xFF8
 24840                           tblptrh	equ	0xFF7
 24841                           tblptrl	equ	0xFF6
 24842                           tablat	equ	0xFF5
 24843                           prodh	equ	0xFF4
 24844                           prodl	equ	0xFF3
 24845                           intcon	equ	0xFF2
 24846                           indf0	equ	0xFEF
 24847                           postinc0	equ	0xFEE
 24848                           fsr0h	equ	0xFEA
 24849                           fsr0l	equ	0xFE9
 24850                           wreg	equ	0xFE8
 24851                           indf1	equ	0xFE7
 24852                           postdec1	equ	0xFE5
 24853                           plusw1	equ	0xFE3
 24854                           fsr1h	equ	0xFE2
 24855                           fsr1l	equ	0xFE1
 24856                           indf2	equ	0xFDF
 24857                           postinc2	equ	0xFDE
 24858                           postdec2	equ	0xFDD
 24859                           plusw2	equ	0xFDB
 24860                           fsr2h	equ	0xFDA
 24861                           fsr2l	equ	0xFD9
 24862                           status	equ	0xFD8
 24863                           
 24864 ;; *************** function _OLED_Clear *****************
 24865 ;; Defined at:
 24866 ;;		line 266 in file "oled.c"
 24867 ;; Parameters:    Size  Location     Type
 24868 ;;		None
 24869 ;; Auto vars:     Size  Location     Type
 24870 ;;  col             2   19[BANK2 ] unsigned int 
 24871 ;;  row             2   17[BANK2 ] unsigned int 
 24872 ;; Return value:  Size  Location     Type
 24873 ;;                  1    wreg      void 
 24874 ;; Registers used:
 24875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24876 ;; Tracked objects:
 24877 ;;		On entry : 0/0
 24878 ;;		On exit  : 0/0
 24879 ;;		Unchanged: 0/0
 24880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24882 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
 24883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24884 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
 24885 ;;Total ram usage:        4 bytes
 24886 ;; Hardware stack levels used:    1
 24887 ;; Hardware stack levels required when called:   23
 24888 ;; This function calls:
 24889 ;;		_OLED_PutChar
 24890 ;; This function is called by:
 24891 ;;		_main
 24892 ;;		_OLED_UpdateFromRAMBuffer
 24893 ;; This function uses a non-reentrant model
 24894 ;;
 24895                           
 24896                           	psect	text36
 24897  01B402                     __ptext36:
 24898                           	opt stack 0
 24899  01B402                     _OLED_Clear:
 24900                           	opt stack 3
 24901                           
 24902                           ;oled.c: 268: for(uint16_t row = 0; row < 8; row++) {
 24903                           
 24904                           ;incstack = 0
 24905  01B402  0E00               	movlw	0
 24906  01B404  0102               	movlb	2	; () banked
 24907  01B406  6F12               	movwf	(OLED_Clear@row+1)& (0+255),b
 24908  01B408  0E00               	movlw	0
 24909  01B40A  6F11               	movwf	OLED_Clear@row& (0+255),b
 24910  01B40C                     l16885:
 24911                           
 24912                           ; BSR set to: 2
 24913  01B40C  5112               	movf	(OLED_Clear@row+1)& (0+255),w,b
 24914  01B40E  E118               	bnz	l1927
 24915  01B410  0E08               	movlw	8
 24916  01B412  5D11               	subwf	OLED_Clear@row& (0+255),w,b
 24917  01B414  B0D8               	btfsc	status,0,c
 24918  01B416  0012               	return	
 24919                           
 24920                           ; BSR set to: 2
 24921                           ;oled.c: 270: for(uint16_t col = 0; col < 16; col++) {
 24922                           
 24923                           ; BSR set to: 2
 24924                           
 24925                           ; BSR set to: 2
 24926  01B418  0E00               	movlw	0
 24927  01B41A  6F14               	movwf	(OLED_Clear@col+1)& (0+255),b
 24928  01B41C  0E00               	movlw	0
 24929  01B41E  6F13               	movwf	OLED_Clear@col& (0+255),b
 24930  01B420                     l16891:
 24931                           
 24932                           ; BSR set to: 2
 24933  01B420  5114               	movf	(OLED_Clear@col+1)& (0+255),w,b
 24934  01B422  E10B               	bnz	l16901
 24935  01B424  0E10               	movlw	16
 24936  01B426  5D13               	subwf	OLED_Clear@col& (0+255),w,b
 24937  01B428  B0D8               	btfsc	status,0,c
 24938  01B42A  D007               	goto	u21700
 24939                           
 24940                           ; BSR set to: 2
 24941                           ;oled.c: 272: OLED_PutChar('\0');
 24942                           
 24943                           ; BSR set to: 2
 24944                           
 24945                           ; BSR set to: 2
 24946  01B42C  0E00               	movlw	0
 24947  01B42E  EC15  F0CE         	call	_OLED_PutChar
 24948  01B432  0102               	movlb	2	; () banked
 24949  01B434  4B13               	infsnz	OLED_Clear@col& (0+255),f,b
 24950  01B436  2B14               	incf	(OLED_Clear@col+1)& (0+255),f,b
 24951  01B438  D7F3               	goto	l16891
 24952  01B43A                     u21700:
 24953  01B43A                     l16901:
 24954                           
 24955                           ; BSR set to: 2
 24956  01B43A  4B11               	infsnz	OLED_Clear@row& (0+255),f,b
 24957  01B43C  2B12               	incf	(OLED_Clear@row+1)& (0+255),f,b
 24958  01B43E  D7E6               	goto	l16885
 24959  01B440                     l1927:
 24960                           
 24961                           ; BSR set to: 2
 24962  01B440  0012               	return		;funcret
 24963  01B442                     __end_of_OLED_Clear:
 24964                           	opt stack 0
 24965                           tblptru	equ	0xFF8
 24966                           tblptrh	equ	0xFF7
 24967                           tblptrl	equ	0xFF6
 24968                           tablat	equ	0xFF5
 24969                           prodh	equ	0xFF4
 24970                           prodl	equ	0xFF3
 24971                           intcon	equ	0xFF2
 24972                           indf0	equ	0xFEF
 24973                           postinc0	equ	0xFEE
 24974                           fsr0h	equ	0xFEA
 24975                           fsr0l	equ	0xFE9
 24976                           wreg	equ	0xFE8
 24977                           indf1	equ	0xFE7
 24978                           postdec1	equ	0xFE5
 24979                           plusw1	equ	0xFE3
 24980                           fsr1h	equ	0xFE2
 24981                           fsr1l	equ	0xFE1
 24982                           indf2	equ	0xFDF
 24983                           postinc2	equ	0xFDE
 24984                           postdec2	equ	0xFDD
 24985                           plusw2	equ	0xFDB
 24986                           fsr2h	equ	0xFDA
 24987                           fsr2l	equ	0xFD9
 24988                           status	equ	0xFD8
 24989                           
 24990 ;; *************** function _OLED_PutChar *****************
 24991 ;; Defined at:
 24992 ;;		line 231 in file "oled.c"
 24993 ;; Parameters:    Size  Location     Type
 24994 ;;  ch              1    wreg     unsigned char 
 24995 ;; Auto vars:     Size  Location     Type
 24996 ;;  ch              1   16[BANK2 ] unsigned char 
 24997 ;;  data_array      9    4[BANK2 ] unsigned char [9]
 24998 ;;  input_base      2   13[BANK2 ] PTR const unsigned char 
 24999 ;;		 -> OledFont(768), 
 25000 ;;  length          1   15[BANK2 ] unsigned char 
 25001 ;; Return value:  Size  Location     Type
 25002 ;;                  1    wreg      void 
 25003 ;; Registers used:
 25004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25005 ;; Tracked objects:
 25006 ;;		On entry : 0/0
 25007 ;;		On exit  : 0/0
 25008 ;;		Unchanged: 0/0
 25009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25011 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0
 25012 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
 25013 ;;      Totals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0
 25014 ;;Total ram usage:       17 bytes
 25015 ;; Hardware stack levels used:    1
 25016 ;; Hardware stack levels required when called:   22
 25017 ;; This function calls:
 25018 ;;		_I2C1_MasterWrite
 25019 ;;		_memmove
 25020 ;; This function is called by:
 25021 ;;		_OLED_Clear
 25022 ;;		_OLED_WriteString
 25023 ;; This function uses a non-reentrant model
 25024 ;;
 25025                           
 25026                           	psect	text37
 25027  019C2A                     __ptext37:
 25028                           	opt stack 0
 25029  019C2A                     _OLED_PutChar:
 25030                           	opt stack 3
 25031                           
 25032                           ; BSR set to: 2
 25033                           ;incstack = 0
 25034                           ;OLED_PutChar@ch stored from wreg
 25035  019C2A  0102               	movlb	2	; () banked
 25036  019C2C  6F10               	movwf	OLED_PutChar@ch& (0+255),b
 25037                           
 25038                           ;oled.c: 233: if((ch < 32) || (ch > 127)) {
 25039  019C2E  0E1F               	movlw	31
 25040  019C30  0102               	movlb	2	; () banked
 25041  019C32  6510               	cpfsgt	OLED_PutChar@ch& (0+255),b
 25042  019C34  D003               	goto	u20090
 25043                           
 25044                           ; BSR set to: 2
 25045  019C36  0E7F               	movlw	127
 25046  019C38  6510               	cpfsgt	OLED_PutChar@ch& (0+255),b
 25047  019C3A  D002               	goto	l1911
 25048  019C3C                     u20090:
 25049                           
 25050                           ; BSR set to: 2
 25051                           ;oled.c: 235: ch = ' ';
 25052                           
 25053                           ; BSR set to: 2
 25054  019C3C  0E20               	movlw	32
 25055  019C3E  6F10               	movwf	OLED_PutChar@ch& (0+255),b
 25056  019C40                     l1911:
 25057                           
 25058                           ; BSR set to: 2
 25059                           ;oled.c: 237: }
 25060                           ;oled.c: 239: uint8_t length;
 25061                           ;oled.c: 241: uint8_t data_array[9];
 25062                           ;oled.c: 243: data_array[0] = 0x40;
 25063  019C40  0E40               	movlw	64
 25064  019C42  6F04               	movwf	OLED_PutChar@data_array& (0+255),b
 25065                           
 25066                           ; BSR set to: 2
 25067                           ;oled.c: 245: const uint8_t *input_base = &OledFont[ch - 32][0];
 25068  019C44  0E00               	movlw	0
 25069  019C46  6F00               	movwf	??_OLED_PutChar& (0+255),b
 25070  019C48  0EFF               	movlw	255
 25071  019C4A  6F01               	movwf	(??_OLED_PutChar+1)& (0+255),b
 25072  019C4C  5110               	movf	OLED_PutChar@ch& (0+255),w,b
 25073  019C4E  6F02               	movwf	(??_OLED_PutChar+2)& (0+255),b
 25074  019C50  6B03               	clrf	(??_OLED_PutChar+3)& (0+255),b
 25075  019C52  90D8               	bcf	status,0,c
 25076  019C54  3702               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 25077  019C56  3703               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 25078  019C58  90D8               	bcf	status,0,c
 25079  019C5A  3702               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 25080  019C5C  3703               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 25081  019C5E  90D8               	bcf	status,0,c
 25082  019C60  3702               	rlcf	(??_OLED_PutChar+2)& (0+255),f,b
 25083  019C62  3703               	rlcf	(??_OLED_PutChar+3)& (0+255),f,b
 25084  019C64  5100               	movf	??_OLED_PutChar& (0+255),w,b
 25085  019C66  2702               	addwf	(??_OLED_PutChar+2)& (0+255),f,b
 25086  019C68  5101               	movf	(??_OLED_PutChar+1)& (0+255),w,b
 25087  019C6A  2303               	addwfc	(??_OLED_PutChar+3)& (0+255),f,b
 25088  019C6C  0E9B               	movlw	low _OledFont
 25089  019C6E  2502               	addwf	(??_OLED_PutChar+2)& (0+255),w,b
 25090  019C70  6F0D               	movwf	OLED_PutChar@input_base& (0+255),b
 25091  019C72  0ECE               	movlw	high _OledFont
 25092  019C74  2103               	addwfc	(??_OLED_PutChar+3)& (0+255),w,b
 25093  019C76  6F0E               	movwf	(OLED_PutChar@input_base+1)& (0+255),b
 25094                           
 25095                           ; BSR set to: 2
 25096                           ;oled.c: 247: memmove(data_array + 1, input_base, 8);
 25097  019C78  0E05               	movlw	low (OLED_PutChar@data_array+1)
 25098  019C7A  0101               	movlb	1	; () banked
 25099  019C7C  6F4F               	movwf	memmove@d1& (0+255),b
 25100  019C7E  0E02               	movlw	high (OLED_PutChar@data_array+1)
 25101  019C80  6F50               	movwf	(memmove@d1+1)& (0+255),b
 25102  019C82  C20D  F151         	movff	OLED_PutChar@input_base,memmove@s1
 25103  019C86  C20E  F152         	movff	OLED_PutChar@input_base+1,memmove@s1+1
 25104  019C8A  0E00               	movlw	0
 25105  019C8C  6F54               	movwf	(memmove@n+1)& (0+255),b
 25106  019C8E  0E08               	movlw	8
 25107  019C90  6F53               	movwf	memmove@n& (0+255),b
 25108  019C92  EC35  F0CF         	call	_memmove	;wreg free
 25109                           
 25110                           ;oled.c: 250: length = 9;
 25111  019C96  0E09               	movlw	9
 25112  019C98  0102               	movlb	2	; () banked
 25113  019C9A  6F0F               	movwf	OLED_PutChar@length& (0+255),b
 25114                           
 25115                           ; BSR set to: 2
 25116                           ;oled.c: 252: I2C1_MasterWrite(data_array, length, (uint16_t) 0x3C, &OLED_I2C_Status);
 25117  019C9C  0E04               	movlw	low OLED_PutChar@data_array
 25118  019C9E  0101               	movlb	1	; () banked
 25119  019CA0  6F58               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 25120  019CA2  0E02               	movlw	high OLED_PutChar@data_array
 25121  019CA4  6F59               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 25122  019CA6  C20F  F15A         	movff	OLED_PutChar@length,I2C1_MasterWrite@length
 25123  019CAA  0E00               	movlw	0
 25124  019CAC  6F5C               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
 25125  019CAE  0E3C               	movlw	60
 25126  019CB0  6F5B               	movwf	I2C1_MasterWrite@address& (0+255),b
 25127  019CB2  0EAB               	movlw	low _OLED_I2C_Status
 25128  019CB4  6F5D               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 25129  019CB6  0E01               	movlw	high _OLED_I2C_Status
 25130  019CB8  6F5E               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 25131  019CBA  ECB9  F0D7         	call	_I2C1_MasterWrite	;wreg free
 25132  019CBE  0E02               	movlw	2
 25133  019CC0  0101               	movlb	1	; () banked
 25134  019CC2  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 25135  019CC4  B4D8               	btfsc	status,2,c
 25136  019CC6  D7FB               	goto	l1915
 25137                           
 25138                           ; BSR set to: 1
 25139                           ;oled.c: 256: if ( OLED_I2C_Status == I2C1_MESSAGE_FAIL ||
 25140                           ;oled.c: 257: OLED_I2C_Status == I2C1_STUCK_START ||
 25141                           ;oled.c: 258: OLED_I2C_Status == I2C1_MESSAGE_ADDRESS_NO_ACK ||
 25142                           ;oled.c: 259: OLED_I2C_Status == I2C1_DATA_NO_ACK ||
 25143                           ;oled.c: 260: OLED_I2C_Status == I2C1_LOST_STATE ) {
 25144                           
 25145                           ; BSR set to: 1
 25146  019CC8  05AB               	decf	_OLED_I2C_Status& (0+255),w,b
 25147  019CCA  B4D8               	btfsc	status,2,c
 25148  019CCC  D010               	goto	u20150
 25149                           
 25150                           ; BSR set to: 1
 25151  019CCE  0E03               	movlw	3
 25152  019CD0  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 25153  019CD2  B4D8               	btfsc	status,2,c
 25154  019CD4  D00C               	goto	u20150
 25155                           
 25156                           ; BSR set to: 1
 25157  019CD6  0E04               	movlw	4
 25158  019CD8  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 25159  019CDA  B4D8               	btfsc	status,2,c
 25160  019CDC  D008               	goto	u20150
 25161                           
 25162                           ; BSR set to: 1
 25163  019CDE  0E05               	movlw	5
 25164  019CE0  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 25165  019CE2  B4D8               	btfsc	status,2,c
 25166  019CE4  D004               	goto	u20150
 25167                           
 25168                           ; BSR set to: 1
 25169  019CE6  0E06               	movlw	6
 25170  019CE8  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 25171  019CEA  A4D8               	btfss	status,2,c
 25172  019CEC  0012               	return	
 25173  019CEE                     u20150:
 25174                           
 25175                           ; BSR set to: 1
 25176                           ;oled.c: 261: error_handler.I2C_COMM_error_flag = 1;
 25177                           
 25178                           ; BSR set to: 1
 25179  019CEE  0E01               	movlw	1
 25180  019CF0  6F67               	movwf	(_error_handler+7)& (0+255),b
 25181  019CF2  0012               	return	
 25182  019CF4                     __end_of_OLED_PutChar:
 25183                           	opt stack 0
 25184                           tblptru	equ	0xFF8
 25185                           tblptrh	equ	0xFF7
 25186                           tblptrl	equ	0xFF6
 25187                           tablat	equ	0xFF5
 25188                           prodh	equ	0xFF4
 25189                           prodl	equ	0xFF3
 25190                           intcon	equ	0xFF2
 25191                           indf0	equ	0xFEF
 25192                           postinc0	equ	0xFEE
 25193                           fsr0h	equ	0xFEA
 25194                           fsr0l	equ	0xFE9
 25195                           wreg	equ	0xFE8
 25196                           indf1	equ	0xFE7
 25197                           postdec1	equ	0xFE5
 25198                           plusw1	equ	0xFE3
 25199                           fsr1h	equ	0xFE2
 25200                           fsr1l	equ	0xFE1
 25201                           indf2	equ	0xFDF
 25202                           postinc2	equ	0xFDE
 25203                           postdec2	equ	0xFDD
 25204                           plusw2	equ	0xFDB
 25205                           fsr2h	equ	0xFDA
 25206                           fsr2l	equ	0xFD9
 25207                           status	equ	0xFD8
 25208                           
 25209 ;; *************** function _memmove *****************
 25210 ;; Defined at:
 25211 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memmove.c"
 25212 ;; Parameters:    Size  Location     Type
 25213 ;;  d1              2   79[BANK1 ] PTR void 
 25214 ;;		 -> OLED_PutChar@data_array(9), 
 25215 ;;  s1              2   81[BANK1 ] PTR const void 
 25216 ;;		 -> OledFont(768), 
 25217 ;;  n               2   83[BANK1 ] unsigned int 
 25218 ;; Auto vars:     Size  Location     Type
 25219 ;;  s               2   89[BANK1 ] PTR const unsigned char 
 25220 ;;		 -> OledFont(768), 
 25221 ;;  d               2   87[BANK1 ] PTR unsigned char 
 25222 ;;		 -> OLED_PutChar@data_array(9), 
 25223 ;; Return value:  Size  Location     Type
 25224 ;;                  2   79[BANK1 ] PTR void 
 25225 ;; Registers used:
 25226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 25227 ;; Tracked objects:
 25228 ;;		On entry : 0/0
 25229 ;;		On exit  : 0/0
 25230 ;;		Unchanged: 0/0
 25231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25232 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25233 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25234 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25235 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25236 ;;Total ram usage:       12 bytes
 25237 ;; Hardware stack levels used:    1
 25238 ;; Hardware stack levels required when called:   19
 25239 ;; This function calls:
 25240 ;;		Nothing
 25241 ;; This function is called by:
 25242 ;;		_OLED_PutChar
 25243 ;; This function uses a non-reentrant model
 25244 ;;
 25245                           
 25246                           	psect	text38
 25247  019E6A                     __ptext38:
 25248                           	opt stack 0
 25249  019E6A                     _memmove:
 25250                           	opt stack 5
 25251                           
 25252                           ; BSR set to: 1
 25253                           ;incstack = 0
 25254  019E6A  C151  F159         	movff	memmove@s1,memmove@s
 25255  019E6E  C152  F15A         	movff	memmove@s1+1,memmove@s+1
 25256  019E72  C14F  F157         	movff	memmove@d1,memmove@d
 25257  019E76  C150  F158         	movff	memmove@d1+1,memmove@d+1
 25258  019E7A  0101               	movlb	1	; () banked
 25259  019E7C  5157               	movf	memmove@d& (0+255),w,b
 25260  019E7E  5D59               	subwf	memmove@s& (0+255),w,b
 25261  019E80  5158               	movf	(memmove@d+1)& (0+255),w,b
 25262  019E82  595A               	subwfb	(memmove@s+1)& (0+255),w,b
 25263  019E84  B0D8               	btfsc	status,0,c
 25264  019E86  D02F               	goto	l2832
 25265                           
 25266                           ; BSR set to: 1
 25267  019E88  5153               	movf	memmove@n& (0+255),w,b
 25268  019E8A  2559               	addwf	memmove@s& (0+255),w,b
 25269  019E8C  6F55               	movwf	??_memmove& (0+255),b
 25270  019E8E  5154               	movf	(memmove@n+1)& (0+255),w,b
 25271  019E90  215A               	addwfc	(memmove@s+1)& (0+255),w,b
 25272  019E92  6F56               	movwf	(??_memmove+1)& (0+255),b
 25273  019E94  5155               	movf	??_memmove& (0+255),w,b
 25274  019E96  5D57               	subwf	memmove@d& (0+255),w,b
 25275  019E98  5156               	movf	(??_memmove+1)& (0+255),w,b
 25276  019E9A  5958               	subwfb	(memmove@d+1)& (0+255),w,b
 25277  019E9C  B0D8               	btfsc	status,0,c
 25278  019E9E  D023               	goto	l2832
 25279                           
 25280                           ; BSR set to: 1
 25281  019EA0  5153               	movf	memmove@n& (0+255),w,b
 25282  019EA2  2759               	addwf	memmove@s& (0+255),f,b
 25283  019EA4  5154               	movf	(memmove@n+1)& (0+255),w,b
 25284  019EA6  235A               	addwfc	(memmove@s+1)& (0+255),f,b
 25285  019EA8  5153               	movf	memmove@n& (0+255),w,b
 25286  019EAA  2757               	addwf	memmove@d& (0+255),f,b
 25287  019EAC  5154               	movf	(memmove@n+1)& (0+255),w,b
 25288  019EAE  2358               	addwfc	(memmove@d+1)& (0+255),f,b
 25289  019EB0                     
 25290                           ; BSR set to: 1
 25291                           
 25292                           ; BSR set to: 1
 25293  019EB0  0759               	decf	memmove@s& (0+255),f,b
 25294  019EB2  A0D8               	btfss	status,0,c
 25295  019EB4  075A               	decf	(memmove@s+1)& (0+255),f,b
 25296  019EB6  C159  FFF6         	movff	memmove@s,tblptrl
 25297  019EBA  C15A  FFF7         	movff	memmove@s+1,tblptrh
 25298  019EBE                     	if	0	;tblptru may be non-zero
 25299  019EBE                     	endif
 25300  019EBE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25301  019EBE  0E00               	movlw	low (__mediumconst shr (0+16))
 25302  019EC0  6EF8               	movwf	tblptru,c
 25303  019EC2                     	endif
 25304  019EC2  0757               	decf	memmove@d& (0+255),f,b
 25305  019EC4  A0D8               	btfss	status,0,c
 25306  019EC6  0758               	decf	(memmove@d+1)& (0+255),f,b
 25307  019EC8  C157  FFD9         	movff	memmove@d,fsr2l
 25308  019ECC  C158  FFDA         	movff	memmove@d+1,fsr2h
 25309  019ED0  0008               	tblrd		*
 25310  019ED2  CFF5 FFDF          	movff	tablat,indf2
 25311                           
 25312                           ; BSR set to: 1
 25313  019ED6  0753               	decf	memmove@n& (0+255),f,b
 25314  019ED8  A0D8               	btfss	status,0,c
 25315  019EDA  0754               	decf	(memmove@n+1)& (0+255),f,b
 25316  019EDC  5153               	movf	memmove@n& (0+255),w,b
 25317  019EDE  1154               	iorwf	(memmove@n+1)& (0+255),w,b
 25318  019EE0  B4D8               	btfsc	status,2,c
 25319  019EE2  0012               	return	
 25320  019EE4  D7E5               	goto	l2833
 25321  019EE6                     l2832:
 25322                           
 25323                           ; BSR set to: 1
 25324                           
 25325                           ; BSR set to: 1
 25326  019EE6  5153               	movf	memmove@n& (0+255),w,b
 25327  019EE8  1154               	iorwf	(memmove@n+1)& (0+255),w,b
 25328  019EEA  B4D8               	btfsc	status,2,c
 25329  019EEC  0012               	return	
 25330                           
 25331                           ; BSR set to: 1
 25332                           
 25333                           ; BSR set to: 1
 25334  019EEE  C159  FFF6         	movff	memmove@s,tblptrl
 25335  019EF2  C15A  FFF7         	movff	memmove@s+1,tblptrh
 25336  019EF6                     	if	0	;tblptru may be non-zero
 25337  019EF6                     	endif
 25338  019EF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25339  019EF6  0E00               	movlw	low (__mediumconst shr (0+16))
 25340  019EF8  6EF8               	movwf	tblptru,c
 25341  019EFA                     	endif
 25342  019EFA  C157  FFD9         	movff	memmove@d,fsr2l
 25343  019EFE  C158  FFDA         	movff	memmove@d+1,fsr2h
 25344  019F02  0008               	tblrd		*
 25345  019F04  CFF5 FFDF          	movff	tablat,indf2
 25346                           
 25347                           ; BSR set to: 1
 25348  019F08  4B59               	infsnz	memmove@s& (0+255),f,b
 25349  019F0A  2B5A               	incf	(memmove@s+1)& (0+255),f,b
 25350                           
 25351                           ; BSR set to: 1
 25352  019F0C  4B57               	infsnz	memmove@d& (0+255),f,b
 25353  019F0E  2B58               	incf	(memmove@d+1)& (0+255),f,b
 25354                           
 25355                           ; BSR set to: 1
 25356  019F10  0753               	decf	memmove@n& (0+255),f,b
 25357  019F12  A0D8               	btfss	status,0,c
 25358  019F14  0754               	decf	(memmove@n+1)& (0+255),f,b
 25359  019F16  D7E7               	goto	l2832
 25360  019F18                     __end_of_memmove:
 25361                           	opt stack 0
 25362                           tblptru	equ	0xFF8
 25363                           tblptrh	equ	0xFF7
 25364                           tblptrl	equ	0xFF6
 25365                           tablat	equ	0xFF5
 25366                           prodh	equ	0xFF4
 25367                           prodl	equ	0xFF3
 25368                           intcon	equ	0xFF2
 25369                           indf0	equ	0xFEF
 25370                           postinc0	equ	0xFEE
 25371                           fsr0h	equ	0xFEA
 25372                           fsr0l	equ	0xFE9
 25373                           wreg	equ	0xFE8
 25374                           indf1	equ	0xFE7
 25375                           postdec1	equ	0xFE5
 25376                           plusw1	equ	0xFE3
 25377                           fsr1h	equ	0xFE2
 25378                           fsr1l	equ	0xFE1
 25379                           indf2	equ	0xFDF
 25380                           postinc2	equ	0xFDE
 25381                           postdec2	equ	0xFDD
 25382                           plusw2	equ	0xFDB
 25383                           fsr2h	equ	0xFDA
 25384                           fsr2l	equ	0xFD9
 25385                           status	equ	0xFD8
 25386                           
 25387 ;; *************** function _EUSART2_Read *****************
 25388 ;; Defined at:
 25389 ;;		line 134 in file "mcc_generated_files/eusart2.c"
 25390 ;; Parameters:    Size  Location     Type
 25391 ;;		None
 25392 ;; Auto vars:     Size  Location     Type
 25393 ;;  readValue       1   79[BANK1 ] unsigned char 
 25394 ;; Return value:  Size  Location     Type
 25395 ;;                  1    wreg      unsigned char 
 25396 ;; Registers used:
 25397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25398 ;; Tracked objects:
 25399 ;;		On entry : 0/0
 25400 ;;		On exit  : 0/0
 25401 ;;		Unchanged: 0/0
 25402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25404 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25406 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25407 ;;Total ram usage:        1 bytes
 25408 ;; Hardware stack levels used:    1
 25409 ;; Hardware stack levels required when called:   19
 25410 ;; This function calls:
 25411 ;;		Nothing
 25412 ;; This function is called by:
 25413 ;;		_terminal_ringBufferPull
 25414 ;;		_getch
 25415 ;; This function uses a non-reentrant model
 25416 ;;
 25417                           
 25418                           	psect	text39
 25419  01B1D2                     __ptext39:
 25420                           	opt stack 0
 25421  01B1D2                     _EUSART2_Read:
 25422                           	opt stack 10
 25423                           
 25424                           ;eusart2.c: 136: uint8_t readValue = 0;
 25425                           
 25426                           ; BSR set to: 1
 25427                           ;incstack = 0
 25428  01B1D2  0E00               	movlw	0
 25429  01B1D4  0101               	movlb	1	; () banked
 25430  01B1D6  6F4F               	movwf	EUSART2_Read@readValue& (0+255),b
 25431                           
 25432                           ;eusart2.c: 138: while(0 == eusart2RxCount)
 25433  01B1D8  D004               	goto	l429
 25434  01B1DA                     l430:
 25435                           
 25436                           ; BSR set to: 1
 25437  01B1DA  0004               	clrwdt		;# 
 25438                           
 25439                           ;eusart2.c: 141: error_handler.USB_UART_COMM_error_flag = 1;
 25440  01B1DC  0E01               	movlw	1
 25441  01B1DE  0101               	movlb	1	; () banked
 25442  01B1E0  6F68               	movwf	(_error_handler+8)& (0+255),b
 25443  01B1E2                     l429:
 25444                           
 25445                           ; BSR set to: 1
 25446  01B1E2  51A2               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 25447  01B1E4  B4D8               	btfsc	status,2,c
 25448  01B1E6  D7F9               	goto	l430
 25449                           
 25450                           ; BSR set to: 1
 25451                           ;eusart2.c: 142: }
 25452                           ;eusart2.c: 144: readValue = eusart2RxBuffer[eusart2RxTail++];
 25453                           
 25454                           ; BSR set to: 1
 25455  01B1E8  51A3               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 25456  01B1EA  0D01               	mullw	1
 25457  01B1EC  0E00               	movlw	low _eusart2RxBuffer
 25458  01B1EE  24F3               	addwf	prodl,w,c
 25459  01B1F0  6ED9               	movwf	fsr2l,c
 25460  01B1F2  0E03               	movlw	high _eusart2RxBuffer
 25461  01B1F4  20F4               	addwfc	prodh,w,c
 25462  01B1F6  6EDA               	movwf	fsr2h,c
 25463  01B1F8  50DF               	movf	indf2,w,c
 25464  01B1FA  6F4F               	movwf	EUSART2_Read@readValue& (0+255),b
 25465                           
 25466                           ; BSR set to: 1
 25467  01B1FC  2BA3               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 25468                           
 25469                           ; BSR set to: 1
 25470                           ;eusart2.c: 145: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 25471  01B1FE  0E3F               	movlw	63
 25472  01B200  65A3               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 25473  01B202  D002               	goto	l432
 25474                           
 25475                           ; BSR set to: 1
 25476                           ;eusart2.c: 146: {
 25477                           ;eusart2.c: 147: eusart2RxTail = 0;
 25478  01B204  0E00               	movlw	0
 25479  01B206  6FA3               	movwf	_eusart2RxTail& (0+255),b	;volatile
 25480  01B208                     l432:
 25481                           
 25482                           ; BSR set to: 1
 25483                           ;eusart2.c: 148: }
 25484                           ;eusart2.c: 149: PIE3bits.RC2IE = 0;
 25485                           
 25486                           ; BSR set to: 1
 25487  01B208  010E               	movlb	14	; () banked
 25488  01B20A  9F2C               	bcf	44,7,b	;volatile
 25489                           
 25490                           ; BSR set to: 14
 25491                           ;eusart2.c: 150: eusart2RxCount--;
 25492  01B20C  0101               	movlb	1	; () banked
 25493  01B20E  07A2               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 25494                           
 25495                           ; BSR set to: 1
 25496                           ;eusart2.c: 151: PIE3bits.RC2IE = 1;
 25497  01B210  010E               	movlb	14	; () banked
 25498  01B212  8F2C               	bsf	44,7,b	;volatile
 25499                           
 25500                           ; BSR set to: 14
 25501                           ;eusart2.c: 152: return readValue;
 25502  01B214  0101               	movlb	1	; () banked
 25503  01B216  514F               	movf	EUSART2_Read@readValue& (0+255),w,b
 25504  01B218  0012               	return	
 25505  01B21A                     __end_of_EUSART2_Read:
 25506                           	opt stack 0
 25507                           tblptru	equ	0xFF8
 25508                           tblptrh	equ	0xFF7
 25509                           tblptrl	equ	0xFF6
 25510                           tablat	equ	0xFF5
 25511                           prodh	equ	0xFF4
 25512                           prodl	equ	0xFF3
 25513                           intcon	equ	0xFF2
 25514                           indf0	equ	0xFEF
 25515                           postinc0	equ	0xFEE
 25516                           fsr0h	equ	0xFEA
 25517                           fsr0l	equ	0xFE9
 25518                           wreg	equ	0xFE8
 25519                           indf1	equ	0xFE7
 25520                           postdec1	equ	0xFE5
 25521                           plusw1	equ	0xFE3
 25522                           fsr1h	equ	0xFE2
 25523                           fsr1l	equ	0xFE1
 25524                           indf2	equ	0xFDF
 25525                           postinc2	equ	0xFDE
 25526                           postdec2	equ	0xFDD
 25527                           plusw2	equ	0xFDB
 25528                           fsr2h	equ	0xFDA
 25529                           fsr2l	equ	0xFD9
 25530                           status	equ	0xFD8
 25531                           
 25532 ;; *************** function _terminal_clearTerminal *****************
 25533 ;; Defined at:
 25534 ;;		line 80 in file "ring_buffer_interface.c"
 25535 ;; Parameters:    Size  Location     Type
 25536 ;;		None
 25537 ;; Auto vars:     Size  Location     Type
 25538 ;;		None
 25539 ;; Return value:  Size  Location     Type
 25540 ;;                  1    wreg      void 
 25541 ;; Registers used:
 25542 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25543 ;; Tracked objects:
 25544 ;;		On entry : 0/0
 25545 ;;		On exit  : 0/0
 25546 ;;		Unchanged: 0/0
 25547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25552 ;;Total ram usage:        0 bytes
 25553 ;; Hardware stack levels used:    1
 25554 ;; Hardware stack levels required when called:   23
 25555 ;; This function calls:
 25556 ;;		_printf
 25557 ;; This function is called by:
 25558 ;;		_main
 25559 ;; This function uses a non-reentrant model
 25560 ;;
 25561                           
 25562                           	psect	text40
 25563  01BEF6                     __ptext40:
 25564                           	opt stack 0
 25565  01BEF6                     _terminal_clearTerminal:
 25566                           	opt stack 7
 25567                           
 25568                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 25569                           
 25570                           ; BSR set to: 1
 25571                           ;incstack = 0
 25572  01BEF6  0EB3               	movlw	low STR_19
 25573  01BEF8  0102               	movlb	2	; () banked
 25574  01BEFA  6F85               	movwf	printf@f& (0+255),b
 25575  01BEFC  0EFF               	movlw	high STR_19
 25576  01BEFE  6F86               	movwf	(printf@f+1)& (0+255),b
 25577  01BF00  ECA0  F0DA         	call	_printf	;wreg free
 25578  01BF04  0012               	return		;funcret
 25579  01BF06                     __end_of_terminal_clearTerminal:
 25580                           	opt stack 0
 25581                           tblptru	equ	0xFF8
 25582                           tblptrh	equ	0xFF7
 25583                           tblptrl	equ	0xFF6
 25584                           tablat	equ	0xFF5
 25585                           prodh	equ	0xFF4
 25586                           prodl	equ	0xFF3
 25587                           intcon	equ	0xFF2
 25588                           indf0	equ	0xFEF
 25589                           postinc0	equ	0xFEE
 25590                           fsr0h	equ	0xFEA
 25591                           fsr0l	equ	0xFE9
 25592                           wreg	equ	0xFE8
 25593                           indf1	equ	0xFE7
 25594                           postdec1	equ	0xFE5
 25595                           plusw1	equ	0xFE3
 25596                           fsr1h	equ	0xFE2
 25597                           fsr1l	equ	0xFE1
 25598                           indf2	equ	0xFDF
 25599                           postinc2	equ	0xFDE
 25600                           postdec2	equ	0xFDD
 25601                           plusw2	equ	0xFDB
 25602                           fsr2h	equ	0xFDA
 25603                           fsr2l	equ	0xFD9
 25604                           status	equ	0xFD8
 25605                           
 25606 ;; *************** function _printf *****************
 25607 ;; Defined at:
 25608 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\printf.c"
 25609 ;; Parameters:    Size  Location     Type
 25610 ;;  f               2  133[BANK2 ] PTR const unsigned char 
 25611 ;;		 -> STR_188(13), STR_187(31), STR_186(26), STR_185(28), 
 25612 ;;		 -> STR_184(426), STR_182(30), STR_181(46), STR_180(39), 
 25613 ;;		 -> STR_179(62), STR_178(55), STR_177(470), STR_175(3086), 
 25614 ;;		 -> STR_173(492), STR_171(748), STR_169(720), STR_167(974), 
 25615 ;;		 -> STR_165(54), STR_163(54), STR_161(45), STR_159(51), 
 25616 ;;		 -> STR_157(52), STR_155(46), STR_153(51), STR_151(53), 
 25617 ;;		 -> STR_149(58), STR_147(71), STR_146(63), STR_145(37), 
 25618 ;;		 -> STR_144(46), STR_143(102), STR_142(86), STR_140(25), 
 25619 ;;		 -> STR_138(42), STR_137(53), STR_136(31), STR_134(29), 
 25620 ;;		 -> STR_133(28), STR_131(42), STR_129(41), STR_127(34), 
 25621 ;;		 -> STR_125(53), STR_124(52), STR_123(105), STR_122(105), 
 25622 ;;		 -> STR_120(59), STR_118(73), STR_116(56), STR_114(34), 
 25623 ;;		 -> STR_112(34), STR_110(32), STR_108(37), STR_106(58), 
 25624 ;;		 -> STR_104(36), STR_102(36), STR_100(37), STR_98(34), 
 25625 ;;		 -> STR_96(38), STR_95(60), STR_94(32), STR_93(23), 
 25626 ;;		 -> STR_92(65), STR_90(23), STR_88(27), STR_87(48), 
 25627 ;;		 -> STR_86(15), STR_85(13), STR_84(12), STR_83(11), 
 25628 ;;		 -> STR_82(10), STR_81(11), STR_80(24), STR_79(46), 
 25629 ;;		 -> STR_78(25), STR_76(54), STR_75(64), STR_73(59), 
 25630 ;;		 -> STR_71(85), STR_69(47), STR_68(17), STR_65(52), 
 25631 ;;		 -> STR_63(4), STR_62(5), STR_60(4), STR_59(5), 
 25632 ;;		 -> STR_57(3), terminal_textAttributes@output_buff(15), STR_27(4), STR_26(4), 
 25633 ;;		 -> STR_25(4), STR_24(4), STR_23(5), STR_22(3), 
 25634 ;;		 -> STR_21(372), STR_20(4), STR_19(5), STR_1(4), 
 25635 ;; Auto vars:     Size  Location     Type
 25636 ;;  pb              5    2[BANK3 ] struct __prbuf
 25637 ;;  ap              2    0[BANK3 ] PTR void [1]
 25638 ;;		 -> ?i2_printf(2), ?_sprintf(2), ?_printf(2), 
 25639 ;; Return value:  Size  Location     Type
 25640 ;;                  2  133[BANK2 ] int 
 25641 ;; Registers used:
 25642 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25643 ;; Tracked objects:
 25644 ;;		On entry : 0/0
 25645 ;;		On exit  : 0/0
 25646 ;;		Unchanged: 0/0
 25647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25648 ;;      Params:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0
 25649 ;;      Locals:         0       0       0       0       7       0       0       0       0       0       0       0       
      +0       0       0
 25650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25651 ;;      Totals:         0       0       0      10       7       0       0       0       0       0       0       0       
      +0       0       0
 25652 ;;Total ram usage:       17 bytes
 25653 ;; Hardware stack levels used:    1
 25654 ;; Hardware stack levels required when called:   22
 25655 ;; This function calls:
 25656 ;;		__doprnt
 25657 ;; This function is called by:
 25658 ;;		_terminal_clearTerminal
 25659 ;;		_terminal_setCursorHome
 25660 ;;		_terminal_textAttributes
 25661 ;;		_terminal_printNewline
 25662 ;;		_ringBufferLUT
 25663 ;;		_terminal_printResetMessage
 25664 ;;		_terminal_clearLine
 25665 ;;		_terminal_saveCursor
 25666 ;;		_terminal_returnCursor
 25667 ;; This function uses a non-reentrant model
 25668 ;;
 25669                           
 25670                           	psect	text41
 25671  01B540                     __ptext41:
 25672                           	opt stack 0
 25673  01B540                     _printf:
 25674                           	opt stack 6
 25675                           
 25676                           ;incstack = 0
 25677  01B540  0E00               	movlw	0
 25678  01B542  0103               	movlb	3	; () banked
 25679  01B544  6FFB               	movwf	printf@pb& (0+255),b
 25680  01B546  0E00               	movlw	0
 25681  01B548  6FFC               	movwf	(printf@pb+1)& (0+255),b
 25682  01B54A  0E66               	movlw	low _putch
 25683  01B54C  6FFD               	movwf	(printf@pb+2)& (0+255),b
 25684  01B54E  0EBE               	movlw	high _putch
 25685  01B550  6FFE               	movwf	(printf@pb+3)& (0+255),b
 25686  01B552  0E01               	movlw	low (_putch shr (0+16))
 25687  01B554  6FFF               	movwf	(printf@pb+4)& (0+255),b
 25688  01B556  0E87               	movlw	low (?_printf+2)
 25689  01B558  6FF9               	movwf	printf@ap& (0+255),b
 25690  01B55A  0E02               	movlw	high (?_printf+2)
 25691  01B55C  6FFA               	movwf	(printf@ap+1)& (0+255),b
 25692                           
 25693                           ; BSR set to: 3
 25694                           ;	Return value of _printf is never used
 25695  01B55E  0EFB               	movlw	low printf@pb
 25696  01B560  0102               	movlb	2	; () banked
 25697  01B562  6F5B               	movwf	__doprnt@pb& (0+255),b
 25698  01B564  0E03               	movlw	high printf@pb
 25699  01B566  6F5C               	movwf	(__doprnt@pb+1)& (0+255),b
 25700  01B568  C285  F25D         	movff	printf@f,__doprnt@f
 25701  01B56C  C286  F25E         	movff	printf@f+1,__doprnt@f+1
 25702  01B570  0EF9               	movlw	low printf@ap
 25703  01B572  6F5F               	movwf	__doprnt@ap& (0+255),b
 25704  01B574  0E03               	movlw	high printf@ap
 25705  01B576  6F60               	movwf	(__doprnt@ap+1)& (0+255),b
 25706  01B578  EC86  F08B         	call	__doprnt	;wreg free
 25707  01B57C  0012               	return	
 25708  01B57E                     __end_of_printf:
 25709                           	opt stack 0
 25710                           tblptru	equ	0xFF8
 25711                           tblptrh	equ	0xFF7
 25712                           tblptrl	equ	0xFF6
 25713                           tablat	equ	0xFF5
 25714                           prodh	equ	0xFF4
 25715                           prodl	equ	0xFF3
 25716                           intcon	equ	0xFF2
 25717                           indf0	equ	0xFEF
 25718                           postinc0	equ	0xFEE
 25719                           fsr0h	equ	0xFEA
 25720                           fsr0l	equ	0xFE9
 25721                           wreg	equ	0xFE8
 25722                           indf1	equ	0xFE7
 25723                           postdec1	equ	0xFE5
 25724                           plusw1	equ	0xFE3
 25725                           fsr1h	equ	0xFE2
 25726                           fsr1l	equ	0xFE1
 25727                           indf2	equ	0xFDF
 25728                           postinc2	equ	0xFDE
 25729                           postdec2	equ	0xFDD
 25730                           plusw2	equ	0xFDB
 25731                           fsr2h	equ	0xFDA
 25732                           fsr2l	equ	0xFD9
 25733                           status	equ	0xFD8
 25734                           
 25735 ;; *************** function __doprnt *****************
 25736 ;; Defined at:
 25737 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 25738 ;; Parameters:    Size  Location     Type
 25739 ;;  pb              2   91[BANK2 ] PTR struct __prbuf
 25740 ;;		 -> sprintf@pb(5), printf@pb(5), 
 25741 ;;  f               2   93[BANK2 ] PTR const unsigned char 
 25742 ;;		 -> STR_216(11), STR_188(13), STR_187(31), STR_186(26), 
 25743 ;;		 -> STR_185(28), STR_184(426), STR_182(30), STR_181(46), 
 25744 ;;		 -> STR_180(39), STR_179(62), STR_178(55), STR_177(470), 
 25745 ;;		 -> STR_175(3086), STR_173(492), STR_171(748), STR_169(720), 
 25746 ;;		 -> STR_167(974), STR_165(54), STR_163(54), STR_161(45), 
 25747 ;;		 -> STR_159(51), STR_157(52), STR_155(46), STR_153(51), 
 25748 ;;		 -> STR_151(53), STR_149(58), STR_147(71), STR_146(63), 
 25749 ;;		 -> STR_145(37), STR_144(46), STR_143(102), STR_142(86), 
 25750 ;;		 -> STR_140(25), STR_138(42), STR_137(53), STR_136(31), 
 25751 ;;		 -> STR_134(29), STR_133(28), STR_131(42), STR_129(41), 
 25752 ;;		 -> STR_127(34), STR_125(53), STR_124(52), STR_123(105), 
 25753 ;;		 -> STR_122(105), STR_120(59), STR_118(73), STR_116(56), 
 25754 ;;		 -> STR_114(34), STR_112(34), STR_110(32), STR_108(37), 
 25755 ;;		 -> STR_106(58), STR_104(36), STR_102(36), STR_100(37), 
 25756 ;;		 -> STR_98(34), STR_96(38), STR_95(60), STR_94(32), 
 25757 ;;		 -> STR_93(23), STR_92(65), STR_90(23), STR_88(27), 
 25758 ;;		 -> STR_87(48), STR_86(15), STR_85(13), STR_84(12), 
 25759 ;;		 -> STR_83(11), STR_82(10), STR_81(11), STR_80(24), 
 25760 ;;		 -> STR_79(46), STR_78(25), STR_76(54), STR_75(64), 
 25761 ;;		 -> STR_73(59), STR_71(85), STR_69(47), STR_68(17), 
 25762 ;;		 -> STR_65(52), STR_63(4), STR_62(5), STR_60(4), 
 25763 ;;		 -> STR_59(5), STR_57(3), terminal_textAttributes@output_buff(15), STR_27(4), 
 25764 ;;		 -> STR_26(4), STR_25(4), STR_24(4), STR_23(5), 
 25765 ;;		 -> STR_22(3), STR_21(372), STR_20(4), STR_19(5), 
 25766 ;;		 -> STR_1(4), 
 25767 ;;  ap              2   95[BANK2 ] PTR PTR void 
 25768 ;;		 -> sprintf@ap(2), printf@ap(2), 
 25769 ;; Auto vars:     Size  Location     Type
 25770 ;;  idx             1  107[BANK2 ] unsigned char 
 25771 ;;  val             4  122[BANK2 ] unsigned long 
 25772 ;;  fval            4  118[BANK2 ] unsigned long 
 25773 ;;  tmpval          4  114[BANK2 ] struct .
 25774 ;;  prec            2  130[BANK2 ] int 
 25775 ;;  flag            2  128[BANK2 ] unsigned short 
 25776 ;;  width           2  126[BANK2 ] int 
 25777 ;;  exp             2  112[BANK2 ] int 
 25778 ;;  len             2  110[BANK2 ] unsigned int 
 25779 ;;  cp              2  108[BANK2 ] PTR const unsigned char 
 25780 ;;		 -> ?_sprintf(2), ?_printf(2), ftoa@buf(17), STR_214(7), 
 25781 ;;		 -> _doprnt@c(1), STR_201(16), STR_200(22), STR_199(21), 
 25782 ;;		 -> STR_198(27), STR_197(41), STR_196(32), STR_195(19), 
 25783 ;;		 -> STR_194(16), STR_193(15), STR_192(16), STR_191(10), 
 25784 ;;		 -> STR_190(13), STR_189(12), TRIAC_Firing_Angle(4), NULL(0), 
 25785 ;;  c               1  132[BANK2 ] char 
 25786 ;;  d               1    0        unsigned char 
 25787 ;; Return value:  Size  Location     Type
 25788 ;;                  2   91[BANK2 ] int 
 25789 ;; Registers used:
 25790 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25791 ;; Tracked objects:
 25792 ;;		On entry : 0/0
 25793 ;;		On exit  : 0/0
 25794 ;;		Unchanged: 0/0
 25795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25796 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0
 25797 ;;      Locals:         0       0       0      30       0       0       0       0       0       0       0       0       
      +0       0       0
 25798 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0
 25799 ;;      Totals:         0       0       0      42       0       0       0       0       0       0       0       0       
      +0       0       0
 25800 ;;Total ram usage:       42 bytes
 25801 ;; Hardware stack levels used:    1
 25802 ;; Hardware stack levels required when called:   21
 25803 ;; This function calls:
 25804 ;;		Absolute function
 25805 ;;		___awdiv
 25806 ;;		___fladd
 25807 ;;		___flge
 25808 ;;		___flmul
 25809 ;;		___flneg
 25810 ;;		___flsub
 25811 ;;		___fltol
 25812 ;;		___lldiv
 25813 ;;		___llmod
 25814 ;;		___wmul
 25815 ;;		___xxtofl
 25816 ;;		__div_to_l_
 25817 ;;		__tdiv_to_l_
 25818 ;;		_fround
 25819 ;;		_isdigit
 25820 ;;		_putch
 25821 ;;		_scale
 25822 ;; This function is called by:
 25823 ;;		_printf
 25824 ;; This function uses a non-reentrant model
 25825 ;;
 25826                           
 25827                           	psect	text42
 25828  01170C                     __ptext42:
 25829                           	opt stack 0
 25830  01170C                     __doprnt:
 25831                           	opt stack 6
 25832                           
 25833                           ;doprnt.c: 499: signed char c;
 25834                           ;doprnt.c: 501: int width;
 25835                           ;doprnt.c: 504: int prec;
 25836                           ;doprnt.c: 508: unsigned short flag;
 25837                           ;doprnt.c: 515: char d;
 25838                           ;doprnt.c: 516: double fval;
 25839                           ;doprnt.c: 517: int exp;
 25840                           ;doprnt.c: 523: union {
 25841                           ;doprnt.c: 524: unsigned long vd;
 25842                           ;doprnt.c: 525: double integ;
 25843                           ;doprnt.c: 526: } tmpval;
 25844                           ;doprnt.c: 528: unsigned long val;
 25845                           ;doprnt.c: 529: unsigned len;
 25846                           ;doprnt.c: 530: const char * cp;
 25847                           ;doprnt.c: 536: while(c = *f++) {
 25848                           
 25849                           ;incstack = 0
 25850  01170C  EFF7  F095         	goto	u34740
 25851  011710                     
 25852                           ;doprnt.c: 538: if(c != '%')
 25853  011710  0E25               	movlw	37
 25854  011712  0102               	movlb	2	; () banked
 25855  011714  1984               	xorwf	__doprnt@c& (0+255),w,b
 25856  011716  B4D8               	btfsc	status,2,c
 25857  011718  D036               	goto	l2101
 25858                           
 25859                           ; BSR set to: 2
 25860                           ;doprnt.c: 540: {
 25861                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 25862  01171A  EE20 F002          	lfsr	2,2
 25863  01171E  515B               	movf	__doprnt@pb& (0+255),w,b
 25864  011720  26D9               	addwf	fsr2l,f,c
 25865  011722  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 25866  011724  22DA               	addwfc	fsr2h,f,c
 25867  011726  50DE               	movf	postinc2,w,c
 25868  011728  10DE               	iorwf	postinc2,w,c
 25869  01172A  10DE               	iorwf	postinc2,w,c
 25870  01172C  B4D8               	btfsc	status,2,c
 25871  01172E  D014               	goto	l2102
 25872                           
 25873                           ; BSR set to: 2
 25874  011730  EE20 F002          	lfsr	2,2
 25875  011734  515B               	movf	__doprnt@pb& (0+255),w,b
 25876  011736  26D9               	addwf	fsr2l,f,c
 25877  011738  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 25878  01173A  22DA               	addwfc	fsr2h,f,c
 25879  01173C  D802               	call	u33648
 25880  01173E  EFF7  F095         	goto	u34740
 25881  011742                     u33648:
 25882  011742  0005               	push	
 25883  011744  6EFA               	movwf	pclath,c
 25884  011746  50DE               	movf	postinc2,w,c
 25885  011748  6EFD               	movwf	tosl,c
 25886  01174A  50DE               	movf	postinc2,w,c
 25887  01174C  6EFE               	movwf	tosh,c
 25888  01174E  50DE               	movf	postinc2,w,c
 25889  011750  6EFF               	movwf	tosu,c
 25890  011752  50FA               	movf	pclath,w,c
 25891  011754  5184               	movf	__doprnt@c& (0+255),w,b
 25892  011756  0012               	return		;indir
 25893  011758                     l2102:
 25894  011758  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 25895  01175C  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 25896  011760  CFDE F261          	movff	postinc2,??__doprnt
 25897  011764  CFDD F262          	movff	postdec2,??__doprnt+1
 25898  011768  C261  FFD9         	movff	??__doprnt,fsr2l
 25899  01176C  C262  FFDA         	movff	??__doprnt+1,fsr2h
 25900  011770  C284  FFDF         	movff	__doprnt@c,indf2
 25901  011774  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 25902  011778  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 25903  01177C  2ADE               	incf	postinc2,f,c
 25904  01177E  0E00               	movlw	0
 25905  011780  22DD               	addwfc	postdec2,f,c
 25906                           
 25907                           ;doprnt.c: 542: continue;
 25908  011782  EFF7  F095         	goto	u34740
 25909  011786                     l2101:
 25910                           
 25911                           ;doprnt.c: 543: }
 25912                           ;doprnt.c: 546: width = 0;
 25913  011786  0E00               	movlw	0
 25914  011788  0102               	movlb	2	; () banked
 25915  01178A  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 25916  01178C  0E00               	movlw	0
 25917  01178E  6F7E               	movwf	__doprnt@width& (0+255),b
 25918                           
 25919                           ;doprnt.c: 548: flag = 0;
 25920  011790  0E00               	movlw	0
 25921  011792  6F81               	movwf	(__doprnt@flag+1)& (0+255),b
 25922  011794  0E00               	movlw	0
 25923  011796  6F80               	movwf	__doprnt@flag& (0+255),b
 25924                           
 25925                           ; BSR set to: 2
 25926                           ;doprnt.c: 551: switch(*f) {
 25927                           
 25928                           ;doprnt.c: 550: for(;;) {
 25929  011798  D004               	goto	l2105
 25930  01179A                     
 25931                           ;doprnt.c: 580: flag |= 0x04;
 25932                           
 25933                           ; BSR set to: 2
 25934  01179A  0102               	movlb	2	; () banked
 25935  01179C  8580               	bsf	__doprnt@flag& (0+255),2,b
 25936                           
 25937                           ;doprnt.c: 581: f++;
 25938  01179E  4B5D               	infsnz	__doprnt@f& (0+255),f,b
 25939  0117A0  2B5E               	incf	(__doprnt@f+1)& (0+255),f,b
 25940  0117A2                     l2105:
 25941                           
 25942                           ; BSR set to: 2
 25943  0117A2  C25D  FFF6         	movff	__doprnt@f,tblptrl
 25944  0117A6  C25E  FFF7         	movff	__doprnt@f+1,tblptrh
 25945  0117AA  0E00               	movlw	low (__mediumconst shr (0+16))
 25946  0117AC  6EF8               	movwf	tblptru,c
 25947  0117AE  0E0D               	movlw	(high __ramtop+-1)
 25948  0117B0  64F7               	cpfsgt	tblptrh,c
 25949  0117B2  D003               	bra	u33657
 25950  0117B4  0008               	tblrd		*
 25951  0117B6  50F5               	movf	tablat,w,c
 25952  0117B8  D005               	bra	u33650
 25953  0117BA                     u33657:
 25954  0117BA  CFF6 FFE9          	movff	tblptrl,fsr0l
 25955  0117BE  CFF7 FFEA          	movff	tblptrh,fsr0h
 25956  0117C2  50EF               	movf	indf0,w,c
 25957  0117C4                     u33650:
 25958                           
 25959                           ; Switch size 1, requested type "space"
 25960                           ; Number of cases is 1, Range of values is 48 to 48
 25961                           ; switch strategies available:
 25962                           ; Name         Instructions Cycles
 25963                           ; simple_byte            4     3 (average)
 25964                           ;	Chosen strategy is simple_byte
 25965  0117C4  0A30               	xorlw	48	; case 48
 25966  0117C6  B4D8               	btfsc	status,2,c
 25967  0117C8  D7E8               	goto	l2106
 25968                           
 25969                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 25970                           
 25971                           ;doprnt.c: 586: }
 25972                           
 25973                           ;doprnt.c: 585: break;
 25974  0117CA  C25D  FFF6         	movff	__doprnt@f,tblptrl
 25975  0117CE  C25E  FFF7         	movff	__doprnt@f+1,tblptrh
 25976  0117D2  0E00               	movlw	low (__mediumconst shr (0+16))
 25977  0117D4  6EF8               	movwf	tblptru,c
 25978  0117D6  0E0D               	movlw	(high __ramtop+-1)
 25979  0117D8  64F7               	cpfsgt	tblptrh,c
 25980  0117DA  D003               	bra	u33667
 25981  0117DC  0008               	tblrd		*
 25982  0117DE  50F5               	movf	tablat,w,c
 25983  0117E0  D005               	bra	u33660
 25984  0117E2                     u33667:
 25985  0117E2  CFF6 FFE9          	movff	tblptrl,fsr0l
 25986  0117E6  CFF7 FFEA          	movff	tblptrh,fsr0h
 25987  0117EA  50EF               	movf	indf0,w,c
 25988  0117EC                     u33660:
 25989  0117EC  EC48  F0DE         	call	_isdigit
 25990  0117F0  A0D8               	btfss	status,0,c
 25991  0117F2  D04C               	goto	u33700
 25992                           
 25993                           ;doprnt.c: 598: width = 0;
 25994  0117F4  0E00               	movlw	0
 25995  0117F6  0102               	movlb	2	; () banked
 25996  0117F8  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 25997  0117FA  0E00               	movlw	0
 25998  0117FC  6F7E               	movwf	__doprnt@width& (0+255),b
 25999  0117FE                     
 26000                           ;doprnt.c: 600: width *= 10;
 26001                           
 26002                           ; BSR set to: 2
 26003  0117FE  C27E  F14F         	movff	__doprnt@width,___wmul@multiplier
 26004  011802  C27F  F150         	movff	__doprnt@width+1,___wmul@multiplier+1
 26005  011806  0E00               	movlw	0
 26006  011808  0101               	movlb	1	; () banked
 26007  01180A  6F52               	movwf	(___wmul@multiplicand+1)& (0+255),b
 26008  01180C  0E0A               	movlw	10
 26009  01180E  6F51               	movwf	___wmul@multiplicand& (0+255),b
 26010  011810  EC41  F0DD         	call	___wmul	;wreg free
 26011  011814  C14F  F27E         	movff	?___wmul,__doprnt@width
 26012  011818  C150  F27F         	movff	?___wmul+1,__doprnt@width+1
 26013                           
 26014                           ;doprnt.c: 601: width += *f++ - '0';
 26015  01181C  0ED0               	movlw	208
 26016  01181E  0102               	movlb	2	; () banked
 26017  011820  6F61               	movwf	??__doprnt& (0+255),b
 26018  011822  0EFF               	movlw	255
 26019  011824  6F62               	movwf	(??__doprnt+1)& (0+255),b
 26020  011826  C25D  FFF6         	movff	__doprnt@f,tblptrl
 26021  01182A  C25E  FFF7         	movff	__doprnt@f+1,tblptrh
 26022  01182E  0E00               	movlw	low (__mediumconst shr (0+16))
 26023  011830  6EF8               	movwf	tblptru,c
 26024  011832  0E0D               	movlw	(high __ramtop+-1)
 26025  011834  64F7               	cpfsgt	tblptrh,c
 26026  011836  D003               	bra	u33687
 26027  011838  0008               	tblrd		*
 26028  01183A  50F5               	movf	tablat,w,c
 26029  01183C  D005               	bra	u33680
 26030  01183E                     u33687:
 26031  01183E  CFF6 FFE9          	movff	tblptrl,fsr0l
 26032  011842  CFF7 FFEA          	movff	tblptrh,fsr0h
 26033  011846  50EF               	movf	indf0,w,c
 26034  011848                     u33680:
 26035  011848  0102               	movlb	2	; () banked
 26036  01184A  6F63               	movwf	(??__doprnt+2)& (0+255),b
 26037  01184C  6B64               	clrf	(??__doprnt+3)& (0+255),b
 26038  01184E  5161               	movf	??__doprnt& (0+255),w,b
 26039  011850  2763               	addwf	(??__doprnt+2)& (0+255),f,b
 26040  011852  5162               	movf	(??__doprnt+1)& (0+255),w,b
 26041  011854  2364               	addwfc	(??__doprnt+3)& (0+255),f,b
 26042  011856  5163               	movf	(??__doprnt+2)& (0+255),w,b
 26043  011858  277E               	addwf	__doprnt@width& (0+255),f,b
 26044  01185A  5164               	movf	(??__doprnt+3)& (0+255),w,b
 26045  01185C  237F               	addwfc	(__doprnt@width+1)& (0+255),f,b
 26046                           
 26047                           ; BSR set to: 2
 26048  01185E  4B5D               	infsnz	__doprnt@f& (0+255),f,b
 26049  011860  2B5E               	incf	(__doprnt@f+1)& (0+255),f,b
 26050                           
 26051                           ; BSR set to: 2
 26052                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 26053  011862  C25D  FFF6         	movff	__doprnt@f,tblptrl
 26054  011866  C25E  FFF7         	movff	__doprnt@f+1,tblptrh
 26055  01186A  0E00               	movlw	low (__mediumconst shr (0+16))
 26056  01186C  6EF8               	movwf	tblptru,c
 26057  01186E  0E0D               	movlw	(high __ramtop+-1)
 26058  011870  64F7               	cpfsgt	tblptrh,c
 26059  011872  D003               	bra	u33697
 26060  011874  0008               	tblrd		*
 26061  011876  50F5               	movf	tablat,w,c
 26062  011878  D005               	bra	u33690
 26063  01187A                     u33697:
 26064  01187A  CFF6 FFE9          	movff	tblptrl,fsr0l
 26065  01187E  CFF7 FFEA          	movff	tblptrh,fsr0h
 26066  011882  50EF               	movf	indf0,w,c
 26067  011884                     u33690:
 26068  011884  EC48  F0DE         	call	_isdigit
 26069  011888  B0D8               	btfsc	status,0,c
 26070  01188A  D7B9               	goto	l2111
 26071  01188C                     u33700:
 26072                           
 26073                           ;doprnt.c: 608: }
 26074                           ;doprnt.c: 611: if(*f == '.') {
 26075  01188C  C25D  FFF6         	movff	__doprnt@f,tblptrl
 26076  011890  C25E  FFF7         	movff	__doprnt@f+1,tblptrh
 26077  011894  0E00               	movlw	low (__mediumconst shr (0+16))
 26078  011896  6EF8               	movwf	tblptru,c
 26079  011898  0E0D               	movlw	(high __ramtop+-1)
 26080  01189A  64F7               	cpfsgt	tblptrh,c
 26081  01189C  D003               	bra	u33717
 26082  01189E  0008               	tblrd		*
 26083  0118A0  50F5               	movf	tablat,w,c
 26084  0118A2  D005               	bra	u33710
 26085  0118A4                     u33717:
 26086  0118A4  CFF6 FFE9          	movff	tblptrl,fsr0l
 26087  0118A8  CFF7 FFEA          	movff	tblptrh,fsr0h
 26088  0118AC  50EF               	movf	indf0,w,c
 26089  0118AE                     u33710:
 26090  0118AE  0A2E               	xorlw	46
 26091  0118B0  A4D8               	btfss	status,2,c
 26092  0118B2  D04D               	goto	l2113
 26093                           
 26094                           ;doprnt.c: 612: flag |= 0x4000;
 26095  0118B4  0102               	movlb	2	; () banked
 26096  0118B6  8D81               	bsf	(__doprnt@flag+1)& (0+255),6,b
 26097                           
 26098                           ;doprnt.c: 613: f++;
 26099  0118B8  4B5D               	infsnz	__doprnt@f& (0+255),f,b
 26100  0118BA  2B5E               	incf	(__doprnt@f+1)& (0+255),f,b
 26101                           
 26102                           ; BSR set to: 2
 26103                           ;doprnt.c: 620: {
 26104                           ;doprnt.c: 621: prec = 0;
 26105  0118BC  0E00               	movlw	0
 26106  0118BE  6F83               	movwf	(__doprnt@prec+1)& (0+255),b
 26107  0118C0  0E00               	movlw	0
 26108  0118C2  6F82               	movwf	__doprnt@prec& (0+255),b
 26109                           
 26110                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 26111  0118C4  D02E               	goto	l2114
 26112  0118C6                     
 26113                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 26114                           
 26115                           ; BSR set to: 2
 26116  0118C6  C282  F14F         	movff	__doprnt@prec,___wmul@multiplier
 26117  0118CA  C283  F150         	movff	__doprnt@prec+1,___wmul@multiplier+1
 26118  0118CE  0E00               	movlw	0
 26119  0118D0  0101               	movlb	1	; () banked
 26120  0118D2  6F52               	movwf	(___wmul@multiplicand+1)& (0+255),b
 26121  0118D4  0E0A               	movlw	10
 26122  0118D6  6F51               	movwf	___wmul@multiplicand& (0+255),b
 26123  0118D8  EC41  F0DD         	call	___wmul	;wreg free
 26124  0118DC  C25D  FFF6         	movff	__doprnt@f,tblptrl
 26125  0118E0  C25E  FFF7         	movff	__doprnt@f+1,tblptrh
 26126  0118E4  0E00               	movlw	low (__mediumconst shr (0+16))
 26127  0118E6  6EF8               	movwf	tblptru,c
 26128  0118E8  0E0D               	movlw	(high __ramtop+-1)
 26129  0118EA  64F7               	cpfsgt	tblptrh,c
 26130  0118EC  D003               	bra	u33737
 26131  0118EE  0008               	tblrd		*
 26132  0118F0  50F5               	movf	tablat,w,c
 26133  0118F2  D005               	bra	u33730
 26134  0118F4                     u33737:
 26135  0118F4  CFF6 FFE9          	movff	tblptrl,fsr0l
 26136  0118F8  CFF7 FFEA          	movff	tblptrh,fsr0h
 26137  0118FC  50EF               	movf	indf0,w,c
 26138  0118FE                     u33730:
 26139  0118FE  0102               	movlb	2	; () banked
 26140  011900  6F61               	movwf	??__doprnt& (0+255),b
 26141  011902  5161               	movf	??__doprnt& (0+255),w,b
 26142  011904  0101               	movlb	1	; () banked
 26143  011906  274F               	addwf	?___wmul& (0+255),f,b
 26144  011908  0E00               	movlw	0
 26145  01190A  2350               	addwfc	(?___wmul+1)& (0+255),f,b
 26146  01190C  0ED0               	movlw	208
 26147  01190E  254F               	addwf	?___wmul& (0+255),w,b
 26148  011910  0102               	movlb	2	; () banked
 26149  011912  6F82               	movwf	__doprnt@prec& (0+255),b
 26150  011914  0EFF               	movlw	255
 26151  011916  0101               	movlb	1	; () banked
 26152  011918  2150               	addwfc	(?___wmul+1)& (0+255),w,b
 26153  01191A  0102               	movlb	2	; () banked
 26154  01191C  6F83               	movwf	(__doprnt@prec+1)& (0+255),b
 26155                           
 26156                           ; BSR set to: 2
 26157  01191E  4B5D               	infsnz	__doprnt@f& (0+255),f,b
 26158  011920  2B5E               	incf	(__doprnt@f+1)& (0+255),f,b
 26159  011922                     l2114:
 26160                           
 26161                           ; BSR set to: 2
 26162                           
 26163                           ; BSR set to: 2
 26164  011922  C25D  FFF6         	movff	__doprnt@f,tblptrl
 26165  011926  C25E  FFF7         	movff	__doprnt@f+1,tblptrh
 26166  01192A  0E00               	movlw	low (__mediumconst shr (0+16))
 26167  01192C  6EF8               	movwf	tblptru,c
 26168  01192E  0E0D               	movlw	(high __ramtop+-1)
 26169  011930  64F7               	cpfsgt	tblptrh,c
 26170  011932  D003               	bra	u33747
 26171  011934  0008               	tblrd		*
 26172  011936  50F5               	movf	tablat,w,c
 26173  011938  D005               	bra	u33740
 26174  01193A                     u33747:
 26175  01193A  CFF6 FFE9          	movff	tblptrl,fsr0l
 26176  01193E  CFF7 FFEA          	movff	tblptrh,fsr0h
 26177  011942  50EF               	movf	indf0,w,c
 26178  011944                     u33740:
 26179  011944  EC48  F0DE         	call	_isdigit
 26180  011948  A0D8               	btfss	status,0,c
 26181  01194A  D12A               	goto	l2119
 26182  01194C  D7BC               	goto	l2115
 26183  01194E                     l2113:
 26184                           
 26185                           ;doprnt.c: 626: prec = 0;
 26186  01194E  0E00               	movlw	0
 26187  011950  0102               	movlb	2	; () banked
 26188  011952  6F83               	movwf	(__doprnt@prec+1)& (0+255),b
 26189  011954  0E00               	movlw	0
 26190  011956  6F82               	movwf	__doprnt@prec& (0+255),b
 26191                           
 26192                           ; BSR set to: 2
 26193                           ;doprnt.c: 628: flag |= 0x1000;
 26194  011958  8981               	bsf	(__doprnt@flag+1)& (0+255),4,b
 26195                           
 26196                           ; BSR set to: 2
 26197                           ;doprnt.c: 635: switch(c = *f++) {
 26198                           
 26199                           ;doprnt.c: 630: }
 26200                           ;doprnt.c: 633: loop:
 26201                           
 26202                           ; BSR set to: 2
 26203  01195A  D122               	goto	l2119
 26204  01195C                     
 26205                           ; BSR set to: 2
 26206                           ;doprnt.c: 643: flag |= 0x10;
 26207                           
 26208                           ; BSR set to: 2
 26209  01195C  8980               	bsf	__doprnt@flag& (0+255),4,b
 26210                           
 26211                           ;doprnt.c: 644: goto loop;
 26212  01195E  D120               	goto	l2119
 26213  011960                     
 26214                           ; BSR set to: 2
 26215                           ;doprnt.c: 663: flag |= 0x400;
 26216                           
 26217                           ; BSR set to: 2
 26218  011960  8581               	bsf	(__doprnt@flag+1)& (0+255),2,b
 26219                           
 26220                           ; BSR set to: 2
 26221                           ;doprnt.c: 698: case 'i':
 26222                           ;doprnt.c: 699: break;
 26223                           
 26224                           ; BSR set to: 2
 26225                           
 26226                           ;doprnt.c: 697: case 'd':
 26227                           
 26228                           ;doprnt.c: 664: break;
 26229  011962  D159               	goto	l2124
 26230  011964                     
 26231                           ; BSR set to: 2
 26232                           ;doprnt.c: 718: case 'x':
 26233                           ;doprnt.c: 721: flag |= 0x80;
 26234                           
 26235                           ; BSR set to: 2
 26236                           
 26237                           ; BSR set to: 2
 26238  011964  8F80               	bsf	__doprnt@flag& (0+255),7,b
 26239                           
 26240                           ;doprnt.c: 723: break;
 26241  011966  D157               	goto	l2124
 26242  011968                     
 26243                           ; BSR set to: 2
 26244                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 26245                           
 26246                           ; BSR set to: 2
 26247  011968  C25F  FFD9         	movff	__doprnt@ap,fsr2l
 26248  01196C  C260  FFDA         	movff	__doprnt@ap+1,fsr2h
 26249  011970  CFDF F261          	movff	indf2,??__doprnt
 26250  011974  0E02               	movlw	2
 26251  011976  26DE               	addwf	postinc2,f,c
 26252  011978  CFDF F262          	movff	indf2,??__doprnt+1
 26253  01197C  0E00               	movlw	0
 26254  01197E  22DD               	addwfc	postdec2,f,c
 26255  011980  C261  FFD9         	movff	??__doprnt,fsr2l
 26256  011984  C262  FFDA         	movff	??__doprnt+1,fsr2h
 26257  011988  CFDE F26C          	movff	postinc2,__doprnt@cp
 26258  01198C  CFDD F26D          	movff	postdec2,__doprnt@cp+1
 26259                           
 26260                           ; BSR set to: 2
 26261                           ;doprnt.c: 740: if(!cp)
 26262  011990  516C               	movf	__doprnt@cp& (0+255),w,b
 26263  011992  116D               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 26264  011994  A4D8               	btfss	status,2,c
 26265  011996  D004               	goto	l2130
 26266                           
 26267                           ; BSR set to: 2
 26268                           ;doprnt.c: 741: cp = "(null)";
 26269  011998  0E95               	movlw	low STR_214
 26270  01199A  6F6C               	movwf	__doprnt@cp& (0+255),b
 26271  01199C  0EFF               	movlw	high STR_214
 26272  01199E  6F6D               	movwf	(__doprnt@cp+1)& (0+255),b
 26273  0119A0                     l2130:
 26274                           
 26275                           ; BSR set to: 2
 26276                           ;doprnt.c: 745: len = 0;
 26277                           
 26278                           ; BSR set to: 2
 26279  0119A0  0E00               	movlw	0
 26280  0119A2  6F6F               	movwf	(__doprnt@len+1)& (0+255),b
 26281  0119A4  0E00               	movlw	0
 26282  0119A6  6F6E               	movwf	__doprnt@len& (0+255),b
 26283                           
 26284                           ;doprnt.c: 746: while(cp[len])
 26285  0119A8  D003               	goto	l2131
 26286  0119AA                     
 26287                           ;doprnt.c: 747: len++;
 26288                           
 26289                           ; BSR set to: 2
 26290  0119AA  0102               	movlb	2	; () banked
 26291  0119AC  4B6E               	infsnz	__doprnt@len& (0+255),f,b
 26292  0119AE  2B6F               	incf	(__doprnt@len+1)& (0+255),f,b
 26293  0119B0                     l2131:
 26294                           
 26295                           ; BSR set to: 2
 26296                           
 26297                           ; BSR set to: 2
 26298  0119B0  516E               	movf	__doprnt@len& (0+255),w,b
 26299  0119B2  256C               	addwf	__doprnt@cp& (0+255),w,b
 26300  0119B4  6F61               	movwf	??__doprnt& (0+255),b
 26301  0119B6  516F               	movf	(__doprnt@len+1)& (0+255),w,b
 26302  0119B8  216D               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 26303  0119BA  6F62               	movwf	(??__doprnt+1)& (0+255),b
 26304  0119BC  C261  FFF6         	movff	??__doprnt,tblptrl
 26305  0119C0  C262  FFF7         	movff	??__doprnt+1,tblptrh
 26306  0119C4  0E00               	movlw	low (__mediumconst shr (0+16))
 26307  0119C6  6EF8               	movwf	tblptru,c
 26308  0119C8  0E0D               	movlw	(high __ramtop+-1)
 26309  0119CA  64F7               	cpfsgt	tblptrh,c
 26310  0119CC  D003               	bra	u33777
 26311  0119CE  0008               	tblrd		*
 26312  0119D0  50F5               	movf	tablat,w,c
 26313  0119D2  D005               	bra	u33770
 26314  0119D4                     u33777:
 26315  0119D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 26316  0119D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 26317  0119DC  50EF               	movf	indf0,w,c
 26318  0119DE                     u33770:
 26319  0119DE  0900               	iorlw	0
 26320  0119E0  A4D8               	btfss	status,2,c
 26321  0119E2  D7E3               	goto	l2132
 26322  0119E4                     u33780:
 26323                           
 26324                           ;doprnt.c: 753: if(prec && prec < len)
 26325                           
 26326                           ;doprnt.c: 750: dostring:
 26327  0119E4  0102               	movlb	2	; () banked
 26328  0119E6  5182               	movf	__doprnt@prec& (0+255),w,b
 26329  0119E8  1183               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 26330  0119EA  B4D8               	btfsc	status,2,c
 26331  0119EC  D00A               	goto	l2135
 26332                           
 26333                           ; BSR set to: 2
 26334  0119EE  516E               	movf	__doprnt@len& (0+255),w,b
 26335  0119F0  5D82               	subwf	__doprnt@prec& (0+255),w,b
 26336  0119F2  516F               	movf	(__doprnt@len+1)& (0+255),w,b
 26337  0119F4  5983               	subwfb	(__doprnt@prec+1)& (0+255),w,b
 26338  0119F6  B0D8               	btfsc	status,0,c
 26339  0119F8  D004               	goto	l2135
 26340                           
 26341                           ; BSR set to: 2
 26342                           ;doprnt.c: 754: len = prec;
 26343  0119FA  C282  F26E         	movff	__doprnt@prec,__doprnt@len
 26344  0119FE  C283  F26F         	movff	__doprnt@prec+1,__doprnt@len+1
 26345  011A02                     l2135:
 26346                           
 26347                           ; BSR set to: 2
 26348                           ;doprnt.c: 757: if(width > len)
 26349                           
 26350                           ; BSR set to: 2
 26351  011A02  517E               	movf	__doprnt@width& (0+255),w,b
 26352  011A04  5D6E               	subwf	__doprnt@len& (0+255),w,b
 26353  011A06  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 26354  011A08  596F               	subwfb	(__doprnt@len+1)& (0+255),w,b
 26355  011A0A  B0D8               	btfsc	status,0,c
 26356  011A0C  D005               	goto	l2136
 26357                           
 26358                           ; BSR set to: 2
 26359                           ;doprnt.c: 758: width -= len;
 26360  011A0E  516E               	movf	__doprnt@len& (0+255),w,b
 26361  011A10  5F7E               	subwf	__doprnt@width& (0+255),f,b
 26362  011A12  516F               	movf	(__doprnt@len+1)& (0+255),w,b
 26363  011A14  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 26364  011A16  D038               	goto	l2141
 26365  011A18                     l2136:
 26366                           
 26367                           ; BSR set to: 2
 26368                           ;doprnt.c: 759: else
 26369                           ;doprnt.c: 760: width = 0;
 26370                           
 26371                           ; BSR set to: 2
 26372  011A18  0E00               	movlw	0
 26373  011A1A  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 26374  011A1C  0E00               	movlw	0
 26375  011A1E  6F7E               	movwf	__doprnt@width& (0+255),b
 26376                           
 26377                           ; BSR set to: 2
 26378                           ;doprnt.c: 764: while(width--)
 26379  011A20  D033               	goto	l2141
 26380  011A22                     l24105:
 26381                           
 26382                           ; BSR set to: 2
 26383                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 26384  011A22  EE20 F002          	lfsr	2,2
 26385  011A26  515B               	movf	__doprnt@pb& (0+255),w,b
 26386  011A28  26D9               	addwf	fsr2l,f,c
 26387  011A2A  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 26388  011A2C  22DA               	addwfc	fsr2h,f,c
 26389  011A2E  50DE               	movf	postinc2,w,c
 26390  011A30  10DE               	iorwf	postinc2,w,c
 26391  011A32  10DE               	iorwf	postinc2,w,c
 26392  011A34  B4D8               	btfsc	status,2,c
 26393  011A36  D013               	goto	l2140
 26394                           
 26395                           ; BSR set to: 2
 26396  011A38  EE20 F002          	lfsr	2,2
 26397  011A3C  515B               	movf	__doprnt@pb& (0+255),w,b
 26398  011A3E  26D9               	addwf	fsr2l,f,c
 26399  011A40  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 26400  011A42  22DA               	addwfc	fsr2h,f,c
 26401  011A44  D801               	call	u33838
 26402  011A46  D020               	goto	l2141
 26403  011A48                     u33838:
 26404  011A48  0005               	push	
 26405  011A4A  6EFA               	movwf	pclath,c
 26406  011A4C  50DE               	movf	postinc2,w,c
 26407  011A4E  6EFD               	movwf	tosl,c
 26408  011A50  50DE               	movf	postinc2,w,c
 26409  011A52  6EFE               	movwf	tosh,c
 26410  011A54  50DE               	movf	postinc2,w,c
 26411  011A56  6EFF               	movwf	tosu,c
 26412  011A58  50FA               	movf	pclath,w,c
 26413  011A5A  0E20               	movlw	32
 26414  011A5C  0012               	return		;indir
 26415  011A5E                     l2140:
 26416  011A5E  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 26417  011A62  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 26418  011A66  CFDE F261          	movff	postinc2,??__doprnt
 26419  011A6A  CFDD F262          	movff	postdec2,??__doprnt+1
 26420  011A6E  C261  FFD9         	movff	??__doprnt,fsr2l
 26421  011A72  C262  FFDA         	movff	??__doprnt+1,fsr2h
 26422  011A76  0E20               	movlw	32
 26423  011A78  6EDF               	movwf	indf2,c
 26424  011A7A  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 26425  011A7E  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 26426  011A82  2ADE               	incf	postinc2,f,c
 26427  011A84  0E00               	movlw	0
 26428  011A86  22DD               	addwfc	postdec2,f,c
 26429  011A88                     l2141:
 26430  011A88  0102               	movlb	2	; () banked
 26431  011A8A  077E               	decf	__doprnt@width& (0+255),f,b
 26432  011A8C  A0D8               	btfss	status,0,c
 26433  011A8E  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 26434  011A90  297E               	incf	__doprnt@width& (0+255),w,b
 26435  011A92  E1C7               	bnz	l24105
 26436  011A94  297F               	incf	(__doprnt@width+1)& (0+255),w,b
 26437  011A96  B4D8               	btfsc	status,2,c
 26438  011A98  D05B               	goto	l2146
 26439  011A9A  D7C3               	goto	l2139
 26440  011A9C                     l24115:
 26441                           
 26442                           ; BSR set to: 2
 26443                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 26444  011A9C  EE20 F002          	lfsr	2,2
 26445  011AA0  515B               	movf	__doprnt@pb& (0+255),w,b
 26446  011AA2  26D9               	addwf	fsr2l,f,c
 26447  011AA4  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 26448  011AA6  22DA               	addwfc	fsr2h,f,c
 26449  011AA8  50DE               	movf	postinc2,w,c
 26450  011AAA  10DE               	iorwf	postinc2,w,c
 26451  011AAC  10DE               	iorwf	postinc2,w,c
 26452  011AAE  B4D8               	btfsc	status,2,c
 26453  011AB0  D027               	goto	l2145
 26454                           
 26455                           ; BSR set to: 2
 26456  011AB2  EE20 F002          	lfsr	2,2
 26457  011AB6  515B               	movf	__doprnt@pb& (0+255),w,b
 26458  011AB8  26D9               	addwf	fsr2l,f,c
 26459  011ABA  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 26460  011ABC  22DA               	addwfc	fsr2h,f,c
 26461  011ABE  D801               	call	u33868
 26462  011AC0  D01B               	goto	u33869
 26463  011AC2                     u33868:
 26464  011AC2  0005               	push	
 26465  011AC4  6EFA               	movwf	pclath,c
 26466  011AC6  50DE               	movf	postinc2,w,c
 26467  011AC8  6EFD               	movwf	tosl,c
 26468  011ACA  50DE               	movf	postinc2,w,c
 26469  011ACC  6EFE               	movwf	tosh,c
 26470  011ACE  50DE               	movf	postinc2,w,c
 26471  011AD0  6EFF               	movwf	tosu,c
 26472  011AD2  50FA               	movf	pclath,w,c
 26473  011AD4  C26C  FFF6         	movff	__doprnt@cp,tblptrl
 26474  011AD8  C26D  FFF7         	movff	__doprnt@cp+1,tblptrh
 26475  011ADC  0E00               	movlw	low (__mediumconst shr (0+16))
 26476  011ADE  6EF8               	movwf	tblptru,c
 26477  011AE0  0E0D               	movlw	(high __ramtop+-1)
 26478  011AE2  64F7               	cpfsgt	tblptrh,c
 26479  011AE4  D003               	bra	u33877
 26480  011AE6  0008               	tblrd		*
 26481  011AE8  50F5               	movf	tablat,w,c
 26482  011AEA  D005               	bra	u33870
 26483  011AEC                     u33877:
 26484  011AEC  CFF6 FFE9          	movff	tblptrl,fsr0l
 26485  011AF0  CFF7 FFEA          	movff	tblptrh,fsr0h
 26486  011AF4  50EF               	movf	indf0,w,c
 26487  011AF6                     u33870:
 26488  011AF6  0012               	return		;indir
 26489  011AF8                     u33869:
 26490  011AF8  0102               	movlb	2	; () banked
 26491  011AFA  4B6C               	infsnz	__doprnt@cp& (0+255),f,b
 26492  011AFC  2B6D               	incf	(__doprnt@cp+1)& (0+255),f,b
 26493  011AFE  D028               	goto	l2146
 26494  011B00                     l2145:
 26495                           
 26496                           ; BSR set to: 2
 26497                           
 26498                           ; BSR set to: 2
 26499  011B00  C26C  FFF6         	movff	__doprnt@cp,tblptrl
 26500  011B04  C26D  FFF7         	movff	__doprnt@cp+1,tblptrh
 26501  011B08  0E00               	movlw	low (__mediumconst shr (0+16))
 26502  011B0A  6EF8               	movwf	tblptru,c
 26503  011B0C  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 26504  011B10  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 26505  011B14  CFDE F261          	movff	postinc2,??__doprnt
 26506  011B18  CFDD F262          	movff	postdec2,??__doprnt+1
 26507  011B1C  C261  FFD9         	movff	??__doprnt,fsr2l
 26508  011B20  C262  FFDA         	movff	??__doprnt+1,fsr2h
 26509  011B24  0E0D               	movlw	(high __ramtop+-1)
 26510  011B26  64F7               	cpfsgt	tblptrh,c
 26511  011B28  D003               	bra	u33887
 26512  011B2A  0008               	tblrd		*
 26513  011B2C  50F5               	movf	tablat,w,c
 26514  011B2E  D005               	bra	u33880
 26515  011B30                     u33887:
 26516  011B30  CFF6 FFE9          	movff	tblptrl,fsr0l
 26517  011B34  CFF7 FFEA          	movff	tblptrh,fsr0h
 26518  011B38  50EF               	movf	indf0,w,c
 26519  011B3A                     u33880:
 26520  011B3A  6EDF               	movwf	indf2,c
 26521  011B3C  0102               	movlb	2	; () banked
 26522  011B3E  4B6C               	infsnz	__doprnt@cp& (0+255),f,b
 26523  011B40  2B6D               	incf	(__doprnt@cp+1)& (0+255),f,b
 26524                           
 26525                           ; BSR set to: 2
 26526  011B42  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 26527  011B46  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 26528  011B4A  2ADE               	incf	postinc2,f,c
 26529  011B4C  0E00               	movlw	0
 26530  011B4E  22DD               	addwfc	postdec2,f,c
 26531  011B50                     l2146:
 26532                           
 26533                           ; BSR set to: 2
 26534                           
 26535                           ; BSR set to: 2
 26536                           
 26537                           ; BSR set to: 2
 26538  011B50  076E               	decf	__doprnt@len& (0+255),f,b
 26539  011B52  A0D8               	btfss	status,0,c
 26540  011B54  076F               	decf	(__doprnt@len+1)& (0+255),f,b
 26541  011B56  296E               	incf	__doprnt@len& (0+255),w,b
 26542  011B58  E1A1               	bnz	l24115
 26543  011B5A  296F               	incf	(__doprnt@len+1)& (0+255),w,b
 26544  011B5C  B4D8               	btfsc	status,2,c
 26545  011B5E  EFF7  F095         	goto	u34740
 26546  011B62  D79C               	goto	l2144
 26547  011B64                     
 26548                           ; BSR set to: 2
 26549                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 26550                           
 26551                           ; BSR set to: 2
 26552  011B64  C25F  FFD9         	movff	__doprnt@ap,fsr2l
 26553  011B68  C260  FFDA         	movff	__doprnt@ap+1,fsr2h
 26554  011B6C  CFDF F261          	movff	indf2,??__doprnt
 26555  011B70  0E02               	movlw	2
 26556  011B72  26DE               	addwf	postinc2,f,c
 26557  011B74  CFDF F262          	movff	indf2,??__doprnt+1
 26558  011B78  0E00               	movlw	0
 26559  011B7A  22DD               	addwfc	postdec2,f,c
 26560  011B7C  C261  FFD9         	movff	??__doprnt,fsr2l
 26561  011B80  C262  FFDA         	movff	??__doprnt+1,fsr2h
 26562  011B84  50DF               	movf	indf2,w,c
 26563  011B86  6F84               	movwf	__doprnt@c& (0+255),b
 26564  011B88                     
 26565                           ; BSR set to: 2
 26566                           ;doprnt.c: 805: cp = (char *)&c;
 26567                           
 26568                           ; BSR set to: 2
 26569  011B88  0E84               	movlw	low __doprnt@c
 26570  011B8A  6F6C               	movwf	__doprnt@cp& (0+255),b
 26571  011B8C  0E02               	movlw	high __doprnt@c
 26572  011B8E  6F6D               	movwf	(__doprnt@cp+1)& (0+255),b
 26573                           
 26574                           ; BSR set to: 2
 26575                           ;doprnt.c: 806: len = 1;
 26576  011B90  0E00               	movlw	0
 26577  011B92  6F6F               	movwf	(__doprnt@len+1)& (0+255),b
 26578  011B94  0E01               	movlw	1
 26579  011B96  6F6E               	movwf	__doprnt@len& (0+255),b
 26580                           
 26581                           ;doprnt.c: 807: goto dostring;
 26582  011B98  D725               	goto	u33780
 26583  011B9A                     
 26584                           ; BSR set to: 2
 26585                           ;doprnt.c: 818: flag |= 0xC0;
 26586                           
 26587                           ; BSR set to: 2
 26588  011B9A  0EC0               	movlw	192
 26589  011B9C  1380               	iorwf	__doprnt@flag& (0+255),f,b
 26590                           
 26591                           ; BSR set to: 2
 26592                           ;doprnt.c: 822: }
 26593                           
 26594                           ;doprnt.c: 819: break;
 26595  011B9E  D03B               	goto	l2124
 26596  011BA0                     l2119:
 26597                           
 26598                           ; BSR set to: 2
 26599  011BA0  0102               	movlb	2	; () banked
 26600  011BA2  515D               	movf	__doprnt@f& (0+255),w,b
 26601  011BA4  6F61               	movwf	??__doprnt& (0+255),b
 26602  011BA6  515E               	movf	(__doprnt@f+1)& (0+255),w,b
 26603  011BA8  6F62               	movwf	(??__doprnt+1)& (0+255),b
 26604  011BAA  4B5D               	infsnz	__doprnt@f& (0+255),f,b
 26605  011BAC  2B5E               	incf	(__doprnt@f+1)& (0+255),f,b
 26606  011BAE  C261  FFF6         	movff	??__doprnt,tblptrl
 26607  011BB2  C262  FFF7         	movff	??__doprnt+1,tblptrh
 26608  011BB6  0E00               	movlw	low (__mediumconst shr (0+16))
 26609  011BB8  6EF8               	movwf	tblptru,c
 26610  011BBA  0E0D               	movlw	(high __ramtop+-1)
 26611  011BBC  64F7               	cpfsgt	tblptrh,c
 26612  011BBE  D003               	bra	u33907
 26613  011BC0  0008               	tblrd		*
 26614  011BC2  50F5               	movf	tablat,w,c
 26615  011BC4  D005               	bra	u33900
 26616  011BC6                     u33907:
 26617  011BC6  CFF6 FFE9          	movff	tblptrl,fsr0l
 26618  011BCA  CFF7 FFEA          	movff	tblptrh,fsr0h
 26619  011BCE  50EF               	movf	indf0,w,c
 26620  011BD0                     u33900:
 26621  011BD0  0102               	movlb	2	; () banked
 26622  011BD2  6F84               	movwf	__doprnt@c& (0+255),b
 26623  011BD4  5184               	movf	__doprnt@c& (0+255),w,b
 26624                           
 26625                           ; Switch size 1, requested type "space"
 26626                           ; Number of cases is 10, Range of values is 0 to 120
 26627                           ; switch strategies available:
 26628                           ; Name         Instructions Cycles
 26629                           ; simple_byte           31    16 (average)
 26630                           ;	Chosen strategy is simple_byte
 26631  011BD6  0A00               	xorlw	0	; case 0
 26632  011BD8  B4D8               	btfsc	status,2,c
 26633  011BDA  EF15  F096         	goto	u34760
 26634  011BDE  0A58               	xorlw	88	; case 88
 26635  011BE0  B4D8               	btfsc	status,2,c
 26636  011BE2  D6C0               	goto	l2127
 26637  011BE4  0A3B               	xorlw	59	; case 99
 26638  011BE6  B4D8               	btfsc	status,2,c
 26639  011BE8  D7BD               	goto	l2148
 26640  011BEA  0A07               	xorlw	7	; case 100
 26641  011BEC  B4D8               	btfsc	status,2,c
 26642  011BEE  D013               	goto	l2124
 26643  011BF0  0A02               	xorlw	2	; case 102
 26644  011BF2  B4D8               	btfsc	status,2,c
 26645  011BF4  D6B5               	goto	l2123
 26646  011BF6  0A0F               	xorlw	15	; case 105
 26647  011BF8  B4D8               	btfsc	status,2,c
 26648  011BFA  D00D               	goto	l2124
 26649  011BFC  0A05               	xorlw	5	; case 108
 26650  011BFE  B4D8               	btfsc	status,2,c
 26651  011C00  D6AD               	goto	l2122
 26652  011C02  0A1F               	xorlw	31	; case 115
 26653  011C04  B4D8               	btfsc	status,2,c
 26654  011C06  D6B0               	goto	l2129
 26655  011C08  0A06               	xorlw	6	; case 117
 26656  011C0A  B4D8               	btfsc	status,2,c
 26657  011C0C  D7C6               	goto	l2150
 26658  011C0E  0A0D               	xorlw	13	; case 120
 26659  011C10  B4D8               	btfsc	status,2,c
 26660  011C12  D6A8               	goto	l2127
 26661  011C14  D7B9               	goto	l2149
 26662  011C16                     l2124:
 26663                           
 26664                           ; BSR set to: 2
 26665                           ;doprnt.c: 825: if(flag & (0x700)) {
 26666                           
 26667                           ; BSR set to: 2
 26668  011C16  0E07               	movlw	7
 26669  011C18  1581               	andwf	(__doprnt@flag+1)& (0+255),w,b
 26670  011C1A  B4D8               	btfsc	status,2,c
 26671  011C1C  EF0A  F093         	goto	l2151
 26672                           
 26673                           ; BSR set to: 2
 26674                           ;doprnt.c: 827: if(flag & 0x1000)
 26675  011C20  A981               	btfss	(__doprnt@flag+1)& (0+255),4,b
 26676  011C22  D004               	goto	l2152
 26677                           
 26678                           ; BSR set to: 2
 26679                           ;doprnt.c: 829: prec = 6;
 26680  011C24  0E00               	movlw	0
 26681  011C26  6F83               	movwf	(__doprnt@prec+1)& (0+255),b
 26682  011C28  0E06               	movlw	6
 26683  011C2A  6F82               	movwf	__doprnt@prec& (0+255),b
 26684  011C2C                     l2152:
 26685                           
 26686                           ; BSR set to: 2
 26687                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 26688                           
 26689                           ; BSR set to: 2
 26690  011C2C  C25F  FFD9         	movff	__doprnt@ap,fsr2l
 26691  011C30  C260  FFDA         	movff	__doprnt@ap+1,fsr2h
 26692  011C34  CFDF F261          	movff	indf2,??__doprnt
 26693  011C38  0E04               	movlw	4
 26694  011C3A  26DE               	addwf	postinc2,f,c
 26695  011C3C  CFDF F262          	movff	indf2,??__doprnt+1
 26696  011C40  0E00               	movlw	0
 26697  011C42  22DD               	addwfc	postdec2,f,c
 26698  011C44  C261  FFD9         	movff	??__doprnt,fsr2l
 26699  011C48  C262  FFDA         	movff	??__doprnt+1,fsr2h
 26700  011C4C  CFDE F276          	movff	postinc2,__doprnt@fval
 26701  011C50  CFDE F277          	movff	postinc2,__doprnt@fval+1
 26702  011C54  CFDE F278          	movff	postinc2,__doprnt@fval+2
 26703  011C58  CFDE F279          	movff	postinc2,__doprnt@fval+3
 26704                           
 26705                           ; BSR set to: 2
 26706                           ;doprnt.c: 831: if(fval < 0.0) {
 26707  011C5C  AF79               	btfss	(__doprnt@fval+3)& (0+255),7,b
 26708  011C5E  D015               	goto	l2153
 26709                           
 26710                           ; BSR set to: 2
 26711                           ;doprnt.c: 832: fval = -fval;
 26712  011C60  C276  F200         	movff	__doprnt@fval,___flneg@f1
 26713  011C64  C277  F201         	movff	__doprnt@fval+1,___flneg@f1+1
 26714  011C68  C278  F202         	movff	__doprnt@fval+2,___flneg@f1+2
 26715  011C6C  C279  F203         	movff	__doprnt@fval+3,___flneg@f1+3
 26716  011C70  ECB5  F0DC         	call	___flneg
 26717  011C74  C200  F276         	movff	?___flneg,__doprnt@fval
 26718  011C78  C201  F277         	movff	?___flneg+1,__doprnt@fval+1
 26719  011C7C  C202  F278         	movff	?___flneg+2,__doprnt@fval+2
 26720  011C80  C203  F279         	movff	?___flneg+3,__doprnt@fval+3
 26721                           
 26722                           ;doprnt.c: 833: flag |= 0x03;
 26723  011C84  0E03               	movlw	3
 26724  011C86  0102               	movlb	2	; () banked
 26725  011C88  1380               	iorwf	__doprnt@flag& (0+255),f,b
 26726  011C8A                     l2153:
 26727                           
 26728                           ; BSR set to: 2
 26729                           ;doprnt.c: 834: }
 26730                           ;doprnt.c: 835: exp = 0;
 26731                           
 26732                           ; BSR set to: 2
 26733  011C8A  0E00               	movlw	0
 26734  011C8C  6F71               	movwf	(__doprnt@exp+1)& (0+255),b
 26735  011C8E  0E00               	movlw	0
 26736  011C90  6F70               	movwf	__doprnt@exp& (0+255),b
 26737                           
 26738                           ; BSR set to: 2
 26739                           ;doprnt.c: 836: if( fval!=0) {
 26740  011C92  5176               	movf	__doprnt@fval& (0+255),w,b
 26741  011C94  1177               	iorwf	(__doprnt@fval+1)& (0+255),w,b
 26742  011C96  1178               	iorwf	(__doprnt@fval+2)& (0+255),w,b
 26743  011C98  1179               	iorwf	(__doprnt@fval+3)& (0+255),w,b
 26744  011C9A  B4D8               	btfsc	status,2,c
 26745  011C9C  D088               	goto	l2158
 26746                           
 26747                           ; BSR set to: 2
 26748                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 26749  011C9E  3578               	rlcf	(__doprnt@fval+2)& (0+255),w,b
 26750  011CA0  3579               	rlcf	(__doprnt@fval+3)& (0+255),w,b
 26751  011CA2  0F82               	addlw	130
 26752  011CA4  6F70               	movwf	__doprnt@exp& (0+255),b
 26753  011CA6  6B71               	clrf	(__doprnt@exp+1)& (0+255),b
 26754  011CA8  0EFF               	movlw	255
 26755  011CAA  2371               	addwfc	(__doprnt@exp+1)& (0+255),f,b
 26756                           
 26757                           ; BSR set to: 2
 26758                           ;doprnt.c: 838: exp--;
 26759  011CAC  0770               	decf	__doprnt@exp& (0+255),f,b
 26760  011CAE  A0D8               	btfss	status,0,c
 26761  011CB0  0771               	decf	(__doprnt@exp+1)& (0+255),f,b
 26762                           
 26763                           ; BSR set to: 2
 26764                           ;doprnt.c: 839: exp *= 3;
 26765  011CB2  C270  F14F         	movff	__doprnt@exp,___wmul@multiplier
 26766  011CB6  C271  F150         	movff	__doprnt@exp+1,___wmul@multiplier+1
 26767  011CBA  0E00               	movlw	0
 26768  011CBC  0101               	movlb	1	; () banked
 26769  011CBE  6F52               	movwf	(___wmul@multiplicand+1)& (0+255),b
 26770  011CC0  0E03               	movlw	3
 26771  011CC2  6F51               	movwf	___wmul@multiplicand& (0+255),b
 26772  011CC4  EC41  F0DD         	call	___wmul	;wreg free
 26773  011CC8  C14F  F270         	movff	?___wmul,__doprnt@exp
 26774  011CCC  C150  F271         	movff	?___wmul+1,__doprnt@exp+1
 26775                           
 26776                           ;doprnt.c: 840: exp /= 10;
 26777  011CD0  C270  F155         	movff	__doprnt@exp,___awdiv@dividend
 26778  011CD4  C271  F156         	movff	__doprnt@exp+1,___awdiv@dividend+1
 26779  011CD8  0E00               	movlw	0
 26780  011CDA  0101               	movlb	1	; () banked
 26781  011CDC  6F58               	movwf	(___awdiv@divisor+1)& (0+255),b
 26782  011CDE  0E0A               	movlw	10
 26783  011CE0  6F57               	movwf	___awdiv@divisor& (0+255),b
 26784  011CE2  EC64  F0D1         	call	___awdiv	;wreg free
 26785  011CE6  C155  F270         	movff	?___awdiv,__doprnt@exp
 26786  011CEA  C156  F271         	movff	?___awdiv+1,__doprnt@exp+1
 26787                           
 26788                           ;doprnt.c: 841: if(exp < 0)
 26789  011CEE  0102               	movlb	2	; () banked
 26790  011CF0  AF71               	btfss	(__doprnt@exp+1)& (0+255),7,b
 26791  011CF2  D003               	goto	l2155
 26792                           
 26793                           ; BSR set to: 2
 26794                           ;doprnt.c: 842: exp--;
 26795  011CF4  0770               	decf	__doprnt@exp& (0+255),f,b
 26796  011CF6  A0D8               	btfss	status,0,c
 26797  011CF8  0771               	decf	(__doprnt@exp+1)& (0+255),f,b
 26798  011CFA                     l2155:
 26799                           
 26800                           ; BSR set to: 2
 26801                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 26802                           
 26803                           ; BSR set to: 2
 26804  011CFA  5170               	movf	__doprnt@exp& (0+255),w,b
 26805  011CFC  0800               	sublw	0
 26806  011CFE  ECFE  F0A5         	call	_scale
 26807  011D02  C24A  F272         	movff	?_scale,__doprnt@tmpval
 26808  011D06  C24B  F273         	movff	?_scale+1,__doprnt@tmpval+1
 26809  011D0A  C24C  F274         	movff	?_scale+2,__doprnt@tmpval+2
 26810  011D0E  C24D  F275         	movff	?_scale+3,__doprnt@tmpval+3
 26811                           
 26812                           ;doprnt.c: 847: tmpval.integ *= fval;
 26813  011D12  C272  F231         	movff	__doprnt@tmpval,___flmul@b
 26814  011D16  C273  F232         	movff	__doprnt@tmpval+1,___flmul@b+1
 26815  011D1A  C274  F233         	movff	__doprnt@tmpval+2,___flmul@b+2
 26816  011D1E  C275  F234         	movff	__doprnt@tmpval+3,___flmul@b+3
 26817  011D22  C276  F235         	movff	__doprnt@fval,___flmul@a
 26818  011D26  C277  F236         	movff	__doprnt@fval+1,___flmul@a+1
 26819  011D2A  C278  F237         	movff	__doprnt@fval+2,___flmul@a+2
 26820  011D2E  C279  F238         	movff	__doprnt@fval+3,___flmul@a+3
 26821  011D32  EC5C  F0AC         	call	___flmul	;wreg free
 26822  011D36  C231  F272         	movff	?___flmul,__doprnt@tmpval
 26823  011D3A  C232  F273         	movff	?___flmul+1,__doprnt@tmpval+1
 26824  011D3E  C233  F274         	movff	?___flmul+2,__doprnt@tmpval+2
 26825  011D42  C234  F275         	movff	?___flmul+3,__doprnt@tmpval+3
 26826                           
 26827                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 26828  011D46  C272  F14F         	movff	__doprnt@tmpval,___flge@ff1
 26829  011D4A  C273  F150         	movff	__doprnt@tmpval+1,___flge@ff1+1
 26830  011D4E  C274  F151         	movff	__doprnt@tmpval+2,___flge@ff1+2
 26831  011D52  C275  F152         	movff	__doprnt@tmpval+3,___flge@ff1+3
 26832  011D56  0E00               	movlw	0
 26833  011D58  0101               	movlb	1	; () banked
 26834  011D5A  6F53               	movwf	___flge@ff2& (0+255),b
 26835  011D5C  0E00               	movlw	0
 26836  011D5E  6F54               	movwf	(___flge@ff2+1)& (0+255),b
 26837  011D60  0E80               	movlw	128
 26838  011D62  6F55               	movwf	(___flge@ff2+2)& (0+255),b
 26839  011D64  0E3F               	movlw	63
 26840  011D66  6F56               	movwf	(___flge@ff2+3)& (0+255),b
 26841  011D68  ECCE  F0C8         	call	___flge	;wreg free
 26842  011D6C  0101               	movlb	1	; () banked
 26843  011D6E  B0D8               	btfsc	status,0,c
 26844  011D70  D005               	goto	l2156
 26845                           
 26846                           ; BSR set to: 1
 26847                           ;doprnt.c: 849: exp--;
 26848  011D72  0102               	movlb	2	; () banked
 26849  011D74  0770               	decf	__doprnt@exp& (0+255),f,b
 26850  011D76  A0D8               	btfss	status,0,c
 26851  011D78  0771               	decf	(__doprnt@exp+1)& (0+255),f,b
 26852  011D7A  D019               	goto	l2158
 26853  011D7C                     l2156:
 26854                           
 26855                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 26856                           
 26857                           ; BSR set to: 2
 26858  011D7C  C272  F14F         	movff	__doprnt@tmpval,___flge@ff1
 26859  011D80  C273  F150         	movff	__doprnt@tmpval+1,___flge@ff1+1
 26860  011D84  C274  F151         	movff	__doprnt@tmpval+2,___flge@ff1+2
 26861  011D88  C275  F152         	movff	__doprnt@tmpval+3,___flge@ff1+3
 26862  011D8C  0E00               	movlw	0
 26863  011D8E  0101               	movlb	1	; () banked
 26864  011D90  6F53               	movwf	___flge@ff2& (0+255),b
 26865  011D92  0E00               	movlw	0
 26866  011D94  6F54               	movwf	(___flge@ff2+1)& (0+255),b
 26867  011D96  0E20               	movlw	32
 26868  011D98  6F55               	movwf	(___flge@ff2+2)& (0+255),b
 26869  011D9A  0E41               	movlw	65
 26870  011D9C  6F56               	movwf	(___flge@ff2+3)& (0+255),b
 26871  011D9E  ECCE  F0C8         	call	___flge	;wreg free
 26872  011DA2  0101               	movlb	1	; () banked
 26873  011DA4  A0D8               	btfss	status,0,c
 26874  011DA6  D003               	goto	l2158
 26875                           
 26876                           ; BSR set to: 1
 26877                           ;doprnt.c: 851: exp++;
 26878  011DA8  0102               	movlb	2	; () banked
 26879  011DAA  4B70               	infsnz	__doprnt@exp& (0+255),f,b
 26880  011DAC  2B71               	incf	(__doprnt@exp+1)& (0+255),f,b
 26881  011DAE                     l2158:
 26882                           
 26883                           ;doprnt.c: 852: }
 26884                           ;doprnt.c: 1112: if(prec <= 12)
 26885                           
 26886                           ; BSR set to: 2
 26887                           
 26888                           ; BSR set to: 2
 26889                           
 26890                           ; BSR set to: 2
 26891  011DAE  0102               	movlb	2	; () banked
 26892  011DB0  BF83               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 26893  011DB2  D006               	goto	u33980
 26894  011DB4  5183               	movf	(__doprnt@prec+1)& (0+255),w,b
 26895  011DB6  E121               	bnz	l24187
 26896  011DB8  0E0D               	movlw	13
 26897  011DBA  5D82               	subwf	__doprnt@prec& (0+255),w,b
 26898  011DBC  B0D8               	btfsc	status,0,c
 26899  011DBE  D01D               	goto	l2159
 26900  011DC0                     u33980:
 26901                           
 26902                           ; BSR set to: 2
 26903                           ;doprnt.c: 1113: fval += fround(prec);
 26904  011DC0  C276  F204         	movff	__doprnt@fval,___fladd@b
 26905  011DC4  C277  F205         	movff	__doprnt@fval+1,___fladd@b+1
 26906  011DC8  C278  F206         	movff	__doprnt@fval+2,___fladd@b+2
 26907  011DCC  C279  F207         	movff	__doprnt@fval+3,___fladd@b+3
 26908  011DD0  5182               	movf	__doprnt@prec& (0+255),w,b
 26909  011DD2  ECEA  F0B5         	call	_fround
 26910  011DD6  C24A  F208         	movff	?_fround,___fladd@a
 26911  011DDA  C24B  F209         	movff	?_fround+1,___fladd@a+1
 26912  011DDE  C24C  F20A         	movff	?_fround+2,___fladd@a+2
 26913  011DE2  C24D  F20B         	movff	?_fround+3,___fladd@a+3
 26914  011DE6  ECAD  F0AF         	call	___fladd	;wreg free
 26915  011DEA  C204  F276         	movff	?___fladd,__doprnt@fval
 26916  011DEE  C205  F277         	movff	?___fladd+1,__doprnt@fval+1
 26917  011DF2  C206  F278         	movff	?___fladd+2,__doprnt@fval+2
 26918  011DF6  C207  F279         	movff	?___fladd+3,__doprnt@fval+3
 26919  011DFA                     l2159:
 26920  011DFA                     l24187:
 26921                           
 26922                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 26923  011DFA  0102               	movlb	2	; () banked
 26924  011DFC  BF71               	btfsc	(__doprnt@exp+1)& (0+255),7,b
 26925  011DFE  D006               	goto	u33990
 26926  011E00  5171               	movf	(__doprnt@exp+1)& (0+255),w,b
 26927  011E02  E122               	bnz	l24195
 26928  011E04  0E0A               	movlw	10
 26929  011E06  5D70               	subwf	__doprnt@exp& (0+255),w,b
 26930  011E08  B0D8               	btfsc	status,0,c
 26931  011E0A  D01E               	goto	u34020
 26932  011E0C                     u33990:
 26933                           
 26934                           ; BSR set to: 2
 26935  011E0C  5176               	movf	__doprnt@fval& (0+255),w,b
 26936  011E0E  1177               	iorwf	(__doprnt@fval+1)& (0+255),w,b
 26937  011E10  1178               	iorwf	(__doprnt@fval+2)& (0+255),w,b
 26938  011E12  1179               	iorwf	(__doprnt@fval+3)& (0+255),w,b
 26939  011E14  B4D8               	btfsc	status,2,c
 26940  011E16  D065               	goto	l2160
 26941                           
 26942                           ; BSR set to: 2
 26943  011E18  C276  F253         	movff	__doprnt@fval,___fltol@f1
 26944  011E1C  C277  F254         	movff	__doprnt@fval+1,___fltol@f1+1
 26945  011E20  C278  F255         	movff	__doprnt@fval+2,___fltol@f1+2
 26946  011E24  C279  F256         	movff	__doprnt@fval+3,___fltol@f1+3
 26947  011E28  EC7C  F0CB         	call	___fltol	;wreg free
 26948  011E2C  0102               	movlb	2	; () banked
 26949  011E2E  5153               	movf	?___fltol& (0+255),w,b
 26950  011E30  1154               	iorwf	(?___fltol+1)& (0+255),w,b
 26951  011E32  1155               	iorwf	(?___fltol+2)& (0+255),w,b
 26952  011E34  1156               	iorwf	(?___fltol+3)& (0+255),w,b
 26953  011E36  B4D8               	btfsc	status,2,c
 26954                           
 26955                           ; BSR set to: 2
 26956  011E38  BF71               	btfsc	(__doprnt@exp+1)& (0+255),7,b
 26957  011E3A  D053               	goto	l2160
 26958  011E3C  5171               	movf	(__doprnt@exp+1)& (0+255),w,b
 26959  011E3E  E104               	bnz	l24195
 26960  011E40  0E02               	movlw	2
 26961  011E42  5D70               	subwf	__doprnt@exp& (0+255),w,b
 26962  011E44  A0D8               	btfss	status,0,c
 26963  011E46  D04D               	goto	l2160
 26964  011E48                     u34020:
 26965  011E48                     l24195:
 26966                           
 26967                           ; BSR set to: 2
 26968                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 26969  011E48  C272  F14F         	movff	__doprnt@tmpval,___flge@ff1
 26970  011E4C  C273  F150         	movff	__doprnt@tmpval+1,___flge@ff1+1
 26971  011E50  C274  F151         	movff	__doprnt@tmpval+2,___flge@ff1+2
 26972  011E54  C275  F152         	movff	__doprnt@tmpval+3,___flge@ff1+3
 26973  011E58  0E5F               	movlw	95
 26974  011E5A  0101               	movlb	1	; () banked
 26975  011E5C  6F53               	movwf	___flge@ff2& (0+255),b
 26976  011E5E  0E70               	movlw	112
 26977  011E60  6F54               	movwf	(___flge@ff2+1)& (0+255),b
 26978  011E62  0E89               	movlw	137
 26979  011E64  6F55               	movwf	(___flge@ff2+2)& (0+255),b
 26980  011E66  0E40               	movlw	64
 26981  011E68  6F56               	movwf	(___flge@ff2+3)& (0+255),b
 26982  011E6A  ECCE  F0C8         	call	___flge	;wreg free
 26983  011E6E  0101               	movlb	1	; () banked
 26984  011E70  B0D8               	btfsc	status,0,c
 26985  011E72  D003               	goto	l2163
 26986                           
 26987                           ; BSR set to: 1
 26988                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 26989  011E74  0102               	movlb	2	; () banked
 26990  011E76  0EF7               	movlw	247
 26991  011E78  D002               	goto	L3
 26992  011E7A                     l2163:
 26993                           
 26994                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 26995                           
 26996                           ; BSR set to: 2
 26997  011E7A  0102               	movlb	2	; () banked
 26998  011E7C  0EF8               	movlw	248
 26999  011E7E                     L3:
 27000  011E7E  2770               	addwf	__doprnt@exp& (0+255),f,b
 27001  011E80  0EFF               	movlw	255
 27002  011E82  2371               	addwfc	(__doprnt@exp+1)& (0+255),f,b
 27003                           
 27004                           ; BSR set to: 2
 27005                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 27006                           
 27007                           ; BSR set to: 2
 27008  011E84  5170               	movf	__doprnt@exp& (0+255),w,b
 27009  011E86  ECFE  F0A5         	call	_scale
 27010  011E8A  C24A  F272         	movff	?_scale,__doprnt@tmpval
 27011  011E8E  C24B  F273         	movff	?_scale+1,__doprnt@tmpval+1
 27012  011E92  C24C  F274         	movff	?_scale+2,__doprnt@tmpval+2
 27013  011E96  C24D  F275         	movff	?_scale+3,__doprnt@tmpval+3
 27014  011E9A  C276  F14F         	movff	__doprnt@fval,__div_to_l_@f1
 27015  011E9E  C277  F150         	movff	__doprnt@fval+1,__div_to_l_@f1+1
 27016  011EA2  C278  F151         	movff	__doprnt@fval+2,__div_to_l_@f1+2
 27017  011EA6  C279  F152         	movff	__doprnt@fval+3,__div_to_l_@f1+3
 27018  011EAA  C272  F153         	movff	__doprnt@tmpval,__div_to_l_@f2
 27019  011EAE  C273  F154         	movff	__doprnt@tmpval+1,__div_to_l_@f2+1
 27020  011EB2  C274  F155         	movff	__doprnt@tmpval+2,__div_to_l_@f2+2
 27021  011EB6  C275  F156         	movff	__doprnt@tmpval+3,__div_to_l_@f2+3
 27022  011EBA  ECA5  F0C7         	call	__div_to_l_	;wreg free
 27023  011EBE  C14F  F27A         	movff	?__div_to_l_,__doprnt@val
 27024  011EC2  C150  F27B         	movff	?__div_to_l_+1,__doprnt@val+1
 27025  011EC6  C151  F27C         	movff	?__div_to_l_+2,__doprnt@val+2
 27026  011ECA  C152  F27D         	movff	?__div_to_l_+3,__doprnt@val+3
 27027                           
 27028                           ;doprnt.c: 1129: fval = 0.0;
 27029  011ECE  0E00               	movlw	0
 27030  011ED0  0102               	movlb	2	; () banked
 27031  011ED2  6F76               	movwf	__doprnt@fval& (0+255),b
 27032  011ED4  0E00               	movlw	0
 27033  011ED6  6F77               	movwf	(__doprnt@fval+1)& (0+255),b
 27034  011ED8  0E00               	movlw	0
 27035  011EDA  6F78               	movwf	(__doprnt@fval+2)& (0+255),b
 27036  011EDC  0E00               	movlw	0
 27037  011EDE  6F79               	movwf	(__doprnt@fval+3)& (0+255),b
 27038                           
 27039                           ;doprnt.c: 1130: } else {
 27040  011EE0  D03C               	goto	l2169
 27041  011EE2                     l2160:
 27042                           
 27043                           ; BSR set to: 2
 27044                           ;doprnt.c: 1131: val = (unsigned long)fval;
 27045                           
 27046                           ; BSR set to: 2
 27047  011EE2  C276  F253         	movff	__doprnt@fval,___fltol@f1
 27048  011EE6  C277  F254         	movff	__doprnt@fval+1,___fltol@f1+1
 27049  011EEA  C278  F255         	movff	__doprnt@fval+2,___fltol@f1+2
 27050  011EEE  C279  F256         	movff	__doprnt@fval+3,___fltol@f1+3
 27051  011EF2  EC7C  F0CB         	call	___fltol	;wreg free
 27052  011EF6  C253  F27A         	movff	?___fltol,__doprnt@val
 27053  011EFA  C254  F27B         	movff	?___fltol+1,__doprnt@val+1
 27054  011EFE  C255  F27C         	movff	?___fltol+2,__doprnt@val+2
 27055  011F02  C256  F27D         	movff	?___fltol+3,__doprnt@val+3
 27056                           
 27057                           ;doprnt.c: 1132: fval -= (double)val;
 27058  011F06  C276  F218         	movff	__doprnt@fval,___flsub@b
 27059  011F0A  C277  F219         	movff	__doprnt@fval+1,___flsub@b+1
 27060  011F0E  C278  F21A         	movff	__doprnt@fval+2,___flsub@b+2
 27061  011F12  C279  F21B         	movff	__doprnt@fval+3,___flsub@b+3
 27062  011F16  C27A  F14F         	movff	__doprnt@val,___xxtofl@val
 27063  011F1A  C27B  F150         	movff	__doprnt@val+1,___xxtofl@val+1
 27064  011F1E  C27C  F151         	movff	__doprnt@val+2,___xxtofl@val+2
 27065  011F22  C27D  F152         	movff	__doprnt@val+3,___xxtofl@val+3
 27066  011F26  0E00               	movlw	0
 27067  011F28  ECE8  F0C3         	call	___xxtofl
 27068  011F2C  C14F  F21C         	movff	?___xxtofl,___flsub@a
 27069  011F30  C150  F21D         	movff	?___xxtofl+1,___flsub@a+1
 27070  011F34  C151  F21E         	movff	?___xxtofl+2,___flsub@a+2
 27071  011F38  C152  F21F         	movff	?___xxtofl+3,___flsub@a+3
 27072  011F3C  EC0D  F0D9         	call	___flsub	;wreg free
 27073  011F40  C218  F276         	movff	?___flsub,__doprnt@fval
 27074  011F44  C219  F277         	movff	?___flsub+1,__doprnt@fval+1
 27075  011F48  C21A  F278         	movff	?___flsub+2,__doprnt@fval+2
 27076  011F4C  C21B  F279         	movff	?___flsub+3,__doprnt@fval+3
 27077                           
 27078                           ;doprnt.c: 1133: exp = 0;
 27079  011F50  0E00               	movlw	0
 27080  011F52  0102               	movlb	2	; () banked
 27081  011F54  6F71               	movwf	(__doprnt@exp+1)& (0+255),b
 27082  011F56  0E00               	movlw	0
 27083  011F58  6F70               	movwf	__doprnt@exp& (0+255),b
 27084  011F5A                     l2169:
 27085                           
 27086                           ; BSR set to: 2
 27087                           ;doprnt.c: 1134: }
 27088                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 27089                           
 27090                           ; BSR set to: 2
 27091  011F5A  0E01               	movlw	1
 27092  011F5C  6F84               	movwf	__doprnt@c& (0+255),b
 27093  011F5E                     l24215:
 27094                           
 27095                           ; BSR set to: 2
 27096  011F5E  0E0A               	movlw	10
 27097  011F60  1984               	xorwf	__doprnt@c& (0+255),w,b
 27098  011F62  B4D8               	btfsc	status,2,c
 27099  011F64  D01B               	goto	u34060
 27100                           
 27101                           ; BSR set to: 2
 27102                           ;doprnt.c: 1137: if(val < dpowers[c])
 27103                           
 27104                           ; BSR set to: 2
 27105                           
 27106                           ; BSR set to: 2
 27107  011F66  5184               	movf	__doprnt@c& (0+255),w,b
 27108  011F68  0D04               	mullw	4
 27109  011F6A  0E45               	movlw	low _dpowers
 27110  011F6C  24F3               	addwf	prodl,w,c
 27111  011F6E  6EF6               	movwf	tblptrl,c
 27112  011F70  0ECE               	movlw	high _dpowers
 27113  011F72  20F4               	addwfc	prodh,w,c
 27114  011F74  6EF7               	movwf	tblptrh,c
 27115  011F76                     	if	1	;There are 3 active tblptr bytes
 27116  011F76  6AF8               	clrf	tblptru,c
 27117  011F78  0E00               	movlw	low (__mediumconst shr (0+16))
 27118  011F7A  22F8               	addwfc	tblptru,f,c
 27119  011F7C                     	endif
 27120  011F7C  0009               	tblrd		*+
 27121  011F7E  50F5               	movf	tablat,w,c
 27122  011F80  5D7A               	subwf	__doprnt@val& (0+255),w,b
 27123  011F82  0009               	tblrd		*+
 27124  011F84  50F5               	movf	tablat,w,c
 27125  011F86  597B               	subwfb	(__doprnt@val+1)& (0+255),w,b
 27126  011F88  0009               	tblrd		*+
 27127  011F8A  50F5               	movf	tablat,w,c
 27128  011F8C  597C               	subwfb	(__doprnt@val+2)& (0+255),w,b
 27129  011F8E  0009               	tblrd		*+
 27130  011F90  50F5               	movf	tablat,w,c
 27131  011F92  597D               	subwfb	(__doprnt@val+3)& (0+255),w,b
 27132  011F94  A0D8               	btfss	status,0,c
 27133  011F96  D002               	goto	u34060
 27134                           
 27135                           ; BSR set to: 2
 27136                           
 27137                           ; BSR set to: 2
 27138                           
 27139                           ; BSR set to: 2
 27140                           ;doprnt.c: 1138: break;
 27141  011F98  2B84               	incf	__doprnt@c& (0+255),f,b
 27142  011F9A  D7E1               	goto	l24215
 27143  011F9C                     u34060:
 27144                           
 27145                           ; BSR set to: 2
 27146                           ;doprnt.c: 1142: width -= prec + c + exp;
 27147                           
 27148                           ; BSR set to: 2
 27149  011F9C  C284  F261         	movff	__doprnt@c,??__doprnt
 27150  011FA0  6B62               	clrf	(??__doprnt+1)& (0+255),b
 27151  011FA2  BF61               	btfsc	??__doprnt& (0+255),7,b
 27152  011FA4  0762               	decf	(??__doprnt+1)& (0+255),f,b
 27153  011FA6  5182               	movf	__doprnt@prec& (0+255),w,b
 27154  011FA8  2761               	addwf	??__doprnt& (0+255),f,b
 27155  011FAA  5183               	movf	(__doprnt@prec+1)& (0+255),w,b
 27156  011FAC  2362               	addwfc	(??__doprnt+1)& (0+255),f,b
 27157  011FAE  5170               	movf	__doprnt@exp& (0+255),w,b
 27158  011FB0  2761               	addwf	??__doprnt& (0+255),f,b
 27159  011FB2  5171               	movf	(__doprnt@exp+1)& (0+255),w,b
 27160  011FB4  2362               	addwfc	(??__doprnt+1)& (0+255),f,b
 27161  011FB6  5161               	movf	??__doprnt& (0+255),w,b
 27162  011FB8  5F7E               	subwf	__doprnt@width& (0+255),f,b
 27163  011FBA  5162               	movf	(??__doprnt+1)& (0+255),w,b
 27164  011FBC  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 27165                           
 27166                           ;doprnt.c: 1143: if(
 27167                           ;doprnt.c: 1147: prec)
 27168  011FBE  5182               	movf	__doprnt@prec& (0+255),w,b
 27169  011FC0  1183               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 27170  011FC2  B4D8               	btfsc	status,2,c
 27171  011FC4  D003               	goto	l2173
 27172                           
 27173                           ; BSR set to: 2
 27174                           ;doprnt.c: 1148: width--;
 27175  011FC6  077E               	decf	__doprnt@width& (0+255),f,b
 27176  011FC8  A0D8               	btfss	status,0,c
 27177  011FCA  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 27178  011FCC                     l2173:
 27179                           
 27180                           ; BSR set to: 2
 27181                           ;doprnt.c: 1149: if(flag & 0x03)
 27182                           
 27183                           ; BSR set to: 2
 27184  011FCC  0E03               	movlw	3
 27185  011FCE  1580               	andwf	__doprnt@flag& (0+255),w,b
 27186  011FD0  6F61               	movwf	??__doprnt& (0+255),b
 27187  011FD2  0E00               	movlw	0
 27188  011FD4  1581               	andwf	(__doprnt@flag+1)& (0+255),w,b
 27189  011FD6  6F62               	movwf	(??__doprnt+1)& (0+255),b
 27190  011FD8  5161               	movf	??__doprnt& (0+255),w,b
 27191  011FDA  1162               	iorwf	(??__doprnt+1)& (0+255),w,b
 27192  011FDC  B4D8               	btfsc	status,2,c
 27193  011FDE  D003               	goto	l2174
 27194                           
 27195                           ; BSR set to: 2
 27196                           ;doprnt.c: 1150: width--;
 27197  011FE0  077E               	decf	__doprnt@width& (0+255),f,b
 27198  011FE2  A0D8               	btfss	status,0,c
 27199  011FE4  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 27200  011FE6                     l2174:
 27201                           
 27202                           ; BSR set to: 2
 27203                           ;doprnt.c: 1153: if(flag & 0x04) {
 27204                           
 27205                           ; BSR set to: 2
 27206  011FE6  A580               	btfss	__doprnt@flag& (0+255),2,b
 27207  011FE8  D0B6               	goto	l2185
 27208                           
 27209                           ; BSR set to: 2
 27210                           ;doprnt.c: 1157: if(flag & 0x03)
 27211  011FEA  0E03               	movlw	3
 27212  011FEC  1580               	andwf	__doprnt@flag& (0+255),w,b
 27213  011FEE  6F61               	movwf	??__doprnt& (0+255),b
 27214  011FF0  0E00               	movlw	0
 27215  011FF2  1581               	andwf	(__doprnt@flag+1)& (0+255),w,b
 27216  011FF4  6F62               	movwf	(??__doprnt+1)& (0+255),b
 27217  011FF6  5161               	movf	??__doprnt& (0+255),w,b
 27218  011FF8  1162               	iorwf	(??__doprnt+1)& (0+255),w,b
 27219  011FFA  B4D8               	btfsc	status,2,c
 27220  011FFC  D06C               	goto	l2179
 27221                           
 27222                           ; BSR set to: 2
 27223                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 27224  011FFE  EE20 F002          	lfsr	2,2
 27225  012002  515B               	movf	__doprnt@pb& (0+255),w,b
 27226  012004  26D9               	addwf	fsr2l,f,c
 27227  012006  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27228  012008  22DA               	addwfc	fsr2h,f,c
 27229  01200A  50DE               	movf	postinc2,w,c
 27230  01200C  10DE               	iorwf	postinc2,w,c
 27231  01200E  10DE               	iorwf	postinc2,w,c
 27232  012010  B4D8               	btfsc	status,2,c
 27233  012012  D013               	goto	l2177
 27234                           
 27235                           ; BSR set to: 2
 27236  012014  EE20 F002          	lfsr	2,2
 27237  012018  515B               	movf	__doprnt@pb& (0+255),w,b
 27238  01201A  26D9               	addwf	fsr2l,f,c
 27239  01201C  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27240  01201E  22DA               	addwfc	fsr2h,f,c
 27241  012020  D801               	call	u34128
 27242  012022  D059               	goto	l2179
 27243  012024                     u34128:
 27244  012024  0005               	push	
 27245  012026  6EFA               	movwf	pclath,c
 27246  012028  50DE               	movf	postinc2,w,c
 27247  01202A  6EFD               	movwf	tosl,c
 27248  01202C  50DE               	movf	postinc2,w,c
 27249  01202E  6EFE               	movwf	tosh,c
 27250  012030  50DE               	movf	postinc2,w,c
 27251  012032  6EFF               	movwf	tosu,c
 27252  012034  50FA               	movf	pclath,w,c
 27253  012036  0E2D               	movlw	45
 27254  012038  0012               	return		;indir
 27255  01203A                     l2177:
 27256  01203A  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 27257  01203E  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 27258  012042  CFDE F261          	movff	postinc2,??__doprnt
 27259  012046  CFDD F262          	movff	postdec2,??__doprnt+1
 27260  01204A  C261  FFD9         	movff	??__doprnt,fsr2l
 27261  01204E  C262  FFDA         	movff	??__doprnt+1,fsr2h
 27262  012052  0E2D               	movlw	45
 27263  012054  6EDF               	movwf	indf2,c
 27264  012056  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 27265  01205A  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 27266  01205E  2ADE               	incf	postinc2,f,c
 27267  012060  0E00               	movlw	0
 27268  012062  22DD               	addwfc	postdec2,f,c
 27269                           
 27270                           ;doprnt.c: 1168: while(width > 0) {
 27271  012064  D038               	goto	l2179
 27272  012066                     l24247:
 27273                           
 27274                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 27275  012066  0102               	movlb	2	; () banked
 27276  012068  EE20 F002          	lfsr	2,2
 27277  01206C  515B               	movf	__doprnt@pb& (0+255),w,b
 27278  01206E  26D9               	addwf	fsr2l,f,c
 27279  012070  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27280  012072  22DA               	addwfc	fsr2h,f,c
 27281  012074  50DE               	movf	postinc2,w,c
 27282  012076  10DE               	iorwf	postinc2,w,c
 27283  012078  10DE               	iorwf	postinc2,w,c
 27284  01207A  B4D8               	btfsc	status,2,c
 27285  01207C  D013               	goto	l2181
 27286                           
 27287                           ; BSR set to: 2
 27288  01207E  EE20 F002          	lfsr	2,2
 27289  012082  515B               	movf	__doprnt@pb& (0+255),w,b
 27290  012084  26D9               	addwf	fsr2l,f,c
 27291  012086  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27292  012088  22DA               	addwfc	fsr2h,f,c
 27293  01208A  D801               	call	u34148
 27294  01208C  D020               	goto	l2182
 27295  01208E                     u34148:
 27296  01208E  0005               	push	
 27297  012090  6EFA               	movwf	pclath,c
 27298  012092  50DE               	movf	postinc2,w,c
 27299  012094  6EFD               	movwf	tosl,c
 27300  012096  50DE               	movf	postinc2,w,c
 27301  012098  6EFE               	movwf	tosh,c
 27302  01209A  50DE               	movf	postinc2,w,c
 27303  01209C  6EFF               	movwf	tosu,c
 27304  01209E  50FA               	movf	pclath,w,c
 27305  0120A0  0E30               	movlw	48
 27306  0120A2  0012               	return		;indir
 27307  0120A4                     l2181:
 27308  0120A4  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 27309  0120A8  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 27310  0120AC  CFDE F261          	movff	postinc2,??__doprnt
 27311  0120B0  CFDD F262          	movff	postdec2,??__doprnt+1
 27312  0120B4  C261  FFD9         	movff	??__doprnt,fsr2l
 27313  0120B8  C262  FFDA         	movff	??__doprnt+1,fsr2h
 27314  0120BC  0E30               	movlw	48
 27315  0120BE  6EDF               	movwf	indf2,c
 27316  0120C0  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 27317  0120C4  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 27318  0120C8  2ADE               	incf	postinc2,f,c
 27319  0120CA  0E00               	movlw	0
 27320  0120CC  22DD               	addwfc	postdec2,f,c
 27321  0120CE                     l2182:
 27322                           
 27323                           ;doprnt.c: 1170: width--;
 27324  0120CE  0102               	movlb	2	; () banked
 27325  0120D0  077E               	decf	__doprnt@width& (0+255),f,b
 27326  0120D2  A0D8               	btfss	status,0,c
 27327  0120D4  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 27328  0120D6                     l2179:
 27329                           
 27330                           ; BSR set to: 2
 27331  0120D6  0102               	movlb	2	; () banked
 27332  0120D8  BF7F               	btfsc	(__doprnt@width+1)& (0+255),7,b
 27333  0120DA  D0F6               	goto	l2196
 27334  0120DC  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 27335  0120DE  E1C3               	bnz	l24247
 27336  0120E0  057E               	decf	__doprnt@width& (0+255),w,b
 27337  0120E2  A0D8               	btfss	status,0,c
 27338  0120E4  D0F1               	goto	l2196
 27339  0120E6  D7BF               	goto	l2180
 27340  0120E8                     l24259:
 27341                           
 27342                           ; BSR set to: 2
 27343                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 27344  0120E8  EE20 F002          	lfsr	2,2
 27345  0120EC  515B               	movf	__doprnt@pb& (0+255),w,b
 27346  0120EE  26D9               	addwf	fsr2l,f,c
 27347  0120F0  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27348  0120F2  22DA               	addwfc	fsr2h,f,c
 27349  0120F4  50DE               	movf	postinc2,w,c
 27350  0120F6  10DE               	iorwf	postinc2,w,c
 27351  0120F8  10DE               	iorwf	postinc2,w,c
 27352  0120FA  B4D8               	btfsc	status,2,c
 27353  0120FC  D013               	goto	l2187
 27354                           
 27355                           ; BSR set to: 2
 27356  0120FE  EE20 F002          	lfsr	2,2
 27357  012102  515B               	movf	__doprnt@pb& (0+255),w,b
 27358  012104  26D9               	addwf	fsr2l,f,c
 27359  012106  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27360  012108  22DA               	addwfc	fsr2h,f,c
 27361  01210A  D801               	call	u34178
 27362  01210C  D020               	goto	l2188
 27363  01210E                     u34178:
 27364  01210E  0005               	push	
 27365  012110  6EFA               	movwf	pclath,c
 27366  012112  50DE               	movf	postinc2,w,c
 27367  012114  6EFD               	movwf	tosl,c
 27368  012116  50DE               	movf	postinc2,w,c
 27369  012118  6EFE               	movwf	tosh,c
 27370  01211A  50DE               	movf	postinc2,w,c
 27371  01211C  6EFF               	movwf	tosu,c
 27372  01211E  50FA               	movf	pclath,w,c
 27373  012120  0E20               	movlw	32
 27374  012122  0012               	return		;indir
 27375  012124                     l2187:
 27376  012124  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 27377  012128  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 27378  01212C  CFDE F261          	movff	postinc2,??__doprnt
 27379  012130  CFDD F262          	movff	postdec2,??__doprnt+1
 27380  012134  C261  FFD9         	movff	??__doprnt,fsr2l
 27381  012138  C262  FFDA         	movff	??__doprnt+1,fsr2h
 27382  01213C  0E20               	movlw	32
 27383  01213E  6EDF               	movwf	indf2,c
 27384  012140  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 27385  012144  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 27386  012148  2ADE               	incf	postinc2,f,c
 27387  01214A  0E00               	movlw	0
 27388  01214C  22DD               	addwfc	postdec2,f,c
 27389  01214E                     l2188:
 27390                           
 27391                           ;doprnt.c: 1182: width--;
 27392  01214E  0102               	movlb	2	; () banked
 27393  012150  077E               	decf	__doprnt@width& (0+255),f,b
 27394  012152  A0D8               	btfss	status,0,c
 27395  012154  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 27396  012156                     l2185:
 27397                           
 27398                           ; BSR set to: 2
 27399                           
 27400                           ; BSR set to: 2
 27401  012156  BF7F               	btfsc	(__doprnt@width+1)& (0+255),7,b
 27402  012158  D005               	goto	u34180
 27403  01215A  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 27404  01215C  E1C5               	bnz	l24259
 27405  01215E  057E               	decf	__doprnt@width& (0+255),w,b
 27406  012160  B0D8               	btfsc	status,0,c
 27407  012162  D7C2               	goto	l2186
 27408  012164                     u34180:
 27409                           
 27410                           ; BSR set to: 2
 27411                           ;doprnt.c: 1183: }
 27412                           ;doprnt.c: 1188: if(flag & 0x03)
 27413                           
 27414                           ; BSR set to: 2
 27415  012164  0E03               	movlw	3
 27416  012166  1580               	andwf	__doprnt@flag& (0+255),w,b
 27417  012168  6F61               	movwf	??__doprnt& (0+255),b
 27418  01216A  0E00               	movlw	0
 27419  01216C  1581               	andwf	(__doprnt@flag+1)& (0+255),w,b
 27420  01216E  6F62               	movwf	(??__doprnt+1)& (0+255),b
 27421  012170  5161               	movf	??__doprnt& (0+255),w,b
 27422  012172  1162               	iorwf	(??__doprnt+1)& (0+255),w,b
 27423  012174  B4D8               	btfsc	status,2,c
 27424  012176  D0A8               	goto	l2196
 27425                           
 27426                           ; BSR set to: 2
 27427                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 27428  012178  EE20 F002          	lfsr	2,2
 27429  01217C  515B               	movf	__doprnt@pb& (0+255),w,b
 27430  01217E  26D9               	addwf	fsr2l,f,c
 27431  012180  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27432  012182  22DA               	addwfc	fsr2h,f,c
 27433  012184  50DE               	movf	postinc2,w,c
 27434  012186  10DE               	iorwf	postinc2,w,c
 27435  012188  10DE               	iorwf	postinc2,w,c
 27436  01218A  B4D8               	btfsc	status,2,c
 27437  01218C  D013               	goto	l2191
 27438                           
 27439                           ; BSR set to: 2
 27440  01218E  EE20 F002          	lfsr	2,2
 27441  012192  515B               	movf	__doprnt@pb& (0+255),w,b
 27442  012194  26D9               	addwf	fsr2l,f,c
 27443  012196  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27444  012198  22DA               	addwfc	fsr2h,f,c
 27445  01219A  D801               	call	u34218
 27446  01219C  D095               	goto	l2196
 27447  01219E                     u34218:
 27448  01219E  0005               	push	
 27449  0121A0  6EFA               	movwf	pclath,c
 27450  0121A2  50DE               	movf	postinc2,w,c
 27451  0121A4  6EFD               	movwf	tosl,c
 27452  0121A6  50DE               	movf	postinc2,w,c
 27453  0121A8  6EFE               	movwf	tosh,c
 27454  0121AA  50DE               	movf	postinc2,w,c
 27455  0121AC  6EFF               	movwf	tosu,c
 27456  0121AE  50FA               	movf	pclath,w,c
 27457  0121B0  0E2D               	movlw	45
 27458  0121B2  0012               	return		;indir
 27459  0121B4                     l2191:
 27460  0121B4  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 27461  0121B8  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 27462  0121BC  CFDE F261          	movff	postinc2,??__doprnt
 27463  0121C0  CFDD F262          	movff	postdec2,??__doprnt+1
 27464  0121C4  C261  FFD9         	movff	??__doprnt,fsr2l
 27465  0121C8  C262  FFDA         	movff	??__doprnt+1,fsr2h
 27466  0121CC  0E2D               	movlw	45
 27467  0121CE  D074               	goto	L4
 27468  0121D0                     
 27469                           ;doprnt.c: 1200: {
 27470                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 27471  0121D0  C27A  F14F         	movff	__doprnt@val,___lldiv@dividend
 27472  0121D4  C27B  F150         	movff	__doprnt@val+1,___lldiv@dividend+1
 27473  0121D8  C27C  F151         	movff	__doprnt@val+2,___lldiv@dividend+2
 27474  0121DC  C27D  F152         	movff	__doprnt@val+3,___lldiv@dividend+3
 27475  0121E0  0102               	movlb	2	; () banked
 27476  0121E2  5184               	movf	__doprnt@c& (0+255),w,b
 27477  0121E4  0D04               	mullw	4
 27478  0121E6  0E45               	movlw	low _dpowers
 27479  0121E8  24F3               	addwf	prodl,w,c
 27480  0121EA  6EF6               	movwf	tblptrl,c
 27481  0121EC  0ECE               	movlw	high _dpowers
 27482  0121EE  20F4               	addwfc	prodh,w,c
 27483  0121F0  6EF7               	movwf	tblptrh,c
 27484  0121F2                     	if	1	;There are 3 active tblptr bytes
 27485  0121F2  6AF8               	clrf	tblptru,c
 27486  0121F4  0E00               	movlw	low (__mediumconst shr (0+16))
 27487  0121F6  22F8               	addwfc	tblptru,f,c
 27488  0121F8                     	endif
 27489  0121F8  0009               	tblrd		*+
 27490  0121FA  CFF5 F153          	movff	tablat,___lldiv@divisor
 27491  0121FE  0009               	tblrd		*+
 27492  012200  CFF5 F154          	movff	tablat,___lldiv@divisor+1
 27493  012204  0009               	tblrd		*+
 27494  012206  CFF5 F155          	movff	tablat,___lldiv@divisor+2
 27495  01220A  000A               	tblrd		*-
 27496  01220C  CFF5 F156          	movff	tablat,___lldiv@divisor+3
 27497  012210  ECA7  F0D1         	call	___lldiv
 27498  012214  C14F  F272         	movff	?___lldiv,__doprnt@tmpval
 27499  012218  C150  F273         	movff	?___lldiv+1,__doprnt@tmpval+1
 27500  01221C  C151  F274         	movff	?___lldiv+2,__doprnt@tmpval+2
 27501  012220  C152  F275         	movff	?___lldiv+3,__doprnt@tmpval+3
 27502                           
 27503                           ;doprnt.c: 1202: tmpval.vd %= 10;
 27504  012224  C272  F200         	movff	__doprnt@tmpval,___llmod@dividend
 27505  012228  C273  F201         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 27506  01222C  C274  F202         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 27507  012230  C275  F203         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 27508  012234  0E0A               	movlw	10
 27509  012236  0102               	movlb	2	; () banked
 27510  012238  6F04               	movwf	___llmod@divisor& (0+255),b
 27511  01223A  0E00               	movlw	0
 27512  01223C  6F05               	movwf	(___llmod@divisor+1)& (0+255),b
 27513  01223E  0E00               	movlw	0
 27514  012240  6F06               	movwf	(___llmod@divisor+2)& (0+255),b
 27515  012242  0E00               	movlw	0
 27516  012244  6F07               	movwf	(___llmod@divisor+3)& (0+255),b
 27517  012246  ECA2  F0D3         	call	___llmod	;wreg free
 27518  01224A  C200  F272         	movff	?___llmod,__doprnt@tmpval
 27519  01224E  C201  F273         	movff	?___llmod+1,__doprnt@tmpval+1
 27520  012252  C202  F274         	movff	?___llmod+2,__doprnt@tmpval+2
 27521  012256  C203  F275         	movff	?___llmod+3,__doprnt@tmpval+3
 27522                           
 27523                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 27524  01225A  0102               	movlb	2	; () banked
 27525  01225C  EE20 F002          	lfsr	2,2
 27526  012260  515B               	movf	__doprnt@pb& (0+255),w,b
 27527  012262  26D9               	addwf	fsr2l,f,c
 27528  012264  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27529  012266  22DA               	addwfc	fsr2h,f,c
 27530  012268  50DE               	movf	postinc2,w,c
 27531  01226A  10DE               	iorwf	postinc2,w,c
 27532  01226C  10DE               	iorwf	postinc2,w,c
 27533  01226E  B4D8               	btfsc	status,2,c
 27534  012270  D014               	goto	l2195
 27535                           
 27536                           ; BSR set to: 2
 27537  012272  EE20 F002          	lfsr	2,2
 27538  012276  515B               	movf	__doprnt@pb& (0+255),w,b
 27539  012278  26D9               	addwf	fsr2l,f,c
 27540  01227A  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27541  01227C  22DA               	addwfc	fsr2h,f,c
 27542  01227E  D801               	call	u34238
 27543  012280  D023               	goto	l2196
 27544  012282                     u34238:
 27545  012282  0005               	push	
 27546  012284  6EFA               	movwf	pclath,c
 27547  012286  50DE               	movf	postinc2,w,c
 27548  012288  6EFD               	movwf	tosl,c
 27549  01228A  50DE               	movf	postinc2,w,c
 27550  01228C  6EFE               	movwf	tosh,c
 27551  01228E  50DE               	movf	postinc2,w,c
 27552  012290  6EFF               	movwf	tosu,c
 27553  012292  50FA               	movf	pclath,w,c
 27554  012294  5172               	movf	__doprnt@tmpval& (0+255),w,b
 27555  012296  0F30               	addlw	48
 27556  012298  0012               	return		;indir
 27557  01229A                     l2195:
 27558  01229A  0102               	movlb	2	; () banked
 27559  01229C  5172               	movf	__doprnt@tmpval& (0+255),w,b
 27560  01229E  0F30               	addlw	48
 27561  0122A0  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 27562  0122A4  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 27563  0122A8  CFDE F261          	movff	postinc2,??__doprnt
 27564  0122AC  CFDD F262          	movff	postdec2,??__doprnt+1
 27565  0122B0  C261  FFD9         	movff	??__doprnt,fsr2l
 27566  0122B4  C262  FFDA         	movff	??__doprnt+1,fsr2h
 27567  0122B8                     L4:
 27568  0122B8  6EDF               	movwf	indf2,c
 27569  0122BA  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 27570  0122BE  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 27571  0122C2  2ADE               	incf	postinc2,f,c
 27572  0122C4  0E00               	movlw	0
 27573  0122C6  22DD               	addwfc	postdec2,f,c
 27574  0122C8                     l2196:
 27575                           
 27576                           ; BSR set to: 2
 27577                           
 27578                           ; BSR set to: 2
 27579  0122C8  0102               	movlb	2	; () banked
 27580  0122CA  0784               	decf	__doprnt@c& (0+255),f,b
 27581  0122CC  2984               	incf	__doprnt@c& (0+255),w,b
 27582  0122CE  B4D8               	btfsc	status,2,c
 27583  0122D0  D038               	goto	l2198
 27584  0122D2  D77E               	goto	l2194
 27585  0122D4                     l24293:
 27586                           
 27587                           ; BSR set to: 2
 27588                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 27589  0122D4  EE20 F002          	lfsr	2,2
 27590  0122D8  515B               	movf	__doprnt@pb& (0+255),w,b
 27591  0122DA  26D9               	addwf	fsr2l,f,c
 27592  0122DC  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27593  0122DE  22DA               	addwfc	fsr2h,f,c
 27594  0122E0  50DE               	movf	postinc2,w,c
 27595  0122E2  10DE               	iorwf	postinc2,w,c
 27596  0122E4  10DE               	iorwf	postinc2,w,c
 27597  0122E6  B4D8               	btfsc	status,2,c
 27598  0122E8  D013               	goto	l2200
 27599                           
 27600                           ; BSR set to: 2
 27601  0122EA  EE20 F002          	lfsr	2,2
 27602  0122EE  515B               	movf	__doprnt@pb& (0+255),w,b
 27603  0122F0  26D9               	addwf	fsr2l,f,c
 27604  0122F2  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27605  0122F4  22DA               	addwfc	fsr2h,f,c
 27606  0122F6  D801               	call	u34268
 27607  0122F8  D020               	goto	l2201
 27608  0122FA                     u34268:
 27609  0122FA  0005               	push	
 27610  0122FC  6EFA               	movwf	pclath,c
 27611  0122FE  50DE               	movf	postinc2,w,c
 27612  012300  6EFD               	movwf	tosl,c
 27613  012302  50DE               	movf	postinc2,w,c
 27614  012304  6EFE               	movwf	tosh,c
 27615  012306  50DE               	movf	postinc2,w,c
 27616  012308  6EFF               	movwf	tosu,c
 27617  01230A  50FA               	movf	pclath,w,c
 27618  01230C  0E30               	movlw	48
 27619  01230E  0012               	return		;indir
 27620  012310                     l2200:
 27621  012310  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 27622  012314  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 27623  012318  CFDE F261          	movff	postinc2,??__doprnt
 27624  01231C  CFDD F262          	movff	postdec2,??__doprnt+1
 27625  012320  C261  FFD9         	movff	??__doprnt,fsr2l
 27626  012324  C262  FFDA         	movff	??__doprnt+1,fsr2h
 27627  012328  0E30               	movlw	48
 27628  01232A  6EDF               	movwf	indf2,c
 27629  01232C  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 27630  012330  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 27631  012334  2ADE               	incf	postinc2,f,c
 27632  012336  0E00               	movlw	0
 27633  012338  22DD               	addwfc	postdec2,f,c
 27634  01233A                     l2201:
 27635                           
 27636                           ;doprnt.c: 1209: exp--;
 27637  01233A  0102               	movlb	2	; () banked
 27638  01233C  0770               	decf	__doprnt@exp& (0+255),f,b
 27639  01233E  A0D8               	btfss	status,0,c
 27640  012340  0771               	decf	(__doprnt@exp+1)& (0+255),f,b
 27641  012342                     l2198:
 27642                           
 27643                           ; BSR set to: 2
 27644                           
 27645                           ; BSR set to: 2
 27646  012342  BF71               	btfsc	(__doprnt@exp+1)& (0+255),7,b
 27647  012344  D005               	goto	u34270
 27648  012346  5171               	movf	(__doprnt@exp+1)& (0+255),w,b
 27649  012348  E1C5               	bnz	l24293
 27650  01234A  0570               	decf	__doprnt@exp& (0+255),w,b
 27651  01234C  B0D8               	btfsc	status,0,c
 27652  01234E  D7C2               	goto	l2199
 27653  012350                     u34270:
 27654                           
 27655                           ; BSR set to: 2
 27656                           ;doprnt.c: 1210: }
 27657                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 27658                           
 27659                           ; BSR set to: 2
 27660  012350  BF83               	btfsc	(__doprnt@prec+1)& (0+255),7,b
 27661  012352  D009               	goto	l2203
 27662  012354  5183               	movf	(__doprnt@prec+1)& (0+255),w,b
 27663  012356  E104               	bnz	u34280
 27664  012358  0E09               	movlw	9
 27665  01235A  5D82               	subwf	__doprnt@prec& (0+255),w,b
 27666  01235C  A0D8               	btfss	status,0,c
 27667  01235E  D003               	goto	l2203
 27668  012360                     u34280:
 27669                           
 27670                           ; BSR set to: 2
 27671                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 27672  012360  0E08               	movlw	8
 27673  012362  6F84               	movwf	__doprnt@c& (0+255),b
 27674  012364  D002               	goto	l2204
 27675  012366                     l2203:
 27676                           
 27677                           ; BSR set to: 2
 27678                           ;doprnt.c: 1213: else
 27679                           ;doprnt.c: 1214: c = prec;
 27680  012366  C282  F284         	movff	__doprnt@prec,__doprnt@c
 27681  01236A                     l2204:
 27682                           
 27683                           ; BSR set to: 2
 27684                           ;doprnt.c: 1215: prec -= c;
 27685                           
 27686                           ; BSR set to: 2
 27687  01236A  5184               	movf	__doprnt@c& (0+255),w,b
 27688  01236C  5F82               	subwf	__doprnt@prec& (0+255),f,b
 27689  01236E  0E00               	movlw	0
 27690  012370  BF84               	btfsc	__doprnt@c& (0+255),7,b
 27691  012372  0EFF               	movlw	255
 27692  012374  5B83               	subwfb	(__doprnt@prec+1)& (0+255),f,b
 27693                           
 27694                           ; BSR set to: 2
 27695                           ;doprnt.c: 1219: if(c)
 27696  012376  5184               	movf	__doprnt@c& (0+255),w,b
 27697  012378  B4D8               	btfsc	status,2,c
 27698  01237A  D033               	goto	l2207
 27699                           
 27700                           ; BSR set to: 2
 27701                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
 27702  01237C  EE20 F002          	lfsr	2,2
 27703  012380  515B               	movf	__doprnt@pb& (0+255),w,b
 27704  012382  26D9               	addwf	fsr2l,f,c
 27705  012384  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27706  012386  22DA               	addwfc	fsr2h,f,c
 27707  012388  50DE               	movf	postinc2,w,c
 27708  01238A  10DE               	iorwf	postinc2,w,c
 27709  01238C  10DE               	iorwf	postinc2,w,c
 27710  01238E  B4D8               	btfsc	status,2,c
 27711  012390  D013               	goto	l2206
 27712                           
 27713                           ; BSR set to: 2
 27714  012392  EE20 F002          	lfsr	2,2
 27715  012396  515B               	movf	__doprnt@pb& (0+255),w,b
 27716  012398  26D9               	addwf	fsr2l,f,c
 27717  01239A  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27718  01239C  22DA               	addwfc	fsr2h,f,c
 27719  01239E  D801               	call	u34318
 27720  0123A0  D020               	goto	l2207
 27721  0123A2                     u34318:
 27722  0123A2  0005               	push	
 27723  0123A4  6EFA               	movwf	pclath,c
 27724  0123A6  50DE               	movf	postinc2,w,c
 27725  0123A8  6EFD               	movwf	tosl,c
 27726  0123AA  50DE               	movf	postinc2,w,c
 27727  0123AC  6EFE               	movwf	tosh,c
 27728  0123AE  50DE               	movf	postinc2,w,c
 27729  0123B0  6EFF               	movwf	tosu,c
 27730  0123B2  50FA               	movf	pclath,w,c
 27731  0123B4  0E2E               	movlw	46
 27732  0123B6  0012               	return		;indir
 27733  0123B8                     l2206:
 27734  0123B8  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 27735  0123BC  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 27736  0123C0  CFDE F261          	movff	postinc2,??__doprnt
 27737  0123C4  CFDD F262          	movff	postdec2,??__doprnt+1
 27738  0123C8  C261  FFD9         	movff	??__doprnt,fsr2l
 27739  0123CC  C262  FFDA         	movff	??__doprnt+1,fsr2h
 27740  0123D0  0E2E               	movlw	46
 27741  0123D2  6EDF               	movwf	indf2,c
 27742  0123D4  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 27743  0123D8  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 27744  0123DC  2ADE               	incf	postinc2,f,c
 27745  0123DE  0E00               	movlw	0
 27746  0123E0  22DD               	addwfc	postdec2,f,c
 27747  0123E2                     l2207:
 27748                           
 27749                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 27750  0123E2  0102               	movlb	2	; () banked
 27751  0123E4  5184               	movf	__doprnt@c& (0+255),w,b
 27752  0123E6  ECFE  F0A5         	call	_scale
 27753  0123EA  C24A  F267         	movff	?_scale,__doprnt$5591
 27754  0123EE  C24B  F268         	movff	?_scale+1,__doprnt$5591+1
 27755  0123F2  C24C  F269         	movff	?_scale+2,__doprnt$5591+2
 27756  0123F6  C24D  F26A         	movff	?_scale+3,__doprnt$5591+3
 27757                           
 27758                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 27759  0123FA  C276  F235         	movff	__doprnt@fval,___flmul@a
 27760  0123FE  C277  F236         	movff	__doprnt@fval+1,___flmul@a+1
 27761  012402  C278  F237         	movff	__doprnt@fval+2,___flmul@a+2
 27762  012406  C279  F238         	movff	__doprnt@fval+3,___flmul@a+3
 27763  01240A  C267  F231         	movff	__doprnt$5591,___flmul@b
 27764  01240E  C268  F232         	movff	__doprnt$5591+1,___flmul@b+1
 27765  012412  C269  F233         	movff	__doprnt$5591+2,___flmul@b+2
 27766  012416  C26A  F234         	movff	__doprnt$5591+3,___flmul@b+3
 27767  01241A  EC5C  F0AC         	call	___flmul	;wreg free
 27768  01241E  C231  F253         	movff	?___flmul,___fltol@f1
 27769  012422  C232  F254         	movff	?___flmul+1,___fltol@f1+1
 27770  012426  C233  F255         	movff	?___flmul+2,___fltol@f1+2
 27771  01242A  C234  F256         	movff	?___flmul+3,___fltol@f1+3
 27772  01242E  EC7C  F0CB         	call	___fltol	;wreg free
 27773  012432  C253  F27A         	movff	?___fltol,__doprnt@val
 27774  012436  C254  F27B         	movff	?___fltol+1,__doprnt@val+1
 27775  01243A  C255  F27C         	movff	?___fltol+2,__doprnt@val+2
 27776  01243E  C256  F27D         	movff	?___fltol+3,__doprnt@val+3
 27777                           
 27778                           ;doprnt.c: 1228: while(c--) {
 27779  012442  D0A6               	goto	l2208
 27780  012444                     
 27781                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 27782  012444  C27A  F14F         	movff	__doprnt@val,___lldiv@dividend
 27783  012448  C27B  F150         	movff	__doprnt@val+1,___lldiv@dividend+1
 27784  01244C  C27C  F151         	movff	__doprnt@val+2,___lldiv@dividend+2
 27785  012450  C27D  F152         	movff	__doprnt@val+3,___lldiv@dividend+3
 27786  012454  0102               	movlb	2	; () banked
 27787  012456  5184               	movf	__doprnt@c& (0+255),w,b
 27788  012458  0D04               	mullw	4
 27789  01245A  0E45               	movlw	low _dpowers
 27790  01245C  24F3               	addwf	prodl,w,c
 27791  01245E  6EF6               	movwf	tblptrl,c
 27792  012460  0ECE               	movlw	high _dpowers
 27793  012462  20F4               	addwfc	prodh,w,c
 27794  012464  6EF7               	movwf	tblptrh,c
 27795  012466                     	if	1	;There are 3 active tblptr bytes
 27796  012466  6AF8               	clrf	tblptru,c
 27797  012468  0E00               	movlw	low (__mediumconst shr (0+16))
 27798  01246A  22F8               	addwfc	tblptru,f,c
 27799  01246C                     	endif
 27800  01246C  0009               	tblrd		*+
 27801  01246E  CFF5 F153          	movff	tablat,___lldiv@divisor
 27802  012472  0009               	tblrd		*+
 27803  012474  CFF5 F154          	movff	tablat,___lldiv@divisor+1
 27804  012478  0009               	tblrd		*+
 27805  01247A  CFF5 F155          	movff	tablat,___lldiv@divisor+2
 27806  01247E  000A               	tblrd		*-
 27807  012480  CFF5 F156          	movff	tablat,___lldiv@divisor+3
 27808  012484  ECA7  F0D1         	call	___lldiv	;wreg free
 27809  012488  C14F  F272         	movff	?___lldiv,__doprnt@tmpval
 27810  01248C  C150  F273         	movff	?___lldiv+1,__doprnt@tmpval+1
 27811  012490  C151  F274         	movff	?___lldiv+2,__doprnt@tmpval+2
 27812  012494  C152  F275         	movff	?___lldiv+3,__doprnt@tmpval+3
 27813                           
 27814                           ;doprnt.c: 1230: tmpval.vd %= 10;
 27815  012498  C272  F200         	movff	__doprnt@tmpval,___llmod@dividend
 27816  01249C  C273  F201         	movff	__doprnt@tmpval+1,___llmod@dividend+1
 27817  0124A0  C274  F202         	movff	__doprnt@tmpval+2,___llmod@dividend+2
 27818  0124A4  C275  F203         	movff	__doprnt@tmpval+3,___llmod@dividend+3
 27819  0124A8  0E0A               	movlw	10
 27820  0124AA  0102               	movlb	2	; () banked
 27821  0124AC  6F04               	movwf	___llmod@divisor& (0+255),b
 27822  0124AE  0E00               	movlw	0
 27823  0124B0  6F05               	movwf	(___llmod@divisor+1)& (0+255),b
 27824  0124B2  0E00               	movlw	0
 27825  0124B4  6F06               	movwf	(___llmod@divisor+2)& (0+255),b
 27826  0124B6  0E00               	movlw	0
 27827  0124B8  6F07               	movwf	(___llmod@divisor+3)& (0+255),b
 27828  0124BA  ECA2  F0D3         	call	___llmod	;wreg free
 27829  0124BE  C200  F272         	movff	?___llmod,__doprnt@tmpval
 27830  0124C2  C201  F273         	movff	?___llmod+1,__doprnt@tmpval+1
 27831  0124C6  C202  F274         	movff	?___llmod+2,__doprnt@tmpval+2
 27832  0124CA  C203  F275         	movff	?___llmod+3,__doprnt@tmpval+3
 27833                           
 27834                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 27835  0124CE  0102               	movlb	2	; () banked
 27836  0124D0  EE20 F002          	lfsr	2,2
 27837  0124D4  515B               	movf	__doprnt@pb& (0+255),w,b
 27838  0124D6  26D9               	addwf	fsr2l,f,c
 27839  0124D8  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27840  0124DA  22DA               	addwfc	fsr2h,f,c
 27841  0124DC  50DE               	movf	postinc2,w,c
 27842  0124DE  10DE               	iorwf	postinc2,w,c
 27843  0124E0  10DE               	iorwf	postinc2,w,c
 27844  0124E2  B4D8               	btfsc	status,2,c
 27845  0124E4  D014               	goto	l2210
 27846                           
 27847                           ; BSR set to: 2
 27848  0124E6  EE20 F002          	lfsr	2,2
 27849  0124EA  515B               	movf	__doprnt@pb& (0+255),w,b
 27850  0124EC  26D9               	addwf	fsr2l,f,c
 27851  0124EE  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27852  0124F0  22DA               	addwfc	fsr2h,f,c
 27853  0124F2  D801               	call	u34338
 27854  0124F4  D023               	goto	l2211
 27855  0124F6                     u34338:
 27856  0124F6  0005               	push	
 27857  0124F8  6EFA               	movwf	pclath,c
 27858  0124FA  50DE               	movf	postinc2,w,c
 27859  0124FC  6EFD               	movwf	tosl,c
 27860  0124FE  50DE               	movf	postinc2,w,c
 27861  012500  6EFE               	movwf	tosh,c
 27862  012502  50DE               	movf	postinc2,w,c
 27863  012504  6EFF               	movwf	tosu,c
 27864  012506  50FA               	movf	pclath,w,c
 27865  012508  5172               	movf	__doprnt@tmpval& (0+255),w,b
 27866  01250A  0F30               	addlw	48
 27867  01250C  0012               	return		;indir
 27868  01250E                     l2210:
 27869  01250E  0102               	movlb	2	; () banked
 27870  012510  5172               	movf	__doprnt@tmpval& (0+255),w,b
 27871  012512  0F30               	addlw	48
 27872  012514  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 27873  012518  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 27874  01251C  CFDE F261          	movff	postinc2,??__doprnt
 27875  012520  CFDD F262          	movff	postdec2,??__doprnt+1
 27876  012524  C261  FFD9         	movff	??__doprnt,fsr2l
 27877  012528  C262  FFDA         	movff	??__doprnt+1,fsr2h
 27878  01252C  6EDF               	movwf	indf2,c
 27879  01252E  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 27880  012532  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 27881  012536  2ADE               	incf	postinc2,f,c
 27882  012538  0E00               	movlw	0
 27883  01253A  22DD               	addwfc	postdec2,f,c
 27884  01253C                     l2211:
 27885                           
 27886                           ;doprnt.c: 1232: val %= dpowers[c];
 27887                           
 27888                           ; BSR set to: 2
 27889  01253C  C27A  F200         	movff	__doprnt@val,___llmod@dividend
 27890  012540  C27B  F201         	movff	__doprnt@val+1,___llmod@dividend+1
 27891  012544  C27C  F202         	movff	__doprnt@val+2,___llmod@dividend+2
 27892  012548  C27D  F203         	movff	__doprnt@val+3,___llmod@dividend+3
 27893  01254C  0102               	movlb	2	; () banked
 27894  01254E  5184               	movf	__doprnt@c& (0+255),w,b
 27895  012550  0D04               	mullw	4
 27896  012552  0E45               	movlw	low _dpowers
 27897  012554  24F3               	addwf	prodl,w,c
 27898  012556  6EF6               	movwf	tblptrl,c
 27899  012558  0ECE               	movlw	high _dpowers
 27900  01255A  20F4               	addwfc	prodh,w,c
 27901  01255C  6EF7               	movwf	tblptrh,c
 27902  01255E                     	if	1	;There are 3 active tblptr bytes
 27903  01255E  6AF8               	clrf	tblptru,c
 27904  012560  0E00               	movlw	low (__mediumconst shr (0+16))
 27905  012562  22F8               	addwfc	tblptru,f,c
 27906  012564                     	endif
 27907  012564  0009               	tblrd		*+
 27908  012566  CFF5 F204          	movff	tablat,___llmod@divisor
 27909  01256A  0009               	tblrd		*+
 27910  01256C  CFF5 F205          	movff	tablat,___llmod@divisor+1
 27911  012570  0009               	tblrd		*+
 27912  012572  CFF5 F206          	movff	tablat,___llmod@divisor+2
 27913  012576  000A               	tblrd		*-
 27914  012578  CFF5 F207          	movff	tablat,___llmod@divisor+3
 27915  01257C  ECA2  F0D3         	call	___llmod
 27916  012580  C200  F27A         	movff	?___llmod,__doprnt@val
 27917  012584  C201  F27B         	movff	?___llmod+1,__doprnt@val+1
 27918  012588  C202  F27C         	movff	?___llmod+2,__doprnt@val+2
 27919  01258C  C203  F27D         	movff	?___llmod+3,__doprnt@val+3
 27920  012590                     l2208:
 27921  012590  0102               	movlb	2	; () banked
 27922  012592  0784               	decf	__doprnt@c& (0+255),f,b
 27923  012594  2984               	incf	__doprnt@c& (0+255),w,b
 27924  012596  B4D8               	btfsc	status,2,c
 27925  012598  D038               	goto	l2213
 27926  01259A  D754               	goto	l2209
 27927  01259C                     
 27928                           ; BSR set to: 2
 27929                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 27930                           
 27931                           ; BSR set to: 2
 27932  01259C  EE20 F002          	lfsr	2,2
 27933  0125A0  515B               	movf	__doprnt@pb& (0+255),w,b
 27934  0125A2  26D9               	addwf	fsr2l,f,c
 27935  0125A4  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27936  0125A6  22DA               	addwfc	fsr2h,f,c
 27937  0125A8  50DE               	movf	postinc2,w,c
 27938  0125AA  10DE               	iorwf	postinc2,w,c
 27939  0125AC  10DE               	iorwf	postinc2,w,c
 27940  0125AE  B4D8               	btfsc	status,2,c
 27941  0125B0  D013               	goto	l2215
 27942                           
 27943                           ; BSR set to: 2
 27944  0125B2  EE20 F002          	lfsr	2,2
 27945  0125B6  515B               	movf	__doprnt@pb& (0+255),w,b
 27946  0125B8  26D9               	addwf	fsr2l,f,c
 27947  0125BA  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 27948  0125BC  22DA               	addwfc	fsr2h,f,c
 27949  0125BE  D801               	call	u34368
 27950  0125C0  D020               	goto	l2216
 27951  0125C2                     u34368:
 27952  0125C2  0005               	push	
 27953  0125C4  6EFA               	movwf	pclath,c
 27954  0125C6  50DE               	movf	postinc2,w,c
 27955  0125C8  6EFD               	movwf	tosl,c
 27956  0125CA  50DE               	movf	postinc2,w,c
 27957  0125CC  6EFE               	movwf	tosh,c
 27958  0125CE  50DE               	movf	postinc2,w,c
 27959  0125D0  6EFF               	movwf	tosu,c
 27960  0125D2  50FA               	movf	pclath,w,c
 27961  0125D4  0E30               	movlw	48
 27962  0125D6  0012               	return		;indir
 27963  0125D8                     l2215:
 27964  0125D8  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 27965  0125DC  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 27966  0125E0  CFDE F261          	movff	postinc2,??__doprnt
 27967  0125E4  CFDD F262          	movff	postdec2,??__doprnt+1
 27968  0125E8  C261  FFD9         	movff	??__doprnt,fsr2l
 27969  0125EC  C262  FFDA         	movff	??__doprnt+1,fsr2h
 27970  0125F0  0E30               	movlw	48
 27971  0125F2  6EDF               	movwf	indf2,c
 27972  0125F4  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 27973  0125F8  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 27974  0125FC  2ADE               	incf	postinc2,f,c
 27975  0125FE  0E00               	movlw	0
 27976  012600  22DD               	addwfc	postdec2,f,c
 27977  012602                     l2216:
 27978                           
 27979                           ;doprnt.c: 1237: prec--;
 27980  012602  0102               	movlb	2	; () banked
 27981  012604  0782               	decf	__doprnt@prec& (0+255),f,b
 27982  012606  A0D8               	btfss	status,0,c
 27983  012608  0783               	decf	(__doprnt@prec+1)& (0+255),f,b
 27984  01260A                     l2213:
 27985                           
 27986                           ; BSR set to: 2
 27987                           
 27988                           ; BSR set to: 2
 27989  01260A  5182               	movf	__doprnt@prec& (0+255),w,b
 27990  01260C  1183               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 27991  01260E  B4D8               	btfsc	status,2,c
 27992  012610  D2EE               	goto	u34740
 27993  012612  D7C4               	goto	l2214
 27994  012614                     l2151:
 27995                           
 27996                           ; BSR set to: 2
 27997                           ;doprnt.c: 1246: }
 27998                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 27999                           
 28000                           ; BSR set to: 2
 28001  012614  0EC0               	movlw	192
 28002  012616  1580               	andwf	__doprnt@flag& (0+255),w,b
 28003  012618  6F61               	movwf	??__doprnt& (0+255),b
 28004  01261A  0E00               	movlw	0
 28005  01261C  1581               	andwf	(__doprnt@flag+1)& (0+255),w,b
 28006  01261E  6F62               	movwf	(??__doprnt+1)& (0+255),b
 28007  012620  5161               	movf	??__doprnt& (0+255),w,b
 28008  012622  1162               	iorwf	(??__doprnt+1)& (0+255),w,b
 28009  012624  A4D8               	btfss	status,2,c
 28010  012626  D041               	goto	l2218
 28011                           
 28012                           ; BSR set to: 2
 28013                           ;doprnt.c: 1253: {
 28014                           ;doprnt.c: 1255: if(flag & 0x10)
 28015  012628  A980               	btfss	__doprnt@flag& (0+255),4,b
 28016  01262A  D019               	goto	l2219
 28017                           
 28018                           ; BSR set to: 2
 28019                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 28020  01262C  C25F  FFD9         	movff	__doprnt@ap,fsr2l
 28021  012630  C260  FFDA         	movff	__doprnt@ap+1,fsr2h
 28022  012634  CFDF F261          	movff	indf2,??__doprnt
 28023  012638  0E04               	movlw	4
 28024  01263A  26DE               	addwf	postinc2,f,c
 28025  01263C  CFDF F262          	movff	indf2,??__doprnt+1
 28026  012640  0E00               	movlw	0
 28027  012642  22DD               	addwfc	postdec2,f,c
 28028  012644  C261  FFD9         	movff	??__doprnt,fsr2l
 28029  012648  C262  FFDA         	movff	??__doprnt+1,fsr2h
 28030  01264C  CFDE F27A          	movff	postinc2,__doprnt@val
 28031  012650  CFDE F27B          	movff	postinc2,__doprnt@val+1
 28032  012654  CFDE F27C          	movff	postinc2,__doprnt@val+2
 28033  012658  CFDE F27D          	movff	postinc2,__doprnt@val+3
 28034  01265C  D019               	goto	l2220
 28035  01265E                     l2219:
 28036                           
 28037                           ; BSR set to: 2
 28038                           ;doprnt.c: 1257: else
 28039                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 28040                           
 28041                           ; BSR set to: 2
 28042  01265E  C25F  FFD9         	movff	__doprnt@ap,fsr2l
 28043  012662  C260  FFDA         	movff	__doprnt@ap+1,fsr2h
 28044  012666  CFDF F261          	movff	indf2,??__doprnt
 28045  01266A  0E02               	movlw	2
 28046  01266C  26DE               	addwf	postinc2,f,c
 28047  01266E  CFDF F262          	movff	indf2,??__doprnt+1
 28048  012672  0E00               	movlw	0
 28049  012674  22DD               	addwfc	postdec2,f,c
 28050  012676  C261  FFD9         	movff	??__doprnt,fsr2l
 28051  01267A  C262  FFDA         	movff	??__doprnt+1,fsr2h
 28052  01267E  CFDE F27A          	movff	postinc2,__doprnt@val
 28053  012682  CFDD F27B          	movff	postdec2,__doprnt@val+1
 28054  012686  0E00               	movlw	0
 28055  012688  BF7B               	btfsc	(__doprnt@val+1)& (0+255),7,b
 28056  01268A  0EFF               	movlw	-1
 28057  01268C  6F7C               	movwf	(__doprnt@val+2)& (0+255),b
 28058  01268E  6F7D               	movwf	(__doprnt@val+3)& (0+255),b
 28059  012690                     l2220:
 28060                           
 28061                           ; BSR set to: 2
 28062                           ;doprnt.c: 1261: if((long)val < 0) {
 28063                           
 28064                           ; BSR set to: 2
 28065  012690  AF7D               	btfss	(__doprnt@val+3)& (0+255),7,b
 28066  012692  D040               	goto	l2224
 28067                           
 28068                           ; BSR set to: 2
 28069                           ;doprnt.c: 1262: flag |= 0x03;
 28070  012694  0E03               	movlw	3
 28071  012696  1380               	iorwf	__doprnt@flag& (0+255),f,b
 28072                           
 28073                           ; BSR set to: 2
 28074                           ;doprnt.c: 1263: val = -val;
 28075  012698  1F7D               	comf	(__doprnt@val+3)& (0+255),f,b
 28076  01269A  1F7C               	comf	(__doprnt@val+2)& (0+255),f,b
 28077  01269C  1F7B               	comf	(__doprnt@val+1)& (0+255),f,b
 28078  01269E  6D7A               	negf	__doprnt@val& (0+255),b
 28079  0126A0  0E00               	movlw	0
 28080  0126A2  237B               	addwfc	(__doprnt@val+1)& (0+255),f,b
 28081  0126A4  237C               	addwfc	(__doprnt@val+2)& (0+255),f,b
 28082  0126A6  237D               	addwfc	(__doprnt@val+3)& (0+255),f,b
 28083                           
 28084                           ; BSR set to: 2
 28085                           ;doprnt.c: 1264: }
 28086                           ;doprnt.c: 1266: }
 28087  0126A8  D035               	goto	l2224
 28088  0126AA                     l2218:
 28089                           
 28090                           ; BSR set to: 2
 28091                           ;doprnt.c: 1268: else
 28092                           ;doprnt.c: 1273: {
 28093                           ;doprnt.c: 1281: if(flag & 0x10)
 28094  0126AA  A980               	btfss	__doprnt@flag& (0+255),4,b
 28095  0126AC  D019               	goto	l2223
 28096                           
 28097                           ; BSR set to: 2
 28098                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 28099  0126AE  C25F  FFD9         	movff	__doprnt@ap,fsr2l
 28100  0126B2  C260  FFDA         	movff	__doprnt@ap+1,fsr2h
 28101  0126B6  CFDF F261          	movff	indf2,??__doprnt
 28102  0126BA  0E04               	movlw	4
 28103  0126BC  26DE               	addwf	postinc2,f,c
 28104  0126BE  CFDF F262          	movff	indf2,??__doprnt+1
 28105  0126C2  0E00               	movlw	0
 28106  0126C4  22DD               	addwfc	postdec2,f,c
 28107  0126C6  C261  FFD9         	movff	??__doprnt,fsr2l
 28108  0126CA  C262  FFDA         	movff	??__doprnt+1,fsr2h
 28109  0126CE  CFDE F27A          	movff	postinc2,__doprnt@val
 28110  0126D2  CFDE F27B          	movff	postinc2,__doprnt@val+1
 28111  0126D6  CFDE F27C          	movff	postinc2,__doprnt@val+2
 28112  0126DA  CFDE F27D          	movff	postinc2,__doprnt@val+3
 28113  0126DE  D01A               	goto	l2224
 28114  0126E0                     l2223:
 28115                           
 28116                           ; BSR set to: 2
 28117                           ;doprnt.c: 1283: else
 28118                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 28119                           
 28120                           ; BSR set to: 2
 28121  0126E0  C25F  FFD9         	movff	__doprnt@ap,fsr2l
 28122  0126E4  C260  FFDA         	movff	__doprnt@ap+1,fsr2h
 28123  0126E8  CFDF F261          	movff	indf2,??__doprnt
 28124  0126EC  0E02               	movlw	2
 28125  0126EE  26DE               	addwf	postinc2,f,c
 28126  0126F0  CFDF F262          	movff	indf2,??__doprnt+1
 28127  0126F4  0E00               	movlw	0
 28128  0126F6  22DD               	addwfc	postdec2,f,c
 28129  0126F8  C261  FFD9         	movff	??__doprnt,fsr2l
 28130  0126FC  C262  FFDA         	movff	??__doprnt+1,fsr2h
 28131  012700  CFDE F263          	movff	postinc2,??__doprnt+2
 28132  012704  CFDD F264          	movff	postdec2,??__doprnt+3
 28133  012708  C263  F27A         	movff	??__doprnt+2,__doprnt@val
 28134  01270C  C264  F27B         	movff	??__doprnt+3,__doprnt@val+1
 28135  012710  6B7C               	clrf	(__doprnt@val+2)& (0+255),b
 28136  012712  6B7D               	clrf	(__doprnt@val+3)& (0+255),b
 28137  012714                     l2224:
 28138                           
 28139                           ; BSR set to: 2
 28140                           ;doprnt.c: 1287: }
 28141                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 28142                           
 28143                           ; BSR set to: 2
 28144                           
 28145                           ; BSR set to: 2
 28146  012714  5182               	movf	__doprnt@prec& (0+255),w,b
 28147  012716  1183               	iorwf	(__doprnt@prec+1)& (0+255),w,b
 28148  012718  A4D8               	btfss	status,2,c
 28149  01271A  D04B               	goto	l2226
 28150                           
 28151                           ; BSR set to: 2
 28152  01271C  517A               	movf	__doprnt@val& (0+255),w,b
 28153  01271E  117B               	iorwf	(__doprnt@val+1)& (0+255),w,b
 28154  012720  117C               	iorwf	(__doprnt@val+2)& (0+255),w,b
 28155  012722  117D               	iorwf	(__doprnt@val+3)& (0+255),w,b
 28156  012724  A4D8               	btfss	status,2,c
 28157  012726  D045               	goto	l2226
 28158                           
 28159                           ; BSR set to: 2
 28160                           ;doprnt.c: 1291: prec++;
 28161  012728  4B82               	infsnz	__doprnt@prec& (0+255),f,b
 28162  01272A  2B83               	incf	(__doprnt@prec+1)& (0+255),f,b
 28163                           
 28164                           ; BSR set to: 2
 28165                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 28166  01272C  D042               	goto	l2226
 28167  01272E                     
 28168                           ; BSR set to: 2
 28169                           ;doprnt.c: 1302: case 0xC0:
 28170                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 28171                           
 28172                           ; BSR set to: 2
 28173                           
 28174                           ; BSR set to: 2
 28175  01272E  0E01               	movlw	1
 28176  012730  6F84               	movwf	__doprnt@c& (0+255),b
 28177  012732                     l24377:
 28178                           
 28179                           ; BSR set to: 2
 28180  012732  0E0A               	movlw	10
 28181  012734  1984               	xorwf	__doprnt@c& (0+255),w,b
 28182  012736  B4D8               	btfsc	status,2,c
 28183  012738  D047               	goto	l2232
 28184                           
 28185                           ; BSR set to: 2
 28186                           ;doprnt.c: 1306: if(val < dpowers[c])
 28187                           
 28188                           ; BSR set to: 2
 28189                           
 28190                           ; BSR set to: 2
 28191  01273A  5184               	movf	__doprnt@c& (0+255),w,b
 28192  01273C  0D04               	mullw	4
 28193  01273E  0E45               	movlw	low _dpowers
 28194  012740  24F3               	addwf	prodl,w,c
 28195  012742  6EF6               	movwf	tblptrl,c
 28196  012744  0ECE               	movlw	high _dpowers
 28197  012746  20F4               	addwfc	prodh,w,c
 28198  012748  6EF7               	movwf	tblptrh,c
 28199  01274A                     	if	1	;There are 3 active tblptr bytes
 28200  01274A  6AF8               	clrf	tblptru,c
 28201  01274C  0E00               	movlw	low (__mediumconst shr (0+16))
 28202  01274E  22F8               	addwfc	tblptru,f,c
 28203  012750                     	endif
 28204  012750  0009               	tblrd		*+
 28205  012752  50F5               	movf	tablat,w,c
 28206  012754  5D7A               	subwf	__doprnt@val& (0+255),w,b
 28207  012756  0009               	tblrd		*+
 28208  012758  50F5               	movf	tablat,w,c
 28209  01275A  597B               	subwfb	(__doprnt@val+1)& (0+255),w,b
 28210  01275C  0009               	tblrd		*+
 28211  01275E  50F5               	movf	tablat,w,c
 28212  012760  597C               	subwfb	(__doprnt@val+2)& (0+255),w,b
 28213  012762  0009               	tblrd		*+
 28214  012764  50F5               	movf	tablat,w,c
 28215  012766  597D               	subwfb	(__doprnt@val+3)& (0+255),w,b
 28216  012768  A0D8               	btfss	status,0,c
 28217  01276A  D02E               	goto	l2232
 28218                           
 28219                           ; BSR set to: 2
 28220                           
 28221                           ; BSR set to: 2
 28222                           
 28223                           ; BSR set to: 2
 28224                           ;doprnt.c: 1307: break;
 28225  01276C  2B84               	incf	__doprnt@c& (0+255),f,b
 28226  01276E  D7E1               	goto	l24377
 28227  012770                     
 28228                           ; BSR set to: 2
 28229                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 28230                           
 28231                           ; BSR set to: 2
 28232  012770  0E01               	movlw	1
 28233  012772  6F84               	movwf	__doprnt@c& (0+255),b
 28234  012774                     l24391:
 28235                           
 28236                           ; BSR set to: 2
 28237  012774  0E08               	movlw	8
 28238  012776  1984               	xorwf	__doprnt@c& (0+255),w,b
 28239  012778  B4D8               	btfsc	status,2,c
 28240  01277A  D026               	goto	l2232
 28241                           
 28242                           ; BSR set to: 2
 28243                           ;doprnt.c: 1317: if(val < hexpowers[c])
 28244                           
 28245                           ; BSR set to: 2
 28246                           
 28247                           ; BSR set to: 2
 28248  01277C  5184               	movf	__doprnt@c& (0+255),w,b
 28249  01277E  0D04               	mullw	4
 28250  012780  0E6D               	movlw	low _hexpowers
 28251  012782  24F3               	addwf	prodl,w,c
 28252  012784  6EF6               	movwf	tblptrl,c
 28253  012786  0ECE               	movlw	high _hexpowers
 28254  012788  20F4               	addwfc	prodh,w,c
 28255  01278A  6EF7               	movwf	tblptrh,c
 28256  01278C                     	if	1	;There are 3 active tblptr bytes
 28257  01278C  6AF8               	clrf	tblptru,c
 28258  01278E  0E00               	movlw	low (__mediumconst shr (0+16))
 28259  012790  22F8               	addwfc	tblptru,f,c
 28260  012792                     	endif
 28261  012792  0009               	tblrd		*+
 28262  012794  50F5               	movf	tablat,w,c
 28263  012796  5D7A               	subwf	__doprnt@val& (0+255),w,b
 28264  012798  0009               	tblrd		*+
 28265  01279A  50F5               	movf	tablat,w,c
 28266  01279C  597B               	subwfb	(__doprnt@val+1)& (0+255),w,b
 28267  01279E  0009               	tblrd		*+
 28268  0127A0  50F5               	movf	tablat,w,c
 28269  0127A2  597C               	subwfb	(__doprnt@val+2)& (0+255),w,b
 28270  0127A4  0009               	tblrd		*+
 28271  0127A6  50F5               	movf	tablat,w,c
 28272  0127A8  597D               	subwfb	(__doprnt@val+3)& (0+255),w,b
 28273  0127AA  A0D8               	btfss	status,0,c
 28274  0127AC  D00D               	goto	l2232
 28275                           
 28276                           ; BSR set to: 2
 28277                           
 28278                           ; BSR set to: 2
 28279                           
 28280                           ; BSR set to: 2
 28281                           ;doprnt.c: 1318: break;
 28282  0127AE  2B84               	incf	__doprnt@c& (0+255),f,b
 28283  0127B0  D7E1               	goto	l24391
 28284  0127B2                     l2226:
 28285                           
 28286                           ; BSR set to: 2
 28287                           
 28288                           ; BSR set to: 2
 28289  0127B2  5180               	movf	__doprnt@flag& (0+255),w,b
 28290  0127B4  0BC0               	andlw	192
 28291                           
 28292                           ; Switch size 1, requested type "space"
 28293                           ; Number of cases is 3, Range of values is 0 to 192
 28294                           ; switch strategies available:
 28295                           ; Name         Instructions Cycles
 28296                           ; simple_byte           10     6 (average)
 28297                           ;	Chosen strategy is simple_byte
 28298  0127B6  0A00               	xorlw	0	; case 0
 28299  0127B8  B4D8               	btfsc	status,2,c
 28300  0127BA  D7B9               	goto	l2227
 28301  0127BC  0A80               	xorlw	128	; case 128
 28302  0127BE  B4D8               	btfsc	status,2,c
 28303  0127C0  D7D7               	goto	l2233
 28304  0127C2  0A40               	xorlw	64	; case 192
 28305  0127C4  B4D8               	btfsc	status,2,c
 28306  0127C6  D7B3               	goto	l2227
 28307  0127C8                     l2232:
 28308                           
 28309                           ; BSR set to: 2
 28310                           ;doprnt.c: 1339: if(c < prec)
 28311                           
 28312                           ; BSR set to: 2
 28313  0127C8  0E80               	movlw	128
 28314  0127CA  BF84               	btfsc	__doprnt@c& (0+255),7,b
 28315  0127CC  0E7F               	movlw	127
 28316  0127CE  6F61               	movwf	??__doprnt& (0+255),b
 28317  0127D0  5182               	movf	__doprnt@prec& (0+255),w,b
 28318  0127D2  5D84               	subwf	__doprnt@c& (0+255),w,b
 28319  0127D4  5183               	movf	(__doprnt@prec+1)& (0+255),w,b
 28320  0127D6  0A80               	xorlw	128
 28321  0127D8  5961               	subwfb	??__doprnt& (0+255),w,b
 28322  0127DA  B0D8               	btfsc	status,0,c
 28323  0127DC  D003               	goto	l2237
 28324                           
 28325                           ; BSR set to: 2
 28326                           ;doprnt.c: 1340: c = prec;
 28327  0127DE  C282  F284         	movff	__doprnt@prec,__doprnt@c
 28328  0127E2  D010               	goto	l2239
 28329  0127E4                     l2237:
 28330                           
 28331                           ; BSR set to: 2
 28332                           ;doprnt.c: 1341: else if(prec < c)
 28333                           
 28334                           ; BSR set to: 2
 28335  0127E4  5183               	movf	(__doprnt@prec+1)& (0+255),w,b
 28336  0127E6  0A80               	xorlw	128
 28337  0127E8  6F61               	movwf	??__doprnt& (0+255),b
 28338  0127EA  5184               	movf	__doprnt@c& (0+255),w,b
 28339  0127EC  5D82               	subwf	__doprnt@prec& (0+255),w,b
 28340  0127EE  0E80               	movlw	128
 28341  0127F0  BF84               	btfsc	__doprnt@c& (0+255),7,b
 28342  0127F2  0E7F               	movlw	127
 28343  0127F4  5961               	subwfb	??__doprnt& (0+255),w,b
 28344  0127F6  B0D8               	btfsc	status,0,c
 28345  0127F8  D005               	goto	l2239
 28346                           
 28347                           ; BSR set to: 2
 28348                           ;doprnt.c: 1342: prec = c;
 28349  0127FA  5184               	movf	__doprnt@c& (0+255),w,b
 28350  0127FC  6F82               	movwf	__doprnt@prec& (0+255),b
 28351  0127FE  6B83               	clrf	(__doprnt@prec+1)& (0+255),b
 28352  012800  BF82               	btfsc	__doprnt@prec& (0+255),7,b
 28353  012802  0783               	decf	(__doprnt@prec+1)& (0+255),f,b
 28354  012804                     l2239:
 28355                           
 28356                           ; BSR set to: 2
 28357                           ;doprnt.c: 1345: if(width && flag & 0x03)
 28358                           
 28359                           ; BSR set to: 2
 28360                           
 28361                           ; BSR set to: 2
 28362  012804  517E               	movf	__doprnt@width& (0+255),w,b
 28363  012806  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 28364  012808  B4D8               	btfsc	status,2,c
 28365  01280A  D00D               	goto	l2240
 28366                           
 28367                           ; BSR set to: 2
 28368  01280C  0E03               	movlw	3
 28369  01280E  1580               	andwf	__doprnt@flag& (0+255),w,b
 28370  012810  6F61               	movwf	??__doprnt& (0+255),b
 28371  012812  0E00               	movlw	0
 28372  012814  1581               	andwf	(__doprnt@flag+1)& (0+255),w,b
 28373  012816  6F62               	movwf	(??__doprnt+1)& (0+255),b
 28374  012818  5161               	movf	??__doprnt& (0+255),w,b
 28375  01281A  1162               	iorwf	(??__doprnt+1)& (0+255),w,b
 28376  01281C  B4D8               	btfsc	status,2,c
 28377  01281E  D003               	goto	l2240
 28378                           
 28379                           ; BSR set to: 2
 28380                           ;doprnt.c: 1346: width--;
 28381  012820  077E               	decf	__doprnt@width& (0+255),f,b
 28382  012822  A0D8               	btfss	status,0,c
 28383  012824  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 28384  012826                     l2240:
 28385                           
 28386                           ; BSR set to: 2
 28387                           ;doprnt.c: 1348: if(flag & 0x4000) {
 28388                           
 28389                           ; BSR set to: 2
 28390  012826  AD81               	btfss	(__doprnt@flag+1)& (0+255),6,b
 28391  012828  D013               	goto	l2243
 28392                           
 28393                           ; BSR set to: 2
 28394                           ;doprnt.c: 1349: if(width > prec)
 28395  01282A  517E               	movf	__doprnt@width& (0+255),w,b
 28396  01282C  5D82               	subwf	__doprnt@prec& (0+255),w,b
 28397  01282E  5183               	movf	(__doprnt@prec+1)& (0+255),w,b
 28398  012830  0A80               	xorlw	128
 28399  012832  6F61               	movwf	??__doprnt& (0+255),b
 28400  012834  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 28401  012836  0A80               	xorlw	128
 28402  012838  5961               	subwfb	??__doprnt& (0+255),w,b
 28403  01283A  B0D8               	btfsc	status,0,c
 28404  01283C  D005               	goto	l2242
 28405                           
 28406                           ; BSR set to: 2
 28407                           ;doprnt.c: 1350: width -= prec;
 28408  01283E  5182               	movf	__doprnt@prec& (0+255),w,b
 28409  012840  5F7E               	subwf	__doprnt@width& (0+255),f,b
 28410  012842  5183               	movf	(__doprnt@prec+1)& (0+255),w,b
 28411  012844  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 28412  012846  D004               	goto	l2243
 28413  012848                     l2242:
 28414                           
 28415                           ; BSR set to: 2
 28416                           ;doprnt.c: 1351: else
 28417                           ;doprnt.c: 1352: width = 0;
 28418                           
 28419                           ; BSR set to: 2
 28420  012848  0E00               	movlw	0
 28421  01284A  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 28422  01284C  0E00               	movlw	0
 28423  01284E  6F7E               	movwf	__doprnt@width& (0+255),b
 28424  012850                     l2243:
 28425                           
 28426                           ; BSR set to: 2
 28427                           ;doprnt.c: 1353: }
 28428                           ;doprnt.c: 1381: if(width > c)
 28429                           
 28430                           ; BSR set to: 2
 28431                           
 28432                           ; BSR set to: 2
 28433  012850  0E80               	movlw	128
 28434  012852  BF84               	btfsc	__doprnt@c& (0+255),7,b
 28435  012854  0E7F               	movlw	127
 28436  012856  6F61               	movwf	??__doprnt& (0+255),b
 28437  012858  517E               	movf	__doprnt@width& (0+255),w,b
 28438  01285A  5D84               	subwf	__doprnt@c& (0+255),w,b
 28439  01285C  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 28440  01285E  0A80               	xorlw	128
 28441  012860  5961               	subwfb	??__doprnt& (0+255),w,b
 28442  012862  B0D8               	btfsc	status,0,c
 28443  012864  D007               	goto	l2244
 28444                           
 28445                           ; BSR set to: 2
 28446                           ;doprnt.c: 1382: width -= c;
 28447  012866  5184               	movf	__doprnt@c& (0+255),w,b
 28448  012868  5F7E               	subwf	__doprnt@width& (0+255),f,b
 28449  01286A  0E00               	movlw	0
 28450  01286C  BF84               	btfsc	__doprnt@c& (0+255),7,b
 28451  01286E  0EFF               	movlw	255
 28452  012870  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 28453  012872  D004               	goto	l2245
 28454  012874                     l2244:
 28455                           
 28456                           ; BSR set to: 2
 28457                           ;doprnt.c: 1383: else
 28458                           ;doprnt.c: 1384: width = 0;
 28459                           
 28460                           ; BSR set to: 2
 28461  012874  0E00               	movlw	0
 28462  012876  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 28463  012878  0E00               	movlw	0
 28464  01287A  6F7E               	movwf	__doprnt@width& (0+255),b
 28465  01287C                     l2245:
 28466                           
 28467                           ; BSR set to: 2
 28468                           ;doprnt.c: 1387: if(flag & 0x04) {
 28469                           
 28470                           ; BSR set to: 2
 28471  01287C  A580               	btfss	__doprnt@flag& (0+255),2,b
 28472  01287E  D07A               	goto	l2246
 28473                           
 28474                           ; BSR set to: 2
 28475                           ;doprnt.c: 1392: if(flag & 0x03)
 28476  012880  0E03               	movlw	3
 28477  012882  1580               	andwf	__doprnt@flag& (0+255),w,b
 28478  012884  6F61               	movwf	??__doprnt& (0+255),b
 28479  012886  0E00               	movlw	0
 28480  012888  1581               	andwf	(__doprnt@flag+1)& (0+255),w,b
 28481  01288A  6F62               	movwf	(??__doprnt+1)& (0+255),b
 28482  01288C  5161               	movf	??__doprnt& (0+255),w,b
 28483  01288E  1162               	iorwf	(??__doprnt+1)& (0+255),w,b
 28484  012890  B4D8               	btfsc	status,2,c
 28485  012892  D033               	goto	l2249
 28486                           
 28487                           ; BSR set to: 2
 28488                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 28489  012894  EE20 F002          	lfsr	2,2
 28490  012898  515B               	movf	__doprnt@pb& (0+255),w,b
 28491  01289A  26D9               	addwf	fsr2l,f,c
 28492  01289C  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 28493  01289E  22DA               	addwfc	fsr2h,f,c
 28494  0128A0  50DE               	movf	postinc2,w,c
 28495  0128A2  10DE               	iorwf	postinc2,w,c
 28496  0128A4  10DE               	iorwf	postinc2,w,c
 28497  0128A6  B4D8               	btfsc	status,2,c
 28498  0128A8  D013               	goto	l2248
 28499                           
 28500                           ; BSR set to: 2
 28501  0128AA  EE20 F002          	lfsr	2,2
 28502  0128AE  515B               	movf	__doprnt@pb& (0+255),w,b
 28503  0128B0  26D9               	addwf	fsr2l,f,c
 28504  0128B2  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 28505  0128B4  22DA               	addwfc	fsr2h,f,c
 28506  0128B6  D801               	call	u34608
 28507  0128B8  D020               	goto	l2249
 28508  0128BA                     u34608:
 28509  0128BA  0005               	push	
 28510  0128BC  6EFA               	movwf	pclath,c
 28511  0128BE  50DE               	movf	postinc2,w,c
 28512  0128C0  6EFD               	movwf	tosl,c
 28513  0128C2  50DE               	movf	postinc2,w,c
 28514  0128C4  6EFE               	movwf	tosh,c
 28515  0128C6  50DE               	movf	postinc2,w,c
 28516  0128C8  6EFF               	movwf	tosu,c
 28517  0128CA  50FA               	movf	pclath,w,c
 28518  0128CC  0E2D               	movlw	45
 28519  0128CE  0012               	return		;indir
 28520  0128D0                     l2248:
 28521  0128D0  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 28522  0128D4  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 28523  0128D8  CFDE F261          	movff	postinc2,??__doprnt
 28524  0128DC  CFDD F262          	movff	postdec2,??__doprnt+1
 28525  0128E0  C261  FFD9         	movff	??__doprnt,fsr2l
 28526  0128E4  C262  FFDA         	movff	??__doprnt+1,fsr2h
 28527  0128E8  0E2D               	movlw	45
 28528  0128EA  6EDF               	movwf	indf2,c
 28529  0128EC  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 28530  0128F0  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 28531  0128F4  2ADE               	incf	postinc2,f,c
 28532  0128F6  0E00               	movlw	0
 28533  0128F8  22DD               	addwfc	postdec2,f,c
 28534  0128FA                     l2249:
 28535                           
 28536                           ;doprnt.c: 1415: if(width)
 28537  0128FA  0102               	movlb	2	; () banked
 28538  0128FC  517E               	movf	__doprnt@width& (0+255),w,b
 28539  0128FE  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 28540  012900  B4D8               	btfsc	status,2,c
 28541  012902  D16C               	goto	l2272
 28542                           
 28543                           ; BSR set to: 2
 28544                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 28545                           
 28546                           ; BSR set to: 2
 28547                           
 28548                           ;doprnt.c: 1416: do
 28549  012904  EE20 F002          	lfsr	2,2
 28550  012908  515B               	movf	__doprnt@pb& (0+255),w,b
 28551  01290A  26D9               	addwf	fsr2l,f,c
 28552  01290C  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 28553  01290E  22DA               	addwfc	fsr2h,f,c
 28554  012910  50DE               	movf	postinc2,w,c
 28555  012912  10DE               	iorwf	postinc2,w,c
 28556  012914  10DE               	iorwf	postinc2,w,c
 28557  012916  B4D8               	btfsc	status,2,c
 28558  012918  D013               	goto	l2252
 28559                           
 28560                           ; BSR set to: 2
 28561  01291A  EE20 F002          	lfsr	2,2
 28562  01291E  515B               	movf	__doprnt@pb& (0+255),w,b
 28563  012920  26D9               	addwf	fsr2l,f,c
 28564  012922  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 28565  012924  22DA               	addwfc	fsr2h,f,c
 28566  012926  D801               	call	u34638
 28567  012928  D020               	goto	l2253
 28568  01292A                     u34638:
 28569  01292A  0005               	push	
 28570  01292C  6EFA               	movwf	pclath,c
 28571  01292E  50DE               	movf	postinc2,w,c
 28572  012930  6EFD               	movwf	tosl,c
 28573  012932  50DE               	movf	postinc2,w,c
 28574  012934  6EFE               	movwf	tosh,c
 28575  012936  50DE               	movf	postinc2,w,c
 28576  012938  6EFF               	movwf	tosu,c
 28577  01293A  50FA               	movf	pclath,w,c
 28578  01293C  0E30               	movlw	48
 28579  01293E  0012               	return		;indir
 28580  012940                     l2252:
 28581  012940  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 28582  012944  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 28583  012948  CFDE F261          	movff	postinc2,??__doprnt
 28584  01294C  CFDD F262          	movff	postdec2,??__doprnt+1
 28585  012950  C261  FFD9         	movff	??__doprnt,fsr2l
 28586  012954  C262  FFDA         	movff	??__doprnt+1,fsr2h
 28587  012958  0E30               	movlw	48
 28588  01295A  6EDF               	movwf	indf2,c
 28589  01295C  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 28590  012960  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 28591  012964  2ADE               	incf	postinc2,f,c
 28592  012966  0E00               	movlw	0
 28593  012968  22DD               	addwfc	postdec2,f,c
 28594  01296A                     l2253:
 28595                           
 28596                           ;doprnt.c: 1418: while(--width);
 28597  01296A  0102               	movlb	2	; () banked
 28598  01296C  077E               	decf	__doprnt@width& (0+255),f,b
 28599  01296E  A0D8               	btfss	status,0,c
 28600  012970  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 28601  012972  D7C4               	goto	L33
 28602  012974                     l2246:
 28603                           
 28604                           ; BSR set to: 2
 28605                           ;doprnt.c: 1422: {
 28606                           ;doprnt.c: 1424: if(width
 28607                           ;doprnt.c: 1428: )
 28608                           
 28609                           ; BSR set to: 2
 28610  012974  517E               	movf	__doprnt@width& (0+255),w,b
 28611  012976  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 28612  012978  B4D8               	btfsc	status,2,c
 28613  01297A  D03B               	goto	u34680
 28614  01297C                     u34650:
 28615                           
 28616                           ; BSR set to: 2
 28617                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 28618                           
 28619                           ; BSR set to: 2
 28620                           
 28621                           ;doprnt.c: 1429: do
 28622  01297C  EE20 F002          	lfsr	2,2
 28623  012980  515B               	movf	__doprnt@pb& (0+255),w,b
 28624  012982  26D9               	addwf	fsr2l,f,c
 28625  012984  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 28626  012986  22DA               	addwfc	fsr2h,f,c
 28627  012988  50DE               	movf	postinc2,w,c
 28628  01298A  10DE               	iorwf	postinc2,w,c
 28629  01298C  10DE               	iorwf	postinc2,w,c
 28630  01298E  B4D8               	btfsc	status,2,c
 28631  012990  D013               	goto	l2258
 28632                           
 28633                           ; BSR set to: 2
 28634  012992  EE20 F002          	lfsr	2,2
 28635  012996  515B               	movf	__doprnt@pb& (0+255),w,b
 28636  012998  26D9               	addwf	fsr2l,f,c
 28637  01299A  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 28638  01299C  22DA               	addwfc	fsr2h,f,c
 28639  01299E  D801               	call	u34678
 28640  0129A0  D020               	goto	l2259
 28641  0129A2                     u34678:
 28642  0129A2  0005               	push	
 28643  0129A4  6EFA               	movwf	pclath,c
 28644  0129A6  50DE               	movf	postinc2,w,c
 28645  0129A8  6EFD               	movwf	tosl,c
 28646  0129AA  50DE               	movf	postinc2,w,c
 28647  0129AC  6EFE               	movwf	tosh,c
 28648  0129AE  50DE               	movf	postinc2,w,c
 28649  0129B0  6EFF               	movwf	tosu,c
 28650  0129B2  50FA               	movf	pclath,w,c
 28651  0129B4  0E20               	movlw	32
 28652  0129B6  0012               	return		;indir
 28653  0129B8                     l2258:
 28654  0129B8  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 28655  0129BC  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 28656  0129C0  CFDE F261          	movff	postinc2,??__doprnt
 28657  0129C4  CFDD F262          	movff	postdec2,??__doprnt+1
 28658  0129C8  C261  FFD9         	movff	??__doprnt,fsr2l
 28659  0129CC  C262  FFDA         	movff	??__doprnt+1,fsr2h
 28660  0129D0  0E20               	movlw	32
 28661  0129D2  6EDF               	movwf	indf2,c
 28662  0129D4  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 28663  0129D8  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 28664  0129DC  2ADE               	incf	postinc2,f,c
 28665  0129DE  0E00               	movlw	0
 28666  0129E0  22DD               	addwfc	postdec2,f,c
 28667  0129E2                     l2259:
 28668                           
 28669                           ;doprnt.c: 1431: while(--width);
 28670  0129E2  0102               	movlb	2	; () banked
 28671  0129E4  077E               	decf	__doprnt@width& (0+255),f,b
 28672  0129E6  A0D8               	btfss	status,0,c
 28673  0129E8  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 28674  0129EA  517E               	movf	__doprnt@width& (0+255),w,b
 28675  0129EC  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 28676  0129EE  A4D8               	btfss	status,2,c
 28677  0129F0  D7C5               	goto	u34650
 28678  0129F2                     u34680:
 28679                           
 28680                           ; BSR set to: 2
 28681                           ;doprnt.c: 1438: if(flag & 0x03)
 28682                           
 28683                           ; BSR set to: 2
 28684                           
 28685                           ; BSR set to: 2
 28686  0129F2  0E03               	movlw	3
 28687  0129F4  1580               	andwf	__doprnt@flag& (0+255),w,b
 28688  0129F6  6F61               	movwf	??__doprnt& (0+255),b
 28689  0129F8  0E00               	movlw	0
 28690  0129FA  1581               	andwf	(__doprnt@flag+1)& (0+255),w,b
 28691  0129FC  6F62               	movwf	(??__doprnt+1)& (0+255),b
 28692  0129FE  5161               	movf	??__doprnt& (0+255),w,b
 28693  012A00  1162               	iorwf	(??__doprnt+1)& (0+255),w,b
 28694  012A02  B4D8               	btfsc	status,2,c
 28695  012A04  D0EB               	goto	l2272
 28696                           
 28697                           ; BSR set to: 2
 28698                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 28699  012A06  EE20 F002          	lfsr	2,2
 28700  012A0A  515B               	movf	__doprnt@pb& (0+255),w,b
 28701  012A0C  26D9               	addwf	fsr2l,f,c
 28702  012A0E  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 28703  012A10  22DA               	addwfc	fsr2h,f,c
 28704  012A12  50DE               	movf	postinc2,w,c
 28705  012A14  10DE               	iorwf	postinc2,w,c
 28706  012A16  10DE               	iorwf	postinc2,w,c
 28707  012A18  B4D8               	btfsc	status,2,c
 28708  012A1A  D013               	goto	l2262
 28709                           
 28710                           ; BSR set to: 2
 28711  012A1C  EE20 F002          	lfsr	2,2
 28712  012A20  515B               	movf	__doprnt@pb& (0+255),w,b
 28713  012A22  26D9               	addwf	fsr2l,f,c
 28714  012A24  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 28715  012A26  22DA               	addwfc	fsr2h,f,c
 28716  012A28  D801               	call	u34718
 28717  012A2A  D0D8               	goto	l2272
 28718  012A2C                     u34718:
 28719  012A2C  0005               	push	
 28720  012A2E  6EFA               	movwf	pclath,c
 28721  012A30  50DE               	movf	postinc2,w,c
 28722  012A32  6EFD               	movwf	tosl,c
 28723  012A34  50DE               	movf	postinc2,w,c
 28724  012A36  6EFE               	movwf	tosh,c
 28725  012A38  50DE               	movf	postinc2,w,c
 28726  012A3A  6EFF               	movwf	tosu,c
 28727  012A3C  50FA               	movf	pclath,w,c
 28728  012A3E  0E2D               	movlw	45
 28729  012A40  0012               	return		;indir
 28730  012A42                     l2262:
 28731  012A42  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 28732  012A46  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 28733  012A4A  CFDE F261          	movff	postinc2,??__doprnt
 28734  012A4E  CFDD F262          	movff	postdec2,??__doprnt+1
 28735  012A52  C261  FFD9         	movff	??__doprnt,fsr2l
 28736  012A56  C262  FFDA         	movff	??__doprnt+1,fsr2h
 28737  012A5A  0E2D               	movlw	45
 28738  012A5C  6EDF               	movwf	indf2,c
 28739  012A5E  D0B7               	goto	l24497
 28740  012A60                     
 28741                           ;doprnt.c: 1486: case 0xC0:
 28742                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 28743  012A60  C282  F261         	movff	__doprnt@prec,??__doprnt
 28744  012A64  C283  F262         	movff	__doprnt@prec+1,??__doprnt+1
 28745  012A68  0102               	movlb	2	; () banked
 28746  012A6A  90D8               	bcf	status,0,c
 28747  012A6C  3761               	rlcf	??__doprnt& (0+255),f,b
 28748  012A6E  3762               	rlcf	(??__doprnt+1)& (0+255),f,b
 28749  012A70  90D8               	bcf	status,0,c
 28750  012A72  3761               	rlcf	??__doprnt& (0+255),f,b
 28751  012A74  3762               	rlcf	(??__doprnt+1)& (0+255),f,b
 28752  012A76  0E45               	movlw	low _dpowers
 28753  012A78  2561               	addwf	??__doprnt& (0+255),w,b
 28754  012A7A  6EF6               	movwf	tblptrl,c
 28755  012A7C  0ECE               	movlw	high _dpowers
 28756  012A7E  2162               	addwfc	(??__doprnt+1)& (0+255),w,b
 28757  012A80  6EF7               	movwf	tblptrh,c
 28758  012A82                     	if	1	;There are 3 active tblptr bytes
 28759  012A82  6AF8               	clrf	tblptru,c
 28760  012A84  0E00               	movlw	low (__mediumconst shr (0+16))
 28761  012A86  22F8               	addwfc	tblptru,f,c
 28762  012A88                     	endif
 28763  012A88  0009               	tblrd		*+
 28764  012A8A  CFF5 F153          	movff	tablat,___lldiv@divisor
 28765  012A8E  0009               	tblrd		*+
 28766  012A90  CFF5 F154          	movff	tablat,___lldiv@divisor+1
 28767  012A94  0009               	tblrd		*+
 28768  012A96  CFF5 F155          	movff	tablat,___lldiv@divisor+2
 28769  012A9A  000A               	tblrd		*-
 28770  012A9C  CFF5 F156          	movff	tablat,___lldiv@divisor+3
 28771  012AA0  C27A  F14F         	movff	__doprnt@val,___lldiv@dividend
 28772  012AA4  C27B  F150         	movff	__doprnt@val+1,___lldiv@dividend+1
 28773  012AA8  C27C  F151         	movff	__doprnt@val+2,___lldiv@dividend+2
 28774  012AAC  C27D  F152         	movff	__doprnt@val+3,___lldiv@dividend+3
 28775  012AB0  ECA7  F0D1         	call	___lldiv
 28776  012AB4  C14F  F200         	movff	?___lldiv,___llmod@dividend
 28777  012AB8  C150  F201         	movff	?___lldiv+1,___llmod@dividend+1
 28778  012ABC  C151  F202         	movff	?___lldiv+2,___llmod@dividend+2
 28779  012AC0  C152  F203         	movff	?___lldiv+3,___llmod@dividend+3
 28780  012AC4  0E0A               	movlw	10
 28781  012AC6  0102               	movlb	2	; () banked
 28782  012AC8  6F04               	movwf	___llmod@divisor& (0+255),b
 28783  012ACA  0E00               	movlw	0
 28784  012ACC  6F05               	movwf	(___llmod@divisor+1)& (0+255),b
 28785  012ACE  0E00               	movlw	0
 28786  012AD0  6F06               	movwf	(___llmod@divisor+2)& (0+255),b
 28787  012AD2  0E00               	movlw	0
 28788  012AD4  6F07               	movwf	(___llmod@divisor+3)& (0+255),b
 28789  012AD6  ECA2  F0D3         	call	___llmod	;wreg free
 28790  012ADA  0102               	movlb	2	; () banked
 28791  012ADC  5100               	movf	?___llmod& (0+255),w,b
 28792  012ADE  0F30               	addlw	48
 28793  012AE0  6F84               	movwf	__doprnt@c& (0+255),b
 28794                           
 28795                           ;doprnt.c: 1491: break;
 28796  012AE2  D049               	goto	l2269
 28797  012AE4                     
 28798                           ; BSR set to: 2
 28799                           ;doprnt.c: 1499: {
 28800                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 28801                           
 28802                           ; BSR set to: 2
 28803  012AE4  C27A  F14F         	movff	__doprnt@val,___lldiv@dividend
 28804  012AE8  C27B  F150         	movff	__doprnt@val+1,___lldiv@dividend+1
 28805  012AEC  C27C  F151         	movff	__doprnt@val+2,___lldiv@dividend+2
 28806  012AF0  C27D  F152         	movff	__doprnt@val+3,___lldiv@dividend+3
 28807  012AF4  C282  F261         	movff	__doprnt@prec,??__doprnt
 28808  012AF8  C283  F262         	movff	__doprnt@prec+1,??__doprnt+1
 28809  012AFC  90D8               	bcf	status,0,c
 28810  012AFE  3761               	rlcf	??__doprnt& (0+255),f,b
 28811  012B00  3762               	rlcf	(??__doprnt+1)& (0+255),f,b
 28812  012B02  90D8               	bcf	status,0,c
 28813  012B04  3761               	rlcf	??__doprnt& (0+255),f,b
 28814  012B06  3762               	rlcf	(??__doprnt+1)& (0+255),f,b
 28815  012B08  0E6D               	movlw	low _hexpowers
 28816  012B0A  2561               	addwf	??__doprnt& (0+255),w,b
 28817  012B0C  6EF6               	movwf	tblptrl,c
 28818  012B0E  0ECE               	movlw	high _hexpowers
 28819  012B10  2162               	addwfc	(??__doprnt+1)& (0+255),w,b
 28820  012B12  6EF7               	movwf	tblptrh,c
 28821  012B14                     	if	1	;There are 3 active tblptr bytes
 28822  012B14  6AF8               	clrf	tblptru,c
 28823  012B16  0E00               	movlw	low (__mediumconst shr (0+16))
 28824  012B18  22F8               	addwfc	tblptru,f,c
 28825  012B1A                     	endif
 28826  012B1A  0009               	tblrd		*+
 28827  012B1C  CFF5 F153          	movff	tablat,___lldiv@divisor
 28828  012B20  0009               	tblrd		*+
 28829  012B22  CFF5 F154          	movff	tablat,___lldiv@divisor+1
 28830  012B26  0009               	tblrd		*+
 28831  012B28  CFF5 F155          	movff	tablat,___lldiv@divisor+2
 28832  012B2C  000A               	tblrd		*-
 28833  012B2E  CFF5 F156          	movff	tablat,___lldiv@divisor+3
 28834  012B32  ECA7  F0D1         	call	___lldiv	;wreg free
 28835  012B36  0101               	movlb	1	; () banked
 28836  012B38  514F               	movf	?___lldiv& (0+255),w,b
 28837  012B3A  0B0F               	andlw	15
 28838  012B3C  0102               	movlb	2	; () banked
 28839  012B3E  6F6B               	movwf	__doprnt@idx& (0+255),b
 28840                           
 28841                           ; BSR set to: 2
 28842                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 28843  012B40  516B               	movf	__doprnt@idx& (0+255),w,b
 28844  012B42  0D01               	mullw	1
 28845  012B44  0E38               	movlw	low STR_215
 28846  012B46  24F3               	addwf	prodl,w,c
 28847  012B48  6EF6               	movwf	tblptrl,c
 28848  012B4A  0EFC               	movlw	high STR_215
 28849  012B4C  20F4               	addwfc	prodh,w,c
 28850  012B4E  6EF7               	movwf	tblptrh,c
 28851  012B50                     	if	1	;There are 3 active tblptr bytes
 28852  012B50  6AF8               	clrf	tblptru,c
 28853  012B52  0E00               	movlw	low (__mediumconst shr (0+16))
 28854  012B54  22F8               	addwfc	tblptru,f,c
 28855  012B56                     	endif
 28856  012B56  0008               	tblrd		*
 28857  012B58  CFF5 F284          	movff	tablat,__doprnt@c
 28858                           
 28859                           ; BSR set to: 2
 28860                           ;doprnt.c: 1523: }
 28861                           
 28862                           ;doprnt.c: 1508: }
 28863                           ;doprnt.c: 1510: break;
 28864  012B5C  D00C               	goto	l2269
 28865  012B5E                     l24489:
 28866  012B5E  0102               	movlb	2	; () banked
 28867  012B60  5180               	movf	__doprnt@flag& (0+255),w,b
 28868  012B62  0BC0               	andlw	192
 28869                           
 28870                           ; Switch size 1, requested type "space"
 28871                           ; Number of cases is 3, Range of values is 0 to 192
 28872                           ; switch strategies available:
 28873                           ; Name         Instructions Cycles
 28874                           ; simple_byte           10     6 (average)
 28875                           ;	Chosen strategy is simple_byte
 28876  012B64  0A00               	xorlw	0	; case 0
 28877  012B66  B4D8               	btfsc	status,2,c
 28878  012B68  D77B               	goto	l2267
 28879  012B6A  0A80               	xorlw	128	; case 128
 28880  012B6C  B4D8               	btfsc	status,2,c
 28881  012B6E  D7BA               	goto	l2270
 28882  012B70  0A40               	xorlw	64	; case 192
 28883  012B72  B4D8               	btfsc	status,2,c
 28884  012B74  D775               	goto	l2267
 28885  012B76                     l2269:
 28886                           
 28887                           ; BSR set to: 2
 28888                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 28889                           
 28890                           ; BSR set to: 2
 28891  012B76  EE20 F002          	lfsr	2,2
 28892  012B7A  515B               	movf	__doprnt@pb& (0+255),w,b
 28893  012B7C  26D9               	addwf	fsr2l,f,c
 28894  012B7E  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 28895  012B80  22DA               	addwfc	fsr2h,f,c
 28896  012B82  50DE               	movf	postinc2,w,c
 28897  012B84  10DE               	iorwf	postinc2,w,c
 28898  012B86  10DE               	iorwf	postinc2,w,c
 28899  012B88  B4D8               	btfsc	status,2,c
 28900  012B8A  D013               	goto	l2271
 28901                           
 28902                           ; BSR set to: 2
 28903  012B8C  EE20 F002          	lfsr	2,2
 28904  012B90  515B               	movf	__doprnt@pb& (0+255),w,b
 28905  012B92  26D9               	addwf	fsr2l,f,c
 28906  012B94  515C               	movf	(__doprnt@pb+1)& (0+255),w,b
 28907  012B96  22DA               	addwfc	fsr2h,f,c
 28908  012B98  D801               	call	u34738
 28909  012B9A  D020               	goto	l2272
 28910  012B9C                     u34738:
 28911  012B9C  0005               	push	
 28912  012B9E  6EFA               	movwf	pclath,c
 28913  012BA0  50DE               	movf	postinc2,w,c
 28914  012BA2  6EFD               	movwf	tosl,c
 28915  012BA4  50DE               	movf	postinc2,w,c
 28916  012BA6  6EFE               	movwf	tosh,c
 28917  012BA8  50DE               	movf	postinc2,w,c
 28918  012BAA  6EFF               	movwf	tosu,c
 28919  012BAC  50FA               	movf	pclath,w,c
 28920  012BAE  5184               	movf	__doprnt@c& (0+255),w,b
 28921  012BB0  0012               	return		;indir
 28922  012BB2                     l2271:
 28923  012BB2  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 28924  012BB6  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 28925  012BBA  CFDE F261          	movff	postinc2,??__doprnt
 28926  012BBE  CFDD F262          	movff	postdec2,??__doprnt+1
 28927  012BC2  C261  FFD9         	movff	??__doprnt,fsr2l
 28928  012BC6  C262  FFDA         	movff	??__doprnt+1,fsr2h
 28929  012BCA  C284  FFDF         	movff	__doprnt@c,indf2
 28930  012BCE                     l24497:
 28931  012BCE  C25B  FFD9         	movff	__doprnt@pb,fsr2l
 28932  012BD2  C25C  FFDA         	movff	__doprnt@pb+1,fsr2h
 28933  012BD6  2ADE               	incf	postinc2,f,c
 28934  012BD8  0E00               	movlw	0
 28935  012BDA  22DD               	addwfc	postdec2,f,c
 28936  012BDC                     l2272:
 28937  012BDC  0102               	movlb	2	; () banked
 28938  012BDE  0782               	decf	__doprnt@prec& (0+255),f,b
 28939  012BE0  A0D8               	btfss	status,0,c
 28940  012BE2  0783               	decf	(__doprnt@prec+1)& (0+255),f,b
 28941  012BE4  2982               	incf	__doprnt@prec& (0+255),w,b
 28942  012BE6  E1BB               	bnz	l24489
 28943  012BE8  2983               	incf	(__doprnt@prec+1)& (0+255),w,b
 28944  012BEA  A4D8               	btfss	status,2,c
 28945  012BEC  D7B8               	goto	l2266
 28946  012BEE                     u34740:
 28947                           
 28948                           ; BSR set to: 2
 28949                           
 28950                           ; BSR set to: 2
 28951  012BEE  0102               	movlb	2	; () banked
 28952  012BF0  515D               	movf	__doprnt@f& (0+255),w,b
 28953  012BF2  6F61               	movwf	??__doprnt& (0+255),b
 28954  012BF4  515E               	movf	(__doprnt@f+1)& (0+255),w,b
 28955  012BF6  6F62               	movwf	(??__doprnt+1)& (0+255),b
 28956  012BF8  4B5D               	infsnz	__doprnt@f& (0+255),f,b
 28957  012BFA  2B5E               	incf	(__doprnt@f+1)& (0+255),f,b
 28958  012BFC  C261  FFF6         	movff	??__doprnt,tblptrl
 28959  012C00  C262  FFF7         	movff	??__doprnt+1,tblptrh
 28960  012C04  0E00               	movlw	low (__mediumconst shr (0+16))
 28961  012C06  6EF8               	movwf	tblptru,c
 28962  012C08  0E0D               	movlw	(high __ramtop+-1)
 28963  012C0A  64F7               	cpfsgt	tblptrh,c
 28964  012C0C  D003               	bra	u34757
 28965  012C0E  0008               	tblrd		*
 28966  012C10  50F5               	movf	tablat,w,c
 28967  012C12  D005               	bra	u34750
 28968  012C14                     u34757:
 28969  012C14  CFF6 FFE9          	movff	tblptrl,fsr0l
 28970  012C18  CFF7 FFEA          	movff	tblptrh,fsr0h
 28971  012C1C  50EF               	movf	indf0,w,c
 28972  012C1E                     u34750:
 28973  012C1E  0102               	movlb	2	; () banked
 28974  012C20  6F84               	movwf	__doprnt@c& (0+255),b
 28975  012C22  5184               	movf	__doprnt@c& (0+255),w,b
 28976  012C24  A4D8               	btfss	status,2,c
 28977  012C26  EF88  F08B         	goto	l2100
 28978  012C2A                     u34760:
 28979                           
 28980                           ; BSR set to: 2
 28981                           ;doprnt.c: 1540: return 0;
 28982                           
 28983                           ; BSR set to: 2
 28984                           
 28985                           ;doprnt.c: 1525: }
 28986                           ;doprnt.c: 1533: }
 28987                           ;doprnt.c: 1535: alldone:
 28988                           
 28989                           ; BSR set to: 2
 28990  012C2A  0E00               	movlw	0
 28991  012C2C  6F5C               	movwf	(?__doprnt+1)& (0+255),b
 28992  012C2E  0E00               	movlw	0
 28993  012C30  6F5B               	movwf	?__doprnt& (0+255),b
 28994  012C32  0012               	return	
 28995  012C34                     __end_of__doprnt:
 28996                           	opt stack 0
 28997                           tosu	equ	0xFFF
 28998                           tosh	equ	0xFFE
 28999                           tosl	equ	0xFFD
 29000                           pclath	equ	0xFFA
 29001                           tblptru	equ	0xFF8
 29002                           tblptrh	equ	0xFF7
 29003                           tblptrl	equ	0xFF6
 29004                           tablat	equ	0xFF5
 29005                           prodh	equ	0xFF4
 29006                           prodl	equ	0xFF3
 29007                           intcon	equ	0xFF2
 29008                           indf0	equ	0xFEF
 29009                           postinc0	equ	0xFEE
 29010                           fsr0h	equ	0xFEA
 29011                           fsr0l	equ	0xFE9
 29012                           wreg	equ	0xFE8
 29013                           indf1	equ	0xFE7
 29014                           postdec1	equ	0xFE5
 29015                           plusw1	equ	0xFE3
 29016                           fsr1h	equ	0xFE2
 29017                           fsr1l	equ	0xFE1
 29018                           indf2	equ	0xFDF
 29019                           postinc2	equ	0xFDE
 29020                           postdec2	equ	0xFDD
 29021                           plusw2	equ	0xFDB
 29022                           fsr2h	equ	0xFDA
 29023                           fsr2l	equ	0xFD9
 29024                           status	equ	0xFD8
 29025                           
 29026 ;; *************** function _scale *****************
 29027 ;; Defined at:
 29028 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 29029 ;; Parameters:    Size  Location     Type
 29030 ;;  scl             1    wreg     char 
 29031 ;; Auto vars:     Size  Location     Type
 29032 ;;  scl             1   82[BANK2 ] char 
 29033 ;; Return value:  Size  Location     Type
 29034 ;;                  4   74[BANK2 ] char 
 29035 ;; Registers used:
 29036 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29037 ;; Tracked objects:
 29038 ;;		On entry : 0/0
 29039 ;;		On exit  : 0/0
 29040 ;;		Unchanged: 0/0
 29041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29042 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
 29043 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0
 29044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29045 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0
 29046 ;;Total ram usage:        9 bytes
 29047 ;; Hardware stack levels used:    1
 29048 ;; Hardware stack levels required when called:   20
 29049 ;; This function calls:
 29050 ;;		___awdiv
 29051 ;;		___awmod
 29052 ;;		___flmul
 29053 ;; This function is called by:
 29054 ;;		__doprnt
 29055 ;; This function uses a non-reentrant model
 29056 ;;
 29057                           
 29058                           	psect	text43
 29059  014BFC                     __ptext43:
 29060                           	opt stack 0
 29061  014BFC                     _scale:
 29062                           	opt stack 6
 29063                           
 29064                           ; BSR set to: 2
 29065                           ;incstack = 0
 29066                           ;scale@scl stored from wreg
 29067  014BFC  0102               	movlb	2	; () banked
 29068  014BFE  6F52               	movwf	scale@scl& (0+255),b
 29069                           
 29070                           ;doprnt.c: 428: if(scl < 0) {
 29071  014C00  0102               	movlb	2	; () banked
 29072  014C02  AF52               	btfss	scale@scl& (0+255),7,b
 29073  014C04  D133               	goto	l2089
 29074                           
 29075                           ; BSR set to: 2
 29076                           ;doprnt.c: 429: scl = -scl;
 29077  014C06  6D52               	negf	scale@scl& (0+255),b
 29078                           
 29079                           ;doprnt.c: 430: if(scl>=110)
 29080  014C08  5152               	movf	scale@scl& (0+255),w,b
 29081  014C0A  0A80               	xorlw	128
 29082  014C0C  0F12               	addlw	-238
 29083  014C0E  A0D8               	btfss	status,0,c
 29084  014C10  D0AC               	goto	l2090
 29085                           
 29086                           ; BSR set to: 2
 29087                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 29088  014C12  0E00               	movlw	0
 29089  014C14  0101               	movlb	1	; () banked
 29090  014C16  6F58               	movwf	(___awdiv@divisor+1)& (0+255),b
 29091  014C18  0E0A               	movlw	10
 29092  014C1A  6F57               	movwf	___awdiv@divisor& (0+255),b
 29093  014C1C  0E00               	movlw	0
 29094  014C1E  6F52               	movwf	(___awmod@divisor+1)& (0+255),b
 29095  014C20  0E64               	movlw	100
 29096  014C22  6F51               	movwf	___awmod@divisor& (0+255),b
 29097  014C24  0102               	movlb	2	; () banked
 29098  014C26  5152               	movf	scale@scl& (0+255),w,b
 29099  014C28  0101               	movlb	1	; () banked
 29100  014C2A  6F4F               	movwf	___awmod@dividend& (0+255),b
 29101  014C2C  6B50               	clrf	(___awmod@dividend+1)& (0+255),b
 29102  014C2E  BF4F               	btfsc	___awmod@dividend& (0+255),7,b
 29103  014C30  0750               	decf	(___awmod@dividend+1)& (0+255),f,b
 29104  014C32  ECDC  F0D3         	call	___awmod
 29105  014C36  C14F  F155         	movff	?___awmod,___awdiv@dividend
 29106  014C3A  C150  F156         	movff	?___awmod+1,___awdiv@dividend+1
 29107  014C3E  EC64  F0D1         	call	___awdiv	;wreg free
 29108  014C42  0101               	movlb	1	; () banked
 29109  014C44  90D8               	bcf	status,0,c
 29110  014C46  3755               	rlcf	?___awdiv& (0+255),f,b
 29111  014C48  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 29112  014C4A  90D8               	bcf	status,0,c
 29113  014C4C  3755               	rlcf	?___awdiv& (0+255),f,b
 29114  014C4E  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 29115  014C50  0E24               	movlw	36
 29116  014C52  2755               	addwf	?___awdiv& (0+255),f,b
 29117  014C54  0E00               	movlw	0
 29118  014C56  2356               	addwfc	(?___awdiv+1)& (0+255),f,b
 29119  014C58  0E11               	movlw	low __npowers_
 29120  014C5A  2555               	addwf	?___awdiv& (0+255),w,b
 29121  014C5C  6EF6               	movwf	tblptrl,c
 29122  014C5E  0ECE               	movlw	high __npowers_
 29123  014C60  2156               	addwfc	(?___awdiv+1)& (0+255),w,b
 29124  014C62  6EF7               	movwf	tblptrh,c
 29125  014C64                     	if	1	;There are 3 active tblptr bytes
 29126  014C64  6AF8               	clrf	tblptru,c
 29127  014C66  0E00               	movlw	low (__mediumconst shr (0+16))
 29128  014C68  22F8               	addwfc	tblptru,f,c
 29129  014C6A                     	endif
 29130  014C6A  0009               	tblrd		*+
 29131  014C6C  CFF5 F235          	movff	tablat,___flmul@a
 29132  014C70  0009               	tblrd		*+
 29133  014C72  CFF5 F236          	movff	tablat,___flmul@a+1
 29134  014C76  0009               	tblrd		*+
 29135  014C78  CFF5 F237          	movff	tablat,___flmul@a+2
 29136  014C7C  000A               	tblrd		*-
 29137  014C7E  CFF5 F238          	movff	tablat,___flmul@a+3
 29138  014C82  0E00               	movlw	0
 29139  014C84  6F58               	movwf	(___awdiv@divisor+1)& (0+255),b
 29140  014C86  0E64               	movlw	100
 29141  014C88  6F57               	movwf	___awdiv@divisor& (0+255),b
 29142  014C8A  0102               	movlb	2	; () banked
 29143  014C8C  5152               	movf	scale@scl& (0+255),w,b
 29144  014C8E  0101               	movlb	1	; () banked
 29145  014C90  6F55               	movwf	___awdiv@dividend& (0+255),b
 29146  014C92  6B56               	clrf	(___awdiv@dividend+1)& (0+255),b
 29147  014C94  BF55               	btfsc	___awdiv@dividend& (0+255),7,b
 29148  014C96  0756               	decf	(___awdiv@dividend+1)& (0+255),f,b
 29149  014C98  EC64  F0D1         	call	___awdiv	;wreg free
 29150  014C9C  0101               	movlb	1	; () banked
 29151  014C9E  90D8               	bcf	status,0,c
 29152  014CA0  3755               	rlcf	?___awdiv& (0+255),f,b
 29153  014CA2  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 29154  014CA4  90D8               	bcf	status,0,c
 29155  014CA6  3755               	rlcf	?___awdiv& (0+255),f,b
 29156  014CA8  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 29157  014CAA  0E48               	movlw	72
 29158  014CAC  2755               	addwf	?___awdiv& (0+255),f,b
 29159  014CAE  0E00               	movlw	0
 29160  014CB0  2356               	addwfc	(?___awdiv+1)& (0+255),f,b
 29161  014CB2  0E11               	movlw	low __npowers_
 29162  014CB4  2555               	addwf	?___awdiv& (0+255),w,b
 29163  014CB6  6EF6               	movwf	tblptrl,c
 29164  014CB8  0ECE               	movlw	high __npowers_
 29165  014CBA  2156               	addwfc	(?___awdiv+1)& (0+255),w,b
 29166  014CBC  6EF7               	movwf	tblptrh,c
 29167  014CBE                     	if	1	;There are 3 active tblptr bytes
 29168  014CBE  6AF8               	clrf	tblptru,c
 29169  014CC0  0E00               	movlw	low (__mediumconst shr (0+16))
 29170  014CC2  22F8               	addwfc	tblptru,f,c
 29171  014CC4                     	endif
 29172  014CC4  0009               	tblrd		*+
 29173  014CC6  CFF5 F231          	movff	tablat,___flmul@b
 29174  014CCA  0009               	tblrd		*+
 29175  014CCC  CFF5 F232          	movff	tablat,___flmul@b+1
 29176  014CD0  0009               	tblrd		*+
 29177  014CD2  CFF5 F233          	movff	tablat,___flmul@b+2
 29178  014CD6  000A               	tblrd		*-
 29179  014CD8  CFF5 F234          	movff	tablat,___flmul@b+3
 29180  014CDC  EC5C  F0AC         	call	___flmul	;wreg free
 29181  014CE0  C231  F24E         	movff	?___flmul,_scale$5590
 29182  014CE4  C232  F24F         	movff	?___flmul+1,_scale$5590+1
 29183  014CE8  C233  F250         	movff	?___flmul+2,_scale$5590+2
 29184  014CEC  C234  F251         	movff	?___flmul+3,_scale$5590+3
 29185                           
 29186                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 29187  014CF0  C24E  F231         	movff	_scale$5590,___flmul@b
 29188  014CF4  C24F  F232         	movff	_scale$5590+1,___flmul@b+1
 29189  014CF8  C250  F233         	movff	_scale$5590+2,___flmul@b+2
 29190  014CFC  C251  F234         	movff	_scale$5590+3,___flmul@b+3
 29191  014D00  0E00               	movlw	0
 29192  014D02  0101               	movlb	1	; () banked
 29193  014D04  6F52               	movwf	(___awmod@divisor+1)& (0+255),b
 29194  014D06  0E0A               	movlw	10
 29195  014D08  6F51               	movwf	___awmod@divisor& (0+255),b
 29196  014D0A  0102               	movlb	2	; () banked
 29197  014D0C  5152               	movf	scale@scl& (0+255),w,b
 29198  014D0E  0101               	movlb	1	; () banked
 29199  014D10  6F4F               	movwf	___awmod@dividend& (0+255),b
 29200  014D12  6B50               	clrf	(___awmod@dividend+1)& (0+255),b
 29201  014D14  BF4F               	btfsc	___awmod@dividend& (0+255),7,b
 29202  014D16  0750               	decf	(___awmod@dividend+1)& (0+255),f,b
 29203  014D18  ECDC  F0D3         	call	___awmod	;wreg free
 29204  014D1C  0101               	movlb	1	; () banked
 29205  014D1E  90D8               	bcf	status,0,c
 29206  014D20  374F               	rlcf	?___awmod& (0+255),f,b
 29207  014D22  3750               	rlcf	(?___awmod+1)& (0+255),f,b
 29208  014D24  90D8               	bcf	status,0,c
 29209  014D26  374F               	rlcf	?___awmod& (0+255),f,b
 29210  014D28  3750               	rlcf	(?___awmod+1)& (0+255),f,b
 29211  014D2A  0E11               	movlw	low __npowers_
 29212  014D2C  254F               	addwf	?___awmod& (0+255),w,b
 29213  014D2E  6EF6               	movwf	tblptrl,c
 29214  014D30  0ECE               	movlw	high __npowers_
 29215  014D32  2150               	addwfc	(?___awmod+1)& (0+255),w,b
 29216  014D34  6EF7               	movwf	tblptrh,c
 29217  014D36                     	if	1	;There are 3 active tblptr bytes
 29218  014D36  6AF8               	clrf	tblptru,c
 29219  014D38  0E00               	movlw	low (__mediumconst shr (0+16))
 29220  014D3A  22F8               	addwfc	tblptru,f,c
 29221  014D3C                     	endif
 29222  014D3C  0009               	tblrd		*+
 29223  014D3E  CFF5 F235          	movff	tablat,___flmul@a
 29224  014D42  0009               	tblrd		*+
 29225  014D44  CFF5 F236          	movff	tablat,___flmul@a+1
 29226  014D48  0009               	tblrd		*+
 29227  014D4A  CFF5 F237          	movff	tablat,___flmul@a+2
 29228  014D4E  000A               	tblrd		*-
 29229  014D50  CFF5 F238          	movff	tablat,___flmul@a+3
 29230  014D54  EC5C  F0AC         	call	___flmul	;wreg free
 29231  014D58  C231  F24A         	movff	?___flmul,?_scale
 29232  014D5C  C232  F24B         	movff	?___flmul+1,?_scale+1
 29233  014D60  C233  F24C         	movff	?___flmul+2,?_scale+2
 29234  014D64  C234  F24D         	movff	?___flmul+3,?_scale+3
 29235  014D68  0012               	return	
 29236  014D6A                     l2090:
 29237                           
 29238                           ;doprnt.c: 432: else if(scl > 10)
 29239  014D6A  0102               	movlb	2	; () banked
 29240  014D6C  5152               	movf	scale@scl& (0+255),w,b
 29241  014D6E  0A80               	xorlw	128
 29242  014D70  0F75               	addlw	-139
 29243  014D72  A0D8               	btfss	status,0,c
 29244  014D74  D062               	goto	l2093
 29245                           
 29246                           ; BSR set to: 2
 29247                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 29248  014D76  0E00               	movlw	0
 29249  014D78  0101               	movlb	1	; () banked
 29250  014D7A  6F58               	movwf	(___awdiv@divisor+1)& (0+255),b
 29251  014D7C  0E0A               	movlw	10
 29252  014D7E  6F57               	movwf	___awdiv@divisor& (0+255),b
 29253  014D80  0102               	movlb	2	; () banked
 29254  014D82  5152               	movf	scale@scl& (0+255),w,b
 29255  014D84  0101               	movlb	1	; () banked
 29256  014D86  6F55               	movwf	___awdiv@dividend& (0+255),b
 29257  014D88  6B56               	clrf	(___awdiv@dividend+1)& (0+255),b
 29258  014D8A  BF55               	btfsc	___awdiv@dividend& (0+255),7,b
 29259  014D8C  0756               	decf	(___awdiv@dividend+1)& (0+255),f,b
 29260  014D8E  EC64  F0D1         	call	___awdiv	;wreg free
 29261  014D92  0101               	movlb	1	; () banked
 29262  014D94  90D8               	bcf	status,0,c
 29263  014D96  3755               	rlcf	?___awdiv& (0+255),f,b
 29264  014D98  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 29265  014D9A  90D8               	bcf	status,0,c
 29266  014D9C  3755               	rlcf	?___awdiv& (0+255),f,b
 29267  014D9E  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 29268  014DA0  0E24               	movlw	36
 29269  014DA2  2755               	addwf	?___awdiv& (0+255),f,b
 29270  014DA4  0E00               	movlw	0
 29271  014DA6  2356               	addwfc	(?___awdiv+1)& (0+255),f,b
 29272  014DA8  0E11               	movlw	low __npowers_
 29273  014DAA  2555               	addwf	?___awdiv& (0+255),w,b
 29274  014DAC  6EF6               	movwf	tblptrl,c
 29275  014DAE  0ECE               	movlw	high __npowers_
 29276  014DB0  2156               	addwfc	(?___awdiv+1)& (0+255),w,b
 29277  014DB2  6EF7               	movwf	tblptrh,c
 29278  014DB4                     	if	1	;There are 3 active tblptr bytes
 29279  014DB4  6AF8               	clrf	tblptru,c
 29280  014DB6  0E00               	movlw	low (__mediumconst shr (0+16))
 29281  014DB8  22F8               	addwfc	tblptru,f,c
 29282  014DBA                     	endif
 29283  014DBA  0009               	tblrd		*+
 29284  014DBC  CFF5 F231          	movff	tablat,___flmul@b
 29285  014DC0  0009               	tblrd		*+
 29286  014DC2  CFF5 F232          	movff	tablat,___flmul@b+1
 29287  014DC6  0009               	tblrd		*+
 29288  014DC8  CFF5 F233          	movff	tablat,___flmul@b+2
 29289  014DCC  000A               	tblrd		*-
 29290  014DCE  CFF5 F234          	movff	tablat,___flmul@b+3
 29291  014DD2  0E00               	movlw	0
 29292  014DD4  6F52               	movwf	(___awmod@divisor+1)& (0+255),b
 29293  014DD6  0E0A               	movlw	10
 29294  014DD8  6F51               	movwf	___awmod@divisor& (0+255),b
 29295  014DDA  0102               	movlb	2	; () banked
 29296  014DDC  5152               	movf	scale@scl& (0+255),w,b
 29297  014DDE  0101               	movlb	1	; () banked
 29298  014DE0  6F4F               	movwf	___awmod@dividend& (0+255),b
 29299  014DE2  6B50               	clrf	(___awmod@dividend+1)& (0+255),b
 29300  014DE4  BF4F               	btfsc	___awmod@dividend& (0+255),7,b
 29301  014DE6  0750               	decf	(___awmod@dividend+1)& (0+255),f,b
 29302  014DE8  ECDC  F0D3         	call	___awmod	;wreg free
 29303  014DEC  0101               	movlb	1	; () banked
 29304  014DEE  90D8               	bcf	status,0,c
 29305  014DF0  374F               	rlcf	?___awmod& (0+255),f,b
 29306  014DF2  3750               	rlcf	(?___awmod+1)& (0+255),f,b
 29307  014DF4  90D8               	bcf	status,0,c
 29308  014DF6  374F               	rlcf	?___awmod& (0+255),f,b
 29309  014DF8  3750               	rlcf	(?___awmod+1)& (0+255),f,b
 29310  014DFA  0E11               	movlw	low __npowers_
 29311  014DFC  254F               	addwf	?___awmod& (0+255),w,b
 29312  014DFE  6EF6               	movwf	tblptrl,c
 29313  014E00  0ECE               	movlw	high __npowers_
 29314  014E02  2150               	addwfc	(?___awmod+1)& (0+255),w,b
 29315  014E04  6EF7               	movwf	tblptrh,c
 29316  014E06                     	if	1	;There are 3 active tblptr bytes
 29317  014E06  6AF8               	clrf	tblptru,c
 29318  014E08  0E00               	movlw	low (__mediumconst shr (0+16))
 29319  014E0A  22F8               	addwfc	tblptru,f,c
 29320  014E0C                     	endif
 29321  014E0C  0009               	tblrd		*+
 29322  014E0E  CFF5 F235          	movff	tablat,___flmul@a
 29323  014E12  0009               	tblrd		*+
 29324  014E14  CFF5 F236          	movff	tablat,___flmul@a+1
 29325  014E18  0009               	tblrd		*+
 29326  014E1A  CFF5 F237          	movff	tablat,___flmul@a+2
 29327  014E1E  000A               	tblrd		*-
 29328  014E20  CFF5 F238          	movff	tablat,___flmul@a+3
 29329  014E24  EC5C  F0AC         	call	___flmul	;wreg free
 29330  014E28  C231  F24A         	movff	?___flmul,?_scale
 29331  014E2C  C232  F24B         	movff	?___flmul+1,?_scale+1
 29332  014E30  C233  F24C         	movff	?___flmul+2,?_scale+2
 29333  014E34  C234  F24D         	movff	?___flmul+3,?_scale+3
 29334  014E38  0012               	return	
 29335  014E3A                     l2093:
 29336                           
 29337                           ;doprnt.c: 434: return _npowers_[scl];
 29338  014E3A  0102               	movlb	2	; () banked
 29339  014E3C  5152               	movf	scale@scl& (0+255),w,b
 29340  014E3E  0D04               	mullw	4
 29341  014E40  0E11               	movlw	low __npowers_
 29342  014E42  24F3               	addwf	prodl,w,c
 29343  014E44  6EF6               	movwf	tblptrl,c
 29344  014E46  0ECE               	movlw	high __npowers_
 29345  014E48  20F4               	addwfc	prodh,w,c
 29346  014E4A  6EF7               	movwf	tblptrh,c
 29347  014E4C                     	if	1	;There are 3 active tblptr bytes
 29348  014E4C  6AF8               	clrf	tblptru,c
 29349  014E4E  0E00               	movlw	low (__mediumconst shr (0+16))
 29350  014E50  22F8               	addwfc	tblptru,f,c
 29351  014E52                     	endif
 29352  014E52  0009               	tblrd		*+
 29353  014E54  CFF5 F24A          	movff	tablat,?_scale
 29354  014E58  0009               	tblrd		*+
 29355  014E5A  CFF5 F24B          	movff	tablat,?_scale+1
 29356  014E5E  0009               	tblrd		*+
 29357  014E60  CFF5 F24C          	movff	tablat,?_scale+2
 29358  014E64  000A               	tblrd		*-
 29359  014E66  CFF5 F24D          	movff	tablat,?_scale+3
 29360                           
 29361                           ; BSR set to: 2
 29362  014E6A  0012               	return	
 29363  014E6C                     l2089:
 29364                           
 29365                           ; BSR set to: 2
 29366                           ;doprnt.c: 435: }
 29367                           ;doprnt.c: 436: if(scl>=110)
 29368                           
 29369                           ; BSR set to: 2
 29370  014E6C  5152               	movf	scale@scl& (0+255),w,b
 29371  014E6E  0A80               	xorlw	128
 29372  014E70  0F12               	addlw	-238
 29373  014E72  A0D8               	btfss	status,0,c
 29374  014E74  D0AC               	goto	l2094
 29375                           
 29376                           ; BSR set to: 2
 29377                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 29378  014E76  0E00               	movlw	0
 29379  014E78  0101               	movlb	1	; () banked
 29380  014E7A  6F58               	movwf	(___awdiv@divisor+1)& (0+255),b
 29381  014E7C  0E0A               	movlw	10
 29382  014E7E  6F57               	movwf	___awdiv@divisor& (0+255),b
 29383  014E80  0E00               	movlw	0
 29384  014E82  6F52               	movwf	(___awmod@divisor+1)& (0+255),b
 29385  014E84  0E64               	movlw	100
 29386  014E86  6F51               	movwf	___awmod@divisor& (0+255),b
 29387  014E88  0102               	movlb	2	; () banked
 29388  014E8A  5152               	movf	scale@scl& (0+255),w,b
 29389  014E8C  0101               	movlb	1	; () banked
 29390  014E8E  6F4F               	movwf	___awmod@dividend& (0+255),b
 29391  014E90  6B50               	clrf	(___awmod@dividend+1)& (0+255),b
 29392  014E92  BF4F               	btfsc	___awmod@dividend& (0+255),7,b
 29393  014E94  0750               	decf	(___awmod@dividend+1)& (0+255),f,b
 29394  014E96  ECDC  F0D3         	call	___awmod	;wreg free
 29395  014E9A  C14F  F155         	movff	?___awmod,___awdiv@dividend
 29396  014E9E  C150  F156         	movff	?___awmod+1,___awdiv@dividend+1
 29397  014EA2  EC64  F0D1         	call	___awdiv	;wreg free
 29398  014EA6  0101               	movlb	1	; () banked
 29399  014EA8  90D8               	bcf	status,0,c
 29400  014EAA  3755               	rlcf	?___awdiv& (0+255),f,b
 29401  014EAC  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 29402  014EAE  90D8               	bcf	status,0,c
 29403  014EB0  3755               	rlcf	?___awdiv& (0+255),f,b
 29404  014EB2  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 29405  014EB4  0E24               	movlw	36
 29406  014EB6  2755               	addwf	?___awdiv& (0+255),f,b
 29407  014EB8  0E00               	movlw	0
 29408  014EBA  2356               	addwfc	(?___awdiv+1)& (0+255),f,b
 29409  014EBC  0EDD               	movlw	low __powers_
 29410  014EBE  2555               	addwf	?___awdiv& (0+255),w,b
 29411  014EC0  6EF6               	movwf	tblptrl,c
 29412  014EC2  0ECD               	movlw	high __powers_
 29413  014EC4  2156               	addwfc	(?___awdiv+1)& (0+255),w,b
 29414  014EC6  6EF7               	movwf	tblptrh,c
 29415  014EC8                     	if	1	;There are 3 active tblptr bytes
 29416  014EC8  6AF8               	clrf	tblptru,c
 29417  014ECA  0E00               	movlw	low (__mediumconst shr (0+16))
 29418  014ECC  22F8               	addwfc	tblptru,f,c
 29419  014ECE                     	endif
 29420  014ECE  0009               	tblrd		*+
 29421  014ED0  CFF5 F235          	movff	tablat,___flmul@a
 29422  014ED4  0009               	tblrd		*+
 29423  014ED6  CFF5 F236          	movff	tablat,___flmul@a+1
 29424  014EDA  0009               	tblrd		*+
 29425  014EDC  CFF5 F237          	movff	tablat,___flmul@a+2
 29426  014EE0  000A               	tblrd		*-
 29427  014EE2  CFF5 F238          	movff	tablat,___flmul@a+3
 29428  014EE6  0E00               	movlw	0
 29429  014EE8  6F58               	movwf	(___awdiv@divisor+1)& (0+255),b
 29430  014EEA  0E64               	movlw	100
 29431  014EEC  6F57               	movwf	___awdiv@divisor& (0+255),b
 29432  014EEE  0102               	movlb	2	; () banked
 29433  014EF0  5152               	movf	scale@scl& (0+255),w,b
 29434  014EF2  0101               	movlb	1	; () banked
 29435  014EF4  6F55               	movwf	___awdiv@dividend& (0+255),b
 29436  014EF6  6B56               	clrf	(___awdiv@dividend+1)& (0+255),b
 29437  014EF8  BF55               	btfsc	___awdiv@dividend& (0+255),7,b
 29438  014EFA  0756               	decf	(___awdiv@dividend+1)& (0+255),f,b
 29439  014EFC  EC64  F0D1         	call	___awdiv	;wreg free
 29440  014F00  0101               	movlb	1	; () banked
 29441  014F02  90D8               	bcf	status,0,c
 29442  014F04  3755               	rlcf	?___awdiv& (0+255),f,b
 29443  014F06  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 29444  014F08  90D8               	bcf	status,0,c
 29445  014F0A  3755               	rlcf	?___awdiv& (0+255),f,b
 29446  014F0C  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 29447  014F0E  0E48               	movlw	72
 29448  014F10  2755               	addwf	?___awdiv& (0+255),f,b
 29449  014F12  0E00               	movlw	0
 29450  014F14  2356               	addwfc	(?___awdiv+1)& (0+255),f,b
 29451  014F16  0EDD               	movlw	low __powers_
 29452  014F18  2555               	addwf	?___awdiv& (0+255),w,b
 29453  014F1A  6EF6               	movwf	tblptrl,c
 29454  014F1C  0ECD               	movlw	high __powers_
 29455  014F1E  2156               	addwfc	(?___awdiv+1)& (0+255),w,b
 29456  014F20  6EF7               	movwf	tblptrh,c
 29457  014F22                     	if	1	;There are 3 active tblptr bytes
 29458  014F22  6AF8               	clrf	tblptru,c
 29459  014F24  0E00               	movlw	low (__mediumconst shr (0+16))
 29460  014F26  22F8               	addwfc	tblptru,f,c
 29461  014F28                     	endif
 29462  014F28  0009               	tblrd		*+
 29463  014F2A  CFF5 F231          	movff	tablat,___flmul@b
 29464  014F2E  0009               	tblrd		*+
 29465  014F30  CFF5 F232          	movff	tablat,___flmul@b+1
 29466  014F34  0009               	tblrd		*+
 29467  014F36  CFF5 F233          	movff	tablat,___flmul@b+2
 29468  014F3A  000A               	tblrd		*-
 29469  014F3C  CFF5 F234          	movff	tablat,___flmul@b+3
 29470  014F40  EC5C  F0AC         	call	___flmul	;wreg free
 29471  014F44  C231  F24E         	movff	?___flmul,_scale$5590
 29472  014F48  C232  F24F         	movff	?___flmul+1,_scale$5590+1
 29473  014F4C  C233  F250         	movff	?___flmul+2,_scale$5590+2
 29474  014F50  C234  F251         	movff	?___flmul+3,_scale$5590+3
 29475                           
 29476                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 29477  014F54  C24E  F231         	movff	_scale$5590,___flmul@b
 29478  014F58  C24F  F232         	movff	_scale$5590+1,___flmul@b+1
 29479  014F5C  C250  F233         	movff	_scale$5590+2,___flmul@b+2
 29480  014F60  C251  F234         	movff	_scale$5590+3,___flmul@b+3
 29481  014F64  0E00               	movlw	0
 29482  014F66  0101               	movlb	1	; () banked
 29483  014F68  6F52               	movwf	(___awmod@divisor+1)& (0+255),b
 29484  014F6A  0E0A               	movlw	10
 29485  014F6C  6F51               	movwf	___awmod@divisor& (0+255),b
 29486  014F6E  0102               	movlb	2	; () banked
 29487  014F70  5152               	movf	scale@scl& (0+255),w,b
 29488  014F72  0101               	movlb	1	; () banked
 29489  014F74  6F4F               	movwf	___awmod@dividend& (0+255),b
 29490  014F76  6B50               	clrf	(___awmod@dividend+1)& (0+255),b
 29491  014F78  BF4F               	btfsc	___awmod@dividend& (0+255),7,b
 29492  014F7A  0750               	decf	(___awmod@dividend+1)& (0+255),f,b
 29493  014F7C  ECDC  F0D3         	call	___awmod	;wreg free
 29494  014F80  0101               	movlb	1	; () banked
 29495  014F82  90D8               	bcf	status,0,c
 29496  014F84  374F               	rlcf	?___awmod& (0+255),f,b
 29497  014F86  3750               	rlcf	(?___awmod+1)& (0+255),f,b
 29498  014F88  90D8               	bcf	status,0,c
 29499  014F8A  374F               	rlcf	?___awmod& (0+255),f,b
 29500  014F8C  3750               	rlcf	(?___awmod+1)& (0+255),f,b
 29501  014F8E  0EDD               	movlw	low __powers_
 29502  014F90  254F               	addwf	?___awmod& (0+255),w,b
 29503  014F92  6EF6               	movwf	tblptrl,c
 29504  014F94  0ECD               	movlw	high __powers_
 29505  014F96  2150               	addwfc	(?___awmod+1)& (0+255),w,b
 29506  014F98  6EF7               	movwf	tblptrh,c
 29507  014F9A                     	if	1	;There are 3 active tblptr bytes
 29508  014F9A  6AF8               	clrf	tblptru,c
 29509  014F9C  0E00               	movlw	low (__mediumconst shr (0+16))
 29510  014F9E  22F8               	addwfc	tblptru,f,c
 29511  014FA0                     	endif
 29512  014FA0  0009               	tblrd		*+
 29513  014FA2  CFF5 F235          	movff	tablat,___flmul@a
 29514  014FA6  0009               	tblrd		*+
 29515  014FA8  CFF5 F236          	movff	tablat,___flmul@a+1
 29516  014FAC  0009               	tblrd		*+
 29517  014FAE  CFF5 F237          	movff	tablat,___flmul@a+2
 29518  014FB2  000A               	tblrd		*-
 29519  014FB4  CFF5 F238          	movff	tablat,___flmul@a+3
 29520  014FB8  EC5C  F0AC         	call	___flmul	;wreg free
 29521  014FBC  C231  F24A         	movff	?___flmul,?_scale
 29522  014FC0  C232  F24B         	movff	?___flmul+1,?_scale+1
 29523  014FC4  C233  F24C         	movff	?___flmul+2,?_scale+2
 29524  014FC8  C234  F24D         	movff	?___flmul+3,?_scale+3
 29525  014FCC  0012               	return	
 29526  014FCE                     l2094:
 29527                           
 29528                           ;doprnt.c: 438: else if(scl > 10)
 29529  014FCE  0102               	movlb	2	; () banked
 29530  014FD0  5152               	movf	scale@scl& (0+255),w,b
 29531  014FD2  0A80               	xorlw	128
 29532  014FD4  0F75               	addlw	-139
 29533  014FD6  A0D8               	btfss	status,0,c
 29534  014FD8  D062               	goto	l2096
 29535                           
 29536                           ; BSR set to: 2
 29537                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 29538  014FDA  0E00               	movlw	0
 29539  014FDC  0101               	movlb	1	; () banked
 29540  014FDE  6F58               	movwf	(___awdiv@divisor+1)& (0+255),b
 29541  014FE0  0E0A               	movlw	10
 29542  014FE2  6F57               	movwf	___awdiv@divisor& (0+255),b
 29543  014FE4  0102               	movlb	2	; () banked
 29544  014FE6  5152               	movf	scale@scl& (0+255),w,b
 29545  014FE8  0101               	movlb	1	; () banked
 29546  014FEA  6F55               	movwf	___awdiv@dividend& (0+255),b
 29547  014FEC  6B56               	clrf	(___awdiv@dividend+1)& (0+255),b
 29548  014FEE  BF55               	btfsc	___awdiv@dividend& (0+255),7,b
 29549  014FF0  0756               	decf	(___awdiv@dividend+1)& (0+255),f,b
 29550  014FF2  EC64  F0D1         	call	___awdiv	;wreg free
 29551  014FF6  0101               	movlb	1	; () banked
 29552  014FF8  90D8               	bcf	status,0,c
 29553  014FFA  3755               	rlcf	?___awdiv& (0+255),f,b
 29554  014FFC  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 29555  014FFE  90D8               	bcf	status,0,c
 29556  015000  3755               	rlcf	?___awdiv& (0+255),f,b
 29557  015002  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 29558  015004  0E24               	movlw	36
 29559  015006  2755               	addwf	?___awdiv& (0+255),f,b
 29560  015008  0E00               	movlw	0
 29561  01500A  2356               	addwfc	(?___awdiv+1)& (0+255),f,b
 29562  01500C  0EDD               	movlw	low __powers_
 29563  01500E  2555               	addwf	?___awdiv& (0+255),w,b
 29564  015010  6EF6               	movwf	tblptrl,c
 29565  015012  0ECD               	movlw	high __powers_
 29566  015014  2156               	addwfc	(?___awdiv+1)& (0+255),w,b
 29567  015016  6EF7               	movwf	tblptrh,c
 29568  015018                     	if	1	;There are 3 active tblptr bytes
 29569  015018  6AF8               	clrf	tblptru,c
 29570  01501A  0E00               	movlw	low (__mediumconst shr (0+16))
 29571  01501C  22F8               	addwfc	tblptru,f,c
 29572  01501E                     	endif
 29573  01501E  0009               	tblrd		*+
 29574  015020  CFF5 F231          	movff	tablat,___flmul@b
 29575  015024  0009               	tblrd		*+
 29576  015026  CFF5 F232          	movff	tablat,___flmul@b+1
 29577  01502A  0009               	tblrd		*+
 29578  01502C  CFF5 F233          	movff	tablat,___flmul@b+2
 29579  015030  000A               	tblrd		*-
 29580  015032  CFF5 F234          	movff	tablat,___flmul@b+3
 29581  015036  0E00               	movlw	0
 29582  015038  6F52               	movwf	(___awmod@divisor+1)& (0+255),b
 29583  01503A  0E0A               	movlw	10
 29584  01503C  6F51               	movwf	___awmod@divisor& (0+255),b
 29585  01503E  0102               	movlb	2	; () banked
 29586  015040  5152               	movf	scale@scl& (0+255),w,b
 29587  015042  0101               	movlb	1	; () banked
 29588  015044  6F4F               	movwf	___awmod@dividend& (0+255),b
 29589  015046  6B50               	clrf	(___awmod@dividend+1)& (0+255),b
 29590  015048  BF4F               	btfsc	___awmod@dividend& (0+255),7,b
 29591  01504A  0750               	decf	(___awmod@dividend+1)& (0+255),f,b
 29592  01504C  ECDC  F0D3         	call	___awmod	;wreg free
 29593  015050  0101               	movlb	1	; () banked
 29594  015052  90D8               	bcf	status,0,c
 29595  015054  374F               	rlcf	?___awmod& (0+255),f,b
 29596  015056  3750               	rlcf	(?___awmod+1)& (0+255),f,b
 29597  015058  90D8               	bcf	status,0,c
 29598  01505A  374F               	rlcf	?___awmod& (0+255),f,b
 29599  01505C  3750               	rlcf	(?___awmod+1)& (0+255),f,b
 29600  01505E  0EDD               	movlw	low __powers_
 29601  015060  254F               	addwf	?___awmod& (0+255),w,b
 29602  015062  6EF6               	movwf	tblptrl,c
 29603  015064  0ECD               	movlw	high __powers_
 29604  015066  2150               	addwfc	(?___awmod+1)& (0+255),w,b
 29605  015068  6EF7               	movwf	tblptrh,c
 29606  01506A                     	if	1	;There are 3 active tblptr bytes
 29607  01506A  6AF8               	clrf	tblptru,c
 29608  01506C  0E00               	movlw	low (__mediumconst shr (0+16))
 29609  01506E  22F8               	addwfc	tblptru,f,c
 29610  015070                     	endif
 29611  015070  0009               	tblrd		*+
 29612  015072  CFF5 F235          	movff	tablat,___flmul@a
 29613  015076  0009               	tblrd		*+
 29614  015078  CFF5 F236          	movff	tablat,___flmul@a+1
 29615  01507C  0009               	tblrd		*+
 29616  01507E  CFF5 F237          	movff	tablat,___flmul@a+2
 29617  015082  000A               	tblrd		*-
 29618  015084  CFF5 F238          	movff	tablat,___flmul@a+3
 29619  015088  EC5C  F0AC         	call	___flmul	;wreg free
 29620  01508C  C231  F24A         	movff	?___flmul,?_scale
 29621  015090  C232  F24B         	movff	?___flmul+1,?_scale+1
 29622  015094  C233  F24C         	movff	?___flmul+2,?_scale+2
 29623  015098  C234  F24D         	movff	?___flmul+3,?_scale+3
 29624  01509C  0012               	return	
 29625  01509E                     l2096:
 29626                           
 29627                           ;doprnt.c: 440: return _powers_[scl];
 29628  01509E  0102               	movlb	2	; () banked
 29629  0150A0  5152               	movf	scale@scl& (0+255),w,b
 29630  0150A2  0D04               	mullw	4
 29631  0150A4  0EDD               	movlw	low __powers_
 29632  0150A6  24F3               	addwf	prodl,w,c
 29633  0150A8  6EF6               	movwf	tblptrl,c
 29634  0150AA  0ECD               	movlw	high __powers_
 29635  0150AC  20F4               	addwfc	prodh,w,c
 29636  0150AE  6EF7               	movwf	tblptrh,c
 29637  0150B0                     	if	1	;There are 3 active tblptr bytes
 29638  0150B0  6AF8               	clrf	tblptru,c
 29639  0150B2  0E00               	movlw	low (__mediumconst shr (0+16))
 29640  0150B4  22F8               	addwfc	tblptru,f,c
 29641  0150B6                     	endif
 29642  0150B6  0009               	tblrd		*+
 29643  0150B8  CFF5 F24A          	movff	tablat,?_scale
 29644  0150BC  0009               	tblrd		*+
 29645  0150BE  CFF5 F24B          	movff	tablat,?_scale+1
 29646  0150C2  0009               	tblrd		*+
 29647  0150C4  CFF5 F24C          	movff	tablat,?_scale+2
 29648  0150C8  000A               	tblrd		*-
 29649  0150CA  CFF5 F24D          	movff	tablat,?_scale+3
 29650  0150CE  0012               	return	
 29651  0150D0                     __end_of_scale:
 29652                           	opt stack 0
 29653                           tosu	equ	0xFFF
 29654                           tosh	equ	0xFFE
 29655                           tosl	equ	0xFFD
 29656                           pclath	equ	0xFFA
 29657                           tblptru	equ	0xFF8
 29658                           tblptrh	equ	0xFF7
 29659                           tblptrl	equ	0xFF6
 29660                           tablat	equ	0xFF5
 29661                           prodh	equ	0xFF4
 29662                           prodl	equ	0xFF3
 29663                           intcon	equ	0xFF2
 29664                           indf0	equ	0xFEF
 29665                           postinc0	equ	0xFEE
 29666                           fsr0h	equ	0xFEA
 29667                           fsr0l	equ	0xFE9
 29668                           wreg	equ	0xFE8
 29669                           indf1	equ	0xFE7
 29670                           postdec1	equ	0xFE5
 29671                           plusw1	equ	0xFE3
 29672                           fsr1h	equ	0xFE2
 29673                           fsr1l	equ	0xFE1
 29674                           indf2	equ	0xFDF
 29675                           postinc2	equ	0xFDE
 29676                           postdec2	equ	0xFDD
 29677                           plusw2	equ	0xFDB
 29678                           fsr2h	equ	0xFDA
 29679                           fsr2l	equ	0xFD9
 29680                           status	equ	0xFD8
 29681                           
 29682 ;; *************** function _putch *****************
 29683 ;; Defined at:
 29684 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 29685 ;; Parameters:    Size  Location     Type
 29686 ;;  txData          1    wreg     unsigned char 
 29687 ;; Auto vars:     Size  Location     Type
 29688 ;;  txData          1   80[BANK1 ] unsigned char 
 29689 ;; Return value:  Size  Location     Type
 29690 ;;                  1    wreg      void 
 29691 ;; Registers used:
 29692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29693 ;; Tracked objects:
 29694 ;;		On entry : 0/0
 29695 ;;		On exit  : 0/0
 29696 ;;		Unchanged: 0/0
 29697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29699 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29701 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29702 ;;Total ram usage:        1 bytes
 29703 ;; Hardware stack levels used:    1
 29704 ;; Hardware stack levels required when called:   20
 29705 ;; This function calls:
 29706 ;;		_EUSART2_Write
 29707 ;; This function is called by:
 29708 ;;		_printf
 29709 ;;		__doprnt
 29710 ;;		i2__doprnt
 29711 ;; This function uses a non-reentrant model
 29712 ;;
 29713                           
 29714                           	psect	text44
 29715  01BE66                     __ptext44:
 29716                           	opt stack 0
 29717  01BE66                     _putch:
 29718                           	opt stack 0
 29719                           
 29720                           ;Skip over the trampoline to the duplicate function for level 2
 29721  01BE66  B25F               	btfsc	btemp,1,c
 29722  01BE68  EFF3  F0DF         	goto	i2_putch
 29723  01BE6C                     _putch$intlevel0:
 29724                           	opt stack 6
 29725                           
 29726                           ;incstack = 0
 29727                           ;putch@txData stored from wreg
 29728  01BE6C  0101               	movlb	1	; () banked
 29729  01BE6E  6F50               	movwf	putch@txData& (0+255),b
 29730                           
 29731                           ;eusart2.c: 187: EUSART2_Write(txData);
 29732  01BE70  0101               	movlb	1	; () banked
 29733  01BE72  5150               	movf	putch@txData& (0+255),w,b
 29734  01BE74  EC6B  F0D7         	call	_EUSART2_Write
 29735  01BE78  0012               	return		;funcret
 29736  01BE7A                     __end_of_putch:
 29737                           	opt stack 0
 29738                           tosu	equ	0xFFF
 29739                           tosh	equ	0xFFE
 29740                           tosl	equ	0xFFD
 29741                           pclath	equ	0xFFA
 29742                           tblptru	equ	0xFF8
 29743                           tblptrh	equ	0xFF7
 29744                           tblptrl	equ	0xFF6
 29745                           tablat	equ	0xFF5
 29746                           prodh	equ	0xFF4
 29747                           prodl	equ	0xFF3
 29748                           intcon	equ	0xFF2
 29749                           indf0	equ	0xFEF
 29750                           postinc0	equ	0xFEE
 29751                           fsr0h	equ	0xFEA
 29752                           fsr0l	equ	0xFE9
 29753                           wreg	equ	0xFE8
 29754                           indf1	equ	0xFE7
 29755                           postdec1	equ	0xFE5
 29756                           plusw1	equ	0xFE3
 29757                           fsr1h	equ	0xFE2
 29758                           fsr1l	equ	0xFE1
 29759                           indf2	equ	0xFDF
 29760                           postinc2	equ	0xFDE
 29761                           postdec2	equ	0xFDD
 29762                           plusw2	equ	0xFDB
 29763                           fsr2h	equ	0xFDA
 29764                           fsr2l	equ	0xFD9
 29765                           status	equ	0xFD8
 29766                           
 29767 ;; *************** function _EUSART2_Write *****************
 29768 ;; Defined at:
 29769 ;;		line 155 in file "mcc_generated_files/eusart2.c"
 29770 ;; Parameters:    Size  Location     Type
 29771 ;;  txData          1    wreg     unsigned char 
 29772 ;; Auto vars:     Size  Location     Type
 29773 ;;  txData          1   79[BANK1 ] unsigned char 
 29774 ;; Return value:  Size  Location     Type
 29775 ;;                  1    wreg      void 
 29776 ;; Registers used:
 29777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29778 ;; Tracked objects:
 29779 ;;		On entry : 0/0
 29780 ;;		On exit  : 0/0
 29781 ;;		Unchanged: 0/0
 29782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29784 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29786 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29787 ;;Total ram usage:        1 bytes
 29788 ;; Hardware stack levels used:    1
 29789 ;; Hardware stack levels required when called:   19
 29790 ;; This function calls:
 29791 ;;		Nothing
 29792 ;; This function is called by:
 29793 ;;		_putch
 29794 ;; This function uses a non-reentrant model
 29795 ;;
 29796                           
 29797                           	psect	text45
 29798  01AED6                     __ptext45:
 29799                           	opt stack 0
 29800  01AED6                     _EUSART2_Write:
 29801                           	opt stack 6
 29802                           
 29803                           ;incstack = 0
 29804                           ;EUSART2_Write@txData stored from wreg
 29805  01AED6  0101               	movlb	1	; () banked
 29806  01AED8  6F4F               	movwf	EUSART2_Write@txData& (0+255),b
 29807                           
 29808                           ;eusart2.c: 157: while(0 == eusart2TxBufferRemaining)
 29809  01AEDA  D004               	goto	l436
 29810  01AEDC                     l437:
 29811                           
 29812                           ; BSR set to: 1
 29813  01AEDC  0004               	clrwdt		;# 
 29814                           
 29815                           ;eusart2.c: 160: error_handler.USB_UART_COMM_error_flag = 1;
 29816  01AEDE  0E01               	movlw	1
 29817  01AEE0  0101               	movlb	1	; () banked
 29818  01AEE2  6F68               	movwf	(_error_handler+8)& (0+255),b
 29819  01AEE4                     l436:
 29820                           
 29821                           ; BSR set to: 1
 29822  01AEE4  0101               	movlb	1	; () banked
 29823  01AEE6  51A4               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 29824  01AEE8  B4D8               	btfsc	status,2,c
 29825  01AEEA  D7F8               	goto	l437
 29826                           
 29827                           ; BSR set to: 1
 29828                           ;eusart2.c: 161: }
 29829                           ;eusart2.c: 163: if(0 == PIE3bits.TX2IE)
 29830  01AEEC  010E               	movlb	14	; () banked
 29831  01AEEE  BD2C               	btfsc	44,6,b	;volatile
 29832  01AEF0  D003               	goto	l439
 29833                           
 29834                           ; BSR set to: 14
 29835                           ;eusart2.c: 164: {
 29836                           ;eusart2.c: 165: TX2REG = txData;
 29837  01AEF2  C14F  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 29838                           
 29839                           ;eusart2.c: 166: }
 29840  01AEF6  D013               	goto	l440
 29841  01AEF8                     l439:
 29842                           
 29843                           ; BSR set to: 14
 29844                           ;eusart2.c: 167: else
 29845                           ;eusart2.c: 168: {
 29846                           ;eusart2.c: 169: PIE3bits.TX2IE = 0;
 29847  01AEF8  9D2C               	bcf	44,6,b	;volatile
 29848                           
 29849                           ; BSR set to: 14
 29850                           ;eusart2.c: 170: eusart2TxBuffer[eusart2TxHead++] = txData;
 29851  01AEFA  0101               	movlb	1	; () banked
 29852  01AEFC  51A6               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 29853  01AEFE  0D01               	mullw	1
 29854  01AF00  0E00               	movlw	low _eusart2TxBuffer
 29855  01AF02  24F3               	addwf	prodl,w,c
 29856  01AF04  6ED9               	movwf	fsr2l,c
 29857  01AF06  0E04               	movlw	high _eusart2TxBuffer
 29858  01AF08  20F4               	addwfc	prodh,w,c
 29859  01AF0A  6EDA               	movwf	fsr2h,c
 29860  01AF0C  C14F  FFDF         	movff	EUSART2_Write@txData,indf2
 29861                           
 29862                           ; BSR set to: 1
 29863  01AF10  2BA6               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 29864                           
 29865                           ; BSR set to: 1
 29866                           ;eusart2.c: 171: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 29867  01AF12  0E7F               	movlw	127
 29868  01AF14  65A6               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 29869  01AF16  D002               	goto	l441
 29870                           
 29871                           ; BSR set to: 1
 29872                           ;eusart2.c: 172: {
 29873                           ;eusart2.c: 173: eusart2TxHead = 0;
 29874  01AF18  0E00               	movlw	0
 29875  01AF1A  6FA6               	movwf	_eusart2TxHead& (0+255),b	;volatile
 29876  01AF1C                     l441:
 29877                           
 29878                           ; BSR set to: 1
 29879                           ;eusart2.c: 174: }
 29880                           ;eusart2.c: 175: eusart2TxBufferRemaining--;
 29881                           
 29882                           ; BSR set to: 1
 29883  01AF1C  07A4               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 29884  01AF1E                     l440:
 29885                           
 29886                           ;eusart2.c: 176: }
 29887                           ;eusart2.c: 177: PIE3bits.TX2IE = 1;
 29888                           
 29889                           ; BSR set to: 1
 29890  01AF1E  010E               	movlb	14	; () banked
 29891  01AF20  8D2C               	bsf	44,6,b	;volatile
 29892                           
 29893                           ; BSR set to: 14
 29894  01AF22  0012               	return		;funcret
 29895  01AF24                     __end_of_EUSART2_Write:
 29896                           	opt stack 0
 29897                           tosu	equ	0xFFF
 29898                           tosh	equ	0xFFE
 29899                           tosl	equ	0xFFD
 29900                           pclath	equ	0xFFA
 29901                           tblptru	equ	0xFF8
 29902                           tblptrh	equ	0xFF7
 29903                           tblptrl	equ	0xFF6
 29904                           tablat	equ	0xFF5
 29905                           prodh	equ	0xFF4
 29906                           prodl	equ	0xFF3
 29907                           intcon	equ	0xFF2
 29908                           indf0	equ	0xFEF
 29909                           postinc0	equ	0xFEE
 29910                           fsr0h	equ	0xFEA
 29911                           fsr0l	equ	0xFE9
 29912                           wreg	equ	0xFE8
 29913                           indf1	equ	0xFE7
 29914                           postdec1	equ	0xFE5
 29915                           plusw1	equ	0xFE3
 29916                           fsr1h	equ	0xFE2
 29917                           fsr1l	equ	0xFE1
 29918                           indf2	equ	0xFDF
 29919                           postinc2	equ	0xFDE
 29920                           postdec2	equ	0xFDD
 29921                           plusw2	equ	0xFDB
 29922                           fsr2h	equ	0xFDA
 29923                           fsr2l	equ	0xFD9
 29924                           status	equ	0xFD8
 29925                           
 29926 ;; *************** function _isdigit *****************
 29927 ;; Defined at:
 29928 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 29929 ;; Parameters:    Size  Location     Type
 29930 ;;  c               1    wreg     unsigned char 
 29931 ;; Auto vars:     Size  Location     Type
 29932 ;;  c               1   81[BANK1 ] unsigned char 
 29933 ;; Return value:  Size  Location     Type
 29934 ;;		None               void
 29935 ;; Registers used:
 29936 ;;		wreg, status,2, status,0
 29937 ;; Tracked objects:
 29938 ;;		On entry : 0/0
 29939 ;;		On exit  : 0/0
 29940 ;;		Unchanged: 0/0
 29941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29943 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29944 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29945 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29946 ;;Total ram usage:        3 bytes
 29947 ;; Hardware stack levels used:    1
 29948 ;; Hardware stack levels required when called:   19
 29949 ;; This function calls:
 29950 ;;		Nothing
 29951 ;; This function is called by:
 29952 ;;		__doprnt
 29953 ;;		_atoi
 29954 ;; This function uses a non-reentrant model
 29955 ;;
 29956                           
 29957                           	psect	text46
 29958  01BC90                     __ptext46:
 29959                           	opt stack 0
 29960  01BC90                     _isdigit:
 29961                           	opt stack 7
 29962                           
 29963                           ; BSR set to: 14
 29964                           ;incstack = 0
 29965                           ;isdigit@c stored from wreg
 29966  01BC90  0101               	movlb	1	; () banked
 29967  01BC92  6F51               	movwf	isdigit@c& (0+255),b
 29968  01BC94  0E00               	movlw	0
 29969  01BC96  0101               	movlb	1	; () banked
 29970  01BC98  6F50               	movwf	_isdigit$4697& (0+255),b
 29971                           
 29972                           ; BSR set to: 1
 29973  01BC9A  0E3A               	movlw	58
 29974  01BC9C  6151               	cpfslt	isdigit@c& (0+255),b
 29975  01BC9E  D005               	goto	l2715
 29976                           
 29977                           ; BSR set to: 1
 29978  01BCA0  0E2F               	movlw	47
 29979  01BCA2  6551               	cpfsgt	isdigit@c& (0+255),b
 29980  01BCA4  D002               	goto	l2715
 29981                           
 29982                           ; BSR set to: 1
 29983  01BCA6  0E01               	movlw	1
 29984  01BCA8  6F50               	movwf	_isdigit$4697& (0+255),b
 29985  01BCAA                     l2715:
 29986                           
 29987                           ; BSR set to: 1
 29988                           
 29989                           ; BSR set to: 1
 29990  01BCAA  C150  F14F         	movff	_isdigit$4697,??_isdigit
 29991  01BCAE  314F               	rrcf	??_isdigit& (0+255),w,b
 29992  01BCB0  0012               	return	
 29993  01BCB2                     __end_of_isdigit:
 29994                           	opt stack 0
 29995                           tosu	equ	0xFFF
 29996                           tosh	equ	0xFFE
 29997                           tosl	equ	0xFFD
 29998                           pclath	equ	0xFFA
 29999                           tblptru	equ	0xFF8
 30000                           tblptrh	equ	0xFF7
 30001                           tblptrl	equ	0xFF6
 30002                           tablat	equ	0xFF5
 30003                           prodh	equ	0xFF4
 30004                           prodl	equ	0xFF3
 30005                           intcon	equ	0xFF2
 30006                           indf0	equ	0xFEF
 30007                           postinc0	equ	0xFEE
 30008                           fsr0h	equ	0xFEA
 30009                           fsr0l	equ	0xFE9
 30010                           wreg	equ	0xFE8
 30011                           indf1	equ	0xFE7
 30012                           postdec1	equ	0xFE5
 30013                           plusw1	equ	0xFE3
 30014                           fsr1h	equ	0xFE2
 30015                           fsr1l	equ	0xFE1
 30016                           indf2	equ	0xFDF
 30017                           postinc2	equ	0xFDE
 30018                           postdec2	equ	0xFDD
 30019                           plusw2	equ	0xFDB
 30020                           fsr2h	equ	0xFDA
 30021                           fsr2l	equ	0xFD9
 30022                           status	equ	0xFD8
 30023                           
 30024 ;; *************** function _fround *****************
 30025 ;; Defined at:
 30026 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 30027 ;; Parameters:    Size  Location     Type
 30028 ;;  prec            1    wreg     unsigned char 
 30029 ;; Auto vars:     Size  Location     Type
 30030 ;;  prec            1   86[BANK2 ] unsigned char 
 30031 ;; Return value:  Size  Location     Type
 30032 ;;                  4   74[BANK2 ] unsigned char 
 30033 ;; Registers used:
 30034 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30035 ;; Tracked objects:
 30036 ;;		On entry : 0/0
 30037 ;;		On exit  : 0/0
 30038 ;;		Unchanged: 0/0
 30039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30040 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
 30041 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0
 30042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30043 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0
 30044 ;;Total ram usage:       13 bytes
 30045 ;; Hardware stack levels used:    1
 30046 ;; Hardware stack levels required when called:   20
 30047 ;; This function calls:
 30048 ;;		___awdiv
 30049 ;;		___awmod
 30050 ;;		___flmul
 30051 ;; This function is called by:
 30052 ;;		__doprnt
 30053 ;; This function uses a non-reentrant model
 30054 ;;
 30055                           
 30056                           	psect	text47
 30057  016BD4                     __ptext47:
 30058                           	opt stack 0
 30059  016BD4                     _fround:
 30060                           	opt stack 6
 30061                           
 30062                           ; BSR set to: 1
 30063                           ;incstack = 0
 30064                           ;fround@prec stored from wreg
 30065  016BD4  0102               	movlb	2	; () banked
 30066  016BD6  6F56               	movwf	fround@prec& (0+255),b
 30067                           
 30068                           ;doprnt.c: 413: if(prec>=110)
 30069  016BD8  0E6D               	movlw	109
 30070  016BDA  0102               	movlb	2	; () banked
 30071  016BDC  6556               	cpfsgt	fround@prec& (0+255),b
 30072  016BDE  D0BB               	goto	l2083
 30073                           
 30074                           ; BSR set to: 2
 30075                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 30076  016BE0  0E00               	movlw	0
 30077  016BE2  0101               	movlb	1	; () banked
 30078  016BE4  6F58               	movwf	(___awdiv@divisor+1)& (0+255),b
 30079  016BE6  0E0A               	movlw	10
 30080  016BE8  6F57               	movwf	___awdiv@divisor& (0+255),b
 30081  016BEA  0E00               	movlw	0
 30082  016BEC  6F52               	movwf	(___awmod@divisor+1)& (0+255),b
 30083  016BEE  0E64               	movlw	100
 30084  016BF0  6F51               	movwf	___awmod@divisor& (0+255),b
 30085  016BF2  C256  F14F         	movff	fround@prec,___awmod@dividend
 30086  016BF6  6B50               	clrf	(___awmod@dividend+1)& (0+255),b
 30087  016BF8  ECDC  F0D3         	call	___awmod	;wreg free
 30088  016BFC  C14F  F155         	movff	?___awmod,___awdiv@dividend
 30089  016C00  C150  F156         	movff	?___awmod+1,___awdiv@dividend+1
 30090  016C04  EC64  F0D1         	call	___awdiv	;wreg free
 30091  016C08  0101               	movlb	1	; () banked
 30092  016C0A  90D8               	bcf	status,0,c
 30093  016C0C  3755               	rlcf	?___awdiv& (0+255),f,b
 30094  016C0E  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 30095  016C10  90D8               	bcf	status,0,c
 30096  016C12  3755               	rlcf	?___awdiv& (0+255),f,b
 30097  016C14  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 30098  016C16  0E24               	movlw	36
 30099  016C18  2755               	addwf	?___awdiv& (0+255),f,b
 30100  016C1A  0E00               	movlw	0
 30101  016C1C  2356               	addwfc	(?___awdiv+1)& (0+255),f,b
 30102  016C1E  0E11               	movlw	low __npowers_
 30103  016C20  2555               	addwf	?___awdiv& (0+255),w,b
 30104  016C22  6EF6               	movwf	tblptrl,c
 30105  016C24  0ECE               	movlw	high __npowers_
 30106  016C26  2156               	addwfc	(?___awdiv+1)& (0+255),w,b
 30107  016C28  6EF7               	movwf	tblptrh,c
 30108  016C2A                     	if	1	;There are 3 active tblptr bytes
 30109  016C2A  6AF8               	clrf	tblptru,c
 30110  016C2C  0E00               	movlw	low (__mediumconst shr (0+16))
 30111  016C2E  22F8               	addwfc	tblptru,f,c
 30112  016C30                     	endif
 30113  016C30  0009               	tblrd		*+
 30114  016C32  CFF5 F235          	movff	tablat,___flmul@a
 30115  016C36  0009               	tblrd		*+
 30116  016C38  CFF5 F236          	movff	tablat,___flmul@a+1
 30117  016C3C  0009               	tblrd		*+
 30118  016C3E  CFF5 F237          	movff	tablat,___flmul@a+2
 30119  016C42  000A               	tblrd		*-
 30120  016C44  CFF5 F238          	movff	tablat,___flmul@a+3
 30121  016C48  0E00               	movlw	0
 30122  016C4A  6F58               	movwf	(___awdiv@divisor+1)& (0+255),b
 30123  016C4C  0E64               	movlw	100
 30124  016C4E  6F57               	movwf	___awdiv@divisor& (0+255),b
 30125  016C50  C256  F155         	movff	fround@prec,___awdiv@dividend
 30126  016C54  6B56               	clrf	(___awdiv@dividend+1)& (0+255),b
 30127  016C56  EC64  F0D1         	call	___awdiv	;wreg free
 30128  016C5A  0101               	movlb	1	; () banked
 30129  016C5C  90D8               	bcf	status,0,c
 30130  016C5E  3755               	rlcf	?___awdiv& (0+255),f,b
 30131  016C60  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 30132  016C62  90D8               	bcf	status,0,c
 30133  016C64  3755               	rlcf	?___awdiv& (0+255),f,b
 30134  016C66  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 30135  016C68  0E48               	movlw	72
 30136  016C6A  2755               	addwf	?___awdiv& (0+255),f,b
 30137  016C6C  0E00               	movlw	0
 30138  016C6E  2356               	addwfc	(?___awdiv+1)& (0+255),f,b
 30139  016C70  0E11               	movlw	low __npowers_
 30140  016C72  2555               	addwf	?___awdiv& (0+255),w,b
 30141  016C74  6EF6               	movwf	tblptrl,c
 30142  016C76  0ECE               	movlw	high __npowers_
 30143  016C78  2156               	addwfc	(?___awdiv+1)& (0+255),w,b
 30144  016C7A  6EF7               	movwf	tblptrh,c
 30145  016C7C                     	if	1	;There are 3 active tblptr bytes
 30146  016C7C  6AF8               	clrf	tblptru,c
 30147  016C7E  0E00               	movlw	low (__mediumconst shr (0+16))
 30148  016C80  22F8               	addwfc	tblptru,f,c
 30149  016C82                     	endif
 30150  016C82  0009               	tblrd		*+
 30151  016C84  CFF5 F231          	movff	tablat,___flmul@b
 30152  016C88  0009               	tblrd		*+
 30153  016C8A  CFF5 F232          	movff	tablat,___flmul@b+1
 30154  016C8E  0009               	tblrd		*+
 30155  016C90  CFF5 F233          	movff	tablat,___flmul@b+2
 30156  016C94  000A               	tblrd		*-
 30157  016C96  CFF5 F234          	movff	tablat,___flmul@b+3
 30158  016C9A  EC5C  F0AC         	call	___flmul	;wreg free
 30159  016C9E  C231  F252         	movff	?___flmul,_fround$5588
 30160  016CA2  C232  F253         	movff	?___flmul+1,_fround$5588+1
 30161  016CA6  C233  F254         	movff	?___flmul+2,_fround$5588+2
 30162  016CAA  C234  F255         	movff	?___flmul+3,_fround$5588+3
 30163                           
 30164                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 30165  016CAE  0E00               	movlw	0
 30166  016CB0  0101               	movlb	1	; () banked
 30167  016CB2  6F52               	movwf	(___awmod@divisor+1)& (0+255),b
 30168  016CB4  0E0A               	movlw	10
 30169  016CB6  6F51               	movwf	___awmod@divisor& (0+255),b
 30170  016CB8  C256  F14F         	movff	fround@prec,___awmod@dividend
 30171  016CBC  6B50               	clrf	(___awmod@dividend+1)& (0+255),b
 30172  016CBE  ECDC  F0D3         	call	___awmod	;wreg free
 30173  016CC2  0101               	movlb	1	; () banked
 30174  016CC4  90D8               	bcf	status,0,c
 30175  016CC6  374F               	rlcf	?___awmod& (0+255),f,b
 30176  016CC8  3750               	rlcf	(?___awmod+1)& (0+255),f,b
 30177  016CCA  90D8               	bcf	status,0,c
 30178  016CCC  374F               	rlcf	?___awmod& (0+255),f,b
 30179  016CCE  3750               	rlcf	(?___awmod+1)& (0+255),f,b
 30180  016CD0  0E11               	movlw	low __npowers_
 30181  016CD2  254F               	addwf	?___awmod& (0+255),w,b
 30182  016CD4  6EF6               	movwf	tblptrl,c
 30183  016CD6  0ECE               	movlw	high __npowers_
 30184  016CD8  2150               	addwfc	(?___awmod+1)& (0+255),w,b
 30185  016CDA  6EF7               	movwf	tblptrh,c
 30186  016CDC                     	if	1	;There are 3 active tblptr bytes
 30187  016CDC  6AF8               	clrf	tblptru,c
 30188  016CDE  0E00               	movlw	low (__mediumconst shr (0+16))
 30189  016CE0  22F8               	addwfc	tblptru,f,c
 30190  016CE2                     	endif
 30191  016CE2  0009               	tblrd		*+
 30192  016CE4  CFF5 F235          	movff	tablat,___flmul@a
 30193  016CE8  0009               	tblrd		*+
 30194  016CEA  CFF5 F236          	movff	tablat,___flmul@a+1
 30195  016CEE  0009               	tblrd		*+
 30196  016CF0  CFF5 F237          	movff	tablat,___flmul@a+2
 30197  016CF4  000A               	tblrd		*-
 30198  016CF6  CFF5 F238          	movff	tablat,___flmul@a+3
 30199  016CFA  C252  F231         	movff	_fround$5588,___flmul@b
 30200  016CFE  C253  F232         	movff	_fround$5588+1,___flmul@b+1
 30201  016D02  C254  F233         	movff	_fround$5588+2,___flmul@b+2
 30202  016D06  C255  F234         	movff	_fround$5588+3,___flmul@b+3
 30203  016D0A  EC5C  F0AC         	call	___flmul	;wreg free
 30204  016D0E  C231  F24E         	movff	?___flmul,_fround$5589
 30205  016D12  C232  F24F         	movff	?___flmul+1,_fround$5589+1
 30206  016D16  C233  F250         	movff	?___flmul+2,_fround$5589+2
 30207  016D1A  C234  F251         	movff	?___flmul+3,_fround$5589+3
 30208                           
 30209                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 30210  016D1E  C24E  F231         	movff	_fround$5589,___flmul@b
 30211  016D22  C24F  F232         	movff	_fround$5589+1,___flmul@b+1
 30212  016D26  C250  F233         	movff	_fround$5589+2,___flmul@b+2
 30213  016D2A  C251  F234         	movff	_fround$5589+3,___flmul@b+3
 30214  016D2E  0E00               	movlw	0
 30215  016D30  0102               	movlb	2	; () banked
 30216  016D32  6F35               	movwf	___flmul@a& (0+255),b
 30217  016D34  0E00               	movlw	0
 30218  016D36  6F36               	movwf	(___flmul@a+1)& (0+255),b
 30219  016D38  0E00               	movlw	0
 30220  016D3A  6F37               	movwf	(___flmul@a+2)& (0+255),b
 30221  016D3C  0E3F               	movlw	63
 30222  016D3E  6F38               	movwf	(___flmul@a+3)& (0+255),b
 30223  016D40  EC5C  F0AC         	call	___flmul	;wreg free
 30224  016D44  C231  F24A         	movff	?___flmul,?_fround
 30225  016D48  C232  F24B         	movff	?___flmul+1,?_fround+1
 30226  016D4C  C233  F24C         	movff	?___flmul+2,?_fround+2
 30227  016D50  C234  F24D         	movff	?___flmul+3,?_fround+3
 30228  016D54  0012               	return	
 30229  016D56                     l2083:
 30230                           
 30231                           ;doprnt.c: 415: else if(prec > 10)
 30232  016D56  0E0A               	movlw	10
 30233  016D58  0102               	movlb	2	; () banked
 30234  016D5A  6556               	cpfsgt	fround@prec& (0+255),b
 30235  016D5C  D075               	goto	l2086
 30236                           
 30237                           ; BSR set to: 2
 30238                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 30239  016D5E  0E00               	movlw	0
 30240  016D60  0101               	movlb	1	; () banked
 30241  016D62  6F52               	movwf	(___awmod@divisor+1)& (0+255),b
 30242  016D64  0E0A               	movlw	10
 30243  016D66  6F51               	movwf	___awmod@divisor& (0+255),b
 30244  016D68  C256  F14F         	movff	fround@prec,___awmod@dividend
 30245  016D6C  6B50               	clrf	(___awmod@dividend+1)& (0+255),b
 30246  016D6E  ECDC  F0D3         	call	___awmod	;wreg free
 30247  016D72  0101               	movlb	1	; () banked
 30248  016D74  90D8               	bcf	status,0,c
 30249  016D76  374F               	rlcf	?___awmod& (0+255),f,b
 30250  016D78  3750               	rlcf	(?___awmod+1)& (0+255),f,b
 30251  016D7A  90D8               	bcf	status,0,c
 30252  016D7C  374F               	rlcf	?___awmod& (0+255),f,b
 30253  016D7E  3750               	rlcf	(?___awmod+1)& (0+255),f,b
 30254  016D80  0E11               	movlw	low __npowers_
 30255  016D82  254F               	addwf	?___awmod& (0+255),w,b
 30256  016D84  6EF6               	movwf	tblptrl,c
 30257  016D86  0ECE               	movlw	high __npowers_
 30258  016D88  2150               	addwfc	(?___awmod+1)& (0+255),w,b
 30259  016D8A  6EF7               	movwf	tblptrh,c
 30260  016D8C                     	if	1	;There are 3 active tblptr bytes
 30261  016D8C  6AF8               	clrf	tblptru,c
 30262  016D8E  0E00               	movlw	low (__mediumconst shr (0+16))
 30263  016D90  22F8               	addwfc	tblptru,f,c
 30264  016D92                     	endif
 30265  016D92  0009               	tblrd		*+
 30266  016D94  CFF5 F235          	movff	tablat,___flmul@a
 30267  016D98  0009               	tblrd		*+
 30268  016D9A  CFF5 F236          	movff	tablat,___flmul@a+1
 30269  016D9E  0009               	tblrd		*+
 30270  016DA0  CFF5 F237          	movff	tablat,___flmul@a+2
 30271  016DA4  000A               	tblrd		*-
 30272  016DA6  CFF5 F238          	movff	tablat,___flmul@a+3
 30273  016DAA  0E00               	movlw	0
 30274  016DAC  6F58               	movwf	(___awdiv@divisor+1)& (0+255),b
 30275  016DAE  0E0A               	movlw	10
 30276  016DB0  6F57               	movwf	___awdiv@divisor& (0+255),b
 30277  016DB2  C256  F155         	movff	fround@prec,___awdiv@dividend
 30278  016DB6  6B56               	clrf	(___awdiv@dividend+1)& (0+255),b
 30279  016DB8  EC64  F0D1         	call	___awdiv	;wreg free
 30280  016DBC  0101               	movlb	1	; () banked
 30281  016DBE  90D8               	bcf	status,0,c
 30282  016DC0  3755               	rlcf	?___awdiv& (0+255),f,b
 30283  016DC2  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 30284  016DC4  90D8               	bcf	status,0,c
 30285  016DC6  3755               	rlcf	?___awdiv& (0+255),f,b
 30286  016DC8  3756               	rlcf	(?___awdiv+1)& (0+255),f,b
 30287  016DCA  0E24               	movlw	36
 30288  016DCC  2755               	addwf	?___awdiv& (0+255),f,b
 30289  016DCE  0E00               	movlw	0
 30290  016DD0  2356               	addwfc	(?___awdiv+1)& (0+255),f,b
 30291  016DD2  0E11               	movlw	low __npowers_
 30292  016DD4  2555               	addwf	?___awdiv& (0+255),w,b
 30293  016DD6  6EF6               	movwf	tblptrl,c
 30294  016DD8  0ECE               	movlw	high __npowers_
 30295  016DDA  2156               	addwfc	(?___awdiv+1)& (0+255),w,b
 30296  016DDC  6EF7               	movwf	tblptrh,c
 30297  016DDE                     	if	1	;There are 3 active tblptr bytes
 30298  016DDE  6AF8               	clrf	tblptru,c
 30299  016DE0  0E00               	movlw	low (__mediumconst shr (0+16))
 30300  016DE2  22F8               	addwfc	tblptru,f,c
 30301  016DE4                     	endif
 30302  016DE4  0009               	tblrd		*+
 30303  016DE6  CFF5 F231          	movff	tablat,___flmul@b
 30304  016DEA  0009               	tblrd		*+
 30305  016DEC  CFF5 F232          	movff	tablat,___flmul@b+1
 30306  016DF0  0009               	tblrd		*+
 30307  016DF2  CFF5 F233          	movff	tablat,___flmul@b+2
 30308  016DF6  000A               	tblrd		*-
 30309  016DF8  CFF5 F234          	movff	tablat,___flmul@b+3
 30310  016DFC  EC5C  F0AC         	call	___flmul	;wreg free
 30311  016E00  C231  F252         	movff	?___flmul,_fround$5588
 30312  016E04  C232  F253         	movff	?___flmul+1,_fround$5588+1
 30313  016E08  C233  F254         	movff	?___flmul+2,_fround$5588+2
 30314  016E0C  C234  F255         	movff	?___flmul+3,_fround$5588+3
 30315                           
 30316                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 30317  016E10  C252  F231         	movff	_fround$5588,___flmul@b
 30318  016E14  C253  F232         	movff	_fround$5588+1,___flmul@b+1
 30319  016E18  C254  F233         	movff	_fround$5588+2,___flmul@b+2
 30320  016E1C  C255  F234         	movff	_fround$5588+3,___flmul@b+3
 30321  016E20  0E00               	movlw	0
 30322  016E22  0102               	movlb	2	; () banked
 30323  016E24  6F35               	movwf	___flmul@a& (0+255),b
 30324  016E26  0E00               	movlw	0
 30325  016E28  6F36               	movwf	(___flmul@a+1)& (0+255),b
 30326  016E2A  0E00               	movlw	0
 30327  016E2C  6F37               	movwf	(___flmul@a+2)& (0+255),b
 30328  016E2E  0E3F               	movlw	63
 30329  016E30  6F38               	movwf	(___flmul@a+3)& (0+255),b
 30330  016E32  EC5C  F0AC         	call	___flmul	;wreg free
 30331  016E36  C231  F24A         	movff	?___flmul,?_fround
 30332  016E3A  C232  F24B         	movff	?___flmul+1,?_fround+1
 30333  016E3E  C233  F24C         	movff	?___flmul+2,?_fround+2
 30334  016E42  C234  F24D         	movff	?___flmul+3,?_fround+3
 30335  016E46  0012               	return	
 30336  016E48                     l2086:
 30337                           
 30338                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 30339  016E48  0102               	movlb	2	; () banked
 30340  016E4A  5156               	movf	fround@prec& (0+255),w,b
 30341  016E4C  0D04               	mullw	4
 30342  016E4E  0E11               	movlw	low __npowers_
 30343  016E50  24F3               	addwf	prodl,w,c
 30344  016E52  6EF6               	movwf	tblptrl,c
 30345  016E54  0ECE               	movlw	high __npowers_
 30346  016E56  20F4               	addwfc	prodh,w,c
 30347  016E58  6EF7               	movwf	tblptrh,c
 30348  016E5A                     	if	1	;There are 3 active tblptr bytes
 30349  016E5A  6AF8               	clrf	tblptru,c
 30350  016E5C  0E00               	movlw	low (__mediumconst shr (0+16))
 30351  016E5E  22F8               	addwfc	tblptru,f,c
 30352  016E60                     	endif
 30353  016E60  0009               	tblrd		*+
 30354  016E62  CFF5 F231          	movff	tablat,___flmul@b
 30355  016E66  0009               	tblrd		*+
 30356  016E68  CFF5 F232          	movff	tablat,___flmul@b+1
 30357  016E6C  0009               	tblrd		*+
 30358  016E6E  CFF5 F233          	movff	tablat,___flmul@b+2
 30359  016E72  000A               	tblrd		*-
 30360  016E74  CFF5 F234          	movff	tablat,___flmul@b+3
 30361  016E78  0E00               	movlw	0
 30362  016E7A  6F35               	movwf	___flmul@a& (0+255),b
 30363  016E7C  0E00               	movlw	0
 30364  016E7E  6F36               	movwf	(___flmul@a+1)& (0+255),b
 30365  016E80  0E00               	movlw	0
 30366  016E82  6F37               	movwf	(___flmul@a+2)& (0+255),b
 30367  016E84  0E3F               	movlw	63
 30368  016E86  6F38               	movwf	(___flmul@a+3)& (0+255),b
 30369  016E88  EC5C  F0AC         	call	___flmul	;wreg free
 30370  016E8C  C231  F24A         	movff	?___flmul,?_fround
 30371  016E90  C232  F24B         	movff	?___flmul+1,?_fround+1
 30372  016E94  C233  F24C         	movff	?___flmul+2,?_fround+2
 30373  016E98  C234  F24D         	movff	?___flmul+3,?_fround+3
 30374  016E9C  0012               	return	
 30375  016E9E                     __end_of_fround:
 30376                           	opt stack 0
 30377                           tosu	equ	0xFFF
 30378                           tosh	equ	0xFFE
 30379                           tosl	equ	0xFFD
 30380                           pclath	equ	0xFFA
 30381                           tblptru	equ	0xFF8
 30382                           tblptrh	equ	0xFF7
 30383                           tblptrl	equ	0xFF6
 30384                           tablat	equ	0xFF5
 30385                           prodh	equ	0xFF4
 30386                           prodl	equ	0xFF3
 30387                           intcon	equ	0xFF2
 30388                           indf0	equ	0xFEF
 30389                           postinc0	equ	0xFEE
 30390                           fsr0h	equ	0xFEA
 30391                           fsr0l	equ	0xFE9
 30392                           wreg	equ	0xFE8
 30393                           indf1	equ	0xFE7
 30394                           postdec1	equ	0xFE5
 30395                           plusw1	equ	0xFE3
 30396                           fsr1h	equ	0xFE2
 30397                           fsr1l	equ	0xFE1
 30398                           indf2	equ	0xFDF
 30399                           postinc2	equ	0xFDE
 30400                           postdec2	equ	0xFDD
 30401                           plusw2	equ	0xFDB
 30402                           fsr2h	equ	0xFDA
 30403                           fsr2l	equ	0xFD9
 30404                           status	equ	0xFD8
 30405                           
 30406 ;; *************** function ___flmul *****************
 30407 ;; Defined at:
 30408 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 30409 ;; Parameters:    Size  Location     Type
 30410 ;;  b               4   49[BANK2 ] unsigned char 
 30411 ;;  a               4   53[BANK2 ] unsigned char 
 30412 ;; Auto vars:     Size  Location     Type
 30413 ;;  prod            4   68[BANK2 ] struct .
 30414 ;;  grs             4   63[BANK2 ] unsigned long 
 30415 ;;  temp            2   72[BANK2 ] struct .
 30416 ;;  bexp            1   67[BANK2 ] unsigned char 
 30417 ;;  aexp            1   62[BANK2 ] unsigned char 
 30418 ;;  sign            1   61[BANK2 ] unsigned char 
 30419 ;; Return value:  Size  Location     Type
 30420 ;;                  4   49[BANK2 ] unsigned char 
 30421 ;; Registers used:
 30422 ;;		wreg, status,2, status,0, prodl, prodh
 30423 ;; Tracked objects:
 30424 ;;		On entry : 0/0
 30425 ;;		On exit  : 0/0
 30426 ;;		Unchanged: 0/0
 30427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30428 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0
 30429 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0
 30430 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
 30431 ;;      Totals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0
 30432 ;;Total ram usage:       25 bytes
 30433 ;; Hardware stack levels used:    1
 30434 ;; Hardware stack levels required when called:   19
 30435 ;; This function calls:
 30436 ;;		Nothing
 30437 ;; This function is called by:
 30438 ;;		_ringBufferLUT
 30439 ;;		_fround
 30440 ;;		_scale
 30441 ;;		__doprnt
 30442 ;;		_ftoa
 30443 ;; This function uses a non-reentrant model
 30444 ;;
 30445                           
 30446                           	psect	text48
 30447  0158B8                     __ptext48:
 30448                           	opt stack 0
 30449  0158B8                     ___flmul:
 30450                           	opt stack 6
 30451                           
 30452                           ;incstack = 0
 30453  0158B8  0102               	movlb	2	; () banked
 30454  0158BA  5134               	movf	(___flmul@b+3)& (0+255),w,b
 30455  0158BC  0B80               	andlw	128
 30456  0158BE  6F3D               	movwf	___flmul@sign& (0+255),b
 30457  0158C0  5134               	movf	(___flmul@b+3)& (0+255),w,b
 30458  0158C2  2534               	addwf	(___flmul@b+3)& (0+255),w,b
 30459  0158C4  6F43               	movwf	___flmul@bexp& (0+255),b
 30460                           
 30461                           ; BSR set to: 2
 30462  0158C6  BF33               	btfsc	(___flmul@b+2)& (0+255),7,b
 30463                           
 30464                           ; BSR set to: 2
 30465  0158C8  8143               	bsf	___flmul@bexp& (0+255),0,b
 30466                           
 30467                           ; BSR set to: 2
 30468                           
 30469                           ; BSR set to: 2
 30470  0158CA  5143               	movf	___flmul@bexp& (0+255),w,b
 30471  0158CC  B4D8               	btfsc	status,2,c
 30472  0158CE  D00D               	goto	l2962
 30473                           
 30474                           ; BSR set to: 2
 30475  0158D0  2943               	incf	___flmul@bexp& (0+255),w,b
 30476  0158D2  A4D8               	btfss	status,2,c
 30477  0158D4  D008               	goto	l2963
 30478                           
 30479                           ; BSR set to: 2
 30480  0158D6  0E00               	movlw	0
 30481  0158D8  6F31               	movwf	___flmul@b& (0+255),b
 30482  0158DA  0E00               	movlw	0
 30483  0158DC  6F32               	movwf	(___flmul@b+1)& (0+255),b
 30484  0158DE  0E00               	movlw	0
 30485  0158E0  6F33               	movwf	(___flmul@b+2)& (0+255),b
 30486  0158E2  0E00               	movlw	0
 30487  0158E4  6F34               	movwf	(___flmul@b+3)& (0+255),b
 30488  0158E6                     l2963:
 30489                           
 30490                           ; BSR set to: 2
 30491                           
 30492                           ; BSR set to: 2
 30493  0158E6  8F33               	bsf	(___flmul@b+2)& (0+255),7,b
 30494  0158E8  D008               	goto	l2964
 30495  0158EA                     l2962:
 30496                           
 30497                           ; BSR set to: 2
 30498                           
 30499                           ; BSR set to: 2
 30500  0158EA  0E00               	movlw	0
 30501  0158EC  6F31               	movwf	___flmul@b& (0+255),b
 30502  0158EE  0E00               	movlw	0
 30503  0158F0  6F32               	movwf	(___flmul@b+1)& (0+255),b
 30504  0158F2  0E00               	movlw	0
 30505  0158F4  6F33               	movwf	(___flmul@b+2)& (0+255),b
 30506  0158F6  0E00               	movlw	0
 30507  0158F8  6F34               	movwf	(___flmul@b+3)& (0+255),b
 30508  0158FA                     l2964:
 30509                           
 30510                           ; BSR set to: 2
 30511                           
 30512                           ; BSR set to: 2
 30513  0158FA  5138               	movf	(___flmul@a+3)& (0+255),w,b
 30514  0158FC  0B80               	andlw	128
 30515  0158FE  1B3D               	xorwf	___flmul@sign& (0+255),f,b
 30516                           
 30517                           ; BSR set to: 2
 30518  015900  5138               	movf	(___flmul@a+3)& (0+255),w,b
 30519  015902  2538               	addwf	(___flmul@a+3)& (0+255),w,b
 30520  015904  6F3E               	movwf	___flmul@aexp& (0+255),b
 30521                           
 30522                           ; BSR set to: 2
 30523  015906  BF37               	btfsc	(___flmul@a+2)& (0+255),7,b
 30524                           
 30525                           ; BSR set to: 2
 30526  015908  813E               	bsf	___flmul@aexp& (0+255),0,b
 30527                           
 30528                           ; BSR set to: 2
 30529                           
 30530                           ; BSR set to: 2
 30531  01590A  513E               	movf	___flmul@aexp& (0+255),w,b
 30532  01590C  B4D8               	btfsc	status,2,c
 30533  01590E  D00D               	goto	l2966
 30534                           
 30535                           ; BSR set to: 2
 30536  015910  293E               	incf	___flmul@aexp& (0+255),w,b
 30537  015912  A4D8               	btfss	status,2,c
 30538  015914  D008               	goto	l2967
 30539                           
 30540                           ; BSR set to: 2
 30541  015916  0E00               	movlw	0
 30542  015918  6F35               	movwf	___flmul@a& (0+255),b
 30543  01591A  0E00               	movlw	0
 30544  01591C  6F36               	movwf	(___flmul@a+1)& (0+255),b
 30545  01591E  0E00               	movlw	0
 30546  015920  6F37               	movwf	(___flmul@a+2)& (0+255),b
 30547  015922  0E00               	movlw	0
 30548  015924  6F38               	movwf	(___flmul@a+3)& (0+255),b
 30549  015926                     l2967:
 30550                           
 30551                           ; BSR set to: 2
 30552                           
 30553                           ; BSR set to: 2
 30554  015926  8F37               	bsf	(___flmul@a+2)& (0+255),7,b
 30555  015928  D008               	goto	l2968
 30556  01592A                     l2966:
 30557                           
 30558                           ; BSR set to: 2
 30559                           
 30560                           ; BSR set to: 2
 30561  01592A  0E00               	movlw	0
 30562  01592C  6F35               	movwf	___flmul@a& (0+255),b
 30563  01592E  0E00               	movlw	0
 30564  015930  6F36               	movwf	(___flmul@a+1)& (0+255),b
 30565  015932  0E00               	movlw	0
 30566  015934  6F37               	movwf	(___flmul@a+2)& (0+255),b
 30567  015936  0E00               	movlw	0
 30568  015938  6F38               	movwf	(___flmul@a+3)& (0+255),b
 30569  01593A                     l2968:
 30570                           
 30571                           ; BSR set to: 2
 30572  01593A  513E               	movf	___flmul@aexp& (0+255),w,b
 30573  01593C  B4D8               	btfsc	status,2,c
 30574  01593E  D003               	goto	u18420
 30575                           
 30576                           ; BSR set to: 2
 30577  015940  5143               	movf	___flmul@bexp& (0+255),w,b
 30578  015942  A4D8               	btfss	status,2,c
 30579  015944  D009               	goto	l2969
 30580  015946                     u18420:
 30581                           
 30582                           ; BSR set to: 2
 30583                           
 30584                           ; BSR set to: 2
 30585  015946  0E00               	movlw	0
 30586  015948  6F31               	movwf	?___flmul& (0+255),b
 30587  01594A  0E00               	movlw	0
 30588  01594C  6F32               	movwf	(?___flmul+1)& (0+255),b
 30589  01594E  0E00               	movlw	0
 30590  015950  6F33               	movwf	(?___flmul+2)& (0+255),b
 30591  015952  0E00               	movlw	0
 30592  015954  6F34               	movwf	(?___flmul+3)& (0+255),b
 30593                           
 30594                           ; BSR set to: 2
 30595  015956  0012               	return	
 30596  015958                     l2969:
 30597                           
 30598                           ; BSR set to: 2
 30599                           
 30600                           ; BSR set to: 2
 30601  015958  5137               	movf	(___flmul@a+2)& (0+255),w,b
 30602  01595A  0331               	mulwf	___flmul@b& (0+255),b
 30603  01595C  CFF3 F248          	movff	prodl,___flmul@temp
 30604  015960  CFF4 F249          	movff	prodh,___flmul@temp+1
 30605                           
 30606                           ; BSR set to: 2
 30607  015964  5148               	movf	___flmul@temp& (0+255),w,b
 30608  015966  6F3F               	movwf	___flmul@grs& (0+255),b
 30609  015968  6B40               	clrf	(___flmul@grs+1)& (0+255),b
 30610  01596A  6B41               	clrf	(___flmul@grs+2)& (0+255),b
 30611  01596C  6B42               	clrf	(___flmul@grs+3)& (0+255),b
 30612                           
 30613                           ; BSR set to: 2
 30614  01596E  5149               	movf	(___flmul@temp+1)& (0+255),w,b
 30615  015970  6F44               	movwf	___flmul@prod& (0+255),b
 30616  015972  6B45               	clrf	(___flmul@prod+1)& (0+255),b
 30617  015974  6B46               	clrf	(___flmul@prod+2)& (0+255),b
 30618  015976  6B47               	clrf	(___flmul@prod+3)& (0+255),b
 30619  015978  5136               	movf	(___flmul@a+1)& (0+255),w,b
 30620  01597A  0332               	mulwf	(___flmul@b+1)& (0+255),b
 30621  01597C  CFF3 F248          	movff	prodl,___flmul@temp
 30622  015980  CFF4 F249          	movff	prodh,___flmul@temp+1
 30623                           
 30624                           ; BSR set to: 2
 30625  015984  5148               	movf	___flmul@temp& (0+255),w,b
 30626  015986  273F               	addwf	___flmul@grs& (0+255),f,b
 30627  015988  0E00               	movlw	0
 30628  01598A  2340               	addwfc	(___flmul@grs+1)& (0+255),f,b
 30629  01598C  2341               	addwfc	(___flmul@grs+2)& (0+255),f,b
 30630  01598E  2342               	addwfc	(___flmul@grs+3)& (0+255),f,b
 30631                           
 30632                           ; BSR set to: 2
 30633  015990  5149               	movf	(___flmul@temp+1)& (0+255),w,b
 30634  015992  2744               	addwf	___flmul@prod& (0+255),f,b
 30635  015994  0E00               	movlw	0
 30636  015996  2345               	addwfc	(___flmul@prod+1)& (0+255),f,b
 30637  015998  2346               	addwfc	(___flmul@prod+2)& (0+255),f,b
 30638  01599A  2347               	addwfc	(___flmul@prod+3)& (0+255),f,b
 30639  01599C  5135               	movf	___flmul@a& (0+255),w,b
 30640  01599E  0333               	mulwf	(___flmul@b+2)& (0+255),b
 30641  0159A0  CFF3 F248          	movff	prodl,___flmul@temp
 30642  0159A4  CFF4 F249          	movff	prodh,___flmul@temp+1
 30643                           
 30644                           ; BSR set to: 2
 30645  0159A8  5148               	movf	___flmul@temp& (0+255),w,b
 30646  0159AA  273F               	addwf	___flmul@grs& (0+255),f,b
 30647  0159AC  0E00               	movlw	0
 30648  0159AE  2340               	addwfc	(___flmul@grs+1)& (0+255),f,b
 30649  0159B0  2341               	addwfc	(___flmul@grs+2)& (0+255),f,b
 30650  0159B2  2342               	addwfc	(___flmul@grs+3)& (0+255),f,b
 30651                           
 30652                           ; BSR set to: 2
 30653  0159B4  5149               	movf	(___flmul@temp+1)& (0+255),w,b
 30654  0159B6  2744               	addwf	___flmul@prod& (0+255),f,b
 30655  0159B8  0E00               	movlw	0
 30656  0159BA  2345               	addwfc	(___flmul@prod+1)& (0+255),f,b
 30657  0159BC  2346               	addwfc	(___flmul@prod+2)& (0+255),f,b
 30658  0159BE  2347               	addwfc	(___flmul@prod+3)& (0+255),f,b
 30659                           
 30660                           ; BSR set to: 2
 30661  0159C0  C241  F242         	movff	___flmul@grs+2,___flmul@grs+3
 30662  0159C4  C240  F241         	movff	___flmul@grs+1,___flmul@grs+2
 30663  0159C8  C23F  F240         	movff	___flmul@grs,___flmul@grs+1
 30664  0159CC  6B3F               	clrf	___flmul@grs& (0+255),b
 30665                           
 30666                           ; BSR set to: 2
 30667  0159CE  5135               	movf	___flmul@a& (0+255),w,b
 30668  0159D0  0332               	mulwf	(___flmul@b+1)& (0+255),b
 30669  0159D2  CFF3 F248          	movff	prodl,___flmul@temp
 30670  0159D6  CFF4 F249          	movff	prodh,___flmul@temp+1
 30671                           
 30672                           ; BSR set to: 2
 30673  0159DA  5148               	movf	___flmul@temp& (0+255),w,b
 30674  0159DC  273F               	addwf	___flmul@grs& (0+255),f,b
 30675  0159DE  5149               	movf	(___flmul@temp+1)& (0+255),w,b
 30676  0159E0  2340               	addwfc	(___flmul@grs+1)& (0+255),f,b
 30677  0159E2  0E00               	movlw	0
 30678  0159E4  2341               	addwfc	(___flmul@grs+2)& (0+255),f,b
 30679  0159E6  0E00               	movlw	0
 30680  0159E8  2342               	addwfc	(___flmul@grs+3)& (0+255),f,b
 30681                           
 30682                           ; BSR set to: 2
 30683  0159EA  5136               	movf	(___flmul@a+1)& (0+255),w,b
 30684  0159EC  0331               	mulwf	___flmul@b& (0+255),b
 30685  0159EE  CFF3 F248          	movff	prodl,___flmul@temp
 30686  0159F2  CFF4 F249          	movff	prodh,___flmul@temp+1
 30687                           
 30688                           ; BSR set to: 2
 30689  0159F6  5148               	movf	___flmul@temp& (0+255),w,b
 30690  0159F8  273F               	addwf	___flmul@grs& (0+255),f,b
 30691  0159FA  5149               	movf	(___flmul@temp+1)& (0+255),w,b
 30692  0159FC  2340               	addwfc	(___flmul@grs+1)& (0+255),f,b
 30693  0159FE  0E00               	movlw	0
 30694  015A00  2341               	addwfc	(___flmul@grs+2)& (0+255),f,b
 30695  015A02  0E00               	movlw	0
 30696  015A04  2342               	addwfc	(___flmul@grs+3)& (0+255),f,b
 30697                           
 30698                           ; BSR set to: 2
 30699  015A06  C241  F242         	movff	___flmul@grs+2,___flmul@grs+3
 30700  015A0A  C240  F241         	movff	___flmul@grs+1,___flmul@grs+2
 30701  015A0E  C23F  F240         	movff	___flmul@grs,___flmul@grs+1
 30702  015A12  6B3F               	clrf	___flmul@grs& (0+255),b
 30703  015A14  5135               	movf	___flmul@a& (0+255),w,b
 30704  015A16  0331               	mulwf	___flmul@b& (0+255),b
 30705  015A18  CFF3 F248          	movff	prodl,___flmul@temp
 30706  015A1C  CFF4 F249          	movff	prodh,___flmul@temp+1
 30707                           
 30708                           ; BSR set to: 2
 30709  015A20  5148               	movf	___flmul@temp& (0+255),w,b
 30710  015A22  273F               	addwf	___flmul@grs& (0+255),f,b
 30711  015A24  5149               	movf	(___flmul@temp+1)& (0+255),w,b
 30712  015A26  2340               	addwfc	(___flmul@grs+1)& (0+255),f,b
 30713  015A28  0E00               	movlw	0
 30714  015A2A  2341               	addwfc	(___flmul@grs+2)& (0+255),f,b
 30715  015A2C  0E00               	movlw	0
 30716  015A2E  2342               	addwfc	(___flmul@grs+3)& (0+255),f,b
 30717                           
 30718                           ; BSR set to: 2
 30719  015A30  5137               	movf	(___flmul@a+2)& (0+255),w,b
 30720  015A32  0332               	mulwf	(___flmul@b+1)& (0+255),b
 30721  015A34  CFF3 F248          	movff	prodl,___flmul@temp
 30722  015A38  CFF4 F249          	movff	prodh,___flmul@temp+1
 30723  015A3C  5148               	movf	___flmul@temp& (0+255),w,b
 30724  015A3E  2744               	addwf	___flmul@prod& (0+255),f,b
 30725  015A40  5149               	movf	(___flmul@temp+1)& (0+255),w,b
 30726  015A42  2345               	addwfc	(___flmul@prod+1)& (0+255),f,b
 30727  015A44  0E00               	movlw	0
 30728  015A46  2346               	addwfc	(___flmul@prod+2)& (0+255),f,b
 30729  015A48  0E00               	movlw	0
 30730  015A4A  2347               	addwfc	(___flmul@prod+3)& (0+255),f,b
 30731                           
 30732                           ; BSR set to: 2
 30733  015A4C  5136               	movf	(___flmul@a+1)& (0+255),w,b
 30734  015A4E  0333               	mulwf	(___flmul@b+2)& (0+255),b
 30735  015A50  CFF3 F248          	movff	prodl,___flmul@temp
 30736  015A54  CFF4 F249          	movff	prodh,___flmul@temp+1
 30737                           
 30738                           ; BSR set to: 2
 30739  015A58  5148               	movf	___flmul@temp& (0+255),w,b
 30740  015A5A  2744               	addwf	___flmul@prod& (0+255),f,b
 30741  015A5C  5149               	movf	(___flmul@temp+1)& (0+255),w,b
 30742  015A5E  2345               	addwfc	(___flmul@prod+1)& (0+255),f,b
 30743  015A60  0E00               	movlw	0
 30744  015A62  2346               	addwfc	(___flmul@prod+2)& (0+255),f,b
 30745  015A64  0E00               	movlw	0
 30746  015A66  2347               	addwfc	(___flmul@prod+3)& (0+255),f,b
 30747  015A68  5137               	movf	(___flmul@a+2)& (0+255),w,b
 30748  015A6A  0333               	mulwf	(___flmul@b+2)& (0+255),b
 30749  015A6C  CFF3 F248          	movff	prodl,___flmul@temp
 30750  015A70  CFF4 F249          	movff	prodh,___flmul@temp+1
 30751                           
 30752                           ; BSR set to: 2
 30753  015A74  5148               	movf	___flmul@temp& (0+255),w,b
 30754  015A76  6F39               	movwf	??___flmul& (0+255),b
 30755  015A78  5149               	movf	(___flmul@temp+1)& (0+255),w,b
 30756  015A7A  6F3A               	movwf	(??___flmul+1)& (0+255),b
 30757  015A7C  6B3B               	clrf	(??___flmul+2)& (0+255),b
 30758  015A7E  6B3C               	clrf	(??___flmul+3)& (0+255),b
 30759  015A80  C23B  F23C         	movff	??___flmul+2,??___flmul+3
 30760  015A84  C23A  F23B         	movff	??___flmul+1,??___flmul+2
 30761  015A88  C239  F23A         	movff	??___flmul,??___flmul+1
 30762  015A8C  6B39               	clrf	??___flmul& (0+255),b
 30763  015A8E  5139               	movf	??___flmul& (0+255),w,b
 30764  015A90  2744               	addwf	___flmul@prod& (0+255),f,b
 30765  015A92  513A               	movf	(??___flmul+1)& (0+255),w,b
 30766  015A94  2345               	addwfc	(___flmul@prod+1)& (0+255),f,b
 30767  015A96  513B               	movf	(??___flmul+2)& (0+255),w,b
 30768  015A98  2346               	addwfc	(___flmul@prod+2)& (0+255),f,b
 30769  015A9A  513C               	movf	(??___flmul+3)& (0+255),w,b
 30770  015A9C  2347               	addwfc	(___flmul@prod+3)& (0+255),f,b
 30771                           
 30772                           ; BSR set to: 2
 30773  015A9E  C23F  F239         	movff	___flmul@grs,??___flmul
 30774  015AA2  C240  F23A         	movff	___flmul@grs+1,??___flmul+1
 30775  015AA6  C241  F23B         	movff	___flmul@grs+2,??___flmul+2
 30776  015AAA  C242  F23C         	movff	___flmul@grs+3,??___flmul+3
 30777  015AAE  0E19               	movlw	25
 30778  015AB0  D005               	goto	u18430
 30779  015AB2                     u18435:
 30780  015AB2  90D8               	bcf	status,0,c
 30781  015AB4  333C               	rrcf	(??___flmul+3)& (0+255),f,b
 30782  015AB6  333B               	rrcf	(??___flmul+2)& (0+255),f,b
 30783  015AB8  333A               	rrcf	(??___flmul+1)& (0+255),f,b
 30784  015ABA  3339               	rrcf	??___flmul& (0+255),f,b
 30785  015ABC                     u18430:
 30786  015ABC  2EE8               	decfsz	wreg,f,c
 30787  015ABE  D7F9               	goto	u18435
 30788  015AC0  5139               	movf	??___flmul& (0+255),w,b
 30789  015AC2  2744               	addwf	___flmul@prod& (0+255),f,b
 30790  015AC4  513A               	movf	(??___flmul+1)& (0+255),w,b
 30791  015AC6  2345               	addwfc	(___flmul@prod+1)& (0+255),f,b
 30792  015AC8  513B               	movf	(??___flmul+2)& (0+255),w,b
 30793  015ACA  2346               	addwfc	(___flmul@prod+2)& (0+255),f,b
 30794  015ACC  513C               	movf	(??___flmul+3)& (0+255),w,b
 30795  015ACE  2347               	addwfc	(___flmul@prod+3)& (0+255),f,b
 30796                           
 30797                           ; BSR set to: 2
 30798  015AD0  C241  F242         	movff	___flmul@grs+2,___flmul@grs+3
 30799  015AD4  C240  F241         	movff	___flmul@grs+1,___flmul@grs+2
 30800  015AD8  C23F  F240         	movff	___flmul@grs,___flmul@grs+1
 30801  015ADC  6B3F               	clrf	___flmul@grs& (0+255),b
 30802                           
 30803                           ; BSR set to: 2
 30804  015ADE  513E               	movf	___flmul@aexp& (0+255),w,b
 30805  015AE0  C243  F239         	movff	___flmul@bexp,??___flmul
 30806  015AE4  6B3A               	clrf	(??___flmul+1)& (0+255),b
 30807  015AE6  2739               	addwf	??___flmul& (0+255),f,b
 30808  015AE8  0E00               	movlw	0
 30809  015AEA  233A               	addwfc	(??___flmul+1)& (0+255),f,b
 30810  015AEC  0E82               	movlw	130
 30811  015AEE  2539               	addwf	??___flmul& (0+255),w,b
 30812  015AF0  6F48               	movwf	___flmul@temp& (0+255),b
 30813  015AF2  0EFF               	movlw	255
 30814  015AF4  213A               	addwfc	(??___flmul+1)& (0+255),w,b
 30815  015AF6  6F49               	movwf	(___flmul@temp+1)& (0+255),b
 30816  015AF8  D00F               	goto	l2973
 30817  015AFA                     
 30818                           ; BSR set to: 2
 30819                           
 30820                           ; BSR set to: 2
 30821  015AFA  90D8               	bcf	status,0,c
 30822  015AFC  3744               	rlcf	___flmul@prod& (0+255),f,b
 30823  015AFE  3745               	rlcf	(___flmul@prod+1)& (0+255),f,b
 30824  015B00  3746               	rlcf	(___flmul@prod+2)& (0+255),f,b
 30825  015B02  3747               	rlcf	(___flmul@prod+3)& (0+255),f,b
 30826                           
 30827                           ; BSR set to: 2
 30828  015B04  BF42               	btfsc	(___flmul@grs+3)& (0+255),7,b
 30829                           
 30830                           ; BSR set to: 2
 30831  015B06  8144               	bsf	___flmul@prod& (0+255),0,b
 30832                           
 30833                           ; BSR set to: 2
 30834  015B08  90D8               	bcf	status,0,c
 30835  015B0A  373F               	rlcf	___flmul@grs& (0+255),f,b
 30836  015B0C  3740               	rlcf	(___flmul@grs+1)& (0+255),f,b
 30837  015B0E  3741               	rlcf	(___flmul@grs+2)& (0+255),f,b
 30838  015B10  3742               	rlcf	(___flmul@grs+3)& (0+255),f,b
 30839  015B12  0748               	decf	___flmul@temp& (0+255),f,b
 30840  015B14  A0D8               	btfss	status,0,c
 30841  015B16  0749               	decf	(___flmul@temp+1)& (0+255),f,b
 30842  015B18                     l2973:
 30843                           
 30844                           ; BSR set to: 2
 30845                           
 30846                           ; BSR set to: 2
 30847  015B18  AF46               	btfss	(___flmul@prod+2)& (0+255),7,b
 30848  015B1A  D7EF               	goto	l2974
 30849                           
 30850                           ; BSR set to: 2
 30851                           
 30852                           ; BSR set to: 2
 30853  015B1C  0E00               	movlw	0
 30854  015B1E  6F3E               	movwf	___flmul@aexp& (0+255),b
 30855                           
 30856                           ; BSR set to: 2
 30857  015B20  AF42               	btfss	(___flmul@grs+3)& (0+255),7,b
 30858  015B22  D016               	goto	l2980
 30859                           
 30860                           ; BSR set to: 2
 30861  015B24  0EFF               	movlw	255
 30862  015B26  153F               	andwf	___flmul@grs& (0+255),w,b
 30863  015B28  6F39               	movwf	??___flmul& (0+255),b
 30864  015B2A  0EFF               	movlw	255
 30865  015B2C  1540               	andwf	(___flmul@grs+1)& (0+255),w,b
 30866  015B2E  6F3A               	movwf	(??___flmul+1)& (0+255),b
 30867  015B30  0EFF               	movlw	255
 30868  015B32  1541               	andwf	(___flmul@grs+2)& (0+255),w,b
 30869  015B34  6F3B               	movwf	(??___flmul+2)& (0+255),b
 30870  015B36  0E7F               	movlw	127
 30871  015B38  1542               	andwf	(___flmul@grs+3)& (0+255),w,b
 30872  015B3A  6F3C               	movwf	(??___flmul+3)& (0+255),b
 30873  015B3C  5139               	movf	??___flmul& (0+255),w,b
 30874  015B3E  113A               	iorwf	(??___flmul+1)& (0+255),w,b
 30875  015B40  113B               	iorwf	(??___flmul+2)& (0+255),w,b
 30876  015B42  113C               	iorwf	(??___flmul+3)& (0+255),w,b
 30877  015B44  A4D8               	btfss	status,2,c
 30878  015B46  D002               	goto	u18480
 30879                           
 30880                           ; BSR set to: 2
 30881                           
 30882                           ; BSR set to: 2
 30883  015B48  A144               	btfss	___flmul@prod& (0+255),0,b
 30884  015B4A  D002               	goto	l2980
 30885  015B4C                     u18480:
 30886                           
 30887                           ; BSR set to: 2
 30888  015B4C  0E01               	movlw	1
 30889  015B4E  6F3E               	movwf	___flmul@aexp& (0+255),b
 30890  015B50                     l2980:
 30891                           
 30892                           ; BSR set to: 2
 30893                           
 30894                           ; BSR set to: 2
 30895                           
 30896                           ; BSR set to: 2
 30897  015B50  513E               	movf	___flmul@aexp& (0+255),w,b
 30898  015B52  B4D8               	btfsc	status,2,c
 30899  015B54  D01F               	goto	l2982
 30900                           
 30901                           ; BSR set to: 2
 30902  015B56  0E01               	movlw	1
 30903  015B58  2744               	addwf	___flmul@prod& (0+255),f,b
 30904  015B5A  0E00               	movlw	0
 30905  015B5C  2345               	addwfc	(___flmul@prod+1)& (0+255),f,b
 30906  015B5E  2346               	addwfc	(___flmul@prod+2)& (0+255),f,b
 30907  015B60  2347               	addwfc	(___flmul@prod+3)& (0+255),f,b
 30908                           
 30909                           ; BSR set to: 2
 30910  015B62  A147               	btfss	(___flmul@prod+3)& (0+255),0,b
 30911  015B64  D017               	goto	l2982
 30912                           
 30913                           ; BSR set to: 2
 30914  015B66  C244  F239         	movff	___flmul@prod,??___flmul
 30915  015B6A  C245  F23A         	movff	___flmul@prod+1,??___flmul+1
 30916  015B6E  C246  F23B         	movff	___flmul@prod+2,??___flmul+2
 30917  015B72  C247  F23C         	movff	___flmul@prod+3,??___flmul+3
 30918  015B76  353C               	rlcf	(??___flmul+3)& (0+255),w,b
 30919  015B78  333C               	rrcf	(??___flmul+3)& (0+255),f,b
 30920  015B7A  333B               	rrcf	(??___flmul+2)& (0+255),f,b
 30921  015B7C  333A               	rrcf	(??___flmul+1)& (0+255),f,b
 30922  015B7E  3339               	rrcf	??___flmul& (0+255),f,b
 30923  015B80  C239  F244         	movff	??___flmul,___flmul@prod
 30924  015B84  C23A  F245         	movff	??___flmul+1,___flmul@prod+1
 30925  015B88  C23B  F246         	movff	??___flmul+2,___flmul@prod+2
 30926  015B8C  C23C  F247         	movff	??___flmul+3,___flmul@prod+3
 30927                           
 30928                           ; BSR set to: 2
 30929  015B90  4B48               	infsnz	___flmul@temp& (0+255),f,b
 30930  015B92  2B49               	incf	(___flmul@temp+1)& (0+255),f,b
 30931  015B94                     l2982:
 30932                           
 30933                           ; BSR set to: 2
 30934                           
 30935                           ; BSR set to: 2
 30936                           
 30937                           ; BSR set to: 2
 30938  015B94  BF49               	btfsc	(___flmul@temp+1)& (0+255),7,b
 30939  015B96  D00D               	goto	l2983
 30940  015B98  5149               	movf	(___flmul@temp+1)& (0+255),w,b
 30941  015B9A  E103               	bnz	u18510
 30942  015B9C  2948               	incf	___flmul@temp& (0+255),w,b
 30943  015B9E  A0D8               	btfss	status,0,c
 30944  015BA0  D008               	goto	l2983
 30945  015BA2                     u18510:
 30946                           
 30947                           ; BSR set to: 2
 30948  015BA2  0E00               	movlw	0
 30949  015BA4  6F44               	movwf	___flmul@prod& (0+255),b
 30950  015BA6  0E00               	movlw	0
 30951  015BA8  6F45               	movwf	(___flmul@prod+1)& (0+255),b
 30952  015BAA  0E80               	movlw	128
 30953  015BAC  6F46               	movwf	(___flmul@prod+2)& (0+255),b
 30954  015BAE  0E7F               	movlw	127
 30955  015BB0  D020               	goto	L5
 30956  015BB2                     l2983:
 30957                           
 30958                           ; BSR set to: 2
 30959                           
 30960                           ; BSR set to: 2
 30961  015BB2  BF49               	btfsc	(___flmul@temp+1)& (0+255),7,b
 30962  015BB4  D005               	goto	u18520
 30963  015BB6  5149               	movf	(___flmul@temp+1)& (0+255),w,b
 30964  015BB8  E10E               	bnz	l2985
 30965  015BBA  0548               	decf	___flmul@temp& (0+255),w,b
 30966  015BBC  B0D8               	btfsc	status,0,c
 30967  015BBE  D00B               	goto	l2985
 30968  015BC0                     u18520:
 30969                           
 30970                           ; BSR set to: 2
 30971  015BC0  0E00               	movlw	0
 30972  015BC2  6F44               	movwf	___flmul@prod& (0+255),b
 30973  015BC4  0E00               	movlw	0
 30974  015BC6  6F45               	movwf	(___flmul@prod+1)& (0+255),b
 30975  015BC8  0E00               	movlw	0
 30976  015BCA  6F46               	movwf	(___flmul@prod+2)& (0+255),b
 30977  015BCC  0E00               	movlw	0
 30978  015BCE  6F47               	movwf	(___flmul@prod+3)& (0+255),b
 30979  015BD0  0E00               	movlw	0
 30980  015BD2  6F3D               	movwf	___flmul@sign& (0+255),b
 30981  015BD4  D00F               	goto	l2986
 30982  015BD6                     l2985:
 30983                           
 30984                           ; BSR set to: 2
 30985  015BD6  C248  F243         	movff	___flmul@temp,___flmul@bexp
 30986                           
 30987                           ; BSR set to: 2
 30988  015BDA  0EFF               	movlw	255
 30989  015BDC  1744               	andwf	___flmul@prod& (0+255),f,b
 30990  015BDE  0EFF               	movlw	255
 30991  015BE0  1745               	andwf	(___flmul@prod+1)& (0+255),f,b
 30992  015BE2  0E7F               	movlw	127
 30993  015BE4  1746               	andwf	(___flmul@prod+2)& (0+255),f,b
 30994  015BE6  0E00               	movlw	0
 30995  015BE8  1747               	andwf	(___flmul@prod+3)& (0+255),f,b
 30996                           
 30997                           ; BSR set to: 2
 30998  015BEA  B143               	btfsc	___flmul@bexp& (0+255),0,b
 30999                           
 31000                           ; BSR set to: 2
 31001  015BEC  8F46               	bsf	(___flmul@prod+2)& (0+255),7,b
 31002                           
 31003                           ; BSR set to: 2
 31004                           
 31005                           ; BSR set to: 2
 31006  015BEE  90D8               	bcf	status,0,c
 31007  015BF0  3143               	rrcf	___flmul@bexp& (0+255),w,b
 31008  015BF2                     L5:
 31009  015BF2  6F47               	movwf	(___flmul@prod+3)& (0+255),b
 31010  015BF4                     l2986:
 31011                           
 31012                           ; BSR set to: 2
 31013                           
 31014                           ; BSR set to: 2
 31015                           
 31016                           ; BSR set to: 2
 31017  015BF4  513D               	movf	___flmul@sign& (0+255),w,b
 31018  015BF6  1347               	iorwf	(___flmul@prod+3)& (0+255),f,b
 31019                           
 31020                           ; BSR set to: 2
 31021  015BF8  C244  F231         	movff	___flmul@prod,?___flmul
 31022  015BFC  C245  F232         	movff	___flmul@prod+1,?___flmul+1
 31023  015C00  C246  F233         	movff	___flmul@prod+2,?___flmul+2
 31024  015C04  C247  F234         	movff	___flmul@prod+3,?___flmul+3
 31025  015C08  0012               	return	
 31026  015C0A                     __end_of___flmul:
 31027                           	opt stack 0
 31028                           tosu	equ	0xFFF
 31029                           tosh	equ	0xFFE
 31030                           tosl	equ	0xFFD
 31031                           pclath	equ	0xFFA
 31032                           tblptru	equ	0xFF8
 31033                           tblptrh	equ	0xFF7
 31034                           tblptrl	equ	0xFF6
 31035                           tablat	equ	0xFF5
 31036                           prodh	equ	0xFF4
 31037                           prodl	equ	0xFF3
 31038                           intcon	equ	0xFF2
 31039                           indf0	equ	0xFEF
 31040                           postinc0	equ	0xFEE
 31041                           fsr0h	equ	0xFEA
 31042                           fsr0l	equ	0xFE9
 31043                           wreg	equ	0xFE8
 31044                           indf1	equ	0xFE7
 31045                           postdec1	equ	0xFE5
 31046                           plusw1	equ	0xFE3
 31047                           fsr1h	equ	0xFE2
 31048                           fsr1l	equ	0xFE1
 31049                           indf2	equ	0xFDF
 31050                           postinc2	equ	0xFDE
 31051                           postdec2	equ	0xFDD
 31052                           plusw2	equ	0xFDB
 31053                           fsr2h	equ	0xFDA
 31054                           fsr2l	equ	0xFD9
 31055                           status	equ	0xFD8
 31056                           
 31057 ;; *************** function ___awmod *****************
 31058 ;; Defined at:
 31059 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 31060 ;; Parameters:    Size  Location     Type
 31061 ;;  dividend        2   79[BANK1 ] int 
 31062 ;;  divisor         2   81[BANK1 ] int 
 31063 ;; Auto vars:     Size  Location     Type
 31064 ;;  sign            1   84[BANK1 ] unsigned char 
 31065 ;;  counter         1   83[BANK1 ] unsigned char 
 31066 ;; Return value:  Size  Location     Type
 31067 ;;                  2   79[BANK1 ] int 
 31068 ;; Registers used:
 31069 ;;		wreg, status,2, status,0
 31070 ;; Tracked objects:
 31071 ;;		On entry : 0/0
 31072 ;;		On exit  : 0/0
 31073 ;;		Unchanged: 0/0
 31074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31075 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31076 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31078 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31079 ;;Total ram usage:        6 bytes
 31080 ;; Hardware stack levels used:    1
 31081 ;; Hardware stack levels required when called:   19
 31082 ;; This function calls:
 31083 ;;		Nothing
 31084 ;; This function is called by:
 31085 ;;		_fround
 31086 ;;		_scale
 31087 ;; This function uses a non-reentrant model
 31088 ;;
 31089                           
 31090                           	psect	text49
 31091  01A7B8                     __ptext49:
 31092                           	opt stack 0
 31093  01A7B8                     ___awmod:
 31094                           	opt stack 6
 31095                           
 31096                           ; BSR set to: 2
 31097                           ;incstack = 0
 31098  01A7B8  0E00               	movlw	0
 31099  01A7BA  0101               	movlb	1	; () banked
 31100  01A7BC  6F54               	movwf	___awmod@sign& (0+255),b
 31101                           
 31102                           ; BSR set to: 1
 31103  01A7BE  AF50               	btfss	(___awmod@dividend+1)& (0+255),7,b
 31104  01A7C0  D006               	goto	l2512
 31105                           
 31106                           ; BSR set to: 1
 31107  01A7C2  6D4F               	negf	___awmod@dividend& (0+255),b
 31108  01A7C4  1F50               	comf	(___awmod@dividend+1)& (0+255),f,b
 31109  01A7C6  B0D8               	btfsc	status,0,c
 31110  01A7C8  2B50               	incf	(___awmod@dividend+1)& (0+255),f,b
 31111                           
 31112                           ; BSR set to: 1
 31113  01A7CA  0E01               	movlw	1
 31114  01A7CC  6F54               	movwf	___awmod@sign& (0+255),b
 31115  01A7CE                     l2512:
 31116                           
 31117                           ; BSR set to: 1
 31118                           
 31119                           ; BSR set to: 1
 31120  01A7CE  AF52               	btfss	(___awmod@divisor+1)& (0+255),7,b
 31121  01A7D0  D004               	goto	l2513
 31122                           
 31123                           ; BSR set to: 1
 31124  01A7D2  6D51               	negf	___awmod@divisor& (0+255),b
 31125  01A7D4  1F52               	comf	(___awmod@divisor+1)& (0+255),f,b
 31126  01A7D6  B0D8               	btfsc	status,0,c
 31127  01A7D8  2B52               	incf	(___awmod@divisor+1)& (0+255),f,b
 31128  01A7DA                     l2513:
 31129                           
 31130                           ; BSR set to: 1
 31131                           
 31132                           ; BSR set to: 1
 31133  01A7DA  5151               	movf	___awmod@divisor& (0+255),w,b
 31134  01A7DC  1152               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 31135  01A7DE  B4D8               	btfsc	status,2,c
 31136  01A7E0  D018               	goto	l2520
 31137                           
 31138                           ; BSR set to: 1
 31139  01A7E2  0E01               	movlw	1
 31140  01A7E4  6F53               	movwf	___awmod@counter& (0+255),b
 31141  01A7E6  D004               	goto	l2515
 31142  01A7E8                     
 31143                           ; BSR set to: 1
 31144                           
 31145                           ; BSR set to: 1
 31146  01A7E8  90D8               	bcf	status,0,c
 31147  01A7EA  3751               	rlcf	___awmod@divisor& (0+255),f,b
 31148  01A7EC  3752               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 31149  01A7EE  2B53               	incf	___awmod@counter& (0+255),f,b
 31150  01A7F0                     l2515:
 31151                           
 31152                           ; BSR set to: 1
 31153                           
 31154                           ; BSR set to: 1
 31155  01A7F0  AF52               	btfss	(___awmod@divisor+1)& (0+255),7,b
 31156  01A7F2  D7FA               	goto	l2516
 31157  01A7F4                     u18630:
 31158                           
 31159                           ; BSR set to: 1
 31160                           
 31161                           ; BSR set to: 1
 31162                           
 31163                           ; BSR set to: 1
 31164  01A7F4  5151               	movf	___awmod@divisor& (0+255),w,b
 31165  01A7F6  5D4F               	subwf	___awmod@dividend& (0+255),w,b
 31166  01A7F8  5152               	movf	(___awmod@divisor+1)& (0+255),w,b
 31167  01A7FA  5950               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 31168  01A7FC  A0D8               	btfss	status,0,c
 31169  01A7FE  D004               	goto	l2519
 31170                           
 31171                           ; BSR set to: 1
 31172  01A800  5151               	movf	___awmod@divisor& (0+255),w,b
 31173  01A802  5F4F               	subwf	___awmod@dividend& (0+255),f,b
 31174  01A804  5152               	movf	(___awmod@divisor+1)& (0+255),w,b
 31175  01A806  5B50               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 31176  01A808                     l2519:
 31177                           
 31178                           ; BSR set to: 1
 31179                           
 31180                           ; BSR set to: 1
 31181  01A808  90D8               	bcf	status,0,c
 31182  01A80A  3352               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 31183  01A80C  3351               	rrcf	___awmod@divisor& (0+255),f,b
 31184                           
 31185                           ; BSR set to: 1
 31186  01A80E  2F53               	decfsz	___awmod@counter& (0+255),f,b
 31187  01A810  D7F1               	goto	u18630
 31188  01A812                     l2520:
 31189                           
 31190                           ; BSR set to: 1
 31191                           
 31192                           ; BSR set to: 1
 31193                           
 31194                           ; BSR set to: 1
 31195  01A812  5154               	movf	___awmod@sign& (0+255),w,b
 31196  01A814  B4D8               	btfsc	status,2,c
 31197  01A816  D004               	goto	l2521
 31198                           
 31199                           ; BSR set to: 1
 31200  01A818  6D4F               	negf	___awmod@dividend& (0+255),b
 31201  01A81A  1F50               	comf	(___awmod@dividend+1)& (0+255),f,b
 31202  01A81C  B0D8               	btfsc	status,0,c
 31203  01A81E  2B50               	incf	(___awmod@dividend+1)& (0+255),f,b
 31204  01A820                     l2521:
 31205                           
 31206                           ; BSR set to: 1
 31207                           
 31208                           ; BSR set to: 1
 31209  01A820  C14F  F14F         	movff	___awmod@dividend,?___awmod
 31210  01A824  C150  F150         	movff	___awmod@dividend+1,?___awmod+1
 31211  01A828  0012               	return	
 31212  01A82A                     __end_of___awmod:
 31213                           	opt stack 0
 31214                           tosu	equ	0xFFF
 31215                           tosh	equ	0xFFE
 31216                           tosl	equ	0xFFD
 31217                           pclath	equ	0xFFA
 31218                           tblptru	equ	0xFF8
 31219                           tblptrh	equ	0xFF7
 31220                           tblptrl	equ	0xFF6
 31221                           tablat	equ	0xFF5
 31222                           prodh	equ	0xFF4
 31223                           prodl	equ	0xFF3
 31224                           intcon	equ	0xFF2
 31225                           indf0	equ	0xFEF
 31226                           postinc0	equ	0xFEE
 31227                           fsr0h	equ	0xFEA
 31228                           fsr0l	equ	0xFE9
 31229                           wreg	equ	0xFE8
 31230                           indf1	equ	0xFE7
 31231                           postdec1	equ	0xFE5
 31232                           plusw1	equ	0xFE3
 31233                           fsr1h	equ	0xFE2
 31234                           fsr1l	equ	0xFE1
 31235                           indf2	equ	0xFDF
 31236                           postinc2	equ	0xFDE
 31237                           postdec2	equ	0xFDD
 31238                           plusw2	equ	0xFDB
 31239                           fsr2h	equ	0xFDA
 31240                           fsr2l	equ	0xFD9
 31241                           status	equ	0xFD8
 31242                           
 31243 ;; *************** function ___awdiv *****************
 31244 ;; Defined at:
 31245 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 31246 ;; Parameters:    Size  Location     Type
 31247 ;;  dividend        2   85[BANK1 ] int 
 31248 ;;  divisor         2   87[BANK1 ] int 
 31249 ;; Auto vars:     Size  Location     Type
 31250 ;;  quotient        2   91[BANK1 ] int 
 31251 ;;  sign            1   90[BANK1 ] unsigned char 
 31252 ;;  counter         1   89[BANK1 ] unsigned char 
 31253 ;; Return value:  Size  Location     Type
 31254 ;;                  2   85[BANK1 ] int 
 31255 ;; Registers used:
 31256 ;;		wreg, status,2, status,0
 31257 ;; Tracked objects:
 31258 ;;		On entry : 0/0
 31259 ;;		On exit  : 0/0
 31260 ;;		Unchanged: 0/0
 31261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31262 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31263 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31265 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31266 ;;Total ram usage:        8 bytes
 31267 ;; Hardware stack levels used:    1
 31268 ;; Hardware stack levels required when called:   19
 31269 ;; This function calls:
 31270 ;;		Nothing
 31271 ;; This function is called by:
 31272 ;;		_fround
 31273 ;;		_scale
 31274 ;;		__doprnt
 31275 ;; This function uses a non-reentrant model
 31276 ;;
 31277                           
 31278                           	psect	text50
 31279  01A2C8                     __ptext50:
 31280                           	opt stack 0
 31281  01A2C8                     ___awdiv:
 31282                           	opt stack 6
 31283                           
 31284                           ; BSR set to: 1
 31285                           ;incstack = 0
 31286  01A2C8  0E00               	movlw	0
 31287  01A2CA  0101               	movlb	1	; () banked
 31288  01A2CC  6F5A               	movwf	___awdiv@sign& (0+255),b
 31289                           
 31290                           ; BSR set to: 1
 31291  01A2CE  AF58               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 31292  01A2D0  D006               	goto	l2499
 31293                           
 31294                           ; BSR set to: 1
 31295  01A2D2  6D57               	negf	___awdiv@divisor& (0+255),b
 31296  01A2D4  1F58               	comf	(___awdiv@divisor+1)& (0+255),f,b
 31297  01A2D6  B0D8               	btfsc	status,0,c
 31298  01A2D8  2B58               	incf	(___awdiv@divisor+1)& (0+255),f,b
 31299                           
 31300                           ; BSR set to: 1
 31301  01A2DA  0E01               	movlw	1
 31302  01A2DC  6F5A               	movwf	___awdiv@sign& (0+255),b
 31303  01A2DE                     l2499:
 31304                           
 31305                           ; BSR set to: 1
 31306                           
 31307                           ; BSR set to: 1
 31308  01A2DE  AF56               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 31309  01A2E0  D006               	goto	l2500
 31310                           
 31311                           ; BSR set to: 1
 31312  01A2E2  6D55               	negf	___awdiv@dividend& (0+255),b
 31313  01A2E4  1F56               	comf	(___awdiv@dividend+1)& (0+255),f,b
 31314  01A2E6  B0D8               	btfsc	status,0,c
 31315  01A2E8  2B56               	incf	(___awdiv@dividend+1)& (0+255),f,b
 31316                           
 31317                           ; BSR set to: 1
 31318  01A2EA  0E01               	movlw	1
 31319  01A2EC  1B5A               	xorwf	___awdiv@sign& (0+255),f,b
 31320  01A2EE                     l2500:
 31321                           
 31322                           ; BSR set to: 1
 31323                           
 31324                           ; BSR set to: 1
 31325  01A2EE  0E00               	movlw	0
 31326  01A2F0  6F5C               	movwf	(___awdiv@quotient+1)& (0+255),b
 31327  01A2F2  0E00               	movlw	0
 31328  01A2F4  6F5B               	movwf	___awdiv@quotient& (0+255),b
 31329                           
 31330                           ; BSR set to: 1
 31331  01A2F6  5157               	movf	___awdiv@divisor& (0+255),w,b
 31332  01A2F8  1158               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 31333  01A2FA  B4D8               	btfsc	status,2,c
 31334  01A2FC  D01C               	goto	l2507
 31335                           
 31336                           ; BSR set to: 1
 31337  01A2FE  0E01               	movlw	1
 31338  01A300  6F59               	movwf	___awdiv@counter& (0+255),b
 31339  01A302  D004               	goto	l2502
 31340  01A304                     
 31341                           ; BSR set to: 1
 31342                           
 31343                           ; BSR set to: 1
 31344  01A304  90D8               	bcf	status,0,c
 31345  01A306  3757               	rlcf	___awdiv@divisor& (0+255),f,b
 31346  01A308  3758               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 31347  01A30A  2B59               	incf	___awdiv@counter& (0+255),f,b
 31348  01A30C                     l2502:
 31349                           
 31350                           ; BSR set to: 1
 31351                           
 31352                           ; BSR set to: 1
 31353  01A30C  AF58               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 31354  01A30E  D7FA               	goto	l2503
 31355  01A310                     u18570:
 31356                           
 31357                           ; BSR set to: 1
 31358                           
 31359                           ; BSR set to: 1
 31360                           
 31361                           ; BSR set to: 1
 31362  01A310  90D8               	bcf	status,0,c
 31363  01A312  375B               	rlcf	___awdiv@quotient& (0+255),f,b
 31364  01A314  375C               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 31365                           
 31366                           ; BSR set to: 1
 31367  01A316  5157               	movf	___awdiv@divisor& (0+255),w,b
 31368  01A318  5D55               	subwf	___awdiv@dividend& (0+255),w,b
 31369  01A31A  5158               	movf	(___awdiv@divisor+1)& (0+255),w,b
 31370  01A31C  5956               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 31371  01A31E  A0D8               	btfss	status,0,c
 31372  01A320  D005               	goto	l2506
 31373                           
 31374                           ; BSR set to: 1
 31375  01A322  5157               	movf	___awdiv@divisor& (0+255),w,b
 31376  01A324  5F55               	subwf	___awdiv@dividend& (0+255),f,b
 31377  01A326  5158               	movf	(___awdiv@divisor+1)& (0+255),w,b
 31378  01A328  5B56               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 31379                           
 31380                           ; BSR set to: 1
 31381  01A32A  815B               	bsf	___awdiv@quotient& (0+255),0,b
 31382  01A32C                     l2506:
 31383                           
 31384                           ; BSR set to: 1
 31385                           
 31386                           ; BSR set to: 1
 31387  01A32C  90D8               	bcf	status,0,c
 31388  01A32E  3358               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 31389  01A330  3357               	rrcf	___awdiv@divisor& (0+255),f,b
 31390                           
 31391                           ; BSR set to: 1
 31392  01A332  2F59               	decfsz	___awdiv@counter& (0+255),f,b
 31393  01A334  D7ED               	goto	u18570
 31394  01A336                     l2507:
 31395                           
 31396                           ; BSR set to: 1
 31397                           
 31398                           ; BSR set to: 1
 31399                           
 31400                           ; BSR set to: 1
 31401  01A336  515A               	movf	___awdiv@sign& (0+255),w,b
 31402  01A338  B4D8               	btfsc	status,2,c
 31403  01A33A  D004               	goto	l2508
 31404                           
 31405                           ; BSR set to: 1
 31406  01A33C  6D5B               	negf	___awdiv@quotient& (0+255),b
 31407  01A33E  1F5C               	comf	(___awdiv@quotient+1)& (0+255),f,b
 31408  01A340  B0D8               	btfsc	status,0,c
 31409  01A342  2B5C               	incf	(___awdiv@quotient+1)& (0+255),f,b
 31410  01A344                     l2508:
 31411                           
 31412                           ; BSR set to: 1
 31413                           
 31414                           ; BSR set to: 1
 31415  01A344  C15B  F155         	movff	___awdiv@quotient,?___awdiv
 31416  01A348  C15C  F156         	movff	___awdiv@quotient+1,?___awdiv+1
 31417  01A34C  0012               	return	
 31418  01A34E                     __end_of___awdiv:
 31419                           	opt stack 0
 31420                           tosu	equ	0xFFF
 31421                           tosh	equ	0xFFE
 31422                           tosl	equ	0xFFD
 31423                           pclath	equ	0xFFA
 31424                           tblptru	equ	0xFF8
 31425                           tblptrh	equ	0xFF7
 31426                           tblptrl	equ	0xFF6
 31427                           tablat	equ	0xFF5
 31428                           prodh	equ	0xFF4
 31429                           prodl	equ	0xFF3
 31430                           intcon	equ	0xFF2
 31431                           indf0	equ	0xFEF
 31432                           postinc0	equ	0xFEE
 31433                           fsr0h	equ	0xFEA
 31434                           fsr0l	equ	0xFE9
 31435                           wreg	equ	0xFE8
 31436                           indf1	equ	0xFE7
 31437                           postdec1	equ	0xFE5
 31438                           plusw1	equ	0xFE3
 31439                           fsr1h	equ	0xFE2
 31440                           fsr1l	equ	0xFE1
 31441                           indf2	equ	0xFDF
 31442                           postinc2	equ	0xFDE
 31443                           postdec2	equ	0xFDD
 31444                           plusw2	equ	0xFDB
 31445                           fsr2h	equ	0xFDA
 31446                           fsr2l	equ	0xFD9
 31447                           status	equ	0xFD8
 31448                           
 31449 ;; *************** function __tdiv_to_l_ *****************
 31450 ;; Defined at:
 31451 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 31452 ;; Parameters:    Size  Location     Type
 31453 ;;  f1              3   79[BANK1 ] float 
 31454 ;;  f2              3   82[BANK1 ] float 
 31455 ;; Auto vars:     Size  Location     Type
 31456 ;;  quot            4   88[BANK1 ] unsigned long 
 31457 ;;  exp1            1   93[BANK1 ] unsigned char 
 31458 ;;  cntr            1   92[BANK1 ] unsigned char 
 31459 ;; Return value:  Size  Location     Type
 31460 ;;                  4   79[BANK1 ] unsigned long 
 31461 ;; Registers used:
 31462 ;;		wreg, status,2, status,0
 31463 ;; Tracked objects:
 31464 ;;		On entry : 0/0
 31465 ;;		On exit  : 0/0
 31466 ;;		Unchanged: 0/0
 31467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31468 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31469 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31470 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31471 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31472 ;;Total ram usage:       15 bytes
 31473 ;; Hardware stack levels used:    1
 31474 ;; Hardware stack levels required when called:   19
 31475 ;; This function calls:
 31476 ;;		Nothing
 31477 ;; This function is called by:
 31478 ;;		__doprnt
 31479 ;; This function uses a non-reentrant model
 31480 ;;
 31481                           
 31482                           	psect	text51
 31483  018CE4                     __ptext51:
 31484                           	opt stack 0
 31485  018CE4                     __tdiv_to_l_:
 31486                           	opt stack 7
 31487                           
 31488                           ; BSR set to: 1
 31489                           ;incstack = 0
 31490  018CE4  C151  F155         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 31491  018CE8  0101               	movlb	1	; () banked
 31492  018CEA  6B56               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 31493  018CEC  6B57               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 31494  018CEE  3550               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 31495  018CF0  3755               	rlcf	??__tdiv_to_l_& (0+255),f,b
 31496  018CF2  E301               	bnc	u19441
 31497  018CF4  8156               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 31498  018CF6                     u19441:
 31499  018CF6  5155               	movf	??__tdiv_to_l_& (0+255),w,b
 31500  018CF8  6F5D               	movwf	__tdiv_to_l_@exp1& (0+255),b
 31501  018CFA  515D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 31502  018CFC  A4D8               	btfss	status,2,c
 31503  018CFE  D009               	goto	l2647
 31504                           
 31505                           ; BSR set to: 1
 31506  018D00  0E00               	movlw	0
 31507  018D02  6F4F               	movwf	?__tdiv_to_l_& (0+255),b
 31508  018D04  0E00               	movlw	0
 31509  018D06  6F50               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 31510  018D08  0E00               	movlw	0
 31511  018D0A  6F51               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 31512  018D0C  0E00               	movlw	0
 31513  018D0E  6F52               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 31514                           
 31515                           ; BSR set to: 1
 31516  018D10  0012               	return	
 31517  018D12                     l2647:
 31518                           
 31519                           ; BSR set to: 1
 31520                           
 31521                           ; BSR set to: 1
 31522  018D12  C154  F155         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 31523  018D16  6B56               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 31524  018D18  6B57               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 31525  018D1A  3553               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 31526  018D1C  3755               	rlcf	??__tdiv_to_l_& (0+255),f,b
 31527  018D1E  E301               	bnc	u19461
 31528  018D20  8156               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 31529  018D22                     u19461:
 31530  018D22  5155               	movf	??__tdiv_to_l_& (0+255),w,b
 31531  018D24  6F5C               	movwf	__tdiv_to_l_@cntr& (0+255),b
 31532  018D26  515C               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 31533  018D28  A4D8               	btfss	status,2,c
 31534  018D2A  D009               	goto	l2649
 31535                           
 31536                           ; BSR set to: 1
 31537  018D2C  0E00               	movlw	0
 31538  018D2E  6F4F               	movwf	?__tdiv_to_l_& (0+255),b
 31539  018D30  0E00               	movlw	0
 31540  018D32  6F50               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 31541  018D34  0E00               	movlw	0
 31542  018D36  6F51               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 31543  018D38  0E00               	movlw	0
 31544  018D3A  6F52               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 31545                           
 31546                           ; BSR set to: 1
 31547  018D3C  0012               	return	
 31548  018D3E                     l2649:
 31549                           
 31550                           ; BSR set to: 1
 31551                           
 31552                           ; BSR set to: 1
 31553  018D3E  8F50               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 31554                           
 31555                           ; BSR set to: 1
 31556  018D40  0EFF               	movlw	255
 31557  018D42  174F               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 31558  018D44  0EFF               	movlw	255
 31559  018D46  1750               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 31560  018D48  0E00               	movlw	0
 31561  018D4A  1751               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 31562  018D4C  8F53               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 31563                           
 31564                           ; BSR set to: 1
 31565  018D4E  0EFF               	movlw	255
 31566  018D50  1752               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 31567  018D52  0EFF               	movlw	255
 31568  018D54  1753               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 31569  018D56  0E00               	movlw	0
 31570  018D58  1754               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 31571                           
 31572                           ; BSR set to: 1
 31573  018D5A  0E00               	movlw	0
 31574  018D5C  6F58               	movwf	__tdiv_to_l_@quot& (0+255),b
 31575  018D5E  0E00               	movlw	0
 31576  018D60  6F59               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 31577  018D62  0E00               	movlw	0
 31578  018D64  6F5A               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 31579  018D66  0E00               	movlw	0
 31580  018D68  6F5B               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 31581                           
 31582                           ; BSR set to: 1
 31583  018D6A  0E7F               	movlw	127
 31584  018D6C  5F5D               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 31585                           
 31586                           ; BSR set to: 1
 31587  018D6E  515C               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 31588  018D70  0F98               	addlw	152
 31589  018D72  5F5D               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 31590                           
 31591                           ; BSR set to: 1
 31592  018D74  0E18               	movlw	24
 31593  018D76  6F5C               	movwf	__tdiv_to_l_@cntr& (0+255),b
 31594  018D78                     l2650:
 31595                           
 31596                           ; BSR set to: 1
 31597  018D78  90D8               	bcf	status,0,c
 31598  018D7A  3758               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 31599  018D7C  3759               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 31600  018D7E  375A               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 31601  018D80  375B               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 31602                           
 31603                           ; BSR set to: 1
 31604  018D82  5152               	movf	__tdiv_to_l_@f2& (0+255),w,b
 31605  018D84  5D4F               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 31606  018D86  5153               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 31607  018D88  5950               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 31608  018D8A  5154               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 31609  018D8C  5951               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 31610  018D8E  A0D8               	btfss	status,0,c
 31611  018D90  D007               	goto	l2651
 31612                           
 31613                           ; BSR set to: 1
 31614  018D92  5152               	movf	__tdiv_to_l_@f2& (0+255),w,b
 31615  018D94  5F4F               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 31616  018D96  5153               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 31617  018D98  5B50               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 31618  018D9A  5154               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 31619  018D9C  5B51               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 31620                           
 31621                           ; BSR set to: 1
 31622  018D9E  8158               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 31623  018DA0                     l2651:
 31624                           
 31625                           ; BSR set to: 1
 31626  018DA0  90D8               	bcf	status,0,c
 31627  018DA2  374F               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 31628  018DA4  3750               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 31629  018DA6  3751               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 31630                           
 31631                           ; BSR set to: 1
 31632  018DA8  2F5C               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 31633  018DAA  D7E6               	goto	l2650
 31634                           
 31635                           ; BSR set to: 1
 31636                           
 31637                           ; BSR set to: 1
 31638  018DAC  AF5D               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 31639  018DAE  D016               	goto	l2653
 31640                           
 31641                           ; BSR set to: 1
 31642  018DB0  515D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 31643  018DB2  0A80               	xorlw	128
 31644  018DB4  0F97               	addlw	151
 31645  018DB6  B0D8               	btfsc	status,0,c
 31646  018DB8  D009               	goto	l2654
 31647                           
 31648                           ; BSR set to: 1
 31649  018DBA  0E00               	movlw	0
 31650  018DBC  6F4F               	movwf	?__tdiv_to_l_& (0+255),b
 31651  018DBE  0E00               	movlw	0
 31652  018DC0  6F50               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 31653  018DC2  0E00               	movlw	0
 31654  018DC4  6F51               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 31655  018DC6  0E00               	movlw	0
 31656  018DC8  6F52               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 31657                           
 31658                           ; BSR set to: 1
 31659  018DCA  0012               	return	
 31660  018DCC                     l2654:
 31661                           
 31662                           ; BSR set to: 1
 31663                           
 31664                           ; BSR set to: 1
 31665                           
 31666                           ; BSR set to: 1
 31667  018DCC  90D8               	bcf	status,0,c
 31668  018DCE  335B               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 31669  018DD0  335A               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 31670  018DD2  3359               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 31671  018DD4  3358               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 31672                           
 31673                           ; BSR set to: 1
 31674  018DD6  3F5D               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 31675  018DD8  D7F9               	goto	l2654
 31676                           
 31677                           ; BSR set to: 1
 31678  018DDA  D015               	goto	u19520
 31679  018DDC                     l2653:
 31680                           
 31681                           ; BSR set to: 1
 31682                           
 31683                           ; BSR set to: 1
 31684  018DDC  0E17               	movlw	23
 31685  018DDE  655D               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 31686  018DE0  D00F               	goto	l2659
 31687                           
 31688                           ; BSR set to: 1
 31689  018DE2  0E00               	movlw	0
 31690  018DE4  6F4F               	movwf	?__tdiv_to_l_& (0+255),b
 31691  018DE6  0E00               	movlw	0
 31692  018DE8  6F50               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 31693  018DEA  0E00               	movlw	0
 31694  018DEC  6F51               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 31695  018DEE  0E00               	movlw	0
 31696  018DF0  6F52               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 31697                           
 31698                           ; BSR set to: 1
 31699  018DF2  0012               	return	
 31700  018DF4                     
 31701                           ; BSR set to: 1
 31702                           
 31703                           ; BSR set to: 1
 31704  018DF4  90D8               	bcf	status,0,c
 31705  018DF6  3758               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 31706  018DF8  3759               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 31707  018DFA  375A               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 31708  018DFC  375B               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 31709  018DFE  075D               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 31710  018E00                     l2659:
 31711                           
 31712                           ; BSR set to: 1
 31713                           
 31714                           ; BSR set to: 1
 31715  018E00  515D               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 31716  018E02  A4D8               	btfss	status,2,c
 31717  018E04  D7F7               	goto	l2660
 31718  018E06                     u19520:
 31719                           
 31720                           ; BSR set to: 1
 31721                           
 31722                           ; BSR set to: 1
 31723  018E06  C158  F14F         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 31724  018E0A  C159  F150         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 31725  018E0E  C15A  F151         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 31726  018E12  C15B  F152         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 31727                           
 31728                           ; BSR set to: 1
 31729  018E16  0012               	return		;funcret
 31730  018E18                     __end_of__tdiv_to_l_:
 31731                           	opt stack 0
 31732                           tosu	equ	0xFFF
 31733                           tosh	equ	0xFFE
 31734                           tosl	equ	0xFFD
 31735                           pclath	equ	0xFFA
 31736                           tblptru	equ	0xFF8
 31737                           tblptrh	equ	0xFF7
 31738                           tblptrl	equ	0xFF6
 31739                           tablat	equ	0xFF5
 31740                           prodh	equ	0xFF4
 31741                           prodl	equ	0xFF3
 31742                           intcon	equ	0xFF2
 31743                           indf0	equ	0xFEF
 31744                           postinc0	equ	0xFEE
 31745                           fsr0h	equ	0xFEA
 31746                           fsr0l	equ	0xFE9
 31747                           wreg	equ	0xFE8
 31748                           indf1	equ	0xFE7
 31749                           postdec1	equ	0xFE5
 31750                           plusw1	equ	0xFE3
 31751                           fsr1h	equ	0xFE2
 31752                           fsr1l	equ	0xFE1
 31753                           indf2	equ	0xFDF
 31754                           postinc2	equ	0xFDE
 31755                           postdec2	equ	0xFDD
 31756                           plusw2	equ	0xFDB
 31757                           fsr2h	equ	0xFDA
 31758                           fsr2l	equ	0xFD9
 31759                           status	equ	0xFD8
 31760                           
 31761 ;; *************** function __div_to_l_ *****************
 31762 ;; Defined at:
 31763 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 31764 ;; Parameters:    Size  Location     Type
 31765 ;;  f1              4   79[BANK1 ] unsigned long 
 31766 ;;  f2              4   83[BANK1 ] unsigned long 
 31767 ;; Auto vars:     Size  Location     Type
 31768 ;;  quot            4   87[BANK1 ] unsigned long 
 31769 ;;  exp1            1   92[BANK1 ] unsigned char 
 31770 ;;  cntr            1   91[BANK1 ] unsigned char 
 31771 ;; Return value:  Size  Location     Type
 31772 ;;                  4   79[BANK1 ] unsigned long 
 31773 ;; Registers used:
 31774 ;;		wreg, status,2, status,0
 31775 ;; Tracked objects:
 31776 ;;		On entry : 0/0
 31777 ;;		On exit  : 0/0
 31778 ;;		Unchanged: 0/0
 31779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31780 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31781 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31783 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31784 ;;Total ram usage:       14 bytes
 31785 ;; Hardware stack levels used:    1
 31786 ;; Hardware stack levels required when called:   19
 31787 ;; This function calls:
 31788 ;;		Nothing
 31789 ;; This function is called by:
 31790 ;;		__doprnt
 31791 ;; This function uses a non-reentrant model
 31792 ;;
 31793                           
 31794                           	psect	text52
 31795  018F4A                     __ptext52:
 31796                           	opt stack 0
 31797  018F4A                     __div_to_l_:
 31798                           	opt stack 7
 31799                           
 31800                           ; BSR set to: 1
 31801                           ;incstack = 0
 31802  018F4A  0101               	movlb	1	; () banked
 31803  018F4C  3551               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 31804  018F4E  3552               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 31805  018F50  6F5C               	movwf	__div_to_l_@exp1& (0+255),b
 31806  018F52  515C               	movf	__div_to_l_@exp1& (0+255),w,b
 31807  018F54  A4D8               	btfss	status,2,c
 31808  018F56  D009               	goto	l2543
 31809                           
 31810                           ; BSR set to: 1
 31811  018F58  0E00               	movlw	0
 31812  018F5A  6F4F               	movwf	?__div_to_l_& (0+255),b
 31813  018F5C  0E00               	movlw	0
 31814  018F5E  6F50               	movwf	(?__div_to_l_+1)& (0+255),b
 31815  018F60  0E00               	movlw	0
 31816  018F62  6F51               	movwf	(?__div_to_l_+2)& (0+255),b
 31817  018F64  0E00               	movlw	0
 31818  018F66  6F52               	movwf	(?__div_to_l_+3)& (0+255),b
 31819                           
 31820                           ; BSR set to: 1
 31821  018F68  0012               	return	
 31822  018F6A                     l2543:
 31823                           
 31824                           ; BSR set to: 1
 31825                           
 31826                           ; BSR set to: 1
 31827  018F6A  3555               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 31828  018F6C  3556               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 31829  018F6E  6F5B               	movwf	__div_to_l_@cntr& (0+255),b
 31830  018F70  515B               	movf	__div_to_l_@cntr& (0+255),w,b
 31831  018F72  A4D8               	btfss	status,2,c
 31832  018F74  D009               	goto	l2545
 31833                           
 31834                           ; BSR set to: 1
 31835  018F76  0E00               	movlw	0
 31836  018F78  6F4F               	movwf	?__div_to_l_& (0+255),b
 31837  018F7A  0E00               	movlw	0
 31838  018F7C  6F50               	movwf	(?__div_to_l_+1)& (0+255),b
 31839  018F7E  0E00               	movlw	0
 31840  018F80  6F51               	movwf	(?__div_to_l_+2)& (0+255),b
 31841  018F82  0E00               	movlw	0
 31842  018F84  6F52               	movwf	(?__div_to_l_+3)& (0+255),b
 31843                           
 31844                           ; BSR set to: 1
 31845  018F86  0012               	return	
 31846  018F88                     l2545:
 31847                           
 31848                           ; BSR set to: 1
 31849                           
 31850                           ; BSR set to: 1
 31851  018F88  8F51               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 31852                           
 31853                           ; BSR set to: 1
 31854  018F8A  0EFF               	movlw	255
 31855  018F8C  174F               	andwf	__div_to_l_@f1& (0+255),f,b
 31856  018F8E  0EFF               	movlw	255
 31857  018F90  1750               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 31858  018F92  0EFF               	movlw	255
 31859  018F94  1751               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 31860  018F96  0E00               	movlw	0
 31861  018F98  1752               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 31862                           
 31863                           ; BSR set to: 1
 31864  018F9A  8F55               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 31865  018F9C  0EFF               	movlw	255
 31866  018F9E  1753               	andwf	__div_to_l_@f2& (0+255),f,b
 31867  018FA0  0EFF               	movlw	255
 31868  018FA2  1754               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 31869  018FA4  0EFF               	movlw	255
 31870  018FA6  1755               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 31871  018FA8  0E00               	movlw	0
 31872  018FAA  1756               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 31873                           
 31874                           ; BSR set to: 1
 31875  018FAC  0E00               	movlw	0
 31876  018FAE  6F57               	movwf	__div_to_l_@quot& (0+255),b
 31877  018FB0  0E00               	movlw	0
 31878  018FB2  6F58               	movwf	(__div_to_l_@quot+1)& (0+255),b
 31879  018FB4  0E00               	movlw	0
 31880  018FB6  6F59               	movwf	(__div_to_l_@quot+2)& (0+255),b
 31881  018FB8  0E00               	movlw	0
 31882  018FBA  6F5A               	movwf	(__div_to_l_@quot+3)& (0+255),b
 31883                           
 31884                           ; BSR set to: 1
 31885  018FBC  0E7F               	movlw	127
 31886  018FBE  5F5C               	subwf	__div_to_l_@exp1& (0+255),f,b
 31887                           
 31888                           ; BSR set to: 1
 31889  018FC0  515B               	movf	__div_to_l_@cntr& (0+255),w,b
 31890  018FC2  0FA0               	addlw	160
 31891  018FC4  5F5C               	subwf	__div_to_l_@exp1& (0+255),f,b
 31892                           
 31893                           ; BSR set to: 1
 31894  018FC6  0E20               	movlw	32
 31895  018FC8  6F5B               	movwf	__div_to_l_@cntr& (0+255),b
 31896  018FCA                     
 31897                           ; BSR set to: 1
 31898                           
 31899                           ; BSR set to: 1
 31900  018FCA  90D8               	bcf	status,0,c
 31901  018FCC  3757               	rlcf	__div_to_l_@quot& (0+255),f,b
 31902  018FCE  3758               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 31903  018FD0  3759               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 31904  018FD2  375A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 31905                           
 31906                           ; BSR set to: 1
 31907  018FD4  5153               	movf	__div_to_l_@f2& (0+255),w,b
 31908  018FD6  5D4F               	subwf	__div_to_l_@f1& (0+255),w,b
 31909  018FD8  5154               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 31910  018FDA  5950               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 31911  018FDC  5155               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 31912  018FDE  5951               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 31913  018FE0  5156               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 31914  018FE2  5952               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 31915  018FE4  A0D8               	btfss	status,0,c
 31916  018FE6  D009               	goto	l2547
 31917                           
 31918                           ; BSR set to: 1
 31919  018FE8  5153               	movf	__div_to_l_@f2& (0+255),w,b
 31920  018FEA  5F4F               	subwf	__div_to_l_@f1& (0+255),f,b
 31921  018FEC  5154               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 31922  018FEE  5B50               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 31923  018FF0  5155               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 31924  018FF2  5B51               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 31925  018FF4  5156               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 31926  018FF6  5B52               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 31927                           
 31928                           ; BSR set to: 1
 31929  018FF8  8157               	bsf	__div_to_l_@quot& (0+255),0,b
 31930  018FFA                     l2547:
 31931                           
 31932                           ; BSR set to: 1
 31933                           
 31934                           ; BSR set to: 1
 31935  018FFA  90D8               	bcf	status,0,c
 31936  018FFC  374F               	rlcf	__div_to_l_@f1& (0+255),f,b
 31937  018FFE  3750               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 31938  019000  3751               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 31939  019002  3752               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 31940                           
 31941                           ; BSR set to: 1
 31942  019004  2F5B               	decfsz	__div_to_l_@cntr& (0+255),f,b
 31943  019006  D7E1               	goto	l2546
 31944                           
 31945                           ; BSR set to: 1
 31946                           
 31947                           ; BSR set to: 1
 31948  019008  AF5C               	btfss	__div_to_l_@exp1& (0+255),7,b
 31949  01900A  D016               	goto	l2549
 31950                           
 31951                           ; BSR set to: 1
 31952  01900C  515C               	movf	__div_to_l_@exp1& (0+255),w,b
 31953  01900E  0A80               	xorlw	128
 31954  019010  0F9F               	addlw	159
 31955  019012  B0D8               	btfsc	status,0,c
 31956  019014  D009               	goto	l2550
 31957                           
 31958                           ; BSR set to: 1
 31959  019016  0E00               	movlw	0
 31960  019018  6F4F               	movwf	?__div_to_l_& (0+255),b
 31961  01901A  0E00               	movlw	0
 31962  01901C  6F50               	movwf	(?__div_to_l_+1)& (0+255),b
 31963  01901E  0E00               	movlw	0
 31964  019020  6F51               	movwf	(?__div_to_l_+2)& (0+255),b
 31965  019022  0E00               	movlw	0
 31966  019024  6F52               	movwf	(?__div_to_l_+3)& (0+255),b
 31967                           
 31968                           ; BSR set to: 1
 31969  019026  0012               	return	
 31970  019028                     l2550:
 31971                           
 31972                           ; BSR set to: 1
 31973                           
 31974                           ; BSR set to: 1
 31975                           
 31976                           ; BSR set to: 1
 31977  019028  90D8               	bcf	status,0,c
 31978  01902A  335A               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 31979  01902C  3359               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 31980  01902E  3358               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 31981  019030  3357               	rrcf	__div_to_l_@quot& (0+255),f,b
 31982                           
 31983                           ; BSR set to: 1
 31984  019032  3F5C               	incfsz	__div_to_l_@exp1& (0+255),f,b
 31985  019034  D7F9               	goto	l2550
 31986                           
 31987                           ; BSR set to: 1
 31988  019036  D015               	goto	u19590
 31989  019038                     l2549:
 31990                           
 31991                           ; BSR set to: 1
 31992                           
 31993                           ; BSR set to: 1
 31994  019038  0E1F               	movlw	31
 31995  01903A  655C               	cpfsgt	__div_to_l_@exp1& (0+255),b
 31996  01903C  D00F               	goto	l2555
 31997                           
 31998                           ; BSR set to: 1
 31999  01903E  0E00               	movlw	0
 32000  019040  6F4F               	movwf	?__div_to_l_& (0+255),b
 32001  019042  0E00               	movlw	0
 32002  019044  6F50               	movwf	(?__div_to_l_+1)& (0+255),b
 32003  019046  0E00               	movlw	0
 32004  019048  6F51               	movwf	(?__div_to_l_+2)& (0+255),b
 32005  01904A  0E00               	movlw	0
 32006  01904C  6F52               	movwf	(?__div_to_l_+3)& (0+255),b
 32007                           
 32008                           ; BSR set to: 1
 32009  01904E  0012               	return	
 32010  019050                     
 32011                           ; BSR set to: 1
 32012                           
 32013                           ; BSR set to: 1
 32014  019050  90D8               	bcf	status,0,c
 32015  019052  3757               	rlcf	__div_to_l_@quot& (0+255),f,b
 32016  019054  3758               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 32017  019056  3759               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 32018  019058  375A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 32019  01905A  075C               	decf	__div_to_l_@exp1& (0+255),f,b
 32020  01905C                     l2555:
 32021                           
 32022                           ; BSR set to: 1
 32023                           
 32024                           ; BSR set to: 1
 32025  01905C  515C               	movf	__div_to_l_@exp1& (0+255),w,b
 32026  01905E  A4D8               	btfss	status,2,c
 32027  019060  D7F7               	goto	l2556
 32028  019062                     u19590:
 32029                           
 32030                           ; BSR set to: 1
 32031                           
 32032                           ; BSR set to: 1
 32033  019062  C157  F14F         	movff	__div_to_l_@quot,?__div_to_l_
 32034  019066  C158  F150         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 32035  01906A  C159  F151         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 32036  01906E  C15A  F152         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 32037                           
 32038                           ; BSR set to: 1
 32039  019072  0012               	return		;funcret
 32040  019074                     __end_of__div_to_l_:
 32041                           	opt stack 0
 32042                           tosu	equ	0xFFF
 32043                           tosh	equ	0xFFE
 32044                           tosl	equ	0xFFD
 32045                           pclath	equ	0xFFA
 32046                           tblptru	equ	0xFF8
 32047                           tblptrh	equ	0xFF7
 32048                           tblptrl	equ	0xFF6
 32049                           tablat	equ	0xFF5
 32050                           prodh	equ	0xFF4
 32051                           prodl	equ	0xFF3
 32052                           intcon	equ	0xFF2
 32053                           indf0	equ	0xFEF
 32054                           postinc0	equ	0xFEE
 32055                           fsr0h	equ	0xFEA
 32056                           fsr0l	equ	0xFE9
 32057                           wreg	equ	0xFE8
 32058                           indf1	equ	0xFE7
 32059                           postdec1	equ	0xFE5
 32060                           plusw1	equ	0xFE3
 32061                           fsr1h	equ	0xFE2
 32062                           fsr1l	equ	0xFE1
 32063                           indf2	equ	0xFDF
 32064                           postinc2	equ	0xFDE
 32065                           postdec2	equ	0xFDD
 32066                           plusw2	equ	0xFDB
 32067                           fsr2h	equ	0xFDA
 32068                           fsr2l	equ	0xFD9
 32069                           status	equ	0xFD8
 32070                           
 32071 ;; *************** function ___xxtofl *****************
 32072 ;; Defined at:
 32073 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 32074 ;; Parameters:    Size  Location     Type
 32075 ;;  sign            1    wreg     unsigned char 
 32076 ;;  val             4   79[BANK1 ] long 
 32077 ;; Auto vars:     Size  Location     Type
 32078 ;;  sign            1   87[BANK1 ] unsigned char 
 32079 ;;  arg             4   89[BANK1 ] unsigned long 
 32080 ;;  exp             1   88[BANK1 ] unsigned char 
 32081 ;; Return value:  Size  Location     Type
 32082 ;;                  4   79[BANK1 ] unsigned char 
 32083 ;; Registers used:
 32084 ;;		wreg, status,2, status,0
 32085 ;; Tracked objects:
 32086 ;;		On entry : 0/0
 32087 ;;		On exit  : 0/0
 32088 ;;		Unchanged: 0/0
 32089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32090 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32091 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32092 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32093 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32094 ;;Total ram usage:       14 bytes
 32095 ;; Hardware stack levels used:    1
 32096 ;; Hardware stack levels required when called:   19
 32097 ;; This function calls:
 32098 ;;		Nothing
 32099 ;; This function is called by:
 32100 ;;		_ringBufferLUT
 32101 ;;		__doprnt
 32102 ;; This function uses a non-reentrant model
 32103 ;;
 32104                           
 32105                           	psect	text53
 32106  0187D0                     __ptext53:
 32107                           	opt stack 0
 32108  0187D0                     ___xxtofl:
 32109                           	opt stack 7
 32110                           
 32111                           ; BSR set to: 1
 32112                           ;incstack = 0
 32113                           ;___xxtofl@sign stored from wreg
 32114  0187D0  0101               	movlb	1	; () banked
 32115  0187D2  6F57               	movwf	___xxtofl@sign& (0+255),b
 32116  0187D4  0101               	movlb	1	; () banked
 32117  0187D6  5157               	movf	___xxtofl@sign& (0+255),w,b
 32118  0187D8  A4D8               	btfss	status,2,c
 32119                           
 32120                           ; BSR set to: 1
 32121  0187DA  AF52               	btfss	(___xxtofl@val+3)& (0+255),7,b
 32122  0187DC  D01A               	goto	l3071
 32123                           
 32124                           ; BSR set to: 1
 32125  0187DE  C14F  F153         	movff	___xxtofl@val,??___xxtofl
 32126  0187E2  C150  F154         	movff	___xxtofl@val+1,??___xxtofl+1
 32127  0187E6  C151  F155         	movff	___xxtofl@val+2,??___xxtofl+2
 32128  0187EA  C152  F156         	movff	___xxtofl@val+3,??___xxtofl+3
 32129  0187EE  1F53               	comf	??___xxtofl& (0+255),f,b
 32130  0187F0  1F54               	comf	(??___xxtofl+1)& (0+255),f,b
 32131  0187F2  1F55               	comf	(??___xxtofl+2)& (0+255),f,b
 32132  0187F4  1F56               	comf	(??___xxtofl+3)& (0+255),f,b
 32133  0187F6  2B53               	incf	??___xxtofl& (0+255),f,b
 32134  0187F8  0E00               	movlw	0
 32135  0187FA  2354               	addwfc	(??___xxtofl+1)& (0+255),f,b
 32136  0187FC  2355               	addwfc	(??___xxtofl+2)& (0+255),f,b
 32137  0187FE  2356               	addwfc	(??___xxtofl+3)& (0+255),f,b
 32138  018800  C153  F159         	movff	??___xxtofl,___xxtofl@arg
 32139  018804  C154  F15A         	movff	??___xxtofl+1,___xxtofl@arg+1
 32140  018808  C155  F15B         	movff	??___xxtofl+2,___xxtofl@arg+2
 32141  01880C  C156  F15C         	movff	??___xxtofl+3,___xxtofl@arg+3
 32142  018810  D008               	goto	l3072
 32143  018812                     l3071:
 32144                           
 32145                           ; BSR set to: 1
 32146  018812  C14F  F159         	movff	___xxtofl@val,___xxtofl@arg
 32147  018816  C150  F15A         	movff	___xxtofl@val+1,___xxtofl@arg+1
 32148  01881A  C151  F15B         	movff	___xxtofl@val+2,___xxtofl@arg+2
 32149  01881E  C152  F15C         	movff	___xxtofl@val+3,___xxtofl@arg+3
 32150  018822                     l3072:
 32151                           
 32152                           ; BSR set to: 1
 32153                           
 32154                           ; BSR set to: 1
 32155  018822  514F               	movf	___xxtofl@val& (0+255),w,b
 32156  018824  1150               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 32157  018826  1151               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 32158  018828  1152               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 32159  01882A  A4D8               	btfss	status,2,c
 32160  01882C  D009               	goto	l3073
 32161                           
 32162                           ; BSR set to: 1
 32163  01882E  0E00               	movlw	0
 32164  018830  6F4F               	movwf	?___xxtofl& (0+255),b
 32165  018832  0E00               	movlw	0
 32166  018834  6F50               	movwf	(?___xxtofl+1)& (0+255),b
 32167  018836  0E00               	movlw	0
 32168  018838  6F51               	movwf	(?___xxtofl+2)& (0+255),b
 32169  01883A  0E00               	movlw	0
 32170  01883C  6F52               	movwf	(?___xxtofl+3)& (0+255),b
 32171                           
 32172                           ; BSR set to: 1
 32173  01883E  0012               	return	
 32174  018840                     l3073:
 32175                           
 32176                           ; BSR set to: 1
 32177                           
 32178                           ; BSR set to: 1
 32179  018840  0E96               	movlw	150
 32180  018842  6F58               	movwf	___xxtofl@exp& (0+255),b
 32181  018844  D006               	goto	l3075
 32182  018846                     
 32183                           ; BSR set to: 1
 32184                           
 32185                           ; BSR set to: 1
 32186  018846  2B58               	incf	___xxtofl@exp& (0+255),f,b
 32187  018848  90D8               	bcf	status,0,c
 32188  01884A  335C               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 32189  01884C  335B               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 32190  01884E  335A               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 32191  018850  3359               	rrcf	___xxtofl@arg& (0+255),f,b
 32192  018852                     l3075:
 32193                           
 32194                           ; BSR set to: 1
 32195                           
 32196                           ; BSR set to: 1
 32197  018852  0E00               	movlw	0
 32198  018854  1559               	andwf	___xxtofl@arg& (0+255),w,b
 32199  018856  6F53               	movwf	??___xxtofl& (0+255),b
 32200  018858  0E00               	movlw	0
 32201  01885A  155A               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 32202  01885C  6F54               	movwf	(??___xxtofl+1)& (0+255),b
 32203  01885E  0E00               	movlw	0
 32204  018860  155B               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 32205  018862  6F55               	movwf	(??___xxtofl+2)& (0+255),b
 32206  018864  0EFE               	movlw	254
 32207  018866  155C               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 32208  018868  6F56               	movwf	(??___xxtofl+3)& (0+255),b
 32209  01886A  5153               	movf	??___xxtofl& (0+255),w,b
 32210  01886C  1154               	iorwf	(??___xxtofl+1)& (0+255),w,b
 32211  01886E  1155               	iorwf	(??___xxtofl+2)& (0+255),w,b
 32212  018870  1156               	iorwf	(??___xxtofl+3)& (0+255),w,b
 32213  018872  B4D8               	btfsc	status,2,c
 32214  018874  D00D               	goto	l3078
 32215  018876  D7E7               	goto	l3076
 32216  018878                     
 32217                           ; BSR set to: 1
 32218                           
 32219                           ; BSR set to: 1
 32220  018878  2B58               	incf	___xxtofl@exp& (0+255),f,b
 32221                           
 32222                           ; BSR set to: 1
 32223  01887A  0E01               	movlw	1
 32224  01887C  2759               	addwf	___xxtofl@arg& (0+255),f,b
 32225  01887E  0E00               	movlw	0
 32226  018880  235A               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 32227  018882  235B               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 32228  018884  235C               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 32229                           
 32230                           ; BSR set to: 1
 32231  018886  90D8               	bcf	status,0,c
 32232  018888  335C               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 32233  01888A  335B               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 32234  01888C  335A               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 32235  01888E  3359               	rrcf	___xxtofl@arg& (0+255),f,b
 32236  018890                     l3078:
 32237                           
 32238                           ; BSR set to: 1
 32239  018890  0E00               	movlw	0
 32240  018892  1559               	andwf	___xxtofl@arg& (0+255),w,b
 32241  018894  6F53               	movwf	??___xxtofl& (0+255),b
 32242  018896  0E00               	movlw	0
 32243  018898  155A               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 32244  01889A  6F54               	movwf	(??___xxtofl+1)& (0+255),b
 32245  01889C  0E00               	movlw	0
 32246  01889E  155B               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 32247  0188A0  6F55               	movwf	(??___xxtofl+2)& (0+255),b
 32248  0188A2  0EFF               	movlw	255
 32249  0188A4  155C               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 32250  0188A6  6F56               	movwf	(??___xxtofl+3)& (0+255),b
 32251  0188A8  5153               	movf	??___xxtofl& (0+255),w,b
 32252  0188AA  1154               	iorwf	(??___xxtofl+1)& (0+255),w,b
 32253  0188AC  1155               	iorwf	(??___xxtofl+2)& (0+255),w,b
 32254  0188AE  1156               	iorwf	(??___xxtofl+3)& (0+255),w,b
 32255  0188B0  B4D8               	btfsc	status,2,c
 32256  0188B2  D007               	goto	l3081
 32257  0188B4  D7E1               	goto	l3079
 32258  0188B6                     
 32259                           ; BSR set to: 1
 32260                           
 32261                           ; BSR set to: 1
 32262  0188B6  0758               	decf	___xxtofl@exp& (0+255),f,b
 32263  0188B8  90D8               	bcf	status,0,c
 32264  0188BA  3759               	rlcf	___xxtofl@arg& (0+255),f,b
 32265  0188BC  375A               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 32266  0188BE  375B               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 32267  0188C0  375C               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 32268  0188C2                     l3081:
 32269                           
 32270                           ; BSR set to: 1
 32271                           
 32272                           ; BSR set to: 1
 32273  0188C2  BF5B               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 32274  0188C4  D003               	goto	u19870
 32275                           
 32276                           ; BSR set to: 1
 32277  0188C6  0E02               	movlw	2
 32278  0188C8  6158               	cpfslt	___xxtofl@exp& (0+255),b
 32279  0188CA  D7F5               	goto	l3082
 32280  0188CC                     u19870:
 32281                           
 32282                           ; BSR set to: 1
 32283                           
 32284                           ; BSR set to: 1
 32285  0188CC  B158               	btfsc	___xxtofl@exp& (0+255),0,b
 32286  0188CE  D008               	goto	l3086
 32287                           
 32288                           ; BSR set to: 1
 32289  0188D0  0EFF               	movlw	255
 32290  0188D2  1759               	andwf	___xxtofl@arg& (0+255),f,b
 32291  0188D4  0EFF               	movlw	255
 32292  0188D6  175A               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 32293  0188D8  0E7F               	movlw	127
 32294  0188DA  175B               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 32295  0188DC  0EFF               	movlw	255
 32296  0188DE  175C               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 32297  0188E0                     l3086:
 32298                           
 32299                           ; BSR set to: 1
 32300  0188E0  90D8               	bcf	status,0,c
 32301  0188E2  3358               	rrcf	___xxtofl@exp& (0+255),f,b
 32302  0188E4  C158  F153         	movff	___xxtofl@exp,??___xxtofl
 32303  0188E8  6B54               	clrf	(??___xxtofl+1)& (0+255),b
 32304  0188EA  6B55               	clrf	(??___xxtofl+2)& (0+255),b
 32305  0188EC  6B56               	clrf	(??___xxtofl+3)& (0+255),b
 32306  0188EE  C153  F156         	movff	??___xxtofl,??___xxtofl+3
 32307  0188F2  6B55               	clrf	(??___xxtofl+2)& (0+255),b
 32308  0188F4  6B54               	clrf	(??___xxtofl+1)& (0+255),b
 32309  0188F6  6B53               	clrf	??___xxtofl& (0+255),b
 32310  0188F8  5153               	movf	??___xxtofl& (0+255),w,b
 32311  0188FA  1359               	iorwf	___xxtofl@arg& (0+255),f,b
 32312  0188FC  5154               	movf	(??___xxtofl+1)& (0+255),w,b
 32313  0188FE  135A               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 32314  018900  5155               	movf	(??___xxtofl+2)& (0+255),w,b
 32315  018902  135B               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 32316  018904  5156               	movf	(??___xxtofl+3)& (0+255),w,b
 32317  018906  135C               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 32318                           
 32319                           ; BSR set to: 1
 32320  018908  5157               	movf	___xxtofl@sign& (0+255),w,b
 32321  01890A  A4D8               	btfss	status,2,c
 32322                           
 32323                           ; BSR set to: 1
 32324  01890C  AF52               	btfss	(___xxtofl@val+3)& (0+255),7,b
 32325  01890E  D001               	goto	l3087
 32326                           
 32327                           ; BSR set to: 1
 32328  018910  8F5C               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 32329  018912                     l3087:
 32330                           
 32331                           ; BSR set to: 1
 32332                           
 32333                           ; BSR set to: 1
 32334  018912  C159  F14F         	movff	___xxtofl@arg,?___xxtofl
 32335  018916  C15A  F150         	movff	___xxtofl@arg+1,?___xxtofl+1
 32336  01891A  C15B  F151         	movff	___xxtofl@arg+2,?___xxtofl+2
 32337  01891E  C15C  F152         	movff	___xxtofl@arg+3,?___xxtofl+3
 32338  018922  0012               	return	
 32339  018924                     __end_of___xxtofl:
 32340                           	opt stack 0
 32341                           tosu	equ	0xFFF
 32342                           tosh	equ	0xFFE
 32343                           tosl	equ	0xFFD
 32344                           pclath	equ	0xFFA
 32345                           tblptru	equ	0xFF8
 32346                           tblptrh	equ	0xFF7
 32347                           tblptrl	equ	0xFF6
 32348                           tablat	equ	0xFF5
 32349                           prodh	equ	0xFF4
 32350                           prodl	equ	0xFF3
 32351                           intcon	equ	0xFF2
 32352                           indf0	equ	0xFEF
 32353                           postinc0	equ	0xFEE
 32354                           fsr0h	equ	0xFEA
 32355                           fsr0l	equ	0xFE9
 32356                           wreg	equ	0xFE8
 32357                           indf1	equ	0xFE7
 32358                           postdec1	equ	0xFE5
 32359                           plusw1	equ	0xFE3
 32360                           fsr1h	equ	0xFE2
 32361                           fsr1l	equ	0xFE1
 32362                           indf2	equ	0xFDF
 32363                           postinc2	equ	0xFDE
 32364                           postdec2	equ	0xFDD
 32365                           plusw2	equ	0xFDB
 32366                           fsr2h	equ	0xFDA
 32367                           fsr2l	equ	0xFD9
 32368                           status	equ	0xFD8
 32369                           
 32370 ;; *************** function ___wmul *****************
 32371 ;; Defined at:
 32372 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 32373 ;; Parameters:    Size  Location     Type
 32374 ;;  multiplier      2   79[BANK1 ] unsigned int 
 32375 ;;  multiplicand    2   81[BANK1 ] unsigned int 
 32376 ;; Auto vars:     Size  Location     Type
 32377 ;;  product         2   83[BANK1 ] unsigned int 
 32378 ;; Return value:  Size  Location     Type
 32379 ;;                  2   79[BANK1 ] unsigned int 
 32380 ;; Registers used:
 32381 ;;		wreg, status,2, status,0, prodl, prodh
 32382 ;; Tracked objects:
 32383 ;;		On entry : 0/0
 32384 ;;		On exit  : 0/0
 32385 ;;		Unchanged: 0/0
 32386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32387 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32388 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32390 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32391 ;;Total ram usage:        6 bytes
 32392 ;; Hardware stack levels used:    1
 32393 ;; Hardware stack levels required when called:   19
 32394 ;; This function calls:
 32395 ;;		Nothing
 32396 ;; This function is called by:
 32397 ;;		_ringBufferLUT
 32398 ;;		__doprnt
 32399 ;;		_atoi
 32400 ;; This function uses a non-reentrant model
 32401 ;;
 32402                           
 32403                           	psect	text54
 32404  01BA82                     __ptext54:
 32405                           	opt stack 0
 32406  01BA82                     ___wmul:
 32407                           	opt stack 7
 32408                           
 32409                           ; BSR set to: 1
 32410                           ;incstack = 0
 32411  01BA82  0101               	movlb	1	; () banked
 32412  01BA84  514F               	movf	___wmul@multiplier& (0+255),w,b
 32413  01BA86  0351               	mulwf	___wmul@multiplicand& (0+255),b
 32414  01BA88  CFF3 F153          	movff	prodl,___wmul@product
 32415  01BA8C  CFF4 F154          	movff	prodh,___wmul@product+1
 32416  01BA90  514F               	movf	___wmul@multiplier& (0+255),w,b
 32417  01BA92  0352               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 32418  01BA94  50F3               	movf	prodl,w,c
 32419  01BA96  2754               	addwf	(___wmul@product+1)& (0+255),f,b
 32420  01BA98  5150               	movf	(___wmul@multiplier+1)& (0+255),w,b
 32421  01BA9A  0351               	mulwf	___wmul@multiplicand& (0+255),b
 32422  01BA9C  50F3               	movf	prodl,w,c
 32423  01BA9E  2754               	addwf	(___wmul@product+1)& (0+255),f,b
 32424                           
 32425                           ; BSR set to: 1
 32426  01BAA0  C153  F14F         	movff	___wmul@product,?___wmul
 32427  01BAA4  C154  F150         	movff	___wmul@product+1,?___wmul+1
 32428  01BAA8  0012               	return	
 32429  01BAAA                     __end_of___wmul:
 32430                           	opt stack 0
 32431                           tosu	equ	0xFFF
 32432                           tosh	equ	0xFFE
 32433                           tosl	equ	0xFFD
 32434                           pclath	equ	0xFFA
 32435                           tblptru	equ	0xFF8
 32436                           tblptrh	equ	0xFF7
 32437                           tblptrl	equ	0xFF6
 32438                           tablat	equ	0xFF5
 32439                           prodh	equ	0xFF4
 32440                           prodl	equ	0xFF3
 32441                           intcon	equ	0xFF2
 32442                           indf0	equ	0xFEF
 32443                           postinc0	equ	0xFEE
 32444                           fsr0h	equ	0xFEA
 32445                           fsr0l	equ	0xFE9
 32446                           wreg	equ	0xFE8
 32447                           indf1	equ	0xFE7
 32448                           postdec1	equ	0xFE5
 32449                           plusw1	equ	0xFE3
 32450                           fsr1h	equ	0xFE2
 32451                           fsr1l	equ	0xFE1
 32452                           indf2	equ	0xFDF
 32453                           postinc2	equ	0xFDE
 32454                           postdec2	equ	0xFDD
 32455                           plusw2	equ	0xFDB
 32456                           fsr2h	equ	0xFDA
 32457                           fsr2l	equ	0xFD9
 32458                           status	equ	0xFD8
 32459                           
 32460 ;; *************** function ___llmod *****************
 32461 ;; Defined at:
 32462 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 32463 ;; Parameters:    Size  Location     Type
 32464 ;;  dividend        4    0[BANK2 ] unsigned long 
 32465 ;;  divisor         4    4[BANK2 ] unsigned long 
 32466 ;; Auto vars:     Size  Location     Type
 32467 ;;  counter         1   92[BANK1 ] unsigned char 
 32468 ;; Return value:  Size  Location     Type
 32469 ;;                  4    0[BANK2 ] unsigned long 
 32470 ;; Registers used:
 32471 ;;		wreg, status,2, status,0
 32472 ;; Tracked objects:
 32473 ;;		On entry : 0/0
 32474 ;;		On exit  : 0/0
 32475 ;;		Unchanged: 0/0
 32476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32477 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0
 32478 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32480 ;;      Totals:         0       0       1       8       0       0       0       0       0       0       0       0       
      +0       0       0
 32481 ;;Total ram usage:        9 bytes
 32482 ;; Hardware stack levels used:    1
 32483 ;; Hardware stack levels required when called:   19
 32484 ;; This function calls:
 32485 ;;		Nothing
 32486 ;; This function is called by:
 32487 ;;		__doprnt
 32488 ;; This function uses a non-reentrant model
 32489 ;;
 32490                           
 32491                           	psect	text55
 32492  01A744                     __ptext55:
 32493                           	opt stack 0
 32494  01A744                     ___llmod:
 32495                           	opt stack 7
 32496                           
 32497                           ; BSR set to: 1
 32498                           ;incstack = 0
 32499  01A744  0102               	movlb	2	; () banked
 32500  01A746  5104               	movf	___llmod@divisor& (0+255),w,b
 32501  01A748  1105               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 32502  01A74A  1106               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 32503  01A74C  1107               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 32504  01A74E  B4D8               	btfsc	status,2,c
 32505  01A750  D02A               	goto	l2770
 32506                           
 32507                           ; BSR set to: 2
 32508  01A752  0E01               	movlw	1
 32509  01A754  0101               	movlb	1	; () banked
 32510  01A756  6F5C               	movwf	___llmod@counter& (0+255),b
 32511  01A758  D008               	goto	l2765
 32512  01A75A                     
 32513                           ; BSR set to: 1
 32514  01A75A  0102               	movlb	2	; () banked
 32515  01A75C  90D8               	bcf	status,0,c
 32516  01A75E  3704               	rlcf	___llmod@divisor& (0+255),f,b
 32517  01A760  3705               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 32518  01A762  3706               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 32519  01A764  3707               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 32520  01A766  0101               	movlb	1	; () banked
 32521  01A768  2B5C               	incf	___llmod@counter& (0+255),f,b
 32522  01A76A                     l2765:
 32523                           
 32524                           ; BSR set to: 1
 32525                           
 32526                           ; BSR set to: 1
 32527  01A76A  0102               	movlb	2	; () banked
 32528  01A76C  AF07               	btfss	(___llmod@divisor+3)& (0+255),7,b
 32529  01A76E  D7F5               	goto	l2766
 32530  01A770                     u19790:
 32531                           
 32532                           ; BSR set to: 2
 32533                           
 32534                           ; BSR set to: 2
 32535  01A770  0102               	movlb	2	; () banked
 32536  01A772  5104               	movf	___llmod@divisor& (0+255),w,b
 32537  01A774  5D00               	subwf	___llmod@dividend& (0+255),w,b
 32538  01A776  5105               	movf	(___llmod@divisor+1)& (0+255),w,b
 32539  01A778  5901               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 32540  01A77A  5106               	movf	(___llmod@divisor+2)& (0+255),w,b
 32541  01A77C  5902               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 32542  01A77E  5107               	movf	(___llmod@divisor+3)& (0+255),w,b
 32543  01A780  5903               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 32544  01A782  A0D8               	btfss	status,0,c
 32545  01A784  D008               	goto	l2769
 32546                           
 32547                           ; BSR set to: 2
 32548  01A786  5104               	movf	___llmod@divisor& (0+255),w,b
 32549  01A788  5F00               	subwf	___llmod@dividend& (0+255),f,b
 32550  01A78A  5105               	movf	(___llmod@divisor+1)& (0+255),w,b
 32551  01A78C  5B01               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 32552  01A78E  5106               	movf	(___llmod@divisor+2)& (0+255),w,b
 32553  01A790  5B02               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 32554  01A792  5107               	movf	(___llmod@divisor+3)& (0+255),w,b
 32555  01A794  5B03               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 32556  01A796                     l2769:
 32557                           
 32558                           ; BSR set to: 2
 32559                           
 32560                           ; BSR set to: 2
 32561  01A796  90D8               	bcf	status,0,c
 32562  01A798  3307               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 32563  01A79A  3306               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 32564  01A79C  3305               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 32565  01A79E  3304               	rrcf	___llmod@divisor& (0+255),f,b
 32566                           
 32567                           ; BSR set to: 2
 32568  01A7A0  0101               	movlb	1	; () banked
 32569  01A7A2  2F5C               	decfsz	___llmod@counter& (0+255),f,b
 32570  01A7A4  D7E5               	goto	u19790
 32571  01A7A6                     l2770:
 32572                           
 32573                           ; BSR set to: 1
 32574  01A7A6  C200  F200         	movff	___llmod@dividend,?___llmod
 32575  01A7AA  C201  F201         	movff	___llmod@dividend+1,?___llmod+1
 32576  01A7AE  C202  F202         	movff	___llmod@dividend+2,?___llmod+2
 32577  01A7B2  C203  F203         	movff	___llmod@dividend+3,?___llmod+3
 32578  01A7B6  0012               	return		;funcret
 32579  01A7B8                     __end_of___llmod:
 32580                           	opt stack 0
 32581                           tosu	equ	0xFFF
 32582                           tosh	equ	0xFFE
 32583                           tosl	equ	0xFFD
 32584                           pclath	equ	0xFFA
 32585                           tblptru	equ	0xFF8
 32586                           tblptrh	equ	0xFF7
 32587                           tblptrl	equ	0xFF6
 32588                           tablat	equ	0xFF5
 32589                           prodh	equ	0xFF4
 32590                           prodl	equ	0xFF3
 32591                           intcon	equ	0xFF2
 32592                           indf0	equ	0xFEF
 32593                           postinc0	equ	0xFEE
 32594                           fsr0h	equ	0xFEA
 32595                           fsr0l	equ	0xFE9
 32596                           wreg	equ	0xFE8
 32597                           indf1	equ	0xFE7
 32598                           postdec1	equ	0xFE5
 32599                           plusw1	equ	0xFE3
 32600                           fsr1h	equ	0xFE2
 32601                           fsr1l	equ	0xFE1
 32602                           indf2	equ	0xFDF
 32603                           postinc2	equ	0xFDE
 32604                           postdec2	equ	0xFDD
 32605                           plusw2	equ	0xFDB
 32606                           fsr2h	equ	0xFDA
 32607                           fsr2l	equ	0xFD9
 32608                           status	equ	0xFD8
 32609                           
 32610 ;; *************** function ___lldiv *****************
 32611 ;; Defined at:
 32612 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 32613 ;; Parameters:    Size  Location     Type
 32614 ;;  dividend        4   79[BANK1 ] unsigned long 
 32615 ;;  divisor         4   83[BANK1 ] unsigned long 
 32616 ;; Auto vars:     Size  Location     Type
 32617 ;;  quotient        4   87[BANK1 ] unsigned long 
 32618 ;;  counter         1   91[BANK1 ] unsigned char 
 32619 ;; Return value:  Size  Location     Type
 32620 ;;                  4   79[BANK1 ] unsigned long 
 32621 ;; Registers used:
 32622 ;;		wreg, status,2, status,0
 32623 ;; Tracked objects:
 32624 ;;		On entry : 0/0
 32625 ;;		On exit  : 0/0
 32626 ;;		Unchanged: 0/0
 32627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32628 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32629 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32631 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32632 ;;Total ram usage:       13 bytes
 32633 ;; Hardware stack levels used:    1
 32634 ;; Hardware stack levels required when called:   19
 32635 ;; This function calls:
 32636 ;;		Nothing
 32637 ;; This function is called by:
 32638 ;;		__doprnt
 32639 ;; This function uses a non-reentrant model
 32640 ;;
 32641                           
 32642                           	psect	text56
 32643  01A34E                     __ptext56:
 32644                           	opt stack 0
 32645  01A34E                     ___lldiv:
 32646                           	opt stack 7
 32647                           
 32648                           ;incstack = 0
 32649  01A34E  0E00               	movlw	0
 32650  01A350  0101               	movlb	1	; () banked
 32651  01A352  6F57               	movwf	___lldiv@quotient& (0+255),b
 32652  01A354  0E00               	movlw	0
 32653  01A356  6F58               	movwf	(___lldiv@quotient+1)& (0+255),b
 32654  01A358  0E00               	movlw	0
 32655  01A35A  6F59               	movwf	(___lldiv@quotient+2)& (0+255),b
 32656  01A35C  0E00               	movlw	0
 32657  01A35E  6F5A               	movwf	(___lldiv@quotient+3)& (0+255),b
 32658                           
 32659                           ; BSR set to: 1
 32660  01A360  5153               	movf	___lldiv@divisor& (0+255),w,b
 32661  01A362  1154               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 32662  01A364  1155               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 32663  01A366  1156               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 32664  01A368  B4D8               	btfsc	status,2,c
 32665  01A36A  D02A               	goto	l2760
 32666                           
 32667                           ; BSR set to: 1
 32668  01A36C  0E01               	movlw	1
 32669  01A36E  6F5B               	movwf	___lldiv@counter& (0+255),b
 32670  01A370  D006               	goto	l2755
 32671  01A372                     
 32672                           ; BSR set to: 1
 32673                           
 32674                           ; BSR set to: 1
 32675  01A372  90D8               	bcf	status,0,c
 32676  01A374  3753               	rlcf	___lldiv@divisor& (0+255),f,b
 32677  01A376  3754               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 32678  01A378  3755               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 32679  01A37A  3756               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 32680  01A37C  2B5B               	incf	___lldiv@counter& (0+255),f,b
 32681  01A37E                     l2755:
 32682                           
 32683                           ; BSR set to: 1
 32684                           
 32685                           ; BSR set to: 1
 32686  01A37E  AF56               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 32687  01A380  D7F8               	goto	l2756
 32688  01A382                     u19760:
 32689                           
 32690                           ; BSR set to: 1
 32691                           
 32692                           ; BSR set to: 1
 32693                           
 32694                           ; BSR set to: 1
 32695  01A382  90D8               	bcf	status,0,c
 32696  01A384  3757               	rlcf	___lldiv@quotient& (0+255),f,b
 32697  01A386  3758               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 32698  01A388  3759               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 32699  01A38A  375A               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 32700                           
 32701                           ; BSR set to: 1
 32702  01A38C  5153               	movf	___lldiv@divisor& (0+255),w,b
 32703  01A38E  5D4F               	subwf	___lldiv@dividend& (0+255),w,b
 32704  01A390  5154               	movf	(___lldiv@divisor+1)& (0+255),w,b
 32705  01A392  5950               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 32706  01A394  5155               	movf	(___lldiv@divisor+2)& (0+255),w,b
 32707  01A396  5951               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 32708  01A398  5156               	movf	(___lldiv@divisor+3)& (0+255),w,b
 32709  01A39A  5952               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 32710  01A39C  A0D8               	btfss	status,0,c
 32711  01A39E  D009               	goto	l2759
 32712                           
 32713                           ; BSR set to: 1
 32714  01A3A0  5153               	movf	___lldiv@divisor& (0+255),w,b
 32715  01A3A2  5F4F               	subwf	___lldiv@dividend& (0+255),f,b
 32716  01A3A4  5154               	movf	(___lldiv@divisor+1)& (0+255),w,b
 32717  01A3A6  5B50               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 32718  01A3A8  5155               	movf	(___lldiv@divisor+2)& (0+255),w,b
 32719  01A3AA  5B51               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 32720  01A3AC  5156               	movf	(___lldiv@divisor+3)& (0+255),w,b
 32721  01A3AE  5B52               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 32722                           
 32723                           ; BSR set to: 1
 32724  01A3B0  8157               	bsf	___lldiv@quotient& (0+255),0,b
 32725  01A3B2                     l2759:
 32726                           
 32727                           ; BSR set to: 1
 32728                           
 32729                           ; BSR set to: 1
 32730  01A3B2  90D8               	bcf	status,0,c
 32731  01A3B4  3356               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 32732  01A3B6  3355               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 32733  01A3B8  3354               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 32734  01A3BA  3353               	rrcf	___lldiv@divisor& (0+255),f,b
 32735                           
 32736                           ; BSR set to: 1
 32737  01A3BC  2F5B               	decfsz	___lldiv@counter& (0+255),f,b
 32738  01A3BE  D7E1               	goto	u19760
 32739  01A3C0                     l2760:
 32740                           
 32741                           ; BSR set to: 1
 32742                           
 32743                           ; BSR set to: 1
 32744  01A3C0  C157  F14F         	movff	___lldiv@quotient,?___lldiv
 32745  01A3C4  C158  F150         	movff	___lldiv@quotient+1,?___lldiv+1
 32746  01A3C8  C159  F151         	movff	___lldiv@quotient+2,?___lldiv+2
 32747  01A3CC  C15A  F152         	movff	___lldiv@quotient+3,?___lldiv+3
 32748                           
 32749                           ; BSR set to: 1
 32750  01A3D0  0012               	return		;funcret
 32751  01A3D2                     __end_of___lldiv:
 32752                           	opt stack 0
 32753                           tosu	equ	0xFFF
 32754                           tosh	equ	0xFFE
 32755                           tosl	equ	0xFFD
 32756                           pclath	equ	0xFFA
 32757                           tblptru	equ	0xFF8
 32758                           tblptrh	equ	0xFF7
 32759                           tblptrl	equ	0xFF6
 32760                           tablat	equ	0xFF5
 32761                           prodh	equ	0xFF4
 32762                           prodl	equ	0xFF3
 32763                           intcon	equ	0xFF2
 32764                           indf0	equ	0xFEF
 32765                           postinc0	equ	0xFEE
 32766                           fsr0h	equ	0xFEA
 32767                           fsr0l	equ	0xFE9
 32768                           wreg	equ	0xFE8
 32769                           indf1	equ	0xFE7
 32770                           postdec1	equ	0xFE5
 32771                           plusw1	equ	0xFE3
 32772                           fsr1h	equ	0xFE2
 32773                           fsr1l	equ	0xFE1
 32774                           indf2	equ	0xFDF
 32775                           postinc2	equ	0xFDE
 32776                           postdec2	equ	0xFDD
 32777                           plusw2	equ	0xFDB
 32778                           fsr2h	equ	0xFDA
 32779                           fsr2l	equ	0xFD9
 32780                           status	equ	0xFD8
 32781                           
 32782 ;; *************** function ___fltol *****************
 32783 ;; Defined at:
 32784 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 32785 ;; Parameters:    Size  Location     Type
 32786 ;;  f1              4   83[BANK2 ] unsigned long 
 32787 ;; Auto vars:     Size  Location     Type
 32788 ;;  exp1            1   94[BANK1 ] unsigned char 
 32789 ;;  sign1           1   93[BANK1 ] unsigned char 
 32790 ;; Return value:  Size  Location     Type
 32791 ;;                  4   83[BANK2 ] long 
 32792 ;; Registers used:
 32793 ;;		wreg, status,2, status,0
 32794 ;; Tracked objects:
 32795 ;;		On entry : 0/0
 32796 ;;		On exit  : 0/0
 32797 ;;		Unchanged: 0/0
 32798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32799 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
 32800 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32801 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
 32802 ;;      Totals:         0       0       2       8       0       0       0       0       0       0       0       0       
      +0       0       0
 32803 ;;Total ram usage:       10 bytes
 32804 ;; Hardware stack levels used:    1
 32805 ;; Hardware stack levels required when called:   19
 32806 ;; This function calls:
 32807 ;;		Nothing
 32808 ;; This function is called by:
 32809 ;;		__doprnt
 32810 ;;		_ftoa
 32811 ;; This function uses a non-reentrant model
 32812 ;;
 32813                           
 32814                           	psect	text57
 32815  0196F8                     __ptext57:
 32816                           	opt stack 0
 32817  0196F8                     ___fltol:
 32818                           	opt stack 7
 32819                           
 32820                           ; BSR set to: 1
 32821                           ;incstack = 0
 32822  0196F8  0102               	movlb	2	; () banked
 32823  0196FA  3555               	rlcf	(___fltol@f1+2)& (0+255),w,b
 32824  0196FC  3556               	rlcf	(___fltol@f1+3)& (0+255),w,b
 32825  0196FE  0101               	movlb	1	; () banked
 32826  019700  6F5E               	movwf	___fltol@exp1& (0+255),b
 32827  019702  515E               	movf	___fltol@exp1& (0+255),w,b
 32828  019704  A4D8               	btfss	status,2,c
 32829  019706  D00A               	goto	l2590
 32830                           
 32831                           ; BSR set to: 1
 32832  019708  0E00               	movlw	0
 32833  01970A  0102               	movlb	2	; () banked
 32834  01970C  6F53               	movwf	?___fltol& (0+255),b
 32835  01970E  0E00               	movlw	0
 32836  019710  6F54               	movwf	(?___fltol+1)& (0+255),b
 32837  019712  0E00               	movlw	0
 32838  019714  6F55               	movwf	(?___fltol+2)& (0+255),b
 32839  019716  0E00               	movlw	0
 32840  019718  6F56               	movwf	(?___fltol+3)& (0+255),b
 32841                           
 32842                           ; BSR set to: 2
 32843  01971A  0012               	return	
 32844  01971C                     l2590:
 32845                           
 32846                           ; BSR set to: 2
 32847  01971C  C253  F257         	movff	___fltol@f1,??___fltol
 32848  019720  C254  F258         	movff	___fltol@f1+1,??___fltol+1
 32849  019724  C255  F259         	movff	___fltol@f1+2,??___fltol+2
 32850  019728  C256  F25A         	movff	___fltol@f1+3,??___fltol+3
 32851  01972C  0E20               	movlw	32
 32852  01972E  D006               	goto	u26270
 32853  019730                     u26275:
 32854  019730  0102               	movlb	2	; () banked
 32855  019732  90D8               	bcf	status,0,c
 32856  019734  335A               	rrcf	(??___fltol+3)& (0+255),f,b
 32857  019736  3359               	rrcf	(??___fltol+2)& (0+255),f,b
 32858  019738  3358               	rrcf	(??___fltol+1)& (0+255),f,b
 32859  01973A  3357               	rrcf	??___fltol& (0+255),f,b
 32860  01973C                     u26270:
 32861  01973C  2EE8               	decfsz	wreg,f,c
 32862  01973E  D7F8               	goto	u26275
 32863  019740  5157               	movf	??___fltol& (0+255),w,b
 32864  019742  0101               	movlb	1	; () banked
 32865  019744  6F5D               	movwf	___fltol@sign1& (0+255),b
 32866                           
 32867                           ; BSR set to: 1
 32868  019746  0102               	movlb	2	; () banked
 32869  019748  8F55               	bsf	(___fltol@f1+2)& (0+255),7,b
 32870                           
 32871                           ; BSR set to: 2
 32872  01974A  0EFF               	movlw	255
 32873  01974C  1753               	andwf	___fltol@f1& (0+255),f,b
 32874  01974E  0EFF               	movlw	255
 32875  019750  1754               	andwf	(___fltol@f1+1)& (0+255),f,b
 32876  019752  0EFF               	movlw	255
 32877  019754  1755               	andwf	(___fltol@f1+2)& (0+255),f,b
 32878  019756  0E00               	movlw	0
 32879  019758  1756               	andwf	(___fltol@f1+3)& (0+255),f,b
 32880                           
 32881                           ; BSR set to: 2
 32882  01975A  0E96               	movlw	150
 32883  01975C  0101               	movlb	1	; () banked
 32884  01975E  5F5E               	subwf	___fltol@exp1& (0+255),f,b
 32885                           
 32886                           ; BSR set to: 1
 32887  019760  AF5E               	btfss	___fltol@exp1& (0+255),7,b
 32888  019762  D019               	goto	l2592
 32889                           
 32890                           ; BSR set to: 1
 32891  019764  515E               	movf	___fltol@exp1& (0+255),w,b
 32892  019766  0A80               	xorlw	128
 32893  019768  0F97               	addlw	151
 32894  01976A  B0D8               	btfsc	status,0,c
 32895  01976C  D00A               	goto	l2593
 32896                           
 32897                           ; BSR set to: 1
 32898  01976E  0E00               	movlw	0
 32899  019770  0102               	movlb	2	; () banked
 32900  019772  6F53               	movwf	?___fltol& (0+255),b
 32901  019774  0E00               	movlw	0
 32902  019776  6F54               	movwf	(?___fltol+1)& (0+255),b
 32903  019778  0E00               	movlw	0
 32904  01977A  6F55               	movwf	(?___fltol+2)& (0+255),b
 32905  01977C  0E00               	movlw	0
 32906  01977E  6F56               	movwf	(?___fltol+3)& (0+255),b
 32907                           
 32908                           ; BSR set to: 2
 32909  019780  0012               	return	
 32910  019782                     l2593:
 32911                           
 32912                           ; BSR set to: 2
 32913                           
 32914                           ; BSR set to: 2
 32915  019782  0102               	movlb	2	; () banked
 32916  019784  90D8               	bcf	status,0,c
 32917  019786  3356               	rrcf	(___fltol@f1+3)& (0+255),f,b
 32918  019788  3355               	rrcf	(___fltol@f1+2)& (0+255),f,b
 32919  01978A  3354               	rrcf	(___fltol@f1+1)& (0+255),f,b
 32920  01978C  3353               	rrcf	___fltol@f1& (0+255),f,b
 32921                           
 32922                           ; BSR set to: 2
 32923  01978E  0101               	movlb	1	; () banked
 32924  019790  3F5E               	incfsz	___fltol@exp1& (0+255),f,b
 32925  019792  D7F7               	goto	l2593
 32926                           
 32927                           ; BSR set to: 1
 32928  019794  D019               	goto	u26310
 32929  019796                     l2592:
 32930                           
 32931                           ; BSR set to: 1
 32932                           
 32933                           ; BSR set to: 1
 32934  019796  0E1F               	movlw	31
 32935  019798  655E               	cpfsgt	___fltol@exp1& (0+255),b
 32936  01979A  D012               	goto	l2598
 32937                           
 32938                           ; BSR set to: 1
 32939  01979C  0E00               	movlw	0
 32940  01979E  0102               	movlb	2	; () banked
 32941  0197A0  6F53               	movwf	?___fltol& (0+255),b
 32942  0197A2  0E00               	movlw	0
 32943  0197A4  6F54               	movwf	(?___fltol+1)& (0+255),b
 32944  0197A6  0E00               	movlw	0
 32945  0197A8  6F55               	movwf	(?___fltol+2)& (0+255),b
 32946  0197AA  0E00               	movlw	0
 32947  0197AC  6F56               	movwf	(?___fltol+3)& (0+255),b
 32948                           
 32949                           ; BSR set to: 2
 32950  0197AE  0012               	return	
 32951  0197B0                     
 32952                           ; BSR set to: 2
 32953  0197B0  0102               	movlb	2	; () banked
 32954  0197B2  90D8               	bcf	status,0,c
 32955  0197B4  3753               	rlcf	___fltol@f1& (0+255),f,b
 32956  0197B6  3754               	rlcf	(___fltol@f1+1)& (0+255),f,b
 32957  0197B8  3755               	rlcf	(___fltol@f1+2)& (0+255),f,b
 32958  0197BA  3756               	rlcf	(___fltol@f1+3)& (0+255),f,b
 32959  0197BC  0101               	movlb	1	; () banked
 32960  0197BE  075E               	decf	___fltol@exp1& (0+255),f,b
 32961  0197C0                     l2598:
 32962                           
 32963                           ; BSR set to: 1
 32964  0197C0  0101               	movlb	1	; () banked
 32965  0197C2  515E               	movf	___fltol@exp1& (0+255),w,b
 32966  0197C4  A4D8               	btfss	status,2,c
 32967  0197C6  D7F4               	goto	l2599
 32968  0197C8                     u26310:
 32969                           
 32970                           ; BSR set to: 1
 32971                           
 32972                           ; BSR set to: 1
 32973                           
 32974                           ; BSR set to: 1
 32975  0197C8  515D               	movf	___fltol@sign1& (0+255),w,b
 32976  0197CA  B4D8               	btfsc	status,2,c
 32977  0197CC  D009               	goto	l2601
 32978                           
 32979                           ; BSR set to: 1
 32980  0197CE  0102               	movlb	2	; () banked
 32981  0197D0  1F56               	comf	(___fltol@f1+3)& (0+255),f,b
 32982  0197D2  1F55               	comf	(___fltol@f1+2)& (0+255),f,b
 32983  0197D4  1F54               	comf	(___fltol@f1+1)& (0+255),f,b
 32984  0197D6  6D53               	negf	___fltol@f1& (0+255),b
 32985  0197D8  0E00               	movlw	0
 32986  0197DA  2354               	addwfc	(___fltol@f1+1)& (0+255),f,b
 32987  0197DC  2355               	addwfc	(___fltol@f1+2)& (0+255),f,b
 32988  0197DE  2356               	addwfc	(___fltol@f1+3)& (0+255),f,b
 32989  0197E0                     l2601:
 32990                           
 32991                           ; BSR set to: 2
 32992  0197E0  C253  F253         	movff	___fltol@f1,?___fltol
 32993  0197E4  C254  F254         	movff	___fltol@f1+1,?___fltol+1
 32994  0197E8  C255  F255         	movff	___fltol@f1+2,?___fltol+2
 32995  0197EC  C256  F256         	movff	___fltol@f1+3,?___fltol+3
 32996  0197F0  0012               	return	
 32997  0197F2                     __end_of___fltol:
 32998                           	opt stack 0
 32999                           tosu	equ	0xFFF
 33000                           tosh	equ	0xFFE
 33001                           tosl	equ	0xFFD
 33002                           pclath	equ	0xFFA
 33003                           tblptru	equ	0xFF8
 33004                           tblptrh	equ	0xFF7
 33005                           tblptrl	equ	0xFF6
 33006                           tablat	equ	0xFF5
 33007                           prodh	equ	0xFF4
 33008                           prodl	equ	0xFF3
 33009                           intcon	equ	0xFF2
 33010                           indf0	equ	0xFEF
 33011                           postinc0	equ	0xFEE
 33012                           fsr0h	equ	0xFEA
 33013                           fsr0l	equ	0xFE9
 33014                           wreg	equ	0xFE8
 33015                           indf1	equ	0xFE7
 33016                           postdec1	equ	0xFE5
 33017                           plusw1	equ	0xFE3
 33018                           fsr1h	equ	0xFE2
 33019                           fsr1l	equ	0xFE1
 33020                           indf2	equ	0xFDF
 33021                           postinc2	equ	0xFDE
 33022                           postdec2	equ	0xFDD
 33023                           plusw2	equ	0xFDB
 33024                           fsr2h	equ	0xFDA
 33025                           fsr2l	equ	0xFD9
 33026                           status	equ	0xFD8
 33027                           
 33028 ;; *************** function ___flsub *****************
 33029 ;; Defined at:
 33030 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 33031 ;; Parameters:    Size  Location     Type
 33032 ;;  b               4   24[BANK2 ] long 
 33033 ;;  a               4   28[BANK2 ] long 
 33034 ;; Auto vars:     Size  Location     Type
 33035 ;;		None
 33036 ;; Return value:  Size  Location     Type
 33037 ;;                  4   24[BANK2 ] long 
 33038 ;; Registers used:
 33039 ;;		wreg, status,2, status,0, cstack
 33040 ;; Tracked objects:
 33041 ;;		On entry : 0/0
 33042 ;;		On exit  : 0/0
 33043 ;;		Unchanged: 0/0
 33044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33045 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0
 33046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33048 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0
 33049 ;;Total ram usage:        8 bytes
 33050 ;; Hardware stack levels used:    1
 33051 ;; Hardware stack levels required when called:   20
 33052 ;; This function calls:
 33053 ;;		___fladd
 33054 ;; This function is called by:
 33055 ;;		__doprnt
 33056 ;; This function uses a non-reentrant model
 33057 ;;
 33058                           
 33059                           	psect	text58
 33060  01B21A                     __ptext58:
 33061                           	opt stack 0
 33062  01B21A                     ___flsub:
 33063                           	opt stack 6
 33064                           
 33065                           ;incstack = 0
 33066  01B21A  0E00               	movlw	0
 33067  01B21C  0102               	movlb	2	; () banked
 33068  01B21E  1B1C               	xorwf	___flsub@a& (0+255),f,b
 33069  01B220  0E00               	movlw	0
 33070  01B222  1B1D               	xorwf	(___flsub@a+1)& (0+255),f,b
 33071  01B224  0E00               	movlw	0
 33072  01B226  1B1E               	xorwf	(___flsub@a+2)& (0+255),f,b
 33073  01B228  0E80               	movlw	128
 33074  01B22A  1B1F               	xorwf	(___flsub@a+3)& (0+255),f,b
 33075                           
 33076                           ; BSR set to: 2
 33077  01B22C  C218  F204         	movff	___flsub@b,___fladd@b
 33078  01B230  C219  F205         	movff	___flsub@b+1,___fladd@b+1
 33079  01B234  C21A  F206         	movff	___flsub@b+2,___fladd@b+2
 33080  01B238  C21B  F207         	movff	___flsub@b+3,___fladd@b+3
 33081  01B23C  C21C  F208         	movff	___flsub@a,___fladd@a
 33082  01B240  C21D  F209         	movff	___flsub@a+1,___fladd@a+1
 33083  01B244  C21E  F20A         	movff	___flsub@a+2,___fladd@a+2
 33084  01B248  C21F  F20B         	movff	___flsub@a+3,___fladd@a+3
 33085  01B24C  ECAD  F0AF         	call	___fladd	;wreg free
 33086  01B250  C204  F218         	movff	?___fladd,?___flsub
 33087  01B254  C205  F219         	movff	?___fladd+1,?___flsub+1
 33088  01B258  C206  F21A         	movff	?___fladd+2,?___flsub+2
 33089  01B25C  C207  F21B         	movff	?___fladd+3,?___flsub+3
 33090  01B260  0012               	return	
 33091  01B262                     __end_of___flsub:
 33092                           	opt stack 0
 33093                           tosu	equ	0xFFF
 33094                           tosh	equ	0xFFE
 33095                           tosl	equ	0xFFD
 33096                           pclath	equ	0xFFA
 33097                           tblptru	equ	0xFF8
 33098                           tblptrh	equ	0xFF7
 33099                           tblptrl	equ	0xFF6
 33100                           tablat	equ	0xFF5
 33101                           prodh	equ	0xFF4
 33102                           prodl	equ	0xFF3
 33103                           intcon	equ	0xFF2
 33104                           indf0	equ	0xFEF
 33105                           postinc0	equ	0xFEE
 33106                           fsr0h	equ	0xFEA
 33107                           fsr0l	equ	0xFE9
 33108                           wreg	equ	0xFE8
 33109                           indf1	equ	0xFE7
 33110                           postdec1	equ	0xFE5
 33111                           plusw1	equ	0xFE3
 33112                           fsr1h	equ	0xFE2
 33113                           fsr1l	equ	0xFE1
 33114                           indf2	equ	0xFDF
 33115                           postinc2	equ	0xFDE
 33116                           postdec2	equ	0xFDD
 33117                           plusw2	equ	0xFDB
 33118                           fsr2h	equ	0xFDA
 33119                           fsr2l	equ	0xFD9
 33120                           status	equ	0xFD8
 33121                           
 33122 ;; *************** function ___fladd *****************
 33123 ;; Defined at:
 33124 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 33125 ;; Parameters:    Size  Location     Type
 33126 ;;  b               4    4[BANK2 ] long 
 33127 ;;  a               4    8[BANK2 ] long 
 33128 ;; Auto vars:     Size  Location     Type
 33129 ;;  grs             1   23[BANK2 ] unsigned char 
 33130 ;;  bexp            1   22[BANK2 ] unsigned char 
 33131 ;;  aexp            1   21[BANK2 ] unsigned char 
 33132 ;;  signs           1   20[BANK2 ] unsigned char 
 33133 ;; Return value:  Size  Location     Type
 33134 ;;                  4    4[BANK2 ] unsigned char 
 33135 ;; Registers used:
 33136 ;;		wreg, status,2, status,0
 33137 ;; Tracked objects:
 33138 ;;		On entry : 0/0
 33139 ;;		On exit  : 0/0
 33140 ;;		Unchanged: 0/0
 33141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33142 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0
 33143 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
 33144 ;;      Temps:          0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0
 33145 ;;      Totals:         0       0       0      20       0       0       0       0       0       0       0       0       
      +0       0       0
 33146 ;;Total ram usage:       20 bytes
 33147 ;; Hardware stack levels used:    1
 33148 ;; Hardware stack levels required when called:   19
 33149 ;; This function calls:
 33150 ;;		Nothing
 33151 ;; This function is called by:
 33152 ;;		_ringBufferLUT
 33153 ;;		__doprnt
 33154 ;;		___flsub
 33155 ;; This function uses a non-reentrant model
 33156 ;;
 33157                           
 33158                           	psect	text59
 33159  015F5A                     __ptext59:
 33160                           	opt stack 0
 33161  015F5A                     ___fladd:
 33162                           	opt stack 6
 33163                           
 33164                           ;incstack = 0
 33165  015F5A  0102               	movlb	2	; () banked
 33166  015F5C  5107               	movf	(___fladd@b+3)& (0+255),w,b
 33167  015F5E  0B80               	andlw	128
 33168  015F60  6F14               	movwf	___fladd@signs& (0+255),b
 33169  015F62  5107               	movf	(___fladd@b+3)& (0+255),w,b
 33170  015F64  2507               	addwf	(___fladd@b+3)& (0+255),w,b
 33171  015F66  6F16               	movwf	___fladd@bexp& (0+255),b
 33172                           
 33173                           ; BSR set to: 2
 33174  015F68  BF06               	btfsc	(___fladd@b+2)& (0+255),7,b
 33175                           
 33176                           ; BSR set to: 2
 33177  015F6A  8116               	bsf	___fladd@bexp& (0+255),0,b
 33178                           
 33179                           ; BSR set to: 2
 33180                           
 33181                           ; BSR set to: 2
 33182  015F6C  5116               	movf	___fladd@bexp& (0+255),w,b
 33183  015F6E  B4D8               	btfsc	status,2,c
 33184  015F70  D00D               	goto	l2871
 33185                           
 33186                           ; BSR set to: 2
 33187  015F72  2916               	incf	___fladd@bexp& (0+255),w,b
 33188  015F74  A4D8               	btfss	status,2,c
 33189  015F76  D008               	goto	l2872
 33190                           
 33191                           ; BSR set to: 2
 33192  015F78  0E00               	movlw	0
 33193  015F7A  6F04               	movwf	___fladd@b& (0+255),b
 33194  015F7C  0E00               	movlw	0
 33195  015F7E  6F05               	movwf	(___fladd@b+1)& (0+255),b
 33196  015F80  0E00               	movlw	0
 33197  015F82  6F06               	movwf	(___fladd@b+2)& (0+255),b
 33198  015F84  0E00               	movlw	0
 33199  015F86  6F07               	movwf	(___fladd@b+3)& (0+255),b
 33200  015F88                     l2872:
 33201                           
 33202                           ; BSR set to: 2
 33203                           
 33204                           ; BSR set to: 2
 33205  015F88  8F06               	bsf	(___fladd@b+2)& (0+255),7,b
 33206  015F8A  D006               	goto	L6
 33207  015F8C                     l2871:
 33208                           
 33209                           ; BSR set to: 2
 33210                           
 33211                           ; BSR set to: 2
 33212  015F8C  0E00               	movlw	0
 33213  015F8E  6F04               	movwf	___fladd@b& (0+255),b
 33214  015F90  0E00               	movlw	0
 33215  015F92  6F05               	movwf	(___fladd@b+1)& (0+255),b
 33216  015F94  0E00               	movlw	0
 33217  015F96  6F06               	movwf	(___fladd@b+2)& (0+255),b
 33218  015F98                     L6:
 33219  015F98  0E00               	movlw	0
 33220  015F9A  6F07               	movwf	(___fladd@b+3)& (0+255),b
 33221                           
 33222                           ; BSR set to: 2
 33223                           
 33224                           ; BSR set to: 2
 33225  015F9C  510B               	movf	(___fladd@a+3)& (0+255),w,b
 33226  015F9E  0B80               	andlw	128
 33227  015FA0  6F15               	movwf	___fladd@aexp& (0+255),b
 33228                           
 33229                           ; BSR set to: 2
 33230  015FA2  5114               	movf	___fladd@signs& (0+255),w,b
 33231  015FA4  1915               	xorwf	___fladd@aexp& (0+255),w,b
 33232  015FA6  A4D8               	btfss	status,2,c
 33233                           
 33234                           ; BSR set to: 2
 33235  015FA8  8D14               	bsf	___fladd@signs& (0+255),6,b
 33236                           
 33237                           ; BSR set to: 2
 33238                           
 33239                           ; BSR set to: 2
 33240  015FAA  510B               	movf	(___fladd@a+3)& (0+255),w,b
 33241  015FAC  250B               	addwf	(___fladd@a+3)& (0+255),w,b
 33242  015FAE  6F15               	movwf	___fladd@aexp& (0+255),b
 33243                           
 33244                           ; BSR set to: 2
 33245  015FB0  BF0A               	btfsc	(___fladd@a+2)& (0+255),7,b
 33246                           
 33247                           ; BSR set to: 2
 33248  015FB2  8115               	bsf	___fladd@aexp& (0+255),0,b
 33249                           
 33250                           ; BSR set to: 2
 33251                           
 33252                           ; BSR set to: 2
 33253  015FB4  5115               	movf	___fladd@aexp& (0+255),w,b
 33254  015FB6  B4D8               	btfsc	status,2,c
 33255  015FB8  D00D               	goto	l2876
 33256                           
 33257                           ; BSR set to: 2
 33258  015FBA  2915               	incf	___fladd@aexp& (0+255),w,b
 33259  015FBC  A4D8               	btfss	status,2,c
 33260  015FBE  D008               	goto	l2877
 33261                           
 33262                           ; BSR set to: 2
 33263  015FC0  0E00               	movlw	0
 33264  015FC2  6F08               	movwf	___fladd@a& (0+255),b
 33265  015FC4  0E00               	movlw	0
 33266  015FC6  6F09               	movwf	(___fladd@a+1)& (0+255),b
 33267  015FC8  0E00               	movlw	0
 33268  015FCA  6F0A               	movwf	(___fladd@a+2)& (0+255),b
 33269  015FCC  0E00               	movlw	0
 33270  015FCE  6F0B               	movwf	(___fladd@a+3)& (0+255),b
 33271  015FD0                     l2877:
 33272                           
 33273                           ; BSR set to: 2
 33274                           
 33275                           ; BSR set to: 2
 33276  015FD0  8F0A               	bsf	(___fladd@a+2)& (0+255),7,b
 33277  015FD2  D006               	goto	L7
 33278  015FD4                     l2876:
 33279                           
 33280                           ; BSR set to: 2
 33281                           
 33282                           ; BSR set to: 2
 33283  015FD4  0E00               	movlw	0
 33284  015FD6  6F08               	movwf	___fladd@a& (0+255),b
 33285  015FD8  0E00               	movlw	0
 33286  015FDA  6F09               	movwf	(___fladd@a+1)& (0+255),b
 33287  015FDC  0E00               	movlw	0
 33288  015FDE  6F0A               	movwf	(___fladd@a+2)& (0+255),b
 33289  015FE0                     L7:
 33290  015FE0  0E00               	movlw	0
 33291  015FE2  6F0B               	movwf	(___fladd@a+3)& (0+255),b
 33292                           
 33293                           ; BSR set to: 2
 33294                           
 33295                           ; BSR set to: 2
 33296  015FE4  5116               	movf	___fladd@bexp& (0+255),w,b
 33297  015FE6  5D15               	subwf	___fladd@aexp& (0+255),w,b
 33298  015FE8  B0D8               	btfsc	status,0,c
 33299  015FEA  D022               	goto	l2879
 33300                           
 33301                           ; BSR set to: 2
 33302  015FEC  AD14               	btfss	___fladd@signs& (0+255),6,b
 33303  015FEE  D002               	goto	l2880
 33304                           
 33305                           ; BSR set to: 2
 33306  015FF0  0E80               	movlw	128
 33307  015FF2  1B14               	xorwf	___fladd@signs& (0+255),f,b
 33308  015FF4                     l2880:
 33309                           
 33310                           ; BSR set to: 2
 33311                           
 33312                           ; BSR set to: 2
 33313  015FF4  C216  F217         	movff	___fladd@bexp,___fladd@grs
 33314                           
 33315                           ; BSR set to: 2
 33316  015FF8  C215  F216         	movff	___fladd@aexp,___fladd@bexp
 33317                           
 33318                           ; BSR set to: 2
 33319  015FFC  C217  F215         	movff	___fladd@grs,___fladd@aexp
 33320                           
 33321                           ; BSR set to: 2
 33322  016000  C204  F217         	movff	___fladd@b,___fladd@grs
 33323                           
 33324                           ; BSR set to: 2
 33325  016004  C208  F204         	movff	___fladd@a,___fladd@b
 33326                           
 33327                           ; BSR set to: 2
 33328  016008  C217  F208         	movff	___fladd@grs,___fladd@a
 33329                           
 33330                           ; BSR set to: 2
 33331  01600C  C205  F217         	movff	___fladd@b+1,___fladd@grs
 33332                           
 33333                           ; BSR set to: 2
 33334  016010  C209  F205         	movff	___fladd@a+1,___fladd@b+1
 33335                           
 33336                           ; BSR set to: 2
 33337  016014  C217  F209         	movff	___fladd@grs,___fladd@a+1
 33338                           
 33339                           ; BSR set to: 2
 33340  016018  C206  F217         	movff	___fladd@b+2,___fladd@grs
 33341                           
 33342                           ; BSR set to: 2
 33343  01601C  C20A  F206         	movff	___fladd@a+2,___fladd@b+2
 33344                           
 33345                           ; BSR set to: 2
 33346  016020  C217  F20A         	movff	___fladd@grs,___fladd@a+2
 33347                           
 33348                           ; BSR set to: 2
 33349  016024  C207  F217         	movff	___fladd@b+3,___fladd@grs
 33350                           
 33351                           ; BSR set to: 2
 33352  016028  C20B  F207         	movff	___fladd@a+3,___fladd@b+3
 33353                           
 33354                           ; BSR set to: 2
 33355  01602C  C217  F20B         	movff	___fladd@grs,___fladd@a+3
 33356  016030                     l2879:
 33357                           
 33358                           ; BSR set to: 2
 33359                           
 33360                           ; BSR set to: 2
 33361  016030  0E00               	movlw	0
 33362  016032  6F17               	movwf	___fladd@grs& (0+255),b
 33363                           
 33364                           ; BSR set to: 2
 33365  016034  5116               	movf	___fladd@bexp& (0+255),w,b
 33366  016036  6F0C               	movwf	??___fladd& (0+255),b
 33367  016038  6B0D               	clrf	(??___fladd+1)& (0+255),b
 33368  01603A  1F0C               	comf	??___fladd& (0+255),f,b
 33369  01603C  1F0D               	comf	(??___fladd+1)& (0+255),f,b
 33370  01603E  4B0C               	infsnz	??___fladd& (0+255),f,b
 33371  016040  2B0D               	incf	(??___fladd+1)& (0+255),f,b
 33372  016042  5115               	movf	___fladd@aexp& (0+255),w,b
 33373  016044  6F0E               	movwf	(??___fladd+2)& (0+255),b
 33374  016046  6B0F               	clrf	(??___fladd+3)& (0+255),b
 33375  016048  510C               	movf	??___fladd& (0+255),w,b
 33376  01604A  270E               	addwf	(??___fladd+2)& (0+255),f,b
 33377  01604C  510D               	movf	(??___fladd+1)& (0+255),w,b
 33378  01604E  230F               	addwfc	(??___fladd+3)& (0+255),f,b
 33379  016050  BF0F               	btfsc	(??___fladd+3)& (0+255),7,b
 33380  016052  D02C               	goto	l2883
 33381  016054  510F               	movf	(??___fladd+3)& (0+255),w,b
 33382  016056  E104               	bnz	u18050
 33383  016058  0E1A               	movlw	26
 33384  01605A  5D0E               	subwf	(??___fladd+2)& (0+255),w,b
 33385  01605C  A0D8               	btfss	status,0,c
 33386  01605E  D026               	goto	l2883
 33387  016060                     u18050:
 33388                           
 33389                           ; BSR set to: 2
 33390  016060  5104               	movf	___fladd@b& (0+255),w,b
 33391  016062  1105               	iorwf	(___fladd@b+1)& (0+255),w,b
 33392  016064  1106               	iorwf	(___fladd@b+2)& (0+255),w,b
 33393  016066  1107               	iorwf	(___fladd@b+3)& (0+255),w,b
 33394  016068  B4D8               	btfsc	status,2,c
 33395  01606A  D002               	goto	u18060
 33396  01606C  0E01               	movlw	1
 33397  01606E  D001               	goto	u18070
 33398  016070                     u18060:
 33399  016070  0E00               	movlw	0
 33400  016072                     u18070:
 33401  016072  6F17               	movwf	___fladd@grs& (0+255),b
 33402                           
 33403                           ; BSR set to: 2
 33404  016074  0E00               	movlw	0
 33405  016076  6F04               	movwf	___fladd@b& (0+255),b
 33406  016078  0E00               	movlw	0
 33407  01607A  6F05               	movwf	(___fladd@b+1)& (0+255),b
 33408  01607C  0E00               	movlw	0
 33409  01607E  6F06               	movwf	(___fladd@b+2)& (0+255),b
 33410  016080  0E00               	movlw	0
 33411  016082  6F07               	movwf	(___fladd@b+3)& (0+255),b
 33412                           
 33413                           ; BSR set to: 2
 33414  016084  C215  F216         	movff	___fladd@aexp,___fladd@bexp
 33415  016088  D015               	goto	u18100
 33416  01608A                     l2884:
 33417                           
 33418                           ; BSR set to: 2
 33419  01608A  A117               	btfss	___fladd@grs& (0+255),0,b
 33420  01608C  D005               	goto	l2885
 33421                           
 33422                           ; BSR set to: 2
 33423  01608E  90D8               	bcf	status,0,c
 33424  016090  3117               	rrcf	___fladd@grs& (0+255),w,b
 33425  016092  0901               	iorlw	1
 33426  016094  6F17               	movwf	___fladd@grs& (0+255),b
 33427  016096  D002               	goto	l2886
 33428  016098                     l2885:
 33429                           
 33430                           ; BSR set to: 2
 33431                           
 33432                           ; BSR set to: 2
 33433  016098  90D8               	bcf	status,0,c
 33434  01609A  3317               	rrcf	___fladd@grs& (0+255),f,b
 33435  01609C                     l2886:
 33436                           
 33437                           ; BSR set to: 2
 33438                           
 33439                           ; BSR set to: 2
 33440  01609C  B104               	btfsc	___fladd@b& (0+255),0,b
 33441                           
 33442                           ; BSR set to: 2
 33443  01609E  8F17               	bsf	___fladd@grs& (0+255),7,b
 33444                           
 33445                           ; BSR set to: 2
 33446                           
 33447                           ; BSR set to: 2
 33448  0160A0  3507               	rlcf	(___fladd@b+3)& (0+255),w,b
 33449  0160A2  3307               	rrcf	(___fladd@b+3)& (0+255),f,b
 33450  0160A4  3306               	rrcf	(___fladd@b+2)& (0+255),f,b
 33451  0160A6  3305               	rrcf	(___fladd@b+1)& (0+255),f,b
 33452  0160A8  3304               	rrcf	___fladd@b& (0+255),f,b
 33453                           
 33454                           ; BSR set to: 2
 33455  0160AA  2B16               	incf	___fladd@bexp& (0+255),f,b
 33456  0160AC                     l2883:
 33457                           
 33458                           ; BSR set to: 2
 33459  0160AC  5115               	movf	___fladd@aexp& (0+255),w,b
 33460  0160AE  5D16               	subwf	___fladd@bexp& (0+255),w,b
 33461  0160B0  A0D8               	btfss	status,0,c
 33462  0160B2  D7EB               	goto	l2884
 33463  0160B4                     u18100:
 33464                           
 33465                           ; BSR set to: 2
 33466                           
 33467                           ; BSR set to: 2
 33468  0160B4  BD14               	btfsc	___fladd@signs& (0+255),6,b
 33469  0160B6  D029               	goto	l2889
 33470                           
 33471                           ; BSR set to: 2
 33472  0160B8  5116               	movf	___fladd@bexp& (0+255),w,b
 33473  0160BA  A4D8               	btfss	status,2,c
 33474  0160BC  D009               	goto	l2890
 33475                           
 33476                           ; BSR set to: 2
 33477  0160BE  0E00               	movlw	0
 33478  0160C0  6F04               	movwf	?___fladd& (0+255),b
 33479  0160C2  0E00               	movlw	0
 33480  0160C4  6F05               	movwf	(?___fladd+1)& (0+255),b
 33481  0160C6  0E00               	movlw	0
 33482  0160C8  6F06               	movwf	(?___fladd+2)& (0+255),b
 33483  0160CA  0E00               	movlw	0
 33484  0160CC  6F07               	movwf	(?___fladd+3)& (0+255),b
 33485                           
 33486                           ; BSR set to: 2
 33487  0160CE  0012               	return	
 33488  0160D0                     l2890:
 33489                           
 33490                           ; BSR set to: 2
 33491                           
 33492                           ; BSR set to: 2
 33493  0160D0  5108               	movf	___fladd@a& (0+255),w,b
 33494  0160D2  2704               	addwf	___fladd@b& (0+255),f,b
 33495  0160D4  5109               	movf	(___fladd@a+1)& (0+255),w,b
 33496  0160D6  2305               	addwfc	(___fladd@b+1)& (0+255),f,b
 33497  0160D8  510A               	movf	(___fladd@a+2)& (0+255),w,b
 33498  0160DA  2306               	addwfc	(___fladd@b+2)& (0+255),f,b
 33499  0160DC  510B               	movf	(___fladd@a+3)& (0+255),w,b
 33500  0160DE  2307               	addwfc	(___fladd@b+3)& (0+255),f,b
 33501                           
 33502                           ; BSR set to: 2
 33503  0160E0  A107               	btfss	(___fladd@b+3)& (0+255),0,b
 33504  0160E2  D083               	goto	u18230
 33505                           
 33506                           ; BSR set to: 2
 33507  0160E4  A117               	btfss	___fladd@grs& (0+255),0,b
 33508  0160E6  D006               	goto	l2893
 33509                           
 33510                           ; BSR set to: 2
 33511  0160E8  90D8               	bcf	status,0,c
 33512  0160EA  3317               	rrcf	___fladd@grs& (0+255),f,b
 33513  0160EC  5117               	movf	___fladd@grs& (0+255),w,b
 33514  0160EE  0901               	iorlw	1
 33515  0160F0  6F17               	movwf	___fladd@grs& (0+255),b
 33516  0160F2  D002               	goto	l2894
 33517  0160F4                     l2893:
 33518                           
 33519                           ; BSR set to: 2
 33520                           
 33521                           ; BSR set to: 2
 33522  0160F4  90D8               	bcf	status,0,c
 33523  0160F6  3317               	rrcf	___fladd@grs& (0+255),f,b
 33524  0160F8                     l2894:
 33525                           
 33526                           ; BSR set to: 2
 33527                           
 33528                           ; BSR set to: 2
 33529  0160F8  B104               	btfsc	___fladd@b& (0+255),0,b
 33530                           
 33531                           ; BSR set to: 2
 33532  0160FA  8F17               	bsf	___fladd@grs& (0+255),7,b
 33533                           
 33534                           ; BSR set to: 2
 33535                           
 33536                           ; BSR set to: 2
 33537  0160FC  3507               	rlcf	(___fladd@b+3)& (0+255),w,b
 33538  0160FE  3307               	rrcf	(___fladd@b+3)& (0+255),f,b
 33539  016100  3306               	rrcf	(___fladd@b+2)& (0+255),f,b
 33540  016102  3305               	rrcf	(___fladd@b+1)& (0+255),f,b
 33541  016104  3304               	rrcf	___fladd@b& (0+255),f,b
 33542                           
 33543                           ; BSR set to: 2
 33544  016106  2B16               	incf	___fladd@bexp& (0+255),f,b
 33545                           
 33546                           ; BSR set to: 2
 33547  016108  D070               	goto	u18230
 33548  01610A                     l2889:
 33549                           
 33550                           ; BSR set to: 2
 33551                           
 33552                           ; BSR set to: 2
 33553  01610A  5108               	movf	___fladd@a& (0+255),w,b
 33554  01610C  5D04               	subwf	___fladd@b& (0+255),w,b
 33555  01610E  5109               	movf	(___fladd@a+1)& (0+255),w,b
 33556  016110  5905               	subwfb	(___fladd@b+1)& (0+255),w,b
 33557  016112  510A               	movf	(___fladd@a+2)& (0+255),w,b
 33558  016114  5906               	subwfb	(___fladd@b+2)& (0+255),w,b
 33559  016116  5107               	movf	(___fladd@b+3)& (0+255),w,b
 33560  016118  0A80               	xorlw	128
 33561  01611A  6F0C               	movwf	??___fladd& (0+255),b
 33562  01611C  510B               	movf	(___fladd@a+3)& (0+255),w,b
 33563  01611E  0A80               	xorlw	128
 33564  016120  590C               	subwfb	??___fladd& (0+255),w,b
 33565  016122  B0D8               	btfsc	status,0,c
 33566  016124  D036               	goto	l2897
 33567                           
 33568                           ; BSR set to: 2
 33569  016126  C204  F20C         	movff	___fladd@b,??___fladd
 33570  01612A  C205  F20D         	movff	___fladd@b+1,??___fladd+1
 33571  01612E  C206  F20E         	movff	___fladd@b+2,??___fladd+2
 33572  016132  C207  F20F         	movff	___fladd@b+3,??___fladd+3
 33573  016136  1F0C               	comf	??___fladd& (0+255),f,b
 33574  016138  1F0D               	comf	(??___fladd+1)& (0+255),f,b
 33575  01613A  1F0E               	comf	(??___fladd+2)& (0+255),f,b
 33576  01613C  1F0F               	comf	(??___fladd+3)& (0+255),f,b
 33577  01613E  2B0C               	incf	??___fladd& (0+255),f,b
 33578  016140  0E00               	movlw	0
 33579  016142  230D               	addwfc	(??___fladd+1)& (0+255),f,b
 33580  016144  230E               	addwfc	(??___fladd+2)& (0+255),f,b
 33581  016146  230F               	addwfc	(??___fladd+3)& (0+255),f,b
 33582  016148  5108               	movf	___fladd@a& (0+255),w,b
 33583  01614A  250C               	addwf	??___fladd& (0+255),w,b
 33584  01614C  6F10               	movwf	(??___fladd+4)& (0+255),b
 33585  01614E  5109               	movf	(___fladd@a+1)& (0+255),w,b
 33586  016150  210D               	addwfc	(??___fladd+1)& (0+255),w,b
 33587  016152  6F11               	movwf	(??___fladd+5)& (0+255),b
 33588  016154  510A               	movf	(___fladd@a+2)& (0+255),w,b
 33589  016156  210E               	addwfc	(??___fladd+2)& (0+255),w,b
 33590  016158  6F12               	movwf	(??___fladd+6)& (0+255),b
 33591  01615A  510B               	movf	(___fladd@a+3)& (0+255),w,b
 33592  01615C  210F               	addwfc	(??___fladd+3)& (0+255),w,b
 33593  01615E  6F13               	movwf	(??___fladd+7)& (0+255),b
 33594  016160  0EFF               	movlw	255
 33595  016162  2510               	addwf	(??___fladd+4)& (0+255),w,b
 33596  016164  6F04               	movwf	___fladd@b& (0+255),b
 33597  016166  0EFF               	movlw	255
 33598  016168  2111               	addwfc	(??___fladd+5)& (0+255),w,b
 33599  01616A  6F05               	movwf	(___fladd@b+1)& (0+255),b
 33600  01616C  0EFF               	movlw	255
 33601  01616E  2112               	addwfc	(??___fladd+6)& (0+255),w,b
 33602  016170  6F06               	movwf	(___fladd@b+2)& (0+255),b
 33603  016172  0EFF               	movlw	255
 33604  016174  2113               	addwfc	(??___fladd+7)& (0+255),w,b
 33605  016176  6F07               	movwf	(___fladd@b+3)& (0+255),b
 33606  016178  0E80               	movlw	128
 33607  01617A  1B14               	xorwf	___fladd@signs& (0+255),f,b
 33608                           
 33609                           ; BSR set to: 2
 33610  01617C  6D17               	negf	___fladd@grs& (0+255),b
 33611                           
 33612                           ; BSR set to: 2
 33613  01617E  5117               	movf	___fladd@grs& (0+255),w,b
 33614  016180  A4D8               	btfss	status,2,c
 33615  016182  D00F               	goto	l2899
 33616                           
 33617                           ; BSR set to: 2
 33618  016184  0E01               	movlw	1
 33619  016186  2704               	addwf	___fladd@b& (0+255),f,b
 33620  016188  0E00               	movlw	0
 33621  01618A  2305               	addwfc	(___fladd@b+1)& (0+255),f,b
 33622  01618C  2306               	addwfc	(___fladd@b+2)& (0+255),f,b
 33623  01618E  2307               	addwfc	(___fladd@b+3)& (0+255),f,b
 33624                           
 33625                           ; BSR set to: 2
 33626  016190  D008               	goto	l2899
 33627  016192                     l2897:
 33628                           
 33629                           ; BSR set to: 2
 33630                           
 33631                           ; BSR set to: 2
 33632  016192  5108               	movf	___fladd@a& (0+255),w,b
 33633  016194  5F04               	subwf	___fladd@b& (0+255),f,b
 33634  016196  5109               	movf	(___fladd@a+1)& (0+255),w,b
 33635  016198  5B05               	subwfb	(___fladd@b+1)& (0+255),f,b
 33636  01619A  510A               	movf	(___fladd@a+2)& (0+255),w,b
 33637  01619C  5B06               	subwfb	(___fladd@b+2)& (0+255),f,b
 33638  01619E  510B               	movf	(___fladd@a+3)& (0+255),w,b
 33639  0161A0  5B07               	subwfb	(___fladd@b+3)& (0+255),f,b
 33640  0161A2                     l2899:
 33641                           
 33642                           ; BSR set to: 2
 33643  0161A2  5104               	movf	___fladd@b& (0+255),w,b
 33644  0161A4  1105               	iorwf	(___fladd@b+1)& (0+255),w,b
 33645  0161A6  1106               	iorwf	(___fladd@b+2)& (0+255),w,b
 33646  0161A8  1107               	iorwf	(___fladd@b+3)& (0+255),w,b
 33647  0161AA  A4D8               	btfss	status,2,c
 33648  0161AC  D01C               	goto	l2906
 33649                           
 33650                           ; BSR set to: 2
 33651  0161AE  5117               	movf	___fladd@grs& (0+255),w,b
 33652  0161B0  A4D8               	btfss	status,2,c
 33653  0161B2  D019               	goto	l2906
 33654                           
 33655                           ; BSR set to: 2
 33656  0161B4  0E00               	movlw	0
 33657  0161B6  6F04               	movwf	?___fladd& (0+255),b
 33658  0161B8  0E00               	movlw	0
 33659  0161BA  6F05               	movwf	(?___fladd+1)& (0+255),b
 33660  0161BC  0E00               	movlw	0
 33661  0161BE  6F06               	movwf	(?___fladd+2)& (0+255),b
 33662  0161C0  0E00               	movlw	0
 33663  0161C2  6F07               	movwf	(?___fladd+3)& (0+255),b
 33664                           
 33665                           ; BSR set to: 2
 33666  0161C4  0012               	return	
 33667  0161C6                     
 33668                           ; BSR set to: 2
 33669                           
 33670                           ; BSR set to: 2
 33671  0161C6  90D8               	bcf	status,0,c
 33672  0161C8  3704               	rlcf	___fladd@b& (0+255),f,b
 33673  0161CA  3705               	rlcf	(___fladd@b+1)& (0+255),f,b
 33674  0161CC  3706               	rlcf	(___fladd@b+2)& (0+255),f,b
 33675  0161CE  3707               	rlcf	(___fladd@b+3)& (0+255),f,b
 33676                           
 33677                           ; BSR set to: 2
 33678  0161D0  BF17               	btfsc	___fladd@grs& (0+255),7,b
 33679                           
 33680                           ; BSR set to: 2
 33681  0161D2  8104               	bsf	___fladd@b& (0+255),0,b
 33682                           
 33683                           ; BSR set to: 2
 33684                           
 33685                           ; BSR set to: 2
 33686  0161D4  A117               	btfss	___fladd@grs& (0+255),0,b
 33687  0161D6  D002               	goto	l2904
 33688                           
 33689                           ; BSR set to: 2
 33690  0161D8  80D8               	bsf	status,0,c
 33691  0161DA  D001               	goto	L8
 33692  0161DC                     l2904:
 33693                           
 33694                           ; BSR set to: 2
 33695                           
 33696                           ; BSR set to: 2
 33697  0161DC  90D8               	bcf	status,0,c
 33698  0161DE                     L8:
 33699  0161DE  3717               	rlcf	___fladd@grs& (0+255),f,b
 33700                           
 33701                           ; BSR set to: 2
 33702                           
 33703                           ; BSR set to: 2
 33704  0161E0  5116               	movf	___fladd@bexp& (0+255),w,b
 33705  0161E2  A4D8               	btfss	status,2,c
 33706                           
 33707                           ; BSR set to: 2
 33708  0161E4  0716               	decf	___fladd@bexp& (0+255),f,b
 33709  0161E6                     l2906:
 33710                           
 33711                           ; BSR set to: 2
 33712                           
 33713                           ; BSR set to: 2
 33714                           
 33715                           ; BSR set to: 2
 33716  0161E6  AF06               	btfss	(___fladd@b+2)& (0+255),7,b
 33717  0161E8  D7EE               	goto	l2902
 33718  0161EA                     u18230:
 33719                           
 33720                           ; BSR set to: 2
 33721                           
 33722                           ; BSR set to: 2
 33723                           
 33724                           ; BSR set to: 2
 33725  0161EA  0E00               	movlw	0
 33726  0161EC  6F15               	movwf	___fladd@aexp& (0+255),b
 33727                           
 33728                           ; BSR set to: 2
 33729  0161EE  AF17               	btfss	___fladd@grs& (0+255),7,b
 33730  0161F0  D00A               	goto	l2911
 33731                           
 33732                           ; BSR set to: 2
 33733  0161F2  C217  F20C         	movff	___fladd@grs,??___fladd
 33734  0161F6  0E7F               	movlw	127
 33735  0161F8  170C               	andwf	??___fladd& (0+255),f,b
 33736  0161FA  A4D8               	btfss	status,2,c
 33737  0161FC  D002               	goto	u18260
 33738                           
 33739                           ; BSR set to: 2
 33740                           
 33741                           ; BSR set to: 2
 33742  0161FE  A104               	btfss	___fladd@b& (0+255),0,b
 33743  016200  D002               	goto	l2911
 33744  016202                     u18260:
 33745                           
 33746                           ; BSR set to: 2
 33747  016202  0E01               	movlw	1
 33748  016204  6F15               	movwf	___fladd@aexp& (0+255),b
 33749  016206                     l2911:
 33750                           
 33751                           ; BSR set to: 2
 33752                           
 33753                           ; BSR set to: 2
 33754                           
 33755                           ; BSR set to: 2
 33756  016206  5115               	movf	___fladd@aexp& (0+255),w,b
 33757  016208  B4D8               	btfsc	status,2,c
 33758  01620A  D020               	goto	l2914
 33759                           
 33760                           ; BSR set to: 2
 33761  01620C  0E01               	movlw	1
 33762  01620E  2704               	addwf	___fladd@b& (0+255),f,b
 33763  016210  0E00               	movlw	0
 33764  016212  2305               	addwfc	(___fladd@b+1)& (0+255),f,b
 33765  016214  2306               	addwfc	(___fladd@b+2)& (0+255),f,b
 33766  016216  2307               	addwfc	(___fladd@b+3)& (0+255),f,b
 33767                           
 33768                           ; BSR set to: 2
 33769  016218  A107               	btfss	(___fladd@b+3)& (0+255),0,b
 33770  01621A  D018               	goto	l2914
 33771                           
 33772                           ; BSR set to: 2
 33773  01621C  C204  F20C         	movff	___fladd@b,??___fladd
 33774  016220  C205  F20D         	movff	___fladd@b+1,??___fladd+1
 33775  016224  C206  F20E         	movff	___fladd@b+2,??___fladd+2
 33776  016228  C207  F20F         	movff	___fladd@b+3,??___fladd+3
 33777  01622C  350F               	rlcf	(??___fladd+3)& (0+255),w,b
 33778  01622E  330F               	rrcf	(??___fladd+3)& (0+255),f,b
 33779  016230  330E               	rrcf	(??___fladd+2)& (0+255),f,b
 33780  016232  330D               	rrcf	(??___fladd+1)& (0+255),f,b
 33781  016234  330C               	rrcf	??___fladd& (0+255),f,b
 33782  016236  C20C  F204         	movff	??___fladd,___fladd@b
 33783  01623A  C20D  F205         	movff	??___fladd+1,___fladd@b+1
 33784  01623E  C20E  F206         	movff	??___fladd+2,___fladd@b+2
 33785  016242  C20F  F207         	movff	??___fladd+3,___fladd@b+3
 33786  016246  2916               	incf	___fladd@bexp& (0+255),w,b
 33787  016248  A4D8               	btfss	status,2,c
 33788                           
 33789                           ; BSR set to: 2
 33790  01624A  2B16               	incf	___fladd@bexp& (0+255),f,b
 33791  01624C                     l2914:
 33792                           
 33793                           ; BSR set to: 2
 33794                           
 33795                           ; BSR set to: 2
 33796                           
 33797                           ; BSR set to: 2
 33798                           
 33799                           ; BSR set to: 2
 33800  01624C  2916               	incf	___fladd@bexp& (0+255),w,b
 33801  01624E  B4D8               	btfsc	status,2,c
 33802  016250  D003               	goto	u18310
 33803                           
 33804                           ; BSR set to: 2
 33805  016252  5116               	movf	___fladd@bexp& (0+255),w,b
 33806  016254  A4D8               	btfss	status,2,c
 33807  016256  D00D               	goto	l2918
 33808  016258                     u18310:
 33809                           
 33810                           ; BSR set to: 2
 33811                           
 33812                           ; BSR set to: 2
 33813  016258  0E00               	movlw	0
 33814  01625A  6F04               	movwf	___fladd@b& (0+255),b
 33815  01625C  0E00               	movlw	0
 33816  01625E  6F05               	movwf	(___fladd@b+1)& (0+255),b
 33817  016260  0E00               	movlw	0
 33818  016262  6F06               	movwf	(___fladd@b+2)& (0+255),b
 33819  016264  0E00               	movlw	0
 33820  016266  6F07               	movwf	(___fladd@b+3)& (0+255),b
 33821  016268  5116               	movf	___fladd@bexp& (0+255),w,b
 33822  01626A  A4D8               	btfss	status,2,c
 33823  01626C  D002               	goto	l2918
 33824                           
 33825                           ; BSR set to: 2
 33826  01626E  0E00               	movlw	0
 33827  016270  6F14               	movwf	___fladd@signs& (0+255),b
 33828  016272                     l2918:
 33829                           
 33830                           ; BSR set to: 2
 33831                           
 33832                           ; BSR set to: 2
 33833                           
 33834                           ; BSR set to: 2
 33835  016272  A116               	btfss	___fladd@bexp& (0+255),0,b
 33836  016274  D002               	goto	l2919
 33837                           
 33838                           ; BSR set to: 2
 33839  016276  8F06               	bsf	(___fladd@b+2)& (0+255),7,b
 33840  016278  D001               	goto	l2920
 33841  01627A                     l2919:
 33842                           
 33843                           ; BSR set to: 2
 33844                           
 33845                           ; BSR set to: 2
 33846  01627A  9F06               	bcf	(___fladd@b+2)& (0+255),7,b
 33847  01627C                     l2920:
 33848                           
 33849                           ; BSR set to: 2
 33850                           
 33851                           ; BSR set to: 2
 33852  01627C  90D8               	bcf	status,0,c
 33853  01627E  3116               	rrcf	___fladd@bexp& (0+255),w,b
 33854  016280  6F07               	movwf	(___fladd@b+3)& (0+255),b
 33855                           
 33856                           ; BSR set to: 2
 33857  016282  BF14               	btfsc	___fladd@signs& (0+255),7,b
 33858                           
 33859                           ; BSR set to: 2
 33860  016284  8F07               	bsf	(___fladd@b+3)& (0+255),7,b
 33861                           
 33862                           ; BSR set to: 2
 33863                           
 33864                           ; BSR set to: 2
 33865  016286  C204  F204         	movff	___fladd@b,?___fladd
 33866  01628A  C205  F205         	movff	___fladd@b+1,?___fladd+1
 33867  01628E  C206  F206         	movff	___fladd@b+2,?___fladd+2
 33868  016292  C207  F207         	movff	___fladd@b+3,?___fladd+3
 33869  016296  0012               	return	
 33870  016298                     __end_of___fladd:
 33871                           	opt stack 0
 33872                           tosu	equ	0xFFF
 33873                           tosh	equ	0xFFE
 33874                           tosl	equ	0xFFD
 33875                           pclath	equ	0xFFA
 33876                           tblptru	equ	0xFF8
 33877                           tblptrh	equ	0xFF7
 33878                           tblptrl	equ	0xFF6
 33879                           tablat	equ	0xFF5
 33880                           prodh	equ	0xFF4
 33881                           prodl	equ	0xFF3
 33882                           intcon	equ	0xFF2
 33883                           indf0	equ	0xFEF
 33884                           postinc0	equ	0xFEE
 33885                           fsr0h	equ	0xFEA
 33886                           fsr0l	equ	0xFE9
 33887                           wreg	equ	0xFE8
 33888                           indf1	equ	0xFE7
 33889                           postdec1	equ	0xFE5
 33890                           plusw1	equ	0xFE3
 33891                           fsr1h	equ	0xFE2
 33892                           fsr1l	equ	0xFE1
 33893                           indf2	equ	0xFDF
 33894                           postinc2	equ	0xFDE
 33895                           postdec2	equ	0xFDD
 33896                           plusw2	equ	0xFDB
 33897                           fsr2h	equ	0xFDA
 33898                           fsr2l	equ	0xFD9
 33899                           status	equ	0xFD8
 33900                           
 33901 ;; *************** function ___flneg *****************
 33902 ;; Defined at:
 33903 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 33904 ;; Parameters:    Size  Location     Type
 33905 ;;  f1              4    0[BANK2 ] unsigned char 
 33906 ;; Auto vars:     Size  Location     Type
 33907 ;;		None
 33908 ;; Return value:  Size  Location     Type
 33909 ;;                  4    0[BANK2 ] unsigned char 
 33910 ;; Registers used:
 33911 ;;		wreg, status,2, status,0
 33912 ;; Tracked objects:
 33913 ;;		On entry : 0/0
 33914 ;;		On exit  : 0/0
 33915 ;;		Unchanged: 0/0
 33916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 33917 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
 33918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33920 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
 33921 ;;Total ram usage:        4 bytes
 33922 ;; Hardware stack levels used:    1
 33923 ;; Hardware stack levels required when called:   19
 33924 ;; This function calls:
 33925 ;;		Nothing
 33926 ;; This function is called by:
 33927 ;;		_ringBufferLUT
 33928 ;;		__doprnt
 33929 ;; This function uses a non-reentrant model
 33930 ;;
 33931                           
 33932                           	psect	text60
 33933  01B96A                     __ptext60:
 33934                           	opt stack 0
 33935  01B96A                     ___flneg:
 33936                           	opt stack 7
 33937                           
 33938                           ; BSR set to: 2
 33939                           ;incstack = 0
 33940  01B96A  0102               	movlb	2	; () banked
 33941  01B96C  5100               	movf	___flneg@f1& (0+255),w,b
 33942  01B96E  1101               	iorwf	(___flneg@f1+1)& (0+255),w,b
 33943  01B970  1102               	iorwf	(___flneg@f1+2)& (0+255),w,b
 33944  01B972  1103               	iorwf	(___flneg@f1+3)& (0+255),w,b
 33945  01B974  B4D8               	btfsc	status,2,c
 33946  01B976  D008               	goto	l2567
 33947                           
 33948                           ; BSR set to: 2
 33949  01B978  0E00               	movlw	0
 33950  01B97A  1B00               	xorwf	___flneg@f1& (0+255),f,b
 33951  01B97C  0E00               	movlw	0
 33952  01B97E  1B01               	xorwf	(___flneg@f1+1)& (0+255),f,b
 33953  01B980  0E00               	movlw	0
 33954  01B982  1B02               	xorwf	(___flneg@f1+2)& (0+255),f,b
 33955  01B984  0E80               	movlw	128
 33956  01B986  1B03               	xorwf	(___flneg@f1+3)& (0+255),f,b
 33957  01B988                     l2567:
 33958                           
 33959                           ; BSR set to: 2
 33960                           
 33961                           ; BSR set to: 2
 33962  01B988  C200  F200         	movff	___flneg@f1,?___flneg
 33963  01B98C  C201  F201         	movff	___flneg@f1+1,?___flneg+1
 33964  01B990  C202  F202         	movff	___flneg@f1+2,?___flneg+2
 33965  01B994  C203  F203         	movff	___flneg@f1+3,?___flneg+3
 33966  01B998  0012               	return	
 33967  01B99A                     __end_of___flneg:
 33968                           	opt stack 0
 33969                           tosu	equ	0xFFF
 33970                           tosh	equ	0xFFE
 33971                           tosl	equ	0xFFD
 33972                           pclath	equ	0xFFA
 33973                           tblptru	equ	0xFF8
 33974                           tblptrh	equ	0xFF7
 33975                           tblptrl	equ	0xFF6
 33976                           tablat	equ	0xFF5
 33977                           prodh	equ	0xFF4
 33978                           prodl	equ	0xFF3
 33979                           intcon	equ	0xFF2
 33980                           indf0	equ	0xFEF
 33981                           postinc0	equ	0xFEE
 33982                           fsr0h	equ	0xFEA
 33983                           fsr0l	equ	0xFE9
 33984                           wreg	equ	0xFE8
 33985                           indf1	equ	0xFE7
 33986                           postdec1	equ	0xFE5
 33987                           plusw1	equ	0xFE3
 33988                           fsr1h	equ	0xFE2
 33989                           fsr1l	equ	0xFE1
 33990                           indf2	equ	0xFDF
 33991                           postinc2	equ	0xFDE
 33992                           postdec2	equ	0xFDD
 33993                           plusw2	equ	0xFDB
 33994                           fsr2h	equ	0xFDA
 33995                           fsr2l	equ	0xFD9
 33996                           status	equ	0xFD8
 33997                           
 33998 ;; *************** function _saveSRAMMaxToEEPROM *****************
 33999 ;; Defined at:
 34000 ;;		line 156 in file "main.c"
 34001 ;; Parameters:    Size  Location     Type
 34002 ;;		None
 34003 ;; Auto vars:     Size  Location     Type
 34004 ;;		None
 34005 ;; Return value:  Size  Location     Type
 34006 ;;                  1    wreg      void 
 34007 ;; Registers used:
 34008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34009 ;; Tracked objects:
 34010 ;;		On entry : 0/0
 34011 ;;		On exit  : 0/0
 34012 ;;		Unchanged: 0/0
 34013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34018 ;;Total ram usage:        0 bytes
 34019 ;; Hardware stack levels used:    1
 34020 ;; Hardware stack levels required when called:   21
 34021 ;; This function calls:
 34022 ;;		___flge
 34023 ;;		_writeDoubleToEEPROM
 34024 ;; This function is called by:
 34025 ;;		_main
 34026 ;; This function uses a non-reentrant model
 34027 ;;
 34028                           
 34029                           	psect	text61
 34030  017E92                     __ptext61:
 34031                           	opt stack 0
 34032  017E92                     _saveSRAMMaxToEEPROM:
 34033                           	opt stack 9
 34034                           
 34035                           ;main.c: 160: if (Irms > max_Irms) {
 34036                           
 34037                           ; BSR set to: 2
 34038                           ;incstack = 0
 34039  017E92  C2A5  F14F         	movff	_max_Irms,___flge@ff1	;volatile
 34040  017E96  C2A6  F150         	movff	_max_Irms+1,___flge@ff1+1	;volatile
 34041  017E9A  C2A7  F151         	movff	_max_Irms+2,___flge@ff1+2	;volatile
 34042  017E9E  C2A8  F152         	movff	_max_Irms+3,___flge@ff1+3	;volatile
 34043  017EA2  C174  F153         	movff	_Irms,___flge@ff2	;volatile
 34044  017EA6  C175  F154         	movff	_Irms+1,___flge@ff2+1	;volatile
 34045  017EAA  C176  F155         	movff	_Irms+2,___flge@ff2+2	;volatile
 34046  017EAE  C177  F156         	movff	_Irms+3,___flge@ff2+3	;volatile
 34047  017EB2  ECCE  F0C8         	call	___flge	;wreg free
 34048  017EB6  0101               	movlb	1	; () banked
 34049  017EB8  B0D8               	btfsc	status,0,c
 34050  017EBA  D01E               	goto	l1344
 34051                           
 34052                           ; BSR set to: 1
 34053                           ;main.c: 161: writeDoubleToEEPROM(Irms, max_Irms_address);
 34054  017EBC  C174  F153         	movff	_Irms,writeDoubleToEEPROM@input_double	;volatile
 34055  017EC0  C175  F154         	movff	_Irms+1,writeDoubleToEEPROM@input_double+1	;volatile
 34056  017EC4  C176  F155         	movff	_Irms+2,writeDoubleToEEPROM@input_double+2	;volatile
 34057  017EC8  C177  F156         	movff	_Irms+3,writeDoubleToEEPROM@input_double+3	;volatile
 34058  017ECC  0E97               	movlw	low _max_Irms_address
 34059  017ECE  6EF6               	movwf	tblptrl,c
 34060  017ED0                     	if	1	;There is more than 1 active tblptr byte
 34061  017ED0  0ECE               	movlw	high _max_Irms_address
 34062  017ED2  6EF7               	movwf	tblptrh,c
 34063  017ED4                     	endif
 34064  017ED4                     	if	1	;There are 3 active tblptr bytes
 34065  017ED4  0E00               	movlw	low (_max_Irms_address shr (0+16))
 34066  017ED6  6EF8               	movwf	tblptru,c
 34067  017ED8                     	endif
 34068  017ED8  0009               	tblrd		*+
 34069  017EDA  CFF5 F157          	movff	tablat,writeDoubleToEEPROM@starting_address
 34070  017EDE  000A               	tblrd		*-
 34071  017EE0  CFF5 F158          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 34072  017EE4  EC43  F0D7         	call	_writeDoubleToEEPROM	;wreg free
 34073                           
 34074                           ;main.c: 162: max_Irms = Irms;
 34075  017EE8  C174  F2A5         	movff	_Irms,_max_Irms	;volatile
 34076  017EEC  C175  F2A6         	movff	_Irms+1,_max_Irms+1	;volatile
 34077  017EF0  C176  F2A7         	movff	_Irms+2,_max_Irms+2	;volatile
 34078  017EF4  C177  F2A8         	movff	_Irms+3,_max_Irms+3	;volatile
 34079  017EF8                     l1344:
 34080                           
 34081                           ;main.c: 163: }
 34082                           ;main.c: 165: if (Avg_Power > max_Power) {
 34083  017EF8  C2A1  F14F         	movff	_max_Power,___flge@ff1	;volatile
 34084  017EFC  C2A2  F150         	movff	_max_Power+1,___flge@ff1+1	;volatile
 34085  017F00  C2A3  F151         	movff	_max_Power+2,___flge@ff1+2	;volatile
 34086  017F04  C2A4  F152         	movff	_max_Power+3,___flge@ff1+3	;volatile
 34087  017F08  C170  F153         	movff	_Avg_Power,___flge@ff2	;volatile
 34088  017F0C  C171  F154         	movff	_Avg_Power+1,___flge@ff2+1	;volatile
 34089  017F10  C172  F155         	movff	_Avg_Power+2,___flge@ff2+2	;volatile
 34090  017F14  C173  F156         	movff	_Avg_Power+3,___flge@ff2+3	;volatile
 34091  017F18  ECCE  F0C8         	call	___flge	;wreg free
 34092  017F1C  0101               	movlb	1	; () banked
 34093  017F1E  B0D8               	btfsc	status,0,c
 34094  017F20  D01E               	goto	l1345
 34095                           
 34096                           ; BSR set to: 1
 34097                           ;main.c: 166: writeDoubleToEEPROM(Avg_Power, max_Power_address);
 34098  017F22  C170  F153         	movff	_Avg_Power,writeDoubleToEEPROM@input_double	;volatile
 34099  017F26  C171  F154         	movff	_Avg_Power+1,writeDoubleToEEPROM@input_double+1	;volatile
 34100  017F2A  C172  F155         	movff	_Avg_Power+2,writeDoubleToEEPROM@input_double+2	;volatile
 34101  017F2E  C173  F156         	movff	_Avg_Power+3,writeDoubleToEEPROM@input_double+3	;volatile
 34102  017F32  0E95               	movlw	low _max_Power_address
 34103  017F34  6EF6               	movwf	tblptrl,c
 34104  017F36                     	if	1	;There is more than 1 active tblptr byte
 34105  017F36  0ECE               	movlw	high _max_Power_address
 34106  017F38  6EF7               	movwf	tblptrh,c
 34107  017F3A                     	endif
 34108  017F3A                     	if	1	;There are 3 active tblptr bytes
 34109  017F3A  0E00               	movlw	low (_max_Power_address shr (0+16))
 34110  017F3C  6EF8               	movwf	tblptru,c
 34111  017F3E                     	endif
 34112  017F3E  0009               	tblrd		*+
 34113  017F40  CFF5 F157          	movff	tablat,writeDoubleToEEPROM@starting_address
 34114  017F44  000A               	tblrd		*-
 34115  017F46  CFF5 F158          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 34116  017F4A  EC43  F0D7         	call	_writeDoubleToEEPROM	;wreg free
 34117                           
 34118                           ;main.c: 167: max_Power = Avg_Power;
 34119  017F4E  C170  F2A1         	movff	_Avg_Power,_max_Power	;volatile
 34120  017F52  C171  F2A2         	movff	_Avg_Power+1,_max_Power+1	;volatile
 34121  017F56  C172  F2A3         	movff	_Avg_Power+2,_max_Power+2	;volatile
 34122  017F5A  C173  F2A4         	movff	_Avg_Power+3,_max_Power+3	;volatile
 34123  017F5E                     l1345:
 34124                           
 34125                           ;main.c: 168: }
 34126                           ;main.c: 170: if (POS3P3_ADC_Result > max_POS3P3_ADC_Result) {
 34127  017F5E  C29D  F14F         	movff	_max_POS3P3_ADC_Result,___flge@ff1	;volatile
 34128  017F62  C29E  F150         	movff	_max_POS3P3_ADC_Result+1,___flge@ff1+1	;volatile
 34129  017F66  C29F  F151         	movff	_max_POS3P3_ADC_Result+2,___flge@ff1+2	;volatile
 34130  017F6A  C2A0  F152         	movff	_max_POS3P3_ADC_Result+3,___flge@ff1+3	;volatile
 34131  017F6E  C184  F153         	movff	_POS3P3_ADC_Result,___flge@ff2	;volatile
 34132  017F72  C185  F154         	movff	_POS3P3_ADC_Result+1,___flge@ff2+1	;volatile
 34133  017F76  C186  F155         	movff	_POS3P3_ADC_Result+2,___flge@ff2+2	;volatile
 34134  017F7A  C187  F156         	movff	_POS3P3_ADC_Result+3,___flge@ff2+3	;volatile
 34135  017F7E  ECCE  F0C8         	call	___flge	;wreg free
 34136  017F82  0101               	movlb	1	; () banked
 34137  017F84  B0D8               	btfsc	status,0,c
 34138  017F86  D01E               	goto	l1346
 34139                           
 34140                           ; BSR set to: 1
 34141                           ;main.c: 171: writeDoubleToEEPROM(POS3P3_ADC_Result, max_POS3P3_ADC_Result_address);
 34142  017F88  C184  F153         	movff	_POS3P3_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 34143  017F8C  C185  F154         	movff	_POS3P3_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 34144  017F90  C186  F155         	movff	_POS3P3_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 34145  017F94  C187  F156         	movff	_POS3P3_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 34146  017F98  0E93               	movlw	low _max_POS3P3_ADC_Result_address
 34147  017F9A  6EF6               	movwf	tblptrl,c
 34148  017F9C                     	if	1	;There is more than 1 active tblptr byte
 34149  017F9C  0ECE               	movlw	high _max_POS3P3_ADC_Result_address
 34150  017F9E  6EF7               	movwf	tblptrh,c
 34151  017FA0                     	endif
 34152  017FA0                     	if	1	;There are 3 active tblptr bytes
 34153  017FA0  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 34154  017FA2  6EF8               	movwf	tblptru,c
 34155  017FA4                     	endif
 34156  017FA4  0009               	tblrd		*+
 34157  017FA6  CFF5 F157          	movff	tablat,writeDoubleToEEPROM@starting_address
 34158  017FAA  000A               	tblrd		*-
 34159  017FAC  CFF5 F158          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 34160  017FB0  EC43  F0D7         	call	_writeDoubleToEEPROM	;wreg free
 34161                           
 34162                           ;main.c: 172: max_POS3P3_ADC_Result = POS3P3_ADC_Result;
 34163  017FB4  C184  F29D         	movff	_POS3P3_ADC_Result,_max_POS3P3_ADC_Result	;volatile
 34164  017FB8  C185  F29E         	movff	_POS3P3_ADC_Result+1,_max_POS3P3_ADC_Result+1	;volatile
 34165  017FBC  C186  F29F         	movff	_POS3P3_ADC_Result+2,_max_POS3P3_ADC_Result+2	;volatile
 34166  017FC0  C187  F2A0         	movff	_POS3P3_ADC_Result+3,_max_POS3P3_ADC_Result+3	;volatile
 34167  017FC4                     l1346:
 34168                           
 34169                           ;main.c: 173: }
 34170                           ;main.c: 175: if (POS12_ADC_Result > max_POS12_ADC_Result) {
 34171  017FC4  C299  F14F         	movff	_max_POS12_ADC_Result,___flge@ff1	;volatile
 34172  017FC8  C29A  F150         	movff	_max_POS12_ADC_Result+1,___flge@ff1+1	;volatile
 34173  017FCC  C29B  F151         	movff	_max_POS12_ADC_Result+2,___flge@ff1+2	;volatile
 34174  017FD0  C29C  F152         	movff	_max_POS12_ADC_Result+3,___flge@ff1+3	;volatile
 34175  017FD4  C180  F153         	movff	_POS12_ADC_Result,___flge@ff2	;volatile
 34176  017FD8  C181  F154         	movff	_POS12_ADC_Result+1,___flge@ff2+1	;volatile
 34177  017FDC  C182  F155         	movff	_POS12_ADC_Result+2,___flge@ff2+2	;volatile
 34178  017FE0  C183  F156         	movff	_POS12_ADC_Result+3,___flge@ff2+3	;volatile
 34179  017FE4  ECCE  F0C8         	call	___flge	;wreg free
 34180  017FE8  0101               	movlb	1	; () banked
 34181  017FEA  B0D8               	btfsc	status,0,c
 34182  017FEC  D01E               	goto	l1347
 34183                           
 34184                           ; BSR set to: 1
 34185                           ;main.c: 176: writeDoubleToEEPROM(POS12_ADC_Result, max_POS12_ADC_Result_address);
 34186  017FEE  C180  F153         	movff	_POS12_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 34187  017FF2  C181  F154         	movff	_POS12_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 34188  017FF6  C182  F155         	movff	_POS12_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 34189  017FFA  C183  F156         	movff	_POS12_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 34190  017FFE  0E91               	movlw	low _max_POS12_ADC_Result_address
 34191  018000  6EF6               	movwf	tblptrl,c
 34192  018002                     	if	1	;There is more than 1 active tblptr byte
 34193  018002  0ECE               	movlw	high _max_POS12_ADC_Result_address
 34194  018004  6EF7               	movwf	tblptrh,c
 34195  018006                     	endif
 34196  018006                     	if	1	;There are 3 active tblptr bytes
 34197  018006  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 34198  018008  6EF8               	movwf	tblptru,c
 34199  01800A                     	endif
 34200  01800A  0009               	tblrd		*+
 34201  01800C  CFF5 F157          	movff	tablat,writeDoubleToEEPROM@starting_address
 34202  018010  000A               	tblrd		*-
 34203  018012  CFF5 F158          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 34204  018016  EC43  F0D7         	call	_writeDoubleToEEPROM	;wreg free
 34205                           
 34206                           ;main.c: 177: max_POS12_ADC_Result = POS12_ADC_Result;
 34207  01801A  C180  F299         	movff	_POS12_ADC_Result,_max_POS12_ADC_Result	;volatile
 34208  01801E  C181  F29A         	movff	_POS12_ADC_Result+1,_max_POS12_ADC_Result+1	;volatile
 34209  018022  C182  F29B         	movff	_POS12_ADC_Result+2,_max_POS12_ADC_Result+2	;volatile
 34210  018026  C183  F29C         	movff	_POS12_ADC_Result+3,_max_POS12_ADC_Result+3	;volatile
 34211  01802A                     l1347:
 34212                           
 34213                           ;main.c: 178: }
 34214                           ;main.c: 180: if (Temp_ADC_Result > max_Temp_ADC_Result) {
 34215  01802A  C295  F14F         	movff	_max_Temp_ADC_Result,___flge@ff1	;volatile
 34216  01802E  C296  F150         	movff	_max_Temp_ADC_Result+1,___flge@ff1+1	;volatile
 34217  018032  C297  F151         	movff	_max_Temp_ADC_Result+2,___flge@ff1+2	;volatile
 34218  018036  C298  F152         	movff	_max_Temp_ADC_Result+3,___flge@ff1+3	;volatile
 34219  01803A  C17C  F153         	movff	_Temp_ADC_Result,___flge@ff2	;volatile
 34220  01803E  C17D  F154         	movff	_Temp_ADC_Result+1,___flge@ff2+1	;volatile
 34221  018042  C17E  F155         	movff	_Temp_ADC_Result+2,___flge@ff2+2	;volatile
 34222  018046  C17F  F156         	movff	_Temp_ADC_Result+3,___flge@ff2+3	;volatile
 34223  01804A  ECCE  F0C8         	call	___flge	;wreg free
 34224  01804E  0101               	movlb	1	; () banked
 34225  018050  B0D8               	btfsc	status,0,c
 34226  018052  D01E               	goto	l1348
 34227                           
 34228                           ; BSR set to: 1
 34229                           ;main.c: 181: writeDoubleToEEPROM(Temp_ADC_Result, max_Temp_ADC_Result_address);
 34230  018054  C17C  F153         	movff	_Temp_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 34231  018058  C17D  F154         	movff	_Temp_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 34232  01805C  C17E  F155         	movff	_Temp_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 34233  018060  C17F  F156         	movff	_Temp_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 34234  018064  0E8F               	movlw	low _max_Temp_ADC_Result_address
 34235  018066  6EF6               	movwf	tblptrl,c
 34236  018068                     	if	1	;There is more than 1 active tblptr byte
 34237  018068  0ECE               	movlw	high _max_Temp_ADC_Result_address
 34238  01806A  6EF7               	movwf	tblptrh,c
 34239  01806C                     	endif
 34240  01806C                     	if	1	;There are 3 active tblptr bytes
 34241  01806C  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 34242  01806E  6EF8               	movwf	tblptru,c
 34243  018070                     	endif
 34244  018070  0009               	tblrd		*+
 34245  018072  CFF5 F157          	movff	tablat,writeDoubleToEEPROM@starting_address
 34246  018076  000A               	tblrd		*-
 34247  018078  CFF5 F158          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 34248  01807C  EC43  F0D7         	call	_writeDoubleToEEPROM	;wreg free
 34249                           
 34250                           ;main.c: 182: max_Temp_ADC_Result = Temp_ADC_Result;
 34251  018080  C17C  F295         	movff	_Temp_ADC_Result,_max_Temp_ADC_Result	;volatile
 34252  018084  C17D  F296         	movff	_Temp_ADC_Result+1,_max_Temp_ADC_Result+1	;volatile
 34253  018088  C17E  F297         	movff	_Temp_ADC_Result+2,_max_Temp_ADC_Result+2	;volatile
 34254  01808C  C17F  F298         	movff	_Temp_ADC_Result+3,_max_Temp_ADC_Result+3	;volatile
 34255  018090                     l1348:
 34256                           
 34257                           ;main.c: 183: }
 34258                           ;main.c: 185: if (FVR_ADC_Result > max_FVR_ADC_Result) {
 34259  018090  C291  F14F         	movff	_max_FVR_ADC_Result,___flge@ff1	;volatile
 34260  018094  C292  F150         	movff	_max_FVR_ADC_Result+1,___flge@ff1+1	;volatile
 34261  018098  C293  F151         	movff	_max_FVR_ADC_Result+2,___flge@ff1+2	;volatile
 34262  01809C  C294  F152         	movff	_max_FVR_ADC_Result+3,___flge@ff1+3	;volatile
 34263  0180A0  C1A7  F153         	movff	_FVR_ADC_Result,___flge@ff2	;volatile
 34264  0180A4  C1A8  F154         	movff	_FVR_ADC_Result+1,___flge@ff2+1	;volatile
 34265  0180A8  C1A9  F155         	movff	_FVR_ADC_Result+2,___flge@ff2+2	;volatile
 34266  0180AC  C1AA  F156         	movff	_FVR_ADC_Result+3,___flge@ff2+3	;volatile
 34267  0180B0  ECCE  F0C8         	call	___flge	;wreg free
 34268  0180B4  0101               	movlb	1	; () banked
 34269  0180B6  B0D8               	btfsc	status,0,c
 34270  0180B8  0012               	return	
 34271                           
 34272                           ; BSR set to: 1
 34273                           ;main.c: 186: writeDoubleToEEPROM(FVR_ADC_Result, max_FVR_ADC_Result_address);
 34274  0180BA  C1A7  F153         	movff	_FVR_ADC_Result,writeDoubleToEEPROM@input_double	;volatile
 34275  0180BE  C1A8  F154         	movff	_FVR_ADC_Result+1,writeDoubleToEEPROM@input_double+1	;volatile
 34276  0180C2  C1A9  F155         	movff	_FVR_ADC_Result+2,writeDoubleToEEPROM@input_double+2	;volatile
 34277  0180C6  C1AA  F156         	movff	_FVR_ADC_Result+3,writeDoubleToEEPROM@input_double+3	;volatile
 34278  0180CA  0E8D               	movlw	low _max_FVR_ADC_Result_address
 34279  0180CC  6EF6               	movwf	tblptrl,c
 34280  0180CE                     	if	1	;There is more than 1 active tblptr byte
 34281  0180CE  0ECE               	movlw	high _max_FVR_ADC_Result_address
 34282  0180D0  6EF7               	movwf	tblptrh,c
 34283  0180D2                     	endif
 34284  0180D2                     	if	1	;There are 3 active tblptr bytes
 34285  0180D2  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 34286  0180D4  6EF8               	movwf	tblptru,c
 34287  0180D6                     	endif
 34288  0180D6  0009               	tblrd		*+
 34289  0180D8  CFF5 F157          	movff	tablat,writeDoubleToEEPROM@starting_address
 34290  0180DC  000A               	tblrd		*-
 34291  0180DE  CFF5 F158          	movff	tablat,writeDoubleToEEPROM@starting_address+1
 34292  0180E2  EC43  F0D7         	call	_writeDoubleToEEPROM	;wreg free
 34293                           
 34294                           ;main.c: 187: max_FVR_ADC_Result = FVR_ADC_Result;
 34295  0180E6  C1A7  F291         	movff	_FVR_ADC_Result,_max_FVR_ADC_Result	;volatile
 34296  0180EA  C1A8  F292         	movff	_FVR_ADC_Result+1,_max_FVR_ADC_Result+1	;volatile
 34297  0180EE  C1A9  F293         	movff	_FVR_ADC_Result+2,_max_FVR_ADC_Result+2	;volatile
 34298  0180F2  C1AA  F294         	movff	_FVR_ADC_Result+3,_max_FVR_ADC_Result+3	;volatile
 34299  0180F6  0012               	return	
 34300  0180F8                     __end_of_saveSRAMMaxToEEPROM:
 34301                           	opt stack 0
 34302                           tosu	equ	0xFFF
 34303                           tosh	equ	0xFFE
 34304                           tosl	equ	0xFFD
 34305                           pclath	equ	0xFFA
 34306                           tblptru	equ	0xFF8
 34307                           tblptrh	equ	0xFF7
 34308                           tblptrl	equ	0xFF6
 34309                           tablat	equ	0xFF5
 34310                           prodh	equ	0xFF4
 34311                           prodl	equ	0xFF3
 34312                           intcon	equ	0xFF2
 34313                           indf0	equ	0xFEF
 34314                           postinc0	equ	0xFEE
 34315                           fsr0h	equ	0xFEA
 34316                           fsr0l	equ	0xFE9
 34317                           wreg	equ	0xFE8
 34318                           indf1	equ	0xFE7
 34319                           postdec1	equ	0xFE5
 34320                           plusw1	equ	0xFE3
 34321                           fsr1h	equ	0xFE2
 34322                           fsr1l	equ	0xFE1
 34323                           indf2	equ	0xFDF
 34324                           postinc2	equ	0xFDE
 34325                           postdec2	equ	0xFDD
 34326                           plusw2	equ	0xFDB
 34327                           fsr2h	equ	0xFDA
 34328                           fsr2l	equ	0xFD9
 34329                           status	equ	0xFD8
 34330                           
 34331 ;; *************** function _writeDoubleToEEPROM *****************
 34332 ;; Defined at:
 34333 ;;		line 6 in file "double_to_EEPROM.c"
 34334 ;; Parameters:    Size  Location     Type
 34335 ;;  input_double    4   83[BANK1 ] void 
 34336 ;;  starting_add    2   87[BANK1 ] unsigned int 
 34337 ;; Auto vars:     Size  Location     Type
 34338 ;;  byte_index      2   93[BANK1 ] int 
 34339 ;;  input_data      4   89[BANK1 ] struct .
 34340 ;; Return value:  Size  Location     Type
 34341 ;;                  1    wreg      void 
 34342 ;; Registers used:
 34343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34344 ;; Tracked objects:
 34345 ;;		On entry : 0/0
 34346 ;;		On exit  : 0/0
 34347 ;;		Unchanged: 0/0
 34348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34349 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34350 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34352 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34353 ;;Total ram usage:       12 bytes
 34354 ;; Hardware stack levels used:    1
 34355 ;; Hardware stack levels required when called:   20
 34356 ;; This function calls:
 34357 ;;		_DATAEE_WriteByte
 34358 ;; This function is called by:
 34359 ;;		_saveSRAMMaxToEEPROM
 34360 ;;		_ringBufferLUT
 34361 ;; This function uses a non-reentrant model
 34362 ;;
 34363                           
 34364                           	psect	text62
 34365  01AE86                     __ptext62:
 34366                           	opt stack 0
 34367  01AE86                     _writeDoubleToEEPROM:
 34368                           	opt stack 8
 34369                           
 34370                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 34371                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 34372                           
 34373                           ;incstack = 0
 34374  01AE86  C153  F159         	movff	writeDoubleToEEPROM@input_double,writeDoubleToEEPROM@input_data
 34375  01AE8A  C154  F15A         	movff	writeDoubleToEEPROM@input_double+1,writeDoubleToEEPROM@input_data+1
 34376  01AE8E  C155  F15B         	movff	writeDoubleToEEPROM@input_double+2,writeDoubleToEEPROM@input_data+2
 34377  01AE92  C156  F15C         	movff	writeDoubleToEEPROM@input_double+3,writeDoubleToEEPROM@input_data+3
 34378                           
 34379                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 34380  01AE96  0E00               	movlw	0
 34381  01AE98  0101               	movlb	1	; () banked
 34382  01AE9A  6F5E               	movwf	(writeDoubleToEEPROM@byte_index+1)& (0+255),b
 34383  01AE9C  0E00               	movlw	0
 34384  01AE9E  6F5D               	movwf	writeDoubleToEEPROM@byte_index& (0+255),b
 34385  01AEA0                     l17773:
 34386                           
 34387                           ; BSR set to: 1
 34388  01AEA0  515E               	movf	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 34389  01AEA2  E118               	bnz	l1855
 34390  01AEA4  0E04               	movlw	4
 34391  01AEA6  5D5D               	subwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 34392  01AEA8  B0D8               	btfsc	status,0,c
 34393  01AEAA  0012               	return	
 34394                           
 34395                           ; BSR set to: 1
 34396                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 34397                           
 34398                           ; BSR set to: 1
 34399                           
 34400                           ; BSR set to: 1
 34401  01AEAC  5157               	movf	writeDoubleToEEPROM@starting_address& (0+255),w,b
 34402  01AEAE  255D               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 34403  01AEB0  6F4F               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 34404  01AEB2  5158               	movf	(writeDoubleToEEPROM@starting_address+1)& (0+255),w,b
 34405  01AEB4  215E               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 34406  01AEB6  6F50               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 34407  01AEB8  0E59               	movlw	low writeDoubleToEEPROM@input_data
 34408  01AEBA  255D               	addwf	writeDoubleToEEPROM@byte_index& (0+255),w,b
 34409  01AEBC  6ED9               	movwf	fsr2l,c
 34410  01AEBE  0E01               	movlw	high writeDoubleToEEPROM@input_data
 34411  01AEC0  215E               	addwfc	(writeDoubleToEEPROM@byte_index+1)& (0+255),w,b
 34412  01AEC2  6EDA               	movwf	fsr2h,c
 34413  01AEC4  50DF               	movf	indf2,w,c
 34414  01AEC6  6F51               	movwf	DATAEE_WriteByte@bData& (0+255),b
 34415  01AEC8  ECBF  F0DA         	call	_DATAEE_WriteByte	;wreg free
 34416  01AECC  0101               	movlb	1	; () banked
 34417  01AECE  4B5D               	infsnz	writeDoubleToEEPROM@byte_index& (0+255),f,b
 34418  01AED0  2B5E               	incf	(writeDoubleToEEPROM@byte_index+1)& (0+255),f,b
 34419  01AED2  D7E6               	goto	l17773
 34420  01AED4                     l1855:
 34421                           
 34422                           ; BSR set to: 1
 34423  01AED4  0012               	return		;funcret
 34424  01AED6                     __end_of_writeDoubleToEEPROM:
 34425                           	opt stack 0
 34426                           tosu	equ	0xFFF
 34427                           tosh	equ	0xFFE
 34428                           tosl	equ	0xFFD
 34429                           pclath	equ	0xFFA
 34430                           tblptru	equ	0xFF8
 34431                           tblptrh	equ	0xFF7
 34432                           tblptrl	equ	0xFF6
 34433                           tablat	equ	0xFF5
 34434                           prodh	equ	0xFF4
 34435                           prodl	equ	0xFF3
 34436                           intcon	equ	0xFF2
 34437                           indf0	equ	0xFEF
 34438                           postinc0	equ	0xFEE
 34439                           fsr0h	equ	0xFEA
 34440                           fsr0l	equ	0xFE9
 34441                           wreg	equ	0xFE8
 34442                           indf1	equ	0xFE7
 34443                           postdec1	equ	0xFE5
 34444                           plusw1	equ	0xFE3
 34445                           fsr1h	equ	0xFE2
 34446                           fsr1l	equ	0xFE1
 34447                           indf2	equ	0xFDF
 34448                           postinc2	equ	0xFDE
 34449                           postdec2	equ	0xFDD
 34450                           plusw2	equ	0xFDB
 34451                           fsr2h	equ	0xFDA
 34452                           fsr2l	equ	0xFD9
 34453                           status	equ	0xFD8
 34454                           
 34455 ;; *************** function _DATAEE_WriteByte *****************
 34456 ;; Defined at:
 34457 ;;		line 168 in file "mcc_generated_files/memory.c"
 34458 ;; Parameters:    Size  Location     Type
 34459 ;;  bAdd            2   79[BANK1 ] unsigned int 
 34460 ;;  bData           1   81[BANK1 ] unsigned char 
 34461 ;; Auto vars:     Size  Location     Type
 34462 ;;  GIEBitValue     1   82[BANK1 ] unsigned char 
 34463 ;; Return value:  Size  Location     Type
 34464 ;;                  1    wreg      void 
 34465 ;; Registers used:
 34466 ;;		wreg, status,2, status,0
 34467 ;; Tracked objects:
 34468 ;;		On entry : 0/0
 34469 ;;		On exit  : 0/0
 34470 ;;		Unchanged: 0/0
 34471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34472 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34473 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34475 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34476 ;;Total ram usage:        4 bytes
 34477 ;; Hardware stack levels used:    1
 34478 ;; Hardware stack levels required when called:   19
 34479 ;; This function calls:
 34480 ;;		Nothing
 34481 ;; This function is called by:
 34482 ;;		_writeDoubleToEEPROM
 34483 ;; This function uses a non-reentrant model
 34484 ;;
 34485                           
 34486                           	psect	text63
 34487  01B57E                     __ptext63:
 34488                           	opt stack 0
 34489  01B57E                     _DATAEE_WriteByte:
 34490                           	opt stack 8
 34491                           
 34492                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 34493                           
 34494                           ; BSR set to: 1
 34495                           ;incstack = 0
 34496  01B57E  0E00               	movlw	0
 34497  01B580  BEF2               	btfsc	intcon,7,c	;volatile
 34498  01B582  0E01               	movlw	1
 34499  01B584  0101               	movlb	1	; () banked
 34500  01B586  6F52               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 34501                           
 34502                           ; BSR set to: 1
 34503                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 34504  01B588  5150               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 34505  01B58A  0B03               	andlw	3
 34506  01B58C  6E75               	movwf	3957,c	;volatile
 34507                           
 34508                           ; BSR set to: 1
 34509                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 34510  01B58E  C14F  FF74         	movff	DATAEE_WriteByte@bAdd,3956	;volatile
 34511                           
 34512                           ; BSR set to: 1
 34513                           ;memory.c: 174: NVMDAT = bData;
 34514  01B592  C151  FF76         	movff	DATAEE_WriteByte@bData,3958	;volatile
 34515                           
 34516                           ; BSR set to: 1
 34517                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 34518  01B596  0E3F               	movlw	-193
 34519  01B598  1677               	andwf	3959,f,c	;volsfr
 34520                           
 34521                           ; BSR set to: 1
 34522                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 34523  01B59A  8477               	bsf	3959,2,c	;volsfr
 34524                           
 34525                           ; BSR set to: 1
 34526                           ;memory.c: 177: INTCONbits.GIE = 0;
 34527  01B59C  9EF2               	bcf	intcon,7,c	;volatile
 34528                           
 34529                           ; BSR set to: 1
 34530                           ;memory.c: 178: NVMCON2 = 0x55;
 34531  01B59E  0E55               	movlw	85
 34532  01B5A0  6E78               	movwf	3960,c	;volsfr
 34533                           
 34534                           ; BSR set to: 1
 34535                           ;memory.c: 179: NVMCON2 = 0xAA;
 34536  01B5A2  0EAA               	movlw	170
 34537  01B5A4  6E78               	movwf	3960,c	;volsfr
 34538                           
 34539                           ; BSR set to: 1
 34540                           ;memory.c: 180: NVMCON1bits.WR = 1;
 34541  01B5A6  8277               	bsf	3959,1,c	;volsfr
 34542  01B5A8                     
 34543                           ; BSR set to: 1
 34544                           ;memory.c: 183: {
 34545  01B5A8  B277               	btfsc	3959,1,c	;volsfr
 34546  01B5AA  D7FE               	goto	l843
 34547                           
 34548                           ;memory.c: 184: }
 34549                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 34550  01B5AC  9477               	bcf	3959,2,c	;volsfr
 34551                           
 34552                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 34553  01B5AE  0101               	movlb	1	; () banked
 34554  01B5B0  B152               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 34555  01B5B2  D002               	bra	u22125
 34556  01B5B4  9EF2               	bcf	intcon,7,c	;volatile
 34557  01B5B6  D001               	bra	u22126
 34558  01B5B8                     u22125:
 34559  01B5B8  8EF2               	bsf	intcon,7,c	;volatile
 34560  01B5BA                     u22126:
 34561  01B5BA  0012               	return		;funcret
 34562  01B5BC                     __end_of_DATAEE_WriteByte:
 34563                           	opt stack 0
 34564                           tosu	equ	0xFFF
 34565                           tosh	equ	0xFFE
 34566                           tosl	equ	0xFFD
 34567                           pclath	equ	0xFFA
 34568                           tblptru	equ	0xFF8
 34569                           tblptrh	equ	0xFF7
 34570                           tblptrl	equ	0xFF6
 34571                           tablat	equ	0xFF5
 34572                           prodh	equ	0xFF4
 34573                           prodl	equ	0xFF3
 34574                           intcon	equ	0xFF2
 34575                           indf0	equ	0xFEF
 34576                           postinc0	equ	0xFEE
 34577                           fsr0h	equ	0xFEA
 34578                           fsr0l	equ	0xFE9
 34579                           wreg	equ	0xFE8
 34580                           indf1	equ	0xFE7
 34581                           postdec1	equ	0xFE5
 34582                           plusw1	equ	0xFE3
 34583                           fsr1h	equ	0xFE2
 34584                           fsr1l	equ	0xFE1
 34585                           indf2	equ	0xFDF
 34586                           postinc2	equ	0xFDE
 34587                           postdec2	equ	0xFDD
 34588                           plusw2	equ	0xFDB
 34589                           fsr2h	equ	0xFDA
 34590                           fsr2l	equ	0xFD9
 34591                           status	equ	0xFD8
 34592                           
 34593 ;; *************** function ___flge *****************
 34594 ;; Defined at:
 34595 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 34596 ;; Parameters:    Size  Location     Type
 34597 ;;  ff1             4   79[BANK1 ] void 
 34598 ;;  ff2             4   83[BANK1 ] void 
 34599 ;; Auto vars:     Size  Location     Type
 34600 ;;		None
 34601 ;; Return value:  Size  Location     Type
 34602 ;;		None               void
 34603 ;; Registers used:
 34604 ;;		wreg, status,2, status,0
 34605 ;; Tracked objects:
 34606 ;;		On entry : 0/0
 34607 ;;		On exit  : 0/0
 34608 ;;		Unchanged: 0/0
 34609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34610 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34612 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34613 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34614 ;;Total ram usage:       12 bytes
 34615 ;; Hardware stack levels used:    1
 34616 ;; Hardware stack levels required when called:   19
 34617 ;; This function calls:
 34618 ;;		Nothing
 34619 ;; This function is called by:
 34620 ;;		_saveSRAMMaxToEEPROM
 34621 ;;		__doprnt
 34622 ;; This function uses a non-reentrant model
 34623 ;;
 34624                           
 34625                           	psect	text64
 34626  01919C                     __ptext64:
 34627                           	opt stack 0
 34628  01919C                     ___flge:
 34629                           	opt stack 7
 34630                           
 34631                           ;incstack = 0
 34632  01919C  0E00               	movlw	0
 34633  01919E  0101               	movlb	1	; () banked
 34634  0191A0  154F               	andwf	___flge@ff1& (0+255),w,b
 34635  0191A2  6F57               	movwf	??___flge& (0+255),b
 34636  0191A4  0E00               	movlw	0
 34637  0191A6  1550               	andwf	(___flge@ff1+1)& (0+255),w,b
 34638  0191A8  6F58               	movwf	(??___flge+1)& (0+255),b
 34639  0191AA  0E80               	movlw	128
 34640  0191AC  1551               	andwf	(___flge@ff1+2)& (0+255),w,b
 34641  0191AE  6F59               	movwf	(??___flge+2)& (0+255),b
 34642  0191B0  0E7F               	movlw	127
 34643  0191B2  1552               	andwf	(___flge@ff1+3)& (0+255),w,b
 34644  0191B4  6F5A               	movwf	(??___flge+3)& (0+255),b
 34645  0191B6  5157               	movf	??___flge& (0+255),w,b
 34646  0191B8  1158               	iorwf	(??___flge+1)& (0+255),w,b
 34647  0191BA  1159               	iorwf	(??___flge+2)& (0+255),w,b
 34648  0191BC  115A               	iorwf	(??___flge+3)& (0+255),w,b
 34649  0191BE  A4D8               	btfss	status,2,c
 34650  0191C0  D008               	goto	l2560
 34651                           
 34652                           ; BSR set to: 1
 34653  0191C2  0E00               	movlw	0
 34654  0191C4  6F4F               	movwf	___flge@ff1& (0+255),b
 34655  0191C6  0E00               	movlw	0
 34656  0191C8  6F50               	movwf	(___flge@ff1+1)& (0+255),b
 34657  0191CA  0E00               	movlw	0
 34658  0191CC  6F51               	movwf	(___flge@ff1+2)& (0+255),b
 34659  0191CE  0E00               	movlw	0
 34660  0191D0  6F52               	movwf	(___flge@ff1+3)& (0+255),b
 34661  0191D2                     l2560:
 34662                           
 34663                           ; BSR set to: 1
 34664                           
 34665                           ; BSR set to: 1
 34666  0191D2  0E00               	movlw	0
 34667  0191D4  1553               	andwf	___flge@ff2& (0+255),w,b
 34668  0191D6  6F57               	movwf	??___flge& (0+255),b
 34669  0191D8  0E00               	movlw	0
 34670  0191DA  1554               	andwf	(___flge@ff2+1)& (0+255),w,b
 34671  0191DC  6F58               	movwf	(??___flge+1)& (0+255),b
 34672  0191DE  0E80               	movlw	128
 34673  0191E0  1555               	andwf	(___flge@ff2+2)& (0+255),w,b
 34674  0191E2  6F59               	movwf	(??___flge+2)& (0+255),b
 34675  0191E4  0E7F               	movlw	127
 34676  0191E6  1556               	andwf	(___flge@ff2+3)& (0+255),w,b
 34677  0191E8  6F5A               	movwf	(??___flge+3)& (0+255),b
 34678  0191EA  5157               	movf	??___flge& (0+255),w,b
 34679  0191EC  1158               	iorwf	(??___flge+1)& (0+255),w,b
 34680  0191EE  1159               	iorwf	(??___flge+2)& (0+255),w,b
 34681  0191F0  115A               	iorwf	(??___flge+3)& (0+255),w,b
 34682  0191F2  A4D8               	btfss	status,2,c
 34683  0191F4  D008               	goto	l2561
 34684                           
 34685                           ; BSR set to: 1
 34686  0191F6  0E00               	movlw	0
 34687  0191F8  6F53               	movwf	___flge@ff2& (0+255),b
 34688  0191FA  0E00               	movlw	0
 34689  0191FC  6F54               	movwf	(___flge@ff2+1)& (0+255),b
 34690  0191FE  0E00               	movlw	0
 34691  019200  6F55               	movwf	(___flge@ff2+2)& (0+255),b
 34692  019202  0E00               	movlw	0
 34693  019204  6F56               	movwf	(___flge@ff2+3)& (0+255),b
 34694  019206                     l2561:
 34695                           
 34696                           ; BSR set to: 1
 34697                           
 34698                           ; BSR set to: 1
 34699  019206  AF52               	btfss	(___flge@ff1+3)& (0+255),7,b
 34700  019208  D01D               	goto	l2562
 34701                           
 34702                           ; BSR set to: 1
 34703  01920A  C14F  F157         	movff	___flge@ff1,??___flge
 34704  01920E  C150  F158         	movff	___flge@ff1+1,??___flge+1
 34705  019212  C151  F159         	movff	___flge@ff1+2,??___flge+2
 34706  019216  C152  F15A         	movff	___flge@ff1+3,??___flge+3
 34707  01921A  1F57               	comf	??___flge& (0+255),f,b
 34708  01921C  1F58               	comf	(??___flge+1)& (0+255),f,b
 34709  01921E  1F59               	comf	(??___flge+2)& (0+255),f,b
 34710  019220  1F5A               	comf	(??___flge+3)& (0+255),f,b
 34711  019222  2B57               	incf	??___flge& (0+255),f,b
 34712  019224  0E00               	movlw	0
 34713  019226  2358               	addwfc	(??___flge+1)& (0+255),f,b
 34714  019228  2359               	addwfc	(??___flge+2)& (0+255),f,b
 34715  01922A  235A               	addwfc	(??___flge+3)& (0+255),f,b
 34716  01922C  0E00               	movlw	0
 34717  01922E  2557               	addwf	??___flge& (0+255),w,b
 34718  019230  6F4F               	movwf	___flge@ff1& (0+255),b
 34719  019232  0E00               	movlw	0
 34720  019234  2158               	addwfc	(??___flge+1)& (0+255),w,b
 34721  019236  6F50               	movwf	(___flge@ff1+1)& (0+255),b
 34722  019238  0E00               	movlw	0
 34723  01923A  2159               	addwfc	(??___flge+2)& (0+255),w,b
 34724  01923C  6F51               	movwf	(___flge@ff1+2)& (0+255),b
 34725  01923E  0E80               	movlw	128
 34726  019240  215A               	addwfc	(??___flge+3)& (0+255),w,b
 34727  019242  6F52               	movwf	(___flge@ff1+3)& (0+255),b
 34728  019244                     l2562:
 34729                           
 34730                           ; BSR set to: 1
 34731                           
 34732                           ; BSR set to: 1
 34733  019244  AF56               	btfss	(___flge@ff2+3)& (0+255),7,b
 34734  019246  D01D               	goto	l2563
 34735                           
 34736                           ; BSR set to: 1
 34737  019248  C153  F157         	movff	___flge@ff2,??___flge
 34738  01924C  C154  F158         	movff	___flge@ff2+1,??___flge+1
 34739  019250  C155  F159         	movff	___flge@ff2+2,??___flge+2
 34740  019254  C156  F15A         	movff	___flge@ff2+3,??___flge+3
 34741  019258  1F57               	comf	??___flge& (0+255),f,b
 34742  01925A  1F58               	comf	(??___flge+1)& (0+255),f,b
 34743  01925C  1F59               	comf	(??___flge+2)& (0+255),f,b
 34744  01925E  1F5A               	comf	(??___flge+3)& (0+255),f,b
 34745  019260  2B57               	incf	??___flge& (0+255),f,b
 34746  019262  0E00               	movlw	0
 34747  019264  2358               	addwfc	(??___flge+1)& (0+255),f,b
 34748  019266  2359               	addwfc	(??___flge+2)& (0+255),f,b
 34749  019268  235A               	addwfc	(??___flge+3)& (0+255),f,b
 34750  01926A  0E00               	movlw	0
 34751  01926C  2557               	addwf	??___flge& (0+255),w,b
 34752  01926E  6F53               	movwf	___flge@ff2& (0+255),b
 34753  019270  0E00               	movlw	0
 34754  019272  2158               	addwfc	(??___flge+1)& (0+255),w,b
 34755  019274  6F54               	movwf	(___flge@ff2+1)& (0+255),b
 34756  019276  0E00               	movlw	0
 34757  019278  2159               	addwfc	(??___flge+2)& (0+255),w,b
 34758  01927A  6F55               	movwf	(___flge@ff2+2)& (0+255),b
 34759  01927C  0E80               	movlw	128
 34760  01927E  215A               	addwfc	(??___flge+3)& (0+255),w,b
 34761  019280  6F56               	movwf	(___flge@ff2+3)& (0+255),b
 34762  019282                     l2563:
 34763                           
 34764                           ; BSR set to: 1
 34765  019282  0E00               	movlw	0
 34766  019284  1B4F               	xorwf	___flge@ff1& (0+255),f,b
 34767  019286  0E00               	movlw	0
 34768  019288  1B50               	xorwf	(___flge@ff1+1)& (0+255),f,b
 34769  01928A  0E00               	movlw	0
 34770  01928C  1B51               	xorwf	(___flge@ff1+2)& (0+255),f,b
 34771  01928E  0E80               	movlw	128
 34772  019290  1B52               	xorwf	(___flge@ff1+3)& (0+255),f,b
 34773  019292  0E00               	movlw	0
 34774  019294  1B53               	xorwf	___flge@ff2& (0+255),f,b
 34775  019296  0E00               	movlw	0
 34776  019298  1B54               	xorwf	(___flge@ff2+1)& (0+255),f,b
 34777  01929A  0E00               	movlw	0
 34778  01929C  1B55               	xorwf	(___flge@ff2+2)& (0+255),f,b
 34779  01929E  0E80               	movlw	128
 34780  0192A0  1B56               	xorwf	(___flge@ff2+3)& (0+255),f,b
 34781  0192A2  5153               	movf	___flge@ff2& (0+255),w,b
 34782  0192A4  5D4F               	subwf	___flge@ff1& (0+255),w,b
 34783  0192A6  5154               	movf	(___flge@ff2+1)& (0+255),w,b
 34784  0192A8  5950               	subwfb	(___flge@ff1+1)& (0+255),w,b
 34785  0192AA  5155               	movf	(___flge@ff2+2)& (0+255),w,b
 34786  0192AC  5951               	subwfb	(___flge@ff1+2)& (0+255),w,b
 34787  0192AE  5156               	movf	(___flge@ff2+3)& (0+255),w,b
 34788  0192B0  5952               	subwfb	(___flge@ff1+3)& (0+255),w,b
 34789  0192B2  B0D8               	btfsc	status,0,c
 34790  0192B4  D002               	goto	l14859
 34791                           
 34792                           ; BSR set to: 1
 34793  0192B6  90D8               	bcf	status,0,c
 34794  0192B8  0012               	return	
 34795  0192BA                     l14859:
 34796                           
 34797                           ; BSR set to: 1
 34798                           
 34799                           ; BSR set to: 1
 34800  0192BA  80D8               	bsf	status,0,c
 34801                           
 34802                           ; BSR set to: 1
 34803  0192BC  0012               	return	
 34804  0192BE                     __end_of___flge:
 34805                           	opt stack 0
 34806                           tosu	equ	0xFFF
 34807                           tosh	equ	0xFFE
 34808                           tosl	equ	0xFFD
 34809                           pclath	equ	0xFFA
 34810                           tblptru	equ	0xFF8
 34811                           tblptrh	equ	0xFF7
 34812                           tblptrl	equ	0xFF6
 34813                           tablat	equ	0xFF5
 34814                           prodh	equ	0xFF4
 34815                           prodl	equ	0xFF3
 34816                           intcon	equ	0xFF2
 34817                           indf0	equ	0xFEF
 34818                           postinc0	equ	0xFEE
 34819                           fsr0h	equ	0xFEA
 34820                           fsr0l	equ	0xFE9
 34821                           wreg	equ	0xFE8
 34822                           indf1	equ	0xFE7
 34823                           postdec1	equ	0xFE5
 34824                           plusw1	equ	0xFE3
 34825                           fsr1h	equ	0xFE2
 34826                           fsr1l	equ	0xFE1
 34827                           indf2	equ	0xFDF
 34828                           postinc2	equ	0xFDE
 34829                           postdec2	equ	0xFDD
 34830                           plusw2	equ	0xFDB
 34831                           fsr2h	equ	0xFDA
 34832                           fsr2l	equ	0xFD9
 34833                           status	equ	0xFD8
 34834                           
 34835 ;; *************** function _recoverSRAMMaxFromEEPROM *****************
 34836 ;; Defined at:
 34837 ;;		line 193 in file "main.c"
 34838 ;; Parameters:    Size  Location     Type
 34839 ;;		None
 34840 ;; Auto vars:     Size  Location     Type
 34841 ;;		None
 34842 ;; Return value:  Size  Location     Type
 34843 ;;                  1    wreg      void 
 34844 ;; Registers used:
 34845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34846 ;; Tracked objects:
 34847 ;;		On entry : 0/0
 34848 ;;		On exit  : 0/0
 34849 ;;		Unchanged: 0/0
 34850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 34851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34855 ;;Total ram usage:        0 bytes
 34856 ;; Hardware stack levels used:    1
 34857 ;; Hardware stack levels required when called:   21
 34858 ;; This function calls:
 34859 ;;		_readDoubleFromEEPROM
 34860 ;; This function is called by:
 34861 ;;		_main
 34862 ;; This function uses a non-reentrant model
 34863 ;;
 34864                           
 34865                           	psect	text65
 34866  018BAE                     __ptext65:
 34867                           	opt stack 0
 34868  018BAE                     _recoverSRAMMaxFromEEPROM:
 34869                           	opt stack 9
 34870                           
 34871                           ;main.c: 195: max_Irms = readDoubleFromEEPROM(max_Irms_address);
 34872                           
 34873                           ; BSR set to: 1
 34874                           ;incstack = 0
 34875  018BAE  0E97               	movlw	low _max_Irms_address
 34876  018BB0  6EF6               	movwf	tblptrl,c
 34877  018BB2                     	if	1	;There is more than 1 active tblptr byte
 34878  018BB2  0ECE               	movlw	high _max_Irms_address
 34879  018BB4  6EF7               	movwf	tblptrh,c
 34880  018BB6                     	endif
 34881  018BB6                     	if	1	;There are 3 active tblptr bytes
 34882  018BB6  0E00               	movlw	low (_max_Irms_address shr (0+16))
 34883  018BB8  6EF8               	movwf	tblptru,c
 34884  018BBA                     	endif
 34885  018BBA  0009               	tblrd		*+
 34886  018BBC  CFF5 F151          	movff	tablat,readDoubleFromEEPROM@starting_address
 34887  018BC0  000A               	tblrd		*-
 34888  018BC2  CFF5 F152          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 34889  018BC6  ECC9  F0D6         	call	_readDoubleFromEEPROM	;wreg free
 34890  018BCA  C151  F2A5         	movff	?_readDoubleFromEEPROM,_max_Irms	;volatile
 34891  018BCE  C152  F2A6         	movff	?_readDoubleFromEEPROM+1,_max_Irms+1	;volatile
 34892  018BD2  C153  F2A7         	movff	?_readDoubleFromEEPROM+2,_max_Irms+2	;volatile
 34893  018BD6  C154  F2A8         	movff	?_readDoubleFromEEPROM+3,_max_Irms+3	;volatile
 34894                           
 34895                           ;main.c: 196: max_Power = readDoubleFromEEPROM(max_Power_address);
 34896  018BDA  0E95               	movlw	low _max_Power_address
 34897  018BDC  6EF6               	movwf	tblptrl,c
 34898  018BDE                     	if	1	;There is more than 1 active tblptr byte
 34899  018BDE  0ECE               	movlw	high _max_Power_address
 34900  018BE0  6EF7               	movwf	tblptrh,c
 34901  018BE2                     	endif
 34902  018BE2                     	if	1	;There are 3 active tblptr bytes
 34903  018BE2  0E00               	movlw	low (_max_Power_address shr (0+16))
 34904  018BE4  6EF8               	movwf	tblptru,c
 34905  018BE6                     	endif
 34906  018BE6  0009               	tblrd		*+
 34907  018BE8  CFF5 F151          	movff	tablat,readDoubleFromEEPROM@starting_address
 34908  018BEC  000A               	tblrd		*-
 34909  018BEE  CFF5 F152          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 34910  018BF2  ECC9  F0D6         	call	_readDoubleFromEEPROM	;wreg free
 34911  018BF6  C151  F2A1         	movff	?_readDoubleFromEEPROM,_max_Power	;volatile
 34912  018BFA  C152  F2A2         	movff	?_readDoubleFromEEPROM+1,_max_Power+1	;volatile
 34913  018BFE  C153  F2A3         	movff	?_readDoubleFromEEPROM+2,_max_Power+2	;volatile
 34914  018C02  C154  F2A4         	movff	?_readDoubleFromEEPROM+3,_max_Power+3	;volatile
 34915                           
 34916                           ;main.c: 197: max_POS3P3_ADC_Result = readDoubleFromEEPROM(max_POS3P3_ADC_Result_address
      +                          );
 34917  018C06  0E93               	movlw	low _max_POS3P3_ADC_Result_address
 34918  018C08  6EF6               	movwf	tblptrl,c
 34919  018C0A                     	if	1	;There is more than 1 active tblptr byte
 34920  018C0A  0ECE               	movlw	high _max_POS3P3_ADC_Result_address
 34921  018C0C  6EF7               	movwf	tblptrh,c
 34922  018C0E                     	endif
 34923  018C0E                     	if	1	;There are 3 active tblptr bytes
 34924  018C0E  0E00               	movlw	low (_max_POS3P3_ADC_Result_address shr (0+16))
 34925  018C10  6EF8               	movwf	tblptru,c
 34926  018C12                     	endif
 34927  018C12  0009               	tblrd		*+
 34928  018C14  CFF5 F151          	movff	tablat,readDoubleFromEEPROM@starting_address
 34929  018C18  000A               	tblrd		*-
 34930  018C1A  CFF5 F152          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 34931  018C1E  ECC9  F0D6         	call	_readDoubleFromEEPROM	;wreg free
 34932  018C22  C151  F29D         	movff	?_readDoubleFromEEPROM,_max_POS3P3_ADC_Result	;volatile
 34933  018C26  C152  F29E         	movff	?_readDoubleFromEEPROM+1,_max_POS3P3_ADC_Result+1	;volatile
 34934  018C2A  C153  F29F         	movff	?_readDoubleFromEEPROM+2,_max_POS3P3_ADC_Result+2	;volatile
 34935  018C2E  C154  F2A0         	movff	?_readDoubleFromEEPROM+3,_max_POS3P3_ADC_Result+3	;volatile
 34936                           
 34937                           ;main.c: 198: max_POS12_ADC_Result = readDoubleFromEEPROM(max_POS12_ADC_Result_address);
 34938  018C32  0E91               	movlw	low _max_POS12_ADC_Result_address
 34939  018C34  6EF6               	movwf	tblptrl,c
 34940  018C36                     	if	1	;There is more than 1 active tblptr byte
 34941  018C36  0ECE               	movlw	high _max_POS12_ADC_Result_address
 34942  018C38  6EF7               	movwf	tblptrh,c
 34943  018C3A                     	endif
 34944  018C3A                     	if	1	;There are 3 active tblptr bytes
 34945  018C3A  0E00               	movlw	low (_max_POS12_ADC_Result_address shr (0+16))
 34946  018C3C  6EF8               	movwf	tblptru,c
 34947  018C3E                     	endif
 34948  018C3E  0009               	tblrd		*+
 34949  018C40  CFF5 F151          	movff	tablat,readDoubleFromEEPROM@starting_address
 34950  018C44  000A               	tblrd		*-
 34951  018C46  CFF5 F152          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 34952  018C4A  ECC9  F0D6         	call	_readDoubleFromEEPROM	;wreg free
 34953  018C4E  C151  F299         	movff	?_readDoubleFromEEPROM,_max_POS12_ADC_Result	;volatile
 34954  018C52  C152  F29A         	movff	?_readDoubleFromEEPROM+1,_max_POS12_ADC_Result+1	;volatile
 34955  018C56  C153  F29B         	movff	?_readDoubleFromEEPROM+2,_max_POS12_ADC_Result+2	;volatile
 34956  018C5A  C154  F29C         	movff	?_readDoubleFromEEPROM+3,_max_POS12_ADC_Result+3	;volatile
 34957                           
 34958                           ;main.c: 199: max_Temp_ADC_Result = readDoubleFromEEPROM(max_Temp_ADC_Result_address);
 34959  018C5E  0E8F               	movlw	low _max_Temp_ADC_Result_address
 34960  018C60  6EF6               	movwf	tblptrl,c
 34961  018C62                     	if	1	;There is more than 1 active tblptr byte
 34962  018C62  0ECE               	movlw	high _max_Temp_ADC_Result_address
 34963  018C64  6EF7               	movwf	tblptrh,c
 34964  018C66                     	endif
 34965  018C66                     	if	1	;There are 3 active tblptr bytes
 34966  018C66  0E00               	movlw	low (_max_Temp_ADC_Result_address shr (0+16))
 34967  018C68  6EF8               	movwf	tblptru,c
 34968  018C6A                     	endif
 34969  018C6A  0009               	tblrd		*+
 34970  018C6C  CFF5 F151          	movff	tablat,readDoubleFromEEPROM@starting_address
 34971  018C70  000A               	tblrd		*-
 34972  018C72  CFF5 F152          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 34973  018C76  ECC9  F0D6         	call	_readDoubleFromEEPROM	;wreg free
 34974  018C7A  C151  F295         	movff	?_readDoubleFromEEPROM,_max_Temp_ADC_Result	;volatile
 34975  018C7E  C152  F296         	movff	?_readDoubleFromEEPROM+1,_max_Temp_ADC_Result+1	;volatile
 34976  018C82  C153  F297         	movff	?_readDoubleFromEEPROM+2,_max_Temp_ADC_Result+2	;volatile
 34977  018C86  C154  F298         	movff	?_readDoubleFromEEPROM+3,_max_Temp_ADC_Result+3	;volatile
 34978                           
 34979                           ;main.c: 200: max_FVR_ADC_Result = readDoubleFromEEPROM(max_FVR_ADC_Result_address);
 34980  018C8A  0E8D               	movlw	low _max_FVR_ADC_Result_address
 34981  018C8C  6EF6               	movwf	tblptrl,c
 34982  018C8E                     	if	1	;There is more than 1 active tblptr byte
 34983  018C8E  0ECE               	movlw	high _max_FVR_ADC_Result_address
 34984  018C90  6EF7               	movwf	tblptrh,c
 34985  018C92                     	endif
 34986  018C92                     	if	1	;There are 3 active tblptr bytes
 34987  018C92  0E00               	movlw	low (_max_FVR_ADC_Result_address shr (0+16))
 34988  018C94  6EF8               	movwf	tblptru,c
 34989  018C96                     	endif
 34990  018C96  0009               	tblrd		*+
 34991  018C98  CFF5 F151          	movff	tablat,readDoubleFromEEPROM@starting_address
 34992  018C9C  000A               	tblrd		*-
 34993  018C9E  CFF5 F152          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 34994  018CA2  ECC9  F0D6         	call	_readDoubleFromEEPROM	;wreg free
 34995  018CA6  C151  F291         	movff	?_readDoubleFromEEPROM,_max_FVR_ADC_Result	;volatile
 34996  018CAA  C152  F292         	movff	?_readDoubleFromEEPROM+1,_max_FVR_ADC_Result+1	;volatile
 34997  018CAE  C153  F293         	movff	?_readDoubleFromEEPROM+2,_max_FVR_ADC_Result+2	;volatile
 34998  018CB2  C154  F294         	movff	?_readDoubleFromEEPROM+3,_max_FVR_ADC_Result+3	;volatile
 34999                           
 35000                           ;main.c: 201: Total_Energy = readDoubleFromEEPROM(Total_Energy_address);
 35001  018CB6  0E99               	movlw	low _Total_Energy_address
 35002  018CB8  6EF6               	movwf	tblptrl,c
 35003  018CBA                     	if	1	;There is more than 1 active tblptr byte
 35004  018CBA  0ECE               	movlw	high _Total_Energy_address
 35005  018CBC  6EF7               	movwf	tblptrh,c
 35006  018CBE                     	endif
 35007  018CBE                     	if	1	;There are 3 active tblptr bytes
 35008  018CBE  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 35009  018CC0  6EF8               	movwf	tblptru,c
 35010  018CC2                     	endif
 35011  018CC2  0009               	tblrd		*+
 35012  018CC4  CFF5 F151          	movff	tablat,readDoubleFromEEPROM@starting_address
 35013  018CC8  000A               	tblrd		*-
 35014  018CCA  CFF5 F152          	movff	tablat,readDoubleFromEEPROM@starting_address+1
 35015  018CCE  ECC9  F0D6         	call	_readDoubleFromEEPROM	;wreg free
 35016  018CD2  C151  F0F0         	movff	?_readDoubleFromEEPROM,_Total_Energy	;volatile
 35017  018CD6  C152  F0F1         	movff	?_readDoubleFromEEPROM+1,_Total_Energy+1	;volatile
 35018  018CDA  C153  F0F2         	movff	?_readDoubleFromEEPROM+2,_Total_Energy+2	;volatile
 35019  018CDE  C154  F0F3         	movff	?_readDoubleFromEEPROM+3,_Total_Energy+3	;volatile
 35020  018CE2  0012               	return		;funcret
 35021  018CE4                     __end_of_recoverSRAMMaxFromEEPROM:
 35022                           	opt stack 0
 35023                           tosu	equ	0xFFF
 35024                           tosh	equ	0xFFE
 35025                           tosl	equ	0xFFD
 35026                           pclath	equ	0xFFA
 35027                           tblptru	equ	0xFF8
 35028                           tblptrh	equ	0xFF7
 35029                           tblptrl	equ	0xFF6
 35030                           tablat	equ	0xFF5
 35031                           prodh	equ	0xFF4
 35032                           prodl	equ	0xFF3
 35033                           intcon	equ	0xFF2
 35034                           indf0	equ	0xFEF
 35035                           postinc0	equ	0xFEE
 35036                           fsr0h	equ	0xFEA
 35037                           fsr0l	equ	0xFE9
 35038                           wreg	equ	0xFE8
 35039                           indf1	equ	0xFE7
 35040                           postdec1	equ	0xFE5
 35041                           plusw1	equ	0xFE3
 35042                           fsr1h	equ	0xFE2
 35043                           fsr1l	equ	0xFE1
 35044                           indf2	equ	0xFDF
 35045                           postinc2	equ	0xFDE
 35046                           postdec2	equ	0xFDD
 35047                           plusw2	equ	0xFDB
 35048                           fsr2h	equ	0xFDA
 35049                           fsr2l	equ	0xFD9
 35050                           status	equ	0xFD8
 35051                           
 35052 ;; *************** function _readDoubleFromEEPROM *****************
 35053 ;; Defined at:
 35054 ;;		line 22 in file "double_to_EEPROM.c"
 35055 ;; Parameters:    Size  Location     Type
 35056 ;;  starting_add    2   81[BANK1 ] unsigned int 
 35057 ;; Auto vars:     Size  Location     Type
 35058 ;;  byte_index      2   89[BANK1 ] int 
 35059 ;;  output_data     4   85[BANK1 ] struct .
 35060 ;; Return value:  Size  Location     Type
 35061 ;;                  4   81[BANK1 ] struct .
 35062 ;; Registers used:
 35063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35064 ;; Tracked objects:
 35065 ;;		On entry : 0/0
 35066 ;;		On exit  : 0/0
 35067 ;;		Unchanged: 0/0
 35068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35069 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35070 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35072 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35073 ;;Total ram usage:       10 bytes
 35074 ;; Hardware stack levels used:    1
 35075 ;; Hardware stack levels required when called:   20
 35076 ;; This function calls:
 35077 ;;		_DATAEE_ReadByte
 35078 ;; This function is called by:
 35079 ;;		_recoverSRAMMaxFromEEPROM
 35080 ;;		_ringBufferLUT
 35081 ;; This function uses a non-reentrant model
 35082 ;;
 35083                           
 35084                           	psect	text66
 35085  01AD92                     __ptext66:
 35086                           	opt stack 0
 35087  01AD92                     _readDoubleFromEEPROM:
 35088                           	opt stack 8
 35089                           
 35090                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 35091                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 35092                           
 35093                           ;incstack = 0
 35094  01AD92  0E00               	movlw	0
 35095  01AD94  0101               	movlb	1	; () banked
 35096  01AD96  6F5A               	movwf	(readDoubleFromEEPROM@byte_index+1)& (0+255),b
 35097  01AD98  0E00               	movlw	0
 35098  01AD9A  6F59               	movwf	readDoubleFromEEPROM@byte_index& (0+255),b
 35099                           
 35100                           ; BSR set to: 1
 35101  01AD9C  515A               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 35102  01AD9E  E119               	bnz	l1859
 35103  01ADA0  D014               	goto	L9
 35104  01ADA2                     
 35105                           ; BSR set to: 1
 35106                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 35107                           
 35108                           ; BSR set to: 1
 35109  01ADA2  0E55               	movlw	low readDoubleFromEEPROM@output_data
 35110  01ADA4  2559               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 35111  01ADA6  6ED9               	movwf	fsr2l,c
 35112  01ADA8  0E01               	movlw	high readDoubleFromEEPROM@output_data
 35113  01ADAA  215A               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 35114  01ADAC  6EDA               	movwf	fsr2h,c
 35115  01ADAE  5151               	movf	readDoubleFromEEPROM@starting_address& (0+255),w,b
 35116  01ADB0  2559               	addwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 35117  01ADB2  6F4F               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 35118  01ADB4  5152               	movf	(readDoubleFromEEPROM@starting_address+1)& (0+255),w,b
 35119  01ADB6  215A               	addwfc	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 35120  01ADB8  6F50               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
 35121  01ADBA  ECDD  F0DE         	call	_DATAEE_ReadByte	;wreg free
 35122  01ADBE  6EDF               	movwf	indf2,c
 35123  01ADC0  0101               	movlb	1	; () banked
 35124  01ADC2  4B59               	infsnz	readDoubleFromEEPROM@byte_index& (0+255),f,b
 35125  01ADC4  2B5A               	incf	(readDoubleFromEEPROM@byte_index+1)& (0+255),f,b
 35126                           
 35127                           ; BSR set to: 1
 35128  01ADC6  515A               	movf	(readDoubleFromEEPROM@byte_index+1)& (0+255),w,b
 35129  01ADC8  E104               	bnz	u22700
 35130  01ADCA                     L9:
 35131  01ADCA  0E04               	movlw	4
 35132  01ADCC  5D59               	subwf	readDoubleFromEEPROM@byte_index& (0+255),w,b
 35133  01ADCE  A0D8               	btfss	status,0,c
 35134  01ADD0  D7E8               	goto	l1858
 35135  01ADD2                     u22700:
 35136  01ADD2                     l1859:
 35137                           
 35138                           ; BSR set to: 1
 35139                           ;double_to_EEPROM.c: 32: }
 35140                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 35141  01ADD2  C155  F151         	movff	readDoubleFromEEPROM@output_data,?_readDoubleFromEEPROM
 35142  01ADD6  C156  F152         	movff	readDoubleFromEEPROM@output_data+1,?_readDoubleFromEEPROM+1
 35143  01ADDA  C157  F153         	movff	readDoubleFromEEPROM@output_data+2,?_readDoubleFromEEPROM+2
 35144  01ADDE  C158  F154         	movff	readDoubleFromEEPROM@output_data+3,?_readDoubleFromEEPROM+3
 35145                           
 35146                           ; BSR set to: 1
 35147  01ADE2  0012               	return		;funcret
 35148  01ADE4                     __end_of_readDoubleFromEEPROM:
 35149                           	opt stack 0
 35150                           tosu	equ	0xFFF
 35151                           tosh	equ	0xFFE
 35152                           tosl	equ	0xFFD
 35153                           pclath	equ	0xFFA
 35154                           tblptru	equ	0xFF8
 35155                           tblptrh	equ	0xFF7
 35156                           tblptrl	equ	0xFF6
 35157                           tablat	equ	0xFF5
 35158                           prodh	equ	0xFF4
 35159                           prodl	equ	0xFF3
 35160                           intcon	equ	0xFF2
 35161                           indf0	equ	0xFEF
 35162                           postinc0	equ	0xFEE
 35163                           fsr0h	equ	0xFEA
 35164                           fsr0l	equ	0xFE9
 35165                           wreg	equ	0xFE8
 35166                           indf1	equ	0xFE7
 35167                           postdec1	equ	0xFE5
 35168                           plusw1	equ	0xFE3
 35169                           fsr1h	equ	0xFE2
 35170                           fsr1l	equ	0xFE1
 35171                           indf2	equ	0xFDF
 35172                           postinc2	equ	0xFDE
 35173                           postdec2	equ	0xFDD
 35174                           plusw2	equ	0xFDB
 35175                           fsr2h	equ	0xFDA
 35176                           fsr2l	equ	0xFD9
 35177                           status	equ	0xFD8
 35178                           
 35179 ;; *************** function _DATAEE_ReadByte *****************
 35180 ;; Defined at:
 35181 ;;		line 190 in file "mcc_generated_files/memory.c"
 35182 ;; Parameters:    Size  Location     Type
 35183 ;;  bAdd            2   79[BANK1 ] unsigned int 
 35184 ;; Auto vars:     Size  Location     Type
 35185 ;;		None
 35186 ;; Return value:  Size  Location     Type
 35187 ;;                  1    wreg      unsigned char 
 35188 ;; Registers used:
 35189 ;;		wreg, status,2, status,0
 35190 ;; Tracked objects:
 35191 ;;		On entry : 0/0
 35192 ;;		On exit  : 0/0
 35193 ;;		Unchanged: 0/0
 35194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35195 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35198 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35199 ;;Total ram usage:        2 bytes
 35200 ;; Hardware stack levels used:    1
 35201 ;; Hardware stack levels required when called:   19
 35202 ;; This function calls:
 35203 ;;		Nothing
 35204 ;; This function is called by:
 35205 ;;		_readDoubleFromEEPROM
 35206 ;; This function uses a non-reentrant model
 35207 ;;
 35208                           
 35209                           	psect	text67
 35210  01BDBA                     __ptext67:
 35211                           	opt stack 0
 35212  01BDBA                     _DATAEE_ReadByte:
 35213                           	opt stack 8
 35214                           
 35215                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 35216                           
 35217                           ; BSR set to: 1
 35218                           ;incstack = 0
 35219  01BDBA  0101               	movlb	1	; () banked
 35220  01BDBC  5150               	movf	(DATAEE_ReadByte@bAdd+1)& (0+255),w,b
 35221  01BDBE  0B03               	andlw	3
 35222  01BDC0  6E75               	movwf	3957,c	;volatile
 35223                           
 35224                           ; BSR set to: 1
 35225                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 35226  01BDC2  C14F  FF74         	movff	DATAEE_ReadByte@bAdd,3956	;volatile
 35227                           
 35228                           ; BSR set to: 1
 35229                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 35230  01BDC6  0E3F               	movlw	-193
 35231  01BDC8  1677               	andwf	3959,f,c	;volsfr
 35232                           
 35233                           ; BSR set to: 1
 35234                           ;memory.c: 195: NVMCON1bits.RD = 1;
 35235  01BDCA  8077               	bsf	3959,0,c	;volsfr
 35236                           
 35237                           ; BSR set to: 1
 35238                           ;memory.c: 196: __nop();
 35239  01BDCC  F000               	nop	
 35240                           
 35241                           ;memory.c: 197: __nop();
 35242  01BDCE  F000               	nop	
 35243                           
 35244                           ;memory.c: 199: return (NVMDAT);
 35245  01BDD0  5076               	movf	3958,w,c	;volatile
 35246  01BDD2  0012               	return	
 35247  01BDD4                     __end_of_DATAEE_ReadByte:
 35248                           	opt stack 0
 35249                           tosu	equ	0xFFF
 35250                           tosh	equ	0xFFE
 35251                           tosl	equ	0xFFD
 35252                           pclath	equ	0xFFA
 35253                           tblptru	equ	0xFF8
 35254                           tblptrh	equ	0xFF7
 35255                           tblptrl	equ	0xFF6
 35256                           tablat	equ	0xFF5
 35257                           prodh	equ	0xFF4
 35258                           prodl	equ	0xFF3
 35259                           intcon	equ	0xFF2
 35260                           indf0	equ	0xFEF
 35261                           postinc0	equ	0xFEE
 35262                           fsr0h	equ	0xFEA
 35263                           fsr0l	equ	0xFE9
 35264                           wreg	equ	0xFE8
 35265                           indf1	equ	0xFE7
 35266                           postdec1	equ	0xFE5
 35267                           plusw1	equ	0xFE3
 35268                           fsr1h	equ	0xFE2
 35269                           fsr1l	equ	0xFE1
 35270                           indf2	equ	0xFDF
 35271                           postinc2	equ	0xFDE
 35272                           postdec2	equ	0xFDD
 35273                           plusw2	equ	0xFDB
 35274                           fsr2h	equ	0xFDA
 35275                           fsr2l	equ	0xFD9
 35276                           status	equ	0xFD8
 35277                           
 35278 ;; *************** function _getCauseOfReset *****************
 35279 ;; Defined at:
 35280 ;;		line 11 in file "cause_of_reset.c"
 35281 ;; Parameters:    Size  Location     Type
 35282 ;;		None
 35283 ;; Auto vars:     Size  Location     Type
 35284 ;;  return_reset    1   79[BANK1 ] enum E17455
 35285 ;; Return value:  Size  Location     Type
 35286 ;;                  1    wreg      enum E18204
 35287 ;; Registers used:
 35288 ;;		wreg, status,2
 35289 ;; Tracked objects:
 35290 ;;		On entry : 0/0
 35291 ;;		On exit  : 0/0
 35292 ;;		Unchanged: 0/0
 35293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35295 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35297 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35298 ;;Total ram usage:        1 bytes
 35299 ;; Hardware stack levels used:    1
 35300 ;; Hardware stack levels required when called:   19
 35301 ;; This function calls:
 35302 ;;		Nothing
 35303 ;; This function is called by:
 35304 ;;		_main
 35305 ;; This function uses a non-reentrant model
 35306 ;;
 35307                           
 35308                           	psect	text68
 35309  01ADE4                     __ptext68:
 35310                           	opt stack 0
 35311  01ADE4                     _getCauseOfReset:
 35312                           	opt stack 11
 35313                           
 35314                           ;cause_of_reset.c: 13: reset_t return_reset_cause;
 35315                           ;cause_of_reset.c: 18: if (PCON0bits.STKOVF == 1) {
 35316                           
 35317                           ;incstack = 0
 35318  01ADE4  AED7               	btfss	4055,7,c	;volatile
 35319  01ADE6  D002               	goto	l1818
 35320                           
 35321                           ;cause_of_reset.c: 20: return_reset_cause = Stack_Overflow_Reset;
 35322  01ADE8  0E07               	movlw	7
 35323  01ADEA  D019               	goto	L16
 35324  01ADEC                     l1818:
 35325                           
 35326                           ;cause_of_reset.c: 24: else if (PCON0bits.STKUNF == 1) {
 35327  01ADEC  ACD7               	btfss	4055,6,c	;volatile
 35328  01ADEE  D002               	goto	l1820
 35329                           
 35330                           ;cause_of_reset.c: 26: return_reset_cause = Stack_Underflow_Reset;
 35331  01ADF0  0E08               	movlw	8
 35332  01ADF2  D015               	goto	L16
 35333  01ADF4                     l1820:
 35334                           
 35335                           ;cause_of_reset.c: 30: else if (PCON0bits.nWDTWV == 0) {
 35336  01ADF4  BAD7               	btfsc	4055,5,c	;volatile
 35337  01ADF6  D002               	goto	l1822
 35338                           
 35339                           ;cause_of_reset.c: 32: return_reset_cause = Windowed_Watch_Dog_Timer_Reset;
 35340  01ADF8  0E05               	movlw	5
 35341  01ADFA  D011               	goto	L16
 35342  01ADFC                     l1822:
 35343                           
 35344                           ;cause_of_reset.c: 36: else if (PCON0bits.nRMCLR == 0) {
 35345  01ADFC  B6D7               	btfsc	4055,3,c	;volatile
 35346  01ADFE  D002               	goto	l1824
 35347                           
 35348                           ;cause_of_reset.c: 38: return_reset_cause = Master_Clear_Reset;
 35349  01AE00  0E03               	movlw	3
 35350  01AE02  D00D               	goto	L16
 35351  01AE04                     l1824:
 35352                           
 35353                           ;cause_of_reset.c: 42: else if (PCON0bits.nRI == 0) {
 35354  01AE04  B4D7               	btfsc	4055,2,c	;volatile
 35355  01AE06  D002               	goto	l1826
 35356                           
 35357                           ;cause_of_reset.c: 44: return_reset_cause = RESET_Instruction_Executed;
 35358  01AE08  0E06               	movlw	6
 35359  01AE0A  D009               	goto	L16
 35360  01AE0C                     l1826:
 35361                           
 35362                           ;cause_of_reset.c: 48: else if (PCON0bits.nPOR == 0) {
 35363  01AE0C  B2D7               	btfsc	4055,1,c	;volatile
 35364  01AE0E  D002               	goto	l1828
 35365                           
 35366                           ;cause_of_reset.c: 50: return_reset_cause = Power_On_Reset;
 35367  01AE10  0E01               	movlw	1
 35368  01AE12  D005               	goto	L16
 35369  01AE14                     l1828:
 35370                           
 35371                           ;cause_of_reset.c: 54: else if (PCON0bits.nBOR == 0) {
 35372  01AE14  B0D7               	btfsc	4055,0,c	;volatile
 35373  01AE16  D002               	goto	l1830
 35374                           
 35375                           ;cause_of_reset.c: 56: return_reset_cause = Brown_Out_Reset;
 35376  01AE18  0E02               	movlw	2
 35377  01AE1A  D001               	goto	L16
 35378  01AE1C                     l1830:
 35379                           
 35380                           ;cause_of_reset.c: 60: else {
 35381                           ;cause_of_reset.c: 62: return_reset_cause = Undefined_Reset;
 35382                           
 35383                           ; BSR set to: 1
 35384  01AE1C  0E00               	movlw	0
 35385  01AE1E                     L16:
 35386  01AE1E  0101               	movlb	1	; () banked
 35387  01AE20  6F4F               	movwf	getCauseOfReset@return_reset_cause& (0+255),b
 35388                           
 35389                           ; BSR set to: 1
 35390                           ;cause_of_reset.c: 64: }
 35391                           ;cause_of_reset.c: 67: PCON0bits.STKOVF = 0;
 35392                           
 35393                           ; BSR set to: 1
 35394                           
 35395                           ; BSR set to: 1
 35396                           
 35397                           ; BSR set to: 1
 35398                           
 35399                           ; BSR set to: 1
 35400                           
 35401                           ; BSR set to: 1
 35402                           
 35403                           ; BSR set to: 1
 35404                           
 35405                           ; BSR set to: 1
 35406  01AE22  9ED7               	bcf	4055,7,c	;volatile
 35407                           
 35408                           ; BSR set to: 1
 35409                           ;cause_of_reset.c: 68: PCON0bits.STKUNF = 0;
 35410  01AE24  9CD7               	bcf	4055,6,c	;volatile
 35411                           
 35412                           ; BSR set to: 1
 35413                           ;cause_of_reset.c: 69: PCON0bits.nWDTWV = 1;
 35414  01AE26  8AD7               	bsf	4055,5,c	;volatile
 35415                           
 35416                           ; BSR set to: 1
 35417                           ;cause_of_reset.c: 70: PCON0bits.nRWDT = 1;
 35418  01AE28  88D7               	bsf	4055,4,c	;volatile
 35419                           
 35420                           ; BSR set to: 1
 35421                           ;cause_of_reset.c: 71: PCON0bits.nRMCLR = 1;
 35422  01AE2A  86D7               	bsf	4055,3,c	;volatile
 35423                           
 35424                           ; BSR set to: 1
 35425                           ;cause_of_reset.c: 72: PCON0bits.nRI = 1;
 35426  01AE2C  84D7               	bsf	4055,2,c	;volatile
 35427                           
 35428                           ; BSR set to: 1
 35429                           ;cause_of_reset.c: 73: PCON0bits.nPOR = 1;
 35430  01AE2E  82D7               	bsf	4055,1,c	;volatile
 35431                           
 35432                           ; BSR set to: 1
 35433                           ;cause_of_reset.c: 74: PCON0bits.nBOR = 1;
 35434  01AE30  80D7               	bsf	4055,0,c	;volatile
 35435                           
 35436                           ;cause_of_reset.c: 76: return return_reset_cause;
 35437  01AE32  514F               	movf	getCauseOfReset@return_reset_cause& (0+255),w,b
 35438  01AE34  0012               	return	
 35439  01AE36                     __end_of_getCauseOfReset:
 35440                           	opt stack 0
 35441                           tosu	equ	0xFFF
 35442                           tosh	equ	0xFFE
 35443                           tosl	equ	0xFFD
 35444                           pclath	equ	0xFFA
 35445                           tblptru	equ	0xFF8
 35446                           tblptrh	equ	0xFF7
 35447                           tblptrl	equ	0xFF6
 35448                           tablat	equ	0xFF5
 35449                           prodh	equ	0xFF4
 35450                           prodl	equ	0xFF3
 35451                           intcon	equ	0xFF2
 35452                           indf0	equ	0xFEF
 35453                           postinc0	equ	0xFEE
 35454                           fsr0h	equ	0xFEA
 35455                           fsr0l	equ	0xFE9
 35456                           wreg	equ	0xFE8
 35457                           indf1	equ	0xFE7
 35458                           postdec1	equ	0xFE5
 35459                           plusw1	equ	0xFE3
 35460                           fsr1h	equ	0xFE2
 35461                           fsr1l	equ	0xFE1
 35462                           indf2	equ	0xFDF
 35463                           postinc2	equ	0xFDE
 35464                           postdec2	equ	0xFDD
 35465                           plusw2	equ	0xFDB
 35466                           fsr2h	equ	0xFDA
 35467                           fsr2l	equ	0xFD9
 35468                           status	equ	0xFD8
 35469                           
 35470 ;; *************** function _SYSTEM_Initialize *****************
 35471 ;; Defined at:
 35472 ;;		line 50 in file "mcc_generated_files/mcc.c"
 35473 ;; Parameters:    Size  Location     Type
 35474 ;;		None
 35475 ;; Auto vars:     Size  Location     Type
 35476 ;;		None
 35477 ;; Return value:  Size  Location     Type
 35478 ;;                  1    wreg      void 
 35479 ;; Registers used:
 35480 ;;		wreg, status,2, status,0, cstack
 35481 ;; Tracked objects:
 35482 ;;		On entry : 0/0
 35483 ;;		On exit  : 0/0
 35484 ;;		Unchanged: 0/0
 35485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35490 ;;Total ram usage:        0 bytes
 35491 ;; Hardware stack levels used:    1
 35492 ;; Hardware stack levels required when called:   21
 35493 ;; This function calls:
 35494 ;;		_ADCC_Initialize
 35495 ;;		_EUSART2_Initialize
 35496 ;;		_EXT_INT_Initialize
 35497 ;;		_FVR_Initialize
 35498 ;;		_HLVD_Initialize
 35499 ;;		_I2C1_Initialize
 35500 ;;		_INTERRUPT_Initialize
 35501 ;;		_OSCILLATOR_Initialize
 35502 ;;		_PIN_MANAGER_Initialize
 35503 ;;		_PMD_Initialize
 35504 ;;		_TMR2_Initialize
 35505 ;;		_TMR4_Initialize
 35506 ;;		_TMR5_Initialize
 35507 ;;		_TMR6_Initialize
 35508 ;;		_TMR7_Initialize
 35509 ;; This function is called by:
 35510 ;;		_main
 35511 ;; This function uses a non-reentrant model
 35512 ;;
 35513                           
 35514                           	psect	text69
 35515  01B5BC                     __ptext69:
 35516                           	opt stack 0
 35517  01B5BC                     _SYSTEM_Initialize:
 35518                           	opt stack 9
 35519                           
 35520                           ;mcc.c: 52: INTERRUPT_Initialize();
 35521                           
 35522                           ; BSR set to: 1
 35523                           ;incstack = 0
 35524  01B5BC  EC79  F0DE         	call	_INTERRUPT_Initialize	;wreg free
 35525                           
 35526                           ;mcc.c: 53: PMD_Initialize();
 35527  01B5C0  ECA6  F0DE         	call	_PMD_Initialize	;wreg free
 35528                           
 35529                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 35530  01B5C4  ECAF  F0CD         	call	_PIN_MANAGER_Initialize	;wreg free
 35531                           
 35532                           ;mcc.c: 55: OSCILLATOR_Initialize();
 35533  01B5C8  ECB4  F0DE         	call	_OSCILLATOR_Initialize	;wreg free
 35534                           
 35535                           ;mcc.c: 56: I2C1_Initialize();
 35536  01B5CC  ECE8  F0DB         	call	_I2C1_Initialize	;wreg free
 35537                           
 35538                           ;mcc.c: 57: HLVD_Initialize();
 35539  01B5D0  EC83  F0DF         	call	_HLVD_Initialize	;wreg free
 35540                           
 35541                           ;mcc.c: 58: FVR_Initialize();
 35542  01B5D4  ECF8  F0DF         	call	_FVR_Initialize	;wreg free
 35543                           
 35544                           ;mcc.c: 59: TMR7_Initialize();
 35545  01B5D8  EC92  F0D7         	call	_TMR7_Initialize	;wreg free
 35546                           
 35547                           ;mcc.c: 60: ADCC_Initialize();
 35548  01B5DC  EC84  F0D4         	call	_ADCC_Initialize	;wreg free
 35549                           
 35550                           ;mcc.c: 61: TMR4_Initialize();
 35551  01B5E0  ECCD  F0DC         	call	_TMR4_Initialize	;wreg free
 35552                           
 35553                           ;mcc.c: 62: TMR2_Initialize();
 35554  01B5E4  ECE5  F0DC         	call	_TMR2_Initialize	;wreg free
 35555                           
 35556                           ;mcc.c: 63: EXT_INT_Initialize();
 35557  01B5E8  EC88  F0DE         	call	_EXT_INT_Initialize	;wreg free
 35558                           
 35559                           ;mcc.c: 64: TMR6_Initialize();
 35560  01B5EC  EC6C  F0DC         	call	_TMR6_Initialize	;wreg free
 35561                           
 35562                           ;mcc.c: 65: TMR5_Initialize();
 35563  01B5F0  ECA0  F0D8         	call	_TMR5_Initialize	;wreg free
 35564                           
 35565                           ;mcc.c: 66: EUSART2_Initialize();
 35566  01B5F4  EC56  F0D5         	call	_EUSART2_Initialize	;wreg free
 35567  01B5F8  0012               	return		;funcret
 35568  01B5FA                     __end_of_SYSTEM_Initialize:
 35569                           	opt stack 0
 35570                           tosu	equ	0xFFF
 35571                           tosh	equ	0xFFE
 35572                           tosl	equ	0xFFD
 35573                           pclath	equ	0xFFA
 35574                           tblptru	equ	0xFF8
 35575                           tblptrh	equ	0xFF7
 35576                           tblptrl	equ	0xFF6
 35577                           tablat	equ	0xFF5
 35578                           prodh	equ	0xFF4
 35579                           prodl	equ	0xFF3
 35580                           intcon	equ	0xFF2
 35581                           indf0	equ	0xFEF
 35582                           postinc0	equ	0xFEE
 35583                           fsr0h	equ	0xFEA
 35584                           fsr0l	equ	0xFE9
 35585                           wreg	equ	0xFE8
 35586                           indf1	equ	0xFE7
 35587                           postdec1	equ	0xFE5
 35588                           plusw1	equ	0xFE3
 35589                           fsr1h	equ	0xFE2
 35590                           fsr1l	equ	0xFE1
 35591                           indf2	equ	0xFDF
 35592                           postinc2	equ	0xFDE
 35593                           postdec2	equ	0xFDD
 35594                           plusw2	equ	0xFDB
 35595                           fsr2h	equ	0xFDA
 35596                           fsr2l	equ	0xFD9
 35597                           status	equ	0xFD8
 35598                           
 35599 ;; *************** function _TMR7_Initialize *****************
 35600 ;; Defined at:
 35601 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 35602 ;; Parameters:    Size  Location     Type
 35603 ;;		None
 35604 ;; Auto vars:     Size  Location     Type
 35605 ;;		None
 35606 ;; Return value:  Size  Location     Type
 35607 ;;                  1    wreg      void 
 35608 ;; Registers used:
 35609 ;;		wreg, status,2, status,0, cstack
 35610 ;; Tracked objects:
 35611 ;;		On entry : 0/0
 35612 ;;		On exit  : 0/0
 35613 ;;		Unchanged: 0/0
 35614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35617 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35618 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35619 ;;Total ram usage:        2 bytes
 35620 ;; Hardware stack levels used:    1
 35621 ;; Hardware stack levels required when called:   20
 35622 ;; This function calls:
 35623 ;;		_TMR7_SetInterruptHandler
 35624 ;; This function is called by:
 35625 ;;		_SYSTEM_Initialize
 35626 ;; This function uses a non-reentrant model
 35627 ;;
 35628                           
 35629                           	psect	text70
 35630  01AF24                     __ptext70:
 35631                           	opt stack 0
 35632  01AF24                     _TMR7_Initialize:
 35633                           	opt stack 9
 35634                           
 35635                           ;tmr7.c: 69: T7GCON = 0x00;
 35636                           
 35637                           ;incstack = 0
 35638  01AF24  0E00               	movlw	0
 35639  01AF26  010F               	movlb	15	; () banked
 35640  01AF28  6F31               	movwf	49,b	;volatile
 35641                           
 35642                           ;tmr7.c: 72: T7GATE = 0x00;
 35643  01AF2A  0E00               	movlw	0
 35644  01AF2C  6F32               	movwf	50,b	;volatile
 35645                           
 35646                           ;tmr7.c: 75: T7CLK = 0x03;
 35647  01AF2E  0E03               	movlw	3
 35648  01AF30  6F33               	movwf	51,b	;volatile
 35649                           
 35650                           ;tmr7.c: 78: TMR7H = 0xEC;
 35651  01AF32  0EEC               	movlw	236
 35652  01AF34  6F2F               	movwf	47,b	;volatile
 35653                           
 35654                           ;tmr7.c: 81: TMR7L = 0x78;
 35655  01AF36  0E78               	movlw	120
 35656  01AF38  6F2E               	movwf	46,b	;volatile
 35657                           
 35658                           ; BSR set to: 15
 35659                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 35660  01AF3A  512E               	movf	46,w,b	;volatile
 35661  01AF3C  CF2F F152          	movff	3887,??_TMR7_Initialize	;volatile
 35662  01AF40  0101               	movlb	1	; () banked
 35663  01AF42  6B53               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 35664  01AF44  C152  F153         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 35665  01AF48  6B52               	clrf	??_TMR7_Initialize& (0+255),b
 35666  01AF4A  1152               	iorwf	??_TMR7_Initialize& (0+255),w,b
 35667  01AF4C  6F97               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 35668  01AF4E  5153               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 35669  01AF50  6F98               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 35670                           
 35671                           ; BSR set to: 1
 35672                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 35673  01AF52  010E               	movlb	14	; () banked
 35674  01AF54  9D38               	bcf	56,6,b	;volatile
 35675                           
 35676                           ; BSR set to: 14
 35677                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 35678  01AF56  8D2E               	bsf	46,6,b	;volatile
 35679                           
 35680                           ; BSR set to: 14
 35681                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 35682  01AF58  0E2A               	movlw	low _TMR7_DefaultInterruptHandler
 35683  01AF5A  0101               	movlb	1	; () banked
 35684  01AF5C  6F4F               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 35685  01AF5E  0EC0               	movlw	high _TMR7_DefaultInterruptHandler
 35686  01AF60  6F50               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 35687  01AF62  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 35688  01AF64  6F51               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 35689  01AF66  EC92  F0DF         	call	_TMR7_SetInterruptHandler	;wreg free
 35690                           
 35691                           ;tmr7.c: 96: T7CON = 0x31;
 35692  01AF6A  0E31               	movlw	49
 35693  01AF6C  010F               	movlb	15	; () banked
 35694  01AF6E  6F30               	movwf	48,b	;volatile
 35695                           
 35696                           ; BSR set to: 15
 35697  01AF70  0012               	return		;funcret
 35698  01AF72                     __end_of_TMR7_Initialize:
 35699                           	opt stack 0
 35700                           tosu	equ	0xFFF
 35701                           tosh	equ	0xFFE
 35702                           tosl	equ	0xFFD
 35703                           pclath	equ	0xFFA
 35704                           tblptru	equ	0xFF8
 35705                           tblptrh	equ	0xFF7
 35706                           tblptrl	equ	0xFF6
 35707                           tablat	equ	0xFF5
 35708                           prodh	equ	0xFF4
 35709                           prodl	equ	0xFF3
 35710                           intcon	equ	0xFF2
 35711                           indf0	equ	0xFEF
 35712                           postinc0	equ	0xFEE
 35713                           fsr0h	equ	0xFEA
 35714                           fsr0l	equ	0xFE9
 35715                           wreg	equ	0xFE8
 35716                           indf1	equ	0xFE7
 35717                           postdec1	equ	0xFE5
 35718                           plusw1	equ	0xFE3
 35719                           fsr1h	equ	0xFE2
 35720                           fsr1l	equ	0xFE1
 35721                           indf2	equ	0xFDF
 35722                           postinc2	equ	0xFDE
 35723                           postdec2	equ	0xFDD
 35724                           plusw2	equ	0xFDB
 35725                           fsr2h	equ	0xFDA
 35726                           fsr2l	equ	0xFD9
 35727                           status	equ	0xFD8
 35728                           
 35729 ;; *************** function _TMR7_SetInterruptHandler *****************
 35730 ;; Defined at:
 35731 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 35732 ;; Parameters:    Size  Location     Type
 35733 ;;  InterruptHan    3   79[BANK1 ] PTR FTN()void 
 35734 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 35735 ;; Auto vars:     Size  Location     Type
 35736 ;;		None
 35737 ;; Return value:  Size  Location     Type
 35738 ;;                  1    wreg      void 
 35739 ;; Registers used:
 35740 ;;		wreg, status,2, status,0
 35741 ;; Tracked objects:
 35742 ;;		On entry : 0/0
 35743 ;;		On exit  : 0/0
 35744 ;;		Unchanged: 0/0
 35745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35746 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35749 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35750 ;;Total ram usage:        3 bytes
 35751 ;; Hardware stack levels used:    1
 35752 ;; Hardware stack levels required when called:   19
 35753 ;; This function calls:
 35754 ;;		Nothing
 35755 ;; This function is called by:
 35756 ;;		_TMR7_Initialize
 35757 ;;		_main
 35758 ;; This function uses a non-reentrant model
 35759 ;;
 35760                           
 35761                           	psect	text71
 35762  01BF24                     __ptext71:
 35763                           	opt stack 0
 35764  01BF24                     _TMR7_SetInterruptHandler:
 35765                           	opt stack 11
 35766                           
 35767                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 35768                           
 35769                           ; BSR set to: 15
 35770                           ;incstack = 0
 35771  01BF24  C14F  F2D1         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 35772  01BF28  C150  F2D2         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 35773  01BF2C  C151  F2D3         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 35774  01BF30  0012               	return		;funcret
 35775  01BF32                     __end_of_TMR7_SetInterruptHandler:
 35776                           	opt stack 0
 35777                           tosu	equ	0xFFF
 35778                           tosh	equ	0xFFE
 35779                           tosl	equ	0xFFD
 35780                           pclath	equ	0xFFA
 35781                           tblptru	equ	0xFF8
 35782                           tblptrh	equ	0xFF7
 35783                           tblptrl	equ	0xFF6
 35784                           tablat	equ	0xFF5
 35785                           prodh	equ	0xFF4
 35786                           prodl	equ	0xFF3
 35787                           intcon	equ	0xFF2
 35788                           indf0	equ	0xFEF
 35789                           postinc0	equ	0xFEE
 35790                           fsr0h	equ	0xFEA
 35791                           fsr0l	equ	0xFE9
 35792                           wreg	equ	0xFE8
 35793                           indf1	equ	0xFE7
 35794                           postdec1	equ	0xFE5
 35795                           plusw1	equ	0xFE3
 35796                           fsr1h	equ	0xFE2
 35797                           fsr1l	equ	0xFE1
 35798                           indf2	equ	0xFDF
 35799                           postinc2	equ	0xFDE
 35800                           postdec2	equ	0xFDD
 35801                           plusw2	equ	0xFDB
 35802                           fsr2h	equ	0xFDA
 35803                           fsr2l	equ	0xFD9
 35804                           status	equ	0xFD8
 35805                           
 35806 ;; *************** function _TMR6_Initialize *****************
 35807 ;; Defined at:
 35808 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 35809 ;; Parameters:    Size  Location     Type
 35810 ;;		None
 35811 ;; Auto vars:     Size  Location     Type
 35812 ;;		None
 35813 ;; Return value:  Size  Location     Type
 35814 ;;                  1    wreg      void 
 35815 ;; Registers used:
 35816 ;;		wreg, status,2, status,0, cstack
 35817 ;; Tracked objects:
 35818 ;;		On entry : 0/0
 35819 ;;		On exit  : 0/0
 35820 ;;		Unchanged: 0/0
 35821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35826 ;;Total ram usage:        0 bytes
 35827 ;; Hardware stack levels used:    1
 35828 ;; Hardware stack levels required when called:   20
 35829 ;; This function calls:
 35830 ;;		_TMR6_SetInterruptHandler
 35831 ;; This function is called by:
 35832 ;;		_SYSTEM_Initialize
 35833 ;; This function uses a non-reentrant model
 35834 ;;
 35835                           
 35836                           	psect	text72
 35837  01B8D8                     __ptext72:
 35838                           	opt stack 0
 35839  01B8D8                     _TMR6_Initialize:
 35840                           	opt stack 9
 35841                           
 35842                           ;tmr6.c: 69: T6CLKCON = 0x04;
 35843                           
 35844                           ;incstack = 0
 35845  01B8D8  0E04               	movlw	4
 35846  01B8DA  6EB3               	movwf	4019,c	;volatile
 35847                           
 35848                           ;tmr6.c: 72: T6HLT = 0x20;
 35849  01B8DC  0E20               	movlw	32
 35850  01B8DE  6EB2               	movwf	4018,c	;volatile
 35851                           
 35852                           ;tmr6.c: 75: T6RST = 0x00;
 35853  01B8E0  0E00               	movlw	0
 35854  01B8E2  6EB4               	movwf	4020,c	;volatile
 35855                           
 35856                           ;tmr6.c: 78: T6PR = 0xF1;
 35857  01B8E4  0EF1               	movlw	241
 35858  01B8E6  6EB0               	movwf	4016,c	;volatile
 35859                           
 35860                           ;tmr6.c: 81: T6TMR = 0x00;
 35861  01B8E8  0E00               	movlw	0
 35862  01B8EA  6EAF               	movwf	4015,c	;volatile
 35863                           
 35864                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 35865  01B8EC  010E               	movlb	14	; () banked
 35866  01B8EE  9B38               	bcf	56,5,b	;volatile
 35867                           
 35868                           ; BSR set to: 14
 35869                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 35870  01B8F0  8B2E               	bsf	46,5,b	;volatile
 35871                           
 35872                           ; BSR set to: 14
 35873                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 35874  01B8F2  0E2C               	movlw	low _TMR6_DefaultInterruptHandler
 35875  01B8F4  0101               	movlb	1	; () banked
 35876  01B8F6  6F4F               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 35877  01B8F8  0EC0               	movlw	high _TMR6_DefaultInterruptHandler
 35878  01B8FA  6F50               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 35879  01B8FC  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 35880  01B8FE  6F51               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 35881  01B900  EC99  F0DF         	call	_TMR6_SetInterruptHandler	;wreg free
 35882                           
 35883                           ;tmr6.c: 93: T6CON = 0xBF;
 35884  01B904  0EBF               	movlw	191
 35885  01B906  6EB1               	movwf	4017,c	;volatile
 35886  01B908  0012               	return		;funcret
 35887  01B90A                     __end_of_TMR6_Initialize:
 35888                           	opt stack 0
 35889                           tosu	equ	0xFFF
 35890                           tosh	equ	0xFFE
 35891                           tosl	equ	0xFFD
 35892                           pclath	equ	0xFFA
 35893                           tblptru	equ	0xFF8
 35894                           tblptrh	equ	0xFF7
 35895                           tblptrl	equ	0xFF6
 35896                           tablat	equ	0xFF5
 35897                           prodh	equ	0xFF4
 35898                           prodl	equ	0xFF3
 35899                           intcon	equ	0xFF2
 35900                           indf0	equ	0xFEF
 35901                           postinc0	equ	0xFEE
 35902                           fsr0h	equ	0xFEA
 35903                           fsr0l	equ	0xFE9
 35904                           wreg	equ	0xFE8
 35905                           indf1	equ	0xFE7
 35906                           postdec1	equ	0xFE5
 35907                           plusw1	equ	0xFE3
 35908                           fsr1h	equ	0xFE2
 35909                           fsr1l	equ	0xFE1
 35910                           indf2	equ	0xFDF
 35911                           postinc2	equ	0xFDE
 35912                           postdec2	equ	0xFDD
 35913                           plusw2	equ	0xFDB
 35914                           fsr2h	equ	0xFDA
 35915                           fsr2l	equ	0xFD9
 35916                           status	equ	0xFD8
 35917                           
 35918 ;; *************** function _TMR6_SetInterruptHandler *****************
 35919 ;; Defined at:
 35920 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 35921 ;; Parameters:    Size  Location     Type
 35922 ;;  InterruptHan    3   79[BANK1 ] PTR FTN()void 
 35923 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 35924 ;; Auto vars:     Size  Location     Type
 35925 ;;		None
 35926 ;; Return value:  Size  Location     Type
 35927 ;;                  1    wreg      void 
 35928 ;; Registers used:
 35929 ;;		wreg, status,2, status,0
 35930 ;; Tracked objects:
 35931 ;;		On entry : 0/0
 35932 ;;		On exit  : 0/0
 35933 ;;		Unchanged: 0/0
 35934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 35935 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35938 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35939 ;;Total ram usage:        3 bytes
 35940 ;; Hardware stack levels used:    1
 35941 ;; Hardware stack levels required when called:   19
 35942 ;; This function calls:
 35943 ;;		Nothing
 35944 ;; This function is called by:
 35945 ;;		_TMR6_Initialize
 35946 ;;		_main
 35947 ;; This function uses a non-reentrant model
 35948 ;;
 35949                           
 35950                           	psect	text73
 35951  01BF32                     __ptext73:
 35952                           	opt stack 0
 35953  01BF32                     _TMR6_SetInterruptHandler:
 35954                           	opt stack 11
 35955                           
 35956                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 35957                           
 35958                           ;incstack = 0
 35959  01BF32  C14F  F188         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 35960  01BF36  C150  F189         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 35961  01BF3A  C151  F18A         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 35962  01BF3E  0012               	return		;funcret
 35963  01BF40                     __end_of_TMR6_SetInterruptHandler:
 35964                           	opt stack 0
 35965                           tosu	equ	0xFFF
 35966                           tosh	equ	0xFFE
 35967                           tosl	equ	0xFFD
 35968                           pclath	equ	0xFFA
 35969                           tblptru	equ	0xFF8
 35970                           tblptrh	equ	0xFF7
 35971                           tblptrl	equ	0xFF6
 35972                           tablat	equ	0xFF5
 35973                           prodh	equ	0xFF4
 35974                           prodl	equ	0xFF3
 35975                           intcon	equ	0xFF2
 35976                           indf0	equ	0xFEF
 35977                           postinc0	equ	0xFEE
 35978                           fsr0h	equ	0xFEA
 35979                           fsr0l	equ	0xFE9
 35980                           wreg	equ	0xFE8
 35981                           indf1	equ	0xFE7
 35982                           postdec1	equ	0xFE5
 35983                           plusw1	equ	0xFE3
 35984                           fsr1h	equ	0xFE2
 35985                           fsr1l	equ	0xFE1
 35986                           indf2	equ	0xFDF
 35987                           postinc2	equ	0xFDE
 35988                           postdec2	equ	0xFDD
 35989                           plusw2	equ	0xFDB
 35990                           fsr2h	equ	0xFDA
 35991                           fsr2l	equ	0xFD9
 35992                           status	equ	0xFD8
 35993                           
 35994 ;; *************** function _TMR5_Initialize *****************
 35995 ;; Defined at:
 35996 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 35997 ;; Parameters:    Size  Location     Type
 35998 ;;		None
 35999 ;; Auto vars:     Size  Location     Type
 36000 ;;		None
 36001 ;; Return value:  Size  Location     Type
 36002 ;;                  1    wreg      void 
 36003 ;; Registers used:
 36004 ;;		wreg, status,2, status,0, cstack
 36005 ;; Tracked objects:
 36006 ;;		On entry : 0/0
 36007 ;;		On exit  : 0/0
 36008 ;;		Unchanged: 0/0
 36009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36012 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36013 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36014 ;;Total ram usage:        2 bytes
 36015 ;; Hardware stack levels used:    1
 36016 ;; Hardware stack levels required when called:   20
 36017 ;; This function calls:
 36018 ;;		_TMR5_SetInterruptHandler
 36019 ;; This function is called by:
 36020 ;;		_SYSTEM_Initialize
 36021 ;; This function uses a non-reentrant model
 36022 ;;
 36023                           
 36024                           	psect	text74
 36025  01B140                     __ptext74:
 36026                           	opt stack 0
 36027  01B140                     _TMR5_Initialize:
 36028                           	opt stack 9
 36029                           
 36030                           ;tmr5.c: 69: T5GCON = 0x00;
 36031                           
 36032                           ;incstack = 0
 36033  01B140  0E00               	movlw	0
 36034  01B142  6EC4               	movwf	4036,c	;volatile
 36035                           
 36036                           ;tmr5.c: 72: T5GATE = 0x00;
 36037  01B144  0E00               	movlw	0
 36038  01B146  6EC5               	movwf	4037,c	;volatile
 36039                           
 36040                           ;tmr5.c: 75: T5CLK = 0x01;
 36041  01B148  0E01               	movlw	1
 36042  01B14A  6EC6               	movwf	4038,c	;volatile
 36043                           
 36044                           ;tmr5.c: 78: TMR5H = 0x00;
 36045  01B14C  0E00               	movlw	0
 36046  01B14E  6EC2               	movwf	4034,c	;volatile
 36047                           
 36048                           ;tmr5.c: 81: TMR5L = 0x00;
 36049  01B150  0E00               	movlw	0
 36050  01B152  6EC1               	movwf	4033,c	;volatile
 36051                           
 36052                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 36053  01B154  50C1               	movf	4033,w,c	;volatile
 36054  01B156  CFC2 F152          	movff	4034,??_TMR5_Initialize	;volatile
 36055  01B15A  0101               	movlb	1	; () banked
 36056  01B15C  6B53               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 36057  01B15E  C152  F153         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 36058  01B162  6B52               	clrf	??_TMR5_Initialize& (0+255),b
 36059  01B164  1152               	iorwf	??_TMR5_Initialize& (0+255),w,b
 36060  01B166  6F95               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 36061  01B168  5153               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 36062  01B16A  6F96               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 36063                           
 36064                           ; BSR set to: 1
 36065                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 36066  01B16C  010E               	movlb	14	; () banked
 36067  01B16E  9938               	bcf	56,4,b	;volatile
 36068                           
 36069                           ; BSR set to: 14
 36070                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 36071  01B170  892E               	bsf	46,4,b	;volatile
 36072                           
 36073                           ; BSR set to: 14
 36074                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 36075  01B172  0E30               	movlw	low _TMR5_DefaultInterruptHandler
 36076  01B174  0101               	movlb	1	; () banked
 36077  01B176  6F4F               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 36078  01B178  0EC0               	movlw	high _TMR5_DefaultInterruptHandler
 36079  01B17A  6F50               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 36080  01B17C  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 36081  01B17E  6F51               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 36082  01B180  ECA0  F0DF         	call	_TMR5_SetInterruptHandler	;wreg free
 36083                           
 36084                           ;tmr5.c: 96: T5CON = 0x13;
 36085  01B184  0E13               	movlw	19
 36086  01B186  6EC3               	movwf	4035,c	;volatile
 36087  01B188  0012               	return		;funcret
 36088  01B18A                     __end_of_TMR5_Initialize:
 36089                           	opt stack 0
 36090                           tosu	equ	0xFFF
 36091                           tosh	equ	0xFFE
 36092                           tosl	equ	0xFFD
 36093                           pclath	equ	0xFFA
 36094                           tblptru	equ	0xFF8
 36095                           tblptrh	equ	0xFF7
 36096                           tblptrl	equ	0xFF6
 36097                           tablat	equ	0xFF5
 36098                           prodh	equ	0xFF4
 36099                           prodl	equ	0xFF3
 36100                           intcon	equ	0xFF2
 36101                           indf0	equ	0xFEF
 36102                           postinc0	equ	0xFEE
 36103                           fsr0h	equ	0xFEA
 36104                           fsr0l	equ	0xFE9
 36105                           wreg	equ	0xFE8
 36106                           indf1	equ	0xFE7
 36107                           postdec1	equ	0xFE5
 36108                           plusw1	equ	0xFE3
 36109                           fsr1h	equ	0xFE2
 36110                           fsr1l	equ	0xFE1
 36111                           indf2	equ	0xFDF
 36112                           postinc2	equ	0xFDE
 36113                           postdec2	equ	0xFDD
 36114                           plusw2	equ	0xFDB
 36115                           fsr2h	equ	0xFDA
 36116                           fsr2l	equ	0xFD9
 36117                           status	equ	0xFD8
 36118                           
 36119 ;; *************** function _TMR5_SetInterruptHandler *****************
 36120 ;; Defined at:
 36121 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 36122 ;; Parameters:    Size  Location     Type
 36123 ;;  InterruptHan    3   79[BANK1 ] PTR FTN()void 
 36124 ;;		 -> dimmingOnTimeCallback(1), TMR5_DefaultInterruptHandler(1), 
 36125 ;; Auto vars:     Size  Location     Type
 36126 ;;		None
 36127 ;; Return value:  Size  Location     Type
 36128 ;;                  1    wreg      void 
 36129 ;; Registers used:
 36130 ;;		wreg, status,2, status,0
 36131 ;; Tracked objects:
 36132 ;;		On entry : 0/0
 36133 ;;		On exit  : 0/0
 36134 ;;		Unchanged: 0/0
 36135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36136 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36139 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36140 ;;Total ram usage:        3 bytes
 36141 ;; Hardware stack levels used:    1
 36142 ;; Hardware stack levels required when called:   19
 36143 ;; This function calls:
 36144 ;;		Nothing
 36145 ;; This function is called by:
 36146 ;;		_TMR5_Initialize
 36147 ;;		_main
 36148 ;; This function uses a non-reentrant model
 36149 ;;
 36150                           
 36151                           	psect	text75
 36152  01BF40                     __ptext75:
 36153                           	opt stack 0
 36154  01BF40                     _TMR5_SetInterruptHandler:
 36155                           	opt stack 11
 36156                           
 36157                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 36158                           
 36159                           ;incstack = 0
 36160  01BF40  C14F  F2CE         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 36161  01BF44  C150  F2CF         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 36162  01BF48  C151  F2D0         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 36163  01BF4C  0012               	return		;funcret
 36164  01BF4E                     __end_of_TMR5_SetInterruptHandler:
 36165                           	opt stack 0
 36166                           tosu	equ	0xFFF
 36167                           tosh	equ	0xFFE
 36168                           tosl	equ	0xFFD
 36169                           pclath	equ	0xFFA
 36170                           tblptru	equ	0xFF8
 36171                           tblptrh	equ	0xFF7
 36172                           tblptrl	equ	0xFF6
 36173                           tablat	equ	0xFF5
 36174                           prodh	equ	0xFF4
 36175                           prodl	equ	0xFF3
 36176                           intcon	equ	0xFF2
 36177                           indf0	equ	0xFEF
 36178                           postinc0	equ	0xFEE
 36179                           fsr0h	equ	0xFEA
 36180                           fsr0l	equ	0xFE9
 36181                           wreg	equ	0xFE8
 36182                           indf1	equ	0xFE7
 36183                           postdec1	equ	0xFE5
 36184                           plusw1	equ	0xFE3
 36185                           fsr1h	equ	0xFE2
 36186                           fsr1l	equ	0xFE1
 36187                           indf2	equ	0xFDF
 36188                           postinc2	equ	0xFDE
 36189                           postdec2	equ	0xFDD
 36190                           plusw2	equ	0xFDB
 36191                           fsr2h	equ	0xFDA
 36192                           fsr2l	equ	0xFD9
 36193                           status	equ	0xFD8
 36194                           
 36195 ;; *************** function _TMR4_Initialize *****************
 36196 ;; Defined at:
 36197 ;;		line 64 in file "mcc_generated_files/tmr4.c"
 36198 ;; Parameters:    Size  Location     Type
 36199 ;;		None
 36200 ;; Auto vars:     Size  Location     Type
 36201 ;;		None
 36202 ;; Return value:  Size  Location     Type
 36203 ;;                  1    wreg      void 
 36204 ;; Registers used:
 36205 ;;		wreg, status,2, status,0, cstack
 36206 ;; Tracked objects:
 36207 ;;		On entry : 0/0
 36208 ;;		On exit  : 0/0
 36209 ;;		Unchanged: 0/0
 36210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36215 ;;Total ram usage:        0 bytes
 36216 ;; Hardware stack levels used:    1
 36217 ;; Hardware stack levels required when called:   20
 36218 ;; This function calls:
 36219 ;;		_TMR4_SetInterruptHandler
 36220 ;; This function is called by:
 36221 ;;		_SYSTEM_Initialize
 36222 ;; This function uses a non-reentrant model
 36223 ;;
 36224                           
 36225                           	psect	text76
 36226  01B99A                     __ptext76:
 36227                           	opt stack 0
 36228  01B99A                     _TMR4_Initialize:
 36229                           	opt stack 9
 36230                           
 36231                           ;tmr4.c: 69: T4CLKCON = 0x04;
 36232                           
 36233                           ;incstack = 0
 36234  01B99A  0E04               	movlw	4
 36235  01B99C  6EB9               	movwf	4025,c	;volatile
 36236                           
 36237                           ;tmr4.c: 72: T4HLT = 0xA0;
 36238  01B99E  0EA0               	movlw	160
 36239  01B9A0  6EB8               	movwf	4024,c	;volatile
 36240                           
 36241                           ;tmr4.c: 75: T4RST = 0x00;
 36242  01B9A2  0E00               	movlw	0
 36243  01B9A4  6EBA               	movwf	4026,c	;volatile
 36244                           
 36245                           ;tmr4.c: 78: T4PR = 0xE2;
 36246  01B9A6  0EE2               	movlw	226
 36247  01B9A8  6EB6               	movwf	4022,c	;volatile
 36248                           
 36249                           ;tmr4.c: 81: T4TMR = 0x00;
 36250  01B9AA  0E00               	movlw	0
 36251  01B9AC  6EB5               	movwf	4021,c	;volatile
 36252                           
 36253                           ;tmr4.c: 84: PIR5bits.TMR4IF = 0;
 36254  01B9AE  010E               	movlb	14	; () banked
 36255  01B9B0  9738               	bcf	56,3,b	;volatile
 36256                           
 36257                           ; BSR set to: 14
 36258                           ;tmr4.c: 87: PIE5bits.TMR4IE = 1;
 36259  01B9B2  872E               	bsf	46,3,b	;volatile
 36260                           
 36261                           ; BSR set to: 14
 36262                           ;tmr4.c: 90: TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandler);
 36263  01B9B4  0E32               	movlw	low _TMR4_DefaultInterruptHandler
 36264  01B9B6  0101               	movlb	1	; () banked
 36265  01B9B8  6F4F               	movwf	TMR4_SetInterruptHandler@InterruptHandler& (0+255),b
 36266  01B9BA  0EC0               	movlw	high _TMR4_DefaultInterruptHandler
 36267  01B9BC  6F50               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 36268  01B9BE  0E01               	movlw	low (_TMR4_DefaultInterruptHandler shr (0+16))
 36269  01B9C0  6F51               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 36270  01B9C2  ECA7  F0DF         	call	_TMR4_SetInterruptHandler	;wreg free
 36271                           
 36272                           ;tmr4.c: 93: T4CON = 0xFF;
 36273  01B9C6  68B7               	setf	4023,c	;volatile
 36274  01B9C8  0012               	return		;funcret
 36275  01B9CA                     __end_of_TMR4_Initialize:
 36276                           	opt stack 0
 36277                           tosu	equ	0xFFF
 36278                           tosh	equ	0xFFE
 36279                           tosl	equ	0xFFD
 36280                           pclath	equ	0xFFA
 36281                           tblptru	equ	0xFF8
 36282                           tblptrh	equ	0xFF7
 36283                           tblptrl	equ	0xFF6
 36284                           tablat	equ	0xFF5
 36285                           prodh	equ	0xFF4
 36286                           prodl	equ	0xFF3
 36287                           intcon	equ	0xFF2
 36288                           indf0	equ	0xFEF
 36289                           postinc0	equ	0xFEE
 36290                           fsr0h	equ	0xFEA
 36291                           fsr0l	equ	0xFE9
 36292                           wreg	equ	0xFE8
 36293                           indf1	equ	0xFE7
 36294                           postdec1	equ	0xFE5
 36295                           plusw1	equ	0xFE3
 36296                           fsr1h	equ	0xFE2
 36297                           fsr1l	equ	0xFE1
 36298                           indf2	equ	0xFDF
 36299                           postinc2	equ	0xFDE
 36300                           postdec2	equ	0xFDD
 36301                           plusw2	equ	0xFDB
 36302                           fsr2h	equ	0xFDA
 36303                           fsr2l	equ	0xFD9
 36304                           status	equ	0xFD8
 36305                           
 36306 ;; *************** function _TMR4_SetInterruptHandler *****************
 36307 ;; Defined at:
 36308 ;;		line 193 in file "mcc_generated_files/tmr4.c"
 36309 ;; Parameters:    Size  Location     Type
 36310 ;;  InterruptHan    3   79[BANK1 ] PTR FTN()void 
 36311 ;;		 -> writeEnergyToEEPROMCallback(1), TMR4_DefaultInterruptHandler(1), 
 36312 ;; Auto vars:     Size  Location     Type
 36313 ;;		None
 36314 ;; Return value:  Size  Location     Type
 36315 ;;                  1    wreg      void 
 36316 ;; Registers used:
 36317 ;;		wreg, status,2, status,0
 36318 ;; Tracked objects:
 36319 ;;		On entry : 0/0
 36320 ;;		On exit  : 0/0
 36321 ;;		Unchanged: 0/0
 36322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36323 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36326 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36327 ;;Total ram usage:        3 bytes
 36328 ;; Hardware stack levels used:    1
 36329 ;; Hardware stack levels required when called:   19
 36330 ;; This function calls:
 36331 ;;		Nothing
 36332 ;; This function is called by:
 36333 ;;		_TMR4_Initialize
 36334 ;;		_main
 36335 ;; This function uses a non-reentrant model
 36336 ;;
 36337                           
 36338                           	psect	text77
 36339  01BF4E                     __ptext77:
 36340                           	opt stack 0
 36341  01BF4E                     _TMR4_SetInterruptHandler:
 36342                           	opt stack 11
 36343                           
 36344                           ;tmr4.c: 194: TMR4_InterruptHandler = InterruptHandler;
 36345                           
 36346                           ;incstack = 0
 36347  01BF4E  C14F  F2C8         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 36348  01BF52  C150  F2C9         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 36349  01BF56  C151  F2CA         	movff	TMR4_SetInterruptHandler@InterruptHandler+2,_TMR4_InterruptHandler+2
 36350  01BF5A  0012               	return		;funcret
 36351  01BF5C                     __end_of_TMR4_SetInterruptHandler:
 36352                           	opt stack 0
 36353                           tosu	equ	0xFFF
 36354                           tosh	equ	0xFFE
 36355                           tosl	equ	0xFFD
 36356                           pclath	equ	0xFFA
 36357                           tblptru	equ	0xFF8
 36358                           tblptrh	equ	0xFF7
 36359                           tblptrl	equ	0xFF6
 36360                           tablat	equ	0xFF5
 36361                           prodh	equ	0xFF4
 36362                           prodl	equ	0xFF3
 36363                           intcon	equ	0xFF2
 36364                           indf0	equ	0xFEF
 36365                           postinc0	equ	0xFEE
 36366                           fsr0h	equ	0xFEA
 36367                           fsr0l	equ	0xFE9
 36368                           wreg	equ	0xFE8
 36369                           indf1	equ	0xFE7
 36370                           postdec1	equ	0xFE5
 36371                           plusw1	equ	0xFE3
 36372                           fsr1h	equ	0xFE2
 36373                           fsr1l	equ	0xFE1
 36374                           indf2	equ	0xFDF
 36375                           postinc2	equ	0xFDE
 36376                           postdec2	equ	0xFDD
 36377                           plusw2	equ	0xFDB
 36378                           fsr2h	equ	0xFDA
 36379                           fsr2l	equ	0xFD9
 36380                           status	equ	0xFD8
 36381                           
 36382 ;; *************** function _TMR2_Initialize *****************
 36383 ;; Defined at:
 36384 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 36385 ;; Parameters:    Size  Location     Type
 36386 ;;		None
 36387 ;; Auto vars:     Size  Location     Type
 36388 ;;		None
 36389 ;; Return value:  Size  Location     Type
 36390 ;;                  1    wreg      void 
 36391 ;; Registers used:
 36392 ;;		wreg, status,2, status,0, cstack
 36393 ;; Tracked objects:
 36394 ;;		On entry : 0/0
 36395 ;;		On exit  : 0/0
 36396 ;;		Unchanged: 0/0
 36397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36402 ;;Total ram usage:        0 bytes
 36403 ;; Hardware stack levels used:    1
 36404 ;; Hardware stack levels required when called:   20
 36405 ;; This function calls:
 36406 ;;		_TMR2_SetInterruptHandler
 36407 ;; This function is called by:
 36408 ;;		_SYSTEM_Initialize
 36409 ;; This function uses a non-reentrant model
 36410 ;;
 36411                           
 36412                           	psect	text78
 36413  01B9CA                     __ptext78:
 36414                           	opt stack 0
 36415  01B9CA                     _TMR2_Initialize:
 36416                           	opt stack 9
 36417                           
 36418                           ;tmr2.c: 69: T2CLKCON = 0x03;
 36419                           
 36420                           ;incstack = 0
 36421  01B9CA  0E03               	movlw	3
 36422  01B9CC  6EBF               	movwf	4031,c	;volatile
 36423                           
 36424                           ;tmr2.c: 72: T2HLT = 0x20;
 36425  01B9CE  0E20               	movlw	32
 36426  01B9D0  6EBE               	movwf	4030,c	;volatile
 36427                           
 36428                           ;tmr2.c: 75: T2RST = 0x00;
 36429  01B9D2  0E00               	movlw	0
 36430  01B9D4  6EC0               	movwf	4032,c	;volatile
 36431                           
 36432                           ;tmr2.c: 78: T2PR = 0xC2;
 36433  01B9D6  0EC2               	movlw	194
 36434  01B9D8  6EBC               	movwf	4028,c	;volatile
 36435                           
 36436                           ;tmr2.c: 81: T2TMR = 0x00;
 36437  01B9DA  0E00               	movlw	0
 36438  01B9DC  6EBB               	movwf	4027,c	;volatile
 36439                           
 36440                           ;tmr2.c: 84: PIR5bits.TMR2IF = 0;
 36441  01B9DE  010E               	movlb	14	; () banked
 36442  01B9E0  9338               	bcf	56,1,b	;volatile
 36443                           
 36444                           ; BSR set to: 14
 36445                           ;tmr2.c: 87: PIE5bits.TMR2IE = 1;
 36446  01B9E2  832E               	bsf	46,1,b	;volatile
 36447                           
 36448                           ; BSR set to: 14
 36449                           ;tmr2.c: 90: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 36450  01B9E4  0E2E               	movlw	low _TMR2_DefaultInterruptHandler
 36451  01B9E6  0101               	movlb	1	; () banked
 36452  01B9E8  6F4F               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
 36453  01B9EA  0EC0               	movlw	high _TMR2_DefaultInterruptHandler
 36454  01B9EC  6F50               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 36455  01B9EE  0E01               	movlw	low (_TMR2_DefaultInterruptHandler shr (0+16))
 36456  01B9F0  6F51               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 36457  01B9F2  ECAE  F0DF         	call	_TMR2_SetInterruptHandler	;wreg free
 36458                           
 36459                           ;tmr2.c: 93: T2CON = 0xFF;
 36460  01B9F6  68BD               	setf	4029,c	;volatile
 36461  01B9F8  0012               	return		;funcret
 36462  01B9FA                     __end_of_TMR2_Initialize:
 36463                           	opt stack 0
 36464                           tosu	equ	0xFFF
 36465                           tosh	equ	0xFFE
 36466                           tosl	equ	0xFFD
 36467                           pclath	equ	0xFFA
 36468                           tblptru	equ	0xFF8
 36469                           tblptrh	equ	0xFF7
 36470                           tblptrl	equ	0xFF6
 36471                           tablat	equ	0xFF5
 36472                           prodh	equ	0xFF4
 36473                           prodl	equ	0xFF3
 36474                           intcon	equ	0xFF2
 36475                           indf0	equ	0xFEF
 36476                           postinc0	equ	0xFEE
 36477                           fsr0h	equ	0xFEA
 36478                           fsr0l	equ	0xFE9
 36479                           wreg	equ	0xFE8
 36480                           indf1	equ	0xFE7
 36481                           postdec1	equ	0xFE5
 36482                           plusw1	equ	0xFE3
 36483                           fsr1h	equ	0xFE2
 36484                           fsr1l	equ	0xFE1
 36485                           indf2	equ	0xFDF
 36486                           postinc2	equ	0xFDE
 36487                           postdec2	equ	0xFDD
 36488                           plusw2	equ	0xFDB
 36489                           fsr2h	equ	0xFDA
 36490                           fsr2l	equ	0xFD9
 36491                           status	equ	0xFD8
 36492                           
 36493 ;; *************** function _TMR2_SetInterruptHandler *****************
 36494 ;; Defined at:
 36495 ;;		line 193 in file "mcc_generated_files/tmr2.c"
 36496 ;; Parameters:    Size  Location     Type
 36497 ;;  InterruptHan    3   79[BANK1 ] PTR FTN()void 
 36498 ;;		 -> TMR2_DefaultInterruptHandler(1), OLED_updateCallback(1), 
 36499 ;; Auto vars:     Size  Location     Type
 36500 ;;		None
 36501 ;; Return value:  Size  Location     Type
 36502 ;;                  1    wreg      void 
 36503 ;; Registers used:
 36504 ;;		wreg, status,2, status,0
 36505 ;; Tracked objects:
 36506 ;;		On entry : 0/0
 36507 ;;		On exit  : 0/0
 36508 ;;		Unchanged: 0/0
 36509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36510 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36513 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36514 ;;Total ram usage:        3 bytes
 36515 ;; Hardware stack levels used:    1
 36516 ;; Hardware stack levels required when called:   19
 36517 ;; This function calls:
 36518 ;;		Nothing
 36519 ;; This function is called by:
 36520 ;;		_main
 36521 ;;		_TMR2_Initialize
 36522 ;; This function uses a non-reentrant model
 36523 ;;
 36524                           
 36525                           	psect	text79
 36526  01BF5C                     __ptext79:
 36527                           	opt stack 0
 36528  01BF5C                     _TMR2_SetInterruptHandler:
 36529                           	opt stack 11
 36530                           
 36531                           ;tmr2.c: 194: TMR2_InterruptHandler = InterruptHandler;
 36532                           
 36533                           ;incstack = 0
 36534  01BF5C  C14F  F2C5         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 36535  01BF60  C150  F2C6         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 36536  01BF64  C151  F2C7         	movff	TMR2_SetInterruptHandler@InterruptHandler+2,_TMR2_InterruptHandler+2
 36537  01BF68  0012               	return		;funcret
 36538  01BF6A                     __end_of_TMR2_SetInterruptHandler:
 36539                           	opt stack 0
 36540                           tosu	equ	0xFFF
 36541                           tosh	equ	0xFFE
 36542                           tosl	equ	0xFFD
 36543                           pclath	equ	0xFFA
 36544                           tblptru	equ	0xFF8
 36545                           tblptrh	equ	0xFF7
 36546                           tblptrl	equ	0xFF6
 36547                           tablat	equ	0xFF5
 36548                           prodh	equ	0xFF4
 36549                           prodl	equ	0xFF3
 36550                           intcon	equ	0xFF2
 36551                           indf0	equ	0xFEF
 36552                           postinc0	equ	0xFEE
 36553                           fsr0h	equ	0xFEA
 36554                           fsr0l	equ	0xFE9
 36555                           wreg	equ	0xFE8
 36556                           indf1	equ	0xFE7
 36557                           postdec1	equ	0xFE5
 36558                           plusw1	equ	0xFE3
 36559                           fsr1h	equ	0xFE2
 36560                           fsr1l	equ	0xFE1
 36561                           indf2	equ	0xFDF
 36562                           postinc2	equ	0xFDE
 36563                           postdec2	equ	0xFDD
 36564                           plusw2	equ	0xFDB
 36565                           fsr2h	equ	0xFDA
 36566                           fsr2l	equ	0xFD9
 36567                           status	equ	0xFD8
 36568                           
 36569 ;; *************** function _PMD_Initialize *****************
 36570 ;; Defined at:
 36571 ;;		line 87 in file "mcc_generated_files/mcc.c"
 36572 ;; Parameters:    Size  Location     Type
 36573 ;;		None
 36574 ;; Auto vars:     Size  Location     Type
 36575 ;;		None
 36576 ;; Return value:  Size  Location     Type
 36577 ;;                  1    wreg      void 
 36578 ;; Registers used:
 36579 ;;		wreg, status,2
 36580 ;; Tracked objects:
 36581 ;;		On entry : 0/0
 36582 ;;		On exit  : 0/0
 36583 ;;		Unchanged: 0/0
 36584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36589 ;;Total ram usage:        0 bytes
 36590 ;; Hardware stack levels used:    1
 36591 ;; Hardware stack levels required when called:   19
 36592 ;; This function calls:
 36593 ;;		Nothing
 36594 ;; This function is called by:
 36595 ;;		_SYSTEM_Initialize
 36596 ;; This function uses a non-reentrant model
 36597 ;;
 36598                           
 36599                           	psect	text80
 36600  01BD4C                     __ptext80:
 36601                           	opt stack 0
 36602  01BD4C                     _PMD_Initialize:
 36603                           	opt stack 10
 36604                           
 36605                           ;mcc.c: 90: PMD0 = 0x1A;
 36606                           
 36607                           ;incstack = 0
 36608  01BD4C  0E1A               	movlw	26
 36609  01BD4E  010E               	movlb	14	; () banked
 36610  01BD50  6F4C               	movwf	76,b	;volatile
 36611                           
 36612                           ;mcc.c: 92: PMD1 = 0x00;
 36613  01BD52  0E00               	movlw	0
 36614  01BD54  6F4D               	movwf	77,b	;volatile
 36615                           
 36616                           ;mcc.c: 94: PMD2 = 0x2E;
 36617  01BD56  0E2E               	movlw	46
 36618  01BD58  6F4E               	movwf	78,b	;volatile
 36619                           
 36620                           ;mcc.c: 96: PMD3 = 0x4F;
 36621  01BD5A  0E4F               	movlw	79
 36622  01BD5C  6F4F               	movwf	79,b	;volatile
 36623                           
 36624                           ;mcc.c: 98: PMD4 = 0x7F;
 36625  01BD5E  0E7F               	movlw	127
 36626  01BD60  6F50               	movwf	80,b	;volatile
 36627                           
 36628                           ;mcc.c: 100: PMD5 = 0x74;
 36629  01BD62  0E74               	movlw	116
 36630  01BD64  6F51               	movwf	81,b	;volatile
 36631                           
 36632                           ; BSR set to: 14
 36633  01BD66  0012               	return		;funcret
 36634  01BD68                     __end_of_PMD_Initialize:
 36635                           	opt stack 0
 36636                           tosu	equ	0xFFF
 36637                           tosh	equ	0xFFE
 36638                           tosl	equ	0xFFD
 36639                           pclath	equ	0xFFA
 36640                           tblptru	equ	0xFF8
 36641                           tblptrh	equ	0xFF7
 36642                           tblptrl	equ	0xFF6
 36643                           tablat	equ	0xFF5
 36644                           prodh	equ	0xFF4
 36645                           prodl	equ	0xFF3
 36646                           intcon	equ	0xFF2
 36647                           indf0	equ	0xFEF
 36648                           postinc0	equ	0xFEE
 36649                           fsr0h	equ	0xFEA
 36650                           fsr0l	equ	0xFE9
 36651                           wreg	equ	0xFE8
 36652                           indf1	equ	0xFE7
 36653                           postdec1	equ	0xFE5
 36654                           plusw1	equ	0xFE3
 36655                           fsr1h	equ	0xFE2
 36656                           fsr1l	equ	0xFE1
 36657                           indf2	equ	0xFDF
 36658                           postinc2	equ	0xFDE
 36659                           postdec2	equ	0xFDD
 36660                           plusw2	equ	0xFDB
 36661                           fsr2h	equ	0xFDA
 36662                           fsr2l	equ	0xFD9
 36663                           status	equ	0xFD8
 36664                           
 36665 ;; *************** function _PIN_MANAGER_Initialize *****************
 36666 ;; Defined at:
 36667 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 36668 ;; Parameters:    Size  Location     Type
 36669 ;;		None
 36670 ;; Auto vars:     Size  Location     Type
 36671 ;;		None
 36672 ;; Return value:  Size  Location     Type
 36673 ;;                  1    wreg      void 
 36674 ;; Registers used:
 36675 ;;		wreg, status,2
 36676 ;; Tracked objects:
 36677 ;;		On entry : 0/0
 36678 ;;		On exit  : 0/0
 36679 ;;		Unchanged: 0/0
 36680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36685 ;;Total ram usage:        0 bytes
 36686 ;; Hardware stack levels used:    1
 36687 ;; Hardware stack levels required when called:   19
 36688 ;; This function calls:
 36689 ;;		Nothing
 36690 ;; This function is called by:
 36691 ;;		_SYSTEM_Initialize
 36692 ;; This function uses a non-reentrant model
 36693 ;;
 36694                           
 36695                           	psect	text81
 36696  019B5E                     __ptext81:
 36697                           	opt stack 0
 36698  019B5E                     _PIN_MANAGER_Initialize:
 36699                           	opt stack 10
 36700                           
 36701                           ;pin_manager.c: 62: LATE = 0x00;
 36702                           
 36703                           ; BSR set to: 14
 36704                           ;incstack = 0
 36705  019B5E  0E00               	movlw	0
 36706  019B60  6E7D               	movwf	3965,c	;volatile
 36707                           
 36708                           ;pin_manager.c: 63: LATD = 0x00;
 36709  019B62  0E00               	movlw	0
 36710  019B64  6E7C               	movwf	3964,c	;volatile
 36711                           
 36712                           ;pin_manager.c: 64: LATA = 0x00;
 36713  019B66  0E00               	movlw	0
 36714  019B68  6E79               	movwf	3961,c	;volatile
 36715                           
 36716                           ;pin_manager.c: 65: LATF = 0x00;
 36717  019B6A  0E00               	movlw	0
 36718  019B6C  6E7E               	movwf	3966,c	;volatile
 36719                           
 36720                           ;pin_manager.c: 66: LATB = 0x00;
 36721  019B6E  0E00               	movlw	0
 36722  019B70  6E7A               	movwf	3962,c	;volatile
 36723                           
 36724                           ;pin_manager.c: 67: LATG = 0x00;
 36725  019B72  0E00               	movlw	0
 36726  019B74  6E7F               	movwf	3967,c	;volatile
 36727                           
 36728                           ;pin_manager.c: 68: LATC = 0x00;
 36729  019B76  0E00               	movlw	0
 36730  019B78  6E7B               	movwf	3963,c	;volatile
 36731                           
 36732                           ;pin_manager.c: 69: LATH = 0x00;
 36733  019B7A  0E00               	movlw	0
 36734  019B7C  6E80               	movwf	3968,c	;volatile
 36735                           
 36736                           ;pin_manager.c: 74: TRISE = 0x04;
 36737  019B7E  0E04               	movlw	4
 36738  019B80  6E85               	movwf	3973,c	;volatile
 36739                           
 36740                           ;pin_manager.c: 75: TRISF = 0x00;
 36741  019B82  0E00               	movlw	0
 36742  019B84  6E86               	movwf	3974,c	;volatile
 36743                           
 36744                           ;pin_manager.c: 76: TRISA = 0xBD;
 36745  019B86  0EBD               	movlw	189
 36746  019B88  6E81               	movwf	3969,c	;volatile
 36747                           
 36748                           ;pin_manager.c: 77: TRISG = 0x40;
 36749  019B8A  0E40               	movlw	64
 36750  019B8C  6E87               	movwf	3975,c	;volatile
 36751                           
 36752                           ;pin_manager.c: 78: TRISB = 0x00;
 36753  019B8E  0E00               	movlw	0
 36754  019B90  6E82               	movwf	3970,c	;volatile
 36755                           
 36756                           ;pin_manager.c: 79: TRISH = 0x00;
 36757  019B92  0E00               	movlw	0
 36758  019B94  6E88               	movwf	3976,c	;volatile
 36759                           
 36760                           ;pin_manager.c: 80: TRISC = 0xC0;
 36761  019B96  0EC0               	movlw	192
 36762  019B98  6E83               	movwf	3971,c	;volatile
 36763                           
 36764                           ;pin_manager.c: 81: TRISD = 0x00;
 36765  019B9A  0E00               	movlw	0
 36766  019B9C  6E84               	movwf	3972,c	;volatile
 36767                           
 36768                           ;pin_manager.c: 86: ANSELD = 0x00;
 36769  019B9E  0E00               	movlw	0
 36770  019BA0  010E               	movlb	14	; () banked
 36771  019BA2  6FA7               	movwf	167,b	;volatile
 36772                           
 36773                           ;pin_manager.c: 87: ANSELB = 0x00;
 36774  019BA4  0E00               	movlw	0
 36775  019BA6  6F9A               	movwf	154,b	;volatile
 36776                           
 36777                           ;pin_manager.c: 88: ANSELE = 0x04;
 36778  019BA8  0E04               	movlw	4
 36779  019BAA  6FAF               	movwf	175,b	;volatile
 36780                           
 36781                           ;pin_manager.c: 89: ANSELG = 0x20;
 36782  019BAC  0E20               	movlw	32
 36783  019BAE  6FBC               	movwf	188,b	;volatile
 36784                           
 36785                           ;pin_manager.c: 90: ANSELF = 0x00;
 36786  019BB0  0E00               	movlw	0
 36787  019BB2  6FB4               	movwf	180,b	;volatile
 36788                           
 36789                           ;pin_manager.c: 91: ANSELA = 0x9D;
 36790  019BB4  0E9D               	movlw	157
 36791  019BB6  6F92               	movwf	146,b	;volatile
 36792                           
 36793                           ;pin_manager.c: 96: WPUD = 0x00;
 36794  019BB8  0E00               	movlw	0
 36795  019BBA  6FA6               	movwf	166,b	;volatile
 36796                           
 36797                           ;pin_manager.c: 97: WPUF = 0x00;
 36798  019BBC  0E00               	movlw	0
 36799  019BBE  6FB3               	movwf	179,b	;volatile
 36800                           
 36801                           ;pin_manager.c: 98: WPUE = 0x00;
 36802  019BC0  0E00               	movlw	0
 36803  019BC2  6FAE               	movwf	174,b	;volatile
 36804                           
 36805                           ;pin_manager.c: 99: WPUB = 0x00;
 36806  019BC4  0E00               	movlw	0
 36807  019BC6  6F99               	movwf	153,b	;volatile
 36808                           
 36809                           ;pin_manager.c: 100: WPUG = 0x00;
 36810  019BC8  0E00               	movlw	0
 36811  019BCA  6FBB               	movwf	187,b	;volatile
 36812                           
 36813                           ;pin_manager.c: 101: WPUA = 0x00;
 36814  019BCC  0E00               	movlw	0
 36815  019BCE  6F91               	movwf	145,b	;volatile
 36816                           
 36817                           ;pin_manager.c: 102: WPUC = 0x00;
 36818  019BD0  0E00               	movlw	0
 36819  019BD2  6FA1               	movwf	161,b	;volatile
 36820                           
 36821                           ;pin_manager.c: 103: WPUH = 0x00;
 36822  019BD4  0E00               	movlw	0
 36823  019BD6  6FC0               	movwf	192,b	;volatile
 36824                           
 36825                           ;pin_manager.c: 108: ODCONE = 0x00;
 36826  019BD8  0E00               	movlw	0
 36827  019BDA  6FAD               	movwf	173,b	;volatile
 36828                           
 36829                           ;pin_manager.c: 109: ODCONF = 0x01;
 36830  019BDC  0E01               	movlw	1
 36831  019BDE  6FB2               	movwf	178,b	;volatile
 36832                           
 36833                           ;pin_manager.c: 110: ODCONA = 0x00;
 36834  019BE0  0E00               	movlw	0
 36835  019BE2  6F90               	movwf	144,b	;volatile
 36836                           
 36837                           ;pin_manager.c: 111: ODCONG = 0x00;
 36838  019BE4  0E00               	movlw	0
 36839  019BE6  6FBA               	movwf	186,b	;volatile
 36840                           
 36841                           ;pin_manager.c: 112: ODCONB = 0x00;
 36842  019BE8  0E00               	movlw	0
 36843  019BEA  6F98               	movwf	152,b	;volatile
 36844                           
 36845                           ;pin_manager.c: 113: ODCONH = 0x00;
 36846  019BEC  0E00               	movlw	0
 36847  019BEE  6FBF               	movwf	191,b	;volatile
 36848                           
 36849                           ;pin_manager.c: 114: ODCONC = 0x00;
 36850  019BF0  0E00               	movlw	0
 36851  019BF2  6FA0               	movwf	160,b	;volatile
 36852                           
 36853                           ;pin_manager.c: 115: ODCOND = 0x00;
 36854  019BF4  0E00               	movlw	0
 36855  019BF6  6FA5               	movwf	165,b	;volatile
 36856                           
 36857                           ; BSR set to: 14
 36858                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 36859  019BF8  698F               	setf	143,b	;volatile
 36860                           
 36861                           ; BSR set to: 14
 36862                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 36863  019BFA  6997               	setf	151,b	;volatile
 36864                           
 36865                           ; BSR set to: 14
 36866                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 36867  019BFC  699F               	setf	159,b	;volatile
 36868                           
 36869                           ; BSR set to: 14
 36870                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 36871  019BFE  69A4               	setf	164,b	;volatile
 36872                           
 36873                           ; BSR set to: 14
 36874                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 36875  019C00  69AC               	setf	172,b	;volatile
 36876                           
 36877                           ; BSR set to: 14
 36878                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 36879  019C02  69B1               	setf	177,b	;volatile
 36880                           
 36881                           ; BSR set to: 14
 36882                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 36883  019C04  69B9               	setf	185,b	;volatile
 36884                           
 36885                           ; BSR set to: 14
 36886                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 36887  019C06  69BE               	setf	190,b	;volatile
 36888                           
 36889                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 36890  019C08  0E0E               	movlw	14
 36891  019C0A  6F89               	movwf	137,b	;volatile
 36892                           
 36893                           ;pin_manager.c: 137: SSP1CLKPPS = 0x17;
 36894  019C0C  0E17               	movlw	23
 36895  019C0E  6F19               	movwf	25,b	;volatile
 36896                           
 36897                           ;pin_manager.c: 138: INT0PPS = 0x05;
 36898  019C10  0E05               	movlw	5
 36899  019C12  010D               	movlb	13	; () banked
 36900  019C14  6FF0               	movwf	240,b	;volatile
 36901                           
 36902                           ;pin_manager.c: 139: RC6PPS = 0x1A;
 36903  019C16  0E1A               	movlw	26
 36904  019C18  010E               	movlb	14	; () banked
 36905  019C1A  6F68               	movwf	104,b	;volatile
 36906                           
 36907                           ;pin_manager.c: 140: RX2PPS = 0x36;
 36908  019C1C  0E36               	movlw	54
 36909  019C1E  6F11               	movwf	17,b	;volatile
 36910                           
 36911                           ;pin_manager.c: 141: RC7PPS = 0x19;
 36912  019C20  0E19               	movlw	25
 36913  019C22  6F69               	movwf	105,b	;volatile
 36914                           
 36915                           ;pin_manager.c: 142: SSP1DATPPS = 0x16;
 36916  019C24  0E16               	movlw	22
 36917  019C26  6F1A               	movwf	26,b	;volatile
 36918                           
 36919                           ; BSR set to: 14
 36920  019C28  0012               	return		;funcret
 36921  019C2A                     __end_of_PIN_MANAGER_Initialize:
 36922                           	opt stack 0
 36923                           tosu	equ	0xFFF
 36924                           tosh	equ	0xFFE
 36925                           tosl	equ	0xFFD
 36926                           pclath	equ	0xFFA
 36927                           tblptru	equ	0xFF8
 36928                           tblptrh	equ	0xFF7
 36929                           tblptrl	equ	0xFF6
 36930                           tablat	equ	0xFF5
 36931                           prodh	equ	0xFF4
 36932                           prodl	equ	0xFF3
 36933                           intcon	equ	0xFF2
 36934                           indf0	equ	0xFEF
 36935                           postinc0	equ	0xFEE
 36936                           fsr0h	equ	0xFEA
 36937                           fsr0l	equ	0xFE9
 36938                           wreg	equ	0xFE8
 36939                           indf1	equ	0xFE7
 36940                           postdec1	equ	0xFE5
 36941                           plusw1	equ	0xFE3
 36942                           fsr1h	equ	0xFE2
 36943                           fsr1l	equ	0xFE1
 36944                           indf2	equ	0xFDF
 36945                           postinc2	equ	0xFDE
 36946                           postdec2	equ	0xFDD
 36947                           plusw2	equ	0xFDB
 36948                           fsr2h	equ	0xFDA
 36949                           fsr2l	equ	0xFD9
 36950                           status	equ	0xFD8
 36951                           
 36952 ;; *************** function _OSCILLATOR_Initialize *****************
 36953 ;; Defined at:
 36954 ;;		line 69 in file "mcc_generated_files/mcc.c"
 36955 ;; Parameters:    Size  Location     Type
 36956 ;;		None
 36957 ;; Auto vars:     Size  Location     Type
 36958 ;;		None
 36959 ;; Return value:  Size  Location     Type
 36960 ;;                  1    wreg      void 
 36961 ;; Registers used:
 36962 ;;		wreg, status,2
 36963 ;; Tracked objects:
 36964 ;;		On entry : 0/0
 36965 ;;		On exit  : 0/0
 36966 ;;		Unchanged: 0/0
 36967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 36968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36972 ;;Total ram usage:        0 bytes
 36973 ;; Hardware stack levels used:    1
 36974 ;; Hardware stack levels required when called:   19
 36975 ;; This function calls:
 36976 ;;		Nothing
 36977 ;; This function is called by:
 36978 ;;		_SYSTEM_Initialize
 36979 ;; This function uses a non-reentrant model
 36980 ;;
 36981                           
 36982                           	psect	text82
 36983  01BD68                     __ptext82:
 36984                           	opt stack 0
 36985  01BD68                     _OSCILLATOR_Initialize:
 36986                           	opt stack 10
 36987                           
 36988                           ;mcc.c: 72: OSCCON1 = 0x20;
 36989                           
 36990                           ; BSR set to: 14
 36991                           ;incstack = 0
 36992  01BD68  0E20               	movlw	32
 36993  01BD6A  010E               	movlb	14	; () banked
 36994  01BD6C  6F43               	movwf	67,b	;volatile
 36995                           
 36996                           ;mcc.c: 74: OSCCON3 = 0x00;
 36997  01BD6E  0E00               	movlw	0
 36998  01BD70  6F45               	movwf	69,b	;volatile
 36999                           
 37000                           ;mcc.c: 76: OSCEN = 0x00;
 37001  01BD72  0E00               	movlw	0
 37002  01BD74  6F47               	movwf	71,b	;volatile
 37003                           
 37004                           ;mcc.c: 78: OSCFRQ = 0x02;
 37005  01BD76  0E02               	movlw	2
 37006  01BD78  6F49               	movwf	73,b	;volatile
 37007                           
 37008                           ;mcc.c: 80: OSCTUNE = 0x00;
 37009  01BD7A  0E00               	movlw	0
 37010  01BD7C  6F48               	movwf	72,b	;volatile
 37011  01BD7E                     
 37012                           ; BSR set to: 14
 37013                           
 37014                           ; BSR set to: 14
 37015                           ;mcc.c: 83: {
 37016  01BD7E  B146               	btfsc	70,0,b	;volatile
 37017  01BD80  0012               	return	
 37018  01BD82  D7FD               	goto	l67
 37019  01BD84                     __end_of_OSCILLATOR_Initialize:
 37020                           	opt stack 0
 37021                           tosu	equ	0xFFF
 37022                           tosh	equ	0xFFE
 37023                           tosl	equ	0xFFD
 37024                           pclath	equ	0xFFA
 37025                           tblptru	equ	0xFF8
 37026                           tblptrh	equ	0xFF7
 37027                           tblptrl	equ	0xFF6
 37028                           tablat	equ	0xFF5
 37029                           prodh	equ	0xFF4
 37030                           prodl	equ	0xFF3
 37031                           intcon	equ	0xFF2
 37032                           indf0	equ	0xFEF
 37033                           postinc0	equ	0xFEE
 37034                           fsr0h	equ	0xFEA
 37035                           fsr0l	equ	0xFE9
 37036                           wreg	equ	0xFE8
 37037                           indf1	equ	0xFE7
 37038                           postdec1	equ	0xFE5
 37039                           plusw1	equ	0xFE3
 37040                           fsr1h	equ	0xFE2
 37041                           fsr1l	equ	0xFE1
 37042                           indf2	equ	0xFDF
 37043                           postinc2	equ	0xFDE
 37044                           postdec2	equ	0xFDD
 37045                           plusw2	equ	0xFDB
 37046                           fsr2h	equ	0xFDA
 37047                           fsr2l	equ	0xFD9
 37048                           status	equ	0xFD8
 37049                           
 37050 ;; *************** function _INTERRUPT_Initialize *****************
 37051 ;; Defined at:
 37052 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 37053 ;; Parameters:    Size  Location     Type
 37054 ;;		None
 37055 ;; Auto vars:     Size  Location     Type
 37056 ;;		None
 37057 ;; Return value:  Size  Location     Type
 37058 ;;                  1    wreg      void 
 37059 ;; Registers used:
 37060 ;;		None
 37061 ;; Tracked objects:
 37062 ;;		On entry : 0/0
 37063 ;;		On exit  : 0/0
 37064 ;;		Unchanged: 0/0
 37065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37070 ;;Total ram usage:        0 bytes
 37071 ;; Hardware stack levels used:    1
 37072 ;; Hardware stack levels required when called:   19
 37073 ;; This function calls:
 37074 ;;		Nothing
 37075 ;; This function is called by:
 37076 ;;		_SYSTEM_Initialize
 37077 ;; This function uses a non-reentrant model
 37078 ;;
 37079                           
 37080                           	psect	text83
 37081  01BCF2                     __ptext83:
 37082                           	opt stack 0
 37083  01BCF2                     _INTERRUPT_Initialize:
 37084                           	opt stack 10
 37085                           
 37086                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 37087                           
 37088                           ; BSR set to: 14
 37089                           ;incstack = 0
 37090  01BCF2  8AF2               	bsf	intcon,5,c	;volatile
 37091                           
 37092                           ;interrupt_manager.c: 60: IPR3bits.BCL1IP = 1;
 37093  01BCF4  010E               	movlb	14	; () banked
 37094  01BCF6  8322               	bsf	34,1,b	;volatile
 37095                           
 37096                           ;interrupt_manager.c: 63: IPR3bits.SSP1IP = 1;
 37097  01BCF8  8122               	bsf	34,0,b	;volatile
 37098                           
 37099                           ;interrupt_manager.c: 66: IPR5bits.TMR4IP = 1;
 37100  01BCFA  8724               	bsf	36,3,b	;volatile
 37101                           
 37102                           ;interrupt_manager.c: 69: IPR2bits.HLVDIP = 1;
 37103  01BCFC  8F21               	bsf	33,7,b	;volatile
 37104                           
 37105                           ;interrupt_manager.c: 72: IPR0bits.INT0IP = 1;
 37106  01BCFE  811F               	bsf	31,0,b	;volatile
 37107                           
 37108                           ;interrupt_manager.c: 75: IPR3bits.RC2IP = 1;
 37109  01BD00  8F22               	bsf	34,7,b	;volatile
 37110                           
 37111                           ;interrupt_manager.c: 78: IPR5bits.TMR5IP = 1;
 37112  01BD02  8924               	bsf	36,4,b	;volatile
 37113                           
 37114                           ;interrupt_manager.c: 81: IPR1bits.ADTIP = 1;
 37115  01BD04  8320               	bsf	32,1,b	;volatile
 37116                           
 37117                           ;interrupt_manager.c: 85: IPR5bits.TMR6IP = 0;
 37118  01BD06  9B24               	bcf	36,5,b	;volatile
 37119                           
 37120                           ;interrupt_manager.c: 88: IPR3bits.TX2IP = 0;
 37121  01BD08  9D22               	bcf	34,6,b	;volatile
 37122                           
 37123                           ;interrupt_manager.c: 91: IPR5bits.TMR7IP = 0;
 37124  01BD0A  9D24               	bcf	36,6,b	;volatile
 37125                           
 37126                           ;interrupt_manager.c: 94: IPR5bits.TMR2IP = 0;
 37127  01BD0C  9324               	bcf	36,1,b	;volatile
 37128                           
 37129                           ; BSR set to: 14
 37130  01BD0E  0012               	return		;funcret
 37131  01BD10                     __end_of_INTERRUPT_Initialize:
 37132                           	opt stack 0
 37133                           tosu	equ	0xFFF
 37134                           tosh	equ	0xFFE
 37135                           tosl	equ	0xFFD
 37136                           pclath	equ	0xFFA
 37137                           tblptru	equ	0xFF8
 37138                           tblptrh	equ	0xFF7
 37139                           tblptrl	equ	0xFF6
 37140                           tablat	equ	0xFF5
 37141                           prodh	equ	0xFF4
 37142                           prodl	equ	0xFF3
 37143                           intcon	equ	0xFF2
 37144                           indf0	equ	0xFEF
 37145                           postinc0	equ	0xFEE
 37146                           fsr0h	equ	0xFEA
 37147                           fsr0l	equ	0xFE9
 37148                           wreg	equ	0xFE8
 37149                           indf1	equ	0xFE7
 37150                           postdec1	equ	0xFE5
 37151                           plusw1	equ	0xFE3
 37152                           fsr1h	equ	0xFE2
 37153                           fsr1l	equ	0xFE1
 37154                           indf2	equ	0xFDF
 37155                           postinc2	equ	0xFDE
 37156                           postdec2	equ	0xFDD
 37157                           plusw2	equ	0xFDB
 37158                           fsr2h	equ	0xFDA
 37159                           fsr2l	equ	0xFD9
 37160                           status	equ	0xFD8
 37161                           
 37162 ;; *************** function _I2C1_Initialize *****************
 37163 ;; Defined at:
 37164 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 37165 ;; Parameters:    Size  Location     Type
 37166 ;;		None
 37167 ;; Auto vars:     Size  Location     Type
 37168 ;;		None
 37169 ;; Return value:  Size  Location     Type
 37170 ;;                  1    wreg      void 
 37171 ;; Registers used:
 37172 ;;		wreg, status,2, status,0
 37173 ;; Tracked objects:
 37174 ;;		On entry : 0/0
 37175 ;;		On exit  : 0/0
 37176 ;;		Unchanged: 0/0
 37177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37182 ;;Total ram usage:        0 bytes
 37183 ;; Hardware stack levels used:    1
 37184 ;; Hardware stack levels required when called:   19
 37185 ;; This function calls:
 37186 ;;		Nothing
 37187 ;; This function is called by:
 37188 ;;		_SYSTEM_Initialize
 37189 ;; This function uses a non-reentrant model
 37190 ;;
 37191                           
 37192                           	psect	text84
 37193  01B7D0                     __ptext84:
 37194                           	opt stack 0
 37195  01B7D0                     _I2C1_Initialize:
 37196                           	opt stack 10
 37197                           
 37198                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
 37199                           
 37200                           ; BSR set to: 14
 37201                           ;incstack = 0
 37202  01B7D0  0EE9               	movlw	low _i2c1_tr_queue
 37203  01B7D2  0101               	movlb	1	; () banked
 37204  01B7D4  6F6B               	movwf	(_i2c1_object+2)& (0+255),b
 37205  01B7D6  0E02               	movlw	high _i2c1_tr_queue
 37206  01B7D8  6F6C               	movwf	(_i2c1_object+3)& (0+255),b
 37207                           
 37208                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
 37209  01B7DA  0EE9               	movlw	low _i2c1_tr_queue
 37210  01B7DC  6F69               	movwf	_i2c1_object& (0+255),b
 37211  01B7DE  0E02               	movlw	high _i2c1_tr_queue
 37212  01B7E0  6F6A               	movwf	(_i2c1_object+1)& (0+255),b
 37213                           
 37214                           ; BSR set to: 1
 37215                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
 37216  01B7E2  836D               	bsf	(_i2c1_object+4)& (0+255),1,b
 37217                           
 37218                           ; BSR set to: 1
 37219                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
 37220  01B7E4  916D               	bcf	(_i2c1_object+4)& (0+255),0,b
 37221                           
 37222                           ; BSR set to: 1
 37223                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
 37224  01B7E6  0E00               	movlw	0
 37225  01B7E8  6F6F               	movwf	(_i2c1_object+6)& (0+255),b
 37226                           
 37227                           ; BSR set to: 1
 37228                           ;i2c1.c: 208: SSP1STAT = 0x00;
 37229  01B7EA  0E00               	movlw	0
 37230  01B7EC  6E94               	movwf	3988,c	;volatile
 37231                           
 37232                           ; BSR set to: 1
 37233                           ;i2c1.c: 210: SSP1CON1 = 0x28;
 37234  01B7EE  0E28               	movlw	40
 37235  01B7F0  6E95               	movwf	3989,c	;volatile
 37236                           
 37237                           ; BSR set to: 1
 37238                           ;i2c1.c: 212: SSP1CON3 = 0x00;
 37239  01B7F2  0E00               	movlw	0
 37240  01B7F4  6E97               	movwf	3991,c	;volatile
 37241                           
 37242                           ; BSR set to: 1
 37243                           ;i2c1.c: 214: SSP1ADD = 0x3F;
 37244  01B7F6  0E3F               	movlw	63
 37245  01B7F8  6E92               	movwf	3986,c	;volatile
 37246                           
 37247                           ; BSR set to: 1
 37248                           ;i2c1.c: 217: PIR3bits.SSP1IF = 0;
 37249  01B7FA  010E               	movlb	14	; () banked
 37250  01B7FC  9136               	bcf	54,0,b	;volatile
 37251                           
 37252                           ; BSR set to: 14
 37253                           ;i2c1.c: 218: PIR3bits.BCL1IF = 0;
 37254  01B7FE  9336               	bcf	54,1,b	;volatile
 37255                           
 37256                           ; BSR set to: 14
 37257                           ;i2c1.c: 221: PIE3bits.SSP1IE = 1;
 37258  01B800  812C               	bsf	44,0,b	;volatile
 37259                           
 37260                           ; BSR set to: 14
 37261                           ;i2c1.c: 222: PIE3bits.BCL1IE = 1;
 37262  01B802  832C               	bsf	44,1,b	;volatile
 37263                           
 37264                           ; BSR set to: 14
 37265  01B804  0012               	return		;funcret
 37266  01B806                     __end_of_I2C1_Initialize:
 37267                           	opt stack 0
 37268                           tosu	equ	0xFFF
 37269                           tosh	equ	0xFFE
 37270                           tosl	equ	0xFFD
 37271                           pclath	equ	0xFFA
 37272                           tblptru	equ	0xFF8
 37273                           tblptrh	equ	0xFF7
 37274                           tblptrl	equ	0xFF6
 37275                           tablat	equ	0xFF5
 37276                           prodh	equ	0xFF4
 37277                           prodl	equ	0xFF3
 37278                           intcon	equ	0xFF2
 37279                           indf0	equ	0xFEF
 37280                           postinc0	equ	0xFEE
 37281                           fsr0h	equ	0xFEA
 37282                           fsr0l	equ	0xFE9
 37283                           wreg	equ	0xFE8
 37284                           indf1	equ	0xFE7
 37285                           postdec1	equ	0xFE5
 37286                           plusw1	equ	0xFE3
 37287                           fsr1h	equ	0xFE2
 37288                           fsr1l	equ	0xFE1
 37289                           indf2	equ	0xFDF
 37290                           postinc2	equ	0xFDE
 37291                           postdec2	equ	0xFDD
 37292                           plusw2	equ	0xFDB
 37293                           fsr2h	equ	0xFDA
 37294                           fsr2l	equ	0xFD9
 37295                           status	equ	0xFD8
 37296                           
 37297 ;; *************** function _HLVD_Initialize *****************
 37298 ;; Defined at:
 37299 ;;		line 60 in file "mcc_generated_files/hlvd.c"
 37300 ;; Parameters:    Size  Location     Type
 37301 ;;		None
 37302 ;; Auto vars:     Size  Location     Type
 37303 ;;		None
 37304 ;; Return value:  Size  Location     Type
 37305 ;;                  1    wreg      void 
 37306 ;; Registers used:
 37307 ;;		wreg, status,2
 37308 ;; Tracked objects:
 37309 ;;		On entry : 0/0
 37310 ;;		On exit  : 0/0
 37311 ;;		Unchanged: 0/0
 37312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37317 ;;Total ram usage:        0 bytes
 37318 ;; Hardware stack levels used:    1
 37319 ;; Hardware stack levels required when called:   19
 37320 ;; This function calls:
 37321 ;;		Nothing
 37322 ;; This function is called by:
 37323 ;;		_SYSTEM_Initialize
 37324 ;; This function uses a non-reentrant model
 37325 ;;
 37326                           
 37327                           	psect	text85
 37328  01BF06                     __ptext85:
 37329                           	opt stack 0
 37330  01BF06                     _HLVD_Initialize:
 37331                           	opt stack 10
 37332                           
 37333                           ;hlvd.c: 64: HLVDCON1 = 0x07;
 37334                           
 37335                           ; BSR set to: 14
 37336                           ;incstack = 0
 37337  01BF06  0E07               	movlw	7
 37338  01BF08  010E               	movlb	14	; () banked
 37339  01BF0A  6FC3               	movwf	195,b	;volatile
 37340                           
 37341                           ;hlvd.c: 66: HLVDCON0 = 0x81;
 37342  01BF0C  0E81               	movlw	129
 37343  01BF0E  6FC2               	movwf	194,b	;volatile
 37344                           
 37345                           ; BSR set to: 14
 37346                           ;hlvd.c: 68: PIR2bits.HLVDIF = 0;
 37347  01BF10  9F35               	bcf	53,7,b	;volatile
 37348                           
 37349                           ; BSR set to: 14
 37350                           ;hlvd.c: 70: PIE2bits.HLVDIE = 1;
 37351  01BF12  8F2B               	bsf	43,7,b	;volatile
 37352                           
 37353                           ; BSR set to: 14
 37354  01BF14  0012               	return		;funcret
 37355  01BF16                     __end_of_HLVD_Initialize:
 37356                           	opt stack 0
 37357                           tosu	equ	0xFFF
 37358                           tosh	equ	0xFFE
 37359                           tosl	equ	0xFFD
 37360                           pclath	equ	0xFFA
 37361                           tblptru	equ	0xFF8
 37362                           tblptrh	equ	0xFF7
 37363                           tblptrl	equ	0xFF6
 37364                           tablat	equ	0xFF5
 37365                           prodh	equ	0xFF4
 37366                           prodl	equ	0xFF3
 37367                           intcon	equ	0xFF2
 37368                           indf0	equ	0xFEF
 37369                           postinc0	equ	0xFEE
 37370                           fsr0h	equ	0xFEA
 37371                           fsr0l	equ	0xFE9
 37372                           wreg	equ	0xFE8
 37373                           indf1	equ	0xFE7
 37374                           postdec1	equ	0xFE5
 37375                           plusw1	equ	0xFE3
 37376                           fsr1h	equ	0xFE2
 37377                           fsr1l	equ	0xFE1
 37378                           indf2	equ	0xFDF
 37379                           postinc2	equ	0xFDE
 37380                           postdec2	equ	0xFDD
 37381                           plusw2	equ	0xFDB
 37382                           fsr2h	equ	0xFDA
 37383                           fsr2l	equ	0xFD9
 37384                           status	equ	0xFD8
 37385                           
 37386 ;; *************** function _FVR_Initialize *****************
 37387 ;; Defined at:
 37388 ;;		line 58 in file "mcc_generated_files/fvr.c"
 37389 ;; Parameters:    Size  Location     Type
 37390 ;;		None
 37391 ;; Auto vars:     Size  Location     Type
 37392 ;;		None
 37393 ;; Return value:  Size  Location     Type
 37394 ;;                  1    wreg      void 
 37395 ;; Registers used:
 37396 ;;		wreg, status,2
 37397 ;; Tracked objects:
 37398 ;;		On entry : 0/0
 37399 ;;		On exit  : 0/0
 37400 ;;		Unchanged: 0/0
 37401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37406 ;;Total ram usage:        0 bytes
 37407 ;; Hardware stack levels used:    1
 37408 ;; Hardware stack levels required when called:   19
 37409 ;; This function calls:
 37410 ;;		Nothing
 37411 ;; This function is called by:
 37412 ;;		_SYSTEM_Initialize
 37413 ;; This function uses a non-reentrant model
 37414 ;;
 37415                           
 37416                           	psect	text86
 37417  01BFF0                     __ptext86:
 37418                           	opt stack 0
 37419  01BFF0                     _FVR_Initialize:
 37420                           	opt stack 10
 37421                           
 37422                           ;fvr.c: 61: FVRCON = 0xA6;
 37423                           
 37424                           ; BSR set to: 14
 37425                           ;incstack = 0
 37426  01BFF0  0EA6               	movlw	166
 37427  01BFF2  010E               	movlb	14	; () banked
 37428  01BFF4  6FC4               	movwf	196,b	;volatile
 37429                           
 37430                           ; BSR set to: 14
 37431  01BFF6  0012               	return		;funcret
 37432  01BFF8                     __end_of_FVR_Initialize:
 37433                           	opt stack 0
 37434                           tosu	equ	0xFFF
 37435                           tosh	equ	0xFFE
 37436                           tosl	equ	0xFFD
 37437                           pclath	equ	0xFFA
 37438                           tblptru	equ	0xFF8
 37439                           tblptrh	equ	0xFF7
 37440                           tblptrl	equ	0xFF6
 37441                           tablat	equ	0xFF5
 37442                           prodh	equ	0xFF4
 37443                           prodl	equ	0xFF3
 37444                           intcon	equ	0xFF2
 37445                           indf0	equ	0xFEF
 37446                           postinc0	equ	0xFEE
 37447                           fsr0h	equ	0xFEA
 37448                           fsr0l	equ	0xFE9
 37449                           wreg	equ	0xFE8
 37450                           indf1	equ	0xFE7
 37451                           postdec1	equ	0xFE5
 37452                           plusw1	equ	0xFE3
 37453                           fsr1h	equ	0xFE2
 37454                           fsr1l	equ	0xFE1
 37455                           indf2	equ	0xFDF
 37456                           postinc2	equ	0xFDE
 37457                           postdec2	equ	0xFDD
 37458                           plusw2	equ	0xFDB
 37459                           fsr2h	equ	0xFDA
 37460                           fsr2l	equ	0xFD9
 37461                           status	equ	0xFD8
 37462                           
 37463 ;; *************** function _EXT_INT_Initialize *****************
 37464 ;; Defined at:
 37465 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 37466 ;; Parameters:    Size  Location     Type
 37467 ;;		None
 37468 ;; Auto vars:     Size  Location     Type
 37469 ;;		None
 37470 ;; Return value:  Size  Location     Type
 37471 ;;                  1    wreg      void 
 37472 ;; Registers used:
 37473 ;;		wreg, status,2, status,0, cstack
 37474 ;; Tracked objects:
 37475 ;;		On entry : 0/0
 37476 ;;		On exit  : 0/0
 37477 ;;		Unchanged: 0/0
 37478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37483 ;;Total ram usage:        0 bytes
 37484 ;; Hardware stack levels used:    1
 37485 ;; Hardware stack levels required when called:   20
 37486 ;; This function calls:
 37487 ;;		_INT0_SetInterruptHandler
 37488 ;; This function is called by:
 37489 ;;		_SYSTEM_Initialize
 37490 ;; This function uses a non-reentrant model
 37491 ;;
 37492                           
 37493                           	psect	text87
 37494  01BD10                     __ptext87:
 37495                           	opt stack 0
 37496  01BD10                     _EXT_INT_Initialize:
 37497                           	opt stack 9
 37498                           
 37499                           ;ext_int.c: 64: (PIR0bits.INT0IF = 0);
 37500                           
 37501                           ; BSR set to: 14
 37502                           ;incstack = 0
 37503  01BD10  010E               	movlb	14	; () banked
 37504  01BD12  9133               	bcf	51,0,b	;volatile
 37505                           
 37506                           ;ext_int.c: 65: (INTCONbits.INT0EDG = 1);
 37507  01BD14  80F2               	bsf	intcon,0,c	;volatile
 37508                           
 37509                           ; BSR set to: 14
 37510                           ;ext_int.c: 67: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
 37511  01BD16  0E34               	movlw	low _INT0_DefaultInterruptHandler
 37512  01BD18  0101               	movlb	1	; () banked
 37513  01BD1A  6F4F               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 37514  01BD1C  0EC0               	movlw	high _INT0_DefaultInterruptHandler
 37515  01BD1E  6F50               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 37516  01BD20  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 37517  01BD22  6F51               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 37518  01BD24  ECB5  F0DF         	call	_INT0_SetInterruptHandler	;wreg free
 37519                           
 37520                           ;ext_int.c: 68: (PIE0bits.INT0IE = 1);
 37521  01BD28  010E               	movlb	14	; () banked
 37522  01BD2A  8129               	bsf	41,0,b	;volatile
 37523                           
 37524                           ; BSR set to: 14
 37525  01BD2C  0012               	return		;funcret
 37526  01BD2E                     __end_of_EXT_INT_Initialize:
 37527                           	opt stack 0
 37528                           tosu	equ	0xFFF
 37529                           tosh	equ	0xFFE
 37530                           tosl	equ	0xFFD
 37531                           pclath	equ	0xFFA
 37532                           tblptru	equ	0xFF8
 37533                           tblptrh	equ	0xFF7
 37534                           tblptrl	equ	0xFF6
 37535                           tablat	equ	0xFF5
 37536                           prodh	equ	0xFF4
 37537                           prodl	equ	0xFF3
 37538                           intcon	equ	0xFF2
 37539                           indf0	equ	0xFEF
 37540                           postinc0	equ	0xFEE
 37541                           fsr0h	equ	0xFEA
 37542                           fsr0l	equ	0xFE9
 37543                           wreg	equ	0xFE8
 37544                           indf1	equ	0xFE7
 37545                           postdec1	equ	0xFE5
 37546                           plusw1	equ	0xFE3
 37547                           fsr1h	equ	0xFE2
 37548                           fsr1l	equ	0xFE1
 37549                           indf2	equ	0xFDF
 37550                           postinc2	equ	0xFDE
 37551                           postdec2	equ	0xFDD
 37552                           plusw2	equ	0xFDB
 37553                           fsr2h	equ	0xFDA
 37554                           fsr2l	equ	0xFD9
 37555                           status	equ	0xFD8
 37556                           
 37557 ;; *************** function _INT0_SetInterruptHandler *****************
 37558 ;; Defined at:
 37559 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 37560 ;; Parameters:    Size  Location     Type
 37561 ;;  InterruptHan    3   79[BANK1 ] PTR FTN()void 
 37562 ;;		 -> dimmingOffTimeCallback(1), INT0_DefaultInterruptHandler(1), 
 37563 ;; Auto vars:     Size  Location     Type
 37564 ;;		None
 37565 ;; Return value:  Size  Location     Type
 37566 ;;                  1    wreg      void 
 37567 ;; Registers used:
 37568 ;;		wreg, status,2, status,0
 37569 ;; Tracked objects:
 37570 ;;		On entry : 0/0
 37571 ;;		On exit  : 0/0
 37572 ;;		Unchanged: 0/0
 37573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37574 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37577 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37578 ;;Total ram usage:        3 bytes
 37579 ;; Hardware stack levels used:    1
 37580 ;; Hardware stack levels required when called:   19
 37581 ;; This function calls:
 37582 ;;		Nothing
 37583 ;; This function is called by:
 37584 ;;		_EXT_INT_Initialize
 37585 ;;		_main
 37586 ;; This function uses a non-reentrant model
 37587 ;;
 37588                           
 37589                           	psect	text88
 37590  01BF6A                     __ptext88:
 37591                           	opt stack 0
 37592  01BF6A                     _INT0_SetInterruptHandler:
 37593                           	opt stack 9
 37594                           
 37595                           ;ext_int.c: 51: INT0_InterruptHandler = InterruptHandler;
 37596                           
 37597                           ; BSR set to: 14
 37598                           ;incstack = 0
 37599  01BF6A  C14F  F2CB         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 37600  01BF6E  C150  F2CC         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 37601  01BF72  C151  F2CD         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
 37602  01BF76  0012               	return		;funcret
 37603  01BF78                     __end_of_INT0_SetInterruptHandler:
 37604                           	opt stack 0
 37605                           tosu	equ	0xFFF
 37606                           tosh	equ	0xFFE
 37607                           tosl	equ	0xFFD
 37608                           pclath	equ	0xFFA
 37609                           tblptru	equ	0xFF8
 37610                           tblptrh	equ	0xFF7
 37611                           tblptrl	equ	0xFF6
 37612                           tablat	equ	0xFF5
 37613                           prodh	equ	0xFF4
 37614                           prodl	equ	0xFF3
 37615                           intcon	equ	0xFF2
 37616                           indf0	equ	0xFEF
 37617                           postinc0	equ	0xFEE
 37618                           fsr0h	equ	0xFEA
 37619                           fsr0l	equ	0xFE9
 37620                           wreg	equ	0xFE8
 37621                           indf1	equ	0xFE7
 37622                           postdec1	equ	0xFE5
 37623                           plusw1	equ	0xFE3
 37624                           fsr1h	equ	0xFE2
 37625                           fsr1l	equ	0xFE1
 37626                           indf2	equ	0xFDF
 37627                           postinc2	equ	0xFDE
 37628                           postdec2	equ	0xFDD
 37629                           plusw2	equ	0xFDB
 37630                           fsr2h	equ	0xFDA
 37631                           fsr2l	equ	0xFD9
 37632                           status	equ	0xFD8
 37633                           
 37634 ;; *************** function _EUSART2_Initialize *****************
 37635 ;; Defined at:
 37636 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 37637 ;; Parameters:    Size  Location     Type
 37638 ;;		None
 37639 ;; Auto vars:     Size  Location     Type
 37640 ;;		None
 37641 ;; Return value:  Size  Location     Type
 37642 ;;                  1    wreg      void 
 37643 ;; Registers used:
 37644 ;;		wreg, status,2, status,0, cstack
 37645 ;; Tracked objects:
 37646 ;;		On entry : 0/0
 37647 ;;		On exit  : 0/0
 37648 ;;		Unchanged: 0/0
 37649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37654 ;;Total ram usage:        0 bytes
 37655 ;; Hardware stack levels used:    1
 37656 ;; Hardware stack levels required when called:   20
 37657 ;; This function calls:
 37658 ;;		_EUSART2_SetRxInterruptHandler
 37659 ;;		_EUSART2_SetTxInterruptHandler
 37660 ;; This function is called by:
 37661 ;;		_SYSTEM_Initialize
 37662 ;; This function uses a non-reentrant model
 37663 ;;
 37664                           
 37665                           	psect	text89
 37666  01AAAC                     __ptext89:
 37667                           	opt stack 0
 37668  01AAAC                     _EUSART2_Initialize:
 37669                           	opt stack 9
 37670                           
 37671                           ;eusart2.c: 83: PIE3bits.RC2IE = 0;
 37672                           
 37673                           ;incstack = 0
 37674  01AAAC  010E               	movlb	14	; () banked
 37675  01AAAE  9F2C               	bcf	44,7,b	;volatile
 37676                           
 37677                           ; BSR set to: 14
 37678                           ;eusart2.c: 84: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 37679  01AAB0  0EBA               	movlw	low _EUSART2_Receive_ISR
 37680  01AAB2  0101               	movlb	1	; () banked
 37681  01AAB4  6F4F               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 37682  01AAB6  0E9D               	movlw	high _EUSART2_Receive_ISR
 37683  01AAB8  6F50               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 37684  01AABA  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 37685  01AABC  6F51               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 37686  01AABE  ECC3  F0DF         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 37687                           
 37688                           ;eusart2.c: 85: PIE3bits.TX2IE = 0;
 37689  01AAC2  010E               	movlb	14	; () banked
 37690  01AAC4  9D2C               	bcf	44,6,b	;volatile
 37691                           
 37692                           ;eusart2.c: 86: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 37693  01AAC6  0E06               	movlw	low _EUSART2_Transmit_ISR
 37694  01AAC8  0101               	movlb	1	; () banked
 37695  01AACA  6F4F               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 37696  01AACC  0EB8               	movlw	high _EUSART2_Transmit_ISR
 37697  01AACE  6F50               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 37698  01AAD0  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 37699  01AAD2  6F51               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 37700  01AAD4  ECBC  F0DF         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 37701                           
 37702                           ;eusart2.c: 90: BAUD2CON = 0x08;
 37703  01AAD8  0E08               	movlw	8
 37704  01AADA  010E               	movlb	14	; () banked
 37705  01AADC  6FF7               	movwf	247,b	;volatile
 37706                           
 37707                           ; BSR set to: 14
 37708                           ;eusart2.c: 93: RC2STA = 0x90;
 37709  01AADE  0E90               	movlw	144
 37710  01AAE0  6FF5               	movwf	245,b	;volatile
 37711                           
 37712                           ; BSR set to: 14
 37713                           ;eusart2.c: 96: TX2STA = 0x24;
 37714  01AAE2  0E24               	movlw	36
 37715  01AAE4  6FF6               	movwf	246,b	;volatile
 37716                           
 37717                           ; BSR set to: 14
 37718                           ;eusart2.c: 99: SP2BRGL = 0x8A;
 37719  01AAE6  0E8A               	movlw	138
 37720  01AAE8  6FF3               	movwf	243,b	;volatile
 37721                           
 37722                           ; BSR set to: 14
 37723                           ;eusart2.c: 102: SP2BRGH = 0x00;
 37724  01AAEA  0E00               	movlw	0
 37725  01AAEC  6FF4               	movwf	244,b	;volatile
 37726                           
 37727                           ; BSR set to: 14
 37728                           ;eusart2.c: 106: eusart2TxHead = 0;
 37729  01AAEE  0E00               	movlw	0
 37730  01AAF0  0101               	movlb	1	; () banked
 37731  01AAF2  6FA6               	movwf	_eusart2TxHead& (0+255),b	;volatile
 37732                           
 37733                           ; BSR set to: 1
 37734                           ;eusart2.c: 107: eusart2TxTail = 0;
 37735  01AAF4  0E00               	movlw	0
 37736  01AAF6  6FA5               	movwf	_eusart2TxTail& (0+255),b	;volatile
 37737                           
 37738                           ; BSR set to: 1
 37739                           ;eusart2.c: 108: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 37740  01AAF8  0E80               	movlw	128
 37741  01AAFA  6FA4               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 37742                           
 37743                           ; BSR set to: 1
 37744                           ;eusart2.c: 110: eusart2RxHead = 0;
 37745  01AAFC  0E00               	movlw	0
 37746  01AAFE  0100               	movlb	0	; () banked
 37747  01AB00  6FF4               	movwf	_eusart2RxHead& (0+255),b	;volatile
 37748                           
 37749                           ; BSR set to: 0
 37750                           ;eusart2.c: 111: eusart2RxTail = 0;
 37751  01AB02  0E00               	movlw	0
 37752  01AB04  0101               	movlb	1	; () banked
 37753  01AB06  6FA3               	movwf	_eusart2RxTail& (0+255),b	;volatile
 37754                           
 37755                           ; BSR set to: 1
 37756                           ;eusart2.c: 112: eusart2RxCount = 0;
 37757  01AB08  0E00               	movlw	0
 37758  01AB0A  6FA2               	movwf	_eusart2RxCount& (0+255),b	;volatile
 37759                           
 37760                           ; BSR set to: 1
 37761                           ;eusart2.c: 115: PIE3bits.RC2IE = 1;
 37762  01AB0C  010E               	movlb	14	; () banked
 37763  01AB0E  8F2C               	bsf	44,7,b	;volatile
 37764                           
 37765                           ; BSR set to: 14
 37766  01AB10  0012               	return		;funcret
 37767  01AB12                     __end_of_EUSART2_Initialize:
 37768                           	opt stack 0
 37769                           tosu	equ	0xFFF
 37770                           tosh	equ	0xFFE
 37771                           tosl	equ	0xFFD
 37772                           pclath	equ	0xFFA
 37773                           tblptru	equ	0xFF8
 37774                           tblptrh	equ	0xFF7
 37775                           tblptrl	equ	0xFF6
 37776                           tablat	equ	0xFF5
 37777                           prodh	equ	0xFF4
 37778                           prodl	equ	0xFF3
 37779                           intcon	equ	0xFF2
 37780                           indf0	equ	0xFEF
 37781                           postinc0	equ	0xFEE
 37782                           fsr0h	equ	0xFEA
 37783                           fsr0l	equ	0xFE9
 37784                           wreg	equ	0xFE8
 37785                           indf1	equ	0xFE7
 37786                           postdec1	equ	0xFE5
 37787                           plusw1	equ	0xFE3
 37788                           fsr1h	equ	0xFE2
 37789                           fsr1l	equ	0xFE1
 37790                           indf2	equ	0xFDF
 37791                           postinc2	equ	0xFDE
 37792                           postdec2	equ	0xFDD
 37793                           plusw2	equ	0xFDB
 37794                           fsr2h	equ	0xFDA
 37795                           fsr2l	equ	0xFD9
 37796                           status	equ	0xFD8
 37797                           
 37798 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 37799 ;; Defined at:
 37800 ;;		line 270 in file "mcc_generated_files/eusart2.c"
 37801 ;; Parameters:    Size  Location     Type
 37802 ;;  interruptHan    3   79[BANK1 ] PTR FTN()void 
 37803 ;;		 -> EUSART2_Transmit_ISR(1), 
 37804 ;; Auto vars:     Size  Location     Type
 37805 ;;		None
 37806 ;; Return value:  Size  Location     Type
 37807 ;;                  1    wreg      void 
 37808 ;; Registers used:
 37809 ;;		wreg, status,2, status,0
 37810 ;; Tracked objects:
 37811 ;;		On entry : 0/0
 37812 ;;		On exit  : 0/0
 37813 ;;		Unchanged: 0/0
 37814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37815 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37818 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37819 ;;Total ram usage:        3 bytes
 37820 ;; Hardware stack levels used:    1
 37821 ;; Hardware stack levels required when called:   19
 37822 ;; This function calls:
 37823 ;;		Nothing
 37824 ;; This function is called by:
 37825 ;;		_EUSART2_Initialize
 37826 ;; This function uses a non-reentrant model
 37827 ;;
 37828                           
 37829                           	psect	text90
 37830  01BF78                     __ptext90:
 37831                           	opt stack 0
 37832  01BF78                     _EUSART2_SetTxInterruptHandler:
 37833                           	opt stack 9
 37834                           
 37835                           ;eusart2.c: 271: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 37836                           
 37837                           ; BSR set to: 14
 37838                           ;incstack = 0
 37839  01BF78  C14F  F2DA         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 37840  01BF7C  C150  F2DB         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 37841  01BF80  C151  F2DC         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 37842  01BF84  0012               	return		;funcret
 37843  01BF86                     __end_of_EUSART2_SetTxInterruptHandler:
 37844                           	opt stack 0
 37845                           tosu	equ	0xFFF
 37846                           tosh	equ	0xFFE
 37847                           tosl	equ	0xFFD
 37848                           pclath	equ	0xFFA
 37849                           tblptru	equ	0xFF8
 37850                           tblptrh	equ	0xFF7
 37851                           tblptrl	equ	0xFF6
 37852                           tablat	equ	0xFF5
 37853                           prodh	equ	0xFF4
 37854                           prodl	equ	0xFF3
 37855                           intcon	equ	0xFF2
 37856                           indf0	equ	0xFEF
 37857                           postinc0	equ	0xFEE
 37858                           fsr0h	equ	0xFEA
 37859                           fsr0l	equ	0xFE9
 37860                           wreg	equ	0xFE8
 37861                           indf1	equ	0xFE7
 37862                           postdec1	equ	0xFE5
 37863                           plusw1	equ	0xFE3
 37864                           fsr1h	equ	0xFE2
 37865                           fsr1l	equ	0xFE1
 37866                           indf2	equ	0xFDF
 37867                           postinc2	equ	0xFDE
 37868                           postdec2	equ	0xFDD
 37869                           plusw2	equ	0xFDB
 37870                           fsr2h	equ	0xFDA
 37871                           fsr2l	equ	0xFD9
 37872                           status	equ	0xFD8
 37873                           
 37874 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 37875 ;; Defined at:
 37876 ;;		line 274 in file "mcc_generated_files/eusart2.c"
 37877 ;; Parameters:    Size  Location     Type
 37878 ;;  interruptHan    3   79[BANK1 ] PTR FTN()void 
 37879 ;;		 -> EUSART2_Receive_ISR(1), 
 37880 ;; Auto vars:     Size  Location     Type
 37881 ;;		None
 37882 ;; Return value:  Size  Location     Type
 37883 ;;                  1    wreg      void 
 37884 ;; Registers used:
 37885 ;;		wreg, status,2, status,0
 37886 ;; Tracked objects:
 37887 ;;		On entry : 0/0
 37888 ;;		On exit  : 0/0
 37889 ;;		Unchanged: 0/0
 37890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37891 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37894 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37895 ;;Total ram usage:        3 bytes
 37896 ;; Hardware stack levels used:    1
 37897 ;; Hardware stack levels required when called:   19
 37898 ;; This function calls:
 37899 ;;		Nothing
 37900 ;; This function is called by:
 37901 ;;		_EUSART2_Initialize
 37902 ;; This function uses a non-reentrant model
 37903 ;;
 37904                           
 37905                           	psect	text91
 37906  01BF86                     __ptext91:
 37907                           	opt stack 0
 37908  01BF86                     _EUSART2_SetRxInterruptHandler:
 37909                           	opt stack 9
 37910                           
 37911                           ;eusart2.c: 275: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 37912                           
 37913                           ;incstack = 0
 37914  01BF86  C14F  F2D7         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 37915  01BF8A  C150  F2D8         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 37916  01BF8E  C151  F2D9         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 37917  01BF92  0012               	return		;funcret
 37918  01BF94                     __end_of_EUSART2_SetRxInterruptHandler:
 37919                           	opt stack 0
 37920                           tosu	equ	0xFFF
 37921                           tosh	equ	0xFFE
 37922                           tosl	equ	0xFFD
 37923                           pclath	equ	0xFFA
 37924                           tblptru	equ	0xFF8
 37925                           tblptrh	equ	0xFF7
 37926                           tblptrl	equ	0xFF6
 37927                           tablat	equ	0xFF5
 37928                           prodh	equ	0xFF4
 37929                           prodl	equ	0xFF3
 37930                           intcon	equ	0xFF2
 37931                           indf0	equ	0xFEF
 37932                           postinc0	equ	0xFEE
 37933                           fsr0h	equ	0xFEA
 37934                           fsr0l	equ	0xFE9
 37935                           wreg	equ	0xFE8
 37936                           indf1	equ	0xFE7
 37937                           postdec1	equ	0xFE5
 37938                           plusw1	equ	0xFE3
 37939                           fsr1h	equ	0xFE2
 37940                           fsr1l	equ	0xFE1
 37941                           indf2	equ	0xFDF
 37942                           postinc2	equ	0xFDE
 37943                           postdec2	equ	0xFDD
 37944                           plusw2	equ	0xFDB
 37945                           fsr2h	equ	0xFDA
 37946                           fsr2l	equ	0xFD9
 37947                           status	equ	0xFD8
 37948                           
 37949 ;; *************** function _ADCC_Initialize *****************
 37950 ;; Defined at:
 37951 ;;		line 63 in file "mcc_generated_files/adcc.c"
 37952 ;; Parameters:    Size  Location     Type
 37953 ;;		None
 37954 ;; Auto vars:     Size  Location     Type
 37955 ;;		None
 37956 ;; Return value:  Size  Location     Type
 37957 ;;                  1    wreg      void 
 37958 ;; Registers used:
 37959 ;;		wreg, status,2, status,0, cstack
 37960 ;; Tracked objects:
 37961 ;;		On entry : 0/0
 37962 ;;		On exit  : 0/0
 37963 ;;		Unchanged: 0/0
 37964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 37965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37969 ;;Total ram usage:        0 bytes
 37970 ;; Hardware stack levels used:    1
 37971 ;; Hardware stack levels required when called:   20
 37972 ;; This function calls:
 37973 ;;		_ADCC_SetADTIInterruptHandler
 37974 ;; This function is called by:
 37975 ;;		_SYSTEM_Initialize
 37976 ;; This function uses a non-reentrant model
 37977 ;;
 37978                           
 37979                           	psect	text92
 37980  01A908                     __ptext92:
 37981                           	opt stack 0
 37982  01A908                     _ADCC_Initialize:
 37983                           	opt stack 9
 37984                           
 37985                           ;adcc.c: 67: ADLTHL = 0x00;
 37986                           
 37987                           ;incstack = 0
 37988  01A908  0E00               	movlw	0
 37989  01A90A  6E6A               	movwf	3946,c	;volatile
 37990                           
 37991                           ;adcc.c: 69: ADLTHH = 0x00;
 37992  01A90C  0E00               	movlw	0
 37993  01A90E  6E6B               	movwf	3947,c	;volatile
 37994                           
 37995                           ;adcc.c: 71: ADUTHL = 0x00;
 37996  01A910  0E00               	movlw	0
 37997  01A912  6E6C               	movwf	3948,c	;volatile
 37998                           
 37999                           ;adcc.c: 73: ADUTHH = 0x00;
 38000  01A914  0E00               	movlw	0
 38001  01A916  6E6D               	movwf	3949,c	;volatile
 38002                           
 38003                           ;adcc.c: 75: ADSTPTL = 0x00;
 38004  01A918  0E00               	movlw	0
 38005  01A91A  6E68               	movwf	3944,c	;volatile
 38006                           
 38007                           ;adcc.c: 77: ADSTPTH = 0x00;
 38008  01A91C  0E00               	movlw	0
 38009  01A91E  6E69               	movwf	3945,c	;volatile
 38010                           
 38011                           ;adcc.c: 79: ADRPT = 0xFF;
 38012  01A920  6866               	setf	3942,c	;volatile
 38013                           
 38014                           ;adcc.c: 81: ADPCH = 0x00;
 38015  01A922  0E00               	movlw	0
 38016  01A924  010F               	movlb	15	; () banked
 38017  01A926  6F5F               	movwf	95,b	;volatile
 38018                           
 38019                           ;adcc.c: 83: ADCAP = 0x00;
 38020  01A928  0E00               	movlw	0
 38021  01A92A  6F5D               	movwf	93,b	;volatile
 38022                           
 38023                           ;adcc.c: 85: ADCON1 = 0x00;
 38024  01A92C  0E00               	movlw	0
 38025  01A92E  6F59               	movwf	89,b	;volatile
 38026                           
 38027                           ;adcc.c: 87: ADCON2 = 0x04;
 38028  01A930  0E04               	movlw	4
 38029  01A932  6F5A               	movwf	90,b	;volatile
 38030                           
 38031                           ;adcc.c: 89: ADCON3 = 0x5F;
 38032  01A934  0E5F               	movlw	95
 38033  01A936  6F5B               	movwf	91,b	;volatile
 38034                           
 38035                           ;adcc.c: 91: ADSTAT = 0x00;
 38036  01A938  0E00               	movlw	0
 38037  01A93A  6E65               	movwf	3941,c	;volatile
 38038                           
 38039                           ;adcc.c: 93: ADREF = 0x12;
 38040  01A93C  0E12               	movlw	18
 38041  01A93E  6F58               	movwf	88,b	;volatile
 38042                           
 38043                           ;adcc.c: 95: ADACT = 0x00;
 38044  01A940  0E00               	movlw	0
 38045  01A942  6F56               	movwf	86,b	;volatile
 38046                           
 38047                           ;adcc.c: 97: ADCLK = 0x1F;
 38048  01A944  0E1F               	movlw	31
 38049  01A946  6F57               	movwf	87,b	;volatile
 38050                           
 38051                           ;adcc.c: 99: ADCON0 = 0xC4;
 38052  01A948  0EC4               	movlw	196
 38053  01A94A  6E60               	movwf	3936,c	;volatile
 38054                           
 38055                           ; BSR set to: 15
 38056                           ;adcc.c: 101: ADACQ = 0xFF;
 38057  01A94C  695C               	setf	92,b	;volatile
 38058                           
 38059                           ; BSR set to: 15
 38060                           ;adcc.c: 104: ADCON2bits.ADCRS = 7;
 38061  01A94E  895A               	bsf	90,4,b	;volatile
 38062  01A950  8B5A               	bsf	90,5,b	;volatile
 38063  01A952  8D5A               	bsf	90,6,b	;volatile
 38064                           
 38065                           ;adcc.c: 105: ADCAP = 20;
 38066  01A954  0E14               	movlw	20
 38067  01A956  6F5D               	movwf	93,b	;volatile
 38068                           
 38069                           ; BSR set to: 15
 38070                           ;adcc.c: 108: PIR1bits.ADTIF = 0;
 38071  01A958  010E               	movlb	14	; () banked
 38072  01A95A  9334               	bcf	52,1,b	;volatile
 38073                           
 38074                           ; BSR set to: 14
 38075                           ;adcc.c: 110: PIE1bits.ADTIE = 1;
 38076  01A95C  832A               	bsf	42,1,b	;volatile
 38077                           
 38078                           ; BSR set to: 14
 38079                           ;adcc.c: 112: ADCC_SetADTIInterruptHandler(ADCC_DefaultInterruptHandler);
 38080  01A95E  0E36               	movlw	low _ADCC_DefaultInterruptHandler
 38081  01A960  0101               	movlb	1	; () banked
 38082  01A962  6F4F               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler& (0+255),b
 38083  01A964  0EC0               	movlw	high _ADCC_DefaultInterruptHandler
 38084  01A966  6F50               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+1)& (0+255),b
 38085  01A968  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 38086  01A96A  6F51               	movwf	(ADCC_SetADTIInterruptHandler@InterruptHandler+2)& (0+255),b
 38087  01A96C  ECCA  F0DF         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 38088  01A970  0012               	return		;funcret
 38089  01A972                     __end_of_ADCC_Initialize:
 38090                           	opt stack 0
 38091                           tosu	equ	0xFFF
 38092                           tosh	equ	0xFFE
 38093                           tosl	equ	0xFFD
 38094                           pclath	equ	0xFFA
 38095                           tblptru	equ	0xFF8
 38096                           tblptrh	equ	0xFF7
 38097                           tblptrl	equ	0xFF6
 38098                           tablat	equ	0xFF5
 38099                           prodh	equ	0xFF4
 38100                           prodl	equ	0xFF3
 38101                           intcon	equ	0xFF2
 38102                           indf0	equ	0xFEF
 38103                           postinc0	equ	0xFEE
 38104                           fsr0h	equ	0xFEA
 38105                           fsr0l	equ	0xFE9
 38106                           wreg	equ	0xFE8
 38107                           indf1	equ	0xFE7
 38108                           postdec1	equ	0xFE5
 38109                           plusw1	equ	0xFE3
 38110                           fsr1h	equ	0xFE2
 38111                           fsr1l	equ	0xFE1
 38112                           indf2	equ	0xFDF
 38113                           postinc2	equ	0xFDE
 38114                           postdec2	equ	0xFDD
 38115                           plusw2	equ	0xFDB
 38116                           fsr2h	equ	0xFDA
 38117                           fsr2l	equ	0xFD9
 38118                           status	equ	0xFD8
 38119                           
 38120 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 38121 ;; Defined at:
 38122 ;;		line 310 in file "mcc_generated_files/adcc.c"
 38123 ;; Parameters:    Size  Location     Type
 38124 ;;  InterruptHan    3   79[BANK1 ] PTR FTN()void 
 38125 ;;		 -> ADC_PostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 38126 ;; Auto vars:     Size  Location     Type
 38127 ;;		None
 38128 ;; Return value:  Size  Location     Type
 38129 ;;                  1    wreg      void 
 38130 ;; Registers used:
 38131 ;;		wreg, status,2, status,0
 38132 ;; Tracked objects:
 38133 ;;		On entry : 0/0
 38134 ;;		On exit  : 0/0
 38135 ;;		Unchanged: 0/0
 38136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38137 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38140 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38141 ;;Total ram usage:        3 bytes
 38142 ;; Hardware stack levels used:    1
 38143 ;; Hardware stack levels required when called:   19
 38144 ;; This function calls:
 38145 ;;		Nothing
 38146 ;; This function is called by:
 38147 ;;		_ADCC_Initialize
 38148 ;;		_main
 38149 ;; This function uses a non-reentrant model
 38150 ;;
 38151                           
 38152                           	psect	text93
 38153  01BF94                     __ptext93:
 38154                           	opt stack 0
 38155  01BF94                     _ADCC_SetADTIInterruptHandler:
 38156                           	opt stack 9
 38157                           
 38158                           ;adcc.c: 311: ADCC_ADTI_InterruptHandler = InterruptHandler;
 38159                           
 38160                           ;incstack = 0
 38161  01BF94  C14F  F2D4         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler,_ADCC_ADTI_InterruptHandler
 38162  01BF98  C150  F2D5         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+1,_ADCC_ADTI_InterruptHandler+1
 38163  01BF9C  C151  F2D6         	movff	ADCC_SetADTIInterruptHandler@InterruptHandler+2,_ADCC_ADTI_InterruptHandler+2
 38164  01BFA0  0012               	return		;funcret
 38165  01BFA2                     __end_of_ADCC_SetADTIInterruptHandler:
 38166                           	opt stack 0
 38167                           tosu	equ	0xFFF
 38168                           tosh	equ	0xFFE
 38169                           tosl	equ	0xFFD
 38170                           pclath	equ	0xFFA
 38171                           tblptru	equ	0xFF8
 38172                           tblptrh	equ	0xFF7
 38173                           tblptrl	equ	0xFF6
 38174                           tablat	equ	0xFF5
 38175                           prodh	equ	0xFF4
 38176                           prodl	equ	0xFF3
 38177                           intcon	equ	0xFF2
 38178                           indf0	equ	0xFEF
 38179                           postinc0	equ	0xFEE
 38180                           fsr0h	equ	0xFEA
 38181                           fsr0l	equ	0xFE9
 38182                           wreg	equ	0xFE8
 38183                           indf1	equ	0xFE7
 38184                           postdec1	equ	0xFE5
 38185                           plusw1	equ	0xFE3
 38186                           fsr1h	equ	0xFE2
 38187                           fsr1l	equ	0xFE1
 38188                           indf2	equ	0xFDF
 38189                           postinc2	equ	0xFDE
 38190                           postdec2	equ	0xFDD
 38191                           plusw2	equ	0xFDB
 38192                           fsr2h	equ	0xFDA
 38193                           fsr2l	equ	0xFD9
 38194                           status	equ	0xFD8
 38195                           
 38196 ;; *************** function _OLED_Init *****************
 38197 ;; Defined at:
 38198 ;;		line 162 in file "oled.c"
 38199 ;; Parameters:    Size  Location     Type
 38200 ;;		None
 38201 ;; Auto vars:     Size  Location     Type
 38202 ;;		None
 38203 ;; Return value:  Size  Location     Type
 38204 ;;                  1    wreg      void 
 38205 ;; Registers used:
 38206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38207 ;; Tracked objects:
 38208 ;;		On entry : 0/0
 38209 ;;		On exit  : 0/0
 38210 ;;		Unchanged: 0/0
 38211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38216 ;;Total ram usage:        0 bytes
 38217 ;; Hardware stack levels used:    1
 38218 ;; Hardware stack levels required when called:   23
 38219 ;; This function calls:
 38220 ;;		_OLED_Command
 38221 ;; This function is called by:
 38222 ;;		_main
 38223 ;; This function uses a non-reentrant model
 38224 ;;
 38225                           
 38226                           	psect	text94
 38227  01A10A                     __ptext94:
 38228                           	opt stack 0
 38229  01A10A                     _OLED_Init:
 38230                           	opt stack 7
 38231                           
 38232                           ;oled.c: 164: OLED_Command(0xAE);
 38233                           
 38234                           ;incstack = 0
 38235  01A10A  0EAE               	movlw	174
 38236  01A10C  ECB9  F0D4         	call	_OLED_Command
 38237                           
 38238                           ;oled.c: 166: OLED_Command(0xD5);
 38239  01A110  0ED5               	movlw	213
 38240  01A112  ECB9  F0D4         	call	_OLED_Command
 38241                           
 38242                           ;oled.c: 168: OLED_Command(0x80);
 38243  01A116  0E80               	movlw	128
 38244  01A118  ECB9  F0D4         	call	_OLED_Command
 38245                           
 38246                           ;oled.c: 170: OLED_Command(0xA8);
 38247  01A11C  0EA8               	movlw	168
 38248  01A11E  ECB9  F0D4         	call	_OLED_Command
 38249                           
 38250                           ;oled.c: 172: OLED_Command(0x1F);
 38251  01A122  0E1F               	movlw	31
 38252  01A124  ECB9  F0D4         	call	_OLED_Command
 38253                           
 38254                           ;oled.c: 174: OLED_Command(0xD3);
 38255  01A128  0ED3               	movlw	211
 38256  01A12A  ECB9  F0D4         	call	_OLED_Command
 38257                           
 38258                           ;oled.c: 176: OLED_Command(0x0);
 38259  01A12E  0E00               	movlw	0
 38260  01A130  ECB9  F0D4         	call	_OLED_Command
 38261                           
 38262                           ;oled.c: 178: OLED_Command(0x40 | 0x0);
 38263  01A134  0E40               	movlw	64
 38264  01A136  ECB9  F0D4         	call	_OLED_Command
 38265                           
 38266                           ;oled.c: 180: OLED_Command(0x8D);
 38267  01A13A  0E8D               	movlw	141
 38268  01A13C  ECB9  F0D4         	call	_OLED_Command
 38269                           
 38270                           ;oled.c: 182: OLED_Command(0xAF);
 38271  01A140  0EAF               	movlw	175
 38272  01A142  ECB9  F0D4         	call	_OLED_Command
 38273                           
 38274                           ;oled.c: 184: OLED_Command(0x20);
 38275  01A146  0E20               	movlw	32
 38276  01A148  ECB9  F0D4         	call	_OLED_Command
 38277                           
 38278                           ;oled.c: 186: OLED_Command(0x00);
 38279  01A14C  0E00               	movlw	0
 38280  01A14E  ECB9  F0D4         	call	_OLED_Command
 38281                           
 38282                           ;oled.c: 188: OLED_Command(0xA0 | 0x1);
 38283  01A152  0EA1               	movlw	161
 38284  01A154  ECB9  F0D4         	call	_OLED_Command
 38285                           
 38286                           ;oled.c: 190: OLED_Command(0xC8);
 38287  01A158  0EC8               	movlw	200
 38288  01A15A  ECB9  F0D4         	call	_OLED_Command
 38289                           
 38290                           ;oled.c: 192: OLED_Command(0xDA);
 38291  01A15E  0EDA               	movlw	218
 38292  01A160  ECB9  F0D4         	call	_OLED_Command
 38293                           
 38294                           ;oled.c: 194: OLED_Command(0x02);
 38295  01A164  0E02               	movlw	2
 38296  01A166  ECB9  F0D4         	call	_OLED_Command
 38297                           
 38298                           ;oled.c: 196: OLED_Command(0x81);
 38299  01A16A  0E81               	movlw	129
 38300  01A16C  ECB9  F0D4         	call	_OLED_Command
 38301                           
 38302                           ;oled.c: 198: OLED_Command(0x8F);
 38303  01A170  0E8F               	movlw	143
 38304  01A172  ECB9  F0D4         	call	_OLED_Command
 38305                           
 38306                           ;oled.c: 200: OLED_Command(0xD9);
 38307  01A176  0ED9               	movlw	217
 38308  01A178  ECB9  F0D4         	call	_OLED_Command
 38309                           
 38310                           ;oled.c: 202: OLED_Command(0xF1);
 38311  01A17C  0EF1               	movlw	241
 38312  01A17E  ECB9  F0D4         	call	_OLED_Command
 38313                           
 38314                           ;oled.c: 204: OLED_Command(0xDB);
 38315  01A182  0EDB               	movlw	219
 38316  01A184  ECB9  F0D4         	call	_OLED_Command
 38317                           
 38318                           ;oled.c: 206: OLED_Command(0x40);
 38319  01A188  0E40               	movlw	64
 38320  01A18A  ECB9  F0D4         	call	_OLED_Command
 38321                           
 38322                           ;oled.c: 208: OLED_Command(0xA4);
 38323  01A18E  0EA4               	movlw	164
 38324  01A190  ECB9  F0D4         	call	_OLED_Command
 38325                           
 38326                           ;oled.c: 210: OLED_Command(0xA6);
 38327  01A194  0EA6               	movlw	166
 38328  01A196  ECB9  F0D4         	call	_OLED_Command
 38329                           
 38330                           ;oled.c: 212: OLED_Command(0xAF);
 38331  01A19A  0EAF               	movlw	175
 38332  01A19C  ECB9  F0D4         	call	_OLED_Command
 38333                           
 38334                           ;oled.c: 215: __nop();
 38335  01A1A0  F000               	nop	
 38336  01A1A2  0012               	return		;funcret
 38337  01A1A4                     __end_of_OLED_Init:
 38338                           	opt stack 0
 38339                           tosu	equ	0xFFF
 38340                           tosh	equ	0xFFE
 38341                           tosl	equ	0xFFD
 38342                           pclath	equ	0xFFA
 38343                           tblptru	equ	0xFF8
 38344                           tblptrh	equ	0xFF7
 38345                           tblptrl	equ	0xFF6
 38346                           tablat	equ	0xFF5
 38347                           prodh	equ	0xFF4
 38348                           prodl	equ	0xFF3
 38349                           intcon	equ	0xFF2
 38350                           indf0	equ	0xFEF
 38351                           postinc0	equ	0xFEE
 38352                           fsr0h	equ	0xFEA
 38353                           fsr0l	equ	0xFE9
 38354                           wreg	equ	0xFE8
 38355                           indf1	equ	0xFE7
 38356                           postdec1	equ	0xFE5
 38357                           plusw1	equ	0xFE3
 38358                           fsr1h	equ	0xFE2
 38359                           fsr1l	equ	0xFE1
 38360                           indf2	equ	0xFDF
 38361                           postinc2	equ	0xFDE
 38362                           postdec2	equ	0xFDD
 38363                           plusw2	equ	0xFDB
 38364                           fsr2h	equ	0xFDA
 38365                           fsr2l	equ	0xFD9
 38366                           status	equ	0xFD8
 38367                           
 38368 ;; *************** function _OLED_Command *****************
 38369 ;; Defined at:
 38370 ;;		line 110 in file "oled.c"
 38371 ;; Parameters:    Size  Location     Type
 38372 ;;  temp            1    wreg     unsigned char 
 38373 ;; Auto vars:     Size  Location     Type
 38374 ;;  temp            1    0[BANK2 ] unsigned char 
 38375 ;;  data_array      2    2[BANK2 ] unsigned char [2]
 38376 ;;  length          1    1[BANK2 ] unsigned char 
 38377 ;; Return value:  Size  Location     Type
 38378 ;;                  1    wreg      void 
 38379 ;; Registers used:
 38380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38381 ;; Tracked objects:
 38382 ;;		On entry : 0/0
 38383 ;;		On exit  : 0/0
 38384 ;;		Unchanged: 0/0
 38385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38387 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
 38388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38389 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
 38390 ;;Total ram usage:        4 bytes
 38391 ;; Hardware stack levels used:    1
 38392 ;; Hardware stack levels required when called:   22
 38393 ;; This function calls:
 38394 ;;		_I2C1_MasterWrite
 38395 ;; This function is called by:
 38396 ;;		_OLED_Init
 38397 ;;		_OLED_YX
 38398 ;; This function uses a non-reentrant model
 38399 ;;
 38400                           
 38401                           	psect	text95
 38402  01A972                     __ptext95:
 38403                           	opt stack 0
 38404  01A972                     _OLED_Command:
 38405                           	opt stack 3
 38406                           
 38407                           ;incstack = 0
 38408                           ;OLED_Command@temp stored from wreg
 38409  01A972  0102               	movlb	2	; () banked
 38410  01A974  6F00               	movwf	OLED_Command@temp& (0+255),b
 38411                           
 38412                           ;oled.c: 112: uint8_t length;
 38413                           ;oled.c: 114: uint8_t data_array[2];
 38414                           ;oled.c: 115: data_array[0] = 0x00;
 38415  01A976  0E00               	movlw	0
 38416  01A978  0102               	movlb	2	; () banked
 38417  01A97A  6F02               	movwf	OLED_Command@data_array& (0+255),b
 38418                           
 38419                           ; BSR set to: 2
 38420                           ;oled.c: 116: data_array[1] = temp;
 38421  01A97C  C200  F203         	movff	OLED_Command@temp,OLED_Command@data_array+1
 38422                           
 38423                           ; BSR set to: 2
 38424                           ;oled.c: 119: length = 2;
 38425  01A980  0E02               	movlw	2
 38426  01A982  6F01               	movwf	OLED_Command@length& (0+255),b
 38427                           
 38428                           ; BSR set to: 2
 38429                           ;oled.c: 121: I2C1_MasterWrite(data_array, length, (uint16_t) 0x3C, &OLED_I2C_Status);
 38430  01A984  0E02               	movlw	low OLED_Command@data_array
 38431  01A986  0101               	movlb	1	; () banked
 38432  01A988  6F58               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 38433  01A98A  0E02               	movlw	high OLED_Command@data_array
 38434  01A98C  6F59               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 38435  01A98E  C201  F15A         	movff	OLED_Command@length,I2C1_MasterWrite@length
 38436  01A992  0E00               	movlw	0
 38437  01A994  6F5C               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
 38438  01A996  0E3C               	movlw	60
 38439  01A998  6F5B               	movwf	I2C1_MasterWrite@address& (0+255),b
 38440  01A99A  0EAB               	movlw	low _OLED_I2C_Status
 38441  01A99C  6F5D               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 38442  01A99E  0E01               	movlw	high _OLED_I2C_Status
 38443  01A9A0  6F5E               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 38444  01A9A2  ECB9  F0D7         	call	_I2C1_MasterWrite	;wreg free
 38445  01A9A6  0E02               	movlw	2
 38446  01A9A8  0101               	movlb	1	; () banked
 38447  01A9AA  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 38448  01A9AC  B4D8               	btfsc	status,2,c
 38449  01A9AE  D7FB               	goto	l1888
 38450                           
 38451                           ; BSR set to: 1
 38452                           ;oled.c: 125: if ( OLED_I2C_Status == I2C1_MESSAGE_FAIL ||
 38453                           ;oled.c: 126: OLED_I2C_Status == I2C1_STUCK_START ||
 38454                           ;oled.c: 127: OLED_I2C_Status == I2C1_MESSAGE_ADDRESS_NO_ACK ||
 38455                           ;oled.c: 128: OLED_I2C_Status == I2C1_DATA_NO_ACK ||
 38456                           ;oled.c: 129: OLED_I2C_Status == I2C1_LOST_STATE ) {
 38457                           
 38458                           ; BSR set to: 1
 38459  01A9B0  05AB               	decf	_OLED_I2C_Status& (0+255),w,b
 38460  01A9B2  B4D8               	btfsc	status,2,c
 38461  01A9B4  D010               	goto	u20070
 38462                           
 38463                           ; BSR set to: 1
 38464  01A9B6  0E03               	movlw	3
 38465  01A9B8  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 38466  01A9BA  B4D8               	btfsc	status,2,c
 38467  01A9BC  D00C               	goto	u20070
 38468                           
 38469                           ; BSR set to: 1
 38470  01A9BE  0E04               	movlw	4
 38471  01A9C0  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 38472  01A9C2  B4D8               	btfsc	status,2,c
 38473  01A9C4  D008               	goto	u20070
 38474                           
 38475                           ; BSR set to: 1
 38476  01A9C6  0E05               	movlw	5
 38477  01A9C8  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 38478  01A9CA  B4D8               	btfsc	status,2,c
 38479  01A9CC  D004               	goto	u20070
 38480                           
 38481                           ; BSR set to: 1
 38482  01A9CE  0E06               	movlw	6
 38483  01A9D0  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 38484  01A9D2  A4D8               	btfss	status,2,c
 38485  01A9D4  0012               	return	
 38486  01A9D6                     u20070:
 38487                           
 38488                           ; BSR set to: 1
 38489                           ;oled.c: 130: error_handler.I2C_COMM_error_flag = 1;
 38490                           
 38491                           ; BSR set to: 1
 38492  01A9D6  0E01               	movlw	1
 38493  01A9D8  6F67               	movwf	(_error_handler+7)& (0+255),b
 38494  01A9DA  0012               	return	
 38495  01A9DC                     __end_of_OLED_Command:
 38496                           	opt stack 0
 38497                           tosu	equ	0xFFF
 38498                           tosh	equ	0xFFE
 38499                           tosl	equ	0xFFD
 38500                           pclath	equ	0xFFA
 38501                           tblptru	equ	0xFF8
 38502                           tblptrh	equ	0xFF7
 38503                           tblptrl	equ	0xFF6
 38504                           tablat	equ	0xFF5
 38505                           prodh	equ	0xFF4
 38506                           prodl	equ	0xFF3
 38507                           intcon	equ	0xFF2
 38508                           indf0	equ	0xFEF
 38509                           postinc0	equ	0xFEE
 38510                           fsr0h	equ	0xFEA
 38511                           fsr0l	equ	0xFE9
 38512                           wreg	equ	0xFE8
 38513                           indf1	equ	0xFE7
 38514                           postdec1	equ	0xFE5
 38515                           plusw1	equ	0xFE3
 38516                           fsr1h	equ	0xFE2
 38517                           fsr1l	equ	0xFE1
 38518                           indf2	equ	0xFDF
 38519                           postinc2	equ	0xFDE
 38520                           postdec2	equ	0xFDD
 38521                           plusw2	equ	0xFDB
 38522                           fsr2h	equ	0xFDA
 38523                           fsr2l	equ	0xFD9
 38524                           status	equ	0xFD8
 38525                           
 38526 ;; *************** function _I2C1_MasterWrite *****************
 38527 ;; Defined at:
 38528 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 38529 ;; Parameters:    Size  Location     Type
 38530 ;;  pdata           2   88[BANK1 ] PTR unsigned char 
 38531 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), 
 38532 ;;  length          1   90[BANK1 ] unsigned char 
 38533 ;;  address         2   91[BANK1 ] unsigned int 
 38534 ;;  pflag           2   93[BANK1 ] PTR enum E17311
 38535 ;;		 -> OLED_I2C_Status(1), 
 38536 ;; Auto vars:     Size  Location     Type
 38537 ;;		None
 38538 ;; Return value:  Size  Location     Type
 38539 ;;                  1    wreg      void 
 38540 ;; Registers used:
 38541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38542 ;; Tracked objects:
 38543 ;;		On entry : 0/0
 38544 ;;		On exit  : 0/0
 38545 ;;		Unchanged: 0/0
 38546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38547 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38550 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38551 ;;Total ram usage:        7 bytes
 38552 ;; Hardware stack levels used:    1
 38553 ;; Hardware stack levels required when called:   21
 38554 ;; This function calls:
 38555 ;;		_I2C1_MasterTRBInsert
 38556 ;;		_I2C1_MasterWriteTRBBuild
 38557 ;; This function is called by:
 38558 ;;		_OLED_Command
 38559 ;;		_OLED_PutChar
 38560 ;;		_OLED_Data
 38561 ;; This function uses a non-reentrant model
 38562 ;;
 38563                           
 38564                           	psect	text96
 38565  01AF72                     __ptext96:
 38566                           	opt stack 0
 38567  01AF72                     _I2C1_MasterWrite:
 38568                           	opt stack 3
 38569                           
 38570                           ;i2c1.c: 606: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 38571                           ;i2c1.c: 609: if (i2c1_object.trStatus.s.full != 1)
 38572                           
 38573                           ; BSR set to: 1
 38574                           ;incstack = 0
 38575  01AF72  0101               	movlb	1	; () banked
 38576  01AF74  B16D               	btfsc	(_i2c1_object+4)& (0+255),0,b
 38577  01AF76  D01D               	goto	l1117
 38578                           
 38579                           ; BSR set to: 1
 38580                           ;i2c1.c: 610: {
 38581                           ;i2c1.c: 611: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 38582  01AF78  0EE4               	movlw	low I2C1_MasterWrite@trBlock
 38583  01AF7A  6F4F               	movwf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),b
 38584  01AF7C  0E02               	movlw	high I2C1_MasterWrite@trBlock
 38585  01AF7E  6F50               	movwf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),b
 38586  01AF80  C158  F151         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
 38587  01AF84  C159  F152         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
 38588  01AF88  C15A  F153         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
 38589  01AF8C  C15B  F154         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
 38590  01AF90  C15C  F155         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
 38591  01AF94  EC79  F0D9         	call	_I2C1_MasterWriteTRBBuild	;wreg free
 38592                           
 38593                           ;i2c1.c: 612: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 38594  01AF98  0EE4               	movlw	low I2C1_MasterWrite@trBlock
 38595  01AF9A  0101               	movlb	1	; () banked
 38596  01AF9C  6F4F               	movwf	I2C1_MasterTRBInsert@ptrb_list& (0+255),b
 38597  01AF9E  0E02               	movlw	high I2C1_MasterWrite@trBlock
 38598  01AFA0  6F50               	movwf	(I2C1_MasterTRBInsert@ptrb_list+1)& (0+255),b
 38599  01AFA2  C15D  F151         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
 38600  01AFA6  C15E  F152         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
 38601  01AFAA  0E01               	movlw	1
 38602  01AFAC  ECE3  F0CF         	call	_I2C1_MasterTRBInsert
 38603                           
 38604                           ;i2c1.c: 613: }
 38605  01AFB0  0012               	return	
 38606  01AFB2                     l1117:
 38607                           
 38608                           ;i2c1.c: 614: else
 38609                           ;i2c1.c: 615: {
 38610                           ;i2c1.c: 616: *pflag = I2C1_MESSAGE_FAIL;
 38611  01AFB2  C15D  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
 38612  01AFB6  C15E  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
 38613  01AFBA  0E01               	movlw	1
 38614  01AFBC  6EDF               	movwf	indf2,c
 38615  01AFBE  0012               	return	
 38616  01AFC0                     __end_of_I2C1_MasterWrite:
 38617                           	opt stack 0
 38618                           tosu	equ	0xFFF
 38619                           tosh	equ	0xFFE
 38620                           tosl	equ	0xFFD
 38621                           pclath	equ	0xFFA
 38622                           tblptru	equ	0xFF8
 38623                           tblptrh	equ	0xFF7
 38624                           tblptrl	equ	0xFF6
 38625                           tablat	equ	0xFF5
 38626                           prodh	equ	0xFF4
 38627                           prodl	equ	0xFF3
 38628                           intcon	equ	0xFF2
 38629                           indf0	equ	0xFEF
 38630                           postinc0	equ	0xFEE
 38631                           fsr0h	equ	0xFEA
 38632                           fsr0l	equ	0xFE9
 38633                           wreg	equ	0xFE8
 38634                           indf1	equ	0xFE7
 38635                           postdec1	equ	0xFE5
 38636                           plusw1	equ	0xFE3
 38637                           fsr1h	equ	0xFE2
 38638                           fsr1l	equ	0xFE1
 38639                           indf2	equ	0xFDF
 38640                           postinc2	equ	0xFDE
 38641                           postdec2	equ	0xFDD
 38642                           plusw2	equ	0xFDB
 38643                           fsr2h	equ	0xFDA
 38644                           fsr2l	equ	0xFD9
 38645                           status	equ	0xFD8
 38646                           
 38647 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 38648 ;; Defined at:
 38649 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 38650 ;; Parameters:    Size  Location     Type
 38651 ;;  ptrb            2   79[BANK1 ] PTR struct .
 38652 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 38653 ;;  pdata           2   81[BANK1 ] PTR unsigned char 
 38654 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), 
 38655 ;;  length          1   83[BANK1 ] unsigned char 
 38656 ;;  address         2   84[BANK1 ] unsigned int 
 38657 ;; Auto vars:     Size  Location     Type
 38658 ;;		None
 38659 ;; Return value:  Size  Location     Type
 38660 ;;                  1    wreg      void 
 38661 ;; Registers used:
 38662 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38663 ;; Tracked objects:
 38664 ;;		On entry : 0/0
 38665 ;;		On exit  : 0/0
 38666 ;;		Unchanged: 0/0
 38667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38668 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38670 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38671 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38672 ;;Total ram usage:        9 bytes
 38673 ;; Hardware stack levels used:    1
 38674 ;; Hardware stack levels required when called:   19
 38675 ;; This function calls:
 38676 ;;		Nothing
 38677 ;; This function is called by:
 38678 ;;		_I2C1_MasterWrite
 38679 ;; This function uses a non-reentrant model
 38680 ;;
 38681                           
 38682                           	psect	text97
 38683  01B2F2                     __ptext97:
 38684                           	opt stack 0
 38685  01B2F2                     _I2C1_MasterWriteTRBBuild:
 38686                           	opt stack 4
 38687                           
 38688                           ;i2c1.c: 727: ptrb->address = address << 1;
 38689                           
 38690                           ;incstack = 0
 38691  01B2F2  C154  F156         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 38692  01B2F6  C155  F157         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 38693  01B2FA  90D8               	bcf	status,0,c
 38694  01B2FC  0101               	movlb	1	; () banked
 38695  01B2FE  3756               	rlcf	??_I2C1_MasterWriteTRBBuild& (0+255),f,b
 38696  01B300  3757               	rlcf	(??_I2C1_MasterWriteTRBBuild+1)& (0+255),f,b
 38697  01B302  C14F  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 38698  01B306  C150  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 38699  01B30A  C156  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 38700  01B30E  C157  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 38701                           
 38702                           ; BSR set to: 1
 38703                           ;i2c1.c: 728: ptrb->length = length;
 38704  01B312  EE20 F002          	lfsr	2,2
 38705  01B316  514F               	movf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),w,b
 38706  01B318  26D9               	addwf	fsr2l,f,c
 38707  01B31A  5150               	movf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 38708  01B31C  22DA               	addwfc	fsr2h,f,c
 38709  01B31E  C153  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 38710                           
 38711                           ; BSR set to: 1
 38712                           ;i2c1.c: 729: ptrb->pbuffer = pdata;
 38713  01B322  EE20 F003          	lfsr	2,3
 38714  01B326  514F               	movf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),w,b
 38715  01B328  26D9               	addwf	fsr2l,f,c
 38716  01B32A  5150               	movf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 38717  01B32C  22DA               	addwfc	fsr2h,f,c
 38718  01B32E  C151  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 38719  01B332  C152  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 38720                           
 38721                           ; BSR set to: 1
 38722  01B336  0012               	return		;funcret
 38723  01B338                     __end_of_I2C1_MasterWriteTRBBuild:
 38724                           	opt stack 0
 38725                           tosu	equ	0xFFF
 38726                           tosh	equ	0xFFE
 38727                           tosl	equ	0xFFD
 38728                           pclath	equ	0xFFA
 38729                           tblptru	equ	0xFF8
 38730                           tblptrh	equ	0xFF7
 38731                           tblptrl	equ	0xFF6
 38732                           tablat	equ	0xFF5
 38733                           prodh	equ	0xFF4
 38734                           prodl	equ	0xFF3
 38735                           intcon	equ	0xFF2
 38736                           indf0	equ	0xFEF
 38737                           postinc0	equ	0xFEE
 38738                           fsr0h	equ	0xFEA
 38739                           fsr0l	equ	0xFE9
 38740                           wreg	equ	0xFE8
 38741                           indf1	equ	0xFE7
 38742                           postdec1	equ	0xFE5
 38743                           plusw1	equ	0xFE3
 38744                           fsr1h	equ	0xFE2
 38745                           fsr1l	equ	0xFE1
 38746                           indf2	equ	0xFDF
 38747                           postinc2	equ	0xFDE
 38748                           postdec2	equ	0xFDD
 38749                           plusw2	equ	0xFDB
 38750                           fsr2h	equ	0xFDA
 38751                           fsr2l	equ	0xFD9
 38752                           status	equ	0xFD8
 38753                           
 38754 ;; *************** function _I2C1_MasterTRBInsert *****************
 38755 ;; Defined at:
 38756 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 38757 ;; Parameters:    Size  Location     Type
 38758 ;;  count           1    wreg     unsigned char 
 38759 ;;  ptrb_list       2   79[BANK1 ] PTR struct .
 38760 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 38761 ;;  pflag           2   81[BANK1 ] PTR enum E17311
 38762 ;;		 -> OLED_I2C_Status(1), 
 38763 ;; Auto vars:     Size  Location     Type
 38764 ;;  count           1   84[BANK1 ] unsigned char 
 38765 ;; Return value:  Size  Location     Type
 38766 ;;                  1    wreg      void 
 38767 ;; Registers used:
 38768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38769 ;; Tracked objects:
 38770 ;;		On entry : 0/0
 38771 ;;		On exit  : 0/0
 38772 ;;		Unchanged: 0/0
 38773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38774 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38775 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38776 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38777 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38778 ;;Total ram usage:        6 bytes
 38779 ;; Hardware stack levels used:    1
 38780 ;; Hardware stack levels required when called:   20
 38781 ;; This function calls:
 38782 ;;		_I2C1_WaitForLastPacketToComplete
 38783 ;; This function is called by:
 38784 ;;		_I2C1_MasterWrite
 38785 ;;		_I2C1_MasterRead
 38786 ;; This function uses a non-reentrant model
 38787 ;;
 38788                           
 38789                           	psect	text98
 38790  019FC6                     __ptext98:
 38791                           	opt stack 0
 38792  019FC6                     _I2C1_MasterTRBInsert:
 38793                           	opt stack 3
 38794                           
 38795                           ; BSR set to: 1
 38796                           ;incstack = 0
 38797                           ;I2C1_MasterTRBInsert@count stored from wreg
 38798  019FC6  0101               	movlb	1	; () banked
 38799  019FC8  6F54               	movwf	I2C1_MasterTRBInsert@count& (0+255),b
 38800                           
 38801                           ;i2c1.c: 661: if (i2c1_object.trStatus.s.full != 1)
 38802  019FCA  0101               	movlb	1	; () banked
 38803  019FCC  B16D               	btfsc	(_i2c1_object+4)& (0+255),0,b
 38804  019FCE  D039               	goto	l1135
 38805                           
 38806                           ; BSR set to: 1
 38807                           ;i2c1.c: 662: {
 38808                           ;i2c1.c: 663: *pflag = I2C1_MESSAGE_PENDING;
 38809  019FD0  C151  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 38810  019FD4  C152  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 38811  019FD8  0E02               	movlw	2
 38812  019FDA  6EDF               	movwf	indf2,c
 38813                           
 38814                           ; BSR set to: 1
 38815                           ;i2c1.c: 665: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 38816  019FDC  EE20 F001          	lfsr	2,1
 38817  019FE0  5169               	movf	_i2c1_object& (0+255),w,b
 38818  019FE2  26D9               	addwf	fsr2l,f,c
 38819  019FE4  516A               	movf	(_i2c1_object+1)& (0+255),w,b
 38820  019FE6  22DA               	addwfc	fsr2h,f,c
 38821  019FE8  C14F  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 38822  019FEC  C150  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 38823                           
 38824                           ; BSR set to: 1
 38825                           ;i2c1.c: 666: i2c1_object.pTrTail->count = count;
 38826  019FF0  C169  FFD9         	movff	_i2c1_object,fsr2l
 38827  019FF4  C16A  FFDA         	movff	_i2c1_object+1,fsr2h
 38828  019FF8  C154  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 38829                           
 38830                           ; BSR set to: 1
 38831                           ;i2c1.c: 667: i2c1_object.pTrTail->pTrFlag = pflag;
 38832  019FFC  EE20 F003          	lfsr	2,3
 38833  01A000  5169               	movf	_i2c1_object& (0+255),w,b
 38834  01A002  26D9               	addwf	fsr2l,f,c
 38835  01A004  516A               	movf	(_i2c1_object+1)& (0+255),w,b
 38836  01A006  22DA               	addwfc	fsr2h,f,c
 38837  01A008  C151  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 38838  01A00C  C152  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 38839                           
 38840                           ; BSR set to: 1
 38841                           ;i2c1.c: 668: i2c1_object.pTrTail++;
 38842  01A010  0E05               	movlw	5
 38843  01A012  2769               	addwf	_i2c1_object& (0+255),f,b
 38844  01A014  0E00               	movlw	0
 38845  01A016  236A               	addwfc	(_i2c1_object+1)& (0+255),f,b
 38846                           
 38847                           ; BSR set to: 1
 38848                           ;i2c1.c: 671: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 38849  01A018  0EEE               	movlw	low (_i2c1_tr_queue+5)
 38850  01A01A  1969               	xorwf	_i2c1_object& (0+255),w,b
 38851  01A01C  E108               	bnz	l14917
 38852  01A01E  0E02               	movlw	high (_i2c1_tr_queue+5)
 38853  01A020  196A               	xorwf	(_i2c1_object+1)& (0+255),w,b
 38854  01A022  A4D8               	btfss	status,2,c
 38855  01A024  D004               	goto	l1136
 38856                           
 38857                           ; BSR set to: 1
 38858                           ;i2c1.c: 672: {
 38859                           ;i2c1.c: 674: i2c1_object.pTrTail = i2c1_tr_queue;
 38860  01A026  0EE9               	movlw	low _i2c1_tr_queue
 38861  01A028  6F69               	movwf	_i2c1_object& (0+255),b
 38862  01A02A  0E02               	movlw	high _i2c1_tr_queue
 38863  01A02C  6F6A               	movwf	(_i2c1_object+1)& (0+255),b
 38864  01A02E                     l1136:
 38865  01A02E                     l14917:
 38866                           
 38867                           ; BSR set to: 1
 38868                           ;i2c1.c: 675: }
 38869                           ;i2c1.c: 679: i2c1_object.trStatus.s.empty = 0;
 38870  01A02E  936D               	bcf	(_i2c1_object+4)& (0+255),1,b
 38871                           
 38872                           ;i2c1.c: 682: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 38873  01A030  5169               	movf	_i2c1_object& (0+255),w,b
 38874  01A032  196B               	xorwf	(_i2c1_object+2)& (0+255),w,b
 38875  01A034  E10C               	bnz	l14923
 38876  01A036  516A               	movf	(_i2c1_object+1)& (0+255),w,b
 38877  01A038  196C               	xorwf	(_i2c1_object+3)& (0+255),w,b
 38878  01A03A  A4D8               	btfss	status,2,c
 38879  01A03C  D008               	goto	l1138
 38880                           
 38881                           ; BSR set to: 1
 38882                           ;i2c1.c: 683: {
 38883                           ;i2c1.c: 685: i2c1_object.trStatus.s.full = 1;
 38884  01A03E  816D               	bsf	(_i2c1_object+4)& (0+255),0,b
 38885                           
 38886                           ; BSR set to: 1
 38887                           ;i2c1.c: 686: }
 38888                           ;i2c1.c: 688: }
 38889  01A040  D006               	goto	l1138
 38890  01A042                     l1135:
 38891                           
 38892                           ; BSR set to: 1
 38893                           ;i2c1.c: 689: else
 38894                           ;i2c1.c: 690: {
 38895                           ;i2c1.c: 691: *pflag = I2C1_MESSAGE_FAIL;
 38896                           
 38897                           ; BSR set to: 1
 38898  01A042  C151  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 38899  01A046  C152  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 38900  01A04A  0E01               	movlw	1
 38901  01A04C  6EDF               	movwf	indf2,c
 38902  01A04E                     l1138:
 38903  01A04E                     l14923:
 38904                           
 38905                           ; BSR set to: 1
 38906                           ;i2c1.c: 692: }
 38907                           ;i2c1.c: 695: if (*pflag == I2C1_MESSAGE_PENDING)
 38908  01A04E  C151  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 38909  01A052  C152  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 38910  01A056  0E02               	movlw	2
 38911  01A058  18DE               	xorwf	postinc2,w,c
 38912  01A05A  A4D8               	btfss	status,2,c
 38913  01A05C  0012               	return	
 38914                           
 38915                           ; BSR set to: 1
 38916                           ;i2c1.c: 696: {
 38917                           ;i2c1.c: 697: I2C1_WaitForLastPacketToComplete();
 38918  01A05E  ECE4  F0DF         	call	_I2C1_WaitForLastPacketToComplete	;wreg free
 38919                           
 38920                           ;i2c1.c: 702: PIR3bits.SSP1IF = 1;
 38921  01A062  010E               	movlb	14	; () banked
 38922  01A064  8136               	bsf	54,0,b	;volatile
 38923  01A066  0012               	return	
 38924  01A068                     __end_of_I2C1_MasterTRBInsert:
 38925                           	opt stack 0
 38926                           tosu	equ	0xFFF
 38927                           tosh	equ	0xFFE
 38928                           tosl	equ	0xFFD
 38929                           pclath	equ	0xFFA
 38930                           tblptru	equ	0xFF8
 38931                           tblptrh	equ	0xFF7
 38932                           tblptrl	equ	0xFF6
 38933                           tablat	equ	0xFF5
 38934                           prodh	equ	0xFF4
 38935                           prodl	equ	0xFF3
 38936                           intcon	equ	0xFF2
 38937                           indf0	equ	0xFEF
 38938                           postinc0	equ	0xFEE
 38939                           fsr0h	equ	0xFEA
 38940                           fsr0l	equ	0xFE9
 38941                           wreg	equ	0xFE8
 38942                           indf1	equ	0xFE7
 38943                           postdec1	equ	0xFE5
 38944                           plusw1	equ	0xFE3
 38945                           fsr1h	equ	0xFE2
 38946                           fsr1l	equ	0xFE1
 38947                           indf2	equ	0xFDF
 38948                           postinc2	equ	0xFDE
 38949                           postdec2	equ	0xFDD
 38950                           plusw2	equ	0xFDB
 38951                           fsr2h	equ	0xFDA
 38952                           fsr2l	equ	0xFD9
 38953                           status	equ	0xFD8
 38954                           
 38955 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 38956 ;; Defined at:
 38957 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 38958 ;; Parameters:    Size  Location     Type
 38959 ;;		None
 38960 ;; Auto vars:     Size  Location     Type
 38961 ;;		None
 38962 ;; Return value:  Size  Location     Type
 38963 ;;                  1    wreg      void 
 38964 ;; Registers used:
 38965 ;;		wreg, status,2
 38966 ;; Tracked objects:
 38967 ;;		On entry : 0/0
 38968 ;;		On exit  : 0/0
 38969 ;;		Unchanged: 0/0
 38970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 38971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38975 ;;Total ram usage:        0 bytes
 38976 ;; Hardware stack levels used:    1
 38977 ;; Hardware stack levels required when called:   19
 38978 ;; This function calls:
 38979 ;;		Nothing
 38980 ;; This function is called by:
 38981 ;;		_I2C1_MasterTRBInsert
 38982 ;; This function uses a non-reentrant model
 38983 ;;
 38984                           
 38985                           	psect	text99
 38986  01BFC8                     __ptext99:
 38987                           	opt stack 0
 38988  01BFC8                     _I2C1_WaitForLastPacketToComplete:
 38989                           	opt stack 3
 38990                           
 38991                           ;i2c1.c: 647: {
 38992                           
 38993                           ;i2c1.c: 646: while(i2c1_state != S_MASTER_IDLE)
 38994                           
 38995                           ;incstack = 0
 38996  01BFC8  0101               	movlb	1	; () banked
 38997  01BFCA  51A1               	movf	_i2c1_state& (0+255),w,b
 38998  01BFCC  B4D8               	btfsc	status,2,c
 38999  01BFCE  0012               	return	
 39000  01BFD0  D7FB               	goto	_I2C1_WaitForLastPacketToComplete
 39001  01BFD2                     __end_of_I2C1_WaitForLastPacketToComplete:
 39002                           	opt stack 0
 39003                           tosu	equ	0xFFF
 39004                           tosh	equ	0xFFE
 39005                           tosl	equ	0xFFD
 39006                           pclath	equ	0xFFA
 39007                           tblptru	equ	0xFF8
 39008                           tblptrh	equ	0xFF7
 39009                           tblptrl	equ	0xFF6
 39010                           tablat	equ	0xFF5
 39011                           prodh	equ	0xFF4
 39012                           prodl	equ	0xFF3
 39013                           intcon	equ	0xFF2
 39014                           indf0	equ	0xFEF
 39015                           postinc0	equ	0xFEE
 39016                           fsr0h	equ	0xFEA
 39017                           fsr0l	equ	0xFE9
 39018                           wreg	equ	0xFE8
 39019                           indf1	equ	0xFE7
 39020                           postdec1	equ	0xFE5
 39021                           plusw1	equ	0xFE3
 39022                           fsr1h	equ	0xFE2
 39023                           fsr1l	equ	0xFE1
 39024                           indf2	equ	0xFDF
 39025                           postinc2	equ	0xFDE
 39026                           postdec2	equ	0xFDD
 39027                           plusw2	equ	0xFDB
 39028                           fsr2h	equ	0xFDA
 39029                           fsr2l	equ	0xFD9
 39030                           status	equ	0xFD8
 39031                           
 39032 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 39033 ;; Defined at:
 39034 ;;		line 139 in file "mcc_generated_files/interrupt_manager.c"
 39035 ;; Parameters:    Size  Location     Type
 39036 ;;		None
 39037 ;; Auto vars:     Size  Location     Type
 39038 ;;		None
 39039 ;; Return value:  Size  Location     Type
 39040 ;;                  1    wreg      void 
 39041 ;; Registers used:
 39042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 39043 ;; Tracked objects:
 39044 ;;		On entry : 0/0
 39045 ;;		On exit  : 0/0
 39046 ;;		Unchanged: 0/0
 39047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39050 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39051 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39052 ;;Total ram usage:       21 bytes
 39053 ;; Hardware stack levels used:    1
 39054 ;; Hardware stack levels required when called:   18
 39055 ;; This function calls:
 39056 ;;		Absolute function
 39057 ;;		_EUSART2_Transmit_ISR
 39058 ;;		_TMR2_ISR
 39059 ;;		_TMR6_ISR
 39060 ;;		_TMR7_ISR
 39061 ;; This function is called by:
 39062 ;;		Interrupt level 1
 39063 ;; This function uses a non-reentrant model
 39064 ;;
 39065                           
 39066                           	psect	intcodelo
 39067  000018                     __pintcodelo:
 39068                           	opt stack 0
 39069  000018                     _INTERRUPT_InterruptManagerLow:
 39070                           	opt stack 3
 39071                           
 39072                           ; BSR set to: 1
 39073                           ;incstack = 0
 39074  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 39075  00001A  CFD8 F13A          	movff	status,??_INTERRUPT_InterruptManagerLow
 39076  00001E  CFE8 F13B          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 39077  000022  CFE0 F13C          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 39078  000026  CFFA F13D          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 39079  00002A  CFFB F13E          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 39080  00002E  CFE9 F13F          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 39081  000032  CFEA F140          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 39082  000036  CFE1 F141          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 39083  00003A  CFE2 F142          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 39084  00003E  CFD9 F143          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 39085  000042  CFDA F144          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 39086  000046  CFF3 F145          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 39087  00004A  CFF4 F146          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 39088  00004E  CFF6 F147          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 39089  000052  CFF7 F148          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 39090  000056  CFF8 F149          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 39091  00005A  CFF5 F14A          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 39092  00005E  C05F  F14B         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 39093  000062  C060  F14C         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 39094  000066  C061  F14D         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 39095  00006A  C062  F14E         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 39096                           
 39097                           ;interrupt_manager.c: 142: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 39098  00006E  010E               	movlb	14	; () banked
 39099  000070  BB2E               	btfsc	46,5,b	;volatile
 39100                           
 39101                           ; BSR set to: 14
 39102  000072  AB38               	btfss	56,5,b	;volatile
 39103  000074  D003               	goto	i1l271
 39104                           
 39105                           ; BSR set to: 14
 39106                           ;interrupt_manager.c: 143: {
 39107                           ;interrupt_manager.c: 144: TMR6_ISR();
 39108  000076  EC55  F0DD         	call	_TMR6_ISR	;wreg free
 39109                           
 39110                           ;interrupt_manager.c: 145: }
 39111  00007A  D01B               	goto	i1l277
 39112  00007C                     i1l271:
 39113                           
 39114                           ; BSR set to: 14
 39115                           ;interrupt_manager.c: 146: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 39116  00007C  BD2C               	btfsc	44,6,b	;volatile
 39117                           
 39118                           ; BSR set to: 14
 39119  00007E  AD36               	btfss	54,6,b	;volatile
 39120  000080  D00D               	goto	i1l273
 39121                           
 39122                           ; BSR set to: 14
 39123                           ;interrupt_manager.c: 147: {
 39124                           ;interrupt_manager.c: 148: EUSART2_TxDefaultInterruptHandler();
 39125  000082  D801               	call	i1u3718_28
 39126  000084  D016               	goto	i1l277
 39127  000086                     i1u3718_28:
 39128  000086  0005               	push	
 39129  000088  6EFA               	movwf	pclath,c
 39130  00008A  0102               	movlb	2	; () banked
 39131  00008C  51DA               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 39132  00008E  6EFD               	movwf	tosl,c
 39133  000090  51DB               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 39134  000092  6EFE               	movwf	tosh,c
 39135  000094  51DC               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 39136  000096  6EFF               	movwf	tosu,c
 39137  000098  50FA               	movf	pclath,w,c
 39138  00009A  0012               	return		;indir
 39139  00009C                     i1l273:
 39140                           
 39141                           ; BSR set to: 14
 39142                           ;interrupt_manager.c: 150: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 39143  00009C  BD2E               	btfsc	46,6,b	;volatile
 39144                           
 39145                           ; BSR set to: 14
 39146  00009E  AD38               	btfss	56,6,b	;volatile
 39147  0000A0  D003               	goto	i1l275
 39148                           
 39149                           ; BSR set to: 14
 39150                           ;interrupt_manager.c: 151: {
 39151                           ;interrupt_manager.c: 152: TMR7_ISR();
 39152  0000A2  EC38  F0DC         	call	_TMR7_ISR	;wreg free
 39153                           
 39154                           ;interrupt_manager.c: 153: }
 39155  0000A6  D005               	goto	i1l277
 39156  0000A8                     i1l275:
 39157                           
 39158                           ; BSR set to: 14
 39159                           ;interrupt_manager.c: 154: else if(PIE5bits.TMR2IE == 1 && PIR5bits.TMR2IF == 1)
 39160  0000A8  B32E               	btfsc	46,1,b	;volatile
 39161                           
 39162                           ; BSR set to: 14
 39163  0000AA  A338               	btfss	56,1,b	;volatile
 39164  0000AC  D002               	goto	i1l277
 39165                           
 39166                           ; BSR set to: 14
 39167                           ;interrupt_manager.c: 155: {
 39168                           ;interrupt_manager.c: 156: TMR2_ISR();
 39169  0000AE  ECA3  F0DD         	call	_TMR2_ISR	;wreg free
 39170  0000B2                     i1l277:
 39171                           
 39172                           ;interrupt_manager.c: 158: else
 39173                           ;interrupt_manager.c: 159: {
 39174  0000B2  C14E  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 39175  0000B6  C14D  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 39176  0000BA  C14C  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 39177  0000BE  C14B  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 39178  0000C2  C14A  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 39179  0000C6  C149  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 39180  0000CA  C148  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 39181  0000CE  C147  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 39182  0000D2  C146  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 39183  0000D6  C145  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 39184  0000DA  C144  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 39185  0000DE  C143  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 39186  0000E2  C142  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 39187  0000E6  C141  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 39188  0000EA  C140  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 39189  0000EE  C13F  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 39190  0000F2  C13E  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 39191  0000F6  C13D  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 39192  0000FA  C13C  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 39193  0000FE  C13B  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 39194  000102  C13A  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 39195  000106  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 39196  000108  0010               	retfie	
 39197  00010A                     __end_of_INTERRUPT_InterruptManagerLow:
 39198                           	opt stack 0
 39199                           tosu	equ	0xFFF
 39200                           tosh	equ	0xFFE
 39201                           tosl	equ	0xFFD
 39202                           pclatu	equ	0xFFB
 39203                           pclath	equ	0xFFA
 39204                           tblptru	equ	0xFF8
 39205                           tblptrh	equ	0xFF7
 39206                           tblptrl	equ	0xFF6
 39207                           tablat	equ	0xFF5
 39208                           prodh	equ	0xFF4
 39209                           prodl	equ	0xFF3
 39210                           intcon	equ	0xFF2
 39211                           indf0	equ	0xFEF
 39212                           postinc0	equ	0xFEE
 39213                           fsr0h	equ	0xFEA
 39214                           fsr0l	equ	0xFE9
 39215                           wreg	equ	0xFE8
 39216                           indf1	equ	0xFE7
 39217                           postdec1	equ	0xFE5
 39218                           plusw1	equ	0xFE3
 39219                           fsr1h	equ	0xFE2
 39220                           fsr1l	equ	0xFE1
 39221                           bsr	equ	0xFE0
 39222                           indf2	equ	0xFDF
 39223                           postinc2	equ	0xFDE
 39224                           postdec2	equ	0xFDD
 39225                           plusw2	equ	0xFDB
 39226                           fsr2h	equ	0xFDA
 39227                           fsr2l	equ	0xFD9
 39228                           status	equ	0xFD8
 39229                           
 39230 ;; *************** function _TMR7_ISR *****************
 39231 ;; Defined at:
 39232 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 39233 ;; Parameters:    Size  Location     Type
 39234 ;;		None
 39235 ;; Auto vars:     Size  Location     Type
 39236 ;;		None
 39237 ;; Return value:  Size  Location     Type
 39238 ;;                  1    wreg      void 
 39239 ;; Registers used:
 39240 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39241 ;; Tracked objects:
 39242 ;;		On entry : 0/0
 39243 ;;		On exit  : 0/0
 39244 ;;		Unchanged: 0/0
 39245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39250 ;;Total ram usage:        0 bytes
 39251 ;; Hardware stack levels used:    1
 39252 ;; Hardware stack levels required when called:   11
 39253 ;; This function calls:
 39254 ;;		Absolute function
 39255 ;;		_TMR7_DefaultInterruptHandler
 39256 ;;		_TMR7_WriteTimer
 39257 ;;		_acquisitionTimerCallback
 39258 ;; This function is called by:
 39259 ;;		_INTERRUPT_InterruptManagerLow
 39260 ;; This function uses a non-reentrant model
 39261 ;;
 39262                           
 39263                           	psect	text101
 39264  01B870                     __ptext101:
 39265                           	opt stack 0
 39266  01B870                     _TMR7_ISR:
 39267                           	opt stack 9
 39268                           
 39269                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 39270                           
 39271                           ;incstack = 0
 39272  01B870  010E               	movlb	14	; () banked
 39273  01B872  9D38               	bcf	56,6,b	;volatile
 39274                           
 39275                           ; BSR set to: 14
 39276                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 39277  01B874  C197  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 39278  01B878  C198  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 39279  01B87C  EC90  F0DD         	call	_TMR7_WriteTimer	;wreg free
 39280                           
 39281                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 39282  01B880  0102               	movlb	2	; () banked
 39283  01B882  51D1               	movf	_TMR7_InterruptHandler& (0+255),w,b
 39284  01B884  11D2               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 39285  01B886  11D3               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 39286  01B888  B4D8               	btfsc	status,2,c
 39287  01B88A  0012               	return	
 39288                           
 39289                           ; BSR set to: 2
 39290                           ;tmr7.c: 172: {
 39291                           ;tmr7.c: 173: TMR7_InterruptHandler();
 39292  01B88C  D801               	call	i1u3684_28
 39293  01B88E  0012               	return	
 39294  01B890                     i1u3684_28:
 39295  01B890  0005               	push	
 39296  01B892  6EFA               	movwf	pclath,c
 39297  01B894  51D1               	movf	_TMR7_InterruptHandler& (0+255),w,b
 39298  01B896  6EFD               	movwf	tosl,c
 39299  01B898  51D2               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 39300  01B89A  6EFE               	movwf	tosh,c
 39301  01B89C  51D3               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 39302  01B89E  6EFF               	movwf	tosu,c
 39303  01B8A0  50FA               	movf	pclath,w,c
 39304  01B8A2  0012               	return		;indir
 39305  01B8A4                     __end_of_TMR7_ISR:
 39306                           	opt stack 0
 39307                           tosu	equ	0xFFF
 39308                           tosh	equ	0xFFE
 39309                           tosl	equ	0xFFD
 39310                           pclatu	equ	0xFFB
 39311                           pclath	equ	0xFFA
 39312                           tblptru	equ	0xFF8
 39313                           tblptrh	equ	0xFF7
 39314                           tblptrl	equ	0xFF6
 39315                           tablat	equ	0xFF5
 39316                           prodh	equ	0xFF4
 39317                           prodl	equ	0xFF3
 39318                           intcon	equ	0xFF2
 39319                           indf0	equ	0xFEF
 39320                           postinc0	equ	0xFEE
 39321                           fsr0h	equ	0xFEA
 39322                           fsr0l	equ	0xFE9
 39323                           wreg	equ	0xFE8
 39324                           indf1	equ	0xFE7
 39325                           postdec1	equ	0xFE5
 39326                           plusw1	equ	0xFE3
 39327                           fsr1h	equ	0xFE2
 39328                           fsr1l	equ	0xFE1
 39329                           bsr	equ	0xFE0
 39330                           indf2	equ	0xFDF
 39331                           postinc2	equ	0xFDE
 39332                           postdec2	equ	0xFDD
 39333                           plusw2	equ	0xFDB
 39334                           fsr2h	equ	0xFDA
 39335                           fsr2l	equ	0xFD9
 39336                           status	equ	0xFD8
 39337                           
 39338 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 39339 ;; Defined at:
 39340 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 39341 ;; Parameters:    Size  Location     Type
 39342 ;;		None
 39343 ;; Auto vars:     Size  Location     Type
 39344 ;;		None
 39345 ;; Return value:  Size  Location     Type
 39346 ;;                  1    wreg      void 
 39347 ;; Registers used:
 39348 ;;		None
 39349 ;; Tracked objects:
 39350 ;;		On entry : 0/0
 39351 ;;		On exit  : 0/0
 39352 ;;		Unchanged: 0/0
 39353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39358 ;;Total ram usage:        0 bytes
 39359 ;; Hardware stack levels used:    1
 39360 ;; Hardware stack levels required when called:    9
 39361 ;; This function calls:
 39362 ;;		Nothing
 39363 ;; This function is called by:
 39364 ;;		_TMR7_Initialize
 39365 ;;		_TMR7_ISR
 39366 ;; This function uses a non-reentrant model
 39367 ;;
 39368                           
 39369                           	psect	text102
 39370  01C02A                     __ptext102:
 39371                           	opt stack 0
 39372  01C02A                     _TMR7_DefaultInterruptHandler:
 39373                           	opt stack 10
 39374                           
 39375                           ;incstack = 0
 39376  01C02A  0012               	return		;funcret
 39377  01C02C                     __end_of_TMR7_DefaultInterruptHandler:
 39378                           	opt stack 0
 39379                           tosu	equ	0xFFF
 39380                           tosh	equ	0xFFE
 39381                           tosl	equ	0xFFD
 39382                           pclatu	equ	0xFFB
 39383                           pclath	equ	0xFFA
 39384                           tblptru	equ	0xFF8
 39385                           tblptrh	equ	0xFF7
 39386                           tblptrl	equ	0xFF6
 39387                           tablat	equ	0xFF5
 39388                           prodh	equ	0xFF4
 39389                           prodl	equ	0xFF3
 39390                           intcon	equ	0xFF2
 39391                           indf0	equ	0xFEF
 39392                           postinc0	equ	0xFEE
 39393                           fsr0h	equ	0xFEA
 39394                           fsr0l	equ	0xFE9
 39395                           wreg	equ	0xFE8
 39396                           indf1	equ	0xFE7
 39397                           postdec1	equ	0xFE5
 39398                           plusw1	equ	0xFE3
 39399                           fsr1h	equ	0xFE2
 39400                           fsr1l	equ	0xFE1
 39401                           bsr	equ	0xFE0
 39402                           indf2	equ	0xFDF
 39403                           postinc2	equ	0xFDE
 39404                           postdec2	equ	0xFDD
 39405                           plusw2	equ	0xFDB
 39406                           fsr2h	equ	0xFDA
 39407                           fsr2l	equ	0xFD9
 39408                           status	equ	0xFD8
 39409                           
 39410 ;; *************** function _acquisitionTimerCallback *****************
 39411 ;; Defined at:
 39412 ;;		line 412 in file "main.c"
 39413 ;; Parameters:    Size  Location     Type
 39414 ;;		None
 39415 ;; Auto vars:     Size  Location     Type
 39416 ;;		None
 39417 ;; Return value:  Size  Location     Type
 39418 ;;                  1    wreg      void 
 39419 ;; Registers used:
 39420 ;;		wreg, status,2, cstack
 39421 ;; Tracked objects:
 39422 ;;		On entry : 0/0
 39423 ;;		On exit  : 0/0
 39424 ;;		Unchanged: 0/0
 39425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39430 ;;Total ram usage:        0 bytes
 39431 ;; Hardware stack levels used:    1
 39432 ;; Hardware stack levels required when called:   10
 39433 ;; This function calls:
 39434 ;;		_ADCC_ClearAccumulator
 39435 ;;		_ADCC_DischargeSampleCapacitor
 39436 ;;		_ADCC_StartConversion
 39437 ;; This function is called by:
 39438 ;;		_main
 39439 ;;		_TMR7_ISR
 39440 ;; This function uses a non-reentrant model
 39441 ;;
 39442                           
 39443                           	psect	text103
 39444  01BEB4                     __ptext103:
 39445                           	opt stack 0
 39446  01BEB4                     _acquisitionTimerCallback:
 39447                           	opt stack 9
 39448                           
 39449                           ;main.c: 415: ADCC_DischargeSampleCapacitor();
 39450                           
 39451                           ;incstack = 0
 39452  01BEB4  ECFC  F0DF         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 39453                           
 39454                           ;main.c: 418: ADCC_ClearAccumulator();
 39455  01BEB8  EC00  F0E0         	call	_ADCC_ClearAccumulator	;wreg free
 39456                           
 39457                           ;main.c: 421: ADCC_StartConversion(next_channel);
 39458  01BEBC  0101               	movlb	1	; () banked
 39459  01BEBE  51B0               	movf	_next_channel& (0+255),w,b
 39460  01BEC0  ECD1  F0DF         	call	_ADCC_StartConversion
 39461  01BEC4  0012               	return		;funcret
 39462  01BEC6                     __end_of_acquisitionTimerCallback:
 39463                           	opt stack 0
 39464                           tosu	equ	0xFFF
 39465                           tosh	equ	0xFFE
 39466                           tosl	equ	0xFFD
 39467                           pclatu	equ	0xFFB
 39468                           pclath	equ	0xFFA
 39469                           tblptru	equ	0xFF8
 39470                           tblptrh	equ	0xFF7
 39471                           tblptrl	equ	0xFF6
 39472                           tablat	equ	0xFF5
 39473                           prodh	equ	0xFF4
 39474                           prodl	equ	0xFF3
 39475                           intcon	equ	0xFF2
 39476                           indf0	equ	0xFEF
 39477                           postinc0	equ	0xFEE
 39478                           fsr0h	equ	0xFEA
 39479                           fsr0l	equ	0xFE9
 39480                           wreg	equ	0xFE8
 39481                           indf1	equ	0xFE7
 39482                           postdec1	equ	0xFE5
 39483                           plusw1	equ	0xFE3
 39484                           fsr1h	equ	0xFE2
 39485                           fsr1l	equ	0xFE1
 39486                           bsr	equ	0xFE0
 39487                           indf2	equ	0xFDF
 39488                           postinc2	equ	0xFDE
 39489                           postdec2	equ	0xFDD
 39490                           plusw2	equ	0xFDB
 39491                           fsr2h	equ	0xFDA
 39492                           fsr2l	equ	0xFD9
 39493                           status	equ	0xFD8
 39494                           
 39495 ;; *************** function _ADCC_StartConversion *****************
 39496 ;; Defined at:
 39497 ;;		line 115 in file "mcc_generated_files/adcc.c"
 39498 ;; Parameters:    Size  Location     Type
 39499 ;;  channel         1    wreg     enum E17862
 39500 ;; Auto vars:     Size  Location     Type
 39501 ;;  channel         1    0[BANK1 ] enum E17862
 39502 ;; Return value:  Size  Location     Type
 39503 ;;                  1    wreg      void 
 39504 ;; Registers used:
 39505 ;;		wreg
 39506 ;; Tracked objects:
 39507 ;;		On entry : 0/0
 39508 ;;		On exit  : 0/0
 39509 ;;		Unchanged: 0/0
 39510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39512 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39514 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39515 ;;Total ram usage:        1 bytes
 39516 ;; Hardware stack levels used:    1
 39517 ;; Hardware stack levels required when called:    9
 39518 ;; This function calls:
 39519 ;;		Nothing
 39520 ;; This function is called by:
 39521 ;;		_acquisitionTimerCallback
 39522 ;; This function uses a non-reentrant model
 39523 ;;
 39524                           
 39525                           	psect	text104
 39526  01BFA2                     __ptext104:
 39527                           	opt stack 0
 39528  01BFA2                     _ADCC_StartConversion:
 39529                           	opt stack 9
 39530                           
 39531                           ;incstack = 0
 39532                           ;ADCC_StartConversion@channel stored from wreg
 39533  01BFA2  0101               	movlb	1	; () banked
 39534  01BFA4  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 39535                           
 39536                           ;adcc.c: 118: ADPCH = channel;
 39537  01BFA6  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 39538                           
 39539                           ;adcc.c: 121: ADCON0bits.ADON = 1;
 39540  01BFAA  8E60               	bsf	3936,7,c	;volatile
 39541                           
 39542                           ;adcc.c: 124: ADCON0bits.ADGO = 1;
 39543  01BFAC  8060               	bsf	3936,0,c	;volatile
 39544  01BFAE  0012               	return		;funcret
 39545  01BFB0                     __end_of_ADCC_StartConversion:
 39546                           	opt stack 0
 39547                           tosu	equ	0xFFF
 39548                           tosh	equ	0xFFE
 39549                           tosl	equ	0xFFD
 39550                           pclatu	equ	0xFFB
 39551                           pclath	equ	0xFFA
 39552                           tblptru	equ	0xFF8
 39553                           tblptrh	equ	0xFF7
 39554                           tblptrl	equ	0xFF6
 39555                           tablat	equ	0xFF5
 39556                           prodh	equ	0xFF4
 39557                           prodl	equ	0xFF3
 39558                           intcon	equ	0xFF2
 39559                           indf0	equ	0xFEF
 39560                           postinc0	equ	0xFEE
 39561                           fsr0h	equ	0xFEA
 39562                           fsr0l	equ	0xFE9
 39563                           wreg	equ	0xFE8
 39564                           indf1	equ	0xFE7
 39565                           postdec1	equ	0xFE5
 39566                           plusw1	equ	0xFE3
 39567                           fsr1h	equ	0xFE2
 39568                           fsr1l	equ	0xFE1
 39569                           bsr	equ	0xFE0
 39570                           indf2	equ	0xFDF
 39571                           postinc2	equ	0xFDE
 39572                           postdec2	equ	0xFDD
 39573                           plusw2	equ	0xFDB
 39574                           fsr2h	equ	0xFDA
 39575                           fsr2l	equ	0xFD9
 39576                           status	equ	0xFD8
 39577                           
 39578 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 39579 ;; Defined at:
 39580 ;;		line 177 in file "mcc_generated_files/adcc.c"
 39581 ;; Parameters:    Size  Location     Type
 39582 ;;		None
 39583 ;; Auto vars:     Size  Location     Type
 39584 ;;		None
 39585 ;; Return value:  Size  Location     Type
 39586 ;;                  1    wreg      void 
 39587 ;; Registers used:
 39588 ;;		wreg, status,2
 39589 ;; Tracked objects:
 39590 ;;		On entry : 0/0
 39591 ;;		On exit  : 0/0
 39592 ;;		Unchanged: 0/0
 39593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39598 ;;Total ram usage:        0 bytes
 39599 ;; Hardware stack levels used:    1
 39600 ;; Hardware stack levels required when called:    9
 39601 ;; This function calls:
 39602 ;;		Nothing
 39603 ;; This function is called by:
 39604 ;;		_acquisitionTimerCallback
 39605 ;; This function uses a non-reentrant model
 39606 ;;
 39607                           
 39608                           	psect	text105
 39609  01BFF8                     __ptext105:
 39610                           	opt stack 0
 39611  01BFF8                     _ADCC_DischargeSampleCapacitor:
 39612                           	opt stack 9
 39613                           
 39614                           ;adcc.c: 180: ADPCH = 0x3c;
 39615                           
 39616                           ;incstack = 0
 39617  01BFF8  0E3C               	movlw	60
 39618  01BFFA  010F               	movlb	15	; () banked
 39619  01BFFC  6F5F               	movwf	95,b	;volatile
 39620                           
 39621                           ; BSR set to: 15
 39622  01BFFE  0012               	return		;funcret
 39623  01C000                     __end_of_ADCC_DischargeSampleCapacitor:
 39624                           	opt stack 0
 39625                           tosu	equ	0xFFF
 39626                           tosh	equ	0xFFE
 39627                           tosl	equ	0xFFD
 39628                           pclatu	equ	0xFFB
 39629                           pclath	equ	0xFFA
 39630                           tblptru	equ	0xFF8
 39631                           tblptrh	equ	0xFF7
 39632                           tblptrl	equ	0xFF6
 39633                           tablat	equ	0xFF5
 39634                           prodh	equ	0xFF4
 39635                           prodl	equ	0xFF3
 39636                           intcon	equ	0xFF2
 39637                           indf0	equ	0xFEF
 39638                           postinc0	equ	0xFEE
 39639                           fsr0h	equ	0xFEA
 39640                           fsr0l	equ	0xFE9
 39641                           wreg	equ	0xFE8
 39642                           indf1	equ	0xFE7
 39643                           postdec1	equ	0xFE5
 39644                           plusw1	equ	0xFE3
 39645                           fsr1h	equ	0xFE2
 39646                           fsr1l	equ	0xFE1
 39647                           bsr	equ	0xFE0
 39648                           indf2	equ	0xFDF
 39649                           postinc2	equ	0xFDE
 39650                           postdec2	equ	0xFDD
 39651                           plusw2	equ	0xFDB
 39652                           fsr2h	equ	0xFDA
 39653                           fsr2l	equ	0xFD9
 39654                           status	equ	0xFD8
 39655                           
 39656 ;; *************** function _ADCC_ClearAccumulator *****************
 39657 ;; Defined at:
 39658 ;;		line 207 in file "mcc_generated_files/adcc.c"
 39659 ;; Parameters:    Size  Location     Type
 39660 ;;		None
 39661 ;; Auto vars:     Size  Location     Type
 39662 ;;		None
 39663 ;; Return value:  Size  Location     Type
 39664 ;;                  1    wreg      void 
 39665 ;; Registers used:
 39666 ;;		None
 39667 ;; Tracked objects:
 39668 ;;		On entry : 0/0
 39669 ;;		On exit  : 0/0
 39670 ;;		Unchanged: 0/0
 39671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39676 ;;Total ram usage:        0 bytes
 39677 ;; Hardware stack levels used:    1
 39678 ;; Hardware stack levels required when called:    9
 39679 ;; This function calls:
 39680 ;;		Nothing
 39681 ;; This function is called by:
 39682 ;;		_acquisitionTimerCallback
 39683 ;; This function uses a non-reentrant model
 39684 ;;
 39685                           
 39686                           	psect	text106
 39687  01C000                     __ptext106:
 39688                           	opt stack 0
 39689  01C000                     _ADCC_ClearAccumulator:
 39690                           	opt stack 9
 39691                           
 39692                           ;adcc.c: 210: ADCON2bits.ADACLR = 1;
 39693                           
 39694                           ; BSR set to: 15
 39695                           ;incstack = 0
 39696  01C000  010F               	movlb	15	; () banked
 39697  01C002  875A               	bsf	90,3,b	;volatile
 39698                           
 39699                           ; BSR set to: 15
 39700  01C004  0012               	return		;funcret
 39701  01C006                     __end_of_ADCC_ClearAccumulator:
 39702                           	opt stack 0
 39703                           tosu	equ	0xFFF
 39704                           tosh	equ	0xFFE
 39705                           tosl	equ	0xFFD
 39706                           pclatu	equ	0xFFB
 39707                           pclath	equ	0xFFA
 39708                           tblptru	equ	0xFF8
 39709                           tblptrh	equ	0xFF7
 39710                           tblptrl	equ	0xFF6
 39711                           tablat	equ	0xFF5
 39712                           prodh	equ	0xFF4
 39713                           prodl	equ	0xFF3
 39714                           intcon	equ	0xFF2
 39715                           indf0	equ	0xFEF
 39716                           postinc0	equ	0xFEE
 39717                           fsr0h	equ	0xFEA
 39718                           fsr0l	equ	0xFE9
 39719                           wreg	equ	0xFE8
 39720                           indf1	equ	0xFE7
 39721                           postdec1	equ	0xFE5
 39722                           plusw1	equ	0xFE3
 39723                           fsr1h	equ	0xFE2
 39724                           fsr1l	equ	0xFE1
 39725                           bsr	equ	0xFE0
 39726                           indf2	equ	0xFDF
 39727                           postinc2	equ	0xFDE
 39728                           postdec2	equ	0xFDD
 39729                           plusw2	equ	0xFDB
 39730                           fsr2h	equ	0xFDA
 39731                           fsr2l	equ	0xFD9
 39732                           status	equ	0xFD8
 39733                           
 39734 ;; *************** function _TMR7_WriteTimer *****************
 39735 ;; Defined at:
 39736 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 39737 ;; Parameters:    Size  Location     Type
 39738 ;;  timerVal        2    0[BANK1 ] unsigned int 
 39739 ;; Auto vars:     Size  Location     Type
 39740 ;;		None
 39741 ;; Return value:  Size  Location     Type
 39742 ;;                  1    wreg      void 
 39743 ;; Registers used:
 39744 ;;		wreg, status,2
 39745 ;; Tracked objects:
 39746 ;;		On entry : 0/0
 39747 ;;		On exit  : 0/0
 39748 ;;		Unchanged: 0/0
 39749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39750 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39753 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39754 ;;Total ram usage:        2 bytes
 39755 ;; Hardware stack levels used:    1
 39756 ;; Hardware stack levels required when called:    9
 39757 ;; This function calls:
 39758 ;;		Nothing
 39759 ;; This function is called by:
 39760 ;;		_TMR7_ISR
 39761 ;;		_TMR7_Reload
 39762 ;; This function uses a non-reentrant model
 39763 ;;
 39764                           
 39765                           	psect	text107
 39766  01BB20                     __ptext107:
 39767                           	opt stack 0
 39768  01BB20                     _TMR7_WriteTimer:
 39769                           	opt stack 10
 39770                           
 39771                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 39772                           
 39773                           ; BSR set to: 15
 39774                           ;incstack = 0
 39775  01BB20  010F               	movlb	15	; () banked
 39776  01BB22  A530               	btfss	48,2,b	;volatile
 39777  01BB24  D009               	goto	i1l694
 39778                           
 39779                           ; BSR set to: 15
 39780                           ;tmr7.c: 130: {
 39781                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 39782  01BB26  9130               	bcf	48,0,b	;volatile
 39783                           
 39784                           ; BSR set to: 15
 39785                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 39786  01BB28  0101               	movlb	1	; () banked
 39787  01BB2A  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 39788  01BB2C  010F               	movlb	15	; () banked
 39789  01BB2E  6F2F               	movwf	47,b	;volatile
 39790                           
 39791                           ; BSR set to: 15
 39792                           ;tmr7.c: 136: TMR7L = timerVal;
 39793  01BB30  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 39794                           
 39795                           ; BSR set to: 15
 39796                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 39797  01BB34  8130               	bsf	48,0,b	;volatile
 39798                           
 39799                           ;tmr7.c: 140: }
 39800  01BB36  0012               	return	
 39801  01BB38                     i1l694:
 39802                           
 39803                           ; BSR set to: 15
 39804                           ;tmr7.c: 141: else
 39805                           ;tmr7.c: 142: {
 39806                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 39807                           
 39808                           ; BSR set to: 15
 39809  01BB38  0101               	movlb	1	; () banked
 39810  01BB3A  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 39811  01BB3C  010F               	movlb	15	; () banked
 39812  01BB3E  6F2F               	movwf	47,b	;volatile
 39813                           
 39814                           ; BSR set to: 15
 39815                           ;tmr7.c: 145: TMR7L = timerVal;
 39816  01BB40  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 39817  01BB44  0012               	return	
 39818  01BB46                     __end_of_TMR7_WriteTimer:
 39819                           	opt stack 0
 39820                           tosu	equ	0xFFF
 39821                           tosh	equ	0xFFE
 39822                           tosl	equ	0xFFD
 39823                           pclatu	equ	0xFFB
 39824                           pclath	equ	0xFFA
 39825                           tblptru	equ	0xFF8
 39826                           tblptrh	equ	0xFF7
 39827                           tblptrl	equ	0xFF6
 39828                           tablat	equ	0xFF5
 39829                           prodh	equ	0xFF4
 39830                           prodl	equ	0xFF3
 39831                           intcon	equ	0xFF2
 39832                           indf0	equ	0xFEF
 39833                           postinc0	equ	0xFEE
 39834                           fsr0h	equ	0xFEA
 39835                           fsr0l	equ	0xFE9
 39836                           wreg	equ	0xFE8
 39837                           indf1	equ	0xFE7
 39838                           postdec1	equ	0xFE5
 39839                           plusw1	equ	0xFE3
 39840                           fsr1h	equ	0xFE2
 39841                           fsr1l	equ	0xFE1
 39842                           bsr	equ	0xFE0
 39843                           indf2	equ	0xFDF
 39844                           postinc2	equ	0xFDE
 39845                           postdec2	equ	0xFDD
 39846                           plusw2	equ	0xFDB
 39847                           fsr2h	equ	0xFDA
 39848                           fsr2l	equ	0xFD9
 39849                           status	equ	0xFD8
 39850                           
 39851 ;; *************** function _TMR6_ISR *****************
 39852 ;; Defined at:
 39853 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 39854 ;; Parameters:    Size  Location     Type
 39855 ;;		None
 39856 ;; Auto vars:     Size  Location     Type
 39857 ;;		None
 39858 ;; Return value:  Size  Location     Type
 39859 ;;                  1    wreg      void 
 39860 ;; Registers used:
 39861 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 39862 ;; Tracked objects:
 39863 ;;		On entry : 0/0
 39864 ;;		On exit  : 0/0
 39865 ;;		Unchanged: 0/0
 39866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39871 ;;Total ram usage:        0 bytes
 39872 ;; Hardware stack levels used:    1
 39873 ;; Hardware stack levels required when called:   10
 39874 ;; This function calls:
 39875 ;;		Absolute function
 39876 ;;		_TMR6_DefaultInterruptHandler
 39877 ;;		_heartbeatTimerCallback
 39878 ;; This function is called by:
 39879 ;;		_INTERRUPT_InterruptManagerLow
 39880 ;; This function uses a non-reentrant model
 39881 ;;
 39882                           
 39883                           	psect	text108
 39884  01BAAA                     __ptext108:
 39885                           	opt stack 0
 39886  01BAAA                     _TMR6_ISR:
 39887                           	opt stack 10
 39888                           
 39889                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 39890                           
 39891                           ; BSR set to: 15
 39892                           ;incstack = 0
 39893  01BAAA  010E               	movlb	14	; () banked
 39894  01BAAC  9B38               	bcf	56,5,b	;volatile
 39895                           
 39896                           ; BSR set to: 14
 39897                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 39898  01BAAE  0101               	movlb	1	; () banked
 39899  01BAB0  5188               	movf	_TMR6_InterruptHandler& (0+255),w,b
 39900  01BAB2  1189               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 39901  01BAB4  118A               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 39902  01BAB6  B4D8               	btfsc	status,2,c
 39903  01BAB8  0012               	return	
 39904                           
 39905                           ; BSR set to: 1
 39906                           ;tmr6.c: 172: {
 39907                           ;tmr6.c: 173: TMR6_InterruptHandler();
 39908  01BABA  D801               	call	i1u3682_28
 39909  01BABC  0012               	return	
 39910  01BABE                     i1u3682_28:
 39911  01BABE  0005               	push	
 39912  01BAC0  6EFA               	movwf	pclath,c
 39913  01BAC2  5188               	movf	_TMR6_InterruptHandler& (0+255),w,b
 39914  01BAC4  6EFD               	movwf	tosl,c
 39915  01BAC6  5189               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 39916  01BAC8  6EFE               	movwf	tosh,c
 39917  01BACA  518A               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 39918  01BACC  6EFF               	movwf	tosu,c
 39919  01BACE  50FA               	movf	pclath,w,c
 39920  01BAD0  0012               	return		;indir
 39921  01BAD2                     __end_of_TMR6_ISR:
 39922                           	opt stack 0
 39923                           tosu	equ	0xFFF
 39924                           tosh	equ	0xFFE
 39925                           tosl	equ	0xFFD
 39926                           pclatu	equ	0xFFB
 39927                           pclath	equ	0xFFA
 39928                           tblptru	equ	0xFF8
 39929                           tblptrh	equ	0xFF7
 39930                           tblptrl	equ	0xFF6
 39931                           tablat	equ	0xFF5
 39932                           prodh	equ	0xFF4
 39933                           prodl	equ	0xFF3
 39934                           intcon	equ	0xFF2
 39935                           indf0	equ	0xFEF
 39936                           postinc0	equ	0xFEE
 39937                           fsr0h	equ	0xFEA
 39938                           fsr0l	equ	0xFE9
 39939                           wreg	equ	0xFE8
 39940                           indf1	equ	0xFE7
 39941                           postdec1	equ	0xFE5
 39942                           plusw1	equ	0xFE3
 39943                           fsr1h	equ	0xFE2
 39944                           fsr1l	equ	0xFE1
 39945                           bsr	equ	0xFE0
 39946                           indf2	equ	0xFDF
 39947                           postinc2	equ	0xFDE
 39948                           postdec2	equ	0xFDD
 39949                           plusw2	equ	0xFDB
 39950                           fsr2h	equ	0xFDA
 39951                           fsr2l	equ	0xFD9
 39952                           status	equ	0xFD8
 39953                           
 39954 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 39955 ;; Defined at:
 39956 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 39957 ;; Parameters:    Size  Location     Type
 39958 ;;		None
 39959 ;; Auto vars:     Size  Location     Type
 39960 ;;		None
 39961 ;; Return value:  Size  Location     Type
 39962 ;;                  1    wreg      void 
 39963 ;; Registers used:
 39964 ;;		None
 39965 ;; Tracked objects:
 39966 ;;		On entry : 0/0
 39967 ;;		On exit  : 0/0
 39968 ;;		Unchanged: 0/0
 39969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 39970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39974 ;;Total ram usage:        0 bytes
 39975 ;; Hardware stack levels used:    1
 39976 ;; Hardware stack levels required when called:    9
 39977 ;; This function calls:
 39978 ;;		Nothing
 39979 ;; This function is called by:
 39980 ;;		_TMR6_Initialize
 39981 ;;		_TMR6_ISR
 39982 ;; This function uses a non-reentrant model
 39983 ;;
 39984                           
 39985                           	psect	text109
 39986  01C02C                     __ptext109:
 39987                           	opt stack 0
 39988  01C02C                     _TMR6_DefaultInterruptHandler:
 39989                           	opt stack 10
 39990                           
 39991                           ;incstack = 0
 39992  01C02C  0012               	return		;funcret
 39993  01C02E                     __end_of_TMR6_DefaultInterruptHandler:
 39994                           	opt stack 0
 39995                           tosu	equ	0xFFF
 39996                           tosh	equ	0xFFE
 39997                           tosl	equ	0xFFD
 39998                           pclatu	equ	0xFFB
 39999                           pclath	equ	0xFFA
 40000                           tblptru	equ	0xFF8
 40001                           tblptrh	equ	0xFF7
 40002                           tblptrl	equ	0xFF6
 40003                           tablat	equ	0xFF5
 40004                           prodh	equ	0xFF4
 40005                           prodl	equ	0xFF3
 40006                           intcon	equ	0xFF2
 40007                           indf0	equ	0xFEF
 40008                           postinc0	equ	0xFEE
 40009                           fsr0h	equ	0xFEA
 40010                           fsr0l	equ	0xFE9
 40011                           wreg	equ	0xFE8
 40012                           indf1	equ	0xFE7
 40013                           postdec1	equ	0xFE5
 40014                           plusw1	equ	0xFE3
 40015                           fsr1h	equ	0xFE2
 40016                           fsr1l	equ	0xFE1
 40017                           bsr	equ	0xFE0
 40018                           indf2	equ	0xFDF
 40019                           postinc2	equ	0xFDE
 40020                           postdec2	equ	0xFDD
 40021                           plusw2	equ	0xFDB
 40022                           fsr2h	equ	0xFDA
 40023                           fsr2l	equ	0xFD9
 40024                           status	equ	0xFD8
 40025                           
 40026 ;; *************** function _heartbeatTimerCallback *****************
 40027 ;; Defined at:
 40028 ;;		line 211 in file "main.c"
 40029 ;; Parameters:    Size  Location     Type
 40030 ;;		None
 40031 ;; Auto vars:     Size  Location     Type
 40032 ;;		None
 40033 ;; Return value:  Size  Location     Type
 40034 ;;                  1    wreg      void 
 40035 ;; Registers used:
 40036 ;;		wreg, status,2, status,0
 40037 ;; Tracked objects:
 40038 ;;		On entry : 0/0
 40039 ;;		On exit  : 0/0
 40040 ;;		Unchanged: 0/0
 40041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40044 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40045 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40046 ;;Total ram usage:        1 bytes
 40047 ;; Hardware stack levels used:    1
 40048 ;; Hardware stack levels required when called:    9
 40049 ;; This function calls:
 40050 ;;		Nothing
 40051 ;; This function is called by:
 40052 ;;		_main
 40053 ;;		_TMR6_ISR
 40054 ;; This function uses a non-reentrant model
 40055 ;;
 40056                           
 40057                           	psect	text110
 40058  01B442                     __ptext110:
 40059                           	opt stack 0
 40060  01B442                     _heartbeatTimerCallback:
 40061                           	opt stack 10
 40062                           
 40063                           ;main.c: 214: LATFbits.LATF2 = !LATFbits.LATF2;
 40064                           
 40065                           ;incstack = 0
 40066  01B442  B47E               	btfsc	3966,2,c	;volatile
 40067  01B444  D004               	goto	i1u1596_20
 40068  01B446  0101               	movlb	1	; () banked
 40069  01B448  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 40070  01B44A  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 40071  01B44C  D002               	goto	i1u1597_28
 40072  01B44E                     i1u1596_20:
 40073  01B44E  0101               	movlb	1	; () banked
 40074  01B450  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 40075  01B452                     i1u1597_28:
 40076  01B452  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 40077  01B454  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 40078  01B456  507E               	movf	3966,w,c	;volatile
 40079  01B458  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 40080  01B45A  0BFB               	andlw	-5
 40081  01B45C  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 40082  01B45E  6E7E               	movwf	3966,c	;volatile
 40083                           
 40084                           ;main.c: 217: dev_on_time++;
 40085  01B460  0E01               	movlw	1
 40086  01B462  0102               	movlb	2	; () banked
 40087  01B464  27AD               	addwf	_dev_on_time& (0+255),f,b	;volatile
 40088  01B466  0E00               	movlw	0
 40089  01B468  23AE               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 40090  01B46A  23AF               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 40091  01B46C  23B0               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 40092                           
 40093                           ; BSR set to: 2
 40094                           ;main.c: 220: if (load_enable) {
 40095  01B46E  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 40096  01B470  D006               	goto	i1l1356
 40097                           
 40098                           ; BSR set to: 2
 40099                           ;main.c: 222: load_on_time++;
 40100  01B472  0E01               	movlw	1
 40101  01B474  27A9               	addwf	_load_on_time& (0+255),f,b	;volatile
 40102  01B476  0E00               	movlw	0
 40103  01B478  23AA               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 40104  01B47A  23AB               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 40105  01B47C  23AC               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 40106  01B47E                     i1l1356:
 40107                           
 40108                           ; BSR set to: 2
 40109  01B47E  0004               	clrwdt		;# 
 40110  01B480  0012               	return		;funcret
 40111  01B482                     __end_of_heartbeatTimerCallback:
 40112                           	opt stack 0
 40113                           tosu	equ	0xFFF
 40114                           tosh	equ	0xFFE
 40115                           tosl	equ	0xFFD
 40116                           pclatu	equ	0xFFB
 40117                           pclath	equ	0xFFA
 40118                           tblptru	equ	0xFF8
 40119                           tblptrh	equ	0xFF7
 40120                           tblptrl	equ	0xFF6
 40121                           tablat	equ	0xFF5
 40122                           prodh	equ	0xFF4
 40123                           prodl	equ	0xFF3
 40124                           intcon	equ	0xFF2
 40125                           indf0	equ	0xFEF
 40126                           postinc0	equ	0xFEE
 40127                           fsr0h	equ	0xFEA
 40128                           fsr0l	equ	0xFE9
 40129                           wreg	equ	0xFE8
 40130                           indf1	equ	0xFE7
 40131                           postdec1	equ	0xFE5
 40132                           plusw1	equ	0xFE3
 40133                           fsr1h	equ	0xFE2
 40134                           fsr1l	equ	0xFE1
 40135                           bsr	equ	0xFE0
 40136                           indf2	equ	0xFDF
 40137                           postinc2	equ	0xFDE
 40138                           postdec2	equ	0xFDD
 40139                           plusw2	equ	0xFDB
 40140                           fsr2h	equ	0xFDA
 40141                           fsr2l	equ	0xFD9
 40142                           status	equ	0xFD8
 40143                           
 40144 ;; *************** function _TMR2_ISR *****************
 40145 ;; Defined at:
 40146 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 40147 ;; Parameters:    Size  Location     Type
 40148 ;;		None
 40149 ;; Auto vars:     Size  Location     Type
 40150 ;;		None
 40151 ;; Return value:  Size  Location     Type
 40152 ;;                  1    wreg      void 
 40153 ;; Registers used:
 40154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 40155 ;; Tracked objects:
 40156 ;;		On entry : 0/0
 40157 ;;		On exit  : 0/0
 40158 ;;		Unchanged: 0/0
 40159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40164 ;;Total ram usage:        0 bytes
 40165 ;; Hardware stack levels used:    1
 40166 ;; Hardware stack levels required when called:   17
 40167 ;; This function calls:
 40168 ;;		_TMR2_CallBack
 40169 ;; This function is called by:
 40170 ;;		_INTERRUPT_InterruptManagerLow
 40171 ;; This function uses a non-reentrant model
 40172 ;;
 40173                           
 40174                           	psect	text111
 40175  01BB46                     __ptext111:
 40176                           	opt stack 0
 40177  01BB46                     _TMR2_ISR:
 40178                           	opt stack 3
 40179                           
 40180                           ;tmr2.c: 167: static volatile unsigned int CountCallBack = 0;
 40181                           ;tmr2.c: 170: PIR5bits.TMR2IF = 0;
 40182                           
 40183                           ;incstack = 0
 40184  01BB46  010E               	movlb	14	; () banked
 40185  01BB48  9338               	bcf	56,1,b	;volatile
 40186                           
 40187                           ; BSR set to: 14
 40188                           ;tmr2.c: 173: if (++CountCallBack >= 96)
 40189  01BB4A  0101               	movlb	1	; () banked
 40190  01BB4C  4B8B               	infsnz	TMR2_ISR@CountCallBack& (0+255),f,b	;volatile
 40191  01BB4E  2B8C               	incf	(TMR2_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 40192  01BB50  518C               	movf	(TMR2_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 40193  01BB52  E104               	bnz	i1u3685_20
 40194  01BB54  0E60               	movlw	96
 40195  01BB56  5D8B               	subwf	TMR2_ISR@CountCallBack& (0+255),w,b	;volatile
 40196  01BB58  A0D8               	btfss	status,0,c
 40197  01BB5A  0012               	return	
 40198  01BB5C                     i1u3685_20:
 40199                           
 40200                           ; BSR set to: 1
 40201                           ;tmr2.c: 174: {
 40202                           ;tmr2.c: 176: TMR2_CallBack();
 40203  01BB5C  EC01  F0DE         	call	_TMR2_CallBack	;wreg free
 40204                           
 40205                           ;tmr2.c: 179: CountCallBack = 0;
 40206  01BB60  0E00               	movlw	0
 40207  01BB62  0101               	movlb	1	; () banked
 40208  01BB64  6F8C               	movwf	(TMR2_ISR@CountCallBack+1)& (0+255),b	;volatile
 40209  01BB66  0E00               	movlw	0
 40210  01BB68  6F8B               	movwf	TMR2_ISR@CountCallBack& (0+255),b	;volatile
 40211  01BB6A  0012               	return	
 40212  01BB6C                     __end_of_TMR2_ISR:
 40213                           	opt stack 0
 40214                           tosu	equ	0xFFF
 40215                           tosh	equ	0xFFE
 40216                           tosl	equ	0xFFD
 40217                           pclatu	equ	0xFFB
 40218                           pclath	equ	0xFFA
 40219                           tblptru	equ	0xFF8
 40220                           tblptrh	equ	0xFF7
 40221                           tblptrl	equ	0xFF6
 40222                           tablat	equ	0xFF5
 40223                           prodh	equ	0xFF4
 40224                           prodl	equ	0xFF3
 40225                           intcon	equ	0xFF2
 40226                           indf0	equ	0xFEF
 40227                           postinc0	equ	0xFEE
 40228                           fsr0h	equ	0xFEA
 40229                           fsr0l	equ	0xFE9
 40230                           wreg	equ	0xFE8
 40231                           indf1	equ	0xFE7
 40232                           postdec1	equ	0xFE5
 40233                           plusw1	equ	0xFE3
 40234                           fsr1h	equ	0xFE2
 40235                           fsr1l	equ	0xFE1
 40236                           bsr	equ	0xFE0
 40237                           indf2	equ	0xFDF
 40238                           postinc2	equ	0xFDE
 40239                           postdec2	equ	0xFDD
 40240                           plusw2	equ	0xFDB
 40241                           fsr2h	equ	0xFDA
 40242                           fsr2l	equ	0xFD9
 40243                           status	equ	0xFD8
 40244                           
 40245 ;; *************** function _TMR2_CallBack *****************
 40246 ;; Defined at:
 40247 ;;		line 183 in file "mcc_generated_files/tmr2.c"
 40248 ;; Parameters:    Size  Location     Type
 40249 ;;		None
 40250 ;; Auto vars:     Size  Location     Type
 40251 ;;		None
 40252 ;; Return value:  Size  Location     Type
 40253 ;;                  1    wreg      void 
 40254 ;; Registers used:
 40255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 40256 ;; Tracked objects:
 40257 ;;		On entry : 0/0
 40258 ;;		On exit  : 0/0
 40259 ;;		Unchanged: 0/0
 40260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40265 ;;Total ram usage:        0 bytes
 40266 ;; Hardware stack levels used:    1
 40267 ;; Hardware stack levels required when called:   16
 40268 ;; This function calls:
 40269 ;;		Absolute function
 40270 ;;		_TMR2_DefaultInterruptHandler
 40271 ;;		i1_OLED_updateCallback
 40272 ;; This function is called by:
 40273 ;;		_TMR2_ISR
 40274 ;; This function uses a non-reentrant model
 40275 ;;
 40276                           
 40277                           	psect	text112
 40278  01BC02                     __ptext112:
 40279                           	opt stack 0
 40280  01BC02                     _TMR2_CallBack:
 40281                           	opt stack 3
 40282                           
 40283                           ;tmr2.c: 187: if(TMR2_InterruptHandler)
 40284                           
 40285                           ; BSR set to: 1
 40286                           ;incstack = 0
 40287  01BC02  0102               	movlb	2	; () banked
 40288  01BC04  51C5               	movf	_TMR2_InterruptHandler& (0+255),w,b
 40289  01BC06  11C6               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 40290  01BC08  11C7               	iorwf	(_TMR2_InterruptHandler+2)& (0+255),w,b
 40291  01BC0A  B4D8               	btfsc	status,2,c
 40292  01BC0C  0012               	return	
 40293                           
 40294                           ; BSR set to: 2
 40295                           ;tmr2.c: 188: {
 40296                           ;tmr2.c: 189: TMR2_InterruptHandler();
 40297  01BC0E  D801               	call	i1u3675_28
 40298  01BC10  0012               	return	
 40299  01BC12                     i1u3675_28:
 40300  01BC12  0005               	push	
 40301  01BC14  6EFA               	movwf	pclath,c
 40302  01BC16  51C5               	movf	_TMR2_InterruptHandler& (0+255),w,b
 40303  01BC18  6EFD               	movwf	tosl,c
 40304  01BC1A  51C6               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 40305  01BC1C  6EFE               	movwf	tosh,c
 40306  01BC1E  51C7               	movf	(_TMR2_InterruptHandler+2)& (0+255),w,b
 40307  01BC20  6EFF               	movwf	tosu,c
 40308  01BC22  50FA               	movf	pclath,w,c
 40309  01BC24  0012               	return		;indir
 40310  01BC26                     __end_of_TMR2_CallBack:
 40311                           	opt stack 0
 40312                           tosu	equ	0xFFF
 40313                           tosh	equ	0xFFE
 40314                           tosl	equ	0xFFD
 40315                           pclatu	equ	0xFFB
 40316                           pclath	equ	0xFFA
 40317                           tblptru	equ	0xFF8
 40318                           tblptrh	equ	0xFF7
 40319                           tblptrl	equ	0xFF6
 40320                           tablat	equ	0xFF5
 40321                           prodh	equ	0xFF4
 40322                           prodl	equ	0xFF3
 40323                           intcon	equ	0xFF2
 40324                           indf0	equ	0xFEF
 40325                           postinc0	equ	0xFEE
 40326                           fsr0h	equ	0xFEA
 40327                           fsr0l	equ	0xFE9
 40328                           wreg	equ	0xFE8
 40329                           indf1	equ	0xFE7
 40330                           postdec1	equ	0xFE5
 40331                           plusw1	equ	0xFE3
 40332                           fsr1h	equ	0xFE2
 40333                           fsr1l	equ	0xFE1
 40334                           bsr	equ	0xFE0
 40335                           indf2	equ	0xFDF
 40336                           postinc2	equ	0xFDE
 40337                           postdec2	equ	0xFDD
 40338                           plusw2	equ	0xFDB
 40339                           fsr2h	equ	0xFDA
 40340                           fsr2l	equ	0xFD9
 40341                           status	equ	0xFD8
 40342                           
 40343 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 40344 ;; Defined at:
 40345 ;;		line 197 in file "mcc_generated_files/tmr2.c"
 40346 ;; Parameters:    Size  Location     Type
 40347 ;;		None
 40348 ;; Auto vars:     Size  Location     Type
 40349 ;;		None
 40350 ;; Return value:  Size  Location     Type
 40351 ;;                  1    wreg      void 
 40352 ;; Registers used:
 40353 ;;		None
 40354 ;; Tracked objects:
 40355 ;;		On entry : 0/0
 40356 ;;		On exit  : 0/0
 40357 ;;		Unchanged: 0/0
 40358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40363 ;;Total ram usage:        0 bytes
 40364 ;; Hardware stack levels used:    1
 40365 ;; Hardware stack levels required when called:    9
 40366 ;; This function calls:
 40367 ;;		Nothing
 40368 ;; This function is called by:
 40369 ;;		_TMR2_Initialize
 40370 ;;		_TMR2_CallBack
 40371 ;; This function uses a non-reentrant model
 40372 ;;
 40373                           
 40374                           	psect	text113
 40375  01C02E                     __ptext113:
 40376                           	opt stack 0
 40377  01C02E                     _TMR2_DefaultInterruptHandler:
 40378                           	opt stack 9
 40379                           
 40380                           ;incstack = 0
 40381  01C02E  0012               	return		;funcret
 40382  01C030                     __end_of_TMR2_DefaultInterruptHandler:
 40383                           	opt stack 0
 40384                           tosu	equ	0xFFF
 40385                           tosh	equ	0xFFE
 40386                           tosl	equ	0xFFD
 40387                           pclatu	equ	0xFFB
 40388                           pclath	equ	0xFFA
 40389                           tblptru	equ	0xFF8
 40390                           tblptrh	equ	0xFF7
 40391                           tblptrl	equ	0xFF6
 40392                           tablat	equ	0xFF5
 40393                           prodh	equ	0xFF4
 40394                           prodl	equ	0xFF3
 40395                           intcon	equ	0xFF2
 40396                           indf0	equ	0xFEF
 40397                           postinc0	equ	0xFEE
 40398                           fsr0h	equ	0xFEA
 40399                           fsr0l	equ	0xFE9
 40400                           wreg	equ	0xFE8
 40401                           indf1	equ	0xFE7
 40402                           postdec1	equ	0xFE5
 40403                           plusw1	equ	0xFE3
 40404                           fsr1h	equ	0xFE2
 40405                           fsr1l	equ	0xFE1
 40406                           bsr	equ	0xFE0
 40407                           indf2	equ	0xFDF
 40408                           postinc2	equ	0xFDE
 40409                           postdec2	equ	0xFDD
 40410                           plusw2	equ	0xFDB
 40411                           fsr2h	equ	0xFDA
 40412                           fsr2l	equ	0xFD9
 40413                           status	equ	0xFD8
 40414                           
 40415 ;; *************** function i1_OLED_updateCallback *****************
 40416 ;; Defined at:
 40417 ;;		line 472 in file "main.c"
 40418 ;; Parameters:    Size  Location     Type
 40419 ;;		None
 40420 ;; Auto vars:     Size  Location     Type
 40421 ;;  OLED_updateC   16   37[BANK1 ] unsigned char [16]
 40422 ;;  OLED_updateC    5   53[BANK1 ] unsigned char [5]
 40423 ;; Return value:  Size  Location     Type
 40424 ;;                  1    wreg      void 
 40425 ;; Registers used:
 40426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40427 ;; Tracked objects:
 40428 ;;		On entry : 0/0
 40429 ;;		On exit  : 0/0
 40430 ;;		Unchanged: 0/0
 40431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40433 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40435 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40436 ;;Total ram usage:       21 bytes
 40437 ;; Hardware stack levels used:    1
 40438 ;; Hardware stack levels required when called:   15
 40439 ;; This function calls:
 40440 ;;		i1_OLED_UpdateFromRAMBuffer
 40441 ;;		i1_getCauseOfResetStringSmall
 40442 ;;		i1_getDeviceID
 40443 ;;		i1_getDeviceIDString
 40444 ;;		i1_getMajorRevisionID
 40445 ;;		i1_getMinorRevisionID
 40446 ;;		i1_strcpy
 40447 ;; This function is called by:
 40448 ;; This function uses a non-reentrant model
 40449 ;;
 40450                           
 40451                           	psect	text114
 40452  017C0E                     __ptext114:
 40453                           	opt stack 0
 40454  017C0E                     i1_OLED_updateCallback:
 40455                           	opt stack 3
 40456                           
 40457                           ;main.c: 474: switch (OLED_Frame) {
 40458                           
 40459                           ;incstack = 0
 40460  017C0E  D11C               	goto	i1l1411
 40461  017C10                     
 40462                           ;main.c: 478: strcpy(OLED_RAM_Buffer.line0, "AC Power Meter");
 40463  017C10  0E40               	movlw	low _OLED_RAM_Buffer
 40464  017C12  0101               	movlb	1	; () banked
 40465  017C14  6F17               	movwf	i1strcpy@to& (0+255),b
 40466  017C16  0E03               	movlw	high _OLED_RAM_Buffer
 40467  017C18  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40468  017C1A  0EAA               	movlw	low STR_2
 40469  017C1C  6F19               	movwf	i1strcpy@from& (0+255),b
 40470  017C1E  0EFD               	movlw	high STR_2
 40471  017C20  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40472  017C22  EC31  F0D9         	call	i1_strcpy	;wreg free
 40473                           
 40474                           ;main.c: 479: strcpy(OLED_RAM_Buffer.line1, "ELEN 3035");
 40475  017C26  0E51               	movlw	low (_OLED_RAM_Buffer+17)
 40476  017C28  0101               	movlb	1	; () banked
 40477  017C2A  6F17               	movwf	i1strcpy@to& (0+255),b
 40478  017C2C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 40479  017C2E  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40480  017C30  0E78               	movlw	low STR_3
 40481  017C32  6F19               	movwf	i1strcpy@from& (0+255),b
 40482  017C34  0EFF               	movlw	high STR_3
 40483  017C36  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40484  017C38  EC31  F0D9         	call	i1_strcpy	;wreg free
 40485                           
 40486                           ;main.c: 480: strcpy(OLED_RAM_Buffer.line2, "Final Project");
 40487  017C3C  0E62               	movlw	low (_OLED_RAM_Buffer+34)
 40488  017C3E  0101               	movlb	1	; () banked
 40489  017C40  6F17               	movwf	i1strcpy@to& (0+255),b
 40490  017C42  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 40491  017C44  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40492  017C46  0E0D               	movlw	low STR_4
 40493  017C48  6F19               	movwf	i1strcpy@from& (0+255),b
 40494  017C4A  0EFE               	movlw	high STR_4
 40495  017C4C  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40496  017C4E  EC31  F0D9         	call	i1_strcpy	;wreg free
 40497                           
 40498                           ;main.c: 481: strcpy(OLED_RAM_Buffer.line3, getCauseOfResetStringSmall(reset_cause));
 40499  017C52  0E73               	movlw	low (_OLED_RAM_Buffer+51)
 40500  017C54  0101               	movlb	1	; () banked
 40501  017C56  6F17               	movwf	i1strcpy@to& (0+255),b
 40502  017C58  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 40503  017C5A  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40504  017C5C  0102               	movlb	2	; () banked
 40505  017C5E  51FE               	movf	_reset_cause& (0+255),w,b
 40506  017C60  ECFD  F0DC         	call	i1_getCauseOfResetStringSmall
 40507  017C64  C100  F119         	movff	?i1_getCauseOfResetStringSmall,i1strcpy@from
 40508  017C68  C101  F11A         	movff	?i1_getCauseOfResetStringSmall+1,i1strcpy@from+1
 40509  017C6C  EC31  F0D9         	call	i1_strcpy	;wreg free
 40510                           
 40511                           ;main.c: 482: OLED_UpdateFromRAMBuffer();
 40512  017C70  EC28  F0D3         	call	i1_OLED_UpdateFromRAMBuffer	;wreg free
 40513                           
 40514                           ;main.c: 483: OLED_Frame = Boot_Frame_2;
 40515  017C74  0E01               	movlw	1
 40516  017C76  0101               	movlb	1	; () banked
 40517  017C78  6F9D               	movwf	_OLED_Frame& (0+255),b
 40518                           
 40519                           ;main.c: 484: break;
 40520  017C7A  0012               	return	
 40521  017C7C                     
 40522                           ; BSR set to: 1
 40523                           ;main.c: 489: strcpy(OLED_RAM_Buffer.line0, "Device ID:");
 40524                           
 40525                           ; BSR set to: 1
 40526  017C7C  0E40               	movlw	low _OLED_RAM_Buffer
 40527  017C7E  6F17               	movwf	i1strcpy@to& (0+255),b
 40528  017C80  0E03               	movlw	high _OLED_RAM_Buffer
 40529  017C82  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40530  017C84  0E3B               	movlw	low STR_5
 40531  017C86  6F19               	movwf	i1strcpy@from& (0+255),b
 40532  017C88  0EFF               	movlw	high STR_5
 40533  017C8A  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40534  017C8C  EC31  F0D9         	call	i1_strcpy	;wreg free
 40535                           
 40536                           ;main.c: 490: char dev_id_str[16];
 40537                           ;main.c: 491: strcpy(dev_id_str, getDeviceIDString(getDeviceID()));
 40538  017C90  0E25               	movlw	low i1OLED_updateCallback@dev_id_str
 40539  017C92  0101               	movlb	1	; () banked
 40540  017C94  6F17               	movwf	i1strcpy@to& (0+255),b
 40541  017C96  0E01               	movlw	high i1OLED_updateCallback@dev_id_str
 40542  017C98  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40543  017C9A  EC69  F0DE         	call	i1_getDeviceID	;wreg free
 40544  017C9E  C10B  F10D         	movff	?i1_getDeviceID,i1getDeviceIDString@inputDevID
 40545  017CA2  C10C  F10E         	movff	?i1_getDeviceID+1,i1getDeviceIDString@inputDevID+1
 40546  017CA6  ECEC  F0D5         	call	i1_getDeviceIDString	;wreg free
 40547  017CAA  C10D  F119         	movff	?i1_getDeviceIDString,i1strcpy@from
 40548  017CAE  C10E  F11A         	movff	?i1_getDeviceIDString+1,i1strcpy@from+1
 40549  017CB2  EC31  F0D9         	call	i1_strcpy	;wreg free
 40550                           
 40551                           ;main.c: 492: strcpy(OLED_RAM_Buffer.line1, dev_id_str);
 40552  017CB6  0E51               	movlw	low (_OLED_RAM_Buffer+17)
 40553  017CB8  0101               	movlb	1	; () banked
 40554  017CBA  6F17               	movwf	i1strcpy@to& (0+255),b
 40555  017CBC  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 40556  017CBE  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40557  017CC0  0E25               	movlw	low i1OLED_updateCallback@dev_id_str
 40558  017CC2  6F19               	movwf	i1strcpy@from& (0+255),b
 40559  017CC4  0E01               	movlw	high i1OLED_updateCallback@dev_id_str
 40560  017CC6  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40561  017CC8  EC31  F0D9         	call	i1_strcpy	;wreg free
 40562                           
 40563                           ;main.c: 495: strcpy(OLED_RAM_Buffer.line2, "Revision ID:");
 40564  017CCC  0E62               	movlw	low (_OLED_RAM_Buffer+34)
 40565  017CCE  0101               	movlb	1	; () banked
 40566  017CD0  6F17               	movwf	i1strcpy@to& (0+255),b
 40567  017CD2  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 40568  017CD4  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40569  017CD6  0E83               	movlw	low STR_6
 40570  017CD8  6F19               	movwf	i1strcpy@from& (0+255),b
 40571  017CDA  0EFE               	movlw	high STR_6
 40572  017CDC  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40573  017CDE  EC31  F0D9         	call	i1_strcpy	;wreg free
 40574                           
 40575                           ;main.c: 497: char rev_id_str[5];
 40576                           ;main.c: 498: rev_id_str[0] = (char) getMajorRevisionID() + 65;
 40577  017CE2  EC1B  F0DB         	call	i1_getMajorRevisionID	;wreg free
 40578  017CE6  0F41               	addlw	65
 40579  017CE8  0101               	movlb	1	; () banked
 40580  017CEA  6F35               	movwf	i1OLED_updateCallback@rev_id_str& (0+255),b
 40581                           
 40582                           ; BSR set to: 1
 40583                           ;main.c: 499: rev_id_str[1] = '0';
 40584  017CEC  0E30               	movlw	48
 40585  017CEE  6F36               	movwf	(i1OLED_updateCallback@rev_id_str+1)& (0+255),b
 40586                           
 40587                           ; BSR set to: 1
 40588                           ;main.c: 500: rev_id_str[2] = '0';
 40589  017CF0  0E30               	movlw	48
 40590  017CF2  6F37               	movwf	(i1OLED_updateCallback@rev_id_str+2)& (0+255),b
 40591                           
 40592                           ; BSR set to: 1
 40593                           ;main.c: 501: rev_id_str[3] = getMinorRevisionID() + 48;
 40594  017CF4  ECB6  F0DD         	call	i1_getMinorRevisionID	;wreg free
 40595  017CF8  0F30               	addlw	48
 40596  017CFA  0101               	movlb	1	; () banked
 40597  017CFC  6F38               	movwf	(i1OLED_updateCallback@rev_id_str+3)& (0+255),b
 40598                           
 40599                           ; BSR set to: 1
 40600                           ;main.c: 502: rev_id_str[4] = '\0';
 40601  017CFE  0E00               	movlw	0
 40602  017D00  6F39               	movwf	(i1OLED_updateCallback@rev_id_str+4)& (0+255),b
 40603                           
 40604                           ; BSR set to: 1
 40605                           ;main.c: 503: strcpy(OLED_RAM_Buffer.line3, rev_id_str);
 40606  017D02  0E73               	movlw	low (_OLED_RAM_Buffer+51)
 40607  017D04  6F17               	movwf	i1strcpy@to& (0+255),b
 40608  017D06  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 40609  017D08  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40610  017D0A  0E35               	movlw	low i1OLED_updateCallback@rev_id_str
 40611  017D0C  6F19               	movwf	i1strcpy@from& (0+255),b
 40612  017D0E  0E01               	movlw	high i1OLED_updateCallback@rev_id_str
 40613  017D10  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40614  017D12  EC31  F0D9         	call	i1_strcpy	;wreg free
 40615                           
 40616                           ;main.c: 505: OLED_UpdateFromRAMBuffer();
 40617  017D16  EC28  F0D3         	call	i1_OLED_UpdateFromRAMBuffer	;wreg free
 40618                           
 40619                           ;main.c: 506: OLED_Frame = Boot_Frame_3;
 40620  017D1A  0E02               	movlw	2
 40621  017D1C  0101               	movlb	1	; () banked
 40622  017D1E  6F9D               	movwf	_OLED_Frame& (0+255),b
 40623                           
 40624                           ;main.c: 507: break;
 40625  017D20  0012               	return	
 40626  017D22                     
 40627                           ; BSR set to: 1
 40628                           ;main.c: 510: strcpy(OLED_RAM_Buffer.line0, "COM Port Setup:");
 40629                           
 40630                           ; BSR set to: 1
 40631  017D22  0E40               	movlw	low _OLED_RAM_Buffer
 40632  017D24  6F17               	movwf	i1strcpy@to& (0+255),b
 40633  017D26  0E03               	movlw	high _OLED_RAM_Buffer
 40634  017D28  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40635  017D2A  0E30               	movlw	low STR_7
 40636  017D2C  6F19               	movwf	i1strcpy@from& (0+255),b
 40637  017D2E  0EFD               	movlw	high STR_7
 40638  017D30  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40639  017D32  EC31  F0D9         	call	i1_strcpy	;wreg free
 40640                           
 40641                           ;main.c: 511: strcpy(OLED_RAM_Buffer.line1, "115.2 kbs");
 40642  017D36  0E51               	movlw	low (_OLED_RAM_Buffer+17)
 40643  017D38  0101               	movlb	1	; () banked
 40644  017D3A  6F17               	movwf	i1strcpy@to& (0+255),b
 40645  017D3C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 40646  017D3E  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40647  017D40  0E82               	movlw	low STR_8
 40648  017D42  6F19               	movwf	i1strcpy@from& (0+255),b
 40649  017D44  0EFF               	movlw	high STR_8
 40650  017D46  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40651  017D48  EC31  F0D9         	call	i1_strcpy	;wreg free
 40652                           
 40653                           ;main.c: 512: strcpy(OLED_RAM_Buffer.line2, "8bit, no parity");
 40654  017D4C  0E62               	movlw	low (_OLED_RAM_Buffer+34)
 40655  017D4E  0101               	movlb	1	; () banked
 40656  017D50  6F17               	movwf	i1strcpy@to& (0+255),b
 40657  017D52  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 40658  017D54  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40659  017D56  0E40               	movlw	low STR_9
 40660  017D58  6F19               	movwf	i1strcpy@from& (0+255),b
 40661  017D5A  0EFD               	movlw	high STR_9
 40662  017D5C  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40663  017D5E  EC31  F0D9         	call	i1_strcpy	;wreg free
 40664                           
 40665                           ;main.c: 513: strcpy(OLED_RAM_Buffer.line3, "1 stp, no flow ctrl");
 40666  017D62  0E73               	movlw	low (_OLED_RAM_Buffer+51)
 40667  017D64  0101               	movlb	1	; () banked
 40668  017D66  6F17               	movwf	i1strcpy@to& (0+255),b
 40669  017D68  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 40670  017D6A  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40671  017D6C  0EDA               	movlw	low STR_10
 40672  017D6E  6F19               	movwf	i1strcpy@from& (0+255),b
 40673  017D70  0EFB               	movlw	high STR_10
 40674  017D72  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40675  017D74  EC31  F0D9         	call	i1_strcpy	;wreg free
 40676                           
 40677                           ;main.c: 515: OLED_UpdateFromRAMBuffer();
 40678  017D78  EC28  F0D3         	call	i1_OLED_UpdateFromRAMBuffer	;wreg free
 40679                           
 40680                           ;main.c: 516: OLED_Frame = Boot_Frame_4;;
 40681  017D7C  0E03               	movlw	3
 40682  017D7E  0101               	movlb	1	; () banked
 40683  017D80  6F9D               	movwf	_OLED_Frame& (0+255),b
 40684                           
 40685                           ;main.c: 517: break;
 40686  017D82  0012               	return	
 40687  017D84                     
 40688                           ; BSR set to: 1
 40689                           ;main.c: 520: strcpy(OLED_RAM_Buffer.line0, "Boot Complete");
 40690                           
 40691                           ; BSR set to: 1
 40692  017D84  0E40               	movlw	low _OLED_RAM_Buffer
 40693  017D86  6F17               	movwf	i1strcpy@to& (0+255),b
 40694  017D88  0E03               	movlw	high _OLED_RAM_Buffer
 40695  017D8A  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40696  017D8C  0EFF               	movlw	low STR_11
 40697  017D8E  6F19               	movwf	i1strcpy@from& (0+255),b
 40698  017D90  0EFD               	movlw	high STR_11
 40699  017D92  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40700  017D94  EC31  F0D9         	call	i1_strcpy	;wreg free
 40701                           
 40702                           ;main.c: 521: strcpy(OLED_RAM_Buffer.line1, "Ready");
 40703  017D98  0E51               	movlw	low (_OLED_RAM_Buffer+17)
 40704  017D9A  0101               	movlb	1	; () banked
 40705  017D9C  6F17               	movwf	i1strcpy@to& (0+255),b
 40706  017D9E  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 40707  017DA0  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40708  017DA2  0EA8               	movlw	low STR_12
 40709  017DA4  6F19               	movwf	i1strcpy@from& (0+255),b
 40710  017DA6  0EFF               	movlw	high STR_12
 40711  017DA8  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40712  017DAA  EC31  F0D9         	call	i1_strcpy	;wreg free
 40713                           
 40714                           ;main.c: 522: strcpy(OLED_RAM_Buffer.line2, "Load Disabled");
 40715  017DAE  0E62               	movlw	low (_OLED_RAM_Buffer+34)
 40716  017DB0  0101               	movlb	1	; () banked
 40717  017DB2  6F17               	movwf	i1strcpy@to& (0+255),b
 40718  017DB4  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 40719  017DB6  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40720  017DB8  0EF1               	movlw	low STR_13
 40721  017DBA  6F19               	movwf	i1strcpy@from& (0+255),b
 40722  017DBC  0EFD               	movlw	high STR_13
 40723  017DBE  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40724  017DC0  EC31  F0D9         	call	i1_strcpy	;wreg free
 40725                           
 40726                           ;main.c: 523: strcpy(OLED_RAM_Buffer.line3, " ");
 40727  017DC4  0E73               	movlw	low (_OLED_RAM_Buffer+51)
 40728  017DC6  0101               	movlb	1	; () banked
 40729  017DC8  6F17               	movwf	i1strcpy@to& (0+255),b
 40730  017DCA  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 40731  017DCC  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40732  017DCE  0E29               	movlw	low (STR_141+23)
 40733  017DD0  6F19               	movwf	i1strcpy@from& (0+255),b
 40734  017DD2  0EFB               	movlw	high (STR_141+23)
 40735  017DD4  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40736  017DD6  EC31  F0D9         	call	i1_strcpy	;wreg free
 40737                           
 40738                           ;main.c: 525: OLED_UpdateFromRAMBuffer();
 40739  017DDA  EC28  F0D3         	call	i1_OLED_UpdateFromRAMBuffer	;wreg free
 40740                           
 40741                           ;main.c: 526: OLED_Frame = Idle;
 40742  017DDE  0E0B               	movlw	11
 40743  017DE0  0101               	movlb	1	; () banked
 40744  017DE2  6F9D               	movwf	_OLED_Frame& (0+255),b
 40745                           
 40746                           ; BSR set to: 1
 40747                           ;main.c: 534: break;
 40748                           
 40749                           ;main.c: 533: case Max_Values:
 40750                           
 40751                           ; BSR set to: 1
 40752                           ;main.c: 531: break;
 40753                           
 40754                           ;main.c: 530: case Current_Values:
 40755                           
 40756                           ;main.c: 528: break;
 40757  017DE4  0012               	return	
 40758  017DE6                     
 40759                           ; BSR set to: 1
 40760                           ;main.c: 537: strcpy(OLED_RAM_Buffer.line0, "Load Enabled");
 40761                           
 40762                           ; BSR set to: 1
 40763  017DE6  0E40               	movlw	low _OLED_RAM_Buffer
 40764  017DE8  6F17               	movwf	i1strcpy@to& (0+255),b
 40765  017DEA  0E03               	movlw	high _OLED_RAM_Buffer
 40766  017DEC  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40767  017DEE  0E90               	movlw	low STR_15
 40768  017DF0  6F19               	movwf	i1strcpy@from& (0+255),b
 40769  017DF2  0EFE               	movlw	high STR_15
 40770  017DF4  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40771  017DF6  EC31  F0D9         	call	i1_strcpy	;wreg free
 40772                           
 40773                           ;main.c: 538: strcpy(OLED_RAM_Buffer.line1, " ");
 40774  017DFA  0E51               	movlw	low (_OLED_RAM_Buffer+17)
 40775  017DFC  0101               	movlb	1	; () banked
 40776  017DFE  6F17               	movwf	i1strcpy@to& (0+255),b
 40777  017E00  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 40778  017E02  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40779  017E04  0E29               	movlw	low (STR_141+23)
 40780  017E06  6F19               	movwf	i1strcpy@from& (0+255),b
 40781  017E08  0EFB               	movlw	high (STR_141+23)
 40782  017E0A  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40783  017E0C  EC31  F0D9         	call	i1_strcpy	;wreg free
 40784                           
 40785                           ;main.c: 539: strcpy(OLED_RAM_Buffer.line2, " ");
 40786  017E10  0E62               	movlw	low (_OLED_RAM_Buffer+34)
 40787  017E12  0101               	movlb	1	; () banked
 40788  017E14  6F17               	movwf	i1strcpy@to& (0+255),b
 40789  017E16  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 40790  017E18  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40791  017E1A  0E29               	movlw	low (STR_141+23)
 40792  017E1C  6F19               	movwf	i1strcpy@from& (0+255),b
 40793  017E1E  0EFB               	movlw	high (STR_141+23)
 40794  017E20  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40795  017E22  EC31  F0D9         	call	i1_strcpy	;wreg free
 40796                           
 40797                           ;main.c: 540: strcpy(OLED_RAM_Buffer.line3, " ");
 40798  017E26  0E73               	movlw	low (_OLED_RAM_Buffer+51)
 40799  017E28  0101               	movlb	1	; () banked
 40800  017E2A  6F17               	movwf	i1strcpy@to& (0+255),b
 40801  017E2C  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 40802  017E2E  6F18               	movwf	(i1strcpy@to+1)& (0+255),b
 40803  017E30  0E29               	movlw	low (STR_141+23)
 40804  017E32  6F19               	movwf	i1strcpy@from& (0+255),b
 40805  017E34  0EFB               	movlw	high (STR_141+23)
 40806  017E36  6F1A               	movwf	(i1strcpy@from+1)& (0+255),b
 40807  017E38  EC31  F0D9         	call	i1_strcpy	;wreg free
 40808                           
 40809                           ;main.c: 542: OLED_UpdateFromRAMBuffer();
 40810  017E3C  EC28  F0D3         	call	i1_OLED_UpdateFromRAMBuffer	;wreg free
 40811                           
 40812                           ;main.c: 544: OLED_Frame = Idle;
 40813  017E40  0E0B               	movlw	11
 40814  017E42  0101               	movlb	1	; () banked
 40815  017E44  6F9D               	movwf	_OLED_Frame& (0+255),b
 40816                           
 40817                           ; BSR set to: 1
 40818                           ;main.c: 566: }
 40819                           
 40820                           ; BSR set to: 1
 40821                           ;main.c: 564: break;
 40822                           
 40823                           ;main.c: 563: default:
 40824                           
 40825                           ; BSR set to: 1
 40826                           ;main.c: 561: break;
 40827                           
 40828                           ;main.c: 560: case Idle:
 40829                           
 40830                           ; BSR set to: 1
 40831                           ;main.c: 558: break;
 40832                           
 40833                           ;main.c: 557: case Dimming_Percentage:
 40834                           
 40835                           ; BSR set to: 1
 40836                           ;main.c: 555: break;
 40837                           
 40838                           ;main.c: 554: case Dimming_Disabled:
 40839                           
 40840                           ; BSR set to: 1
 40841                           ;main.c: 552: break;
 40842                           
 40843                           ;main.c: 551: case Dimming_Enabled:
 40844                           
 40845                           ; BSR set to: 1
 40846                           ;main.c: 549: break;
 40847                           
 40848                           ;main.c: 548: case Load_Disabled:
 40849                           
 40850                           ;main.c: 546: break;
 40851  017E46  0012               	return	
 40852  017E48                     i1l1411:
 40853                           
 40854                           ; BSR set to: 1
 40855  017E48  0101               	movlb	1	; () banked
 40856  017E4A  519D               	movf	_OLED_Frame& (0+255),w,b
 40857                           
 40858                           ; Switch size 1, requested type "space"
 40859                           ; Number of cases is 12, Range of values is 0 to 11
 40860                           ; switch strategies available:
 40861                           ; Name         Instructions Cycles
 40862                           ; simple_byte           37    19 (average)
 40863                           ;	Chosen strategy is simple_byte
 40864  017E4C  0A00               	xorlw	0	; case 0
 40865  017E4E  B4D8               	btfsc	status,2,c
 40866  017E50  D6DF               	goto	i1l1412
 40867  017E52  0A01               	xorlw	1	; case 1
 40868  017E54  B4D8               	btfsc	status,2,c
 40869  017E56  D712               	goto	i1l1414
 40870  017E58  0A03               	xorlw	3	; case 2
 40871  017E5A  B4D8               	btfsc	status,2,c
 40872  017E5C  D762               	goto	i1l1415
 40873  017E5E  0A01               	xorlw	1	; case 3
 40874  017E60  B4D8               	btfsc	status,2,c
 40875  017E62  D790               	goto	i1l1416
 40876  017E64  0A07               	xorlw	7	; case 4
 40877  017E66  B4D8               	btfsc	status,2,c
 40878  017E68  0012               	return	
 40879  017E6A  0A01               	xorlw	1	; case 5
 40880  017E6C  B4D8               	btfsc	status,2,c
 40881  017E6E  0012               	return	
 40882  017E70  0A03               	xorlw	3	; case 6
 40883  017E72  B4D8               	btfsc	status,2,c
 40884  017E74  D7B8               	goto	i1l1419
 40885  017E76  0A01               	xorlw	1	; case 7
 40886  017E78  B4D8               	btfsc	status,2,c
 40887  017E7A  0012               	return	
 40888  017E7C  0A0F               	xorlw	15	; case 8
 40889  017E7E  B4D8               	btfsc	status,2,c
 40890  017E80  0012               	return	
 40891  017E82  0A01               	xorlw	1	; case 9
 40892  017E84  B4D8               	btfsc	status,2,c
 40893  017E86  0012               	return	
 40894  017E88  0A03               	xorlw	3	; case 10
 40895  017E8A  B4D8               	btfsc	status,2,c
 40896  017E8C  0012               	return	
 40897  017E8E  0A01               	xorlw	1	; case 11
 40898  017E90  0012               	return	
 40899  017E92                     __end_ofi1_OLED_updateCallback:
 40900                           	opt stack 0
 40901                           tosu	equ	0xFFF
 40902                           tosh	equ	0xFFE
 40903                           tosl	equ	0xFFD
 40904                           pclatu	equ	0xFFB
 40905                           pclath	equ	0xFFA
 40906                           tblptru	equ	0xFF8
 40907                           tblptrh	equ	0xFF7
 40908                           tblptrl	equ	0xFF6
 40909                           tablat	equ	0xFF5
 40910                           prodh	equ	0xFF4
 40911                           prodl	equ	0xFF3
 40912                           intcon	equ	0xFF2
 40913                           indf0	equ	0xFEF
 40914                           postinc0	equ	0xFEE
 40915                           fsr0h	equ	0xFEA
 40916                           fsr0l	equ	0xFE9
 40917                           wreg	equ	0xFE8
 40918                           indf1	equ	0xFE7
 40919                           postdec1	equ	0xFE5
 40920                           plusw1	equ	0xFE3
 40921                           fsr1h	equ	0xFE2
 40922                           fsr1l	equ	0xFE1
 40923                           bsr	equ	0xFE0
 40924                           indf2	equ	0xFDF
 40925                           postinc2	equ	0xFDE
 40926                           postdec2	equ	0xFDD
 40927                           plusw2	equ	0xFDB
 40928                           fsr2h	equ	0xFDA
 40929                           fsr2l	equ	0xFD9
 40930                           status	equ	0xFD8
 40931                           
 40932 ;; *************** function i1_strcpy *****************
 40933 ;; Defined at:
 40934 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 40935 ;; Parameters:    Size  Location     Type
 40936 ;;  to              2   23[BANK1 ] PTR unsigned char 
 40937 ;;		 -> OLED_updateCallback@dev_id_str(16), OLED_RAM_Buffer(68), 
 40938 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 40939 ;;		 -> STR_211(10), STR_210(11), STR_209(11), STR_208(15), 
 40940 ;;		 -> STR_207(11), STR_206(10), STR_205(11), STR_204(10), 
 40941 ;;		 -> STR_203(10), STR_202(10), STR_191(10), STR_190(13), 
 40942 ;;		 -> STR_189(12), STR_18(2), STR_17(2), STR_16(2), 
 40943 ;;		 -> STR_15(13), STR_14(2), STR_13(14), STR_12(6), 
 40944 ;;		 -> STR_11(14), STR_10(20), STR_9(16), STR_8(10), 
 40945 ;;		 -> STR_7(16), OLED_updateCallback@rev_id_str(5), STR_6(13), OLED_updateCallback@dev_id_str(16), 
 40946 ;;		 -> STR_5(11), STR_4(14), STR_3(10), STR_2(15), 
 40947 ;; Auto vars:     Size  Location     Type
 40948 ;;  strcpy          2   27[BANK1 ] PTR unsigned char 
 40949 ;;		 -> OLED_updateCallback@dev_id_str(16), OLED_RAM_Buffer(68), 
 40950 ;; Return value:  Size  Location     Type
 40951 ;;                  2   23[BANK1 ] PTR unsigned char 
 40952 ;; Registers used:
 40953 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 40954 ;; Tracked objects:
 40955 ;;		On entry : 0/0
 40956 ;;		On exit  : 0/0
 40957 ;;		Unchanged: 0/0
 40958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 40959 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40960 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40962 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40963 ;;Total ram usage:        6 bytes
 40964 ;; Hardware stack levels used:    1
 40965 ;; Hardware stack levels required when called:    9
 40966 ;; This function calls:
 40967 ;;		Nothing
 40968 ;; This function is called by:
 40969 ;;		i1_OLED_updateCallback
 40970 ;; This function uses a non-reentrant model
 40971 ;;
 40972                           
 40973                           	psect	text115
 40974  01B262                     __ptext115:
 40975                           	opt stack 0
 40976  01B262                     i1_strcpy:
 40977                           	opt stack 8
 40978                           
 40979                           ; BSR set to: 1
 40980                           ;incstack = 0
 40981  01B262  C117  F11B         	movff	i1strcpy@to,i1strcpy@cp
 40982  01B266  C118  F11C         	movff	i1strcpy@to+1,i1strcpy@cp+1
 40983  01B26A  D005               	goto	i1l3034
 40984  01B26C  0101               	movlb	1	; () banked
 40985  01B26E  4B1B               	infsnz	i1strcpy@cp& (0+255),f,b
 40986  01B270  2B1C               	incf	(i1strcpy@cp+1)& (0+255),f,b
 40987  01B272  4B19               	infsnz	i1strcpy@from& (0+255),f,b
 40988  01B274  2B1A               	incf	(i1strcpy@from+1)& (0+255),f,b
 40989  01B276                     i1l3034:
 40990                           
 40991                           ; BSR set to: 1
 40992  01B276  C119  FFF6         	movff	i1strcpy@from,tblptrl
 40993  01B27A  C11A  FFF7         	movff	i1strcpy@from+1,tblptrh
 40994  01B27E  0E00               	movlw	low (__mediumconst shr (0+16))
 40995  01B280  6EF8               	movwf	tblptru,c
 40996  01B282  C11B  FFD9         	movff	i1strcpy@cp,fsr2l
 40997  01B286  C11C  FFDA         	movff	i1strcpy@cp+1,fsr2h
 40998  01B28A  0E0D               	movlw	(high __ramtop+-1)
 40999  01B28C  64F7               	cpfsgt	tblptrh,c
 41000  01B28E  D003               	bra	i1u2265_27
 41001  01B290  0008               	tblrd		*
 41002  01B292  50F5               	movf	tablat,w,c
 41003  01B294  D005               	bra	i1u2265_20
 41004  01B296                     i1u2265_27:
 41005  01B296  CFF6 FFE9          	movff	tblptrl,fsr0l
 41006  01B29A  CFF7 FFEA          	movff	tblptrh,fsr0h
 41007  01B29E  50EF               	movf	indf0,w,c
 41008  01B2A0                     i1u2265_20:
 41009  01B2A0  6EDF               	movwf	indf2,c
 41010  01B2A2  50DF               	movf	indf2,w,c
 41011  01B2A4  B4D8               	btfsc	status,2,c
 41012  01B2A6  0012               	return	
 41013  01B2A8  D7E1               	goto	i1l3035
 41014  01B2AA                     __end_ofi1_strcpy:
 41015                           	opt stack 0
 41016                           tosu	equ	0xFFF
 41017                           tosh	equ	0xFFE
 41018                           tosl	equ	0xFFD
 41019                           pclatu	equ	0xFFB
 41020                           pclath	equ	0xFFA
 41021                           tblptru	equ	0xFF8
 41022                           tblptrh	equ	0xFF7
 41023                           tblptrl	equ	0xFF6
 41024                           tablat	equ	0xFF5
 41025                           prodh	equ	0xFF4
 41026                           prodl	equ	0xFF3
 41027                           intcon	equ	0xFF2
 41028                           indf0	equ	0xFEF
 41029                           postinc0	equ	0xFEE
 41030                           fsr0h	equ	0xFEA
 41031                           fsr0l	equ	0xFE9
 41032                           wreg	equ	0xFE8
 41033                           indf1	equ	0xFE7
 41034                           postdec1	equ	0xFE5
 41035                           plusw1	equ	0xFE3
 41036                           fsr1h	equ	0xFE2
 41037                           fsr1l	equ	0xFE1
 41038                           bsr	equ	0xFE0
 41039                           indf2	equ	0xFDF
 41040                           postinc2	equ	0xFDE
 41041                           postdec2	equ	0xFDD
 41042                           plusw2	equ	0xFDB
 41043                           fsr2h	equ	0xFDA
 41044                           fsr2l	equ	0xFD9
 41045                           status	equ	0xFD8
 41046                           
 41047 ;; *************** function i1_getMinorRevisionID *****************
 41048 ;; Defined at:
 41049 ;;		line 23 in file "device_IDs.c"
 41050 ;; Parameters:    Size  Location     Type
 41051 ;;		None
 41052 ;; Auto vars:     Size  Location     Type
 41053 ;;  getMinorRevi    2   11[BANK1 ] unsigned int 
 41054 ;; Return value:  Size  Location     Type
 41055 ;;                  1    wreg      unsigned char 
 41056 ;; Registers used:
 41057 ;;		wreg, status,2, status,0, cstack
 41058 ;; Tracked objects:
 41059 ;;		On entry : 0/0
 41060 ;;		On exit  : 0/0
 41061 ;;		Unchanged: 0/0
 41062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41064 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41066 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41067 ;;Total ram usage:        2 bytes
 41068 ;; Hardware stack levels used:    1
 41069 ;; Hardware stack levels required when called:   11
 41070 ;; This function calls:
 41071 ;;		i1_FLASH_ReadWord
 41072 ;; This function is called by:
 41073 ;;		i1_OLED_updateCallback
 41074 ;; This function uses a non-reentrant model
 41075 ;;
 41076                           
 41077                           	psect	text116
 41078  01BB6C                     __ptext116:
 41079                           	opt stack 0
 41080  01BB6C                     i1_getMinorRevisionID:
 41081                           	opt stack 6
 41082                           
 41083                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 41084                           
 41085                           ;incstack = 0
 41086  01BB6C  0EFC               	movlw	252
 41087  01BB6E  0101               	movlb	1	; () banked
 41088  01BB70  6F04               	movwf	i1FLASH_ReadWord@flashAddr& (0+255),b
 41089  01BB72  0EFF               	movlw	255
 41090  01BB74  6F05               	movwf	(i1FLASH_ReadWord@flashAddr+1)& (0+255),b
 41091  01BB76  0E3F               	movlw	63
 41092  01BB78  6F06               	movwf	(i1FLASH_ReadWord@flashAddr+2)& (0+255),b
 41093  01BB7A  0E00               	movlw	0
 41094  01BB7C  6F07               	movwf	(i1FLASH_ReadWord@flashAddr+3)& (0+255),b
 41095  01BB7E  ECE0  F0D9         	call	i1_FLASH_ReadWord	;wreg free
 41096  01BB82  C104  F10B         	movff	?i1_FLASH_ReadWord,i1getMinorRevisionID@REVID_RAW
 41097  01BB86  C105  F10C         	movff	?i1_FLASH_ReadWord+1,i1getMinorRevisionID@REVID_RAW+1
 41098                           
 41099                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 41100  01BB8A  0101               	movlb	1	; () banked
 41101  01BB8C  510B               	movf	i1getMinorRevisionID@REVID_RAW& (0+255),w,b
 41102  01BB8E  0B1F               	andlw	31
 41103  01BB90  0012               	return	
 41104  01BB92                     __end_ofi1_getMinorRevisionID:
 41105                           	opt stack 0
 41106                           tosu	equ	0xFFF
 41107                           tosh	equ	0xFFE
 41108                           tosl	equ	0xFFD
 41109                           pclatu	equ	0xFFB
 41110                           pclath	equ	0xFFA
 41111                           tblptru	equ	0xFF8
 41112                           tblptrh	equ	0xFF7
 41113                           tblptrl	equ	0xFF6
 41114                           tablat	equ	0xFF5
 41115                           prodh	equ	0xFF4
 41116                           prodl	equ	0xFF3
 41117                           intcon	equ	0xFF2
 41118                           indf0	equ	0xFEF
 41119                           postinc0	equ	0xFEE
 41120                           fsr0h	equ	0xFEA
 41121                           fsr0l	equ	0xFE9
 41122                           wreg	equ	0xFE8
 41123                           indf1	equ	0xFE7
 41124                           postdec1	equ	0xFE5
 41125                           plusw1	equ	0xFE3
 41126                           fsr1h	equ	0xFE2
 41127                           fsr1l	equ	0xFE1
 41128                           bsr	equ	0xFE0
 41129                           indf2	equ	0xFDF
 41130                           postinc2	equ	0xFDE
 41131                           postdec2	equ	0xFDD
 41132                           plusw2	equ	0xFDB
 41133                           fsr2h	equ	0xFDA
 41134                           fsr2l	equ	0xFD9
 41135                           status	equ	0xFD8
 41136                           
 41137 ;; *************** function i1_getMajorRevisionID *****************
 41138 ;; Defined at:
 41139 ;;		line 12 in file "device_IDs.c"
 41140 ;; Parameters:    Size  Location     Type
 41141 ;;		None
 41142 ;; Auto vars:     Size  Location     Type
 41143 ;;  getMajorRevi    2   14[BANK1 ] unsigned int 
 41144 ;; Return value:  Size  Location     Type
 41145 ;;                  1    wreg      unsigned char 
 41146 ;; Registers used:
 41147 ;;		wreg, status,2, status,0, cstack
 41148 ;; Tracked objects:
 41149 ;;		On entry : 0/0
 41150 ;;		On exit  : 0/0
 41151 ;;		Unchanged: 0/0
 41152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41154 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41155 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41156 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41157 ;;Total ram usage:        5 bytes
 41158 ;; Hardware stack levels used:    1
 41159 ;; Hardware stack levels required when called:   11
 41160 ;; This function calls:
 41161 ;;		i1_FLASH_ReadWord
 41162 ;; This function is called by:
 41163 ;;		i1_OLED_updateCallback
 41164 ;; This function uses a non-reentrant model
 41165 ;;
 41166                           
 41167                           	psect	text117
 41168  01B636                     __ptext117:
 41169                           	opt stack 0
 41170  01B636                     i1_getMajorRevisionID:
 41171                           	opt stack 6
 41172                           
 41173                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 41174                           
 41175                           ; BSR set to: 1
 41176                           ;incstack = 0
 41177  01B636  0EFC               	movlw	252
 41178  01B638  0101               	movlb	1	; () banked
 41179  01B63A  6F04               	movwf	i1FLASH_ReadWord@flashAddr& (0+255),b
 41180  01B63C  0EFF               	movlw	255
 41181  01B63E  6F05               	movwf	(i1FLASH_ReadWord@flashAddr+1)& (0+255),b
 41182  01B640  0E3F               	movlw	63
 41183  01B642  6F06               	movwf	(i1FLASH_ReadWord@flashAddr+2)& (0+255),b
 41184  01B644  0E00               	movlw	0
 41185  01B646  6F07               	movwf	(i1FLASH_ReadWord@flashAddr+3)& (0+255),b
 41186  01B648  ECE0  F0D9         	call	i1_FLASH_ReadWord	;wreg free
 41187  01B64C  C104  F10E         	movff	?i1_FLASH_ReadWord,i1getMajorRevisionID@REVID_RAW
 41188  01B650  C105  F10F         	movff	?i1_FLASH_ReadWord+1,i1getMajorRevisionID@REVID_RAW+1
 41189                           
 41190                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 41191  01B654  C10E  F10B         	movff	i1getMajorRevisionID@REVID_RAW,??i1_getMajorRevisionID
 41192  01B658  C10F  F10C         	movff	i1getMajorRevisionID@REVID_RAW+1,??i1_getMajorRevisionID+1
 41193  01B65C  0E06               	movlw	6
 41194  01B65E  0101               	movlb	1	; () banked
 41195  01B660  6F0D               	movwf	(??i1_getMajorRevisionID+2)& (0+255),b
 41196  01B662                     i1u2231_25:
 41197  01B662  90D8               	bcf	status,0,c
 41198  01B664  330C               	rrcf	(??i1_getMajorRevisionID+1)& (0+255),f,b
 41199  01B666  330B               	rrcf	??i1_getMajorRevisionID& (0+255),f,b
 41200  01B668  2F0D               	decfsz	(??i1_getMajorRevisionID+2)& (0+255),f,b
 41201  01B66A  D7FB               	goto	i1u2231_25
 41202  01B66C  510B               	movf	??i1_getMajorRevisionID& (0+255),w,b
 41203  01B66E  0B1F               	andlw	31
 41204  01B670  0012               	return	
 41205  01B672                     __end_ofi1_getMajorRevisionID:
 41206                           	opt stack 0
 41207                           tosu	equ	0xFFF
 41208                           tosh	equ	0xFFE
 41209                           tosl	equ	0xFFD
 41210                           pclatu	equ	0xFFB
 41211                           pclath	equ	0xFFA
 41212                           tblptru	equ	0xFF8
 41213                           tblptrh	equ	0xFF7
 41214                           tblptrl	equ	0xFF6
 41215                           tablat	equ	0xFF5
 41216                           prodh	equ	0xFF4
 41217                           prodl	equ	0xFF3
 41218                           intcon	equ	0xFF2
 41219                           indf0	equ	0xFEF
 41220                           postinc0	equ	0xFEE
 41221                           fsr0h	equ	0xFEA
 41222                           fsr0l	equ	0xFE9
 41223                           wreg	equ	0xFE8
 41224                           indf1	equ	0xFE7
 41225                           postdec1	equ	0xFE5
 41226                           plusw1	equ	0xFE3
 41227                           fsr1h	equ	0xFE2
 41228                           fsr1l	equ	0xFE1
 41229                           bsr	equ	0xFE0
 41230                           indf2	equ	0xFDF
 41231                           postinc2	equ	0xFDE
 41232                           postdec2	equ	0xFDD
 41233                           plusw2	equ	0xFDB
 41234                           fsr2h	equ	0xFDA
 41235                           fsr2l	equ	0xFD9
 41236                           status	equ	0xFD8
 41237                           
 41238 ;; *************** function i1_getDeviceIDString *****************
 41239 ;; Defined at:
 41240 ;;		line 34 in file "device_IDs.c"
 41241 ;; Parameters:    Size  Location     Type
 41242 ;;  inputDevID      2   13[BANK1 ] unsigned int 
 41243 ;; Auto vars:     Size  Location     Type
 41244 ;;  getDeviceIDS    6   17[BANK1 ] PTR const unsigned char 
 41245 ;;		 -> STR_191(10), STR_190(13), STR_189(12), 
 41246 ;; Return value:  Size  Location     Type
 41247 ;;                  2   13[BANK1 ] PTR inline unsigned char
 41248 ;; Registers used:
 41249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 41250 ;; Tracked objects:
 41251 ;;		On entry : 0/0
 41252 ;;		On exit  : 0/0
 41253 ;;		Unchanged: 0/0
 41254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41255 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41256 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41257 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41258 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41259 ;;Total ram usage:       10 bytes
 41260 ;; Hardware stack levels used:    1
 41261 ;; Hardware stack levels required when called:    9
 41262 ;; This function calls:
 41263 ;;		Nothing
 41264 ;; This function is called by:
 41265 ;;		i1_OLED_updateCallback
 41266 ;; This function uses a non-reentrant model
 41267 ;;
 41268                           
 41269                           	psect	text118
 41270  01ABD8                     __ptext118:
 41271                           	opt stack 0
 41272  01ABD8                     i1_getDeviceIDString:
 41273                           	opt stack 8
 41274                           
 41275                           ;device_IDs.c: 37: const char *strings[] = {
 41276                           ;device_IDs.c: 39: "PIC18F67K40",
 41277                           ;device_IDs.c: 40: "PIC18LF67K40",
 41278                           ;device_IDs.c: 41: "Undefined"
 41279                           ;device_IDs.c: 43: };
 41280                           
 41281                           ; BSR set to: 1
 41282                           ;incstack = 0
 41283  01ABD8  EE22  F0EE         	lfsr	2,getDeviceIDString@F17550
 41284  01ABDC  EE11  F011         	lfsr	1,i1getDeviceIDString@strings
 41285  01ABE0  0E05               	movlw	5
 41286  01ABE2                     i1u2232_21:
 41287  01ABE2  CFDB FFE3          	movff	plusw2,plusw1
 41288  01ABE6  06E8               	decf	wreg,f,c
 41289  01ABE8  E2FC               	bc	i1u2232_21
 41290                           
 41291                           ;device_IDs.c: 47: switch (inputDevID) {
 41292  01ABEA  D00F               	goto	i1l1805
 41293  01ABEC                     
 41294                           ;device_IDs.c: 50: return strings[0];
 41295  01ABEC  C111  F10D         	movff	i1getDeviceIDString@strings,?i1_getDeviceIDString
 41296  01ABF0  C112  F10E         	movff	i1getDeviceIDString@strings+1,?i1_getDeviceIDString+1
 41297                           
 41298                           ;device_IDs.c: 51: break;
 41299  01ABF4  0012               	return	
 41300  01ABF6                     
 41301                           ;device_IDs.c: 54: return strings[1];
 41302  01ABF6  C113  F10D         	movff	i1getDeviceIDString@strings+2,?i1_getDeviceIDString
 41303  01ABFA  C114  F10E         	movff	i1getDeviceIDString@strings+3,?i1_getDeviceIDString+1
 41304                           
 41305                           ;device_IDs.c: 55: break;
 41306  01ABFE  0012               	return	
 41307  01AC00                     
 41308                           ;device_IDs.c: 58: return strings[2];
 41309  01AC00  C115  F10D         	movff	i1getDeviceIDString@strings+4,?i1_getDeviceIDString
 41310  01AC04  C116  F10E         	movff	i1getDeviceIDString@strings+5,?i1_getDeviceIDString+1
 41311                           
 41312                           ;device_IDs.c: 61: }
 41313                           
 41314                           ;device_IDs.c: 59: break;
 41315  01AC08  0012               	return	
 41316  01AC0A                     i1l1805:
 41317  01AC0A  C10D  F10F         	movff	i1getDeviceIDString@inputDevID,??i1_getDeviceIDString
 41318  01AC0E  C10E  F110         	movff	i1getDeviceIDString@inputDevID+1,??i1_getDeviceIDString+1
 41319                           
 41320                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 41321                           ; Switch size 1, requested type "space"
 41322                           ; Number of cases is 2, Range of values is 106 to 107
 41323                           ; switch strategies available:
 41324                           ; Name         Instructions Cycles
 41325                           ; simple_byte            7     4 (average)
 41326                           ;	Chosen strategy is simple_byte
 41327  01AC12  0101               	movlb	1	; () banked
 41328  01AC14  5110               	movf	(??i1_getDeviceIDString+1)& (0+255),w,b
 41329  01AC16  0A6A               	xorlw	106	; case 106
 41330  01AC18  B4D8               	btfsc	status,2,c
 41331  01AC1A  D004               	goto	i1l25897
 41332  01AC1C  0A01               	xorlw	1	; case 107
 41333  01AC1E  B4D8               	btfsc	status,2,c
 41334  01AC20  D006               	goto	i1l25899
 41335  01AC22  D7EE               	goto	i1l1810
 41336  01AC24                     i1l25897:
 41337                           
 41338                           ; BSR set to: 1
 41339                           ; Switch size 1, requested type "space"
 41340                           ; Number of cases is 1, Range of values is 192 to 192
 41341                           ; switch strategies available:
 41342                           ; Name         Instructions Cycles
 41343                           ; simple_byte            4     3 (average)
 41344                           ;	Chosen strategy is simple_byte
 41345  01AC24  510F               	movf	??i1_getDeviceIDString& (0+255),w,b
 41346  01AC26  0AC0               	xorlw	192	; case 192
 41347  01AC28  B4D8               	btfsc	status,2,c
 41348  01AC2A  D7E0               	goto	i1l1806
 41349  01AC2C  D7E9               	goto	i1l1810
 41350  01AC2E                     i1l25899:
 41351                           
 41352                           ; BSR set to: 1
 41353                           ; Switch size 1, requested type "space"
 41354                           ; Number of cases is 1, Range of values is 32 to 32
 41355                           ; switch strategies available:
 41356                           ; Name         Instructions Cycles
 41357                           ; simple_byte            4     3 (average)
 41358                           ;	Chosen strategy is simple_byte
 41359  01AC2E  510F               	movf	??i1_getDeviceIDString& (0+255),w,b
 41360  01AC30  0A20               	xorlw	32	; case 32
 41361  01AC32  B4D8               	btfsc	status,2,c
 41362  01AC34  D7E0               	goto	i1l1809
 41363  01AC36  D7E4               	goto	i1l1810
 41364  01AC38                     __end_ofi1_getDeviceIDString:
 41365                           	opt stack 0
 41366                           tosu	equ	0xFFF
 41367                           tosh	equ	0xFFE
 41368                           tosl	equ	0xFFD
 41369                           pclatu	equ	0xFFB
 41370                           pclath	equ	0xFFA
 41371                           tblptru	equ	0xFF8
 41372                           tblptrh	equ	0xFF7
 41373                           tblptrl	equ	0xFF6
 41374                           tablat	equ	0xFF5
 41375                           prodh	equ	0xFF4
 41376                           prodl	equ	0xFF3
 41377                           intcon	equ	0xFF2
 41378                           indf0	equ	0xFEF
 41379                           postinc0	equ	0xFEE
 41380                           fsr0h	equ	0xFEA
 41381                           fsr0l	equ	0xFE9
 41382                           wreg	equ	0xFE8
 41383                           indf1	equ	0xFE7
 41384                           postdec1	equ	0xFE5
 41385                           plusw1	equ	0xFE3
 41386                           fsr1h	equ	0xFE2
 41387                           fsr1l	equ	0xFE1
 41388                           bsr	equ	0xFE0
 41389                           indf2	equ	0xFDF
 41390                           postinc2	equ	0xFDE
 41391                           postdec2	equ	0xFDD
 41392                           plusw2	equ	0xFDB
 41393                           fsr2h	equ	0xFDA
 41394                           fsr2l	equ	0xFD9
 41395                           status	equ	0xFD8
 41396                           
 41397 ;; *************** function i1_getDeviceID *****************
 41398 ;; Defined at:
 41399 ;;		line 4 in file "device_IDs.c"
 41400 ;; Parameters:    Size  Location     Type
 41401 ;;		None
 41402 ;; Auto vars:     Size  Location     Type
 41403 ;;		None
 41404 ;; Return value:  Size  Location     Type
 41405 ;;                  2   11[BANK1 ] unsigned int 
 41406 ;; Registers used:
 41407 ;;		wreg, status,2, status,0, cstack
 41408 ;; Tracked objects:
 41409 ;;		On entry : 0/0
 41410 ;;		On exit  : 0/0
 41411 ;;		Unchanged: 0/0
 41412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41413 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41416 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41417 ;;Total ram usage:        2 bytes
 41418 ;; Hardware stack levels used:    1
 41419 ;; Hardware stack levels required when called:   11
 41420 ;; This function calls:
 41421 ;;		i1_FLASH_ReadWord
 41422 ;; This function is called by:
 41423 ;;		i1_OLED_updateCallback
 41424 ;; This function uses a non-reentrant model
 41425 ;;
 41426                           
 41427                           	psect	text119
 41428  01BCD2                     __ptext119:
 41429                           	opt stack 0
 41430  01BCD2                     i1_getDeviceID:
 41431                           	opt stack 6
 41432                           
 41433                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 41434                           
 41435                           ;incstack = 0
 41436  01BCD2  0EFE               	movlw	254
 41437  01BCD4  0101               	movlb	1	; () banked
 41438  01BCD6  6F04               	movwf	i1FLASH_ReadWord@flashAddr& (0+255),b
 41439  01BCD8  0EFF               	movlw	255
 41440  01BCDA  6F05               	movwf	(i1FLASH_ReadWord@flashAddr+1)& (0+255),b
 41441  01BCDC  0E3F               	movlw	63
 41442  01BCDE  6F06               	movwf	(i1FLASH_ReadWord@flashAddr+2)& (0+255),b
 41443  01BCE0  0E00               	movlw	0
 41444  01BCE2  6F07               	movwf	(i1FLASH_ReadWord@flashAddr+3)& (0+255),b
 41445  01BCE4  ECE0  F0D9         	call	i1_FLASH_ReadWord	;wreg free
 41446  01BCE8  C104  F10B         	movff	?i1_FLASH_ReadWord,?i1_getDeviceID
 41447  01BCEC  C105  F10C         	movff	?i1_FLASH_ReadWord+1,?i1_getDeviceID+1
 41448  01BCF0  0012               	return	
 41449  01BCF2                     __end_ofi1_getDeviceID:
 41450                           	opt stack 0
 41451                           tosu	equ	0xFFF
 41452                           tosh	equ	0xFFE
 41453                           tosl	equ	0xFFD
 41454                           pclatu	equ	0xFFB
 41455                           pclath	equ	0xFFA
 41456                           tblptru	equ	0xFF8
 41457                           tblptrh	equ	0xFF7
 41458                           tblptrl	equ	0xFF6
 41459                           tablat	equ	0xFF5
 41460                           prodh	equ	0xFF4
 41461                           prodl	equ	0xFF3
 41462                           intcon	equ	0xFF2
 41463                           indf0	equ	0xFEF
 41464                           postinc0	equ	0xFEE
 41465                           fsr0h	equ	0xFEA
 41466                           fsr0l	equ	0xFE9
 41467                           wreg	equ	0xFE8
 41468                           indf1	equ	0xFE7
 41469                           postdec1	equ	0xFE5
 41470                           plusw1	equ	0xFE3
 41471                           fsr1h	equ	0xFE2
 41472                           fsr1l	equ	0xFE1
 41473                           bsr	equ	0xFE0
 41474                           indf2	equ	0xFDF
 41475                           postinc2	equ	0xFDE
 41476                           postdec2	equ	0xFDD
 41477                           plusw2	equ	0xFDB
 41478                           fsr2h	equ	0xFDA
 41479                           fsr2l	equ	0xFD9
 41480                           status	equ	0xFD8
 41481                           
 41482 ;; *************** function i1_FLASH_ReadWord *****************
 41483 ;; Defined at:
 41484 ;;		line 71 in file "mcc_generated_files/memory.c"
 41485 ;; Parameters:    Size  Location     Type
 41486 ;;  flashAddr       4    4[BANK1 ] unsigned long 
 41487 ;; Auto vars:     Size  Location     Type
 41488 ;;		None
 41489 ;; Return value:  Size  Location     Type
 41490 ;;                  2    4[BANK1 ] unsigned int 
 41491 ;; Registers used:
 41492 ;;		wreg, status,2, status,0, cstack
 41493 ;; Tracked objects:
 41494 ;;		On entry : 0/0
 41495 ;;		On exit  : 0/0
 41496 ;;		Unchanged: 0/0
 41497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41498 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41500 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41501 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41502 ;;Total ram usage:        7 bytes
 41503 ;; Hardware stack levels used:    1
 41504 ;; Hardware stack levels required when called:   10
 41505 ;; This function calls:
 41506 ;;		i1_FLASH_ReadByte
 41507 ;; This function is called by:
 41508 ;;		i1_getDeviceID
 41509 ;;		i1_getMajorRevisionID
 41510 ;;		i1_getMinorRevisionID
 41511 ;; This function uses a non-reentrant model
 41512 ;;
 41513                           
 41514                           	psect	text120
 41515  01B3C0                     __ptext120:
 41516                           	opt stack 0
 41517  01B3C0                     i1_FLASH_ReadWord:
 41518                           	opt stack 6
 41519                           
 41520                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 41521                           
 41522                           ;incstack = 0
 41523  01B3C0  C104  F100         	movff	i1FLASH_ReadWord@flashAddr,i1FLASH_ReadByte@flashAddr
 41524  01B3C4  C105  F101         	movff	i1FLASH_ReadWord@flashAddr+1,i1FLASH_ReadByte@flashAddr+1
 41525  01B3C8  C106  F102         	movff	i1FLASH_ReadWord@flashAddr+2,i1FLASH_ReadByte@flashAddr+2
 41526  01B3CC  C107  F103         	movff	i1FLASH_ReadWord@flashAddr+3,i1FLASH_ReadByte@flashAddr+3
 41527  01B3D0  ECEA  F0DE         	call	i1_FLASH_ReadByte	;wreg free
 41528  01B3D4  0101               	movlb	1	; () banked
 41529  01B3D6  6F08               	movwf	??i1_FLASH_ReadWord& (0+255),b
 41530  01B3D8  0E01               	movlw	1
 41531  01B3DA  2504               	addwf	i1FLASH_ReadWord@flashAddr& (0+255),w,b
 41532  01B3DC  6F00               	movwf	i1FLASH_ReadByte@flashAddr& (0+255),b
 41533  01B3DE  0E00               	movlw	0
 41534  01B3E0  2105               	addwfc	(i1FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 41535  01B3E2  6F01               	movwf	(i1FLASH_ReadByte@flashAddr+1)& (0+255),b
 41536  01B3E4  0E00               	movlw	0
 41537  01B3E6  2106               	addwfc	(i1FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 41538  01B3E8  6F02               	movwf	(i1FLASH_ReadByte@flashAddr+2)& (0+255),b
 41539  01B3EA  0E00               	movlw	0
 41540  01B3EC  2107               	addwfc	(i1FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 41541  01B3EE  6F03               	movwf	(i1FLASH_ReadByte@flashAddr+3)& (0+255),b
 41542  01B3F0  ECEA  F0DE         	call	i1_FLASH_ReadByte	;wreg free
 41543  01B3F4  0101               	movlb	1	; () banked
 41544  01B3F6  6F09               	movwf	(??i1_FLASH_ReadWord+1)& (0+255),b
 41545  01B3F8  5108               	movf	??i1_FLASH_ReadWord& (0+255),w,b
 41546  01B3FA  6F04               	movwf	?i1_FLASH_ReadWord& (0+255),b
 41547  01B3FC  C109  F105         	movff	??i1_FLASH_ReadWord+1,?i1_FLASH_ReadWord+1
 41548  01B400  0012               	return	
 41549  01B402                     __end_ofi1_FLASH_ReadWord:
 41550                           	opt stack 0
 41551                           tosu	equ	0xFFF
 41552                           tosh	equ	0xFFE
 41553                           tosl	equ	0xFFD
 41554                           pclatu	equ	0xFFB
 41555                           pclath	equ	0xFFA
 41556                           tblptru	equ	0xFF8
 41557                           tblptrh	equ	0xFF7
 41558                           tblptrl	equ	0xFF6
 41559                           tablat	equ	0xFF5
 41560                           prodh	equ	0xFF4
 41561                           prodl	equ	0xFF3
 41562                           intcon	equ	0xFF2
 41563                           indf0	equ	0xFEF
 41564                           postinc0	equ	0xFEE
 41565                           fsr0h	equ	0xFEA
 41566                           fsr0l	equ	0xFE9
 41567                           wreg	equ	0xFE8
 41568                           indf1	equ	0xFE7
 41569                           postdec1	equ	0xFE5
 41570                           plusw1	equ	0xFE3
 41571                           fsr1h	equ	0xFE2
 41572                           fsr1l	equ	0xFE1
 41573                           bsr	equ	0xFE0
 41574                           indf2	equ	0xFDF
 41575                           postinc2	equ	0xFDE
 41576                           postdec2	equ	0xFDD
 41577                           plusw2	equ	0xFDB
 41578                           fsr2h	equ	0xFDA
 41579                           fsr2l	equ	0xFD9
 41580                           status	equ	0xFD8
 41581                           
 41582 ;; *************** function i1_FLASH_ReadByte *****************
 41583 ;; Defined at:
 41584 ;;		line 59 in file "mcc_generated_files/memory.c"
 41585 ;; Parameters:    Size  Location     Type
 41586 ;;  flashAddr       4    0[BANK1 ] unsigned long 
 41587 ;; Auto vars:     Size  Location     Type
 41588 ;;		None
 41589 ;; Return value:  Size  Location     Type
 41590 ;;                  1    wreg      unsigned char 
 41591 ;; Registers used:
 41592 ;;		wreg, status,2
 41593 ;; Tracked objects:
 41594 ;;		On entry : 0/0
 41595 ;;		On exit  : 0/0
 41596 ;;		Unchanged: 0/0
 41597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41598 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41601 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41602 ;;Total ram usage:        4 bytes
 41603 ;; Hardware stack levels used:    1
 41604 ;; Hardware stack levels required when called:    9
 41605 ;; This function calls:
 41606 ;;		Nothing
 41607 ;; This function is called by:
 41608 ;;		i1_FLASH_ReadWord
 41609 ;; This function uses a non-reentrant model
 41610 ;;
 41611                           
 41612                           	psect	text121
 41613  01BDD4                     __ptext121:
 41614                           	opt stack 0
 41615  01BDD4                     i1_FLASH_ReadByte:
 41616                           	opt stack 6
 41617                           
 41618                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 41619                           
 41620                           ; BSR set to: 1
 41621                           ;incstack = 0
 41622  01BDD4  5077               	movf	3959,w,c	;volsfr
 41623  01BDD6  0B3F               	andlw	-193
 41624  01BDD8  0980               	iorlw	128
 41625  01BDDA  6E77               	movwf	3959,c	;volsfr
 41626                           
 41627                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 41628  01BDDC  C102  FFF8         	movff	i1FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 41629                           
 41630                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 41631  01BDE0  C101  FFF7         	movff	i1FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 41632                           
 41633                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 41634  01BDE4  C100  FFF6         	movff	i1FLASH_ReadByte@flashAddr,tblptrl	;volatile
 41635  01BDE8  0008               	tblrd		*	;# 
 41636                           
 41637                           ;memory.c: 68: return (TABLAT);
 41638  01BDEA  50F5               	movf	tablat,w,c	;volatile
 41639  01BDEC  0012               	return	
 41640  01BDEE                     __end_ofi1_FLASH_ReadByte:
 41641                           	opt stack 0
 41642                           tosu	equ	0xFFF
 41643                           tosh	equ	0xFFE
 41644                           tosl	equ	0xFFD
 41645                           pclatu	equ	0xFFB
 41646                           pclath	equ	0xFFA
 41647                           tblptru	equ	0xFF8
 41648                           tblptrh	equ	0xFF7
 41649                           tblptrl	equ	0xFF6
 41650                           tablat	equ	0xFF5
 41651                           prodh	equ	0xFF4
 41652                           prodl	equ	0xFF3
 41653                           intcon	equ	0xFF2
 41654                           indf0	equ	0xFEF
 41655                           postinc0	equ	0xFEE
 41656                           fsr0h	equ	0xFEA
 41657                           fsr0l	equ	0xFE9
 41658                           wreg	equ	0xFE8
 41659                           indf1	equ	0xFE7
 41660                           postdec1	equ	0xFE5
 41661                           plusw1	equ	0xFE3
 41662                           fsr1h	equ	0xFE2
 41663                           fsr1l	equ	0xFE1
 41664                           bsr	equ	0xFE0
 41665                           indf2	equ	0xFDF
 41666                           postinc2	equ	0xFDE
 41667                           postdec2	equ	0xFDD
 41668                           plusw2	equ	0xFDB
 41669                           fsr2h	equ	0xFDA
 41670                           fsr2l	equ	0xFD9
 41671                           status	equ	0xFD8
 41672                           
 41673 ;; *************** function i1_getCauseOfResetStringSmall *****************
 41674 ;; Defined at:
 41675 ;;		line 112 in file "cause_of_reset.c"
 41676 ;; Parameters:    Size  Location     Type
 41677 ;;  r               1    wreg     enum E17455
 41678 ;; Auto vars:     Size  Location     Type
 41679 ;;  r               1    2[BANK1 ] enum E17455
 41680 ;; Return value:  Size  Location     Type
 41681 ;;                  2    0[BANK1 ] PTR inline unsigned char
 41682 ;; Registers used:
 41683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 41684 ;; Tracked objects:
 41685 ;;		On entry : 0/0
 41686 ;;		On exit  : 0/0
 41687 ;;		Unchanged: 0/0
 41688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41689 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41690 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41692 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41693 ;;Total ram usage:        3 bytes
 41694 ;; Hardware stack levels used:    1
 41695 ;; Hardware stack levels required when called:    9
 41696 ;; This function calls:
 41697 ;;		Nothing
 41698 ;; This function is called by:
 41699 ;;		i1_OLED_updateCallback
 41700 ;; This function uses a non-reentrant model
 41701 ;;
 41702                           
 41703                           	psect	text122
 41704  01B9FA                     __ptext122:
 41705                           	opt stack 0
 41706  01B9FA                     i1_getCauseOfResetStringSmall:
 41707                           	opt stack 8
 41708                           
 41709                           ;incstack = 0
 41710                           ;i1getCauseOfResetStringSmall@r stored from wreg
 41711  01B9FA  0101               	movlb	1	; () banked
 41712  01B9FC  6F02               	movwf	i1getCauseOfResetStringSmall@r& (0+255),b
 41713                           
 41714                           ;cause_of_reset.c: 115: static char *strings[] = {
 41715                           ;cause_of_reset.c: 116: "Undefined",
 41716                           ;cause_of_reset.c: 117: "POR Reset",
 41717                           ;cause_of_reset.c: 118: "BOR Reset",
 41718                           ;cause_of_reset.c: 119: "MCLR Reset",
 41719                           ;cause_of_reset.c: 120: "WDT Reset",
 41720                           ;cause_of_reset.c: 121: "WWDT Reset",
 41721                           ;cause_of_reset.c: 122: "RESET Executed",
 41722                           ;cause_of_reset.c: 123: "STOF Reset",
 41723                           ;cause_of_reset.c: 124: "STUF Reset",
 41724                           ;cause_of_reset.c: 125: };
 41725                           ;cause_of_reset.c: 128: if (r <= 8) {
 41726  01B9FE  0E09               	movlw	9
 41727  01BA00  0101               	movlb	1	; () banked
 41728  01BA02  6102               	cpfslt	i1getCauseOfResetStringSmall@r& (0+255),b
 41729  01BA04  D00D               	goto	i1l1844
 41730                           
 41731                           ; BSR set to: 1
 41732                           ;cause_of_reset.c: 130: return strings[r];
 41733  01BA06  5102               	movf	i1getCauseOfResetStringSmall@r& (0+255),w,b
 41734  01BA08  0D02               	mullw	2
 41735  01BA0A  0ED5               	movlw	low getCauseOfResetStringSmall@strings
 41736  01BA0C  24F3               	addwf	prodl,w,c
 41737  01BA0E  6ED9               	movwf	fsr2l,c
 41738  01BA10  0E03               	movlw	high getCauseOfResetStringSmall@strings
 41739  01BA12  20F4               	addwfc	prodh,w,c
 41740  01BA14  6EDA               	movwf	fsr2h,c
 41741  01BA16  CFDE F100          	movff	postinc2,?i1_getCauseOfResetStringSmall
 41742  01BA1A  CFDD F101          	movff	postdec2,?i1_getCauseOfResetStringSmall+1
 41743                           
 41744                           ; BSR set to: 1
 41745                           ;cause_of_reset.c: 132: }
 41746                           
 41747                           ; BSR set to: 1
 41748  01BA1E  0012               	return	
 41749  01BA20                     i1l1844:
 41750                           
 41751                           ; BSR set to: 1
 41752                           ;cause_of_reset.c: 134: else {
 41753                           ;cause_of_reset.c: 136: return "Undefined";
 41754                           
 41755                           ; BSR set to: 1
 41756  01BA20  0E5A               	movlw	low STR_191
 41757  01BA22  6F00               	movwf	?i1_getCauseOfResetStringSmall& (0+255),b
 41758  01BA24  0EFF               	movlw	high STR_191
 41759  01BA26  6F01               	movwf	(?i1_getCauseOfResetStringSmall+1)& (0+255),b
 41760                           
 41761                           ; BSR set to: 1
 41762  01BA28  0012               	return	
 41763  01BA2A                     __end_ofi1_getCauseOfResetStringSmall:
 41764                           	opt stack 0
 41765                           tosu	equ	0xFFF
 41766                           tosh	equ	0xFFE
 41767                           tosl	equ	0xFFD
 41768                           pclatu	equ	0xFFB
 41769                           pclath	equ	0xFFA
 41770                           tblptru	equ	0xFF8
 41771                           tblptrh	equ	0xFF7
 41772                           tblptrl	equ	0xFF6
 41773                           tablat	equ	0xFF5
 41774                           prodh	equ	0xFF4
 41775                           prodl	equ	0xFF3
 41776                           intcon	equ	0xFF2
 41777                           indf0	equ	0xFEF
 41778                           postinc0	equ	0xFEE
 41779                           fsr0h	equ	0xFEA
 41780                           fsr0l	equ	0xFE9
 41781                           wreg	equ	0xFE8
 41782                           indf1	equ	0xFE7
 41783                           postdec1	equ	0xFE5
 41784                           plusw1	equ	0xFE3
 41785                           fsr1h	equ	0xFE2
 41786                           fsr1l	equ	0xFE1
 41787                           bsr	equ	0xFE0
 41788                           indf2	equ	0xFDF
 41789                           postinc2	equ	0xFDE
 41790                           postdec2	equ	0xFDD
 41791                           plusw2	equ	0xFDB
 41792                           fsr2h	equ	0xFDA
 41793                           fsr2l	equ	0xFD9
 41794                           status	equ	0xFD8
 41795                           
 41796 ;; *************** function i1_OLED_UpdateFromRAMBuffer *****************
 41797 ;; Defined at:
 41798 ;;		line 313 in file "oled.c"
 41799 ;; Parameters:    Size  Location     Type
 41800 ;;		None
 41801 ;; Auto vars:     Size  Location     Type
 41802 ;;		None
 41803 ;; Return value:  Size  Location     Type
 41804 ;;                  1    wreg      void 
 41805 ;; Registers used:
 41806 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41807 ;; Tracked objects:
 41808 ;;		On entry : 0/0
 41809 ;;		On exit  : 0/0
 41810 ;;		Unchanged: 0/0
 41811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41816 ;;Total ram usage:        0 bytes
 41817 ;; Hardware stack levels used:    1
 41818 ;; Hardware stack levels required when called:   14
 41819 ;; This function calls:
 41820 ;;		i1_OLED_Clear
 41821 ;;		i1_OLED_WriteString
 41822 ;;		i1_OLED_YX
 41823 ;; This function is called by:
 41824 ;;		i1_OLED_updateCallback
 41825 ;; This function uses a non-reentrant model
 41826 ;;
 41827                           
 41828                           	psect	text123
 41829  01A650                     __ptext123:
 41830                           	opt stack 0
 41831  01A650                     i1_OLED_UpdateFromRAMBuffer:
 41832                           	opt stack 3
 41833                           
 41834                           ;oled.c: 315: OLED_YX(0,0);
 41835                           
 41836                           ; BSR set to: 1
 41837                           ;incstack = 0
 41838  01A650  0E00               	movlw	0
 41839  01A652  0101               	movlb	1	; () banked
 41840  01A654  6F14               	movwf	i1OLED_YX@Column& (0+255),b
 41841  01A656  0E00               	movlw	0
 41842  01A658  EC39  F0DB         	call	i1_OLED_YX
 41843                           
 41844                           ;oled.c: 316: OLED_Clear();
 41845  01A65C  EC41  F0DA         	call	i1_OLED_Clear	;wreg free
 41846                           
 41847                           ;oled.c: 317: OLED_YX(0,0);
 41848  01A660  0E00               	movlw	0
 41849  01A662  0101               	movlb	1	; () banked
 41850  01A664  6F14               	movwf	i1OLED_YX@Column& (0+255),b
 41851  01A666  0E00               	movlw	0
 41852  01A668  EC39  F0DB         	call	i1_OLED_YX
 41853                           
 41854                           ;oled.c: 318: OLED_WriteString(OLED_RAM_Buffer.line0);
 41855  01A66C  0E40               	movlw	low _OLED_RAM_Buffer
 41856  01A66E  0101               	movlb	1	; () banked
 41857  01A670  6F21               	movwf	i1OLED_WriteString@s& (0+255),b
 41858  01A672  0E03               	movlw	high _OLED_RAM_Buffer
 41859  01A674  6F22               	movwf	(i1OLED_WriteString@s+1)& (0+255),b
 41860  01A676  EC74  F0D6         	call	i1_OLED_WriteString	;wreg free
 41861                           
 41862                           ;oled.c: 319: OLED_YX(1,0);
 41863  01A67A  0E00               	movlw	0
 41864  01A67C  0101               	movlb	1	; () banked
 41865  01A67E  6F14               	movwf	i1OLED_YX@Column& (0+255),b
 41866  01A680  0E01               	movlw	1
 41867  01A682  EC39  F0DB         	call	i1_OLED_YX
 41868                           
 41869                           ;oled.c: 320: OLED_WriteString(OLED_RAM_Buffer.line1);
 41870  01A686  0E51               	movlw	low (_OLED_RAM_Buffer+17)
 41871  01A688  0101               	movlb	1	; () banked
 41872  01A68A  6F21               	movwf	i1OLED_WriteString@s& (0+255),b
 41873  01A68C  0E03               	movlw	high (_OLED_RAM_Buffer+17)
 41874  01A68E  6F22               	movwf	(i1OLED_WriteString@s+1)& (0+255),b
 41875  01A690  EC74  F0D6         	call	i1_OLED_WriteString	;wreg free
 41876                           
 41877                           ;oled.c: 321: OLED_YX(2,0);
 41878  01A694  0E00               	movlw	0
 41879  01A696  0101               	movlb	1	; () banked
 41880  01A698  6F14               	movwf	i1OLED_YX@Column& (0+255),b
 41881  01A69A  0E02               	movlw	2
 41882  01A69C  EC39  F0DB         	call	i1_OLED_YX
 41883                           
 41884                           ;oled.c: 322: OLED_WriteString(OLED_RAM_Buffer.line2);
 41885  01A6A0  0E62               	movlw	low (_OLED_RAM_Buffer+34)
 41886  01A6A2  0101               	movlb	1	; () banked
 41887  01A6A4  6F21               	movwf	i1OLED_WriteString@s& (0+255),b
 41888  01A6A6  0E03               	movlw	high (_OLED_RAM_Buffer+34)
 41889  01A6A8  6F22               	movwf	(i1OLED_WriteString@s+1)& (0+255),b
 41890  01A6AA  EC74  F0D6         	call	i1_OLED_WriteString	;wreg free
 41891                           
 41892                           ;oled.c: 323: OLED_YX(3,0);
 41893  01A6AE  0E00               	movlw	0
 41894  01A6B0  0101               	movlb	1	; () banked
 41895  01A6B2  6F14               	movwf	i1OLED_YX@Column& (0+255),b
 41896  01A6B4  0E03               	movlw	3
 41897  01A6B6  EC39  F0DB         	call	i1_OLED_YX
 41898                           
 41899                           ;oled.c: 324: OLED_WriteString(OLED_RAM_Buffer.line3);
 41900  01A6BA  0E73               	movlw	low (_OLED_RAM_Buffer+51)
 41901  01A6BC  0101               	movlb	1	; () banked
 41902  01A6BE  6F21               	movwf	i1OLED_WriteString@s& (0+255),b
 41903  01A6C0  0E03               	movlw	high (_OLED_RAM_Buffer+51)
 41904  01A6C2  6F22               	movwf	(i1OLED_WriteString@s+1)& (0+255),b
 41905  01A6C4  EC74  F0D6         	call	i1_OLED_WriteString	;wreg free
 41906  01A6C8  0012               	return		;funcret
 41907  01A6CA                     __end_ofi1_OLED_UpdateFromRAMBuffer:
 41908                           	opt stack 0
 41909                           tosu	equ	0xFFF
 41910                           tosh	equ	0xFFE
 41911                           tosl	equ	0xFFD
 41912                           pclatu	equ	0xFFB
 41913                           pclath	equ	0xFFA
 41914                           tblptru	equ	0xFF8
 41915                           tblptrh	equ	0xFF7
 41916                           tblptrl	equ	0xFF6
 41917                           tablat	equ	0xFF5
 41918                           prodh	equ	0xFF4
 41919                           prodl	equ	0xFF3
 41920                           intcon	equ	0xFF2
 41921                           indf0	equ	0xFEF
 41922                           postinc0	equ	0xFEE
 41923                           fsr0h	equ	0xFEA
 41924                           fsr0l	equ	0xFE9
 41925                           wreg	equ	0xFE8
 41926                           indf1	equ	0xFE7
 41927                           postdec1	equ	0xFE5
 41928                           plusw1	equ	0xFE3
 41929                           fsr1h	equ	0xFE2
 41930                           fsr1l	equ	0xFE1
 41931                           bsr	equ	0xFE0
 41932                           indf2	equ	0xFDF
 41933                           postinc2	equ	0xFDE
 41934                           postdec2	equ	0xFDD
 41935                           plusw2	equ	0xFDB
 41936                           fsr2h	equ	0xFDA
 41937                           fsr2l	equ	0xFD9
 41938                           status	equ	0xFD8
 41939                           
 41940 ;; *************** function i1_OLED_YX *****************
 41941 ;; Defined at:
 41942 ;;		line 220 in file "oled.c"
 41943 ;; Parameters:    Size  Location     Type
 41944 ;;  Row             1    wreg     unsigned char 
 41945 ;;  Column          1   20[BANK1 ] unsigned char 
 41946 ;; Auto vars:     Size  Location     Type
 41947 ;;  Row             1   22[BANK1 ] unsigned char 
 41948 ;; Return value:  Size  Location     Type
 41949 ;;                  1    wreg      void 
 41950 ;; Registers used:
 41951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41952 ;; Tracked objects:
 41953 ;;		On entry : 0/0
 41954 ;;		On exit  : 0/0
 41955 ;;		Unchanged: 0/0
 41956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 41957 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41958 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41959 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41960 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41961 ;;Total ram usage:        3 bytes
 41962 ;; Hardware stack levels used:    1
 41963 ;; Hardware stack levels required when called:   13
 41964 ;; This function calls:
 41965 ;;		i1_OLED_Command
 41966 ;; This function is called by:
 41967 ;;		i1_OLED_UpdateFromRAMBuffer
 41968 ;; This function uses a non-reentrant model
 41969 ;;
 41970                           
 41971                           	psect	text124
 41972  01B672                     __ptext124:
 41973                           	opt stack 0
 41974  01B672                     i1_OLED_YX:
 41975                           	opt stack 3
 41976                           
 41977                           ;incstack = 0
 41978                           ;i1OLED_YX@Row stored from wreg
 41979  01B672  0101               	movlb	1	; () banked
 41980  01B674  6F16               	movwf	i1OLED_YX@Row& (0+255),b
 41981                           
 41982                           ;oled.c: 222: OLED_Command(0xB0 + Row);
 41983  01B676  0101               	movlb	1	; () banked
 41984  01B678  5116               	movf	i1OLED_YX@Row& (0+255),w,b
 41985  01B67A  0FB0               	addlw	176
 41986  01B67C  EC22  F0D5         	call	i1_OLED_Command
 41987                           
 41988                           ;oled.c: 224: OLED_Command(0x00 + (8 * Column & 0x0F));
 41989  01B680  0101               	movlb	1	; () banked
 41990  01B682  5114               	movf	i1OLED_YX@Column& (0+255),w,b
 41991  01B684  0D08               	mullw	8
 41992  01B686  50F3               	movf	prodl,w,c
 41993  01B688  0B0F               	andlw	15
 41994  01B68A  EC22  F0D5         	call	i1_OLED_Command
 41995                           
 41996                           ;oled.c: 226: OLED_Command(0x10 + ((8* Column >> 4) & 0x0F));
 41997  01B68E  0101               	movlb	1	; () banked
 41998  01B690  5114               	movf	i1OLED_YX@Column& (0+255),w,b
 41999  01B692  0D08               	mullw	8
 42000  01B694  0E04               	movlw	4
 42001  01B696  6F15               	movwf	??i1_OLED_YX& (0+255),b
 42002  01B698                     i1u2191_25:
 42003  01B698  34F4               	rlcf	prodh,w,c
 42004  01B69A  32F4               	rrcf	prodh,f,c
 42005  01B69C  32F3               	rrcf	prodl,f,c
 42006  01B69E  2F15               	decfsz	??i1_OLED_YX& (0+255),f,b
 42007  01B6A0  D7FB               	goto	i1u2191_25
 42008  01B6A2  50F3               	movf	prodl,w,c
 42009  01B6A4  0B0F               	andlw	15
 42010  01B6A6  0F10               	addlw	16
 42011  01B6A8  EC22  F0D5         	call	i1_OLED_Command
 42012  01B6AC  0012               	return		;funcret
 42013  01B6AE                     __end_ofi1_OLED_YX:
 42014                           	opt stack 0
 42015                           tosu	equ	0xFFF
 42016                           tosh	equ	0xFFE
 42017                           tosl	equ	0xFFD
 42018                           pclatu	equ	0xFFB
 42019                           pclath	equ	0xFFA
 42020                           tblptru	equ	0xFF8
 42021                           tblptrh	equ	0xFF7
 42022                           tblptrl	equ	0xFF6
 42023                           tablat	equ	0xFF5
 42024                           prodh	equ	0xFF4
 42025                           prodl	equ	0xFF3
 42026                           intcon	equ	0xFF2
 42027                           indf0	equ	0xFEF
 42028                           postinc0	equ	0xFEE
 42029                           fsr0h	equ	0xFEA
 42030                           fsr0l	equ	0xFE9
 42031                           wreg	equ	0xFE8
 42032                           indf1	equ	0xFE7
 42033                           postdec1	equ	0xFE5
 42034                           plusw1	equ	0xFE3
 42035                           fsr1h	equ	0xFE2
 42036                           fsr1l	equ	0xFE1
 42037                           bsr	equ	0xFE0
 42038                           indf2	equ	0xFDF
 42039                           postinc2	equ	0xFDE
 42040                           postdec2	equ	0xFDD
 42041                           plusw2	equ	0xFDB
 42042                           fsr2h	equ	0xFDA
 42043                           fsr2l	equ	0xFD9
 42044                           status	equ	0xFD8
 42045                           
 42046 ;; *************** function i1_OLED_Command *****************
 42047 ;; Defined at:
 42048 ;;		line 110 in file "oled.c"
 42049 ;; Parameters:    Size  Location     Type
 42050 ;;  temp            1    wreg     unsigned char 
 42051 ;; Auto vars:     Size  Location     Type
 42052 ;;  temp            1   18[BANK1 ] unsigned char 
 42053 ;;  OLED_Command    2   16[BANK1 ] unsigned char [2]
 42054 ;;  OLED_Command    1   19[BANK1 ] unsigned char 
 42055 ;; Return value:  Size  Location     Type
 42056 ;;                  1    wreg      void 
 42057 ;; Registers used:
 42058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42059 ;; Tracked objects:
 42060 ;;		On entry : 0/0
 42061 ;;		On exit  : 0/0
 42062 ;;		Unchanged: 0/0
 42063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42065 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42067 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42068 ;;Total ram usage:        4 bytes
 42069 ;; Hardware stack levels used:    1
 42070 ;; Hardware stack levels required when called:   12
 42071 ;; This function calls:
 42072 ;;		i1_I2C1_MasterWrite
 42073 ;; This function is called by:
 42074 ;;		i1_OLED_YX
 42075 ;; This function uses a non-reentrant model
 42076 ;;
 42077                           
 42078                           	psect	text125
 42079  01AA44                     __ptext125:
 42080                           	opt stack 0
 42081  01AA44                     i1_OLED_Command:
 42082                           	opt stack 3
 42083                           
 42084                           ;incstack = 0
 42085                           ;i1OLED_Command@temp stored from wreg
 42086  01AA44  0101               	movlb	1	; () banked
 42087  01AA46  6F12               	movwf	i1OLED_Command@temp& (0+255),b
 42088                           
 42089                           ;oled.c: 112: uint8_t length;
 42090                           ;oled.c: 114: uint8_t data_array[2];
 42091                           ;oled.c: 115: data_array[0] = 0x00;
 42092  01AA48  0E00               	movlw	0
 42093  01AA4A  0101               	movlb	1	; () banked
 42094  01AA4C  6F10               	movwf	i1OLED_Command@data_array& (0+255),b
 42095                           
 42096                           ; BSR set to: 1
 42097                           ;oled.c: 116: data_array[1] = temp;
 42098  01AA4E  C112  F111         	movff	i1OLED_Command@temp,i1OLED_Command@data_array+1
 42099                           
 42100                           ; BSR set to: 1
 42101                           ;oled.c: 119: length = 2;
 42102  01AA52  0E02               	movlw	2
 42103  01AA54  6F13               	movwf	i1OLED_Command@length& (0+255),b
 42104                           
 42105                           ; BSR set to: 1
 42106                           ;oled.c: 121: I2C1_MasterWrite(data_array, length, (uint16_t) 0x3C, &OLED_I2C_Status);
 42107  01AA56  0E10               	movlw	low i1OLED_Command@data_array
 42108  01AA58  6F09               	movwf	i1I2C1_MasterWrite@pdata& (0+255),b
 42109  01AA5A  0E01               	movlw	high i1OLED_Command@data_array
 42110  01AA5C  6F0A               	movwf	(i1I2C1_MasterWrite@pdata+1)& (0+255),b
 42111  01AA5E  C113  F10B         	movff	i1OLED_Command@length,i1I2C1_MasterWrite@length
 42112  01AA62  0E00               	movlw	0
 42113  01AA64  6F0D               	movwf	(i1I2C1_MasterWrite@address+1)& (0+255),b
 42114  01AA66  0E3C               	movlw	60
 42115  01AA68  6F0C               	movwf	i1I2C1_MasterWrite@address& (0+255),b
 42116  01AA6A  0EAB               	movlw	low _OLED_I2C_Status
 42117  01AA6C  6F0E               	movwf	i1I2C1_MasterWrite@pflag& (0+255),b
 42118  01AA6E  0E01               	movlw	high _OLED_I2C_Status
 42119  01AA70  6F0F               	movwf	(i1I2C1_MasterWrite@pflag+1)& (0+255),b
 42120  01AA72  ECE0  F0D7         	call	i1_I2C1_MasterWrite	;wreg free
 42121  01AA76  0E02               	movlw	2
 42122  01AA78  0101               	movlb	1	; () banked
 42123  01AA7A  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 42124  01AA7C  B4D8               	btfsc	status,2,c
 42125  01AA7E  D7FB               	goto	i1l1888
 42126                           
 42127                           ; BSR set to: 1
 42128                           ;oled.c: 125: if ( OLED_I2C_Status == I2C1_MESSAGE_FAIL ||
 42129                           ;oled.c: 126: OLED_I2C_Status == I2C1_STUCK_START ||
 42130                           ;oled.c: 127: OLED_I2C_Status == I2C1_MESSAGE_ADDRESS_NO_ACK ||
 42131                           ;oled.c: 128: OLED_I2C_Status == I2C1_DATA_NO_ACK ||
 42132                           ;oled.c: 129: OLED_I2C_Status == I2C1_LOST_STATE ) {
 42133                           
 42134                           ; BSR set to: 1
 42135  01AA80  05AB               	decf	_OLED_I2C_Status& (0+255),w,b
 42136  01AA82  B4D8               	btfsc	status,2,c
 42137  01AA84  D010               	goto	i1u2142_20
 42138                           
 42139                           ; BSR set to: 1
 42140  01AA86  0E03               	movlw	3
 42141  01AA88  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 42142  01AA8A  B4D8               	btfsc	status,2,c
 42143  01AA8C  D00C               	goto	i1u2142_20
 42144                           
 42145                           ; BSR set to: 1
 42146  01AA8E  0E04               	movlw	4
 42147  01AA90  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 42148  01AA92  B4D8               	btfsc	status,2,c
 42149  01AA94  D008               	goto	i1u2142_20
 42150                           
 42151                           ; BSR set to: 1
 42152  01AA96  0E05               	movlw	5
 42153  01AA98  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 42154  01AA9A  B4D8               	btfsc	status,2,c
 42155  01AA9C  D004               	goto	i1u2142_20
 42156                           
 42157                           ; BSR set to: 1
 42158  01AA9E  0E06               	movlw	6
 42159  01AAA0  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 42160  01AAA2  A4D8               	btfss	status,2,c
 42161  01AAA4  0012               	return	
 42162  01AAA6                     i1u2142_20:
 42163                           
 42164                           ; BSR set to: 1
 42165                           ;oled.c: 130: error_handler.I2C_COMM_error_flag = 1;
 42166                           
 42167                           ; BSR set to: 1
 42168  01AAA6  0E01               	movlw	1
 42169  01AAA8  6F67               	movwf	(_error_handler+7)& (0+255),b
 42170  01AAAA  0012               	return	
 42171  01AAAC                     __end_ofi1_OLED_Command:
 42172                           	opt stack 0
 42173                           tosu	equ	0xFFF
 42174                           tosh	equ	0xFFE
 42175                           tosl	equ	0xFFD
 42176                           pclatu	equ	0xFFB
 42177                           pclath	equ	0xFFA
 42178                           tblptru	equ	0xFF8
 42179                           tblptrh	equ	0xFF7
 42180                           tblptrl	equ	0xFF6
 42181                           tablat	equ	0xFF5
 42182                           prodh	equ	0xFF4
 42183                           prodl	equ	0xFF3
 42184                           intcon	equ	0xFF2
 42185                           indf0	equ	0xFEF
 42186                           postinc0	equ	0xFEE
 42187                           fsr0h	equ	0xFEA
 42188                           fsr0l	equ	0xFE9
 42189                           wreg	equ	0xFE8
 42190                           indf1	equ	0xFE7
 42191                           postdec1	equ	0xFE5
 42192                           plusw1	equ	0xFE3
 42193                           fsr1h	equ	0xFE2
 42194                           fsr1l	equ	0xFE1
 42195                           bsr	equ	0xFE0
 42196                           indf2	equ	0xFDF
 42197                           postinc2	equ	0xFDE
 42198                           postdec2	equ	0xFDD
 42199                           plusw2	equ	0xFDB
 42200                           fsr2h	equ	0xFDA
 42201                           fsr2l	equ	0xFD9
 42202                           status	equ	0xFD8
 42203                           
 42204 ;; *************** function i1_OLED_WriteString *****************
 42205 ;; Defined at:
 42206 ;;		line 281 in file "oled.c"
 42207 ;; Parameters:    Size  Location     Type
 42208 ;;  s               2   33[BANK1 ] PTR unsigned char 
 42209 ;;		 -> ftoa@buf(17), STR_213(1), STR_212(1), OLED_WriteInteger@s(20), 
 42210 ;;		 -> OLED_RAM_Buffer(68), 
 42211 ;; Auto vars:     Size  Location     Type
 42212 ;;		None
 42213 ;; Return value:  Size  Location     Type
 42214 ;;                  1    wreg      void 
 42215 ;; Registers used:
 42216 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 42217 ;; Tracked objects:
 42218 ;;		On entry : 0/0
 42219 ;;		On exit  : 0/0
 42220 ;;		Unchanged: 0/0
 42221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42222 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42225 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42226 ;;Total ram usage:        2 bytes
 42227 ;; Hardware stack levels used:    1
 42228 ;; Hardware stack levels required when called:   13
 42229 ;; This function calls:
 42230 ;;		i1_OLED_PutChar
 42231 ;; This function is called by:
 42232 ;;		i1_OLED_UpdateFromRAMBuffer
 42233 ;; This function uses a non-reentrant model
 42234 ;;
 42235                           
 42236                           	psect	text126
 42237  01ACE8                     __ptext126:
 42238                           	opt stack 0
 42239  01ACE8                     i1_OLED_WriteString:
 42240                           	opt stack 3
 42241                           
 42242                           ;oled.c: 283: while(*s) {
 42243                           
 42244                           ; BSR set to: 1
 42245                           ;incstack = 0
 42246  01ACE8  D016               	goto	i1l1930
 42247  01ACEA                     
 42248                           ;oled.c: 285: OLED_PutChar(*s++);
 42249  01ACEA  C121  FFF6         	movff	i1OLED_WriteString@s,tblptrl
 42250  01ACEE  C122  FFF7         	movff	i1OLED_WriteString@s+1,tblptrh
 42251  01ACF2  0E00               	movlw	low (__mediumconst shr (0+16))
 42252  01ACF4  6EF8               	movwf	tblptru,c
 42253  01ACF6  0E0D               	movlw	(high __ramtop+-1)
 42254  01ACF8  64F7               	cpfsgt	tblptrh,c
 42255  01ACFA  D003               	bra	i1u2196_27
 42256  01ACFC  0008               	tblrd		*
 42257  01ACFE  50F5               	movf	tablat,w,c
 42258  01AD00  D005               	bra	i1u2196_20
 42259  01AD02                     i1u2196_27:
 42260  01AD02  CFF6 FFE9          	movff	tblptrl,fsr0l
 42261  01AD06  CFF7 FFEA          	movff	tblptrh,fsr0h
 42262  01AD0A  50EF               	movf	indf0,w,c
 42263  01AD0C                     i1u2196_20:
 42264  01AD0C  EC7A  F0CE         	call	i1_OLED_PutChar
 42265  01AD10  0101               	movlb	1	; () banked
 42266  01AD12  4B21               	infsnz	i1OLED_WriteString@s& (0+255),f,b
 42267  01AD14  2B22               	incf	(i1OLED_WriteString@s+1)& (0+255),f,b
 42268  01AD16                     i1l1930:
 42269                           
 42270                           ; BSR set to: 1
 42271  01AD16  C121  FFF6         	movff	i1OLED_WriteString@s,tblptrl
 42272  01AD1A  C122  FFF7         	movff	i1OLED_WriteString@s+1,tblptrh
 42273  01AD1E  0E00               	movlw	low (__mediumconst shr (0+16))
 42274  01AD20  6EF8               	movwf	tblptru,c
 42275  01AD22  0E0D               	movlw	(high __ramtop+-1)
 42276  01AD24  64F7               	cpfsgt	tblptrh,c
 42277  01AD26  D003               	bra	i1u2197_27
 42278  01AD28  0008               	tblrd		*
 42279  01AD2A  50F5               	movf	tablat,w,c
 42280  01AD2C  D005               	bra	i1u2197_20
 42281  01AD2E                     i1u2197_27:
 42282  01AD2E  CFF6 FFE9          	movff	tblptrl,fsr0l
 42283  01AD32  CFF7 FFEA          	movff	tblptrh,fsr0h
 42284  01AD36  50EF               	movf	indf0,w,c
 42285  01AD38                     i1u2197_20:
 42286  01AD38  0900               	iorlw	0
 42287  01AD3A  B4D8               	btfsc	status,2,c
 42288  01AD3C  0012               	return	
 42289  01AD3E  D7D5               	goto	i1l1931
 42290  01AD40                     __end_ofi1_OLED_WriteString:
 42291                           	opt stack 0
 42292                           tosu	equ	0xFFF
 42293                           tosh	equ	0xFFE
 42294                           tosl	equ	0xFFD
 42295                           pclatu	equ	0xFFB
 42296                           pclath	equ	0xFFA
 42297                           tblptru	equ	0xFF8
 42298                           tblptrh	equ	0xFF7
 42299                           tblptrl	equ	0xFF6
 42300                           tablat	equ	0xFF5
 42301                           prodh	equ	0xFF4
 42302                           prodl	equ	0xFF3
 42303                           intcon	equ	0xFF2
 42304                           indf0	equ	0xFEF
 42305                           postinc0	equ	0xFEE
 42306                           fsr0h	equ	0xFEA
 42307                           fsr0l	equ	0xFE9
 42308                           wreg	equ	0xFE8
 42309                           indf1	equ	0xFE7
 42310                           postdec1	equ	0xFE5
 42311                           plusw1	equ	0xFE3
 42312                           fsr1h	equ	0xFE2
 42313                           fsr1l	equ	0xFE1
 42314                           bsr	equ	0xFE0
 42315                           indf2	equ	0xFDF
 42316                           postinc2	equ	0xFDE
 42317                           postdec2	equ	0xFDD
 42318                           plusw2	equ	0xFDB
 42319                           fsr2h	equ	0xFDA
 42320                           fsr2l	equ	0xFD9
 42321                           status	equ	0xFD8
 42322                           
 42323 ;; *************** function i1_OLED_Clear *****************
 42324 ;; Defined at:
 42325 ;;		line 266 in file "oled.c"
 42326 ;; Parameters:    Size  Location     Type
 42327 ;;		None
 42328 ;; Auto vars:     Size  Location     Type
 42329 ;;  OLED_Clear      2   35[BANK1 ] unsigned int 
 42330 ;;  OLED_Clear      2   33[BANK1 ] unsigned int 
 42331 ;; Return value:  Size  Location     Type
 42332 ;;                  1    wreg      void 
 42333 ;; Registers used:
 42334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 42335 ;; Tracked objects:
 42336 ;;		On entry : 0/0
 42337 ;;		On exit  : 0/0
 42338 ;;		Unchanged: 0/0
 42339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42341 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42343 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42344 ;;Total ram usage:        4 bytes
 42345 ;; Hardware stack levels used:    1
 42346 ;; Hardware stack levels required when called:   13
 42347 ;; This function calls:
 42348 ;;		i1_OLED_PutChar
 42349 ;; This function is called by:
 42350 ;;		i1_OLED_UpdateFromRAMBuffer
 42351 ;; This function uses a non-reentrant model
 42352 ;;
 42353                           
 42354                           	psect	text127
 42355  01B482                     __ptext127:
 42356                           	opt stack 0
 42357  01B482                     i1_OLED_Clear:
 42358                           	opt stack 3
 42359                           
 42360                           ;oled.c: 268: for(uint16_t row = 0; row < 8; row++) {
 42361                           
 42362                           ;incstack = 0
 42363  01B482  0E00               	movlw	0
 42364  01B484  0101               	movlb	1	; () banked
 42365  01B486  6F22               	movwf	(i1OLED_Clear@row+1)& (0+255),b
 42366  01B488  0E00               	movlw	0
 42367  01B48A  6F21               	movwf	i1OLED_Clear@row& (0+255),b
 42368  01B48C                     i1l17039:
 42369                           
 42370                           ; BSR set to: 1
 42371  01B48C  5122               	movf	(i1OLED_Clear@row+1)& (0+255),w,b
 42372  01B48E  E118               	bnz	i1l1927
 42373  01B490  0E08               	movlw	8
 42374  01B492  5D21               	subwf	i1OLED_Clear@row& (0+255),w,b
 42375  01B494  B0D8               	btfsc	status,0,c
 42376  01B496  0012               	return	
 42377                           
 42378                           ; BSR set to: 1
 42379                           ;oled.c: 270: for(uint16_t col = 0; col < 16; col++) {
 42380                           
 42381                           ; BSR set to: 1
 42382                           
 42383                           ; BSR set to: 1
 42384  01B498  0E00               	movlw	0
 42385  01B49A  6F24               	movwf	(i1OLED_Clear@col+1)& (0+255),b
 42386  01B49C  0E00               	movlw	0
 42387  01B49E  6F23               	movwf	i1OLED_Clear@col& (0+255),b
 42388  01B4A0                     i1l17045:
 42389                           
 42390                           ; BSR set to: 1
 42391  01B4A0  5124               	movf	(i1OLED_Clear@col+1)& (0+255),w,b
 42392  01B4A2  E10B               	bnz	i1l17055
 42393  01B4A4  0E10               	movlw	16
 42394  01B4A6  5D23               	subwf	i1OLED_Clear@col& (0+255),w,b
 42395  01B4A8  B0D8               	btfsc	status,0,c
 42396  01B4AA  D007               	goto	i1u2194_20
 42397                           
 42398                           ; BSR set to: 1
 42399                           ;oled.c: 272: OLED_PutChar('\0');
 42400                           
 42401                           ; BSR set to: 1
 42402                           
 42403                           ; BSR set to: 1
 42404  01B4AC  0E00               	movlw	0
 42405  01B4AE  EC7A  F0CE         	call	i1_OLED_PutChar
 42406  01B4B2  0101               	movlb	1	; () banked
 42407  01B4B4  4B23               	infsnz	i1OLED_Clear@col& (0+255),f,b
 42408  01B4B6  2B24               	incf	(i1OLED_Clear@col+1)& (0+255),f,b
 42409  01B4B8  D7F3               	goto	i1l17045
 42410  01B4BA                     i1u2194_20:
 42411  01B4BA                     i1l17055:
 42412                           
 42413                           ; BSR set to: 1
 42414  01B4BA  4B21               	infsnz	i1OLED_Clear@row& (0+255),f,b
 42415  01B4BC  2B22               	incf	(i1OLED_Clear@row+1)& (0+255),f,b
 42416  01B4BE  D7E6               	goto	i1l17039
 42417  01B4C0                     i1l1927:
 42418                           
 42419                           ; BSR set to: 1
 42420  01B4C0  0012               	return		;funcret
 42421  01B4C2                     __end_ofi1_OLED_Clear:
 42422                           	opt stack 0
 42423                           tosu	equ	0xFFF
 42424                           tosh	equ	0xFFE
 42425                           tosl	equ	0xFFD
 42426                           pclatu	equ	0xFFB
 42427                           pclath	equ	0xFFA
 42428                           tblptru	equ	0xFF8
 42429                           tblptrh	equ	0xFF7
 42430                           tblptrl	equ	0xFF6
 42431                           tablat	equ	0xFF5
 42432                           prodh	equ	0xFF4
 42433                           prodl	equ	0xFF3
 42434                           intcon	equ	0xFF2
 42435                           indf0	equ	0xFEF
 42436                           postinc0	equ	0xFEE
 42437                           fsr0h	equ	0xFEA
 42438                           fsr0l	equ	0xFE9
 42439                           wreg	equ	0xFE8
 42440                           indf1	equ	0xFE7
 42441                           postdec1	equ	0xFE5
 42442                           plusw1	equ	0xFE3
 42443                           fsr1h	equ	0xFE2
 42444                           fsr1l	equ	0xFE1
 42445                           bsr	equ	0xFE0
 42446                           indf2	equ	0xFDF
 42447                           postinc2	equ	0xFDE
 42448                           postdec2	equ	0xFDD
 42449                           plusw2	equ	0xFDB
 42450                           fsr2h	equ	0xFDA
 42451                           fsr2l	equ	0xFD9
 42452                           status	equ	0xFD8
 42453                           
 42454 ;; *************** function i1_OLED_PutChar *****************
 42455 ;; Defined at:
 42456 ;;		line 231 in file "oled.c"
 42457 ;; Parameters:    Size  Location     Type
 42458 ;;  ch              1    wreg     unsigned char 
 42459 ;; Auto vars:     Size  Location     Type
 42460 ;;  ch              1   32[BANK1 ] unsigned char 
 42461 ;;  OLED_PutChar    9   20[BANK1 ] unsigned char [9]
 42462 ;;  OLED_PutChar    2   29[BANK1 ] PTR const unsigned char 
 42463 ;;		 -> OledFont(768), 
 42464 ;;  OLED_PutChar    1   31[BANK1 ] unsigned char 
 42465 ;; Return value:  Size  Location     Type
 42466 ;;                  1    wreg      void 
 42467 ;; Registers used:
 42468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 42469 ;; Tracked objects:
 42470 ;;		On entry : 0/0
 42471 ;;		On exit  : 0/0
 42472 ;;		Unchanged: 0/0
 42473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42475 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42476 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42477 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42478 ;;Total ram usage:       17 bytes
 42479 ;; Hardware stack levels used:    1
 42480 ;; Hardware stack levels required when called:   12
 42481 ;; This function calls:
 42482 ;;		i1_I2C1_MasterWrite
 42483 ;;		i1_memmove
 42484 ;; This function is called by:
 42485 ;;		i1_OLED_Clear
 42486 ;;		i1_OLED_WriteString
 42487 ;; This function uses a non-reentrant model
 42488 ;;
 42489                           
 42490                           	psect	text128
 42491  019CF4                     __ptext128:
 42492                           	opt stack 0
 42493  019CF4                     i1_OLED_PutChar:
 42494                           	opt stack 3
 42495                           
 42496                           ; BSR set to: 1
 42497                           ;incstack = 0
 42498                           ;i1OLED_PutChar@ch stored from wreg
 42499  019CF4  0101               	movlb	1	; () banked
 42500  019CF6  6F20               	movwf	i1OLED_PutChar@ch& (0+255),b
 42501                           
 42502                           ;oled.c: 233: if((ch < 32) || (ch > 127)) {
 42503  019CF8  0E1F               	movlw	31
 42504  019CFA  0101               	movlb	1	; () banked
 42505  019CFC  6520               	cpfsgt	i1OLED_PutChar@ch& (0+255),b
 42506  019CFE  D003               	goto	i1u2144_20
 42507                           
 42508                           ; BSR set to: 1
 42509  019D00  0E7F               	movlw	127
 42510  019D02  6520               	cpfsgt	i1OLED_PutChar@ch& (0+255),b
 42511  019D04  D002               	goto	i1l1911
 42512  019D06                     i1u2144_20:
 42513                           
 42514                           ; BSR set to: 1
 42515                           ;oled.c: 235: ch = ' ';
 42516                           
 42517                           ; BSR set to: 1
 42518  019D06  0E20               	movlw	32
 42519  019D08  6F20               	movwf	i1OLED_PutChar@ch& (0+255),b
 42520  019D0A                     i1l1911:
 42521                           
 42522                           ; BSR set to: 1
 42523                           ;oled.c: 237: }
 42524                           ;oled.c: 239: uint8_t length;
 42525                           ;oled.c: 241: uint8_t data_array[9];
 42526                           ;oled.c: 243: data_array[0] = 0x40;
 42527  019D0A  0E40               	movlw	64
 42528  019D0C  6F14               	movwf	i1OLED_PutChar@data_array& (0+255),b
 42529                           
 42530                           ; BSR set to: 1
 42531                           ;oled.c: 245: const uint8_t *input_base = &OledFont[ch - 32][0];
 42532  019D0E  0E00               	movlw	0
 42533  019D10  6F10               	movwf	??i1_OLED_PutChar& (0+255),b
 42534  019D12  0EFF               	movlw	255
 42535  019D14  6F11               	movwf	(??i1_OLED_PutChar+1)& (0+255),b
 42536  019D16  5120               	movf	i1OLED_PutChar@ch& (0+255),w,b
 42537  019D18  6F12               	movwf	(??i1_OLED_PutChar+2)& (0+255),b
 42538  019D1A  6B13               	clrf	(??i1_OLED_PutChar+3)& (0+255),b
 42539  019D1C  90D8               	bcf	status,0,c
 42540  019D1E  3712               	rlcf	(??i1_OLED_PutChar+2)& (0+255),f,b
 42541  019D20  3713               	rlcf	(??i1_OLED_PutChar+3)& (0+255),f,b
 42542  019D22  90D8               	bcf	status,0,c
 42543  019D24  3712               	rlcf	(??i1_OLED_PutChar+2)& (0+255),f,b
 42544  019D26  3713               	rlcf	(??i1_OLED_PutChar+3)& (0+255),f,b
 42545  019D28  90D8               	bcf	status,0,c
 42546  019D2A  3712               	rlcf	(??i1_OLED_PutChar+2)& (0+255),f,b
 42547  019D2C  3713               	rlcf	(??i1_OLED_PutChar+3)& (0+255),f,b
 42548  019D2E  5110               	movf	??i1_OLED_PutChar& (0+255),w,b
 42549  019D30  2712               	addwf	(??i1_OLED_PutChar+2)& (0+255),f,b
 42550  019D32  5111               	movf	(??i1_OLED_PutChar+1)& (0+255),w,b
 42551  019D34  2313               	addwfc	(??i1_OLED_PutChar+3)& (0+255),f,b
 42552  019D36  0E9B               	movlw	low _OledFont
 42553  019D38  2512               	addwf	(??i1_OLED_PutChar+2)& (0+255),w,b
 42554  019D3A  6F1D               	movwf	i1OLED_PutChar@input_base& (0+255),b
 42555  019D3C  0ECE               	movlw	high _OledFont
 42556  019D3E  2113               	addwfc	(??i1_OLED_PutChar+3)& (0+255),w,b
 42557  019D40  6F1E               	movwf	(i1OLED_PutChar@input_base+1)& (0+255),b
 42558                           
 42559                           ; BSR set to: 1
 42560                           ;oled.c: 247: memmove(data_array + 1, input_base, 8);
 42561  019D42  0E15               	movlw	low (i1OLED_PutChar@data_array+1)
 42562  019D44  6F00               	movwf	i1memmove@d1& (0+255),b
 42563  019D46  0E01               	movlw	high (i1OLED_PutChar@data_array+1)
 42564  019D48  6F01               	movwf	(i1memmove@d1+1)& (0+255),b
 42565  019D4A  C11D  F102         	movff	i1OLED_PutChar@input_base,i1memmove@s1
 42566  019D4E  C11E  F103         	movff	i1OLED_PutChar@input_base+1,i1memmove@s1+1
 42567  019D52  0E00               	movlw	0
 42568  019D54  6F05               	movwf	(i1memmove@n+1)& (0+255),b
 42569  019D56  0E08               	movlw	8
 42570  019D58  6F04               	movwf	i1memmove@n& (0+255),b
 42571  019D5A  EC8C  F0CF         	call	i1_memmove	;wreg free
 42572                           
 42573                           ;oled.c: 250: length = 9;
 42574  019D5E  0E09               	movlw	9
 42575  019D60  0101               	movlb	1	; () banked
 42576  019D62  6F1F               	movwf	i1OLED_PutChar@length& (0+255),b
 42577                           
 42578                           ; BSR set to: 1
 42579                           ;oled.c: 252: I2C1_MasterWrite(data_array, length, (uint16_t) 0x3C, &OLED_I2C_Status);
 42580  019D64  0E14               	movlw	low i1OLED_PutChar@data_array
 42581  019D66  6F09               	movwf	i1I2C1_MasterWrite@pdata& (0+255),b
 42582  019D68  0E01               	movlw	high i1OLED_PutChar@data_array
 42583  019D6A  6F0A               	movwf	(i1I2C1_MasterWrite@pdata+1)& (0+255),b
 42584  019D6C  C11F  F10B         	movff	i1OLED_PutChar@length,i1I2C1_MasterWrite@length
 42585  019D70  0E00               	movlw	0
 42586  019D72  6F0D               	movwf	(i1I2C1_MasterWrite@address+1)& (0+255),b
 42587  019D74  0E3C               	movlw	60
 42588  019D76  6F0C               	movwf	i1I2C1_MasterWrite@address& (0+255),b
 42589  019D78  0EAB               	movlw	low _OLED_I2C_Status
 42590  019D7A  6F0E               	movwf	i1I2C1_MasterWrite@pflag& (0+255),b
 42591  019D7C  0E01               	movlw	high _OLED_I2C_Status
 42592  019D7E  6F0F               	movwf	(i1I2C1_MasterWrite@pflag+1)& (0+255),b
 42593  019D80  ECE0  F0D7         	call	i1_I2C1_MasterWrite	;wreg free
 42594  019D84  0E02               	movlw	2
 42595  019D86  0101               	movlb	1	; () banked
 42596  019D88  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 42597  019D8A  B4D8               	btfsc	status,2,c
 42598  019D8C  D7FB               	goto	i1l1915
 42599                           
 42600                           ; BSR set to: 1
 42601                           ;oled.c: 256: if ( OLED_I2C_Status == I2C1_MESSAGE_FAIL ||
 42602                           ;oled.c: 257: OLED_I2C_Status == I2C1_STUCK_START ||
 42603                           ;oled.c: 258: OLED_I2C_Status == I2C1_MESSAGE_ADDRESS_NO_ACK ||
 42604                           ;oled.c: 259: OLED_I2C_Status == I2C1_DATA_NO_ACK ||
 42605                           ;oled.c: 260: OLED_I2C_Status == I2C1_LOST_STATE ) {
 42606                           
 42607                           ; BSR set to: 1
 42608  019D8E  05AB               	decf	_OLED_I2C_Status& (0+255),w,b
 42609  019D90  B4D8               	btfsc	status,2,c
 42610  019D92  D010               	goto	i1u2150_20
 42611                           
 42612                           ; BSR set to: 1
 42613  019D94  0E03               	movlw	3
 42614  019D96  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 42615  019D98  B4D8               	btfsc	status,2,c
 42616  019D9A  D00C               	goto	i1u2150_20
 42617                           
 42618                           ; BSR set to: 1
 42619  019D9C  0E04               	movlw	4
 42620  019D9E  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 42621  019DA0  B4D8               	btfsc	status,2,c
 42622  019DA2  D008               	goto	i1u2150_20
 42623                           
 42624                           ; BSR set to: 1
 42625  019DA4  0E05               	movlw	5
 42626  019DA6  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 42627  019DA8  B4D8               	btfsc	status,2,c
 42628  019DAA  D004               	goto	i1u2150_20
 42629                           
 42630                           ; BSR set to: 1
 42631  019DAC  0E06               	movlw	6
 42632  019DAE  19AB               	xorwf	_OLED_I2C_Status& (0+255),w,b
 42633  019DB0  A4D8               	btfss	status,2,c
 42634  019DB2  0012               	return	
 42635  019DB4                     i1u2150_20:
 42636                           
 42637                           ; BSR set to: 1
 42638                           ;oled.c: 261: error_handler.I2C_COMM_error_flag = 1;
 42639                           
 42640                           ; BSR set to: 1
 42641  019DB4  0E01               	movlw	1
 42642  019DB6  6F67               	movwf	(_error_handler+7)& (0+255),b
 42643  019DB8  0012               	return	
 42644  019DBA                     __end_ofi1_OLED_PutChar:
 42645                           	opt stack 0
 42646                           tosu	equ	0xFFF
 42647                           tosh	equ	0xFFE
 42648                           tosl	equ	0xFFD
 42649                           pclatu	equ	0xFFB
 42650                           pclath	equ	0xFFA
 42651                           tblptru	equ	0xFF8
 42652                           tblptrh	equ	0xFF7
 42653                           tblptrl	equ	0xFF6
 42654                           tablat	equ	0xFF5
 42655                           prodh	equ	0xFF4
 42656                           prodl	equ	0xFF3
 42657                           intcon	equ	0xFF2
 42658                           indf0	equ	0xFEF
 42659                           postinc0	equ	0xFEE
 42660                           fsr0h	equ	0xFEA
 42661                           fsr0l	equ	0xFE9
 42662                           wreg	equ	0xFE8
 42663                           indf1	equ	0xFE7
 42664                           postdec1	equ	0xFE5
 42665                           plusw1	equ	0xFE3
 42666                           fsr1h	equ	0xFE2
 42667                           fsr1l	equ	0xFE1
 42668                           bsr	equ	0xFE0
 42669                           indf2	equ	0xFDF
 42670                           postinc2	equ	0xFDE
 42671                           postdec2	equ	0xFDD
 42672                           plusw2	equ	0xFDB
 42673                           fsr2h	equ	0xFDA
 42674                           fsr2l	equ	0xFD9
 42675                           status	equ	0xFD8
 42676                           
 42677 ;; *************** function i1_memmove *****************
 42678 ;; Defined at:
 42679 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memmove.c"
 42680 ;; Parameters:    Size  Location     Type
 42681 ;;  d1              2    0[BANK1 ] PTR void 
 42682 ;;		 -> OLED_PutChar@data_array(9), 
 42683 ;;  s1              2    2[BANK1 ] PTR const void 
 42684 ;;		 -> OledFont(768), 
 42685 ;;  n               2    4[BANK1 ] unsigned int 
 42686 ;; Auto vars:     Size  Location     Type
 42687 ;;  memmove         2   10[BANK1 ] PTR const unsigned char 
 42688 ;;		 -> OledFont(768), 
 42689 ;;  memmove         2    8[BANK1 ] PTR unsigned char 
 42690 ;;		 -> OLED_PutChar@data_array(9), 
 42691 ;; Return value:  Size  Location     Type
 42692 ;;                  2    0[BANK1 ] PTR void 
 42693 ;; Registers used:
 42694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 42695 ;; Tracked objects:
 42696 ;;		On entry : 0/0
 42697 ;;		On exit  : 0/0
 42698 ;;		Unchanged: 0/0
 42699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42700 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42701 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42702 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42703 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42704 ;;Total ram usage:       12 bytes
 42705 ;; Hardware stack levels used:    1
 42706 ;; Hardware stack levels required when called:    9
 42707 ;; This function calls:
 42708 ;;		Nothing
 42709 ;; This function is called by:
 42710 ;;		i1_OLED_PutChar
 42711 ;; This function uses a non-reentrant model
 42712 ;;
 42713                           
 42714                           	psect	text129
 42715  019F18                     __ptext129:
 42716                           	opt stack 0
 42717  019F18                     i1_memmove:
 42718                           	opt stack 5
 42719                           
 42720                           ; BSR set to: 1
 42721                           ;incstack = 0
 42722  019F18  C102  F10A         	movff	i1memmove@s1,i1memmove@s
 42723  019F1C  C103  F10B         	movff	i1memmove@s1+1,i1memmove@s+1
 42724  019F20  C100  F108         	movff	i1memmove@d1,i1memmove@d
 42725  019F24  C101  F109         	movff	i1memmove@d1+1,i1memmove@d+1
 42726  019F28  0101               	movlb	1	; () banked
 42727  019F2A  5108               	movf	i1memmove@d& (0+255),w,b
 42728  019F2C  5D0A               	subwf	i1memmove@s& (0+255),w,b
 42729  019F2E  5109               	movf	(i1memmove@d+1)& (0+255),w,b
 42730  019F30  590B               	subwfb	(i1memmove@s+1)& (0+255),w,b
 42731  019F32  B0D8               	btfsc	status,0,c
 42732  019F34  D02F               	goto	i1l2832
 42733                           
 42734                           ; BSR set to: 1
 42735  019F36  5104               	movf	i1memmove@n& (0+255),w,b
 42736  019F38  250A               	addwf	i1memmove@s& (0+255),w,b
 42737  019F3A  6F06               	movwf	??i1_memmove& (0+255),b
 42738  019F3C  5105               	movf	(i1memmove@n+1)& (0+255),w,b
 42739  019F3E  210B               	addwfc	(i1memmove@s+1)& (0+255),w,b
 42740  019F40  6F07               	movwf	(??i1_memmove+1)& (0+255),b
 42741  019F42  5106               	movf	??i1_memmove& (0+255),w,b
 42742  019F44  5D08               	subwf	i1memmove@d& (0+255),w,b
 42743  019F46  5107               	movf	(??i1_memmove+1)& (0+255),w,b
 42744  019F48  5909               	subwfb	(i1memmove@d+1)& (0+255),w,b
 42745  019F4A  B0D8               	btfsc	status,0,c
 42746  019F4C  D023               	goto	i1l2832
 42747                           
 42748                           ; BSR set to: 1
 42749  019F4E  5104               	movf	i1memmove@n& (0+255),w,b
 42750  019F50  270A               	addwf	i1memmove@s& (0+255),f,b
 42751  019F52  5105               	movf	(i1memmove@n+1)& (0+255),w,b
 42752  019F54  230B               	addwfc	(i1memmove@s+1)& (0+255),f,b
 42753  019F56  5104               	movf	i1memmove@n& (0+255),w,b
 42754  019F58  2708               	addwf	i1memmove@d& (0+255),f,b
 42755  019F5A  5105               	movf	(i1memmove@n+1)& (0+255),w,b
 42756  019F5C  2309               	addwfc	(i1memmove@d+1)& (0+255),f,b
 42757  019F5E                     
 42758                           ; BSR set to: 1
 42759                           
 42760                           ; BSR set to: 1
 42761  019F5E  070A               	decf	i1memmove@s& (0+255),f,b
 42762  019F60  A0D8               	btfss	status,0,c
 42763  019F62  070B               	decf	(i1memmove@s+1)& (0+255),f,b
 42764  019F64  C10A  FFF6         	movff	i1memmove@s,tblptrl
 42765  019F68  C10B  FFF7         	movff	i1memmove@s+1,tblptrh
 42766  019F6C                     	if	0	;tblptru may be non-zero
 42767  019F6C                     	endif
 42768  019F6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42769  019F6C  0E00               	movlw	low (__mediumconst shr (0+16))
 42770  019F6E  6EF8               	movwf	tblptru,c
 42771  019F70                     	endif
 42772  019F70  0708               	decf	i1memmove@d& (0+255),f,b
 42773  019F72  A0D8               	btfss	status,0,c
 42774  019F74  0709               	decf	(i1memmove@d+1)& (0+255),f,b
 42775  019F76  C108  FFD9         	movff	i1memmove@d,fsr2l
 42776  019F7A  C109  FFDA         	movff	i1memmove@d+1,fsr2h
 42777  019F7E  0008               	tblrd		*
 42778  019F80  CFF5 FFDF          	movff	tablat,indf2
 42779                           
 42780                           ; BSR set to: 1
 42781  019F84  0704               	decf	i1memmove@n& (0+255),f,b
 42782  019F86  A0D8               	btfss	status,0,c
 42783  019F88  0705               	decf	(i1memmove@n+1)& (0+255),f,b
 42784  019F8A  5104               	movf	i1memmove@n& (0+255),w,b
 42785  019F8C  1105               	iorwf	(i1memmove@n+1)& (0+255),w,b
 42786  019F8E  B4D8               	btfsc	status,2,c
 42787  019F90  0012               	return	
 42788  019F92  D7E5               	goto	i1l2833
 42789  019F94                     i1l2832:
 42790                           
 42791                           ; BSR set to: 1
 42792                           
 42793                           ; BSR set to: 1
 42794  019F94  5104               	movf	i1memmove@n& (0+255),w,b
 42795  019F96  1105               	iorwf	(i1memmove@n+1)& (0+255),w,b
 42796  019F98  B4D8               	btfsc	status,2,c
 42797  019F9A  0012               	return	
 42798                           
 42799                           ; BSR set to: 1
 42800                           
 42801                           ; BSR set to: 1
 42802  019F9C  C10A  FFF6         	movff	i1memmove@s,tblptrl
 42803  019FA0  C10B  FFF7         	movff	i1memmove@s+1,tblptrh
 42804  019FA4                     	if	0	;tblptru may be non-zero
 42805  019FA4                     	endif
 42806  019FA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42807  019FA4  0E00               	movlw	low (__mediumconst shr (0+16))
 42808  019FA6  6EF8               	movwf	tblptru,c
 42809  019FA8                     	endif
 42810  019FA8  C108  FFD9         	movff	i1memmove@d,fsr2l
 42811  019FAC  C109  FFDA         	movff	i1memmove@d+1,fsr2h
 42812  019FB0  0008               	tblrd		*
 42813  019FB2  CFF5 FFDF          	movff	tablat,indf2
 42814                           
 42815                           ; BSR set to: 1
 42816  019FB6  4B0A               	infsnz	i1memmove@s& (0+255),f,b
 42817  019FB8  2B0B               	incf	(i1memmove@s+1)& (0+255),f,b
 42818                           
 42819                           ; BSR set to: 1
 42820  019FBA  4B08               	infsnz	i1memmove@d& (0+255),f,b
 42821  019FBC  2B09               	incf	(i1memmove@d+1)& (0+255),f,b
 42822                           
 42823                           ; BSR set to: 1
 42824  019FBE  0704               	decf	i1memmove@n& (0+255),f,b
 42825  019FC0  A0D8               	btfss	status,0,c
 42826  019FC2  0705               	decf	(i1memmove@n+1)& (0+255),f,b
 42827  019FC4  D7E7               	goto	i1l2832
 42828  019FC6                     __end_ofi1_memmove:
 42829                           	opt stack 0
 42830                           tosu	equ	0xFFF
 42831                           tosh	equ	0xFFE
 42832                           tosl	equ	0xFFD
 42833                           pclatu	equ	0xFFB
 42834                           pclath	equ	0xFFA
 42835                           tblptru	equ	0xFF8
 42836                           tblptrh	equ	0xFF7
 42837                           tblptrl	equ	0xFF6
 42838                           tablat	equ	0xFF5
 42839                           prodh	equ	0xFF4
 42840                           prodl	equ	0xFF3
 42841                           intcon	equ	0xFF2
 42842                           indf0	equ	0xFEF
 42843                           postinc0	equ	0xFEE
 42844                           fsr0h	equ	0xFEA
 42845                           fsr0l	equ	0xFE9
 42846                           wreg	equ	0xFE8
 42847                           indf1	equ	0xFE7
 42848                           postdec1	equ	0xFE5
 42849                           plusw1	equ	0xFE3
 42850                           fsr1h	equ	0xFE2
 42851                           fsr1l	equ	0xFE1
 42852                           bsr	equ	0xFE0
 42853                           indf2	equ	0xFDF
 42854                           postinc2	equ	0xFDE
 42855                           postdec2	equ	0xFDD
 42856                           plusw2	equ	0xFDB
 42857                           fsr2h	equ	0xFDA
 42858                           fsr2l	equ	0xFD9
 42859                           status	equ	0xFD8
 42860                           
 42861 ;; *************** function i1_I2C1_MasterWrite *****************
 42862 ;; Defined at:
 42863 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 42864 ;; Parameters:    Size  Location     Type
 42865 ;;  pdata           2    9[BANK1 ] PTR unsigned char 
 42866 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), 
 42867 ;;  length          1   11[BANK1 ] unsigned char 
 42868 ;;  address         2   12[BANK1 ] unsigned int 
 42869 ;;  pflag           2   14[BANK1 ] PTR enum E17311
 42870 ;;		 -> OLED_I2C_Status(1), 
 42871 ;; Auto vars:     Size  Location     Type
 42872 ;;		None
 42873 ;; Return value:  Size  Location     Type
 42874 ;;                  1    wreg      void 
 42875 ;; Registers used:
 42876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42877 ;; Tracked objects:
 42878 ;;		On entry : 0/0
 42879 ;;		On exit  : 0/0
 42880 ;;		Unchanged: 0/0
 42881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 42882 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42885 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42886 ;;Total ram usage:        7 bytes
 42887 ;; Hardware stack levels used:    1
 42888 ;; Hardware stack levels required when called:   11
 42889 ;; This function calls:
 42890 ;;		i1_I2C1_MasterTRBInsert
 42891 ;;		i1_I2C1_MasterWriteTRBBuild
 42892 ;; This function is called by:
 42893 ;;		i1_OLED_Command
 42894 ;;		i1_OLED_PutChar
 42895 ;; This function uses a non-reentrant model
 42896 ;;
 42897                           
 42898                           	psect	text130
 42899  01AFC0                     __ptext130:
 42900                           	opt stack 0
 42901  01AFC0                     i1_I2C1_MasterWrite:
 42902                           	opt stack 3
 42903                           
 42904                           ;i2c1.c: 606: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 42905                           ;i2c1.c: 609: if (i2c1_object.trStatus.s.full != 1)
 42906                           
 42907                           ; BSR set to: 1
 42908                           ;incstack = 0
 42909  01AFC0  0101               	movlb	1	; () banked
 42910  01AFC2  B16D               	btfsc	(_i2c1_object+4)& (0+255),0,b
 42911  01AFC4  D01D               	goto	i1l1117
 42912                           
 42913                           ; BSR set to: 1
 42914                           ;i2c1.c: 610: {
 42915                           ;i2c1.c: 611: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 42916  01AFC6  0EE4               	movlw	low I2C1_MasterWrite@trBlock
 42917  01AFC8  6F00               	movwf	i1I2C1_MasterWriteTRBBuild@ptrb& (0+255),b
 42918  01AFCA  0E02               	movlw	high I2C1_MasterWrite@trBlock
 42919  01AFCC  6F01               	movwf	(i1I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),b
 42920  01AFCE  C109  F102         	movff	i1I2C1_MasterWrite@pdata,i1I2C1_MasterWriteTRBBuild@pdata
 42921  01AFD2  C10A  F103         	movff	i1I2C1_MasterWrite@pdata+1,i1I2C1_MasterWriteTRBBuild@pdata+1
 42922  01AFD6  C10B  F104         	movff	i1I2C1_MasterWrite@length,i1I2C1_MasterWriteTRBBuild@length
 42923  01AFDA  C10C  F105         	movff	i1I2C1_MasterWrite@address,i1I2C1_MasterWriteTRBBuild@address
 42924  01AFDE  C10D  F106         	movff	i1I2C1_MasterWrite@address+1,i1I2C1_MasterWriteTRBBuild@address+1
 42925  01AFE2  EC9C  F0D9         	call	i1_I2C1_MasterWriteTRBBuild	;wreg free
 42926                           
 42927                           ;i2c1.c: 612: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 42928  01AFE6  0EE4               	movlw	low I2C1_MasterWrite@trBlock
 42929  01AFE8  0101               	movlb	1	; () banked
 42930  01AFEA  6F00               	movwf	i1I2C1_MasterTRBInsert@ptrb_list& (0+255),b
 42931  01AFEC  0E02               	movlw	high I2C1_MasterWrite@trBlock
 42932  01AFEE  6F01               	movwf	(i1I2C1_MasterTRBInsert@ptrb_list+1)& (0+255),b
 42933  01AFF0  C10E  F102         	movff	i1I2C1_MasterWrite@pflag,i1I2C1_MasterTRBInsert@pflag
 42934  01AFF4  C10F  F103         	movff	i1I2C1_MasterWrite@pflag+1,i1I2C1_MasterTRBInsert@pflag+1
 42935  01AFF8  0E01               	movlw	1
 42936  01AFFA  EC34  F0D0         	call	i1_I2C1_MasterTRBInsert
 42937                           
 42938                           ;i2c1.c: 613: }
 42939  01AFFE  0012               	return	
 42940  01B000                     i1l1117:
 42941                           
 42942                           ;i2c1.c: 614: else
 42943                           ;i2c1.c: 615: {
 42944                           ;i2c1.c: 616: *pflag = I2C1_MESSAGE_FAIL;
 42945  01B000  C10E  FFD9         	movff	i1I2C1_MasterWrite@pflag,fsr2l
 42946  01B004  C10F  FFDA         	movff	i1I2C1_MasterWrite@pflag+1,fsr2h
 42947  01B008  0E01               	movlw	1
 42948  01B00A  6EDF               	movwf	indf2,c
 42949  01B00C  0012               	return	
 42950  01B00E                     __end_ofi1_I2C1_MasterWrite:
 42951                           	opt stack 0
 42952                           tosu	equ	0xFFF
 42953                           tosh	equ	0xFFE
 42954                           tosl	equ	0xFFD
 42955                           pclatu	equ	0xFFB
 42956                           pclath	equ	0xFFA
 42957                           tblptru	equ	0xFF8
 42958                           tblptrh	equ	0xFF7
 42959                           tblptrl	equ	0xFF6
 42960                           tablat	equ	0xFF5
 42961                           prodh	equ	0xFF4
 42962                           prodl	equ	0xFF3
 42963                           intcon	equ	0xFF2
 42964                           indf0	equ	0xFEF
 42965                           postinc0	equ	0xFEE
 42966                           fsr0h	equ	0xFEA
 42967                           fsr0l	equ	0xFE9
 42968                           wreg	equ	0xFE8
 42969                           indf1	equ	0xFE7
 42970                           postdec1	equ	0xFE5
 42971                           plusw1	equ	0xFE3
 42972                           fsr1h	equ	0xFE2
 42973                           fsr1l	equ	0xFE1
 42974                           bsr	equ	0xFE0
 42975                           indf2	equ	0xFDF
 42976                           postinc2	equ	0xFDE
 42977                           postdec2	equ	0xFDD
 42978                           plusw2	equ	0xFDB
 42979                           fsr2h	equ	0xFDA
 42980                           fsr2l	equ	0xFD9
 42981                           status	equ	0xFD8
 42982                           
 42983 ;; *************** function i1_I2C1_MasterWriteTRBBuild *****************
 42984 ;; Defined at:
 42985 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 42986 ;; Parameters:    Size  Location     Type
 42987 ;;  ptrb            2    0[BANK1 ] PTR struct .
 42988 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 42989 ;;  pdata           2    2[BANK1 ] PTR unsigned char 
 42990 ;;		 -> OLED_PutChar@data_array(9), OLED_Data@data_array(2), OLED_Command@data_array(2), 
 42991 ;;  length          1    4[BANK1 ] unsigned char 
 42992 ;;  address         2    5[BANK1 ] unsigned int 
 42993 ;; Auto vars:     Size  Location     Type
 42994 ;;		None
 42995 ;; Return value:  Size  Location     Type
 42996 ;;                  1    wreg      void 
 42997 ;; Registers used:
 42998 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42999 ;; Tracked objects:
 43000 ;;		On entry : 0/0
 43001 ;;		On exit  : 0/0
 43002 ;;		Unchanged: 0/0
 43003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43004 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43006 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43007 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43008 ;;Total ram usage:        9 bytes
 43009 ;; Hardware stack levels used:    1
 43010 ;; Hardware stack levels required when called:    9
 43011 ;; This function calls:
 43012 ;;		Nothing
 43013 ;; This function is called by:
 43014 ;;		i1_I2C1_MasterWrite
 43015 ;; This function uses a non-reentrant model
 43016 ;;
 43017                           
 43018                           	psect	text131
 43019  01B338                     __ptext131:
 43020                           	opt stack 0
 43021  01B338                     i1_I2C1_MasterWriteTRBBuild:
 43022                           	opt stack 4
 43023                           
 43024                           ;i2c1.c: 727: ptrb->address = address << 1;
 43025                           
 43026                           ;incstack = 0
 43027  01B338  C105  F107         	movff	i1I2C1_MasterWriteTRBBuild@address,??i1_I2C1_MasterWriteTRBBuild
 43028  01B33C  C106  F108         	movff	i1I2C1_MasterWriteTRBBuild@address+1,??i1_I2C1_MasterWriteTRBBuild+1
 43029  01B340  90D8               	bcf	status,0,c
 43030  01B342  0101               	movlb	1	; () banked
 43031  01B344  3707               	rlcf	??i1_I2C1_MasterWriteTRBBuild& (0+255),f,b
 43032  01B346  3708               	rlcf	(??i1_I2C1_MasterWriteTRBBuild+1)& (0+255),f,b
 43033  01B348  C100  FFD9         	movff	i1I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 43034  01B34C  C101  FFDA         	movff	i1I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 43035  01B350  C107  FFDE         	movff	??i1_I2C1_MasterWriteTRBBuild,postinc2
 43036  01B354  C108  FFDD         	movff	??i1_I2C1_MasterWriteTRBBuild+1,postdec2
 43037                           
 43038                           ; BSR set to: 1
 43039                           ;i2c1.c: 728: ptrb->length = length;
 43040  01B358  EE20 F002          	lfsr	2,2
 43041  01B35C  5100               	movf	i1I2C1_MasterWriteTRBBuild@ptrb& (0+255),w,b
 43042  01B35E  26D9               	addwf	fsr2l,f,c
 43043  01B360  5101               	movf	(i1I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 43044  01B362  22DA               	addwfc	fsr2h,f,c
 43045  01B364  C104  FFDF         	movff	i1I2C1_MasterWriteTRBBuild@length,indf2
 43046                           
 43047                           ; BSR set to: 1
 43048                           ;i2c1.c: 729: ptrb->pbuffer = pdata;
 43049  01B368  EE20 F003          	lfsr	2,3
 43050  01B36C  5100               	movf	i1I2C1_MasterWriteTRBBuild@ptrb& (0+255),w,b
 43051  01B36E  26D9               	addwf	fsr2l,f,c
 43052  01B370  5101               	movf	(i1I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
 43053  01B372  22DA               	addwfc	fsr2h,f,c
 43054  01B374  C102  FFDE         	movff	i1I2C1_MasterWriteTRBBuild@pdata,postinc2
 43055  01B378  C103  FFDD         	movff	i1I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 43056                           
 43057                           ; BSR set to: 1
 43058  01B37C  0012               	return		;funcret
 43059  01B37E                     __end_ofi1_I2C1_MasterWriteTRBBuild:
 43060                           	opt stack 0
 43061                           tosu	equ	0xFFF
 43062                           tosh	equ	0xFFE
 43063                           tosl	equ	0xFFD
 43064                           pclatu	equ	0xFFB
 43065                           pclath	equ	0xFFA
 43066                           tblptru	equ	0xFF8
 43067                           tblptrh	equ	0xFF7
 43068                           tblptrl	equ	0xFF6
 43069                           tablat	equ	0xFF5
 43070                           prodh	equ	0xFF4
 43071                           prodl	equ	0xFF3
 43072                           intcon	equ	0xFF2
 43073                           indf0	equ	0xFEF
 43074                           postinc0	equ	0xFEE
 43075                           fsr0h	equ	0xFEA
 43076                           fsr0l	equ	0xFE9
 43077                           wreg	equ	0xFE8
 43078                           indf1	equ	0xFE7
 43079                           postdec1	equ	0xFE5
 43080                           plusw1	equ	0xFE3
 43081                           fsr1h	equ	0xFE2
 43082                           fsr1l	equ	0xFE1
 43083                           bsr	equ	0xFE0
 43084                           indf2	equ	0xFDF
 43085                           postinc2	equ	0xFDE
 43086                           postdec2	equ	0xFDD
 43087                           plusw2	equ	0xFDB
 43088                           fsr2h	equ	0xFDA
 43089                           fsr2l	equ	0xFD9
 43090                           status	equ	0xFD8
 43091                           
 43092 ;; *************** function i1_I2C1_MasterTRBInsert *****************
 43093 ;; Defined at:
 43094 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 43095 ;; Parameters:    Size  Location     Type
 43096 ;;  count           1    wreg     unsigned char 
 43097 ;;  ptrb_list       2    0[BANK1 ] PTR struct .
 43098 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 43099 ;;  pflag           2    2[BANK1 ] PTR enum E17311
 43100 ;;		 -> OLED_I2C_Status(1), 
 43101 ;; Auto vars:     Size  Location     Type
 43102 ;;  count           1    5[BANK1 ] unsigned char 
 43103 ;; Return value:  Size  Location     Type
 43104 ;;                  1    wreg      void 
 43105 ;; Registers used:
 43106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43107 ;; Tracked objects:
 43108 ;;		On entry : 0/0
 43109 ;;		On exit  : 0/0
 43110 ;;		Unchanged: 0/0
 43111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43112 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43113 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43114 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43115 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43116 ;;Total ram usage:        6 bytes
 43117 ;; Hardware stack levels used:    1
 43118 ;; Hardware stack levels required when called:   10
 43119 ;; This function calls:
 43120 ;;		i1_I2C1_WaitForLastPacketToComplete
 43121 ;; This function is called by:
 43122 ;;		i1_I2C1_MasterWrite
 43123 ;; This function uses a non-reentrant model
 43124 ;;
 43125                           
 43126                           	psect	text132
 43127  01A068                     __ptext132:
 43128                           	opt stack 0
 43129  01A068                     i1_I2C1_MasterTRBInsert:
 43130                           	opt stack 3
 43131                           
 43132                           ; BSR set to: 1
 43133                           ;incstack = 0
 43134                           ;i1I2C1_MasterTRBInsert@count stored from wreg
 43135  01A068  0101               	movlb	1	; () banked
 43136  01A06A  6F05               	movwf	i1I2C1_MasterTRBInsert@count& (0+255),b
 43137                           
 43138                           ;i2c1.c: 661: if (i2c1_object.trStatus.s.full != 1)
 43139  01A06C  0101               	movlb	1	; () banked
 43140  01A06E  B16D               	btfsc	(_i2c1_object+4)& (0+255),0,b
 43141  01A070  D039               	goto	i1l1135
 43142                           
 43143                           ; BSR set to: 1
 43144                           ;i2c1.c: 662: {
 43145                           ;i2c1.c: 663: *pflag = I2C1_MESSAGE_PENDING;
 43146  01A072  C102  FFD9         	movff	i1I2C1_MasterTRBInsert@pflag,fsr2l
 43147  01A076  C103  FFDA         	movff	i1I2C1_MasterTRBInsert@pflag+1,fsr2h
 43148  01A07A  0E02               	movlw	2
 43149  01A07C  6EDF               	movwf	indf2,c
 43150                           
 43151                           ; BSR set to: 1
 43152                           ;i2c1.c: 665: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 43153  01A07E  EE20 F001          	lfsr	2,1
 43154  01A082  5169               	movf	_i2c1_object& (0+255),w,b
 43155  01A084  26D9               	addwf	fsr2l,f,c
 43156  01A086  516A               	movf	(_i2c1_object+1)& (0+255),w,b
 43157  01A088  22DA               	addwfc	fsr2h,f,c
 43158  01A08A  C100  FFDE         	movff	i1I2C1_MasterTRBInsert@ptrb_list,postinc2
 43159  01A08E  C101  FFDD         	movff	i1I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 43160                           
 43161                           ; BSR set to: 1
 43162                           ;i2c1.c: 666: i2c1_object.pTrTail->count = count;
 43163  01A092  C169  FFD9         	movff	_i2c1_object,fsr2l
 43164  01A096  C16A  FFDA         	movff	_i2c1_object+1,fsr2h
 43165  01A09A  C105  FFDF         	movff	i1I2C1_MasterTRBInsert@count,indf2
 43166                           
 43167                           ; BSR set to: 1
 43168                           ;i2c1.c: 667: i2c1_object.pTrTail->pTrFlag = pflag;
 43169  01A09E  EE20 F003          	lfsr	2,3
 43170  01A0A2  5169               	movf	_i2c1_object& (0+255),w,b
 43171  01A0A4  26D9               	addwf	fsr2l,f,c
 43172  01A0A6  516A               	movf	(_i2c1_object+1)& (0+255),w,b
 43173  01A0A8  22DA               	addwfc	fsr2h,f,c
 43174  01A0AA  C102  FFDE         	movff	i1I2C1_MasterTRBInsert@pflag,postinc2
 43175  01A0AE  C103  FFDD         	movff	i1I2C1_MasterTRBInsert@pflag+1,postdec2
 43176                           
 43177                           ; BSR set to: 1
 43178                           ;i2c1.c: 668: i2c1_object.pTrTail++;
 43179  01A0B2  0E05               	movlw	5
 43180  01A0B4  2769               	addwf	_i2c1_object& (0+255),f,b
 43181  01A0B6  0E00               	movlw	0
 43182  01A0B8  236A               	addwfc	(_i2c1_object+1)& (0+255),f,b
 43183                           
 43184                           ; BSR set to: 1
 43185                           ;i2c1.c: 671: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 43186  01A0BA  0EEE               	movlw	low (_i2c1_tr_queue+5)
 43187  01A0BC  1969               	xorwf	_i2c1_object& (0+255),w,b
 43188  01A0BE  E108               	bnz	i1l15357
 43189  01A0C0  0E02               	movlw	high (_i2c1_tr_queue+5)
 43190  01A0C2  196A               	xorwf	(_i2c1_object+1)& (0+255),w,b
 43191  01A0C4  A4D8               	btfss	status,2,c
 43192  01A0C6  D004               	goto	i1l1136
 43193                           
 43194                           ; BSR set to: 1
 43195                           ;i2c1.c: 672: {
 43196                           ;i2c1.c: 674: i2c1_object.pTrTail = i2c1_tr_queue;
 43197  01A0C8  0EE9               	movlw	low _i2c1_tr_queue
 43198  01A0CA  6F69               	movwf	_i2c1_object& (0+255),b
 43199  01A0CC  0E02               	movlw	high _i2c1_tr_queue
 43200  01A0CE  6F6A               	movwf	(_i2c1_object+1)& (0+255),b
 43201  01A0D0                     i1l1136:
 43202  01A0D0                     i1l15357:
 43203                           
 43204                           ; BSR set to: 1
 43205                           ;i2c1.c: 675: }
 43206                           ;i2c1.c: 679: i2c1_object.trStatus.s.empty = 0;
 43207  01A0D0  936D               	bcf	(_i2c1_object+4)& (0+255),1,b
 43208                           
 43209                           ;i2c1.c: 682: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 43210  01A0D2  5169               	movf	_i2c1_object& (0+255),w,b
 43211  01A0D4  196B               	xorwf	(_i2c1_object+2)& (0+255),w,b
 43212  01A0D6  E10C               	bnz	i1l15363
 43213  01A0D8  516A               	movf	(_i2c1_object+1)& (0+255),w,b
 43214  01A0DA  196C               	xorwf	(_i2c1_object+3)& (0+255),w,b
 43215  01A0DC  A4D8               	btfss	status,2,c
 43216  01A0DE  D008               	goto	i1l1138
 43217                           
 43218                           ; BSR set to: 1
 43219                           ;i2c1.c: 683: {
 43220                           ;i2c1.c: 685: i2c1_object.trStatus.s.full = 1;
 43221  01A0E0  816D               	bsf	(_i2c1_object+4)& (0+255),0,b
 43222                           
 43223                           ; BSR set to: 1
 43224                           ;i2c1.c: 686: }
 43225                           ;i2c1.c: 688: }
 43226  01A0E2  D006               	goto	i1l1138
 43227  01A0E4                     i1l1135:
 43228                           
 43229                           ; BSR set to: 1
 43230                           ;i2c1.c: 689: else
 43231                           ;i2c1.c: 690: {
 43232                           ;i2c1.c: 691: *pflag = I2C1_MESSAGE_FAIL;
 43233                           
 43234                           ; BSR set to: 1
 43235  01A0E4  C102  FFD9         	movff	i1I2C1_MasterTRBInsert@pflag,fsr2l
 43236  01A0E8  C103  FFDA         	movff	i1I2C1_MasterTRBInsert@pflag+1,fsr2h
 43237  01A0EC  0E01               	movlw	1
 43238  01A0EE  6EDF               	movwf	indf2,c
 43239  01A0F0                     i1l1138:
 43240  01A0F0                     i1l15363:
 43241                           
 43242                           ; BSR set to: 1
 43243                           ;i2c1.c: 692: }
 43244                           ;i2c1.c: 695: if (*pflag == I2C1_MESSAGE_PENDING)
 43245  01A0F0  C102  FFD9         	movff	i1I2C1_MasterTRBInsert@pflag,fsr2l
 43246  01A0F4  C103  FFDA         	movff	i1I2C1_MasterTRBInsert@pflag+1,fsr2h
 43247  01A0F8  0E02               	movlw	2
 43248  01A0FA  18DE               	xorwf	postinc2,w,c
 43249  01A0FC  A4D8               	btfss	status,2,c
 43250  01A0FE  0012               	return	
 43251                           
 43252                           ; BSR set to: 1
 43253                           ;i2c1.c: 696: {
 43254                           ;i2c1.c: 697: I2C1_WaitForLastPacketToComplete();
 43255  01A100  ECE9  F0DF         	call	i1_I2C1_WaitForLastPacketToComplete	;wreg free
 43256                           
 43257                           ;i2c1.c: 702: PIR3bits.SSP1IF = 1;
 43258  01A104  010E               	movlb	14	; () banked
 43259  01A106  8136               	bsf	54,0,b	;volatile
 43260  01A108  0012               	return	
 43261  01A10A                     __end_ofi1_I2C1_MasterTRBInsert:
 43262                           	opt stack 0
 43263                           tosu	equ	0xFFF
 43264                           tosh	equ	0xFFE
 43265                           tosl	equ	0xFFD
 43266                           pclatu	equ	0xFFB
 43267                           pclath	equ	0xFFA
 43268                           tblptru	equ	0xFF8
 43269                           tblptrh	equ	0xFF7
 43270                           tblptrl	equ	0xFF6
 43271                           tablat	equ	0xFF5
 43272                           prodh	equ	0xFF4
 43273                           prodl	equ	0xFF3
 43274                           intcon	equ	0xFF2
 43275                           indf0	equ	0xFEF
 43276                           postinc0	equ	0xFEE
 43277                           fsr0h	equ	0xFEA
 43278                           fsr0l	equ	0xFE9
 43279                           wreg	equ	0xFE8
 43280                           indf1	equ	0xFE7
 43281                           postdec1	equ	0xFE5
 43282                           plusw1	equ	0xFE3
 43283                           fsr1h	equ	0xFE2
 43284                           fsr1l	equ	0xFE1
 43285                           bsr	equ	0xFE0
 43286                           indf2	equ	0xFDF
 43287                           postinc2	equ	0xFDE
 43288                           postdec2	equ	0xFDD
 43289                           plusw2	equ	0xFDB
 43290                           fsr2h	equ	0xFDA
 43291                           fsr2l	equ	0xFD9
 43292                           status	equ	0xFD8
 43293                           
 43294 ;; *************** function i1_I2C1_WaitForLastPacketToComplete *****************
 43295 ;; Defined at:
 43296 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 43297 ;; Parameters:    Size  Location     Type
 43298 ;;		None
 43299 ;; Auto vars:     Size  Location     Type
 43300 ;;		None
 43301 ;; Return value:  Size  Location     Type
 43302 ;;                  1    wreg      void 
 43303 ;; Registers used:
 43304 ;;		wreg, status,2
 43305 ;; Tracked objects:
 43306 ;;		On entry : 0/0
 43307 ;;		On exit  : 0/0
 43308 ;;		Unchanged: 0/0
 43309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43314 ;;Total ram usage:        0 bytes
 43315 ;; Hardware stack levels used:    1
 43316 ;; Hardware stack levels required when called:    9
 43317 ;; This function calls:
 43318 ;;		Nothing
 43319 ;; This function is called by:
 43320 ;;		i1_I2C1_MasterTRBInsert
 43321 ;; This function uses a non-reentrant model
 43322 ;;
 43323                           
 43324                           	psect	text133
 43325  01BFD2                     __ptext133:
 43326                           	opt stack 0
 43327  01BFD2                     i1_I2C1_WaitForLastPacketToComplete:
 43328                           	opt stack 3
 43329                           
 43330                           ;i2c1.c: 647: {
 43331                           
 43332                           ;i2c1.c: 646: while(i2c1_state != S_MASTER_IDLE)
 43333                           
 43334                           ;incstack = 0
 43335  01BFD2  0101               	movlb	1	; () banked
 43336  01BFD4  51A1               	movf	_i2c1_state& (0+255),w,b
 43337  01BFD6  B4D8               	btfsc	status,2,c
 43338  01BFD8  0012               	return	
 43339  01BFDA  D7FB               	goto	i1_I2C1_WaitForLastPacketToComplete
 43340  01BFDC                     __end_ofi1_I2C1_WaitForLastPacketToComplete:
 43341                           	opt stack 0
 43342                           tosu	equ	0xFFF
 43343                           tosh	equ	0xFFE
 43344                           tosl	equ	0xFFD
 43345                           pclatu	equ	0xFFB
 43346                           pclath	equ	0xFFA
 43347                           tblptru	equ	0xFF8
 43348                           tblptrh	equ	0xFF7
 43349                           tblptrl	equ	0xFF6
 43350                           tablat	equ	0xFF5
 43351                           prodh	equ	0xFF4
 43352                           prodl	equ	0xFF3
 43353                           intcon	equ	0xFF2
 43354                           indf0	equ	0xFEF
 43355                           postinc0	equ	0xFEE
 43356                           fsr0h	equ	0xFEA
 43357                           fsr0l	equ	0xFE9
 43358                           wreg	equ	0xFE8
 43359                           indf1	equ	0xFE7
 43360                           postdec1	equ	0xFE5
 43361                           plusw1	equ	0xFE3
 43362                           fsr1h	equ	0xFE2
 43363                           fsr1l	equ	0xFE1
 43364                           bsr	equ	0xFE0
 43365                           indf2	equ	0xFDF
 43366                           postinc2	equ	0xFDE
 43367                           postdec2	equ	0xFDD
 43368                           plusw2	equ	0xFDB
 43369                           fsr2h	equ	0xFDA
 43370                           fsr2l	equ	0xFD9
 43371                           status	equ	0xFD8
 43372                           
 43373 ;; *************** function _EUSART2_Transmit_ISR *****************
 43374 ;; Defined at:
 43375 ;;		line 190 in file "mcc_generated_files/eusart2.c"
 43376 ;; Parameters:    Size  Location     Type
 43377 ;;		None
 43378 ;; Auto vars:     Size  Location     Type
 43379 ;;		None
 43380 ;; Return value:  Size  Location     Type
 43381 ;;                  1    wreg      void 
 43382 ;; Registers used:
 43383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 43384 ;; Tracked objects:
 43385 ;;		On entry : 0/0
 43386 ;;		On exit  : 0/0
 43387 ;;		Unchanged: 0/0
 43388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43393 ;;Total ram usage:        0 bytes
 43394 ;; Hardware stack levels used:    1
 43395 ;; Hardware stack levels required when called:    9
 43396 ;; This function calls:
 43397 ;;		Nothing
 43398 ;; This function is called by:
 43399 ;;		_EUSART2_Initialize
 43400 ;;		_INTERRUPT_InterruptManagerLow
 43401 ;; This function uses a non-reentrant model
 43402 ;;
 43403                           
 43404                           	psect	text134
 43405  01B806                     __ptext134:
 43406                           	opt stack 0
 43407  01B806                     _EUSART2_Transmit_ISR:
 43408                           	opt stack 11
 43409                           
 43410                           ;eusart2.c: 194: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 43411                           
 43412                           ; BSR set to: 1
 43413                           ;incstack = 0
 43414  01B806  0E80               	movlw	128
 43415  01B808  0101               	movlb	1	; () banked
 43416  01B80A  61A4               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 43417  01B80C  D014               	goto	i1l451
 43418                           
 43419                           ; BSR set to: 1
 43420                           ;eusart2.c: 195: {
 43421                           ;eusart2.c: 196: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 43422  01B80E  51A5               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 43423  01B810  0D01               	mullw	1
 43424  01B812  0E00               	movlw	low _eusart2TxBuffer
 43425  01B814  24F3               	addwf	prodl,w,c
 43426  01B816  6ED9               	movwf	fsr2l,c
 43427  01B818  0E04               	movlw	high _eusart2TxBuffer
 43428  01B81A  20F4               	addwfc	prodh,w,c
 43429  01B81C  6EDA               	movwf	fsr2h,c
 43430  01B81E  50DF               	movf	indf2,w,c
 43431  01B820  010E               	movlb	14	; () banked
 43432  01B822  6FF2               	movwf	242,b	;volatile
 43433                           
 43434                           ; BSR set to: 14
 43435  01B824  0101               	movlb	1	; () banked
 43436  01B826  2BA5               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 43437                           
 43438                           ; BSR set to: 1
 43439                           ;eusart2.c: 197: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 43440  01B828  0E7F               	movlw	127
 43441  01B82A  65A5               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 43442  01B82C  D002               	goto	i1l452
 43443                           
 43444                           ; BSR set to: 1
 43445                           ;eusart2.c: 198: {
 43446                           ;eusart2.c: 199: eusart2TxTail = 0;
 43447  01B82E  0E00               	movlw	0
 43448  01B830  6FA5               	movwf	_eusart2TxTail& (0+255),b	;volatile
 43449  01B832                     i1l452:
 43450                           
 43451                           ; BSR set to: 1
 43452                           ;eusart2.c: 200: }
 43453                           ;eusart2.c: 201: eusart2TxBufferRemaining++;
 43454                           
 43455                           ; BSR set to: 1
 43456  01B832  2BA4               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 43457                           
 43458                           ;eusart2.c: 202: }
 43459  01B834  0012               	return	
 43460  01B836                     i1l451:
 43461                           
 43462                           ; BSR set to: 1
 43463                           ;eusart2.c: 203: else
 43464                           ;eusart2.c: 204: {
 43465                           ;eusart2.c: 205: PIE3bits.TX2IE = 0;
 43466  01B836  010E               	movlb	14	; () banked
 43467  01B838  9D2C               	bcf	44,6,b	;volatile
 43468  01B83A  0012               	return	
 43469  01B83C                     __end_of_EUSART2_Transmit_ISR:
 43470                           	opt stack 0
 43471                           tosu	equ	0xFFF
 43472                           tosh	equ	0xFFE
 43473                           tosl	equ	0xFFD
 43474                           pclatu	equ	0xFFB
 43475                           pclath	equ	0xFFA
 43476                           tblptru	equ	0xFF8
 43477                           tblptrh	equ	0xFF7
 43478                           tblptrl	equ	0xFF6
 43479                           tablat	equ	0xFF5
 43480                           prodh	equ	0xFF4
 43481                           prodl	equ	0xFF3
 43482                           intcon	equ	0xFF2
 43483                           indf0	equ	0xFEF
 43484                           postinc0	equ	0xFEE
 43485                           fsr0h	equ	0xFEA
 43486                           fsr0l	equ	0xFE9
 43487                           wreg	equ	0xFE8
 43488                           indf1	equ	0xFE7
 43489                           postdec1	equ	0xFE5
 43490                           plusw1	equ	0xFE3
 43491                           fsr1h	equ	0xFE2
 43492                           fsr1l	equ	0xFE1
 43493                           bsr	equ	0xFE0
 43494                           indf2	equ	0xFDF
 43495                           postinc2	equ	0xFDE
 43496                           postdec2	equ	0xFDD
 43497                           plusw2	equ	0xFDB
 43498                           fsr2h	equ	0xFDA
 43499                           fsr2l	equ	0xFD9
 43500                           status	equ	0xFD8
 43501                           
 43502 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 43503 ;; Defined at:
 43504 ;;		line 98 in file "mcc_generated_files/interrupt_manager.c"
 43505 ;; Parameters:    Size  Location     Type
 43506 ;;		None
 43507 ;; Auto vars:     Size  Location     Type
 43508 ;;		None
 43509 ;; Return value:  Size  Location     Type
 43510 ;;                  1    wreg      void 
 43511 ;; Registers used:
 43512 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43513 ;; Tracked objects:
 43514 ;;		On entry : 0/0
 43515 ;;		On exit  : 0/0
 43516 ;;		Unchanged: 0/0
 43517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43520 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43521 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43522 ;;Total ram usage:       18 bytes
 43523 ;; Hardware stack levels used:    1
 43524 ;; Hardware stack levels required when called:    8
 43525 ;; This function calls:
 43526 ;;		Absolute function
 43527 ;;		_ADCC_ThresholdISR
 43528 ;;		_EUSART2_Receive_ISR
 43529 ;;		_HLVD_ISR
 43530 ;;		_I2C1_BusCollisionISR
 43531 ;;		_I2C1_ISR
 43532 ;;		_INT0_ISR
 43533 ;;		_TMR4_ISR
 43534 ;;		_TMR5_ISR
 43535 ;; This function is called by:
 43536 ;;		Interrupt level 2
 43537 ;; This function uses a non-reentrant model
 43538 ;;
 43539                           
 43540                           	psect	intcode
 43541  000008                     __pintcode:
 43542                           	opt stack 0
 43543  000008                     _INTERRUPT_InterruptManagerHigh:
 43544                           	opt stack 3
 43545                           
 43546                           ;incstack = 0
 43547  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 43548  00000A  EF78  F0CA         	goto	int_func
 43549                           tosu	equ	0xFFF
 43550                           tosh	equ	0xFFE
 43551                           tosl	equ	0xFFD
 43552                           pclatu	equ	0xFFB
 43553                           pclath	equ	0xFFA
 43554                           tblptru	equ	0xFF8
 43555                           tblptrh	equ	0xFF7
 43556                           tblptrl	equ	0xFF6
 43557                           tablat	equ	0xFF5
 43558                           prodh	equ	0xFF4
 43559                           prodl	equ	0xFF3
 43560                           intcon	equ	0xFF2
 43561                           indf0	equ	0xFEF
 43562                           postinc0	equ	0xFEE
 43563                           fsr0h	equ	0xFEA
 43564                           fsr0l	equ	0xFE9
 43565                           wreg	equ	0xFE8
 43566                           indf1	equ	0xFE7
 43567                           postdec1	equ	0xFE5
 43568                           plusw1	equ	0xFE3
 43569                           fsr1h	equ	0xFE2
 43570                           fsr1l	equ	0xFE1
 43571                           bsr	equ	0xFE0
 43572                           indf2	equ	0xFDF
 43573                           postinc2	equ	0xFDE
 43574                           postdec2	equ	0xFDD
 43575                           plusw2	equ	0xFDB
 43576                           fsr2h	equ	0xFDA
 43577                           fsr2l	equ	0xFD9
 43578                           status	equ	0xFD8
 43579                           
 43580                           	psect	intcode_body
 43581  0194F0                     __pintcode_body:
 43582                           	opt stack 3
 43583  0194F0                     int_func:
 43584                           	opt stack 3
 43585  0194F0  CFFA F0DE          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 43586  0194F4  CFFB F0DF          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 43587  0194F8  CFE9 F0E0          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 43588  0194FC  CFEA F0E1          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 43589  019500  CFE1 F0E2          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 43590  019504  CFE2 F0E3          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 43591  019508  CFD9 F0E4          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 43592  01950C  CFDA F0E5          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 43593  019510  CFF3 F0E6          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 43594  019514  CFF4 F0E7          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 43595  019518  CFF6 F0E8          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 43596  01951C  CFF7 F0E9          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 43597  019520  CFF8 F0EA          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 43598  019524  CFF5 F0EB          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 43599  019528  C05F  F0EC         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 43600  01952C  C060  F0ED         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 43601  019530  C061  F0EE         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 43602  019534  C062  F0EF         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 43603                           
 43604                           ;interrupt_manager.c: 101: if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 43605  019538  010E               	movlb	14	; () banked
 43606  01953A  B32C               	btfsc	44,1,b	;volatile
 43607                           
 43608                           ; BSR set to: 14
 43609  01953C  A336               	btfss	54,1,b	;volatile
 43610  01953E  D003               	goto	i2l250
 43611                           
 43612                           ; BSR set to: 14
 43613                           ;interrupt_manager.c: 102: {
 43614                           ;interrupt_manager.c: 103: I2C1_BusCollisionISR();
 43615  019540  EC03  F0E0         	call	_I2C1_BusCollisionISR	;wreg free
 43616                           
 43617                           ;interrupt_manager.c: 104: }
 43618  019544  D033               	goto	i2l264
 43619  019546                     i2l250:
 43620                           
 43621                           ; BSR set to: 14
 43622                           ;interrupt_manager.c: 105: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 43623  019546  B12C               	btfsc	44,0,b	;volatile
 43624                           
 43625                           ; BSR set to: 14
 43626  019548  A136               	btfss	54,0,b	;volatile
 43627  01954A  D003               	goto	i2l252
 43628                           
 43629                           ; BSR set to: 14
 43630                           ;interrupt_manager.c: 106: {
 43631                           ;interrupt_manager.c: 107: I2C1_ISR();
 43632  01954C  EC7C  F0C0         	call	_I2C1_ISR	;wreg free
 43633                           
 43634                           ;interrupt_manager.c: 108: }
 43635  019550  D02D               	goto	i2l264
 43636  019552                     i2l252:
 43637                           
 43638                           ; BSR set to: 14
 43639                           ;interrupt_manager.c: 109: else if(PIE5bits.TMR4IE == 1 && PIR5bits.TMR4IF == 1)
 43640  019552  B72E               	btfsc	46,3,b	;volatile
 43641                           
 43642                           ; BSR set to: 14
 43643  019554  A738               	btfss	56,3,b	;volatile
 43644  019556  D003               	goto	i2l254
 43645                           
 43646                           ; BSR set to: 14
 43647                           ;interrupt_manager.c: 110: {
 43648                           ;interrupt_manager.c: 111: TMR4_ISR();
 43649  019558  ECC9  F0DD         	call	_TMR4_ISR	;wreg free
 43650                           
 43651                           ;interrupt_manager.c: 112: }
 43652  01955C  D027               	goto	i2l264
 43653  01955E                     i2l254:
 43654                           
 43655                           ; BSR set to: 14
 43656                           ;interrupt_manager.c: 113: else if(PIE2bits.HLVDIE == 1 && PIR2bits.HLVDIF == 1)
 43657  01955E  BF2B               	btfsc	43,7,b	;volatile
 43658                           
 43659                           ; BSR set to: 14
 43660  019560  AF35               	btfss	53,7,b	;volatile
 43661  019562  D003               	goto	i2l256
 43662                           
 43663                           ; BSR set to: 14
 43664                           ;interrupt_manager.c: 114: {
 43665                           ;interrupt_manager.c: 115: HLVD_ISR();
 43666  019564  ECCC  F0DB         	call	_HLVD_ISR	;wreg free
 43667                           
 43668                           ;interrupt_manager.c: 116: }
 43669  019568  D021               	goto	i2l264
 43670  01956A                     i2l256:
 43671                           
 43672                           ; BSR set to: 14
 43673                           ;interrupt_manager.c: 117: else if(PIE0bits.INT0IE == 1 && PIR0bits.INT0IF == 1)
 43674  01956A  B129               	btfsc	41,0,b	;volatile
 43675                           
 43676                           ; BSR set to: 14
 43677  01956C  A133               	btfss	51,0,b	;volatile
 43678  01956E  D003               	goto	i2l258
 43679                           
 43680                           ; BSR set to: 14
 43681                           ;interrupt_manager.c: 118: {
 43682                           ;interrupt_manager.c: 119: INT0_ISR();
 43683  019570  ECEE  F0DF         	call	_INT0_ISR	;wreg free
 43684                           
 43685                           ;interrupt_manager.c: 120: }
 43686  019574  D01B               	goto	i2l264
 43687  019576                     i2l258:
 43688                           
 43689                           ; BSR set to: 14
 43690                           ;interrupt_manager.c: 121: else if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 43691  019576  BF2C               	btfsc	44,7,b	;volatile
 43692                           
 43693                           ; BSR set to: 14
 43694  019578  AF36               	btfss	54,7,b	;volatile
 43695  01957A  D00D               	goto	i2l260
 43696                           
 43697                           ; BSR set to: 14
 43698                           ;interrupt_manager.c: 122: {
 43699                           ;interrupt_manager.c: 123: EUSART2_RxDefaultInterruptHandler();
 43700  01957C  D801               	call	i2u3709_48
 43701  01957E  D016               	goto	i2l264
 43702  019580                     i2u3709_48:
 43703  019580  0005               	push	
 43704  019582  6EFA               	movwf	pclath,c
 43705  019584  0102               	movlb	2	; () banked
 43706  019586  51D7               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 43707  019588  6EFD               	movwf	tosl,c
 43708  01958A  51D8               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 43709  01958C  6EFE               	movwf	tosh,c
 43710  01958E  51D9               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 43711  019590  6EFF               	movwf	tosu,c
 43712  019592  50FA               	movf	pclath,w,c
 43713  019594  0012               	return		;indir
 43714  019596                     i2l260:
 43715                           
 43716                           ; BSR set to: 14
 43717                           ;interrupt_manager.c: 125: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 43718  019596  B92E               	btfsc	46,4,b	;volatile
 43719                           
 43720                           ; BSR set to: 14
 43721  019598  A938               	btfss	56,4,b	;volatile
 43722  01959A  D003               	goto	i2l262
 43723                           
 43724                           ; BSR set to: 14
 43725                           ;interrupt_manager.c: 126: {
 43726                           ;interrupt_manager.c: 127: TMR5_ISR();
 43727  01959C  EC52  F0DC         	call	_TMR5_ISR	;wreg free
 43728                           
 43729                           ;interrupt_manager.c: 128: }
 43730  0195A0  D005               	goto	i2l264
 43731  0195A2                     i2l262:
 43732                           
 43733                           ; BSR set to: 14
 43734                           ;interrupt_manager.c: 129: else if(PIE1bits.ADTIE == 1 && PIR1bits.ADTIF == 1)
 43735  0195A2  B32A               	btfsc	42,1,b	;volatile
 43736                           
 43737                           ; BSR set to: 14
 43738  0195A4  A334               	btfss	52,1,b	;volatile
 43739  0195A6  D002               	goto	i2l264
 43740                           
 43741                           ; BSR set to: 14
 43742                           ;interrupt_manager.c: 130: {
 43743                           ;interrupt_manager.c: 131: ADCC_ThresholdISR();
 43744  0195A8  EC69  F0DD         	call	_ADCC_ThresholdISR	;wreg free
 43745  0195AC                     i2l264:
 43746                           
 43747                           ;interrupt_manager.c: 133: else
 43748                           ;interrupt_manager.c: 134: {
 43749  0195AC  C0EF  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 43750  0195B0  C0EE  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 43751  0195B4  C0ED  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 43752  0195B8  C0EC  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 43753  0195BC  C0EB  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 43754  0195C0  C0EA  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 43755  0195C4  C0E9  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 43756  0195C8  C0E8  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 43757  0195CC  C0E7  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 43758  0195D0  C0E6  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 43759  0195D4  C0E5  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 43760  0195D8  C0E4  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 43761  0195DC  C0E3  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 43762  0195E0  C0E2  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 43763  0195E4  C0E1  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 43764  0195E8  C0E0  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 43765  0195EC  C0DF  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 43766  0195F0  C0DE  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 43767  0195F4  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 43768  0195F6  0011               	retfie		f
 43769  0195F8                     __end_of_INTERRUPT_InterruptManagerHigh:
 43770                           	opt stack 0
 43771                           tosu	equ	0xFFF
 43772                           tosh	equ	0xFFE
 43773                           tosl	equ	0xFFD
 43774                           pclatu	equ	0xFFB
 43775                           pclath	equ	0xFFA
 43776                           tblptru	equ	0xFF8
 43777                           tblptrh	equ	0xFF7
 43778                           tblptrl	equ	0xFF6
 43779                           tablat	equ	0xFF5
 43780                           prodh	equ	0xFF4
 43781                           prodl	equ	0xFF3
 43782                           intcon	equ	0xFF2
 43783                           indf0	equ	0xFEF
 43784                           postinc0	equ	0xFEE
 43785                           fsr0h	equ	0xFEA
 43786                           fsr0l	equ	0xFE9
 43787                           wreg	equ	0xFE8
 43788                           indf1	equ	0xFE7
 43789                           postdec1	equ	0xFE5
 43790                           plusw1	equ	0xFE3
 43791                           fsr1h	equ	0xFE2
 43792                           fsr1l	equ	0xFE1
 43793                           bsr	equ	0xFE0
 43794                           indf2	equ	0xFDF
 43795                           postinc2	equ	0xFDE
 43796                           postdec2	equ	0xFDD
 43797                           plusw2	equ	0xFDB
 43798                           fsr2h	equ	0xFDA
 43799                           fsr2l	equ	0xFD9
 43800                           status	equ	0xFD8
 43801                           
 43802 ;; *************** function _TMR5_ISR *****************
 43803 ;; Defined at:
 43804 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 43805 ;; Parameters:    Size  Location     Type
 43806 ;;		None
 43807 ;; Auto vars:     Size  Location     Type
 43808 ;;		None
 43809 ;; Return value:  Size  Location     Type
 43810 ;;                  1    wreg      void 
 43811 ;; Registers used:
 43812 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 43813 ;; Tracked objects:
 43814 ;;		On entry : 0/0
 43815 ;;		On exit  : 0/0
 43816 ;;		Unchanged: 0/0
 43817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43822 ;;Total ram usage:        0 bytes
 43823 ;; Hardware stack levels used:    1
 43824 ;; Hardware stack levels required when called:    2
 43825 ;; This function calls:
 43826 ;;		Absolute function
 43827 ;;		_TMR5_DefaultInterruptHandler
 43828 ;;		_TMR5_WriteTimer
 43829 ;;		_dimmingOnTimeCallback
 43830 ;; This function is called by:
 43831 ;;		_INTERRUPT_InterruptManagerHigh
 43832 ;; This function uses a non-reentrant model
 43833 ;;
 43834                           
 43835                           	psect	text136
 43836  01B8A4                     __ptext136:
 43837                           	opt stack 0
 43838  01B8A4                     _TMR5_ISR:
 43839                           	opt stack 8
 43840                           
 43841                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 43842                           
 43843                           ;incstack = 0
 43844  01B8A4  010E               	movlb	14	; () banked
 43845  01B8A6  9938               	bcf	56,4,b	;volatile
 43846                           
 43847                           ; BSR set to: 14
 43848                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 43849  01B8A8  C195  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 43850  01B8AC  C196  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 43851  01B8B0  ECC2  F0DE         	call	_TMR5_WriteTimer	;wreg free
 43852                           
 43853                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 43854  01B8B4  0102               	movlb	2	; () banked
 43855  01B8B6  51CE               	movf	_TMR5_InterruptHandler& (0+255),w,b
 43856  01B8B8  11CF               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 43857  01B8BA  11D0               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 43858  01B8BC  B4D8               	btfsc	status,2,c
 43859  01B8BE  0012               	return	
 43860                           
 43861                           ; BSR set to: 2
 43862                           ;tmr5.c: 172: {
 43863                           ;tmr5.c: 173: TMR5_InterruptHandler();
 43864  01B8C0  D801               	call	i2u3678_48
 43865  01B8C2  0012               	return	
 43866  01B8C4                     i2u3678_48:
 43867  01B8C4  0005               	push	
 43868  01B8C6  6EFA               	movwf	pclath,c
 43869  01B8C8  51CE               	movf	_TMR5_InterruptHandler& (0+255),w,b
 43870  01B8CA  6EFD               	movwf	tosl,c
 43871  01B8CC  51CF               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 43872  01B8CE  6EFE               	movwf	tosh,c
 43873  01B8D0  51D0               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 43874  01B8D2  6EFF               	movwf	tosu,c
 43875  01B8D4  50FA               	movf	pclath,w,c
 43876  01B8D6  0012               	return		;indir
 43877  01B8D8                     __end_of_TMR5_ISR:
 43878                           	opt stack 0
 43879                           tosu	equ	0xFFF
 43880                           tosh	equ	0xFFE
 43881                           tosl	equ	0xFFD
 43882                           pclatu	equ	0xFFB
 43883                           pclath	equ	0xFFA
 43884                           tblptru	equ	0xFF8
 43885                           tblptrh	equ	0xFF7
 43886                           tblptrl	equ	0xFF6
 43887                           tablat	equ	0xFF5
 43888                           prodh	equ	0xFF4
 43889                           prodl	equ	0xFF3
 43890                           intcon	equ	0xFF2
 43891                           indf0	equ	0xFEF
 43892                           postinc0	equ	0xFEE
 43893                           fsr0h	equ	0xFEA
 43894                           fsr0l	equ	0xFE9
 43895                           wreg	equ	0xFE8
 43896                           indf1	equ	0xFE7
 43897                           postdec1	equ	0xFE5
 43898                           plusw1	equ	0xFE3
 43899                           fsr1h	equ	0xFE2
 43900                           fsr1l	equ	0xFE1
 43901                           bsr	equ	0xFE0
 43902                           indf2	equ	0xFDF
 43903                           postinc2	equ	0xFDE
 43904                           postdec2	equ	0xFDD
 43905                           plusw2	equ	0xFDB
 43906                           fsr2h	equ	0xFDA
 43907                           fsr2l	equ	0xFD9
 43908                           status	equ	0xFD8
 43909                           
 43910 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 43911 ;; Defined at:
 43912 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 43913 ;; Parameters:    Size  Location     Type
 43914 ;;		None
 43915 ;; Auto vars:     Size  Location     Type
 43916 ;;		None
 43917 ;; Return value:  Size  Location     Type
 43918 ;;                  1    wreg      void 
 43919 ;; Registers used:
 43920 ;;		None
 43921 ;; Tracked objects:
 43922 ;;		On entry : 0/0
 43923 ;;		On exit  : 0/0
 43924 ;;		Unchanged: 0/0
 43925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43930 ;;Total ram usage:        0 bytes
 43931 ;; Hardware stack levels used:    1
 43932 ;; This function calls:
 43933 ;;		Nothing
 43934 ;; This function is called by:
 43935 ;;		_TMR5_Initialize
 43936 ;;		_TMR5_ISR
 43937 ;; This function uses a non-reentrant model
 43938 ;;
 43939                           
 43940                           	psect	text137
 43941  01C030                     __ptext137:
 43942                           	opt stack 0
 43943  01C030                     _TMR5_DefaultInterruptHandler:
 43944                           	opt stack 9
 43945                           
 43946                           ;incstack = 0
 43947  01C030  0012               	return		;funcret
 43948  01C032                     __end_of_TMR5_DefaultInterruptHandler:
 43949                           	opt stack 0
 43950                           tosu	equ	0xFFF
 43951                           tosh	equ	0xFFE
 43952                           tosl	equ	0xFFD
 43953                           pclatu	equ	0xFFB
 43954                           pclath	equ	0xFFA
 43955                           tblptru	equ	0xFF8
 43956                           tblptrh	equ	0xFF7
 43957                           tblptrl	equ	0xFF6
 43958                           tablat	equ	0xFF5
 43959                           prodh	equ	0xFF4
 43960                           prodl	equ	0xFF3
 43961                           intcon	equ	0xFF2
 43962                           indf0	equ	0xFEF
 43963                           postinc0	equ	0xFEE
 43964                           fsr0h	equ	0xFEA
 43965                           fsr0l	equ	0xFE9
 43966                           wreg	equ	0xFE8
 43967                           indf1	equ	0xFE7
 43968                           postdec1	equ	0xFE5
 43969                           plusw1	equ	0xFE3
 43970                           fsr1h	equ	0xFE2
 43971                           fsr1l	equ	0xFE1
 43972                           bsr	equ	0xFE0
 43973                           indf2	equ	0xFDF
 43974                           postinc2	equ	0xFDE
 43975                           postdec2	equ	0xFDD
 43976                           plusw2	equ	0xFDB
 43977                           fsr2h	equ	0xFDA
 43978                           fsr2l	equ	0xFD9
 43979                           status	equ	0xFD8
 43980                           
 43981 ;; *************** function _dimmingOnTimeCallback *****************
 43982 ;; Defined at:
 43983 ;;		line 441 in file "main.c"
 43984 ;; Parameters:    Size  Location     Type
 43985 ;;		None
 43986 ;; Auto vars:     Size  Location     Type
 43987 ;;		None
 43988 ;; Return value:  Size  Location     Type
 43989 ;;                  1    wreg      void 
 43990 ;; Registers used:
 43991 ;;		cstack
 43992 ;; Tracked objects:
 43993 ;;		On entry : 0/0
 43994 ;;		On exit  : 0/0
 43995 ;;		Unchanged: 0/0
 43996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 43997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44001 ;;Total ram usage:        0 bytes
 44002 ;; Hardware stack levels used:    1
 44003 ;; Hardware stack levels required when called:    1
 44004 ;; This function calls:
 44005 ;;		i2_TMR5_StopTimer
 44006 ;; This function is called by:
 44007 ;;		_main
 44008 ;;		_TMR5_ISR
 44009 ;; This function uses a non-reentrant model
 44010 ;;
 44011                           
 44012                           	psect	text138
 44013  01BFB0                     __ptext138:
 44014                           	opt stack 0
 44015  01BFB0                     _dimmingOnTimeCallback:
 44016                           	opt stack 8
 44017                           
 44018                           ;main.c: 444: LATGbits.LATG1 = 1;
 44019                           
 44020                           ;incstack = 0
 44021  01BFB0  827F               	bsf	3967,1,c	;volatile
 44022                           
 44023                           ;main.c: 447: TMR5_StopTimer();
 44024  01BFB2  EC0D  F0E0         	call	i2_TMR5_StopTimer	;wreg free
 44025                           
 44026                           ;main.c: 450: PIE5bits.TMR5IE = 0;
 44027  01BFB6  010E               	movlb	14	; () banked
 44028  01BFB8  992E               	bcf	46,4,b	;volatile
 44029                           
 44030                           ; BSR set to: 14
 44031  01BFBA  0012               	return		;funcret
 44032  01BFBC                     __end_of_dimmingOnTimeCallback:
 44033                           	opt stack 0
 44034                           tosu	equ	0xFFF
 44035                           tosh	equ	0xFFE
 44036                           tosl	equ	0xFFD
 44037                           pclatu	equ	0xFFB
 44038                           pclath	equ	0xFFA
 44039                           tblptru	equ	0xFF8
 44040                           tblptrh	equ	0xFF7
 44041                           tblptrl	equ	0xFF6
 44042                           tablat	equ	0xFF5
 44043                           prodh	equ	0xFF4
 44044                           prodl	equ	0xFF3
 44045                           intcon	equ	0xFF2
 44046                           indf0	equ	0xFEF
 44047                           postinc0	equ	0xFEE
 44048                           fsr0h	equ	0xFEA
 44049                           fsr0l	equ	0xFE9
 44050                           wreg	equ	0xFE8
 44051                           indf1	equ	0xFE7
 44052                           postdec1	equ	0xFE5
 44053                           plusw1	equ	0xFE3
 44054                           fsr1h	equ	0xFE2
 44055                           fsr1l	equ	0xFE1
 44056                           bsr	equ	0xFE0
 44057                           indf2	equ	0xFDF
 44058                           postinc2	equ	0xFDE
 44059                           postdec2	equ	0xFDD
 44060                           plusw2	equ	0xFDB
 44061                           fsr2h	equ	0xFDA
 44062                           fsr2l	equ	0xFD9
 44063                           status	equ	0xFD8
 44064                           
 44065 ;; *************** function i2_TMR5_StopTimer *****************
 44066 ;; Defined at:
 44067 ;;		line 105 in file "mcc_generated_files/tmr5.c"
 44068 ;; Parameters:    Size  Location     Type
 44069 ;;		None
 44070 ;; Auto vars:     Size  Location     Type
 44071 ;;		None
 44072 ;; Return value:  Size  Location     Type
 44073 ;;                  1    wreg      void 
 44074 ;; Registers used:
 44075 ;;		None
 44076 ;; Tracked objects:
 44077 ;;		On entry : 0/0
 44078 ;;		On exit  : 0/0
 44079 ;;		Unchanged: 0/0
 44080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44085 ;;Total ram usage:        0 bytes
 44086 ;; Hardware stack levels used:    1
 44087 ;; This function calls:
 44088 ;;		Nothing
 44089 ;; This function is called by:
 44090 ;;		_dimmingOnTimeCallback
 44091 ;; This function uses a non-reentrant model
 44092 ;;
 44093                           
 44094                           	psect	text139
 44095  01C01A                     __ptext139:
 44096                           	opt stack 0
 44097  01C01A                     i2_TMR5_StopTimer:
 44098                           	opt stack 8
 44099                           
 44100                           ;tmr5.c: 108: T5CONbits.TMR5ON = 0;
 44101                           
 44102                           ; BSR set to: 14
 44103                           ;incstack = 0
 44104  01C01A  90C3               	bcf	4035,0,c	;volatile
 44105  01C01C  0012               	return		;funcret
 44106  01C01E                     __end_ofi2_TMR5_StopTimer:
 44107                           	opt stack 0
 44108                           tosu	equ	0xFFF
 44109                           tosh	equ	0xFFE
 44110                           tosl	equ	0xFFD
 44111                           pclatu	equ	0xFFB
 44112                           pclath	equ	0xFFA
 44113                           tblptru	equ	0xFF8
 44114                           tblptrh	equ	0xFF7
 44115                           tblptrl	equ	0xFF6
 44116                           tablat	equ	0xFF5
 44117                           prodh	equ	0xFF4
 44118                           prodl	equ	0xFF3
 44119                           intcon	equ	0xFF2
 44120                           indf0	equ	0xFEF
 44121                           postinc0	equ	0xFEE
 44122                           fsr0h	equ	0xFEA
 44123                           fsr0l	equ	0xFE9
 44124                           wreg	equ	0xFE8
 44125                           indf1	equ	0xFE7
 44126                           postdec1	equ	0xFE5
 44127                           plusw1	equ	0xFE3
 44128                           fsr1h	equ	0xFE2
 44129                           fsr1l	equ	0xFE1
 44130                           bsr	equ	0xFE0
 44131                           indf2	equ	0xFDF
 44132                           postinc2	equ	0xFDE
 44133                           postdec2	equ	0xFDD
 44134                           plusw2	equ	0xFDB
 44135                           fsr2h	equ	0xFDA
 44136                           fsr2l	equ	0xFD9
 44137                           status	equ	0xFD8
 44138                           
 44139 ;; *************** function _TMR4_ISR *****************
 44140 ;; Defined at:
 44141 ;;		line 165 in file "mcc_generated_files/tmr4.c"
 44142 ;; Parameters:    Size  Location     Type
 44143 ;;		None
 44144 ;; Auto vars:     Size  Location     Type
 44145 ;;		None
 44146 ;; Return value:  Size  Location     Type
 44147 ;;                  1    wreg      void 
 44148 ;; Registers used:
 44149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 44150 ;; Tracked objects:
 44151 ;;		On entry : 0/0
 44152 ;;		On exit  : 0/0
 44153 ;;		Unchanged: 0/0
 44154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44159 ;;Total ram usage:        0 bytes
 44160 ;; Hardware stack levels used:    1
 44161 ;; Hardware stack levels required when called:    4
 44162 ;; This function calls:
 44163 ;;		_TMR4_CallBack
 44164 ;; This function is called by:
 44165 ;;		_INTERRUPT_InterruptManagerHigh
 44166 ;; This function uses a non-reentrant model
 44167 ;;
 44168                           
 44169                           	psect	text140
 44170  01BB92                     __ptext140:
 44171                           	opt stack 0
 44172  01BB92                     _TMR4_ISR:
 44173                           	opt stack 6
 44174                           
 44175                           ;tmr4.c: 167: static volatile unsigned int CountCallBack = 0;
 44176                           ;tmr4.c: 170: PIR5bits.TMR4IF = 0;
 44177                           
 44178                           ;incstack = 0
 44179  01BB92  010E               	movlb	14	; () banked
 44180  01BB94  9738               	bcf	56,3,b	;volatile
 44181                           
 44182                           ; BSR set to: 14
 44183                           ;tmr4.c: 173: if (++CountCallBack >= 8)
 44184  01BB96  0101               	movlb	1	; () banked
 44185  01BB98  4B93               	infsnz	TMR4_ISR@CountCallBack& (0+255),f,b	;volatile
 44186  01BB9A  2B94               	incf	(TMR4_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 44187  01BB9C  5194               	movf	(TMR4_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 44188  01BB9E  E104               	bnz	i2u3676_40
 44189  01BBA0  0E08               	movlw	8
 44190  01BBA2  5D93               	subwf	TMR4_ISR@CountCallBack& (0+255),w,b	;volatile
 44191  01BBA4  A0D8               	btfss	status,0,c
 44192  01BBA6  0012               	return	
 44193  01BBA8                     i2u3676_40:
 44194                           
 44195                           ; BSR set to: 1
 44196                           ;tmr4.c: 174: {
 44197                           ;tmr4.c: 176: TMR4_CallBack();
 44198  01BBA8  EC13  F0DE         	call	_TMR4_CallBack	;wreg free
 44199                           
 44200                           ;tmr4.c: 179: CountCallBack = 0;
 44201  01BBAC  0E00               	movlw	0
 44202  01BBAE  0101               	movlb	1	; () banked
 44203  01BBB0  6F94               	movwf	(TMR4_ISR@CountCallBack+1)& (0+255),b	;volatile
 44204  01BBB2  0E00               	movlw	0
 44205  01BBB4  6F93               	movwf	TMR4_ISR@CountCallBack& (0+255),b	;volatile
 44206  01BBB6  0012               	return	
 44207  01BBB8                     __end_of_TMR4_ISR:
 44208                           	opt stack 0
 44209                           tosu	equ	0xFFF
 44210                           tosh	equ	0xFFE
 44211                           tosl	equ	0xFFD
 44212                           pclatu	equ	0xFFB
 44213                           pclath	equ	0xFFA
 44214                           tblptru	equ	0xFF8
 44215                           tblptrh	equ	0xFF7
 44216                           tblptrl	equ	0xFF6
 44217                           tablat	equ	0xFF5
 44218                           prodh	equ	0xFF4
 44219                           prodl	equ	0xFF3
 44220                           intcon	equ	0xFF2
 44221                           indf0	equ	0xFEF
 44222                           postinc0	equ	0xFEE
 44223                           fsr0h	equ	0xFEA
 44224                           fsr0l	equ	0xFE9
 44225                           wreg	equ	0xFE8
 44226                           indf1	equ	0xFE7
 44227                           postdec1	equ	0xFE5
 44228                           plusw1	equ	0xFE3
 44229                           fsr1h	equ	0xFE2
 44230                           fsr1l	equ	0xFE1
 44231                           bsr	equ	0xFE0
 44232                           indf2	equ	0xFDF
 44233                           postinc2	equ	0xFDE
 44234                           postdec2	equ	0xFDD
 44235                           plusw2	equ	0xFDB
 44236                           fsr2h	equ	0xFDA
 44237                           fsr2l	equ	0xFD9
 44238                           status	equ	0xFD8
 44239                           
 44240 ;; *************** function _TMR4_CallBack *****************
 44241 ;; Defined at:
 44242 ;;		line 183 in file "mcc_generated_files/tmr4.c"
 44243 ;; Parameters:    Size  Location     Type
 44244 ;;		None
 44245 ;; Auto vars:     Size  Location     Type
 44246 ;;		None
 44247 ;; Return value:  Size  Location     Type
 44248 ;;                  1    wreg      void 
 44249 ;; Registers used:
 44250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
 44251 ;; Tracked objects:
 44252 ;;		On entry : 0/0
 44253 ;;		On exit  : 0/0
 44254 ;;		Unchanged: 0/0
 44255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44260 ;;Total ram usage:        0 bytes
 44261 ;; Hardware stack levels used:    1
 44262 ;; Hardware stack levels required when called:    3
 44263 ;; This function calls:
 44264 ;;		Absolute function
 44265 ;;		_TMR4_DefaultInterruptHandler
 44266 ;;		_writeEnergyToEEPROMCallback
 44267 ;; This function is called by:
 44268 ;;		_TMR4_ISR
 44269 ;; This function uses a non-reentrant model
 44270 ;;
 44271                           
 44272                           	psect	text141
 44273  01BC26                     __ptext141:
 44274                           	opt stack 0
 44275  01BC26                     _TMR4_CallBack:
 44276                           	opt stack 6
 44277                           
 44278                           ;tmr4.c: 187: if(TMR4_InterruptHandler)
 44279                           
 44280                           ; BSR set to: 1
 44281                           ;incstack = 0
 44282  01BC26  0102               	movlb	2	; () banked
 44283  01BC28  51C8               	movf	_TMR4_InterruptHandler& (0+255),w,b
 44284  01BC2A  11C9               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 44285  01BC2C  11CA               	iorwf	(_TMR4_InterruptHandler+2)& (0+255),w,b
 44286  01BC2E  B4D8               	btfsc	status,2,c
 44287  01BC30  0012               	return	
 44288                           
 44289                           ; BSR set to: 2
 44290                           ;tmr4.c: 188: {
 44291                           ;tmr4.c: 189: TMR4_InterruptHandler();
 44292  01BC32  D801               	call	i2u3595_48
 44293  01BC34  0012               	return	
 44294  01BC36                     i2u3595_48:
 44295  01BC36  0005               	push	
 44296  01BC38  6EFA               	movwf	pclath,c
 44297  01BC3A  51C8               	movf	_TMR4_InterruptHandler& (0+255),w,b
 44298  01BC3C  6EFD               	movwf	tosl,c
 44299  01BC3E  51C9               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 44300  01BC40  6EFE               	movwf	tosh,c
 44301  01BC42  51CA               	movf	(_TMR4_InterruptHandler+2)& (0+255),w,b
 44302  01BC44  6EFF               	movwf	tosu,c
 44303  01BC46  50FA               	movf	pclath,w,c
 44304  01BC48  0012               	return		;indir
 44305  01BC4A                     __end_of_TMR4_CallBack:
 44306                           	opt stack 0
 44307                           tosu	equ	0xFFF
 44308                           tosh	equ	0xFFE
 44309                           tosl	equ	0xFFD
 44310                           pclatu	equ	0xFFB
 44311                           pclath	equ	0xFFA
 44312                           tblptru	equ	0xFF8
 44313                           tblptrh	equ	0xFF7
 44314                           tblptrl	equ	0xFF6
 44315                           tablat	equ	0xFF5
 44316                           prodh	equ	0xFF4
 44317                           prodl	equ	0xFF3
 44318                           intcon	equ	0xFF2
 44319                           indf0	equ	0xFEF
 44320                           postinc0	equ	0xFEE
 44321                           fsr0h	equ	0xFEA
 44322                           fsr0l	equ	0xFE9
 44323                           wreg	equ	0xFE8
 44324                           indf1	equ	0xFE7
 44325                           postdec1	equ	0xFE5
 44326                           plusw1	equ	0xFE3
 44327                           fsr1h	equ	0xFE2
 44328                           fsr1l	equ	0xFE1
 44329                           bsr	equ	0xFE0
 44330                           indf2	equ	0xFDF
 44331                           postinc2	equ	0xFDE
 44332                           postdec2	equ	0xFDD
 44333                           plusw2	equ	0xFDB
 44334                           fsr2h	equ	0xFDA
 44335                           fsr2l	equ	0xFD9
 44336                           status	equ	0xFD8
 44337                           
 44338 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 44339 ;; Defined at:
 44340 ;;		line 197 in file "mcc_generated_files/tmr4.c"
 44341 ;; Parameters:    Size  Location     Type
 44342 ;;		None
 44343 ;; Auto vars:     Size  Location     Type
 44344 ;;		None
 44345 ;; Return value:  Size  Location     Type
 44346 ;;                  1    wreg      void 
 44347 ;; Registers used:
 44348 ;;		None
 44349 ;; Tracked objects:
 44350 ;;		On entry : 0/0
 44351 ;;		On exit  : 0/0
 44352 ;;		Unchanged: 0/0
 44353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44358 ;;Total ram usage:        0 bytes
 44359 ;; Hardware stack levels used:    1
 44360 ;; This function calls:
 44361 ;;		Nothing
 44362 ;; This function is called by:
 44363 ;;		_TMR4_Initialize
 44364 ;;		_TMR4_CallBack
 44365 ;; This function uses a non-reentrant model
 44366 ;;
 44367                           
 44368                           	psect	text142
 44369  01C032                     __ptext142:
 44370                           	opt stack 0
 44371  01C032                     _TMR4_DefaultInterruptHandler:
 44372                           	opt stack 8
 44373                           
 44374                           ;incstack = 0
 44375  01C032  0012               	return		;funcret
 44376  01C034                     __end_of_TMR4_DefaultInterruptHandler:
 44377                           	opt stack 0
 44378                           tosu	equ	0xFFF
 44379                           tosh	equ	0xFFE
 44380                           tosl	equ	0xFFD
 44381                           pclatu	equ	0xFFB
 44382                           pclath	equ	0xFFA
 44383                           tblptru	equ	0xFF8
 44384                           tblptrh	equ	0xFF7
 44385                           tblptrl	equ	0xFF6
 44386                           tablat	equ	0xFF5
 44387                           prodh	equ	0xFF4
 44388                           prodl	equ	0xFF3
 44389                           intcon	equ	0xFF2
 44390                           indf0	equ	0xFEF
 44391                           postinc0	equ	0xFEE
 44392                           fsr0h	equ	0xFEA
 44393                           fsr0l	equ	0xFE9
 44394                           wreg	equ	0xFE8
 44395                           indf1	equ	0xFE7
 44396                           postdec1	equ	0xFE5
 44397                           plusw1	equ	0xFE3
 44398                           fsr1h	equ	0xFE2
 44399                           fsr1l	equ	0xFE1
 44400                           bsr	equ	0xFE0
 44401                           indf2	equ	0xFDF
 44402                           postinc2	equ	0xFDE
 44403                           postdec2	equ	0xFDD
 44404                           plusw2	equ	0xFDB
 44405                           fsr2h	equ	0xFDA
 44406                           fsr2l	equ	0xFD9
 44407                           status	equ	0xFD8
 44408                           
 44409 ;; *************** function _writeEnergyToEEPROMCallback *****************
 44410 ;; Defined at:
 44411 ;;		line 458 in file "main.c"
 44412 ;; Parameters:    Size  Location     Type
 44413 ;;		None
 44414 ;; Auto vars:     Size  Location     Type
 44415 ;;  current_valu    4   63[COMRAM] void 
 44416 ;; Return value:  Size  Location     Type
 44417 ;;                  1    wreg      void 
 44418 ;; Registers used:
 44419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44420 ;; Tracked objects:
 44421 ;;		On entry : 0/0
 44422 ;;		On exit  : 0/0
 44423 ;;		Unchanged: 0/0
 44424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44426 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44428 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44429 ;;Total ram usage:        4 bytes
 44430 ;; Hardware stack levels used:    1
 44431 ;; Hardware stack levels required when called:    2
 44432 ;; This function calls:
 44433 ;;		i2___flge
 44434 ;;		i2_readDoubleFromEEPROM
 44435 ;;		i2_writeDoubleToEEPROM
 44436 ;; This function is called by:
 44437 ;;		_main
 44438 ;;		_TMR4_CallBack
 44439 ;; This function uses a non-reentrant model
 44440 ;;
 44441                           
 44442                           	psect	text143
 44443  01A456                     __ptext143:
 44444                           	opt stack 0
 44445  01A456                     _writeEnergyToEEPROMCallback:
 44446                           	opt stack 6
 44447                           
 44448                           ;main.c: 460: double current_value = readDoubleFromEEPROM(Total_Energy_address);
 44449                           
 44450                           ;incstack = 0
 44451  01A456  0E99               	movlw	low _Total_Energy_address
 44452  01A458  6EF6               	movwf	tblptrl,c
 44453  01A45A                     	if	1	;There is more than 1 active tblptr byte
 44454  01A45A  0ECE               	movlw	high _Total_Energy_address
 44455  01A45C  6EF7               	movwf	tblptrh,c
 44456  01A45E                     	endif
 44457  01A45E                     	if	1	;There are 3 active tblptr bytes
 44458  01A45E  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 44459  01A460  6EF8               	movwf	tblptru,c
 44460  01A462                     	endif
 44461  01A462  0009               	tblrd		*+
 44462  01A464  CFF5 F003          	movff	tablat,i2readDoubleFromEEPROM@starting_address
 44463  01A468  000A               	tblrd		*-
 44464  01A46A  CFF5 F004          	movff	tablat,i2readDoubleFromEEPROM@starting_address+1
 44465  01A46E  EC07  F0D8         	call	i2_readDoubleFromEEPROM	;wreg free
 44466  01A472  C003  F040         	movff	?i2_readDoubleFromEEPROM,writeEnergyToEEPROMCallback@current_value
 44467  01A476  C004  F041         	movff	?i2_readDoubleFromEEPROM+1,writeEnergyToEEPROMCallback@current_value+1
 44468  01A47A  C005  F042         	movff	?i2_readDoubleFromEEPROM+2,writeEnergyToEEPROMCallback@current_value+2
 44469  01A47E  C006  F043         	movff	?i2_readDoubleFromEEPROM+3,writeEnergyToEEPROMCallback@current_value+3
 44470                           
 44471                           ;main.c: 462: if (Total_Energy > current_value) {
 44472  01A482  C040  F034         	movff	writeEnergyToEEPROMCallback@current_value,i2___flge@ff1
 44473  01A486  C041  F035         	movff	writeEnergyToEEPROMCallback@current_value+1,i2___flge@ff1+1
 44474  01A48A  C042  F036         	movff	writeEnergyToEEPROMCallback@current_value+2,i2___flge@ff1+2
 44475  01A48E  C043  F037         	movff	writeEnergyToEEPROMCallback@current_value+3,i2___flge@ff1+3
 44476  01A492  C0F0  F038         	movff	_Total_Energy,i2___flge@ff2	;volatile
 44477  01A496  C0F1  F039         	movff	_Total_Energy+1,i2___flge@ff2+1	;volatile
 44478  01A49A  C0F2  F03A         	movff	_Total_Energy+2,i2___flge@ff2+2	;volatile
 44479  01A49E  C0F3  F03B         	movff	_Total_Energy+3,i2___flge@ff2+3	;volatile
 44480  01A4A2  EC5F  F0C9         	call	i2___flge	;wreg free
 44481  01A4A6  B0D8               	btfsc	status,0,c
 44482  01A4A8  0012               	return	
 44483                           
 44484                           ;main.c: 464: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 44485  01A4AA  C0F0  F005         	movff	_Total_Energy,i2writeDoubleToEEPROM@input_double	;volatile
 44486  01A4AE  C0F1  F006         	movff	_Total_Energy+1,i2writeDoubleToEEPROM@input_double+1	;volatile
 44487  01A4B2  C0F2  F007         	movff	_Total_Energy+2,i2writeDoubleToEEPROM@input_double+2	;volatile
 44488  01A4B6  C0F3  F008         	movff	_Total_Energy+3,i2writeDoubleToEEPROM@input_double+3	;volatile
 44489  01A4BA  0E99               	movlw	low _Total_Energy_address
 44490  01A4BC  6EF6               	movwf	tblptrl,c
 44491  01A4BE                     	if	1	;There is more than 1 active tblptr byte
 44492  01A4BE  0ECE               	movlw	high _Total_Energy_address
 44493  01A4C0  6EF7               	movwf	tblptrh,c
 44494  01A4C2                     	endif
 44495  01A4C2                     	if	1	;There are 3 active tblptr bytes
 44496  01A4C2  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 44497  01A4C4  6EF8               	movwf	tblptru,c
 44498  01A4C6                     	endif
 44499  01A4C6  0009               	tblrd		*+
 44500  01A4C8  CFF5 F009          	movff	tablat,i2writeDoubleToEEPROM@starting_address
 44501  01A4CC  000A               	tblrd		*-
 44502  01A4CE  CFF5 F00A          	movff	tablat,i2writeDoubleToEEPROM@starting_address+1
 44503  01A4D2  EC54  F0D8         	call	i2_writeDoubleToEEPROM	;wreg free
 44504  01A4D6  0012               	return	
 44505  01A4D8                     __end_of_writeEnergyToEEPROMCallback:
 44506                           	opt stack 0
 44507                           tosu	equ	0xFFF
 44508                           tosh	equ	0xFFE
 44509                           tosl	equ	0xFFD
 44510                           pclatu	equ	0xFFB
 44511                           pclath	equ	0xFFA
 44512                           tblptru	equ	0xFF8
 44513                           tblptrh	equ	0xFF7
 44514                           tblptrl	equ	0xFF6
 44515                           tablat	equ	0xFF5
 44516                           prodh	equ	0xFF4
 44517                           prodl	equ	0xFF3
 44518                           intcon	equ	0xFF2
 44519                           indf0	equ	0xFEF
 44520                           postinc0	equ	0xFEE
 44521                           fsr0h	equ	0xFEA
 44522                           fsr0l	equ	0xFE9
 44523                           wreg	equ	0xFE8
 44524                           indf1	equ	0xFE7
 44525                           postdec1	equ	0xFE5
 44526                           plusw1	equ	0xFE3
 44527                           fsr1h	equ	0xFE2
 44528                           fsr1l	equ	0xFE1
 44529                           bsr	equ	0xFE0
 44530                           indf2	equ	0xFDF
 44531                           postinc2	equ	0xFDE
 44532                           postdec2	equ	0xFDD
 44533                           plusw2	equ	0xFDB
 44534                           fsr2h	equ	0xFDA
 44535                           fsr2l	equ	0xFD9
 44536                           status	equ	0xFD8
 44537                           
 44538 ;; *************** function i2_readDoubleFromEEPROM *****************
 44539 ;; Defined at:
 44540 ;;		line 22 in file "double_to_EEPROM.c"
 44541 ;; Parameters:    Size  Location     Type
 44542 ;;  starting_add    2    2[COMRAM] unsigned int 
 44543 ;; Auto vars:     Size  Location     Type
 44544 ;;  readDoubleFr    4    6[COMRAM] struct .
 44545 ;;  readDoubleFr    2   10[COMRAM] int 
 44546 ;; Return value:  Size  Location     Type
 44547 ;;                  4    2[COMRAM] int 
 44548 ;; Registers used:
 44549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44550 ;; Tracked objects:
 44551 ;;		On entry : 0/0
 44552 ;;		On exit  : 0/0
 44553 ;;		Unchanged: 0/0
 44554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44555 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44556 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44558 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44559 ;;Total ram usage:       10 bytes
 44560 ;; Hardware stack levels used:    1
 44561 ;; Hardware stack levels required when called:    1
 44562 ;; This function calls:
 44563 ;;		i2_DATAEE_ReadByte
 44564 ;; This function is called by:
 44565 ;;		_writeEnergyToEEPROMCallback
 44566 ;; This function uses a non-reentrant model
 44567 ;;
 44568                           
 44569                           	psect	text144
 44570  01B00E                     __ptext144:
 44571                           	opt stack 0
 44572  01B00E                     i2_readDoubleFromEEPROM:
 44573                           	opt stack 6
 44574                           
 44575                           ;double_to_EEPROM.c: 25: double_bytes_t output_data;
 44576                           ;double_to_EEPROM.c: 28: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 44577                           
 44578                           ;incstack = 0
 44579  01B00E  0E00               	movlw	0
 44580  01B010  6E0C               	movwf	i2readDoubleFromEEPROM@byte_index+1,c
 44581  01B012  0E00               	movlw	0
 44582  01B014  6E0B               	movwf	i2readDoubleFromEEPROM@byte_index,c
 44583  01B016  500C               	movf	i2readDoubleFromEEPROM@byte_index+1,w,c
 44584  01B018  E118               	bnz	i2l1859
 44585  01B01A  D013               	goto	L17
 44586  01B01C                     
 44587                           ;double_to_EEPROM.c: 30: output_data.byte_array_t[byte_index] = DATAEE_ReadByte(starting
      +                          _address + byte_index);
 44588  01B01C  0E07               	movlw	low i2readDoubleFromEEPROM@output_data
 44589  01B01E  240B               	addwf	i2readDoubleFromEEPROM@byte_index,w,c
 44590  01B020  6ED9               	movwf	fsr2l,c
 44591  01B022  0E00               	movlw	high i2readDoubleFromEEPROM@output_data
 44592  01B024  200C               	addwfc	i2readDoubleFromEEPROM@byte_index+1,w,c
 44593  01B026  6EDA               	movwf	fsr2h,c
 44594  01B028  5003               	movf	i2readDoubleFromEEPROM@starting_address,w,c
 44595  01B02A  240B               	addwf	i2readDoubleFromEEPROM@byte_index,w,c
 44596  01B02C  6E01               	movwf	i2DATAEE_ReadByte@bAdd,c
 44597  01B02E  5004               	movf	i2readDoubleFromEEPROM@starting_address+1,w,c
 44598  01B030  200C               	addwfc	i2readDoubleFromEEPROM@byte_index+1,w,c
 44599  01B032  6E02               	movwf	i2DATAEE_ReadByte@bAdd+1,c
 44600  01B034  EC10  F0DF         	call	i2_DATAEE_ReadByte	;wreg free
 44601  01B038  6EDF               	movwf	indf2,c
 44602  01B03A  4A0B               	infsnz	i2readDoubleFromEEPROM@byte_index,f,c
 44603  01B03C  2A0C               	incf	i2readDoubleFromEEPROM@byte_index+1,f,c
 44604  01B03E  500C               	movf	i2readDoubleFromEEPROM@byte_index+1,w,c
 44605  01B040  E104               	bnz	i2u1387_40
 44606  01B042                     L17:
 44607  01B042  0E04               	movlw	4
 44608  01B044  5C0B               	subwf	i2readDoubleFromEEPROM@byte_index,w,c
 44609  01B046  A0D8               	btfss	status,0,c
 44610  01B048  D7E9               	goto	i2l1858
 44611  01B04A                     i2u1387_40:
 44612  01B04A                     i2l1859:
 44613                           
 44614                           ;double_to_EEPROM.c: 32: }
 44615                           ;double_to_EEPROM.c: 35: return output_data.double_t;
 44616  01B04A  C007  F003         	movff	i2readDoubleFromEEPROM@output_data,?i2_readDoubleFromEEPROM
 44617  01B04E  C008  F004         	movff	i2readDoubleFromEEPROM@output_data+1,?i2_readDoubleFromEEPROM+1
 44618  01B052  C009  F005         	movff	i2readDoubleFromEEPROM@output_data+2,?i2_readDoubleFromEEPROM+2
 44619  01B056  C00A  F006         	movff	i2readDoubleFromEEPROM@output_data+3,?i2_readDoubleFromEEPROM+3
 44620  01B05A  0012               	return		;funcret
 44621  01B05C                     __end_ofi2_readDoubleFromEEPROM:
 44622                           	opt stack 0
 44623                           tosu	equ	0xFFF
 44624                           tosh	equ	0xFFE
 44625                           tosl	equ	0xFFD
 44626                           pclatu	equ	0xFFB
 44627                           pclath	equ	0xFFA
 44628                           tblptru	equ	0xFF8
 44629                           tblptrh	equ	0xFF7
 44630                           tblptrl	equ	0xFF6
 44631                           tablat	equ	0xFF5
 44632                           prodh	equ	0xFF4
 44633                           prodl	equ	0xFF3
 44634                           intcon	equ	0xFF2
 44635                           indf0	equ	0xFEF
 44636                           postinc0	equ	0xFEE
 44637                           fsr0h	equ	0xFEA
 44638                           fsr0l	equ	0xFE9
 44639                           wreg	equ	0xFE8
 44640                           indf1	equ	0xFE7
 44641                           postdec1	equ	0xFE5
 44642                           plusw1	equ	0xFE3
 44643                           fsr1h	equ	0xFE2
 44644                           fsr1l	equ	0xFE1
 44645                           bsr	equ	0xFE0
 44646                           indf2	equ	0xFDF
 44647                           postinc2	equ	0xFDE
 44648                           postdec2	equ	0xFDD
 44649                           plusw2	equ	0xFDB
 44650                           fsr2h	equ	0xFDA
 44651                           fsr2l	equ	0xFD9
 44652                           status	equ	0xFD8
 44653                           
 44654 ;; *************** function i2_DATAEE_ReadByte *****************
 44655 ;; Defined at:
 44656 ;;		line 190 in file "mcc_generated_files/memory.c"
 44657 ;; Parameters:    Size  Location     Type
 44658 ;;  bAdd            2    0[COMRAM] unsigned int 
 44659 ;; Auto vars:     Size  Location     Type
 44660 ;;		None
 44661 ;; Return value:  Size  Location     Type
 44662 ;;                  1    wreg      unsigned char 
 44663 ;; Registers used:
 44664 ;;		wreg, status,2, status,0
 44665 ;; Tracked objects:
 44666 ;;		On entry : 0/0
 44667 ;;		On exit  : 0/0
 44668 ;;		Unchanged: 0/0
 44669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44674 ;;Total ram usage:        2 bytes
 44675 ;; Hardware stack levels used:    1
 44676 ;; This function calls:
 44677 ;;		Nothing
 44678 ;; This function is called by:
 44679 ;;		i2_readDoubleFromEEPROM
 44680 ;; This function uses a non-reentrant model
 44681 ;;
 44682                           
 44683                           	psect	text145
 44684  01BE20                     __ptext145:
 44685                           	opt stack 0
 44686  01BE20                     i2_DATAEE_ReadByte:
 44687                           	opt stack 6
 44688                           
 44689                           ;memory.c: 192: NVMADRH = ((bAdd >> 8) & 0x03);
 44690                           
 44691                           ;incstack = 0
 44692  01BE20  5002               	movf	i2DATAEE_ReadByte@bAdd+1,w,c
 44693  01BE22  0B03               	andlw	3
 44694  01BE24  6E75               	movwf	3957,c	;volatile
 44695                           
 44696                           ;memory.c: 193: NVMADRL = (bAdd & 0xFF);
 44697  01BE26  C001  FF74         	movff	i2DATAEE_ReadByte@bAdd,3956	;volatile
 44698                           
 44699                           ;memory.c: 194: NVMCON1bits.NVMREG = 0;
 44700  01BE2A  0E3F               	movlw	-193
 44701  01BE2C  1677               	andwf	3959,f,c	;volsfr
 44702                           
 44703                           ;memory.c: 195: NVMCON1bits.RD = 1;
 44704  01BE2E  8077               	bsf	3959,0,c	;volsfr
 44705                           
 44706                           ;memory.c: 196: __nop();
 44707  01BE30  F000               	nop	
 44708                           
 44709                           ;memory.c: 197: __nop();
 44710  01BE32  F000               	nop	
 44711                           
 44712                           ;memory.c: 199: return (NVMDAT);
 44713  01BE34  5076               	movf	3958,w,c	;volatile
 44714  01BE36  0012               	return	
 44715  01BE38                     __end_ofi2_DATAEE_ReadByte:
 44716                           	opt stack 0
 44717                           tosu	equ	0xFFF
 44718                           tosh	equ	0xFFE
 44719                           tosl	equ	0xFFD
 44720                           pclatu	equ	0xFFB
 44721                           pclath	equ	0xFFA
 44722                           tblptru	equ	0xFF8
 44723                           tblptrh	equ	0xFF7
 44724                           tblptrl	equ	0xFF6
 44725                           tablat	equ	0xFF5
 44726                           prodh	equ	0xFF4
 44727                           prodl	equ	0xFF3
 44728                           intcon	equ	0xFF2
 44729                           indf0	equ	0xFEF
 44730                           postinc0	equ	0xFEE
 44731                           fsr0h	equ	0xFEA
 44732                           fsr0l	equ	0xFE9
 44733                           wreg	equ	0xFE8
 44734                           indf1	equ	0xFE7
 44735                           postdec1	equ	0xFE5
 44736                           plusw1	equ	0xFE3
 44737                           fsr1h	equ	0xFE2
 44738                           fsr1l	equ	0xFE1
 44739                           bsr	equ	0xFE0
 44740                           indf2	equ	0xFDF
 44741                           postinc2	equ	0xFDE
 44742                           postdec2	equ	0xFDD
 44743                           plusw2	equ	0xFDB
 44744                           fsr2h	equ	0xFDA
 44745                           fsr2l	equ	0xFD9
 44746                           status	equ	0xFD8
 44747                           
 44748 ;; *************** function _INT0_ISR *****************
 44749 ;; Defined at:
 44750 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 44751 ;; Parameters:    Size  Location     Type
 44752 ;;		None
 44753 ;; Auto vars:     Size  Location     Type
 44754 ;;		None
 44755 ;; Return value:  Size  Location     Type
 44756 ;;                  1    wreg      void 
 44757 ;; Registers used:
 44758 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 44759 ;; Tracked objects:
 44760 ;;		On entry : 0/0
 44761 ;;		On exit  : 0/0
 44762 ;;		Unchanged: 0/0
 44763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44768 ;;Total ram usage:        0 bytes
 44769 ;; Hardware stack levels used:    1
 44770 ;; Hardware stack levels required when called:    3
 44771 ;; This function calls:
 44772 ;;		_INT0_CallBack
 44773 ;; This function is called by:
 44774 ;;		_INTERRUPT_InterruptManagerHigh
 44775 ;; This function uses a non-reentrant model
 44776 ;;
 44777                           
 44778                           	psect	text146
 44779  01BFDC                     __ptext146:
 44780                           	opt stack 0
 44781  01BFDC                     _INT0_ISR:
 44782                           	opt stack 7
 44783                           
 44784                           ;ext_int.c: 34: (PIR0bits.INT0IF = 0);
 44785                           
 44786                           ;incstack = 0
 44787  01BFDC  010E               	movlb	14	; () banked
 44788  01BFDE  9133               	bcf	51,0,b	;volatile
 44789                           
 44790                           ; BSR set to: 14
 44791                           ;ext_int.c: 37: INT0_CallBack();
 44792  01BFE0  EC25  F0DE         	call	_INT0_CallBack	;wreg free
 44793  01BFE4  0012               	return		;funcret
 44794  01BFE6                     __end_of_INT0_ISR:
 44795                           	opt stack 0
 44796                           tosu	equ	0xFFF
 44797                           tosh	equ	0xFFE
 44798                           tosl	equ	0xFFD
 44799                           pclatu	equ	0xFFB
 44800                           pclath	equ	0xFFA
 44801                           tblptru	equ	0xFF8
 44802                           tblptrh	equ	0xFF7
 44803                           tblptrl	equ	0xFF6
 44804                           tablat	equ	0xFF5
 44805                           prodh	equ	0xFF4
 44806                           prodl	equ	0xFF3
 44807                           intcon	equ	0xFF2
 44808                           indf0	equ	0xFEF
 44809                           postinc0	equ	0xFEE
 44810                           fsr0h	equ	0xFEA
 44811                           fsr0l	equ	0xFE9
 44812                           wreg	equ	0xFE8
 44813                           indf1	equ	0xFE7
 44814                           postdec1	equ	0xFE5
 44815                           plusw1	equ	0xFE3
 44816                           fsr1h	equ	0xFE2
 44817                           fsr1l	equ	0xFE1
 44818                           bsr	equ	0xFE0
 44819                           indf2	equ	0xFDF
 44820                           postinc2	equ	0xFDE
 44821                           postdec2	equ	0xFDD
 44822                           plusw2	equ	0xFDB
 44823                           fsr2h	equ	0xFDA
 44824                           fsr2l	equ	0xFD9
 44825                           status	equ	0xFD8
 44826                           
 44827 ;; *************** function _INT0_CallBack *****************
 44828 ;; Defined at:
 44829 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 44830 ;; Parameters:    Size  Location     Type
 44831 ;;		None
 44832 ;; Auto vars:     Size  Location     Type
 44833 ;;		None
 44834 ;; Return value:  Size  Location     Type
 44835 ;;                  1    wreg      void 
 44836 ;; Registers used:
 44837 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 44838 ;; Tracked objects:
 44839 ;;		On entry : 0/0
 44840 ;;		On exit  : 0/0
 44841 ;;		Unchanged: 0/0
 44842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44847 ;;Total ram usage:        0 bytes
 44848 ;; Hardware stack levels used:    1
 44849 ;; Hardware stack levels required when called:    2
 44850 ;; This function calls:
 44851 ;;		Absolute function
 44852 ;;		_INT0_DefaultInterruptHandler
 44853 ;;		_dimmingOffTimeCallback
 44854 ;; This function is called by:
 44855 ;;		_INT0_ISR
 44856 ;; This function uses a non-reentrant model
 44857 ;;
 44858                           
 44859                           	psect	text147
 44860  01BC4A                     __ptext147:
 44861                           	opt stack 0
 44862  01BC4A                     _INT0_CallBack:
 44863                           	opt stack 7
 44864                           
 44865                           ;ext_int.c: 44: if(INT0_InterruptHandler)
 44866                           
 44867                           ;incstack = 0
 44868  01BC4A  0102               	movlb	2	; () banked
 44869  01BC4C  51CB               	movf	_INT0_InterruptHandler& (0+255),w,b
 44870  01BC4E  11CC               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 44871  01BC50  11CD               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 44872  01BC52  B4D8               	btfsc	status,2,c
 44873  01BC54  0012               	return	
 44874                           
 44875                           ; BSR set to: 2
 44876                           ;ext_int.c: 45: {
 44877                           ;ext_int.c: 46: INT0_InterruptHandler();
 44878  01BC56  D801               	call	i2u3593_48
 44879  01BC58  0012               	return	
 44880  01BC5A                     i2u3593_48:
 44881  01BC5A  0005               	push	
 44882  01BC5C  6EFA               	movwf	pclath,c
 44883  01BC5E  51CB               	movf	_INT0_InterruptHandler& (0+255),w,b
 44884  01BC60  6EFD               	movwf	tosl,c
 44885  01BC62  51CC               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 44886  01BC64  6EFE               	movwf	tosh,c
 44887  01BC66  51CD               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 44888  01BC68  6EFF               	movwf	tosu,c
 44889  01BC6A  50FA               	movf	pclath,w,c
 44890  01BC6C  0012               	return		;indir
 44891  01BC6E                     __end_of_INT0_CallBack:
 44892                           	opt stack 0
 44893                           tosu	equ	0xFFF
 44894                           tosh	equ	0xFFE
 44895                           tosl	equ	0xFFD
 44896                           pclatu	equ	0xFFB
 44897                           pclath	equ	0xFFA
 44898                           tblptru	equ	0xFF8
 44899                           tblptrh	equ	0xFF7
 44900                           tblptrl	equ	0xFF6
 44901                           tablat	equ	0xFF5
 44902                           prodh	equ	0xFF4
 44903                           prodl	equ	0xFF3
 44904                           intcon	equ	0xFF2
 44905                           indf0	equ	0xFEF
 44906                           postinc0	equ	0xFEE
 44907                           fsr0h	equ	0xFEA
 44908                           fsr0l	equ	0xFE9
 44909                           wreg	equ	0xFE8
 44910                           indf1	equ	0xFE7
 44911                           postdec1	equ	0xFE5
 44912                           plusw1	equ	0xFE3
 44913                           fsr1h	equ	0xFE2
 44914                           fsr1l	equ	0xFE1
 44915                           bsr	equ	0xFE0
 44916                           indf2	equ	0xFDF
 44917                           postinc2	equ	0xFDE
 44918                           postdec2	equ	0xFDD
 44919                           plusw2	equ	0xFDB
 44920                           fsr2h	equ	0xFDA
 44921                           fsr2l	equ	0xFD9
 44922                           status	equ	0xFD8
 44923                           
 44924 ;; *************** function _INT0_DefaultInterruptHandler *****************
 44925 ;; Defined at:
 44926 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 44927 ;; Parameters:    Size  Location     Type
 44928 ;;		None
 44929 ;; Auto vars:     Size  Location     Type
 44930 ;;		None
 44931 ;; Return value:  Size  Location     Type
 44932 ;;                  1    wreg      void 
 44933 ;; Registers used:
 44934 ;;		None
 44935 ;; Tracked objects:
 44936 ;;		On entry : 0/0
 44937 ;;		On exit  : 0/0
 44938 ;;		Unchanged: 0/0
 44939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 44940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44944 ;;Total ram usage:        0 bytes
 44945 ;; Hardware stack levels used:    1
 44946 ;; This function calls:
 44947 ;;		Nothing
 44948 ;; This function is called by:
 44949 ;;		_EXT_INT_Initialize
 44950 ;;		_INT0_CallBack
 44951 ;; This function uses a non-reentrant model
 44952 ;;
 44953                           
 44954                           	psect	text148
 44955  01C034                     __ptext148:
 44956                           	opt stack 0
 44957  01C034                     _INT0_DefaultInterruptHandler:
 44958                           	opt stack 8
 44959                           
 44960                           ;incstack = 0
 44961  01C034  0012               	return		;funcret
 44962  01C036                     __end_of_INT0_DefaultInterruptHandler:
 44963                           	opt stack 0
 44964                           tosu	equ	0xFFF
 44965                           tosh	equ	0xFFE
 44966                           tosl	equ	0xFFD
 44967                           pclatu	equ	0xFFB
 44968                           pclath	equ	0xFFA
 44969                           tblptru	equ	0xFF8
 44970                           tblptrh	equ	0xFF7
 44971                           tblptrl	equ	0xFF6
 44972                           tablat	equ	0xFF5
 44973                           prodh	equ	0xFF4
 44974                           prodl	equ	0xFF3
 44975                           intcon	equ	0xFF2
 44976                           indf0	equ	0xFEF
 44977                           postinc0	equ	0xFEE
 44978                           fsr0h	equ	0xFEA
 44979                           fsr0l	equ	0xFE9
 44980                           wreg	equ	0xFE8
 44981                           indf1	equ	0xFE7
 44982                           postdec1	equ	0xFE5
 44983                           plusw1	equ	0xFE3
 44984                           fsr1h	equ	0xFE2
 44985                           fsr1l	equ	0xFE1
 44986                           bsr	equ	0xFE0
 44987                           indf2	equ	0xFDF
 44988                           postinc2	equ	0xFDE
 44989                           postdec2	equ	0xFDD
 44990                           plusw2	equ	0xFDB
 44991                           fsr2h	equ	0xFDA
 44992                           fsr2l	equ	0xFD9
 44993                           status	equ	0xFD8
 44994                           
 44995 ;; *************** function _dimmingOffTimeCallback *****************
 44996 ;; Defined at:
 44997 ;;		line 426 in file "main.c"
 44998 ;; Parameters:    Size  Location     Type
 44999 ;;		None
 45000 ;; Auto vars:     Size  Location     Type
 45001 ;;		None
 45002 ;; Return value:  Size  Location     Type
 45003 ;;                  1    wreg      void 
 45004 ;; Registers used:
 45005 ;;		wreg, status,2, cstack
 45006 ;; Tracked objects:
 45007 ;;		On entry : 0/0
 45008 ;;		On exit  : 0/0
 45009 ;;		Unchanged: 0/0
 45010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45015 ;;Total ram usage:        0 bytes
 45016 ;; Hardware stack levels used:    1
 45017 ;; Hardware stack levels required when called:    1
 45018 ;; This function calls:
 45019 ;;		_TMR5_StartTimer
 45020 ;;		_TMR5_WriteTimer
 45021 ;; This function is called by:
 45022 ;;		_main
 45023 ;;		_INT0_CallBack
 45024 ;; This function uses a non-reentrant model
 45025 ;;
 45026                           
 45027                           	psect	text149
 45028  01BE38                     __ptext149:
 45029                           	opt stack 0
 45030  01BE38                     _dimmingOffTimeCallback:
 45031                           	opt stack 7
 45032                           
 45033                           ;main.c: 429: LATGbits.LATG1 = 0;
 45034                           
 45035                           ;incstack = 0
 45036  01BE38  927F               	bcf	3967,1,c	;volatile
 45037                           
 45038                           ;main.c: 432: TMR5_WriteTimer(dimming_period);
 45039  01BE3A  C2FC  F001         	movff	_dimming_period,TMR5_WriteTimer@timerVal	;volatile
 45040  01BE3E  C2FD  F002         	movff	_dimming_period+1,TMR5_WriteTimer@timerVal+1	;volatile
 45041  01BE42  ECC2  F0DE         	call	_TMR5_WriteTimer	;wreg free
 45042                           
 45043                           ;main.c: 433: TMR5_StartTimer();
 45044  01BE46  EC0F  F0E0         	call	_TMR5_StartTimer	;wreg free
 45045                           
 45046                           ;main.c: 436: PIE5bits.TMR5IE = 1;
 45047  01BE4A  010E               	movlb	14	; () banked
 45048  01BE4C  892E               	bsf	46,4,b	;volatile
 45049                           
 45050                           ; BSR set to: 14
 45051  01BE4E  0012               	return		;funcret
 45052  01BE50                     __end_of_dimmingOffTimeCallback:
 45053                           	opt stack 0
 45054                           tosu	equ	0xFFF
 45055                           tosh	equ	0xFFE
 45056                           tosl	equ	0xFFD
 45057                           pclatu	equ	0xFFB
 45058                           pclath	equ	0xFFA
 45059                           tblptru	equ	0xFF8
 45060                           tblptrh	equ	0xFF7
 45061                           tblptrl	equ	0xFF6
 45062                           tablat	equ	0xFF5
 45063                           prodh	equ	0xFF4
 45064                           prodl	equ	0xFF3
 45065                           intcon	equ	0xFF2
 45066                           indf0	equ	0xFEF
 45067                           postinc0	equ	0xFEE
 45068                           fsr0h	equ	0xFEA
 45069                           fsr0l	equ	0xFE9
 45070                           wreg	equ	0xFE8
 45071                           indf1	equ	0xFE7
 45072                           postdec1	equ	0xFE5
 45073                           plusw1	equ	0xFE3
 45074                           fsr1h	equ	0xFE2
 45075                           fsr1l	equ	0xFE1
 45076                           bsr	equ	0xFE0
 45077                           indf2	equ	0xFDF
 45078                           postinc2	equ	0xFDE
 45079                           postdec2	equ	0xFDD
 45080                           plusw2	equ	0xFDB
 45081                           fsr2h	equ	0xFDA
 45082                           fsr2l	equ	0xFD9
 45083                           status	equ	0xFD8
 45084                           
 45085 ;; *************** function _TMR5_WriteTimer *****************
 45086 ;; Defined at:
 45087 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 45088 ;; Parameters:    Size  Location     Type
 45089 ;;  timerVal        2    0[COMRAM] unsigned int 
 45090 ;; Auto vars:     Size  Location     Type
 45091 ;;		None
 45092 ;; Return value:  Size  Location     Type
 45093 ;;                  1    wreg      void 
 45094 ;; Registers used:
 45095 ;;		wreg, status,2
 45096 ;; Tracked objects:
 45097 ;;		On entry : 0/0
 45098 ;;		On exit  : 0/0
 45099 ;;		Unchanged: 0/0
 45100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45105 ;;Total ram usage:        2 bytes
 45106 ;; Hardware stack levels used:    1
 45107 ;; This function calls:
 45108 ;;		Nothing
 45109 ;; This function is called by:
 45110 ;;		_TMR5_ISR
 45111 ;;		_dimmingOffTimeCallback
 45112 ;;		_TMR5_Reload
 45113 ;; This function uses a non-reentrant model
 45114 ;;
 45115                           
 45116                           	psect	text150
 45117  01BD84                     __ptext150:
 45118                           	opt stack 0
 45119  01BD84                     _TMR5_WriteTimer:
 45120                           	opt stack 9
 45121                           
 45122                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 45123                           
 45124                           ; BSR set to: 14
 45125                           ;incstack = 0
 45126  01BD84  A4C3               	btfss	4035,2,c	;volatile
 45127  01BD86  D007               	goto	i2l768
 45128                           
 45129                           ;tmr5.c: 130: {
 45130                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 45131  01BD88  90C3               	bcf	4035,0,c	;volatile
 45132                           
 45133                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 45134  01BD8A  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 45135  01BD8C  6EC2               	movwf	4034,c	;volatile
 45136                           
 45137                           ;tmr5.c: 136: TMR5L = timerVal;
 45138  01BD8E  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 45139                           
 45140                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 45141  01BD92  80C3               	bsf	4035,0,c	;volatile
 45142                           
 45143                           ;tmr5.c: 140: }
 45144  01BD94  0012               	return	
 45145  01BD96                     i2l768:
 45146                           
 45147                           ;tmr5.c: 141: else
 45148                           ;tmr5.c: 142: {
 45149                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 45150  01BD96  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 45151  01BD98  6EC2               	movwf	4034,c	;volatile
 45152                           
 45153                           ;tmr5.c: 145: TMR5L = timerVal;
 45154  01BD9A  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 45155  01BD9E  0012               	return	
 45156  01BDA0                     __end_of_TMR5_WriteTimer:
 45157                           	opt stack 0
 45158                           tosu	equ	0xFFF
 45159                           tosh	equ	0xFFE
 45160                           tosl	equ	0xFFD
 45161                           pclatu	equ	0xFFB
 45162                           pclath	equ	0xFFA
 45163                           tblptru	equ	0xFF8
 45164                           tblptrh	equ	0xFF7
 45165                           tblptrl	equ	0xFF6
 45166                           tablat	equ	0xFF5
 45167                           prodh	equ	0xFF4
 45168                           prodl	equ	0xFF3
 45169                           intcon	equ	0xFF2
 45170                           indf0	equ	0xFEF
 45171                           postinc0	equ	0xFEE
 45172                           fsr0h	equ	0xFEA
 45173                           fsr0l	equ	0xFE9
 45174                           wreg	equ	0xFE8
 45175                           indf1	equ	0xFE7
 45176                           postdec1	equ	0xFE5
 45177                           plusw1	equ	0xFE3
 45178                           fsr1h	equ	0xFE2
 45179                           fsr1l	equ	0xFE1
 45180                           bsr	equ	0xFE0
 45181                           indf2	equ	0xFDF
 45182                           postinc2	equ	0xFDE
 45183                           postdec2	equ	0xFDD
 45184                           plusw2	equ	0xFDB
 45185                           fsr2h	equ	0xFDA
 45186                           fsr2l	equ	0xFD9
 45187                           status	equ	0xFD8
 45188                           
 45189 ;; *************** function _TMR5_StartTimer *****************
 45190 ;; Defined at:
 45191 ;;		line 99 in file "mcc_generated_files/tmr5.c"
 45192 ;; Parameters:    Size  Location     Type
 45193 ;;		None
 45194 ;; Auto vars:     Size  Location     Type
 45195 ;;		None
 45196 ;; Return value:  Size  Location     Type
 45197 ;;                  1    wreg      void 
 45198 ;; Registers used:
 45199 ;;		None
 45200 ;; Tracked objects:
 45201 ;;		On entry : 0/0
 45202 ;;		On exit  : 0/0
 45203 ;;		Unchanged: 0/0
 45204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45209 ;;Total ram usage:        0 bytes
 45210 ;; Hardware stack levels used:    1
 45211 ;; This function calls:
 45212 ;;		Nothing
 45213 ;; This function is called by:
 45214 ;;		_dimmingOffTimeCallback
 45215 ;; This function uses a non-reentrant model
 45216 ;;
 45217                           
 45218                           	psect	text151
 45219  01C01E                     __ptext151:
 45220                           	opt stack 0
 45221  01C01E                     _TMR5_StartTimer:
 45222                           	opt stack 7
 45223                           
 45224                           ;tmr5.c: 102: T5CONbits.TMR5ON = 1;
 45225                           
 45226                           ;incstack = 0
 45227  01C01E  80C3               	bsf	4035,0,c	;volatile
 45228  01C020  0012               	return		;funcret
 45229  01C022                     __end_of_TMR5_StartTimer:
 45230                           	opt stack 0
 45231                           tosu	equ	0xFFF
 45232                           tosh	equ	0xFFE
 45233                           tosl	equ	0xFFD
 45234                           pclatu	equ	0xFFB
 45235                           pclath	equ	0xFFA
 45236                           tblptru	equ	0xFF8
 45237                           tblptrh	equ	0xFF7
 45238                           tblptrl	equ	0xFF6
 45239                           tablat	equ	0xFF5
 45240                           prodh	equ	0xFF4
 45241                           prodl	equ	0xFF3
 45242                           intcon	equ	0xFF2
 45243                           indf0	equ	0xFEF
 45244                           postinc0	equ	0xFEE
 45245                           fsr0h	equ	0xFEA
 45246                           fsr0l	equ	0xFE9
 45247                           wreg	equ	0xFE8
 45248                           indf1	equ	0xFE7
 45249                           postdec1	equ	0xFE5
 45250                           plusw1	equ	0xFE3
 45251                           fsr1h	equ	0xFE2
 45252                           fsr1l	equ	0xFE1
 45253                           bsr	equ	0xFE0
 45254                           indf2	equ	0xFDF
 45255                           postinc2	equ	0xFDE
 45256                           postdec2	equ	0xFDD
 45257                           plusw2	equ	0xFDB
 45258                           fsr2h	equ	0xFDA
 45259                           fsr2l	equ	0xFD9
 45260                           status	equ	0xFD8
 45261                           
 45262 ;; *************** function _I2C1_ISR *****************
 45263 ;; Defined at:
 45264 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 45265 ;; Parameters:    Size  Location     Type
 45266 ;;		None
 45267 ;; Auto vars:     Size  Location     Type
 45268 ;;		None
 45269 ;; Return value:  Size  Location     Type
 45270 ;;                  1    wreg      void 
 45271 ;; Registers used:
 45272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 45273 ;; Tracked objects:
 45274 ;;		On entry : 0/0
 45275 ;;		On exit  : 0/0
 45276 ;;		Unchanged: 0/0
 45277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45280 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45281 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45282 ;;Total ram usage:        2 bytes
 45283 ;; Hardware stack levels used:    1
 45284 ;; Hardware stack levels required when called:    1
 45285 ;; This function calls:
 45286 ;;		_I2C1_FunctionComplete
 45287 ;;		_I2C1_Stop
 45288 ;; This function is called by:
 45289 ;;		_INTERRUPT_InterruptManagerHigh
 45290 ;; This function uses a non-reentrant model
 45291 ;;
 45292                           
 45293                           	psect	text152
 45294  0180F8                     __ptext152:
 45295                           	opt stack 0
 45296  0180F8                     _I2C1_ISR:
 45297                           	opt stack 9
 45298                           
 45299                           ;i2c1.c: 238: static uint8_t *pi2c_buf_ptr;
 45300                           ;i2c1.c: 239: static uint16_t i2c_address = 0;
 45301                           ;i2c1.c: 240: static uint8_t i2c_bytes_left = 0;
 45302                           ;i2c1.c: 241: static uint8_t i2c_10bit_address_restart = 0;
 45303                           ;i2c1.c: 243: PIR3bits.SSP1IF = 0;
 45304                           
 45305                           ;incstack = 0
 45306  0180F8  010E               	movlb	14	; () banked
 45307  0180FA  9136               	bcf	54,0,b	;volatile
 45308                           
 45309                           ;i2c1.c: 247: if(SSP1CON1bits.WCOL)
 45310  0180FC  AE95               	btfss	3989,7,c	;volatile
 45311  0180FE  D104               	goto	i2l1064
 45312                           
 45313                           ; BSR set to: 14
 45314                           ;i2c1.c: 248: {
 45315                           ;i2c1.c: 250: SSP1CON1bits.WCOL = 0;
 45316  018100  9E95               	bcf	3989,7,c	;volatile
 45317                           
 45318                           ; BSR set to: 14
 45319                           ;i2c1.c: 251: i2c1_state = S_MASTER_IDLE;
 45320  018102  0E00               	movlw	0
 45321  018104  0101               	movlb	1	; () banked
 45322  018106  6FA1               	movwf	_i2c1_state& (0+255),b
 45323                           
 45324                           ; BSR set to: 1
 45325                           ;i2c1.c: 252: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 45326  018108  EE20 F003          	lfsr	2,3
 45327  01810C  518F               	movf	_p_i2c1_current& (0+255),w,b
 45328  01810E  26D9               	addwf	fsr2l,f,c
 45329  018110  5190               	movf	(_p_i2c1_current+1)& (0+255),w,b
 45330  018112  22DA               	addwfc	fsr2h,f,c
 45331  018114  CFDE F004          	movff	postinc2,??_I2C1_ISR
 45332  018118  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 45333  01811C  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 45334  018120  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 45335  018124  0E01               	movlw	1
 45336  018126  6EDF               	movwf	indf2,c
 45337                           
 45338                           ; BSR set to: 1
 45339                           ;i2c1.c: 255: p_i2c1_current = (0);
 45340  018128  0E00               	movlw	0
 45341  01812A  6F8F               	movwf	_p_i2c1_current& (0+255),b
 45342  01812C  0E00               	movlw	0
 45343  01812E  6F90               	movwf	(_p_i2c1_current+1)& (0+255),b
 45344                           
 45345                           ; BSR set to: 1
 45346                           ;i2c1.c: 257: return;
 45347  018130  0012               	return	
 45348  018132                     i2l1065:
 45349                           
 45350                           ; BSR set to: 1
 45351                           ;i2c1.c: 265: if(i2c1_object.trStatus.s.empty != 1)
 45352  018132  B36D               	btfsc	(_i2c1_object+4)& (0+255),1,b
 45353  018134  0012               	return	
 45354                           
 45355                           ; BSR set to: 1
 45356                           ;i2c1.c: 266: {
 45357                           ;i2c1.c: 268: p_i2c1_current = i2c1_object.pTrHead;
 45358  018136  C16B  F18F         	movff	_i2c1_object+2,_p_i2c1_current
 45359  01813A  C16C  F190         	movff	_i2c1_object+3,_p_i2c1_current+1
 45360                           
 45361                           ; BSR set to: 1
 45362                           ;i2c1.c: 269: i2c1_trb_count = i2c1_object.pTrHead->count;
 45363  01813E  C16B  FFD9         	movff	_i2c1_object+2,fsr2l
 45364  018142  C16C  FFDA         	movff	_i2c1_object+3,fsr2h
 45365  018146  50DF               	movf	indf2,w,c
 45366  018148  6FA0               	movwf	_i2c1_trb_count& (0+255),b
 45367                           
 45368                           ; BSR set to: 1
 45369                           ;i2c1.c: 270: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 45370  01814A  EE20 F001          	lfsr	2,1
 45371  01814E  516B               	movf	(_i2c1_object+2)& (0+255),w,b
 45372  018150  26D9               	addwf	fsr2l,f,c
 45373  018152  516C               	movf	(_i2c1_object+3)& (0+255),w,b
 45374  018154  22DA               	addwfc	fsr2h,f,c
 45375  018156  CFDE F191          	movff	postinc2,_p_i2c1_trb_current
 45376  01815A  CFDD F192          	movff	postdec2,_p_i2c1_trb_current+1
 45377                           
 45378                           ; BSR set to: 1
 45379                           ;i2c1.c: 272: i2c1_object.pTrHead++;
 45380  01815E  0E05               	movlw	5
 45381  018160  276B               	addwf	(_i2c1_object+2)& (0+255),f,b
 45382  018162  0E00               	movlw	0
 45383  018164  236C               	addwfc	(_i2c1_object+3)& (0+255),f,b
 45384                           
 45385                           ; BSR set to: 1
 45386                           ;i2c1.c: 275: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 45387  018166  0EEE               	movlw	low (_i2c1_tr_queue+5)
 45388  018168  196B               	xorwf	(_i2c1_object+2)& (0+255),w,b
 45389  01816A  E108               	bnz	i2l19531
 45390  01816C  0E02               	movlw	high (_i2c1_tr_queue+5)
 45391  01816E  196C               	xorwf	(_i2c1_object+3)& (0+255),w,b
 45392  018170  A4D8               	btfss	status,2,c
 45393  018172  D004               	goto	i2l1067
 45394                           
 45395                           ; BSR set to: 1
 45396                           ;i2c1.c: 276: {
 45397                           ;i2c1.c: 278: i2c1_object.pTrHead = i2c1_tr_queue;
 45398  018174  0EE9               	movlw	low _i2c1_tr_queue
 45399  018176  6F6B               	movwf	(_i2c1_object+2)& (0+255),b
 45400  018178  0E02               	movlw	high _i2c1_tr_queue
 45401  01817A  6F6C               	movwf	(_i2c1_object+3)& (0+255),b
 45402  01817C                     i2l1067:
 45403  01817C                     i2l19531:
 45404                           
 45405                           ; BSR set to: 1
 45406                           ;i2c1.c: 279: }
 45407                           ;i2c1.c: 283: i2c1_object.trStatus.s.full = 0;
 45408  01817C  916D               	bcf	(_i2c1_object+4)& (0+255),0,b
 45409                           
 45410                           ;i2c1.c: 286: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 45411  01817E  5169               	movf	_i2c1_object& (0+255),w,b
 45412  018180  196B               	xorwf	(_i2c1_object+2)& (0+255),w,b
 45413  018182  E104               	bnz	i2l1068
 45414  018184  516A               	movf	(_i2c1_object+1)& (0+255),w,b
 45415  018186  196C               	xorwf	(_i2c1_object+3)& (0+255),w,b
 45416  018188  B4D8               	btfsc	status,2,c
 45417                           
 45418                           ; BSR set to: 1
 45419                           ;i2c1.c: 287: {
 45420                           ;i2c1.c: 289: i2c1_object.trStatus.s.empty = 1;
 45421  01818A  836D               	bsf	(_i2c1_object+4)& (0+255),1,b
 45422  01818C                     i2l1068:
 45423                           
 45424                           ; BSR set to: 1
 45425                           ;i2c1.c: 290: }
 45426                           ;i2c1.c: 293: SSP1CON2bits.SEN = 1;
 45427  01818C  8096               	bsf	3990,0,c	;volatile
 45428                           
 45429                           ; BSR set to: 1
 45430                           ;i2c1.c: 296: i2c1_state = S_MASTER_SEND_ADDR;
 45431  01818E  0E02               	movlw	2
 45432  018190  6FA1               	movwf	_i2c1_state& (0+255),b
 45433                           
 45434                           ; BSR set to: 1
 45435                           ;i2c1.c: 297: }
 45436                           ;i2c1.c: 299: break;
 45437  018192  0012               	return	
 45438  018194                     i2l1070:
 45439                           
 45440                           ; BSR set to: 1
 45441                           ;i2c1.c: 306: SSP1CON2bits.RSEN = 1;
 45442  018194  8296               	bsf	3990,1,c	;volatile
 45443                           
 45444                           ; BSR set to: 1
 45445                           ;i2c1.c: 309: i2c1_state = S_MASTER_SEND_ADDR;
 45446  018196  0E02               	movlw	2
 45447  018198  6FA1               	movwf	_i2c1_state& (0+255),b
 45448                           
 45449                           ;i2c1.c: 311: break;
 45450  01819A  0012               	return	
 45451  01819C                     i2l1071:
 45452                           
 45453                           ; BSR set to: 1
 45454                           ;i2c1.c: 315: if(SSP1CON2bits.ACKSTAT)
 45455  01819C  AC96               	btfss	3990,6,c	;volatile
 45456  01819E  D005               	goto	i2l1072
 45457                           
 45458                           ; BSR set to: 1
 45459                           ;i2c1.c: 316: {
 45460                           ;i2c1.c: 317: i2c1_object.i2cErrors++;
 45461  0181A0  2B6F               	incf	(_i2c1_object+6)& (0+255),f,b
 45462                           
 45463                           ; BSR set to: 1
 45464                           ;i2c1.c: 318: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 45465  0181A2  0E04               	movlw	4
 45466  0181A4  EC61  F0DA         	call	_I2C1_Stop
 45467                           
 45468                           ;i2c1.c: 319: }
 45469  0181A8  0012               	return	
 45470  0181AA                     i2l1072:
 45471                           
 45472                           ;i2c1.c: 320: else
 45473                           ;i2c1.c: 321: {
 45474                           ;i2c1.c: 323: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 45475  0181AA  90D8               	bcf	status,0,c
 45476  0181AC  0100               	movlb	0	; () banked
 45477  0181AE  31F6               	rrcf	(I2C1_ISR@i2c_address+1)& (0+255),w,b
 45478  0181B0  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 45479  0181B2  31F5               	rrcf	I2C1_ISR@i2c_address& (0+255),w,b
 45480  0181B4  6E04               	movwf	??_I2C1_ISR& (0+255),c
 45481  0181B6  5004               	movf	??_I2C1_ISR,w,c
 45482  0181B8  6E91               	movwf	3985,c	;volatile
 45483                           
 45484                           ; BSR set to: 0
 45485                           ;i2c1.c: 326: if(i2c_address & 0x01)
 45486  0181BA  A1F5               	btfss	I2C1_ISR@i2c_address& (0+255),0,b
 45487  0181BC  D004               	goto	i2l1074
 45488                           
 45489                           ; BSR set to: 0
 45490                           ;i2c1.c: 327: {
 45491                           ;i2c1.c: 330: i2c1_state = S_MASTER_10BIT_RESTART;
 45492  0181BE  0E0B               	movlw	11
 45493  0181C0  0101               	movlb	1	; () banked
 45494  0181C2  6FA1               	movwf	_i2c1_state& (0+255),b
 45495                           
 45496                           ;i2c1.c: 331: }
 45497  0181C4  0012               	return	
 45498  0181C6                     i2l1074:
 45499                           
 45500                           ;i2c1.c: 332: else
 45501                           ;i2c1.c: 333: {
 45502                           ;i2c1.c: 335: i2c1_state = S_MASTER_SEND_DATA;
 45503                           
 45504                           ; BSR set to: 1
 45505  0181C6  0E03               	movlw	3
 45506  0181C8  0101               	movlb	1	; () banked
 45507  0181CA  6FA1               	movwf	_i2c1_state& (0+255),b
 45508                           
 45509                           ; BSR set to: 1
 45510                           ;i2c1.c: 336: }
 45511                           ;i2c1.c: 337: }
 45512                           ;i2c1.c: 339: break;
 45513                           
 45514                           ; BSR set to: 1
 45515  0181CC  0012               	return	
 45516  0181CE                     i2l1076:
 45517                           
 45518                           ; BSR set to: 1
 45519                           ;i2c1.c: 343: if(SSP1CON2bits.ACKSTAT)
 45520  0181CE  AC96               	btfss	3990,6,c	;volatile
 45521  0181D0  D005               	goto	i2l1077
 45522                           
 45523                           ; BSR set to: 1
 45524                           ;i2c1.c: 344: {
 45525                           ;i2c1.c: 345: i2c1_object.i2cErrors++;
 45526  0181D2  2B6F               	incf	(_i2c1_object+6)& (0+255),f,b
 45527                           
 45528                           ; BSR set to: 1
 45529                           ;i2c1.c: 346: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 45530  0181D4  0E04               	movlw	4
 45531  0181D6  EC61  F0DA         	call	_I2C1_Stop
 45532                           
 45533                           ;i2c1.c: 347: }
 45534  0181DA  0012               	return	
 45535  0181DC                     i2l1077:
 45536                           
 45537                           ; BSR set to: 1
 45538                           ;i2c1.c: 348: else
 45539                           ;i2c1.c: 349: {
 45540                           ;i2c1.c: 352: SSP1CON2bits.RSEN = 1;
 45541  0181DC  8296               	bsf	3990,1,c	;volatile
 45542                           
 45543                           ; BSR set to: 1
 45544                           ;i2c1.c: 356: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 45545  0181DE  C0F5  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 45546  0181E2  C0F6  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 45547  0181E6  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 45548  0181EA  6A05               	clrf	??_I2C1_ISR+1,c
 45549  0181EC  0E06               	movlw	6
 45550  0181EE  1604               	andwf	??_I2C1_ISR,f,c
 45551  0181F0  0E00               	movlw	0
 45552  0181F2  1605               	andwf	??_I2C1_ISR+1,f,c
 45553  0181F4  0EF0               	movlw	240
 45554  0181F6  1004               	iorwf	??_I2C1_ISR,w,c
 45555  0181F8  0100               	movlb	0	; () banked
 45556  0181FA  6FF5               	movwf	I2C1_ISR@i2c_address& (0+255),b
 45557  0181FC  5005               	movf	??_I2C1_ISR+1,w,c
 45558  0181FE  6FF6               	movwf	(I2C1_ISR@i2c_address+1)& (0+255),b
 45559                           
 45560                           ; BSR set to: 0
 45561                           ;i2c1.c: 359: i2c_address |= 0x0001;
 45562  018200  81F5               	bsf	I2C1_ISR@i2c_address& (0+255),0,b
 45563                           
 45564                           ; BSR set to: 0
 45565                           ;i2c1.c: 362: i2c_10bit_address_restart = 1;
 45566  018202  0E01               	movlw	1
 45567  018204  0101               	movlb	1	; () banked
 45568  018206  6F9E               	movwf	I2C1_ISR@i2c_10bit_address_restart& (0+255),b
 45569                           
 45570                           ; BSR set to: 1
 45571                           ;i2c1.c: 365: i2c1_state = S_MASTER_SEND_ADDR;
 45572  018208  0E02               	movlw	2
 45573  01820A  6FA1               	movwf	_i2c1_state& (0+255),b
 45574                           
 45575                           ; BSR set to: 1
 45576                           ;i2c1.c: 366: }
 45577                           ;i2c1.c: 368: break;
 45578  01820C  0012               	return	
 45579  01820E                     
 45580                           ; BSR set to: 1
 45581                           ;i2c1.c: 383: if(i2c_10bit_address_restart != 1)
 45582                           
 45583                           ; BSR set to: 1
 45584  01820E  059E               	decf	I2C1_ISR@i2c_10bit_address_restart& (0+255),w,b
 45585  018210  B4D8               	btfsc	status,2,c
 45586  018212  D01A               	goto	i2l1081
 45587                           
 45588                           ; BSR set to: 1
 45589                           ;i2c1.c: 384: {
 45590                           ;i2c1.c: 386: i2c_address = p_i2c1_trb_current->address;
 45591  018214  C191  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 45592  018218  C192  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 45593  01821C  CFDE F0F5          	movff	postinc2,I2C1_ISR@i2c_address
 45594  018220  CFDD F0F6          	movff	postdec2,I2C1_ISR@i2c_address+1
 45595                           
 45596                           ; BSR set to: 1
 45597                           ;i2c1.c: 387: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 45598  018224  EE20 F003          	lfsr	2,3
 45599  018228  5191               	movf	_p_i2c1_trb_current& (0+255),w,b
 45600  01822A  26D9               	addwf	fsr2l,f,c
 45601  01822C  5192               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 45602  01822E  22DA               	addwfc	fsr2h,f,c
 45603  018230  CFDE F18D          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 45604  018234  CFDD F18E          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 45605                           
 45606                           ; BSR set to: 1
 45607                           ;i2c1.c: 388: i2c_bytes_left = p_i2c1_trb_current->length;
 45608  018238  EE20 F002          	lfsr	2,2
 45609  01823C  5191               	movf	_p_i2c1_trb_current& (0+255),w,b
 45610  01823E  26D9               	addwf	fsr2l,f,c
 45611  018240  5192               	movf	(_p_i2c1_trb_current+1)& (0+255),w,b
 45612  018242  22DA               	addwfc	fsr2h,f,c
 45613  018244  50DF               	movf	indf2,w,c
 45614  018246  6F9F               	movwf	I2C1_ISR@i2c_bytes_left& (0+255),b
 45615  018248                     i2l1081:
 45616                           
 45617                           ;i2c1.c: 411: else
 45618                           ;i2c1.c: 412: {
 45619                           ;i2c1.c: 414: SSP1BUF = i2c_address;
 45620  018248  C0F5  FF91         	movff	I2C1_ISR@i2c_address,3985	;volatile
 45621                           
 45622                           ;i2c1.c: 415: if(i2c_address & 0x01)
 45623  01824C  0100               	movlb	0	; () banked
 45624  01824E  A1F5               	btfss	I2C1_ISR@i2c_address& (0+255),0,b
 45625  018250  D004               	goto	i2l1085
 45626                           
 45627                           ; BSR set to: 0
 45628                           ;i2c1.c: 416: {
 45629                           ;i2c1.c: 418: i2c1_state = S_MASTER_ACK_ADDR;
 45630  018252  0E05               	movlw	5
 45631  018254  0101               	movlb	1	; () banked
 45632  018256  6FA1               	movwf	_i2c1_state& (0+255),b
 45633                           
 45634                           ;i2c1.c: 419: }
 45635  018258  0012               	return	
 45636  01825A                     i2l1085:
 45637                           
 45638                           ;i2c1.c: 420: else
 45639                           ;i2c1.c: 421: {
 45640                           ;i2c1.c: 423: i2c1_state = S_MASTER_SEND_DATA;
 45641                           
 45642                           ; BSR set to: 1
 45643  01825A  0E03               	movlw	3
 45644  01825C  0101               	movlb	1	; () banked
 45645  01825E  6FA1               	movwf	_i2c1_state& (0+255),b
 45646                           
 45647                           ; BSR set to: 1
 45648                           ;i2c1.c: 424: }
 45649                           ;i2c1.c: 425: }
 45650                           ;i2c1.c: 426: break;
 45651                           
 45652                           ; BSR set to: 1
 45653  018260  0012               	return	
 45654  018262                     i2l1087:
 45655                           
 45656                           ; BSR set to: 1
 45657                           ;i2c1.c: 431: if(SSP1CON2bits.ACKSTAT)
 45658  018262  AC96               	btfss	3990,6,c	;volatile
 45659  018264  D006               	goto	i2l1088
 45660                           
 45661                           ; BSR set to: 1
 45662                           ;i2c1.c: 432: {
 45663                           ;i2c1.c: 434: i2c1_object.i2cErrors++;
 45664  018266  2B6F               	incf	(_i2c1_object+6)& (0+255),f,b
 45665                           
 45666                           ; BSR set to: 1
 45667                           ;i2c1.c: 437: SSP1CON2bits.ACKSTAT = 0;
 45668  018268  9C96               	bcf	3990,6,c	;volatile
 45669                           
 45670                           ; BSR set to: 1
 45671                           ;i2c1.c: 440: I2C1_Stop(I2C1_DATA_NO_ACK);
 45672  01826A  0E05               	movlw	5
 45673  01826C  EC61  F0DA         	call	_I2C1_Stop
 45674                           
 45675                           ;i2c1.c: 442: }
 45676  018270  0012               	return	
 45677  018272                     i2l1088:
 45678                           
 45679                           ;i2c1.c: 443: else
 45680                           ;i2c1.c: 444: {
 45681                           ;i2c1.c: 446: if(i2c_bytes_left-- == 0U)
 45682  018272  0101               	movlb	1	; () banked
 45683  018274  079F               	decf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 45684  018276  299F               	incf	I2C1_ISR@i2c_bytes_left& (0+255),w,b
 45685  018278  A4D8               	btfss	status,2,c
 45686  01827A  D00E               	goto	i2l1090
 45687                           
 45688                           ; BSR set to: 1
 45689                           ;i2c1.c: 447: {
 45690                           ;i2c1.c: 451: p_i2c1_trb_current++;
 45691  01827C  0E05               	movlw	5
 45692  01827E  2791               	addwf	_p_i2c1_trb_current& (0+255),f,b
 45693  018280  0E00               	movlw	0
 45694  018282  2392               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 45695                           
 45696                           ; BSR set to: 1
 45697                           ;i2c1.c: 454: if(--i2c1_trb_count == 0)
 45698  018284  2FA0               	decfsz	_i2c1_trb_count& (0+255),f,b
 45699  018286  D004               	goto	i2l1091
 45700                           
 45701                           ; BSR set to: 1
 45702                           ;i2c1.c: 455: {
 45703                           ;i2c1.c: 456: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 45704  018288  0E00               	movlw	0
 45705  01828A  EC61  F0DA         	call	_I2C1_Stop
 45706                           
 45707                           ;i2c1.c: 457: }
 45708  01828E  0012               	return	
 45709  018290                     i2l1091:
 45710                           
 45711                           ; BSR set to: 1
 45712                           ;i2c1.c: 458: else
 45713                           ;i2c1.c: 459: {
 45714                           ;i2c1.c: 466: SSP1CON2bits.RSEN = 1;
 45715  018290  8296               	bsf	3990,1,c	;volatile
 45716                           
 45717                           ; BSR set to: 1
 45718                           ;i2c1.c: 469: i2c1_state = S_MASTER_SEND_ADDR;
 45719  018292  0E02               	movlw	2
 45720  018294  6FA1               	movwf	_i2c1_state& (0+255),b
 45721                           
 45722                           ; BSR set to: 1
 45723                           ;i2c1.c: 471: }
 45724                           ;i2c1.c: 472: }
 45725  018296  0012               	return	
 45726  018298                     i2l1090:
 45727                           
 45728                           ; BSR set to: 1
 45729                           ;i2c1.c: 473: else
 45730                           ;i2c1.c: 474: {
 45731                           ;i2c1.c: 476: SSP1BUF = *pi2c_buf_ptr++;
 45732                           
 45733                           ; BSR set to: 1
 45734  018298  C18D  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 45735  01829C  C18E  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 45736  0182A0  50DF               	movf	indf2,w,c
 45737  0182A2  6E91               	movwf	3985,c	;volatile
 45738                           
 45739                           ; BSR set to: 1
 45740  0182A4  4B8D               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 45741  0182A6  2B8E               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 45742                           
 45743                           ; BSR set to: 1
 45744                           ;i2c1.c: 477: }
 45745                           ;i2c1.c: 478: }
 45746                           ;i2c1.c: 479: break;
 45747                           
 45748                           ; BSR set to: 1
 45749  0182A8  0012               	return	
 45750  0182AA                     i2l1094:
 45751                           
 45752                           ; BSR set to: 1
 45753                           ;i2c1.c: 484: if(SSP1CON2bits.ACKSTAT)
 45754  0182AA  AC96               	btfss	3990,6,c	;volatile
 45755  0182AC  D006               	goto	i2l1095
 45756                           
 45757                           ; BSR set to: 1
 45758                           ;i2c1.c: 485: {
 45759                           ;i2c1.c: 488: i2c1_object.i2cErrors++;
 45760  0182AE  2B6F               	incf	(_i2c1_object+6)& (0+255),f,b
 45761                           
 45762                           ; BSR set to: 1
 45763                           ;i2c1.c: 491: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 45764  0182B0  0E04               	movlw	4
 45765  0182B2  EC61  F0DA         	call	_I2C1_Stop
 45766                           
 45767                           ;i2c1.c: 494: SSP1CON2bits.ACKSTAT = 0;
 45768  0182B6  9C96               	bcf	3990,6,c	;volatile
 45769                           
 45770                           ;i2c1.c: 495: }
 45771  0182B8  0012               	return	
 45772  0182BA                     i2l1095:
 45773                           
 45774                           ; BSR set to: 1
 45775                           ;i2c1.c: 496: else
 45776                           ;i2c1.c: 497: {
 45777                           ;i2c1.c: 498: SSP1CON2bits.RCEN = 1;
 45778  0182BA  8696               	bsf	3990,3,c	;volatile
 45779                           
 45780                           ; BSR set to: 1
 45781                           ;i2c1.c: 499: i2c1_state = S_MASTER_ACK_RCV_DATA;
 45782  0182BC  0E08               	movlw	8
 45783  0182BE  6FA1               	movwf	_i2c1_state& (0+255),b
 45784                           
 45785                           ; BSR set to: 1
 45786                           ;i2c1.c: 500: }
 45787                           ;i2c1.c: 501: break;
 45788  0182C0  0012               	return	
 45789  0182C2                     
 45790                           ; BSR set to: 1
 45791                           ;i2c1.c: 508: i2c1_state = S_MASTER_ACK_RCV_DATA;
 45792                           
 45793                           ; BSR set to: 1
 45794  0182C2  0E08               	movlw	8
 45795  0182C4  6FA1               	movwf	_i2c1_state& (0+255),b
 45796                           
 45797                           ; BSR set to: 1
 45798                           ;i2c1.c: 511: SSP1CON2bits.RCEN = 1;
 45799  0182C6  8696               	bsf	3990,3,c	;volatile
 45800                           
 45801                           ;i2c1.c: 513: break;
 45802  0182C8  0012               	return	
 45803  0182CA                     
 45804                           ; BSR set to: 1
 45805                           ;i2c1.c: 518: *pi2c_buf_ptr++ = SSP1BUF;
 45806                           
 45807                           ; BSR set to: 1
 45808  0182CA  C18D  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 45809  0182CE  C18E  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 45810  0182D2  CF91 FFDF          	movff	3985,indf2	;volatile
 45811                           
 45812                           ; BSR set to: 1
 45813  0182D6  4B8D               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 45814  0182D8  2B8E               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 45815                           
 45816                           ; BSR set to: 1
 45817                           ;i2c1.c: 521: if(--i2c_bytes_left)
 45818  0182DA  0E01               	movlw	1
 45819  0182DC  5F9F               	subwf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 45820  0182DE  B4D8               	btfsc	status,2,c
 45821  0182E0  D004               	goto	i2l1099
 45822                           
 45823                           ; BSR set to: 1
 45824                           ;i2c1.c: 522: {
 45825                           ;i2c1.c: 528: SSP1CON2bits.ACKDT = 0;
 45826  0182E2  9A96               	bcf	3990,5,c	;volatile
 45827                           
 45828                           ; BSR set to: 1
 45829                           ;i2c1.c: 531: i2c1_state = S_MASTER_RCV_DATA;
 45830  0182E4  0E06               	movlw	6
 45831  0182E6  6FA1               	movwf	_i2c1_state& (0+255),b
 45832                           
 45833                           ;i2c1.c: 532: }
 45834  0182E8  D003               	goto	i2l1100
 45835  0182EA                     i2l1099:
 45836                           
 45837                           ; BSR set to: 1
 45838                           ;i2c1.c: 533: else
 45839                           ;i2c1.c: 534: {
 45840                           ;i2c1.c: 538: SSP1CON2bits.ACKDT = 1;
 45841  0182EA  8A96               	bsf	3990,5,c	;volatile
 45842                           
 45843                           ; BSR set to: 1
 45844                           ;i2c1.c: 540: I2C1_FunctionComplete();
 45845  0182EC  ECF7  F0DE         	call	_I2C1_FunctionComplete	;wreg free
 45846  0182F0                     i2l1100:
 45847                           
 45848                           ;i2c1.c: 541: }
 45849                           ;i2c1.c: 544: SSP1CON2bits.ACKEN = 1;
 45850  0182F0  8896               	bsf	3990,4,c	;volatile
 45851                           
 45852                           ;i2c1.c: 545: break;
 45853  0182F2  0012               	return	
 45854  0182F4                     
 45855                           ;i2c1.c: 548: case S_MASTER_SEND_STOP:
 45856                           ;i2c1.c: 551: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 45857  0182F4  0E00               	movlw	0
 45858  0182F6  EC61  F0DA         	call	_I2C1_Stop
 45859                           
 45860                           ;i2c1.c: 552: break;
 45861  0182FA  0012               	return	
 45862  0182FC                     
 45863                           ;i2c1.c: 558: i2c1_object.i2cErrors++;
 45864  0182FC  0101               	movlb	1	; () banked
 45865  0182FE  2B6F               	incf	(_i2c1_object+6)& (0+255),f,b
 45866                           
 45867                           ; BSR set to: 1
 45868                           ;i2c1.c: 559: I2C1_Stop(I2C1_LOST_STATE);
 45869  018300  0E06               	movlw	6
 45870  018302  EC61  F0DA         	call	_I2C1_Stop
 45871                           
 45872                           ;i2c1.c: 562: }
 45873                           
 45874                           ;i2c1.c: 560: break;
 45875  018306  0012               	return	
 45876  018308                     i2l1064:
 45877  018308  0101               	movlb	1	; () banked
 45878  01830A  51A1               	movf	_i2c1_state& (0+255),w,b
 45879                           
 45880                           ; Switch size 1, requested type "space"
 45881                           ; Number of cases is 11, Range of values is 0 to 11
 45882                           ; switch strategies available:
 45883                           ; Name         Instructions Cycles
 45884                           ; simple_byte           34    18 (average)
 45885                           ;	Chosen strategy is simple_byte
 45886  01830C  0A00               	xorlw	0	; case 0
 45887  01830E  B4D8               	btfsc	status,2,c
 45888  018310  D710               	goto	i2l1065
 45889  018312  0A01               	xorlw	1	; case 1
 45890  018314  B4D8               	btfsc	status,2,c
 45891  018316  D73E               	goto	i2l1070
 45892  018318  0A03               	xorlw	3	; case 2
 45893  01831A  B4D8               	btfsc	status,2,c
 45894  01831C  D778               	goto	i2l1079
 45895  01831E  0A01               	xorlw	1	; case 3
 45896  018320  B4D8               	btfsc	status,2,c
 45897  018322  D79F               	goto	i2l1087
 45898  018324  0A07               	xorlw	7	; case 4
 45899  018326  B4D8               	btfsc	status,2,c
 45900  018328  D7E5               	goto	i2l1101
 45901  01832A  0A01               	xorlw	1	; case 5
 45902  01832C  B4D8               	btfsc	status,2,c
 45903  01832E  D7BD               	goto	i2l1094
 45904  018330  0A03               	xorlw	3	; case 6
 45905  018332  B4D8               	btfsc	status,2,c
 45906  018334  D7C6               	goto	i2l1097
 45907  018336  0A01               	xorlw	1	; case 7
 45908  018338  B4D8               	btfsc	status,2,c
 45909  01833A  D7DC               	goto	i2l1101
 45910  01833C  0A0F               	xorlw	15	; case 8
 45911  01833E  B4D8               	btfsc	status,2,c
 45912  018340  D7C4               	goto	i2l1098
 45913  018342  0A02               	xorlw	2	; case 10
 45914  018344  B4D8               	btfsc	status,2,c
 45915  018346  D72A               	goto	i2l1071
 45916  018348  0A01               	xorlw	1	; case 11
 45917  01834A  B4D8               	btfsc	status,2,c
 45918  01834C  D740               	goto	i2l1076
 45919  01834E  D7D6               	goto	i2l1103
 45920  018350                     __end_of_I2C1_ISR:
 45921                           	opt stack 0
 45922                           tosu	equ	0xFFF
 45923                           tosh	equ	0xFFE
 45924                           tosl	equ	0xFFD
 45925                           pclatu	equ	0xFFB
 45926                           pclath	equ	0xFFA
 45927                           tblptru	equ	0xFF8
 45928                           tblptrh	equ	0xFF7
 45929                           tblptrl	equ	0xFF6
 45930                           tablat	equ	0xFF5
 45931                           prodh	equ	0xFF4
 45932                           prodl	equ	0xFF3
 45933                           intcon	equ	0xFF2
 45934                           indf0	equ	0xFEF
 45935                           postinc0	equ	0xFEE
 45936                           fsr0h	equ	0xFEA
 45937                           fsr0l	equ	0xFE9
 45938                           wreg	equ	0xFE8
 45939                           indf1	equ	0xFE7
 45940                           postdec1	equ	0xFE5
 45941                           plusw1	equ	0xFE3
 45942                           fsr1h	equ	0xFE2
 45943                           fsr1l	equ	0xFE1
 45944                           bsr	equ	0xFE0
 45945                           indf2	equ	0xFDF
 45946                           postinc2	equ	0xFDE
 45947                           postdec2	equ	0xFDD
 45948                           plusw2	equ	0xFDB
 45949                           fsr2h	equ	0xFDA
 45950                           fsr2l	equ	0xFD9
 45951                           status	equ	0xFD8
 45952                           
 45953 ;; *************** function _I2C1_Stop *****************
 45954 ;; Defined at:
 45955 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 45956 ;; Parameters:    Size  Location     Type
 45957 ;;  completion_c    1    wreg     enum E17311
 45958 ;; Auto vars:     Size  Location     Type
 45959 ;;  completion_c    1    2[COMRAM] enum E17311
 45960 ;; Return value:  Size  Location     Type
 45961 ;;                  1    wreg      void 
 45962 ;; Registers used:
 45963 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 45964 ;; Tracked objects:
 45965 ;;		On entry : 0/0
 45966 ;;		On exit  : 0/0
 45967 ;;		Unchanged: 0/0
 45968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 45969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45971 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45972 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45973 ;;Total ram usage:        3 bytes
 45974 ;; Hardware stack levels used:    1
 45975 ;; This function calls:
 45976 ;;		Nothing
 45977 ;; This function is called by:
 45978 ;;		_I2C1_ISR
 45979 ;; This function uses a non-reentrant model
 45980 ;;
 45981                           
 45982                           	psect	text153
 45983  01B4C2                     __ptext153:
 45984                           	opt stack 0
 45985  01B4C2                     _I2C1_Stop:
 45986                           	opt stack 9
 45987                           
 45988                           ;incstack = 0
 45989                           ;I2C1_Stop@completion_code stored from wreg
 45990  01B4C2  6E03               	movwf	I2C1_Stop@completion_code,c
 45991                           
 45992                           ;i2c1.c: 586: SSP1CON2bits.PEN = 1;
 45993  01B4C4  8496               	bsf	3990,2,c	;volatile
 45994                           
 45995                           ;i2c1.c: 589: if (p_i2c1_current->pTrFlag != (0))
 45996  01B4C6  0101               	movlb	1	; () banked
 45997  01B4C8  EE20 F003          	lfsr	2,3
 45998  01B4CC  518F               	movf	_p_i2c1_current& (0+255),w,b
 45999  01B4CE  26D9               	addwf	fsr2l,f,c
 46000  01B4D0  5190               	movf	(_p_i2c1_current+1)& (0+255),w,b
 46001  01B4D2  22DA               	addwfc	fsr2h,f,c
 46002  01B4D4  50DE               	movf	postinc2,w,c
 46003  01B4D6  10DE               	iorwf	postinc2,w,c
 46004  01B4D8  B4D8               	btfsc	status,2,c
 46005  01B4DA  D010               	goto	i2l1111
 46006                           
 46007                           ; BSR set to: 1
 46008                           ;i2c1.c: 590: {
 46009                           ;i2c1.c: 592: *(p_i2c1_current->pTrFlag) = completion_code;
 46010  01B4DC  EE20 F003          	lfsr	2,3
 46011  01B4E0  518F               	movf	_p_i2c1_current& (0+255),w,b
 46012  01B4E2  26D9               	addwf	fsr2l,f,c
 46013  01B4E4  5190               	movf	(_p_i2c1_current+1)& (0+255),w,b
 46014  01B4E6  22DA               	addwfc	fsr2h,f,c
 46015  01B4E8  CFDE F001          	movff	postinc2,??_I2C1_Stop
 46016  01B4EC  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 46017  01B4F0  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 46018  01B4F4  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 46019  01B4F8  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 46020  01B4FC                     i2l1111:
 46021                           
 46022                           ; BSR set to: 1
 46023                           ;i2c1.c: 593: }
 46024                           ;i2c1.c: 596: i2c1_state = S_MASTER_IDLE;
 46025                           
 46026                           ; BSR set to: 1
 46027  01B4FC  0E00               	movlw	0
 46028  01B4FE  6FA1               	movwf	_i2c1_state& (0+255),b
 46029                           
 46030                           ; BSR set to: 1
 46031  01B500  0012               	return		;funcret
 46032  01B502                     __end_of_I2C1_Stop:
 46033                           	opt stack 0
 46034                           tosu	equ	0xFFF
 46035                           tosh	equ	0xFFE
 46036                           tosl	equ	0xFFD
 46037                           pclatu	equ	0xFFB
 46038                           pclath	equ	0xFFA
 46039                           tblptru	equ	0xFF8
 46040                           tblptrh	equ	0xFF7
 46041                           tblptrl	equ	0xFF6
 46042                           tablat	equ	0xFF5
 46043                           prodh	equ	0xFF4
 46044                           prodl	equ	0xFF3
 46045                           intcon	equ	0xFF2
 46046                           indf0	equ	0xFEF
 46047                           postinc0	equ	0xFEE
 46048                           fsr0h	equ	0xFEA
 46049                           fsr0l	equ	0xFE9
 46050                           wreg	equ	0xFE8
 46051                           indf1	equ	0xFE7
 46052                           postdec1	equ	0xFE5
 46053                           plusw1	equ	0xFE3
 46054                           fsr1h	equ	0xFE2
 46055                           fsr1l	equ	0xFE1
 46056                           bsr	equ	0xFE0
 46057                           indf2	equ	0xFDF
 46058                           postinc2	equ	0xFDE
 46059                           postdec2	equ	0xFDD
 46060                           plusw2	equ	0xFDB
 46061                           fsr2h	equ	0xFDA
 46062                           fsr2l	equ	0xFD9
 46063                           status	equ	0xFD8
 46064                           
 46065 ;; *************** function _I2C1_FunctionComplete *****************
 46066 ;; Defined at:
 46067 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 46068 ;; Parameters:    Size  Location     Type
 46069 ;;		None
 46070 ;; Auto vars:     Size  Location     Type
 46071 ;;		None
 46072 ;; Return value:  Size  Location     Type
 46073 ;;                  1    wreg      void 
 46074 ;; Registers used:
 46075 ;;		wreg, status,2, status,0
 46076 ;; Tracked objects:
 46077 ;;		On entry : 0/0
 46078 ;;		On exit  : 0/0
 46079 ;;		Unchanged: 0/0
 46080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46085 ;;Total ram usage:        0 bytes
 46086 ;; Hardware stack levels used:    1
 46087 ;; This function calls:
 46088 ;;		Nothing
 46089 ;; This function is called by:
 46090 ;;		_I2C1_ISR
 46091 ;; This function uses a non-reentrant model
 46092 ;;
 46093                           
 46094                           	psect	text154
 46095  01BDEE                     __ptext154:
 46096                           	opt stack 0
 46097  01BDEE                     _I2C1_FunctionComplete:
 46098                           	opt stack 9
 46099                           
 46100                           ;i2c1.c: 569: p_i2c1_trb_current++;
 46101                           
 46102                           ; BSR set to: 1
 46103                           ;incstack = 0
 46104  01BDEE  0E05               	movlw	5
 46105  01BDF0  0101               	movlb	1	; () banked
 46106  01BDF2  2791               	addwf	_p_i2c1_trb_current& (0+255),f,b
 46107  01BDF4  0E00               	movlw	0
 46108  01BDF6  2392               	addwfc	(_p_i2c1_trb_current+1)& (0+255),f,b
 46109                           
 46110                           ; BSR set to: 1
 46111                           ;i2c1.c: 572: if(--i2c1_trb_count == 0)
 46112  01BDF8  2FA0               	decfsz	_i2c1_trb_count& (0+255),f,b
 46113  01BDFA  D003               	goto	i2l1106
 46114                           
 46115                           ; BSR set to: 1
 46116                           ;i2c1.c: 573: {
 46117                           ;i2c1.c: 574: i2c1_state = S_MASTER_SEND_STOP;
 46118  01BDFC  0E04               	movlw	4
 46119  01BDFE  6FA1               	movwf	_i2c1_state& (0+255),b
 46120                           
 46121                           ;i2c1.c: 575: }
 46122  01BE00  0012               	return	
 46123  01BE02                     i2l1106:
 46124                           
 46125                           ; BSR set to: 1
 46126                           ;i2c1.c: 576: else
 46127                           ;i2c1.c: 577: {
 46128                           ;i2c1.c: 578: i2c1_state = S_MASTER_RESTART;
 46129                           
 46130                           ; BSR set to: 1
 46131  01BE02  0E01               	movlw	1
 46132  01BE04  6FA1               	movwf	_i2c1_state& (0+255),b
 46133  01BE06  0012               	return	
 46134  01BE08                     __end_of_I2C1_FunctionComplete:
 46135                           	opt stack 0
 46136                           tosu	equ	0xFFF
 46137                           tosh	equ	0xFFE
 46138                           tosl	equ	0xFFD
 46139                           pclatu	equ	0xFFB
 46140                           pclath	equ	0xFFA
 46141                           tblptru	equ	0xFF8
 46142                           tblptrh	equ	0xFF7
 46143                           tblptrl	equ	0xFF6
 46144                           tablat	equ	0xFF5
 46145                           prodh	equ	0xFF4
 46146                           prodl	equ	0xFF3
 46147                           intcon	equ	0xFF2
 46148                           indf0	equ	0xFEF
 46149                           postinc0	equ	0xFEE
 46150                           fsr0h	equ	0xFEA
 46151                           fsr0l	equ	0xFE9
 46152                           wreg	equ	0xFE8
 46153                           indf1	equ	0xFE7
 46154                           postdec1	equ	0xFE5
 46155                           plusw1	equ	0xFE3
 46156                           fsr1h	equ	0xFE2
 46157                           fsr1l	equ	0xFE1
 46158                           bsr	equ	0xFE0
 46159                           indf2	equ	0xFDF
 46160                           postinc2	equ	0xFDE
 46161                           postdec2	equ	0xFDD
 46162                           plusw2	equ	0xFDB
 46163                           fsr2h	equ	0xFDA
 46164                           fsr2l	equ	0xFD9
 46165                           status	equ	0xFD8
 46166                           
 46167 ;; *************** function _I2C1_BusCollisionISR *****************
 46168 ;; Defined at:
 46169 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 46170 ;; Parameters:    Size  Location     Type
 46171 ;;		None
 46172 ;; Auto vars:     Size  Location     Type
 46173 ;;		None
 46174 ;; Return value:  Size  Location     Type
 46175 ;;                  1    wreg      void 
 46176 ;; Registers used:
 46177 ;;		None
 46178 ;; Tracked objects:
 46179 ;;		On entry : 0/0
 46180 ;;		On exit  : 0/0
 46181 ;;		Unchanged: 0/0
 46182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46187 ;;Total ram usage:        0 bytes
 46188 ;; Hardware stack levels used:    1
 46189 ;; This function calls:
 46190 ;;		Nothing
 46191 ;; This function is called by:
 46192 ;;		_INTERRUPT_InterruptManagerHigh
 46193 ;; This function uses a non-reentrant model
 46194 ;;
 46195                           
 46196                           	psect	text155
 46197  01C006                     __ptext155:
 46198                           	opt stack 0
 46199  01C006                     _I2C1_BusCollisionISR:
 46200                           	opt stack 10
 46201                           
 46202                           ;i2c1.c: 745: PIR3bits.BCL1IF = 0;
 46203                           
 46204                           ; BSR set to: 1
 46205                           ;incstack = 0
 46206  01C006  010E               	movlb	14	; () banked
 46207  01C008  9336               	bcf	54,1,b	;volatile
 46208                           
 46209                           ; BSR set to: 14
 46210  01C00A  0012               	return		;funcret
 46211  01C00C                     __end_of_I2C1_BusCollisionISR:
 46212                           	opt stack 0
 46213                           tosu	equ	0xFFF
 46214                           tosh	equ	0xFFE
 46215                           tosl	equ	0xFFD
 46216                           pclatu	equ	0xFFB
 46217                           pclath	equ	0xFFA
 46218                           tblptru	equ	0xFF8
 46219                           tblptrh	equ	0xFF7
 46220                           tblptrl	equ	0xFF6
 46221                           tablat	equ	0xFF5
 46222                           prodh	equ	0xFF4
 46223                           prodl	equ	0xFF3
 46224                           intcon	equ	0xFF2
 46225                           indf0	equ	0xFEF
 46226                           postinc0	equ	0xFEE
 46227                           fsr0h	equ	0xFEA
 46228                           fsr0l	equ	0xFE9
 46229                           wreg	equ	0xFE8
 46230                           indf1	equ	0xFE7
 46231                           postdec1	equ	0xFE5
 46232                           plusw1	equ	0xFE3
 46233                           fsr1h	equ	0xFE2
 46234                           fsr1l	equ	0xFE1
 46235                           bsr	equ	0xFE0
 46236                           indf2	equ	0xFDF
 46237                           postinc2	equ	0xFDE
 46238                           postdec2	equ	0xFDD
 46239                           plusw2	equ	0xFDB
 46240                           fsr2h	equ	0xFDA
 46241                           fsr2l	equ	0xFD9
 46242                           status	equ	0xFD8
 46243                           
 46244 ;; *************** function _HLVD_ISR *****************
 46245 ;; Defined at:
 46246 ;;		line 120 in file "mcc_generated_files/hlvd.c"
 46247 ;; Parameters:    Size  Location     Type
 46248 ;;		None
 46249 ;; Auto vars:     Size  Location     Type
 46250 ;;		None
 46251 ;; Return value:  Size  Location     Type
 46252 ;;                  1    wreg      void 
 46253 ;; Registers used:
 46254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 46255 ;; Tracked objects:
 46256 ;;		On entry : 0/0
 46257 ;;		On exit  : 0/0
 46258 ;;		Unchanged: 0/0
 46259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46264 ;;Total ram usage:        0 bytes
 46265 ;; Hardware stack levels used:    1
 46266 ;; Hardware stack levels required when called:    2
 46267 ;; This function calls:
 46268 ;;		i2_writeDoubleToEEPROM
 46269 ;; This function is called by:
 46270 ;;		_INTERRUPT_InterruptManagerHigh
 46271 ;; This function uses a non-reentrant model
 46272 ;;
 46273                           
 46274                           	psect	text156
 46275  01B798                     __ptext156:
 46276                           	opt stack 0
 46277  01B798                     _HLVD_ISR:
 46278                           	opt stack 8
 46279                           
 46280                           ;hlvd.c: 124: PIR2bits.HLVDIF = 0;
 46281                           
 46282                           ; BSR set to: 14
 46283                           ;incstack = 0
 46284  01B798  010E               	movlb	14	; () banked
 46285  01B79A  9F35               	bcf	53,7,b	;volatile
 46286                           
 46287                           ;hlvd.c: 127: SBOREN = 0;
 46288  01B79C  9F4B               	bcf	75,7,b	;volatile
 46289                           
 46290                           ; BSR set to: 14
 46291                           ;hlvd.c: 130: writeDoubleToEEPROM(Total_Energy, Total_Energy_address);
 46292  01B79E  C0F0  F005         	movff	_Total_Energy,i2writeDoubleToEEPROM@input_double	;volatile
 46293  01B7A2  C0F1  F006         	movff	_Total_Energy+1,i2writeDoubleToEEPROM@input_double+1	;volatile
 46294  01B7A6  C0F2  F007         	movff	_Total_Energy+2,i2writeDoubleToEEPROM@input_double+2	;volatile
 46295  01B7AA  C0F3  F008         	movff	_Total_Energy+3,i2writeDoubleToEEPROM@input_double+3	;volatile
 46296  01B7AE  0E99               	movlw	low _Total_Energy_address
 46297  01B7B0  6EF6               	movwf	tblptrl,c
 46298  01B7B2                     	if	1	;There is more than 1 active tblptr byte
 46299  01B7B2  0ECE               	movlw	high _Total_Energy_address
 46300  01B7B4  6EF7               	movwf	tblptrh,c
 46301  01B7B6                     	endif
 46302  01B7B6                     	if	1	;There are 3 active tblptr bytes
 46303  01B7B6  0E00               	movlw	low (_Total_Energy_address shr (0+16))
 46304  01B7B8  6EF8               	movwf	tblptru,c
 46305  01B7BA                     	endif
 46306  01B7BA  0009               	tblrd		*+
 46307  01B7BC  CFF5 F009          	movff	tablat,i2writeDoubleToEEPROM@starting_address
 46308  01B7C0  000A               	tblrd		*-
 46309  01B7C2  CFF5 F00A          	movff	tablat,i2writeDoubleToEEPROM@starting_address+1
 46310  01B7C6  EC54  F0D8         	call	i2_writeDoubleToEEPROM	;wreg free
 46311                           
 46312                           ;hlvd.c: 133: SBOREN = 1;
 46313  01B7CA  010E               	movlb	14	; () banked
 46314  01B7CC  8F4B               	bsf	75,7,b	;volatile
 46315                           
 46316                           ; BSR set to: 14
 46317  01B7CE  0012               	return		;funcret
 46318  01B7D0                     __end_of_HLVD_ISR:
 46319                           	opt stack 0
 46320                           tosu	equ	0xFFF
 46321                           tosh	equ	0xFFE
 46322                           tosl	equ	0xFFD
 46323                           pclatu	equ	0xFFB
 46324                           pclath	equ	0xFFA
 46325                           tblptru	equ	0xFF8
 46326                           tblptrh	equ	0xFF7
 46327                           tblptrl	equ	0xFF6
 46328                           tablat	equ	0xFF5
 46329                           prodh	equ	0xFF4
 46330                           prodl	equ	0xFF3
 46331                           intcon	equ	0xFF2
 46332                           indf0	equ	0xFEF
 46333                           postinc0	equ	0xFEE
 46334                           fsr0h	equ	0xFEA
 46335                           fsr0l	equ	0xFE9
 46336                           wreg	equ	0xFE8
 46337                           indf1	equ	0xFE7
 46338                           postdec1	equ	0xFE5
 46339                           plusw1	equ	0xFE3
 46340                           fsr1h	equ	0xFE2
 46341                           fsr1l	equ	0xFE1
 46342                           bsr	equ	0xFE0
 46343                           indf2	equ	0xFDF
 46344                           postinc2	equ	0xFDE
 46345                           postdec2	equ	0xFDD
 46346                           plusw2	equ	0xFDB
 46347                           fsr2h	equ	0xFDA
 46348                           fsr2l	equ	0xFD9
 46349                           status	equ	0xFD8
 46350                           
 46351 ;; *************** function i2_writeDoubleToEEPROM *****************
 46352 ;; Defined at:
 46353 ;;		line 6 in file "double_to_EEPROM.c"
 46354 ;; Parameters:    Size  Location     Type
 46355 ;;  input_double    4    4[COMRAM] void 
 46356 ;;  starting_add    2    8[COMRAM] unsigned int 
 46357 ;; Auto vars:     Size  Location     Type
 46358 ;;  writeDoubleT    4   10[COMRAM] struct .
 46359 ;;  writeDoubleT    2   14[COMRAM] int 
 46360 ;; Return value:  Size  Location     Type
 46361 ;;                  1    wreg      void 
 46362 ;; Registers used:
 46363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 46364 ;; Tracked objects:
 46365 ;;		On entry : 0/0
 46366 ;;		On exit  : 0/0
 46367 ;;		Unchanged: 0/0
 46368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46369 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46370 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46372 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46373 ;;Total ram usage:       12 bytes
 46374 ;; Hardware stack levels used:    1
 46375 ;; Hardware stack levels required when called:    1
 46376 ;; This function calls:
 46377 ;;		i2_DATAEE_WriteByte
 46378 ;; This function is called by:
 46379 ;;		_HLVD_ISR
 46380 ;;		_writeEnergyToEEPROMCallback
 46381 ;; This function uses a non-reentrant model
 46382 ;;
 46383                           
 46384                           	psect	text157
 46385  01B0A8                     __ptext157:
 46386                           	opt stack 0
 46387  01B0A8                     i2_writeDoubleToEEPROM:
 46388                           	opt stack 6
 46389                           
 46390                           ;double_to_EEPROM.c: 9: double_bytes_t input_data;
 46391                           ;double_to_EEPROM.c: 10: input_data.double_t = input_double;
 46392                           
 46393                           ; BSR set to: 14
 46394                           ;incstack = 0
 46395  01B0A8  C005  F00B         	movff	i2writeDoubleToEEPROM@input_double,i2writeDoubleToEEPROM@input_data
 46396  01B0AC  C006  F00C         	movff	i2writeDoubleToEEPROM@input_double+1,i2writeDoubleToEEPROM@input_data+1
 46397  01B0B0  C007  F00D         	movff	i2writeDoubleToEEPROM@input_double+2,i2writeDoubleToEEPROM@input_data+2
 46398  01B0B4  C008  F00E         	movff	i2writeDoubleToEEPROM@input_double+3,i2writeDoubleToEEPROM@input_data+3
 46399                           
 46400                           ;double_to_EEPROM.c: 13: for (int byte_index = 0; byte_index < sizeof(double); byte_inde
      +                          x++) {
 46401  01B0B8  0E00               	movlw	0
 46402  01B0BA  6E10               	movwf	i2writeDoubleToEEPROM@byte_index+1,c
 46403  01B0BC  0E00               	movlw	0
 46404  01B0BE  6E0F               	movwf	i2writeDoubleToEEPROM@byte_index,c
 46405  01B0C0                     i2l12101:
 46406  01B0C0  5010               	movf	i2writeDoubleToEEPROM@byte_index+1,w,c
 46407  01B0C2  E117               	bnz	i2l1855
 46408  01B0C4  0E04               	movlw	4
 46409  01B0C6  5C0F               	subwf	i2writeDoubleToEEPROM@byte_index,w,c
 46410  01B0C8  B0D8               	btfsc	status,0,c
 46411  01B0CA  0012               	return	
 46412                           
 46413                           ;double_to_EEPROM.c: 15: DATAEE_WriteByte((starting_address + byte_index), input_data.by
      +                          te_array_t[byte_index]);
 46414  01B0CC  5009               	movf	i2writeDoubleToEEPROM@starting_address,w,c
 46415  01B0CE  240F               	addwf	i2writeDoubleToEEPROM@byte_index,w,c
 46416  01B0D0  6E01               	movwf	i2DATAEE_WriteByte@bAdd,c
 46417  01B0D2  500A               	movf	i2writeDoubleToEEPROM@starting_address+1,w,c
 46418  01B0D4  2010               	addwfc	i2writeDoubleToEEPROM@byte_index+1,w,c
 46419  01B0D6  6E02               	movwf	i2DATAEE_WriteByte@bAdd+1,c
 46420  01B0D8  0E0B               	movlw	low i2writeDoubleToEEPROM@input_data
 46421  01B0DA  240F               	addwf	i2writeDoubleToEEPROM@byte_index,w,c
 46422  01B0DC  6ED9               	movwf	fsr2l,c
 46423  01B0DE  0E00               	movlw	high i2writeDoubleToEEPROM@input_data
 46424  01B0E0  2010               	addwfc	i2writeDoubleToEEPROM@byte_index+1,w,c
 46425  01B0E2  6EDA               	movwf	fsr2h,c
 46426  01B0E4  50DF               	movf	indf2,w,c
 46427  01B0E6  6E03               	movwf	i2DATAEE_WriteByte@bData,c
 46428  01B0E8  EC93  F0DB         	call	i2_DATAEE_WriteByte	;wreg free
 46429  01B0EC  4A0F               	infsnz	i2writeDoubleToEEPROM@byte_index,f,c
 46430  01B0EE  2A10               	incf	i2writeDoubleToEEPROM@byte_index+1,f,c
 46431  01B0F0  D7E7               	goto	i2l12101
 46432  01B0F2                     i2l1855:
 46433  01B0F2  0012               	return		;funcret
 46434  01B0F4                     __end_ofi2_writeDoubleToEEPROM:
 46435                           	opt stack 0
 46436                           tosu	equ	0xFFF
 46437                           tosh	equ	0xFFE
 46438                           tosl	equ	0xFFD
 46439                           pclatu	equ	0xFFB
 46440                           pclath	equ	0xFFA
 46441                           tblptru	equ	0xFF8
 46442                           tblptrh	equ	0xFF7
 46443                           tblptrl	equ	0xFF6
 46444                           tablat	equ	0xFF5
 46445                           prodh	equ	0xFF4
 46446                           prodl	equ	0xFF3
 46447                           intcon	equ	0xFF2
 46448                           indf0	equ	0xFEF
 46449                           postinc0	equ	0xFEE
 46450                           fsr0h	equ	0xFEA
 46451                           fsr0l	equ	0xFE9
 46452                           wreg	equ	0xFE8
 46453                           indf1	equ	0xFE7
 46454                           postdec1	equ	0xFE5
 46455                           plusw1	equ	0xFE3
 46456                           fsr1h	equ	0xFE2
 46457                           fsr1l	equ	0xFE1
 46458                           bsr	equ	0xFE0
 46459                           indf2	equ	0xFDF
 46460                           postinc2	equ	0xFDE
 46461                           postdec2	equ	0xFDD
 46462                           plusw2	equ	0xFDB
 46463                           fsr2h	equ	0xFDA
 46464                           fsr2l	equ	0xFD9
 46465                           status	equ	0xFD8
 46466                           
 46467 ;; *************** function i2_DATAEE_WriteByte *****************
 46468 ;; Defined at:
 46469 ;;		line 168 in file "mcc_generated_files/memory.c"
 46470 ;; Parameters:    Size  Location     Type
 46471 ;;  bAdd            2    0[COMRAM] unsigned int 
 46472 ;;  bData           1    2[COMRAM] unsigned char 
 46473 ;; Auto vars:     Size  Location     Type
 46474 ;;  DATAEE_Write    1    3[COMRAM] unsigned char 
 46475 ;; Return value:  Size  Location     Type
 46476 ;;                  1    wreg      void 
 46477 ;; Registers used:
 46478 ;;		wreg, status,2, status,0
 46479 ;; Tracked objects:
 46480 ;;		On entry : 0/0
 46481 ;;		On exit  : 0/0
 46482 ;;		Unchanged: 0/0
 46483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46484 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46487 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46488 ;;Total ram usage:        4 bytes
 46489 ;; Hardware stack levels used:    1
 46490 ;; This function calls:
 46491 ;;		Nothing
 46492 ;; This function is called by:
 46493 ;;		i2_writeDoubleToEEPROM
 46494 ;; This function uses a non-reentrant model
 46495 ;;
 46496                           
 46497                           	psect	text158
 46498  01B726                     __ptext158:
 46499                           	opt stack 0
 46500  01B726                     i2_DATAEE_WriteByte:
 46501                           	opt stack 6
 46502                           
 46503                           ;memory.c: 170: uint8_t GIEBitValue = INTCONbits.GIE;
 46504                           
 46505                           ;incstack = 0
 46506  01B726  0E00               	movlw	0
 46507  01B728  BEF2               	btfsc	intcon,7,c	;volatile
 46508  01B72A  0E01               	movlw	1
 46509  01B72C  6E04               	movwf	i2DATAEE_WriteByte@GIEBitValue,c
 46510                           
 46511                           ;memory.c: 172: NVMADRH = ((bAdd >> 8) & 0x03);
 46512  01B72E  5002               	movf	i2DATAEE_WriteByte@bAdd+1,w,c
 46513  01B730  0B03               	andlw	3
 46514  01B732  6E75               	movwf	3957,c	;volatile
 46515                           
 46516                           ;memory.c: 173: NVMADRL = (bAdd & 0xFF);
 46517  01B734  C001  FF74         	movff	i2DATAEE_WriteByte@bAdd,3956	;volatile
 46518                           
 46519                           ;memory.c: 174: NVMDAT = bData;
 46520  01B738  C003  FF76         	movff	i2DATAEE_WriteByte@bData,3958	;volatile
 46521                           
 46522                           ;memory.c: 175: NVMCON1bits.NVMREG = 0;
 46523  01B73C  0E3F               	movlw	-193
 46524  01B73E  1677               	andwf	3959,f,c	;volsfr
 46525                           
 46526                           ;memory.c: 176: NVMCON1bits.WREN = 1;
 46527  01B740  8477               	bsf	3959,2,c	;volsfr
 46528                           
 46529                           ;memory.c: 177: INTCONbits.GIE = 0;
 46530  01B742  9EF2               	bcf	intcon,7,c	;volatile
 46531                           
 46532                           ;memory.c: 178: NVMCON2 = 0x55;
 46533  01B744  0E55               	movlw	85
 46534  01B746  6E78               	movwf	3960,c	;volsfr
 46535                           
 46536                           ;memory.c: 179: NVMCON2 = 0xAA;
 46537  01B748  0EAA               	movlw	170
 46538  01B74A  6E78               	movwf	3960,c	;volsfr
 46539                           
 46540                           ;memory.c: 180: NVMCON1bits.WR = 1;
 46541  01B74C  8277               	bsf	3959,1,c	;volsfr
 46542  01B74E                     
 46543                           ;memory.c: 183: {
 46544  01B74E  B277               	btfsc	3959,1,c	;volsfr
 46545  01B750  D7FE               	goto	i2l843
 46546                           
 46547                           ;memory.c: 184: }
 46548                           ;memory.c: 186: NVMCON1bits.WREN = 0;
 46549  01B752  9477               	bcf	3959,2,c	;volsfr
 46550                           
 46551                           ;memory.c: 187: INTCONbits.GIE = GIEBitValue;
 46552  01B754  B004               	btfsc	i2DATAEE_WriteByte@GIEBitValue,0,c
 46553  01B756  D002               	bra	i2u1339_45
 46554  01B758  9EF2               	bcf	intcon,7,c	;volatile
 46555  01B75A  D001               	bra	i2u1339_46
 46556  01B75C                     i2u1339_45:
 46557  01B75C  8EF2               	bsf	intcon,7,c	;volatile
 46558  01B75E                     i2u1339_46:
 46559  01B75E  0012               	return		;funcret
 46560  01B760                     __end_ofi2_DATAEE_WriteByte:
 46561                           	opt stack 0
 46562                           tosu	equ	0xFFF
 46563                           tosh	equ	0xFFE
 46564                           tosl	equ	0xFFD
 46565                           pclatu	equ	0xFFB
 46566                           pclath	equ	0xFFA
 46567                           tblptru	equ	0xFF8
 46568                           tblptrh	equ	0xFF7
 46569                           tblptrl	equ	0xFF6
 46570                           tablat	equ	0xFF5
 46571                           prodh	equ	0xFF4
 46572                           prodl	equ	0xFF3
 46573                           intcon	equ	0xFF2
 46574                           indf0	equ	0xFEF
 46575                           postinc0	equ	0xFEE
 46576                           fsr0h	equ	0xFEA
 46577                           fsr0l	equ	0xFE9
 46578                           wreg	equ	0xFE8
 46579                           indf1	equ	0xFE7
 46580                           postdec1	equ	0xFE5
 46581                           plusw1	equ	0xFE3
 46582                           fsr1h	equ	0xFE2
 46583                           fsr1l	equ	0xFE1
 46584                           bsr	equ	0xFE0
 46585                           indf2	equ	0xFDF
 46586                           postinc2	equ	0xFDE
 46587                           postdec2	equ	0xFDD
 46588                           plusw2	equ	0xFDB
 46589                           fsr2h	equ	0xFDA
 46590                           fsr2l	equ	0xFD9
 46591                           status	equ	0xFD8
 46592                           
 46593 ;; *************** function _EUSART2_Receive_ISR *****************
 46594 ;; Defined at:
 46595 ;;		line 209 in file "mcc_generated_files/eusart2.c"
 46596 ;; Parameters:    Size  Location     Type
 46597 ;;		None
 46598 ;; Auto vars:     Size  Location     Type
 46599 ;;		None
 46600 ;; Return value:  Size  Location     Type
 46601 ;;                  1    wreg      void 
 46602 ;; Registers used:
 46603 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46604 ;; Tracked objects:
 46605 ;;		On entry : 0/0
 46606 ;;		On exit  : 0/0
 46607 ;;		Unchanged: 0/0
 46608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46613 ;;Total ram usage:        0 bytes
 46614 ;; Hardware stack levels used:    1
 46615 ;; Hardware stack levels required when called:    4
 46616 ;; This function calls:
 46617 ;;		i2_printf
 46618 ;; This function is called by:
 46619 ;;		_EUSART2_Initialize
 46620 ;;		_INTERRUPT_InterruptManagerHigh
 46621 ;; This function uses a non-reentrant model
 46622 ;;
 46623                           
 46624                           	psect	text159
 46625  019DBA                     __ptext159:
 46626                           	opt stack 0
 46627  019DBA                     _EUSART2_Receive_ISR:
 46628                           	opt stack 6
 46629                           
 46630                           ;eusart2.c: 212: if(1 == RC2STAbits.OERR)
 46631                           
 46632                           ;incstack = 0
 46633  019DBA  010E               	movlb	14	; () banked
 46634  019DBC  A3F5               	btfss	245,1,b	;volatile
 46635  019DBE  D005               	goto	i2l457
 46636                           
 46637                           ; BSR set to: 14
 46638                           ;eusart2.c: 213: {
 46639                           ;eusart2.c: 216: RC2STAbits.CREN = 0;
 46640  019DC0  99F5               	bcf	245,4,b	;volatile
 46641                           
 46642                           ;eusart2.c: 217: RC2STAbits.CREN = 1;
 46643  019DC2  89F5               	bsf	245,4,b	;volatile
 46644                           
 46645                           ; BSR set to: 14
 46646                           ;eusart2.c: 218: error_handler.USB_UART_COMM_error_flag = 1;
 46647  019DC4  0E01               	movlw	1
 46648  019DC6  0101               	movlb	1	; () banked
 46649  019DC8  6F68               	movwf	(_error_handler+8)& (0+255),b
 46650  019DCA                     i2l457:
 46651                           
 46652                           ;eusart2.c: 219: }
 46653                           ;eusart2.c: 222: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 46654                           
 46655                           ; BSR set to: 1
 46656  019DCA  0100               	movlb	0	; () banked
 46657  019DCC  51F4               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 46658  019DCE  0D01               	mullw	1
 46659  019DD0  0E00               	movlw	low _eusart2RxBuffer
 46660  019DD2  24F3               	addwf	prodl,w,c
 46661  019DD4  6ED9               	movwf	fsr2l,c
 46662  019DD6  0E03               	movlw	high _eusart2RxBuffer
 46663  019DD8  20F4               	addwfc	prodh,w,c
 46664  019DDA  6EDA               	movwf	fsr2h,c
 46665  019DDC  CEF1 FFDF          	movff	3825,indf2	;volatile
 46666                           
 46667                           ; BSR set to: 0
 46668  019DE0  2BF4               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 46669                           
 46670                           ; BSR set to: 0
 46671                           ;eusart2.c: 223: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 46672  019DE2  0E3F               	movlw	63
 46673  019DE4  65F4               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 46674  019DE6  D002               	goto	i2l458
 46675                           
 46676                           ; BSR set to: 0
 46677                           ;eusart2.c: 224: {
 46678                           ;eusart2.c: 225: eusart2RxHead = 0;
 46679  019DE8  0E00               	movlw	0
 46680  019DEA  6FF4               	movwf	_eusart2RxHead& (0+255),b	;volatile
 46681  019DEC                     i2l458:
 46682                           
 46683                           ; BSR set to: 0
 46684                           ;eusart2.c: 226: }
 46685                           ;eusart2.c: 227: eusart2RxCount++;
 46686                           
 46687                           ; BSR set to: 0
 46688  019DEC  0101               	movlb	1	; () banked
 46689  019DEE  2BA2               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 46690                           
 46691                           ; BSR set to: 1
 46692                           ;eusart2.c: 233: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 46693  019DF0  0E0A               	movlw	10
 46694  019DF2  010E               	movlb	14	; () banked
 46695  019DF4  19F1               	xorwf	241,w,b	;volatile
 46696  019DF6  B4D8               	btfsc	status,2,c
 46697  019DF8  D004               	goto	i2u3689_40
 46698                           
 46699                           ; BSR set to: 14
 46700  019DFA  0E0D               	movlw	13
 46701  019DFC  19F1               	xorwf	241,w,b	;volatile
 46702  019DFE  A4D8               	btfss	status,2,c
 46703  019E00  D006               	goto	i2l459
 46704  019E02                     i2u3689_40:
 46705                           
 46706                           ; BSR set to: 14
 46707                           ;eusart2.c: 235: eusart2RxStringReady = 1;
 46708  019E02  0100               	movlb	0	; () banked
 46709  019E04  81FB               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 46710                           
 46711                           ; BSR set to: 0
 46712                           ;eusart2.c: 238: RC2REG = 0;
 46713  019E06  0E00               	movlw	0
 46714  019E08  010E               	movlb	14	; () banked
 46715  019E0A  6FF1               	movwf	241,b	;volatile
 46716                           
 46717                           ;eusart2.c: 240: }
 46718  019E0C  D002               	goto	i2l462
 46719  019E0E                     i2l459:
 46720                           
 46721                           ; BSR set to: 14
 46722                           ;eusart2.c: 242: else {
 46723                           ;eusart2.c: 244: eusart2RxStringReady = 0;
 46724  019E0E  0100               	movlb	0	; () banked
 46725  019E10  91FB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 46726  019E12                     i2l462:
 46727                           
 46728                           ;eusart2.c: 246: }
 46729                           ;eusart2.c: 249: if((RC2REG == (int) '\b')) {
 46730                           
 46731                           ; BSR set to: 0
 46732  019E12  0E08               	movlw	8
 46733  019E14  010E               	movlb	14	; () banked
 46734  019E16  19F1               	xorwf	241,w,b	;volatile
 46735  019E18  A4D8               	btfss	status,2,c
 46736  019E1A  0012               	return	
 46737                           
 46738                           ; BSR set to: 14
 46739                           ;eusart2.c: 251: eusart2RxBuffer[eusart2RxHead] = '\0';
 46740  019E1C  0100               	movlb	0	; () banked
 46741  019E1E  51F4               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 46742  019E20  0D01               	mullw	1
 46743  019E22  0E00               	movlw	low _eusart2RxBuffer
 46744  019E24  24F3               	addwf	prodl,w,c
 46745  019E26  6ED9               	movwf	fsr2l,c
 46746  019E28  0E03               	movlw	high _eusart2RxBuffer
 46747  019E2A  20F4               	addwfc	prodh,w,c
 46748  019E2C  6EDA               	movwf	fsr2h,c
 46749  019E2E  0E00               	movlw	0
 46750  019E30  6EDF               	movwf	indf2,c
 46751                           
 46752                           ; BSR set to: 0
 46753                           ;eusart2.c: 252: eusart2RxHead--;
 46754  019E32  07F4               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 46755                           
 46756                           ; BSR set to: 0
 46757                           ;eusart2.c: 255: printf("\033[K");
 46758  019E34  0EC8               	movlw	low STR_1
 46759  019E36  6FB2               	movwf	i2printf@f& (0+255),b
 46760  019E38  0EFF               	movlw	high STR_1
 46761  019E3A  6FB3               	movwf	(i2printf@f+1)& (0+255),b
 46762  019E3C  EC57  F0DB         	call	i2_printf	;wreg free
 46763                           
 46764                           ;eusart2.c: 257: if(eusart2RxHead != eusart2RxTail) {
 46765  019E40  0101               	movlb	1	; () banked
 46766  019E42  51A3               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 46767  019E44  0100               	movlb	0	; () banked
 46768  019E46  19F4               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 46769  019E48  B4D8               	btfsc	status,2,c
 46770  019E4A  D00B               	goto	i2l464
 46771                           
 46772                           ; BSR set to: 0
 46773                           ;eusart2.c: 259: eusart2RxBuffer[eusart2RxHead] = '\0';
 46774  019E4C  51F4               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 46775  019E4E  0D01               	mullw	1
 46776  019E50  0E00               	movlw	low _eusart2RxBuffer
 46777  019E52  24F3               	addwf	prodl,w,c
 46778  019E54  6ED9               	movwf	fsr2l,c
 46779  019E56  0E03               	movlw	high _eusart2RxBuffer
 46780  019E58  20F4               	addwfc	prodh,w,c
 46781  019E5A  6EDA               	movwf	fsr2h,c
 46782  019E5C  0E00               	movlw	0
 46783  019E5E  6EDF               	movwf	indf2,c
 46784                           
 46785                           ; BSR set to: 0
 46786                           ;eusart2.c: 260: eusart2RxHead--;
 46787  019E60  07F4               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 46788  019E62                     i2l464:
 46789                           
 46790                           ; BSR set to: 0
 46791                           ;eusart2.c: 262: }
 46792                           ;eusart2.c: 264: RC2REG = 0;
 46793                           
 46794                           ; BSR set to: 0
 46795  019E62  0E00               	movlw	0
 46796  019E64  010E               	movlb	14	; () banked
 46797  019E66  6FF1               	movwf	241,b	;volatile
 46798  019E68  0012               	return	
 46799  019E6A                     __end_of_EUSART2_Receive_ISR:
 46800                           	opt stack 0
 46801                           tosu	equ	0xFFF
 46802                           tosh	equ	0xFFE
 46803                           tosl	equ	0xFFD
 46804                           pclatu	equ	0xFFB
 46805                           pclath	equ	0xFFA
 46806                           tblptru	equ	0xFF8
 46807                           tblptrh	equ	0xFF7
 46808                           tblptrl	equ	0xFF6
 46809                           tablat	equ	0xFF5
 46810                           prodh	equ	0xFF4
 46811                           prodl	equ	0xFF3
 46812                           intcon	equ	0xFF2
 46813                           indf0	equ	0xFEF
 46814                           postinc0	equ	0xFEE
 46815                           fsr0h	equ	0xFEA
 46816                           fsr0l	equ	0xFE9
 46817                           wreg	equ	0xFE8
 46818                           indf1	equ	0xFE7
 46819                           postdec1	equ	0xFE5
 46820                           plusw1	equ	0xFE3
 46821                           fsr1h	equ	0xFE2
 46822                           fsr1l	equ	0xFE1
 46823                           bsr	equ	0xFE0
 46824                           indf2	equ	0xFDF
 46825                           postinc2	equ	0xFDE
 46826                           postdec2	equ	0xFDD
 46827                           plusw2	equ	0xFDB
 46828                           fsr2h	equ	0xFDA
 46829                           fsr2l	equ	0xFD9
 46830                           status	equ	0xFD8
 46831                           
 46832 ;; *************** function i2_printf *****************
 46833 ;; Defined at:
 46834 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\printf.c"
 46835 ;; Parameters:    Size  Location     Type
 46836 ;;  f               2   82[BANK0 ] PTR const unsigned char 
 46837 ;;		 -> STR_188(13), STR_187(31), STR_186(26), STR_185(28), 
 46838 ;;		 -> STR_184(426), STR_182(30), STR_181(46), STR_180(39), 
 46839 ;;		 -> STR_179(62), STR_178(55), STR_177(470), STR_175(3086), 
 46840 ;;		 -> STR_173(492), STR_171(748), STR_169(720), STR_167(974), 
 46841 ;;		 -> STR_165(54), STR_163(54), STR_161(45), STR_159(51), 
 46842 ;;		 -> STR_157(52), STR_155(46), STR_153(51), STR_151(53), 
 46843 ;;		 -> STR_149(58), STR_147(71), STR_146(63), STR_145(37), 
 46844 ;;		 -> STR_144(46), STR_143(102), STR_142(86), STR_140(25), 
 46845 ;;		 -> STR_138(42), STR_137(53), STR_136(31), STR_134(29), 
 46846 ;;		 -> STR_133(28), STR_131(42), STR_129(41), STR_127(34), 
 46847 ;;		 -> STR_125(53), STR_124(52), STR_123(105), STR_122(105), 
 46848 ;;		 -> STR_120(59), STR_118(73), STR_116(56), STR_114(34), 
 46849 ;;		 -> STR_112(34), STR_110(32), STR_108(37), STR_106(58), 
 46850 ;;		 -> STR_104(36), STR_102(36), STR_100(37), STR_98(34), 
 46851 ;;		 -> STR_96(38), STR_95(60), STR_94(32), STR_93(23), 
 46852 ;;		 -> STR_92(65), STR_90(23), STR_88(27), STR_87(48), 
 46853 ;;		 -> STR_86(15), STR_85(13), STR_84(12), STR_83(11), 
 46854 ;;		 -> STR_82(10), STR_81(11), STR_80(24), STR_79(46), 
 46855 ;;		 -> STR_78(25), STR_76(54), STR_75(64), STR_73(59), 
 46856 ;;		 -> STR_71(85), STR_69(47), STR_68(17), STR_65(52), 
 46857 ;;		 -> STR_63(4), STR_62(5), STR_60(4), STR_59(5), 
 46858 ;;		 -> STR_57(3), terminal_textAttributes@output_buff(15), STR_27(4), STR_26(4), 
 46859 ;;		 -> STR_25(4), STR_24(4), STR_23(5), STR_22(3), 
 46860 ;;		 -> STR_21(372), STR_20(4), STR_19(5), STR_1(4), 
 46861 ;; Auto vars:     Size  Location     Type
 46862 ;;  printf          5   86[BANK0 ] struct __prbuf
 46863 ;;  printf          2   84[BANK0 ] PTR void [1]
 46864 ;;		 -> ?i2_printf(2), ?_sprintf(2), ?_printf(2), 
 46865 ;; Return value:  Size  Location     Type
 46866 ;;                  2   82[BANK0 ] int 
 46867 ;; Registers used:
 46868 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46869 ;; Tracked objects:
 46870 ;;		On entry : 0/0
 46871 ;;		On exit  : 0/0
 46872 ;;		Unchanged: 0/0
 46873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 46874 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46875 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46877 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46878 ;;Total ram usage:        9 bytes
 46879 ;; Hardware stack levels used:    1
 46880 ;; Hardware stack levels required when called:    3
 46881 ;; This function calls:
 46882 ;;		i2__doprnt
 46883 ;; This function is called by:
 46884 ;;		_EUSART2_Receive_ISR
 46885 ;; This function uses a non-reentrant model
 46886 ;;
 46887                           
 46888                           	psect	text160
 46889  01B6AE                     __ptext160:
 46890                           	opt stack 0
 46891  01B6AE                     i2_printf:
 46892                           	opt stack 6
 46893                           
 46894                           ; BSR set to: 14
 46895                           ;incstack = 0
 46896  01B6AE  0E00               	movlw	0
 46897  01B6B0  0100               	movlb	0	; () banked
 46898  01B6B2  6FB6               	movwf	i2printf@pb& (0+255),b
 46899  01B6B4  0E00               	movlw	0
 46900  01B6B6  6FB7               	movwf	(i2printf@pb+1)& (0+255),b
 46901  01B6B8  0EE6               	movlw	low i2_putch
 46902  01B6BA  6FB8               	movwf	(i2printf@pb+2)& (0+255),b
 46903  01B6BC  0EBF               	movlw	high i2_putch
 46904  01B6BE  6FB9               	movwf	(i2printf@pb+3)& (0+255),b
 46905  01B6C0  0E01               	movlw	low (i2_putch shr (0+16))
 46906  01B6C2  6FBA               	movwf	(i2printf@pb+4)& (0+255),b
 46907  01B6C4  0EB4               	movlw	low (?i2_printf+2)
 46908  01B6C6  6FB4               	movwf	i2printf@ap& (0+255),b
 46909  01B6C8  0E00               	movlw	high (?i2_printf+2)
 46910  01B6CA  6FB5               	movwf	(i2printf@ap+1)& (0+255),b
 46911                           
 46912                           ; BSR set to: 0
 46913                           ;	Return value of i2_printf is never used
 46914  01B6CC  0EB6               	movlw	low i2printf@pb
 46915  01B6CE  6F88               	movwf	i2__doprnt@pb& (0+255),b
 46916  01B6D0  0E00               	movlw	high i2printf@pb
 46917  01B6D2  6F89               	movwf	(i2__doprnt@pb+1)& (0+255),b
 46918  01B6D4  C0B2  F08A         	movff	i2printf@f,i2__doprnt@f
 46919  01B6D8  C0B3  F08B         	movff	i2printf@f+1,i2__doprnt@f+1
 46920  01B6DC  0EB4               	movlw	low i2printf@ap
 46921  01B6DE  6F8C               	movwf	i2__doprnt@ap& (0+255),b
 46922  01B6E0  0E00               	movlw	high i2printf@ap
 46923  01B6E2  6F8D               	movwf	(i2__doprnt@ap+1)& (0+255),b
 46924  01B6E4  EC1A  F096         	call	i2__doprnt	;wreg free
 46925  01B6E8  0012               	return	
 46926  01B6EA                     __end_ofi2_printf:
 46927                           	opt stack 0
 46928                           tosu	equ	0xFFF
 46929                           tosh	equ	0xFFE
 46930                           tosl	equ	0xFFD
 46931                           pclatu	equ	0xFFB
 46932                           pclath	equ	0xFFA
 46933                           tblptru	equ	0xFF8
 46934                           tblptrh	equ	0xFF7
 46935                           tblptrl	equ	0xFF6
 46936                           tablat	equ	0xFF5
 46937                           prodh	equ	0xFF4
 46938                           prodl	equ	0xFF3
 46939                           intcon	equ	0xFF2
 46940                           indf0	equ	0xFEF
 46941                           postinc0	equ	0xFEE
 46942                           fsr0h	equ	0xFEA
 46943                           fsr0l	equ	0xFE9
 46944                           wreg	equ	0xFE8
 46945                           indf1	equ	0xFE7
 46946                           postdec1	equ	0xFE5
 46947                           plusw1	equ	0xFE3
 46948                           fsr1h	equ	0xFE2
 46949                           fsr1l	equ	0xFE1
 46950                           bsr	equ	0xFE0
 46951                           indf2	equ	0xFDF
 46952                           postinc2	equ	0xFDE
 46953                           postdec2	equ	0xFDD
 46954                           plusw2	equ	0xFDB
 46955                           fsr2h	equ	0xFDA
 46956                           fsr2l	equ	0xFD9
 46957                           status	equ	0xFD8
 46958                           
 46959 ;; *************** function i2__doprnt *****************
 46960 ;; Defined at:
 46961 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 46962 ;; Parameters:    Size  Location     Type
 46963 ;;  pb              2   40[BANK0 ] PTR struct __prbuf
 46964 ;;		 -> sprintf@pb(5), printf@pb(5), 
 46965 ;;  f               2   42[BANK0 ] PTR const unsigned char 
 46966 ;;		 -> STR_216(11), STR_188(13), STR_187(31), STR_186(26), 
 46967 ;;		 -> STR_185(28), STR_184(426), STR_182(30), STR_181(46), 
 46968 ;;		 -> STR_180(39), STR_179(62), STR_178(55), STR_177(470), 
 46969 ;;		 -> STR_175(3086), STR_173(492), STR_171(748), STR_169(720), 
 46970 ;;		 -> STR_167(974), STR_165(54), STR_163(54), STR_161(45), 
 46971 ;;		 -> STR_159(51), STR_157(52), STR_155(46), STR_153(51), 
 46972 ;;		 -> STR_151(53), STR_149(58), STR_147(71), STR_146(63), 
 46973 ;;		 -> STR_145(37), STR_144(46), STR_143(102), STR_142(86), 
 46974 ;;		 -> STR_140(25), STR_138(42), STR_137(53), STR_136(31), 
 46975 ;;		 -> STR_134(29), STR_133(28), STR_131(42), STR_129(41), 
 46976 ;;		 -> STR_127(34), STR_125(53), STR_124(52), STR_123(105), 
 46977 ;;		 -> STR_122(105), STR_120(59), STR_118(73), STR_116(56), 
 46978 ;;		 -> STR_114(34), STR_112(34), STR_110(32), STR_108(37), 
 46979 ;;		 -> STR_106(58), STR_104(36), STR_102(36), STR_100(37), 
 46980 ;;		 -> STR_98(34), STR_96(38), STR_95(60), STR_94(32), 
 46981 ;;		 -> STR_93(23), STR_92(65), STR_90(23), STR_88(27), 
 46982 ;;		 -> STR_87(48), STR_86(15), STR_85(13), STR_84(12), 
 46983 ;;		 -> STR_83(11), STR_82(10), STR_81(11), STR_80(24), 
 46984 ;;		 -> STR_79(46), STR_78(25), STR_76(54), STR_75(64), 
 46985 ;;		 -> STR_73(59), STR_71(85), STR_69(47), STR_68(17), 
 46986 ;;		 -> STR_65(52), STR_63(4), STR_62(5), STR_60(4), 
 46987 ;;		 -> STR_59(5), STR_57(3), terminal_textAttributes@output_buff(15), STR_27(4), 
 46988 ;;		 -> STR_26(4), STR_25(4), STR_24(4), STR_23(5), 
 46989 ;;		 -> STR_22(3), STR_21(372), STR_20(4), STR_19(5), 
 46990 ;;		 -> STR_1(4), 
 46991 ;;  ap              2   44[BANK0 ] PTR PTR void 
 46992 ;;		 -> sprintf@ap(2), printf@ap(2), 
 46993 ;; Auto vars:     Size  Location     Type
 46994 ;;  _doprnt         4   71[BANK0 ] unsigned long 
 46995 ;;  _doprnt         4   67[BANK0 ] unsigned long 
 46996 ;;  _doprnt         4   63[BANK0 ] struct .
 46997 ;;  _doprnt         2   79[BANK0 ] int 
 46998 ;;  _doprnt         2   77[BANK0 ] unsigned short 
 46999 ;;  _doprnt         2   75[BANK0 ] int 
 47000 ;;  _doprnt         2   61[BANK0 ] int 
 47001 ;;  _doprnt         2   59[BANK0 ] unsigned int 
 47002 ;;  _doprnt         2   57[BANK0 ] PTR const unsigned char 
 47003 ;;		 -> ?_sprintf(2), ?_printf(2), ftoa@buf(17), STR_214(7), 
 47004 ;;		 -> _doprnt@c(1), STR_201(16), STR_200(22), STR_199(21), 
 47005 ;;		 -> STR_198(27), STR_197(41), STR_196(32), STR_195(19), 
 47006 ;;		 -> STR_194(16), STR_193(15), STR_192(16), STR_191(10), 
 47007 ;;		 -> STR_190(13), STR_189(12), TRIAC_Firing_Angle(4), NULL(0), 
 47008 ;;  _doprnt         1   81[BANK0 ] char 
 47009 ;;  _doprnt         1   56[BANK0 ] unsigned char 
 47010 ;;  _doprnt         1    0        unsigned char 
 47011 ;; Return value:  Size  Location     Type
 47012 ;;                  2   40[BANK0 ] int 
 47013 ;; Registers used:
 47014 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47015 ;; Tracked objects:
 47016 ;;		On entry : 0/0
 47017 ;;		On exit  : 0/0
 47018 ;;		Unchanged: 0/0
 47019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 47020 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47021 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47022 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47023 ;;      Totals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47024 ;;Total ram usage:       42 bytes
 47025 ;; Hardware stack levels used:    1
 47026 ;; Hardware stack levels required when called:    2
 47027 ;; This function calls:
 47028 ;;		Absolute function
 47029 ;;		i2___awdiv
 47030 ;;		i2___fladd
 47031 ;;		i2___flge
 47032 ;;		i2___flmul
 47033 ;;		i2___flneg
 47034 ;;		i2___flsub
 47035 ;;		i2___fltol
 47036 ;;		i2___lldiv
 47037 ;;		i2___llmod
 47038 ;;		i2___wmul
 47039 ;;		i2___xxtofl
 47040 ;;		i2__div_to_l_
 47041 ;;		i2__tdiv_to_l_
 47042 ;;		i2_fround
 47043 ;;		i2_isdigit
 47044 ;;		i2_putch
 47045 ;;		i2_scale
 47046 ;; This function is called by:
 47047 ;;		i2_printf
 47048 ;; This function uses a non-reentrant model
 47049 ;;
 47050                           
 47051                           	psect	text161
 47052  012C34                     __ptext161:
 47053                           	opt stack 0
 47054  012C34                     i2__doprnt:
 47055                           	opt stack 6
 47056                           
 47057                           ;doprnt.c: 499: signed char c;
 47058                           ;doprnt.c: 501: int width;
 47059                           ;doprnt.c: 504: int prec;
 47060                           ;doprnt.c: 508: unsigned short flag;
 47061                           ;doprnt.c: 515: char d;
 47062                           ;doprnt.c: 516: double fval;
 47063                           ;doprnt.c: 517: int exp;
 47064                           ;doprnt.c: 523: union {
 47065                           ;doprnt.c: 524: unsigned long vd;
 47066                           ;doprnt.c: 525: double integ;
 47067                           ;doprnt.c: 526: } tmpval;
 47068                           ;doprnt.c: 528: unsigned long val;
 47069                           ;doprnt.c: 529: unsigned len;
 47070                           ;doprnt.c: 530: const char * cp;
 47071                           ;doprnt.c: 536: while(c = *f++) {
 47072                           
 47073                           ;incstack = 0
 47074  012C34  EF79  F0A0         	goto	i2u3589_40
 47075  012C38                     
 47076                           ;doprnt.c: 538: if(c != '%')
 47077  012C38  0E25               	movlw	37
 47078  012C3A  0100               	movlb	0	; () banked
 47079  012C3C  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 47080  012C3E  B4D8               	btfsc	status,2,c
 47081  012C40  D036               	goto	i2l2101
 47082                           
 47083                           ; BSR set to: 0
 47084                           ;doprnt.c: 540: {
 47085                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 47086  012C42  EE20 F002          	lfsr	2,2
 47087  012C46  5188               	movf	i2__doprnt@pb& (0+255),w,b
 47088  012C48  26D9               	addwf	fsr2l,f,c
 47089  012C4A  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 47090  012C4C  22DA               	addwfc	fsr2h,f,c
 47091  012C4E  50DE               	movf	postinc2,w,c
 47092  012C50  10DE               	iorwf	postinc2,w,c
 47093  012C52  10DE               	iorwf	postinc2,w,c
 47094  012C54  B4D8               	btfsc	status,2,c
 47095  012C56  D014               	goto	i2l2102
 47096                           
 47097                           ; BSR set to: 0
 47098  012C58  EE20 F002          	lfsr	2,2
 47099  012C5C  5188               	movf	i2__doprnt@pb& (0+255),w,b
 47100  012C5E  26D9               	addwf	fsr2l,f,c
 47101  012C60  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 47102  012C62  22DA               	addwfc	fsr2h,f,c
 47103  012C64  D802               	call	i2u3479_48
 47104  012C66  EF79  F0A0         	goto	i2u3589_40
 47105  012C6A                     i2u3479_48:
 47106  012C6A  0005               	push	
 47107  012C6C  6EFA               	movwf	pclath,c
 47108  012C6E  50DE               	movf	postinc2,w,c
 47109  012C70  6EFD               	movwf	tosl,c
 47110  012C72  50DE               	movf	postinc2,w,c
 47111  012C74  6EFE               	movwf	tosh,c
 47112  012C76  50DE               	movf	postinc2,w,c
 47113  012C78  6EFF               	movwf	tosu,c
 47114  012C7A  50FA               	movf	pclath,w,c
 47115  012C7C  51B1               	movf	i2__doprnt@c& (0+255),w,b
 47116  012C7E  0012               	return		;indir
 47117  012C80                     i2l2102:
 47118  012C80  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 47119  012C84  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 47120  012C88  CFDE F08E          	movff	postinc2,??i2__doprnt
 47121  012C8C  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 47122  012C90  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 47123  012C94  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 47124  012C98  C0B1  FFDF         	movff	i2__doprnt@c,indf2
 47125  012C9C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 47126  012CA0  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 47127  012CA4  2ADE               	incf	postinc2,f,c
 47128  012CA6  0E00               	movlw	0
 47129  012CA8  22DD               	addwfc	postdec2,f,c
 47130                           
 47131                           ;doprnt.c: 542: continue;
 47132  012CAA  EF79  F0A0         	goto	i2u3589_40
 47133  012CAE                     i2l2101:
 47134                           
 47135                           ;doprnt.c: 543: }
 47136                           ;doprnt.c: 546: width = 0;
 47137  012CAE  0E00               	movlw	0
 47138  012CB0  0100               	movlb	0	; () banked
 47139  012CB2  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 47140  012CB4  0E00               	movlw	0
 47141  012CB6  6FAB               	movwf	i2__doprnt@width& (0+255),b
 47142                           
 47143                           ;doprnt.c: 548: flag = 0;
 47144  012CB8  0E00               	movlw	0
 47145  012CBA  6FAE               	movwf	(i2__doprnt@flag+1)& (0+255),b
 47146  012CBC  0E00               	movlw	0
 47147  012CBE  6FAD               	movwf	i2__doprnt@flag& (0+255),b
 47148                           
 47149                           ; BSR set to: 0
 47150                           ;doprnt.c: 551: switch(*f) {
 47151                           
 47152                           ;doprnt.c: 550: for(;;) {
 47153  012CC0  D004               	goto	i2l2105
 47154  012CC2                     
 47155                           ;doprnt.c: 580: flag |= 0x04;
 47156                           
 47157                           ; BSR set to: 0
 47158  012CC2  0100               	movlb	0	; () banked
 47159  012CC4  85AD               	bsf	i2__doprnt@flag& (0+255),2,b
 47160                           
 47161                           ;doprnt.c: 581: f++;
 47162  012CC6  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 47163  012CC8  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 47164  012CCA                     i2l2105:
 47165                           
 47166                           ; BSR set to: 0
 47167  012CCA  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 47168  012CCE  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 47169  012CD2  0E00               	movlw	low (__mediumconst shr (0+16))
 47170  012CD4  6EF8               	movwf	tblptru,c
 47171  012CD6  0E0D               	movlw	(high __ramtop+-1)
 47172  012CD8  64F7               	cpfsgt	tblptrh,c
 47173  012CDA  D003               	bra	i2u3480_47
 47174  012CDC  0008               	tblrd		*
 47175  012CDE  50F5               	movf	tablat,w,c
 47176  012CE0  D005               	bra	i2u3480_40
 47177  012CE2                     i2u3480_47:
 47178  012CE2  CFF6 FFE9          	movff	tblptrl,fsr0l
 47179  012CE6  CFF7 FFEA          	movff	tblptrh,fsr0h
 47180  012CEA  50EF               	movf	indf0,w,c
 47181  012CEC                     i2u3480_40:
 47182                           
 47183                           ; Switch size 1, requested type "space"
 47184                           ; Number of cases is 1, Range of values is 48 to 48
 47185                           ; switch strategies available:
 47186                           ; Name         Instructions Cycles
 47187                           ; simple_byte            4     3 (average)
 47188                           ;	Chosen strategy is simple_byte
 47189  012CEC  0A30               	xorlw	48	; case 48
 47190  012CEE  B4D8               	btfsc	status,2,c
 47191  012CF0  D7E8               	goto	i2l2106
 47192                           
 47193                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 47194                           
 47195                           ;doprnt.c: 586: }
 47196                           
 47197                           ;doprnt.c: 585: break;
 47198  012CF2  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 47199  012CF6  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 47200  012CFA  0E00               	movlw	low (__mediumconst shr (0+16))
 47201  012CFC  6EF8               	movwf	tblptru,c
 47202  012CFE  0E0D               	movlw	(high __ramtop+-1)
 47203  012D00  64F7               	cpfsgt	tblptrh,c
 47204  012D02  D003               	bra	i2u3481_47
 47205  012D04  0008               	tblrd		*
 47206  012D06  50F5               	movf	tablat,w,c
 47207  012D08  D005               	bra	i2u3481_40
 47208  012D0A                     i2u3481_47:
 47209  012D0A  CFF6 FFE9          	movff	tblptrl,fsr0l
 47210  012D0E  CFF7 FFEA          	movff	tblptrh,fsr0h
 47211  012D12  50EF               	movf	indf0,w,c
 47212  012D14                     i2u3481_40:
 47213  012D14  EC97  F0DE         	call	i2_isdigit
 47214  012D18  A0D8               	btfss	status,0,c
 47215  012D1A  D04B               	goto	i2u3485_40
 47216                           
 47217                           ;doprnt.c: 598: width = 0;
 47218  012D1C  0E00               	movlw	0
 47219  012D1E  0100               	movlb	0	; () banked
 47220  012D20  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 47221  012D22  0E00               	movlw	0
 47222  012D24  6FAB               	movwf	i2__doprnt@width& (0+255),b
 47223  012D26                     
 47224                           ;doprnt.c: 600: width *= 10;
 47225                           
 47226                           ; BSR set to: 0
 47227  012D26  C0AB  F001         	movff	i2__doprnt@width,i2___wmul@multiplier
 47228  012D2A  C0AC  F002         	movff	i2__doprnt@width+1,i2___wmul@multiplier+1
 47229  012D2E  0E00               	movlw	0
 47230  012D30  6E04               	movwf	i2___wmul@multiplicand+1,c
 47231  012D32  0E0A               	movlw	10
 47232  012D34  6E03               	movwf	i2___wmul@multiplicand,c
 47233  012D36  ECDC  F0DD         	call	i2___wmul	;wreg free
 47234  012D3A  C001  F0AB         	movff	?i2___wmul,i2__doprnt@width
 47235  012D3E  C002  F0AC         	movff	?i2___wmul+1,i2__doprnt@width+1
 47236                           
 47237                           ;doprnt.c: 601: width += *f++ - '0';
 47238  012D42  0ED0               	movlw	208
 47239  012D44  0100               	movlb	0	; () banked
 47240  012D46  6F8E               	movwf	??i2__doprnt& (0+255),b
 47241  012D48  0EFF               	movlw	255
 47242  012D4A  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 47243  012D4C  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 47244  012D50  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 47245  012D54  0E00               	movlw	low (__mediumconst shr (0+16))
 47246  012D56  6EF8               	movwf	tblptru,c
 47247  012D58  0E0D               	movlw	(high __ramtop+-1)
 47248  012D5A  64F7               	cpfsgt	tblptrh,c
 47249  012D5C  D003               	bra	i2u3483_47
 47250  012D5E  0008               	tblrd		*
 47251  012D60  50F5               	movf	tablat,w,c
 47252  012D62  D005               	bra	i2u3483_40
 47253  012D64                     i2u3483_47:
 47254  012D64  CFF6 FFE9          	movff	tblptrl,fsr0l
 47255  012D68  CFF7 FFEA          	movff	tblptrh,fsr0h
 47256  012D6C  50EF               	movf	indf0,w,c
 47257  012D6E                     i2u3483_40:
 47258  012D6E  0100               	movlb	0	; () banked
 47259  012D70  6F90               	movwf	(??i2__doprnt+2)& (0+255),b
 47260  012D72  6B91               	clrf	(??i2__doprnt+3)& (0+255),b
 47261  012D74  518E               	movf	??i2__doprnt& (0+255),w,b
 47262  012D76  2790               	addwf	(??i2__doprnt+2)& (0+255),f,b
 47263  012D78  518F               	movf	(??i2__doprnt+1)& (0+255),w,b
 47264  012D7A  2391               	addwfc	(??i2__doprnt+3)& (0+255),f,b
 47265  012D7C  5190               	movf	(??i2__doprnt+2)& (0+255),w,b
 47266  012D7E  27AB               	addwf	i2__doprnt@width& (0+255),f,b
 47267  012D80  5191               	movf	(??i2__doprnt+3)& (0+255),w,b
 47268  012D82  23AC               	addwfc	(i2__doprnt@width+1)& (0+255),f,b
 47269                           
 47270                           ; BSR set to: 0
 47271  012D84  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 47272  012D86  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 47273                           
 47274                           ; BSR set to: 0
 47275                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 47276  012D88  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 47277  012D8C  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 47278  012D90  0E00               	movlw	low (__mediumconst shr (0+16))
 47279  012D92  6EF8               	movwf	tblptru,c
 47280  012D94  0E0D               	movlw	(high __ramtop+-1)
 47281  012D96  64F7               	cpfsgt	tblptrh,c
 47282  012D98  D003               	bra	i2u3484_47
 47283  012D9A  0008               	tblrd		*
 47284  012D9C  50F5               	movf	tablat,w,c
 47285  012D9E  D005               	bra	i2u3484_40
 47286  012DA0                     i2u3484_47:
 47287  012DA0  CFF6 FFE9          	movff	tblptrl,fsr0l
 47288  012DA4  CFF7 FFEA          	movff	tblptrh,fsr0h
 47289  012DA8  50EF               	movf	indf0,w,c
 47290  012DAA                     i2u3484_40:
 47291  012DAA  EC97  F0DE         	call	i2_isdigit
 47292  012DAE  B0D8               	btfsc	status,0,c
 47293  012DB0  D7BA               	goto	i2l2111
 47294  012DB2                     i2u3485_40:
 47295                           
 47296                           ;doprnt.c: 608: }
 47297                           ;doprnt.c: 611: if(*f == '.') {
 47298  012DB2  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 47299  012DB6  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 47300  012DBA  0E00               	movlw	low (__mediumconst shr (0+16))
 47301  012DBC  6EF8               	movwf	tblptru,c
 47302  012DBE  0E0D               	movlw	(high __ramtop+-1)
 47303  012DC0  64F7               	cpfsgt	tblptrh,c
 47304  012DC2  D003               	bra	i2u3486_47
 47305  012DC4  0008               	tblrd		*
 47306  012DC6  50F5               	movf	tablat,w,c
 47307  012DC8  D005               	bra	i2u3486_40
 47308  012DCA                     i2u3486_47:
 47309  012DCA  CFF6 FFE9          	movff	tblptrl,fsr0l
 47310  012DCE  CFF7 FFEA          	movff	tblptrh,fsr0h
 47311  012DD2  50EF               	movf	indf0,w,c
 47312  012DD4                     i2u3486_40:
 47313  012DD4  0A2E               	xorlw	46
 47314  012DD6  A4D8               	btfss	status,2,c
 47315  012DD8  D048               	goto	i2l2113
 47316                           
 47317                           ;doprnt.c: 612: flag |= 0x4000;
 47318  012DDA  0100               	movlb	0	; () banked
 47319  012DDC  8DAE               	bsf	(i2__doprnt@flag+1)& (0+255),6,b
 47320                           
 47321                           ;doprnt.c: 613: f++;
 47322  012DDE  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 47323  012DE0  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 47324                           
 47325                           ; BSR set to: 0
 47326                           ;doprnt.c: 620: {
 47327                           ;doprnt.c: 621: prec = 0;
 47328  012DE2  0E00               	movlw	0
 47329  012DE4  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 47330  012DE6  0E00               	movlw	0
 47331  012DE8  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 47332                           
 47333                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 47334  012DEA  D029               	goto	i2l2114
 47335  012DEC                     
 47336                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 47337                           
 47338                           ; BSR set to: 0
 47339  012DEC  C0AF  F001         	movff	i2__doprnt@prec,i2___wmul@multiplier
 47340  012DF0  C0B0  F002         	movff	i2__doprnt@prec+1,i2___wmul@multiplier+1
 47341  012DF4  0E00               	movlw	0
 47342  012DF6  6E04               	movwf	i2___wmul@multiplicand+1,c
 47343  012DF8  0E0A               	movlw	10
 47344  012DFA  6E03               	movwf	i2___wmul@multiplicand,c
 47345  012DFC  ECDC  F0DD         	call	i2___wmul	;wreg free
 47346  012E00  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 47347  012E04  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 47348  012E08  0E00               	movlw	low (__mediumconst shr (0+16))
 47349  012E0A  6EF8               	movwf	tblptru,c
 47350  012E0C  0E0D               	movlw	(high __ramtop+-1)
 47351  012E0E  64F7               	cpfsgt	tblptrh,c
 47352  012E10  D003               	bra	i2u3488_47
 47353  012E12  0008               	tblrd		*
 47354  012E14  50F5               	movf	tablat,w,c
 47355  012E16  D005               	bra	i2u3488_40
 47356  012E18                     i2u3488_47:
 47357  012E18  CFF6 FFE9          	movff	tblptrl,fsr0l
 47358  012E1C  CFF7 FFEA          	movff	tblptrh,fsr0h
 47359  012E20  50EF               	movf	indf0,w,c
 47360  012E22                     i2u3488_40:
 47361  012E22  0100               	movlb	0	; () banked
 47362  012E24  6F8E               	movwf	??i2__doprnt& (0+255),b
 47363  012E26  518E               	movf	??i2__doprnt& (0+255),w,b
 47364  012E28  2601               	addwf	?i2___wmul,f,c
 47365  012E2A  0E00               	movlw	0
 47366  012E2C  2202               	addwfc	?i2___wmul+1,f,c
 47367  012E2E  0ED0               	movlw	208
 47368  012E30  2401               	addwf	?i2___wmul,w,c
 47369  012E32  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 47370  012E34  0EFF               	movlw	255
 47371  012E36  2002               	addwfc	?i2___wmul+1,w,c
 47372  012E38  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 47373                           
 47374                           ; BSR set to: 0
 47375  012E3A  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 47376  012E3C  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 47377  012E3E                     i2l2114:
 47378                           
 47379                           ; BSR set to: 0
 47380                           
 47381                           ; BSR set to: 0
 47382  012E3E  C08A  FFF6         	movff	i2__doprnt@f,tblptrl
 47383  012E42  C08B  FFF7         	movff	i2__doprnt@f+1,tblptrh
 47384  012E46  0E00               	movlw	low (__mediumconst shr (0+16))
 47385  012E48  6EF8               	movwf	tblptru,c
 47386  012E4A  0E0D               	movlw	(high __ramtop+-1)
 47387  012E4C  64F7               	cpfsgt	tblptrh,c
 47388  012E4E  D003               	bra	i2u3489_47
 47389  012E50  0008               	tblrd		*
 47390  012E52  50F5               	movf	tablat,w,c
 47391  012E54  D005               	bra	i2u3489_40
 47392  012E56                     i2u3489_47:
 47393  012E56  CFF6 FFE9          	movff	tblptrl,fsr0l
 47394  012E5A  CFF7 FFEA          	movff	tblptrh,fsr0h
 47395  012E5E  50EF               	movf	indf0,w,c
 47396  012E60                     i2u3489_40:
 47397  012E60  EC97  F0DE         	call	i2_isdigit
 47398  012E64  A0D8               	btfss	status,0,c
 47399  012E66  D12A               	goto	i2l2119
 47400  012E68  D7C1               	goto	i2l2115
 47401  012E6A                     i2l2113:
 47402                           
 47403                           ;doprnt.c: 626: prec = 0;
 47404  012E6A  0E00               	movlw	0
 47405  012E6C  0100               	movlb	0	; () banked
 47406  012E6E  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 47407  012E70  0E00               	movlw	0
 47408  012E72  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 47409                           
 47410                           ; BSR set to: 0
 47411                           ;doprnt.c: 628: flag |= 0x1000;
 47412  012E74  89AE               	bsf	(i2__doprnt@flag+1)& (0+255),4,b
 47413                           
 47414                           ; BSR set to: 0
 47415                           ;doprnt.c: 635: switch(c = *f++) {
 47416                           
 47417                           ;doprnt.c: 630: }
 47418                           ;doprnt.c: 633: loop:
 47419                           
 47420                           ; BSR set to: 0
 47421  012E76  D122               	goto	i2l2119
 47422  012E78                     
 47423                           ; BSR set to: 0
 47424                           ;doprnt.c: 643: flag |= 0x10;
 47425                           
 47426                           ; BSR set to: 0
 47427  012E78  89AD               	bsf	i2__doprnt@flag& (0+255),4,b
 47428                           
 47429                           ;doprnt.c: 644: goto loop;
 47430  012E7A  D120               	goto	i2l2119
 47431  012E7C                     
 47432                           ; BSR set to: 0
 47433                           ;doprnt.c: 663: flag |= 0x400;
 47434                           
 47435                           ; BSR set to: 0
 47436  012E7C  85AE               	bsf	(i2__doprnt@flag+1)& (0+255),2,b
 47437                           
 47438                           ; BSR set to: 0
 47439                           ;doprnt.c: 698: case 'i':
 47440                           ;doprnt.c: 699: break;
 47441                           
 47442                           ; BSR set to: 0
 47443                           
 47444                           ;doprnt.c: 697: case 'd':
 47445                           
 47446                           ;doprnt.c: 664: break;
 47447  012E7E  D159               	goto	i2l2124
 47448  012E80                     
 47449                           ; BSR set to: 0
 47450                           ;doprnt.c: 718: case 'x':
 47451                           ;doprnt.c: 721: flag |= 0x80;
 47452                           
 47453                           ; BSR set to: 0
 47454                           
 47455                           ; BSR set to: 0
 47456  012E80  8FAD               	bsf	i2__doprnt@flag& (0+255),7,b
 47457                           
 47458                           ;doprnt.c: 723: break;
 47459  012E82  D157               	goto	i2l2124
 47460  012E84                     
 47461                           ; BSR set to: 0
 47462                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 47463                           
 47464                           ; BSR set to: 0
 47465  012E84  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 47466  012E88  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 47467  012E8C  CFDF F08E          	movff	indf2,??i2__doprnt
 47468  012E90  0E02               	movlw	2
 47469  012E92  26DE               	addwf	postinc2,f,c
 47470  012E94  CFDF F08F          	movff	indf2,??i2__doprnt+1
 47471  012E98  0E00               	movlw	0
 47472  012E9A  22DD               	addwfc	postdec2,f,c
 47473  012E9C  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 47474  012EA0  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 47475  012EA4  CFDE F099          	movff	postinc2,i2__doprnt@cp
 47476  012EA8  CFDD F09A          	movff	postdec2,i2__doprnt@cp+1
 47477                           
 47478                           ; BSR set to: 0
 47479                           ;doprnt.c: 740: if(!cp)
 47480  012EAC  5199               	movf	i2__doprnt@cp& (0+255),w,b
 47481  012EAE  119A               	iorwf	(i2__doprnt@cp+1)& (0+255),w,b
 47482  012EB0  A4D8               	btfss	status,2,c
 47483  012EB2  D004               	goto	i2l2130
 47484                           
 47485                           ; BSR set to: 0
 47486                           ;doprnt.c: 741: cp = "(null)";
 47487  012EB4  0E95               	movlw	low STR_214
 47488  012EB6  6F99               	movwf	i2__doprnt@cp& (0+255),b
 47489  012EB8  0EFF               	movlw	high STR_214
 47490  012EBA  6F9A               	movwf	(i2__doprnt@cp+1)& (0+255),b
 47491  012EBC                     i2l2130:
 47492                           
 47493                           ; BSR set to: 0
 47494                           ;doprnt.c: 745: len = 0;
 47495                           
 47496                           ; BSR set to: 0
 47497  012EBC  0E00               	movlw	0
 47498  012EBE  6F9C               	movwf	(i2__doprnt@len+1)& (0+255),b
 47499  012EC0  0E00               	movlw	0
 47500  012EC2  6F9B               	movwf	i2__doprnt@len& (0+255),b
 47501                           
 47502                           ;doprnt.c: 746: while(cp[len])
 47503  012EC4  D003               	goto	i2l2131
 47504  012EC6                     
 47505                           ;doprnt.c: 747: len++;
 47506                           
 47507                           ; BSR set to: 0
 47508  012EC6  0100               	movlb	0	; () banked
 47509  012EC8  4B9B               	infsnz	i2__doprnt@len& (0+255),f,b
 47510  012ECA  2B9C               	incf	(i2__doprnt@len+1)& (0+255),f,b
 47511  012ECC                     i2l2131:
 47512                           
 47513                           ; BSR set to: 0
 47514                           
 47515                           ; BSR set to: 0
 47516  012ECC  519B               	movf	i2__doprnt@len& (0+255),w,b
 47517  012ECE  2599               	addwf	i2__doprnt@cp& (0+255),w,b
 47518  012ED0  6F8E               	movwf	??i2__doprnt& (0+255),b
 47519  012ED2  519C               	movf	(i2__doprnt@len+1)& (0+255),w,b
 47520  012ED4  219A               	addwfc	(i2__doprnt@cp+1)& (0+255),w,b
 47521  012ED6  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 47522  012ED8  C08E  FFF6         	movff	??i2__doprnt,tblptrl
 47523  012EDC  C08F  FFF7         	movff	??i2__doprnt+1,tblptrh
 47524  012EE0  0E00               	movlw	low (__mediumconst shr (0+16))
 47525  012EE2  6EF8               	movwf	tblptru,c
 47526  012EE4  0E0D               	movlw	(high __ramtop+-1)
 47527  012EE6  64F7               	cpfsgt	tblptrh,c
 47528  012EE8  D003               	bra	i2u3492_47
 47529  012EEA  0008               	tblrd		*
 47530  012EEC  50F5               	movf	tablat,w,c
 47531  012EEE  D005               	bra	i2u3492_40
 47532  012EF0                     i2u3492_47:
 47533  012EF0  CFF6 FFE9          	movff	tblptrl,fsr0l
 47534  012EF4  CFF7 FFEA          	movff	tblptrh,fsr0h
 47535  012EF8  50EF               	movf	indf0,w,c
 47536  012EFA                     i2u3492_40:
 47537  012EFA  0900               	iorlw	0
 47538  012EFC  A4D8               	btfss	status,2,c
 47539  012EFE  D7E3               	goto	i2l2132
 47540  012F00                     i2u3493_40:
 47541                           
 47542                           ;doprnt.c: 753: if(prec && prec < len)
 47543                           
 47544                           ;doprnt.c: 750: dostring:
 47545  012F00  0100               	movlb	0	; () banked
 47546  012F02  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 47547  012F04  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 47548  012F06  B4D8               	btfsc	status,2,c
 47549  012F08  D00A               	goto	i2l2135
 47550                           
 47551                           ; BSR set to: 0
 47552  012F0A  519B               	movf	i2__doprnt@len& (0+255),w,b
 47553  012F0C  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 47554  012F0E  519C               	movf	(i2__doprnt@len+1)& (0+255),w,b
 47555  012F10  59B0               	subwfb	(i2__doprnt@prec+1)& (0+255),w,b
 47556  012F12  B0D8               	btfsc	status,0,c
 47557  012F14  D004               	goto	i2l2135
 47558                           
 47559                           ; BSR set to: 0
 47560                           ;doprnt.c: 754: len = prec;
 47561  012F16  C0AF  F09B         	movff	i2__doprnt@prec,i2__doprnt@len
 47562  012F1A  C0B0  F09C         	movff	i2__doprnt@prec+1,i2__doprnt@len+1
 47563  012F1E                     i2l2135:
 47564                           
 47565                           ; BSR set to: 0
 47566                           ;doprnt.c: 757: if(width > len)
 47567                           
 47568                           ; BSR set to: 0
 47569  012F1E  51AB               	movf	i2__doprnt@width& (0+255),w,b
 47570  012F20  5D9B               	subwf	i2__doprnt@len& (0+255),w,b
 47571  012F22  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 47572  012F24  599C               	subwfb	(i2__doprnt@len+1)& (0+255),w,b
 47573  012F26  B0D8               	btfsc	status,0,c
 47574  012F28  D005               	goto	i2l2136
 47575                           
 47576                           ; BSR set to: 0
 47577                           ;doprnt.c: 758: width -= len;
 47578  012F2A  519B               	movf	i2__doprnt@len& (0+255),w,b
 47579  012F2C  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 47580  012F2E  519C               	movf	(i2__doprnt@len+1)& (0+255),w,b
 47581  012F30  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 47582  012F32  D038               	goto	i2l2141
 47583  012F34                     i2l2136:
 47584                           
 47585                           ; BSR set to: 0
 47586                           ;doprnt.c: 759: else
 47587                           ;doprnt.c: 760: width = 0;
 47588                           
 47589                           ; BSR set to: 0
 47590  012F34  0E00               	movlw	0
 47591  012F36  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 47592  012F38  0E00               	movlw	0
 47593  012F3A  6FAB               	movwf	i2__doprnt@width& (0+255),b
 47594                           
 47595                           ; BSR set to: 0
 47596                           ;doprnt.c: 764: while(width--)
 47597  012F3C  D033               	goto	i2l2141
 47598  012F3E                     i2l24667:
 47599                           
 47600                           ; BSR set to: 0
 47601                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 47602  012F3E  EE20 F002          	lfsr	2,2
 47603  012F42  5188               	movf	i2__doprnt@pb& (0+255),w,b
 47604  012F44  26D9               	addwf	fsr2l,f,c
 47605  012F46  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 47606  012F48  22DA               	addwfc	fsr2h,f,c
 47607  012F4A  50DE               	movf	postinc2,w,c
 47608  012F4C  10DE               	iorwf	postinc2,w,c
 47609  012F4E  10DE               	iorwf	postinc2,w,c
 47610  012F50  B4D8               	btfsc	status,2,c
 47611  012F52  D013               	goto	i2l2140
 47612                           
 47613                           ; BSR set to: 0
 47614  012F54  EE20 F002          	lfsr	2,2
 47615  012F58  5188               	movf	i2__doprnt@pb& (0+255),w,b
 47616  012F5A  26D9               	addwf	fsr2l,f,c
 47617  012F5C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 47618  012F5E  22DA               	addwfc	fsr2h,f,c
 47619  012F60  D801               	call	i2u3498_48
 47620  012F62  D020               	goto	i2l2141
 47621  012F64                     i2u3498_48:
 47622  012F64  0005               	push	
 47623  012F66  6EFA               	movwf	pclath,c
 47624  012F68  50DE               	movf	postinc2,w,c
 47625  012F6A  6EFD               	movwf	tosl,c
 47626  012F6C  50DE               	movf	postinc2,w,c
 47627  012F6E  6EFE               	movwf	tosh,c
 47628  012F70  50DE               	movf	postinc2,w,c
 47629  012F72  6EFF               	movwf	tosu,c
 47630  012F74  50FA               	movf	pclath,w,c
 47631  012F76  0E20               	movlw	32
 47632  012F78  0012               	return		;indir
 47633  012F7A                     i2l2140:
 47634  012F7A  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 47635  012F7E  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 47636  012F82  CFDE F08E          	movff	postinc2,??i2__doprnt
 47637  012F86  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 47638  012F8A  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 47639  012F8E  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 47640  012F92  0E20               	movlw	32
 47641  012F94  6EDF               	movwf	indf2,c
 47642  012F96  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 47643  012F9A  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 47644  012F9E  2ADE               	incf	postinc2,f,c
 47645  012FA0  0E00               	movlw	0
 47646  012FA2  22DD               	addwfc	postdec2,f,c
 47647  012FA4                     i2l2141:
 47648  012FA4  0100               	movlb	0	; () banked
 47649  012FA6  07AB               	decf	i2__doprnt@width& (0+255),f,b
 47650  012FA8  A0D8               	btfss	status,0,c
 47651  012FAA  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 47652  012FAC  29AB               	incf	i2__doprnt@width& (0+255),w,b
 47653  012FAE  E1C7               	bnz	i2l24667
 47654  012FB0  29AC               	incf	(i2__doprnt@width+1)& (0+255),w,b
 47655  012FB2  B4D8               	btfsc	status,2,c
 47656  012FB4  D05B               	goto	i2l2146
 47657  012FB6  D7C3               	goto	i2l2139
 47658  012FB8                     i2l24677:
 47659                           
 47660                           ; BSR set to: 0
 47661                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 47662  012FB8  EE20 F002          	lfsr	2,2
 47663  012FBC  5188               	movf	i2__doprnt@pb& (0+255),w,b
 47664  012FBE  26D9               	addwf	fsr2l,f,c
 47665  012FC0  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 47666  012FC2  22DA               	addwfc	fsr2h,f,c
 47667  012FC4  50DE               	movf	postinc2,w,c
 47668  012FC6  10DE               	iorwf	postinc2,w,c
 47669  012FC8  10DE               	iorwf	postinc2,w,c
 47670  012FCA  B4D8               	btfsc	status,2,c
 47671  012FCC  D027               	goto	i2l2145
 47672                           
 47673                           ; BSR set to: 0
 47674  012FCE  EE20 F002          	lfsr	2,2
 47675  012FD2  5188               	movf	i2__doprnt@pb& (0+255),w,b
 47676  012FD4  26D9               	addwf	fsr2l,f,c
 47677  012FD6  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 47678  012FD8  22DA               	addwfc	fsr2h,f,c
 47679  012FDA  D801               	call	i2u3501_48
 47680  012FDC  D01B               	goto	i2u3501_49
 47681  012FDE                     i2u3501_48:
 47682  012FDE  0005               	push	
 47683  012FE0  6EFA               	movwf	pclath,c
 47684  012FE2  50DE               	movf	postinc2,w,c
 47685  012FE4  6EFD               	movwf	tosl,c
 47686  012FE6  50DE               	movf	postinc2,w,c
 47687  012FE8  6EFE               	movwf	tosh,c
 47688  012FEA  50DE               	movf	postinc2,w,c
 47689  012FEC  6EFF               	movwf	tosu,c
 47690  012FEE  50FA               	movf	pclath,w,c
 47691  012FF0  C099  FFF6         	movff	i2__doprnt@cp,tblptrl
 47692  012FF4  C09A  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 47693  012FF8  0E00               	movlw	low (__mediumconst shr (0+16))
 47694  012FFA  6EF8               	movwf	tblptru,c
 47695  012FFC  0E0D               	movlw	(high __ramtop+-1)
 47696  012FFE  64F7               	cpfsgt	tblptrh,c
 47697  013000  D003               	bra	i2u3502_47
 47698  013002  0008               	tblrd		*
 47699  013004  50F5               	movf	tablat,w,c
 47700  013006  D005               	bra	i2u3502_40
 47701  013008                     i2u3502_47:
 47702  013008  CFF6 FFE9          	movff	tblptrl,fsr0l
 47703  01300C  CFF7 FFEA          	movff	tblptrh,fsr0h
 47704  013010  50EF               	movf	indf0,w,c
 47705  013012                     i2u3502_40:
 47706  013012  0012               	return		;indir
 47707  013014                     i2u3501_49:
 47708  013014  0100               	movlb	0	; () banked
 47709  013016  4B99               	infsnz	i2__doprnt@cp& (0+255),f,b
 47710  013018  2B9A               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 47711  01301A  D028               	goto	i2l2146
 47712  01301C                     i2l2145:
 47713                           
 47714                           ; BSR set to: 0
 47715                           
 47716                           ; BSR set to: 0
 47717  01301C  C099  FFF6         	movff	i2__doprnt@cp,tblptrl
 47718  013020  C09A  FFF7         	movff	i2__doprnt@cp+1,tblptrh
 47719  013024  0E00               	movlw	low (__mediumconst shr (0+16))
 47720  013026  6EF8               	movwf	tblptru,c
 47721  013028  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 47722  01302C  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 47723  013030  CFDE F08E          	movff	postinc2,??i2__doprnt
 47724  013034  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 47725  013038  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 47726  01303C  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 47727  013040  0E0D               	movlw	(high __ramtop+-1)
 47728  013042  64F7               	cpfsgt	tblptrh,c
 47729  013044  D003               	bra	i2u3503_47
 47730  013046  0008               	tblrd		*
 47731  013048  50F5               	movf	tablat,w,c
 47732  01304A  D005               	bra	i2u3503_40
 47733  01304C                     i2u3503_47:
 47734  01304C  CFF6 FFE9          	movff	tblptrl,fsr0l
 47735  013050  CFF7 FFEA          	movff	tblptrh,fsr0h
 47736  013054  50EF               	movf	indf0,w,c
 47737  013056                     i2u3503_40:
 47738  013056  6EDF               	movwf	indf2,c
 47739  013058  0100               	movlb	0	; () banked
 47740  01305A  4B99               	infsnz	i2__doprnt@cp& (0+255),f,b
 47741  01305C  2B9A               	incf	(i2__doprnt@cp+1)& (0+255),f,b
 47742                           
 47743                           ; BSR set to: 0
 47744  01305E  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 47745  013062  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 47746  013066  2ADE               	incf	postinc2,f,c
 47747  013068  0E00               	movlw	0
 47748  01306A  22DD               	addwfc	postdec2,f,c
 47749  01306C                     i2l2146:
 47750                           
 47751                           ; BSR set to: 0
 47752                           
 47753                           ; BSR set to: 0
 47754                           
 47755                           ; BSR set to: 0
 47756  01306C  079B               	decf	i2__doprnt@len& (0+255),f,b
 47757  01306E  A0D8               	btfss	status,0,c
 47758  013070  079C               	decf	(i2__doprnt@len+1)& (0+255),f,b
 47759  013072  299B               	incf	i2__doprnt@len& (0+255),w,b
 47760  013074  E1A1               	bnz	i2l24677
 47761  013076  299C               	incf	(i2__doprnt@len+1)& (0+255),w,b
 47762  013078  B4D8               	btfsc	status,2,c
 47763  01307A  EF79  F0A0         	goto	i2u3589_40
 47764  01307E  D79C               	goto	i2l2144
 47765  013080                     
 47766                           ; BSR set to: 0
 47767                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 47768                           
 47769                           ; BSR set to: 0
 47770  013080  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 47771  013084  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 47772  013088  CFDF F08E          	movff	indf2,??i2__doprnt
 47773  01308C  0E02               	movlw	2
 47774  01308E  26DE               	addwf	postinc2,f,c
 47775  013090  CFDF F08F          	movff	indf2,??i2__doprnt+1
 47776  013094  0E00               	movlw	0
 47777  013096  22DD               	addwfc	postdec2,f,c
 47778  013098  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 47779  01309C  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 47780  0130A0  50DF               	movf	indf2,w,c
 47781  0130A2  6FB1               	movwf	i2__doprnt@c& (0+255),b
 47782  0130A4                     
 47783                           ; BSR set to: 0
 47784                           ;doprnt.c: 805: cp = (char *)&c;
 47785                           
 47786                           ; BSR set to: 0
 47787  0130A4  0EB1               	movlw	low i2__doprnt@c
 47788  0130A6  6F99               	movwf	i2__doprnt@cp& (0+255),b
 47789  0130A8  0E00               	movlw	high i2__doprnt@c
 47790  0130AA  6F9A               	movwf	(i2__doprnt@cp+1)& (0+255),b
 47791                           
 47792                           ; BSR set to: 0
 47793                           ;doprnt.c: 806: len = 1;
 47794  0130AC  0E00               	movlw	0
 47795  0130AE  6F9C               	movwf	(i2__doprnt@len+1)& (0+255),b
 47796  0130B0  0E01               	movlw	1
 47797  0130B2  6F9B               	movwf	i2__doprnt@len& (0+255),b
 47798                           
 47799                           ;doprnt.c: 807: goto dostring;
 47800  0130B4  D725               	goto	i2u3493_40
 47801  0130B6                     
 47802                           ; BSR set to: 0
 47803                           ;doprnt.c: 818: flag |= 0xC0;
 47804                           
 47805                           ; BSR set to: 0
 47806  0130B6  0EC0               	movlw	192
 47807  0130B8  13AD               	iorwf	i2__doprnt@flag& (0+255),f,b
 47808                           
 47809                           ; BSR set to: 0
 47810                           ;doprnt.c: 822: }
 47811                           
 47812                           ;doprnt.c: 819: break;
 47813  0130BA  D03B               	goto	i2l2124
 47814  0130BC                     i2l2119:
 47815                           
 47816                           ; BSR set to: 0
 47817  0130BC  0100               	movlb	0	; () banked
 47818  0130BE  518A               	movf	i2__doprnt@f& (0+255),w,b
 47819  0130C0  6F8E               	movwf	??i2__doprnt& (0+255),b
 47820  0130C2  518B               	movf	(i2__doprnt@f+1)& (0+255),w,b
 47821  0130C4  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 47822  0130C6  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 47823  0130C8  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 47824  0130CA  C08E  FFF6         	movff	??i2__doprnt,tblptrl
 47825  0130CE  C08F  FFF7         	movff	??i2__doprnt+1,tblptrh
 47826  0130D2  0E00               	movlw	low (__mediumconst shr (0+16))
 47827  0130D4  6EF8               	movwf	tblptru,c
 47828  0130D6  0E0D               	movlw	(high __ramtop+-1)
 47829  0130D8  64F7               	cpfsgt	tblptrh,c
 47830  0130DA  D003               	bra	i2u3505_47
 47831  0130DC  0008               	tblrd		*
 47832  0130DE  50F5               	movf	tablat,w,c
 47833  0130E0  D005               	bra	i2u3505_40
 47834  0130E2                     i2u3505_47:
 47835  0130E2  CFF6 FFE9          	movff	tblptrl,fsr0l
 47836  0130E6  CFF7 FFEA          	movff	tblptrh,fsr0h
 47837  0130EA  50EF               	movf	indf0,w,c
 47838  0130EC                     i2u3505_40:
 47839  0130EC  0100               	movlb	0	; () banked
 47840  0130EE  6FB1               	movwf	i2__doprnt@c& (0+255),b
 47841  0130F0  51B1               	movf	i2__doprnt@c& (0+255),w,b
 47842                           
 47843                           ; Switch size 1, requested type "space"
 47844                           ; Number of cases is 10, Range of values is 0 to 120
 47845                           ; switch strategies available:
 47846                           ; Name         Instructions Cycles
 47847                           ; simple_byte           31    16 (average)
 47848                           ;	Chosen strategy is simple_byte
 47849  0130F2  0A00               	xorlw	0	; case 0
 47850  0130F4  B4D8               	btfsc	status,2,c
 47851  0130F6  EF97  F0A0         	goto	i2u3591_40
 47852  0130FA  0A58               	xorlw	88	; case 88
 47853  0130FC  B4D8               	btfsc	status,2,c
 47854  0130FE  D6C0               	goto	i2l2127
 47855  013100  0A3B               	xorlw	59	; case 99
 47856  013102  B4D8               	btfsc	status,2,c
 47857  013104  D7BD               	goto	i2l2148
 47858  013106  0A07               	xorlw	7	; case 100
 47859  013108  B4D8               	btfsc	status,2,c
 47860  01310A  D013               	goto	i2l2124
 47861  01310C  0A02               	xorlw	2	; case 102
 47862  01310E  B4D8               	btfsc	status,2,c
 47863  013110  D6B5               	goto	i2l2123
 47864  013112  0A0F               	xorlw	15	; case 105
 47865  013114  B4D8               	btfsc	status,2,c
 47866  013116  D00D               	goto	i2l2124
 47867  013118  0A05               	xorlw	5	; case 108
 47868  01311A  B4D8               	btfsc	status,2,c
 47869  01311C  D6AD               	goto	i2l2122
 47870  01311E  0A1F               	xorlw	31	; case 115
 47871  013120  B4D8               	btfsc	status,2,c
 47872  013122  D6B0               	goto	i2l2129
 47873  013124  0A06               	xorlw	6	; case 117
 47874  013126  B4D8               	btfsc	status,2,c
 47875  013128  D7C6               	goto	i2l2150
 47876  01312A  0A0D               	xorlw	13	; case 120
 47877  01312C  B4D8               	btfsc	status,2,c
 47878  01312E  D6A8               	goto	i2l2127
 47879  013130  D7B9               	goto	i2l2149
 47880  013132                     i2l2124:
 47881                           
 47882                           ; BSR set to: 0
 47883                           ;doprnt.c: 825: if(flag & (0x700)) {
 47884                           
 47885                           ; BSR set to: 0
 47886  013132  0E07               	movlw	7
 47887  013134  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 47888  013136  B4D8               	btfsc	status,2,c
 47889  013138  EF8E  F09D         	goto	i2l2151
 47890                           
 47891                           ; BSR set to: 0
 47892                           ;doprnt.c: 827: if(flag & 0x1000)
 47893  01313C  A9AE               	btfss	(i2__doprnt@flag+1)& (0+255),4,b
 47894  01313E  D004               	goto	i2l2152
 47895                           
 47896                           ; BSR set to: 0
 47897                           ;doprnt.c: 829: prec = 6;
 47898  013140  0E00               	movlw	0
 47899  013142  6FB0               	movwf	(i2__doprnt@prec+1)& (0+255),b
 47900  013144  0E06               	movlw	6
 47901  013146  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 47902  013148                     i2l2152:
 47903                           
 47904                           ; BSR set to: 0
 47905                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 47906                           
 47907                           ; BSR set to: 0
 47908  013148  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 47909  01314C  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 47910  013150  CFDF F08E          	movff	indf2,??i2__doprnt
 47911  013154  0E04               	movlw	4
 47912  013156  26DE               	addwf	postinc2,f,c
 47913  013158  CFDF F08F          	movff	indf2,??i2__doprnt+1
 47914  01315C  0E00               	movlw	0
 47915  01315E  22DD               	addwfc	postdec2,f,c
 47916  013160  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 47917  013164  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 47918  013168  CFDE F0A3          	movff	postinc2,i2__doprnt@fval
 47919  01316C  CFDE F0A4          	movff	postinc2,i2__doprnt@fval+1
 47920  013170  CFDE F0A5          	movff	postinc2,i2__doprnt@fval+2
 47921  013174  CFDE F0A6          	movff	postinc2,i2__doprnt@fval+3
 47922                           
 47923                           ; BSR set to: 0
 47924                           ;doprnt.c: 831: if(fval < 0.0) {
 47925  013178  AFA6               	btfss	(i2__doprnt@fval+3)& (0+255),7,b
 47926  01317A  D015               	goto	i2l2153
 47927                           
 47928                           ; BSR set to: 0
 47929                           ;doprnt.c: 832: fval = -fval;
 47930  01317C  C0A3  F02C         	movff	i2__doprnt@fval,i2___flneg@f1
 47931  013180  C0A4  F02D         	movff	i2__doprnt@fval+1,i2___flneg@f1+1
 47932  013184  C0A5  F02E         	movff	i2__doprnt@fval+2,i2___flneg@f1+2
 47933  013188  C0A6  F02F         	movff	i2__doprnt@fval+3,i2___flneg@f1+3
 47934  01318C  EC15  F0DD         	call	i2___flneg
 47935  013190  C02C  F0A3         	movff	?i2___flneg,i2__doprnt@fval
 47936  013194  C02D  F0A4         	movff	?i2___flneg+1,i2__doprnt@fval+1
 47937  013198  C02E  F0A5         	movff	?i2___flneg+2,i2__doprnt@fval+2
 47938  01319C  C02F  F0A6         	movff	?i2___flneg+3,i2__doprnt@fval+3
 47939                           
 47940                           ;doprnt.c: 833: flag |= 0x03;
 47941  0131A0  0E03               	movlw	3
 47942  0131A2  0100               	movlb	0	; () banked
 47943  0131A4  13AD               	iorwf	i2__doprnt@flag& (0+255),f,b
 47944  0131A6                     i2l2153:
 47945                           
 47946                           ; BSR set to: 0
 47947                           ;doprnt.c: 834: }
 47948                           ;doprnt.c: 835: exp = 0;
 47949                           
 47950                           ; BSR set to: 0
 47951  0131A6  0E00               	movlw	0
 47952  0131A8  6F9E               	movwf	(i2__doprnt@exp+1)& (0+255),b
 47953  0131AA  0E00               	movlw	0
 47954  0131AC  6F9D               	movwf	i2__doprnt@exp& (0+255),b
 47955                           
 47956                           ; BSR set to: 0
 47957                           ;doprnt.c: 836: if( fval!=0) {
 47958  0131AE  51A3               	movf	i2__doprnt@fval& (0+255),w,b
 47959  0131B0  11A4               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 47960  0131B2  11A5               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 47961  0131B4  11A6               	iorwf	(i2__doprnt@fval+3)& (0+255),w,b
 47962  0131B6  B4D8               	btfsc	status,2,c
 47963  0131B8  D082               	goto	i2l2158
 47964                           
 47965                           ; BSR set to: 0
 47966                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 47967  0131BA  35A5               	rlcf	(i2__doprnt@fval+2)& (0+255),w,b
 47968  0131BC  35A6               	rlcf	(i2__doprnt@fval+3)& (0+255),w,b
 47969  0131BE  0F82               	addlw	130
 47970  0131C0  6F9D               	movwf	i2__doprnt@exp& (0+255),b
 47971  0131C2  6B9E               	clrf	(i2__doprnt@exp+1)& (0+255),b
 47972  0131C4  0EFF               	movlw	255
 47973  0131C6  239E               	addwfc	(i2__doprnt@exp+1)& (0+255),f,b
 47974                           
 47975                           ; BSR set to: 0
 47976                           ;doprnt.c: 838: exp--;
 47977  0131C8  079D               	decf	i2__doprnt@exp& (0+255),f,b
 47978  0131CA  A0D8               	btfss	status,0,c
 47979  0131CC  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 47980                           
 47981                           ; BSR set to: 0
 47982                           ;doprnt.c: 839: exp *= 3;
 47983  0131CE  C09D  F001         	movff	i2__doprnt@exp,i2___wmul@multiplier
 47984  0131D2  C09E  F002         	movff	i2__doprnt@exp+1,i2___wmul@multiplier+1
 47985  0131D6  0E00               	movlw	0
 47986  0131D8  6E04               	movwf	i2___wmul@multiplicand+1,c
 47987  0131DA  0E03               	movlw	3
 47988  0131DC  6E03               	movwf	i2___wmul@multiplicand,c
 47989  0131DE  ECDC  F0DD         	call	i2___wmul	;wreg free
 47990  0131E2  C001  F09D         	movff	?i2___wmul,i2__doprnt@exp
 47991  0131E6  C002  F09E         	movff	?i2___wmul+1,i2__doprnt@exp+1
 47992                           
 47993                           ;doprnt.c: 840: exp /= 10;
 47994  0131EA  C09D  F007         	movff	i2__doprnt@exp,i2___awdiv@dividend
 47995  0131EE  C09E  F008         	movff	i2__doprnt@exp+1,i2___awdiv@dividend+1
 47996  0131F2  0E00               	movlw	0
 47997  0131F4  6E0A               	movwf	i2___awdiv@divisor+1,c
 47998  0131F6  0E0A               	movlw	10
 47999  0131F8  6E09               	movwf	i2___awdiv@divisor,c
 48000  0131FA  ECE9  F0D1         	call	i2___awdiv	;wreg free
 48001  0131FE  C007  F09D         	movff	?i2___awdiv,i2__doprnt@exp
 48002  013202  C008  F09E         	movff	?i2___awdiv+1,i2__doprnt@exp+1
 48003                           
 48004                           ;doprnt.c: 841: if(exp < 0)
 48005  013206  0100               	movlb	0	; () banked
 48006  013208  AF9E               	btfss	(i2__doprnt@exp+1)& (0+255),7,b
 48007  01320A  D003               	goto	i2l2155
 48008                           
 48009                           ; BSR set to: 0
 48010                           ;doprnt.c: 842: exp--;
 48011  01320C  079D               	decf	i2__doprnt@exp& (0+255),f,b
 48012  01320E  A0D8               	btfss	status,0,c
 48013  013210  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 48014  013212                     i2l2155:
 48015                           
 48016                           ; BSR set to: 0
 48017                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 48018                           
 48019                           ; BSR set to: 0
 48020  013212  519D               	movf	i2__doprnt@exp& (0+255),w,b
 48021  013214  0800               	sublw	0
 48022  013216  EC68  F0A8         	call	i2_scale
 48023  01321A  C049  F09F         	movff	?i2_scale,i2__doprnt@tmpval
 48024  01321E  C04A  F0A0         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 48025  013222  C04B  F0A1         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 48026  013226  C04C  F0A2         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 48027                           
 48028                           ;doprnt.c: 847: tmpval.integ *= fval;
 48029  01322A  C09F  F030         	movff	i2__doprnt@tmpval,i2___flmul@b
 48030  01322E  C0A0  F031         	movff	i2__doprnt@tmpval+1,i2___flmul@b+1
 48031  013232  C0A1  F032         	movff	i2__doprnt@tmpval+2,i2___flmul@b+2
 48032  013236  C0A2  F033         	movff	i2__doprnt@tmpval+3,i2___flmul@b+3
 48033  01323A  C0A3  F034         	movff	i2__doprnt@fval,i2___flmul@a
 48034  01323E  C0A4  F035         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 48035  013242  C0A5  F036         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 48036  013246  C0A6  F037         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 48037  01324A  EC05  F0AE         	call	i2___flmul	;wreg free
 48038  01324E  C030  F09F         	movff	?i2___flmul,i2__doprnt@tmpval
 48039  013252  C031  F0A0         	movff	?i2___flmul+1,i2__doprnt@tmpval+1
 48040  013256  C032  F0A1         	movff	?i2___flmul+2,i2__doprnt@tmpval+2
 48041  01325A  C033  F0A2         	movff	?i2___flmul+3,i2__doprnt@tmpval+3
 48042                           
 48043                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 48044  01325E  C09F  F034         	movff	i2__doprnt@tmpval,i2___flge@ff1
 48045  013262  C0A0  F035         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 48046  013266  C0A1  F036         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 48047  01326A  C0A2  F037         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 48048  01326E  0E00               	movlw	0
 48049  013270  6E38               	movwf	i2___flge@ff2,c
 48050  013272  0E00               	movlw	0
 48051  013274  6E39               	movwf	i2___flge@ff2+1,c
 48052  013276  0E80               	movlw	128
 48053  013278  6E3A               	movwf	i2___flge@ff2+2,c
 48054  01327A  0E3F               	movlw	63
 48055  01327C  6E3B               	movwf	i2___flge@ff2+3,c
 48056  01327E  EC5F  F0C9         	call	i2___flge	;wreg free
 48057  013282  B0D8               	btfsc	status,0,c
 48058  013284  D005               	goto	i2l2156
 48059                           
 48060                           ;doprnt.c: 849: exp--;
 48061  013286  0100               	movlb	0	; () banked
 48062  013288  079D               	decf	i2__doprnt@exp& (0+255),f,b
 48063  01328A  A0D8               	btfss	status,0,c
 48064  01328C  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 48065  01328E  D017               	goto	i2l2158
 48066  013290                     i2l2156:
 48067                           
 48068                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 48069                           
 48070                           ; BSR set to: 0
 48071  013290  C09F  F034         	movff	i2__doprnt@tmpval,i2___flge@ff1
 48072  013294  C0A0  F035         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 48073  013298  C0A1  F036         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 48074  01329C  C0A2  F037         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 48075  0132A0  0E00               	movlw	0
 48076  0132A2  6E38               	movwf	i2___flge@ff2,c
 48077  0132A4  0E00               	movlw	0
 48078  0132A6  6E39               	movwf	i2___flge@ff2+1,c
 48079  0132A8  0E20               	movlw	32
 48080  0132AA  6E3A               	movwf	i2___flge@ff2+2,c
 48081  0132AC  0E41               	movlw	65
 48082  0132AE  6E3B               	movwf	i2___flge@ff2+3,c
 48083  0132B0  EC5F  F0C9         	call	i2___flge	;wreg free
 48084  0132B4  A0D8               	btfss	status,0,c
 48085  0132B6  D003               	goto	i2l2158
 48086                           
 48087                           ;doprnt.c: 851: exp++;
 48088  0132B8  0100               	movlb	0	; () banked
 48089  0132BA  4B9D               	infsnz	i2__doprnt@exp& (0+255),f,b
 48090  0132BC  2B9E               	incf	(i2__doprnt@exp+1)& (0+255),f,b
 48091  0132BE                     i2l2158:
 48092                           
 48093                           ;doprnt.c: 852: }
 48094                           ;doprnt.c: 1112: if(prec <= 12)
 48095                           
 48096                           ; BSR set to: 0
 48097                           
 48098                           ; BSR set to: 0
 48099                           
 48100                           ; BSR set to: 0
 48101  0132BE  0100               	movlb	0	; () banked
 48102  0132C0  BFB0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 48103  0132C2  D006               	goto	i2u3513_40
 48104  0132C4  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 48105  0132C6  E121               	bnz	i2l24749
 48106  0132C8  0E0D               	movlw	13
 48107  0132CA  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 48108  0132CC  B0D8               	btfsc	status,0,c
 48109  0132CE  D01D               	goto	i2l2159
 48110  0132D0                     i2u3513_40:
 48111                           
 48112                           ; BSR set to: 0
 48113                           ;doprnt.c: 1113: fval += fround(prec);
 48114  0132D0  C0A3  F056         	movff	i2__doprnt@fval,i2___fladd@b
 48115  0132D4  C0A4  F057         	movff	i2__doprnt@fval+1,i2___fladd@b+1
 48116  0132D8  C0A5  F058         	movff	i2__doprnt@fval+2,i2___fladd@b+2
 48117  0132DC  C0A6  F059         	movff	i2__doprnt@fval+3,i2___fladd@b+3
 48118  0132E0  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 48119  0132E2  EC68  F0BB         	call	i2_fround
 48120  0132E6  C049  F05A         	movff	?i2_fround,i2___fladd@a
 48121  0132EA  C04A  F05B         	movff	?i2_fround+1,i2___fladd@a+1
 48122  0132EE  C04B  F05C         	movff	?i2_fround+2,i2___fladd@a+2
 48123  0132F2  C04C  F05D         	movff	?i2_fround+3,i2___fladd@a+3
 48124  0132F6  EC4C  F0B1         	call	i2___fladd	;wreg free
 48125  0132FA  C056  F0A3         	movff	?i2___fladd,i2__doprnt@fval
 48126  0132FE  C057  F0A4         	movff	?i2___fladd+1,i2__doprnt@fval+1
 48127  013302  C058  F0A5         	movff	?i2___fladd+2,i2__doprnt@fval+2
 48128  013306  C059  F0A6         	movff	?i2___fladd+3,i2__doprnt@fval+3
 48129  01330A                     i2l2159:
 48130  01330A                     i2l24749:
 48131                           
 48132                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 48133  01330A  0100               	movlb	0	; () banked
 48134  01330C  BF9E               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 48135  01330E  D006               	goto	i2u3514_40
 48136  013310  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 48137  013312  E122               	bnz	i2l24757
 48138  013314  0E0A               	movlw	10
 48139  013316  5D9D               	subwf	i2__doprnt@exp& (0+255),w,b
 48140  013318  B0D8               	btfsc	status,0,c
 48141  01331A  D01E               	goto	i2u3517_40
 48142  01331C                     i2u3514_40:
 48143                           
 48144                           ; BSR set to: 0
 48145  01331C  51A3               	movf	i2__doprnt@fval& (0+255),w,b
 48146  01331E  11A4               	iorwf	(i2__doprnt@fval+1)& (0+255),w,b
 48147  013320  11A5               	iorwf	(i2__doprnt@fval+2)& (0+255),w,b
 48148  013322  11A6               	iorwf	(i2__doprnt@fval+3)& (0+255),w,b
 48149  013324  B4D8               	btfsc	status,2,c
 48150  013326  D063               	goto	i2l2160
 48151                           
 48152                           ; BSR set to: 0
 48153  013328  C0A3  F06C         	movff	i2__doprnt@fval,i2___fltol@f1
 48154  01332C  C0A4  F06D         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 48155  013330  C0A5  F06E         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 48156  013334  C0A6  F06F         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 48157  013338  EC6E  F0CC         	call	i2___fltol	;wreg free
 48158  01333C  0100               	movlb	0	; () banked
 48159  01333E  516C               	movf	?i2___fltol& (0+255),w,b
 48160  013340  116D               	iorwf	(?i2___fltol+1)& (0+255),w,b
 48161  013342  116E               	iorwf	(?i2___fltol+2)& (0+255),w,b
 48162  013344  116F               	iorwf	(?i2___fltol+3)& (0+255),w,b
 48163  013346  B4D8               	btfsc	status,2,c
 48164                           
 48165                           ; BSR set to: 0
 48166  013348  BF9E               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 48167  01334A  D051               	goto	i2l2160
 48168  01334C  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 48169  01334E  E104               	bnz	i2l24757
 48170  013350  0E02               	movlw	2
 48171  013352  5D9D               	subwf	i2__doprnt@exp& (0+255),w,b
 48172  013354  A0D8               	btfss	status,0,c
 48173  013356  D04B               	goto	i2l2160
 48174  013358                     i2u3517_40:
 48175  013358                     i2l24757:
 48176                           
 48177                           ; BSR set to: 0
 48178                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 48179  013358  C09F  F034         	movff	i2__doprnt@tmpval,i2___flge@ff1
 48180  01335C  C0A0  F035         	movff	i2__doprnt@tmpval+1,i2___flge@ff1+1
 48181  013360  C0A1  F036         	movff	i2__doprnt@tmpval+2,i2___flge@ff1+2
 48182  013364  C0A2  F037         	movff	i2__doprnt@tmpval+3,i2___flge@ff1+3
 48183  013368  0E5F               	movlw	95
 48184  01336A  6E38               	movwf	i2___flge@ff2,c
 48185  01336C  0E70               	movlw	112
 48186  01336E  6E39               	movwf	i2___flge@ff2+1,c
 48187  013370  0E89               	movlw	137
 48188  013372  6E3A               	movwf	i2___flge@ff2+2,c
 48189  013374  0E40               	movlw	64
 48190  013376  6E3B               	movwf	i2___flge@ff2+3,c
 48191  013378  EC5F  F0C9         	call	i2___flge	;wreg free
 48192  01337C  B0D8               	btfsc	status,0,c
 48193  01337E  D003               	goto	i2l2163
 48194                           
 48195                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 48196  013380  0100               	movlb	0	; () banked
 48197  013382  0EF7               	movlw	247
 48198  013384  D002               	goto	L18
 48199  013386                     i2l2163:
 48200                           
 48201                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 48202                           
 48203                           ; BSR set to: 0
 48204  013386  0100               	movlb	0	; () banked
 48205  013388  0EF8               	movlw	248
 48206  01338A                     L18:
 48207  01338A  279D               	addwf	i2__doprnt@exp& (0+255),f,b
 48208  01338C  0EFF               	movlw	255
 48209  01338E  239E               	addwfc	(i2__doprnt@exp+1)& (0+255),f,b
 48210                           
 48211                           ; BSR set to: 0
 48212                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 48213                           
 48214                           ; BSR set to: 0
 48215  013390  519D               	movf	i2__doprnt@exp& (0+255),w,b
 48216  013392  EC68  F0A8         	call	i2_scale
 48217  013396  C049  F09F         	movff	?i2_scale,i2__doprnt@tmpval
 48218  01339A  C04A  F0A0         	movff	?i2_scale+1,i2__doprnt@tmpval+1
 48219  01339E  C04B  F0A1         	movff	?i2_scale+2,i2__doprnt@tmpval+2
 48220  0133A2  C04C  F0A2         	movff	?i2_scale+3,i2__doprnt@tmpval+3
 48221  0133A6  C0A3  F001         	movff	i2__doprnt@fval,i2__div_to_l_@f1
 48222  0133AA  C0A4  F002         	movff	i2__doprnt@fval+1,i2__div_to_l_@f1+1
 48223  0133AE  C0A5  F003         	movff	i2__doprnt@fval+2,i2__div_to_l_@f1+2
 48224  0133B2  C0A6  F004         	movff	i2__doprnt@fval+3,i2__div_to_l_@f1+3
 48225  0133B6  C09F  F005         	movff	i2__doprnt@tmpval,i2__div_to_l_@f2
 48226  0133BA  C0A0  F006         	movff	i2__doprnt@tmpval+1,i2__div_to_l_@f2+1
 48227  0133BE  C0A1  F007         	movff	i2__doprnt@tmpval+2,i2__div_to_l_@f2+2
 48228  0133C2  C0A2  F008         	movff	i2__doprnt@tmpval+3,i2__div_to_l_@f2+3
 48229  0133C6  EC3A  F0C8         	call	i2__div_to_l_	;wreg free
 48230  0133CA  C001  F0A7         	movff	?i2__div_to_l_,i2__doprnt@val
 48231  0133CE  C002  F0A8         	movff	?i2__div_to_l_+1,i2__doprnt@val+1
 48232  0133D2  C003  F0A9         	movff	?i2__div_to_l_+2,i2__doprnt@val+2
 48233  0133D6  C004  F0AA         	movff	?i2__div_to_l_+3,i2__doprnt@val+3
 48234                           
 48235                           ;doprnt.c: 1129: fval = 0.0;
 48236  0133DA  0E00               	movlw	0
 48237  0133DC  0100               	movlb	0	; () banked
 48238  0133DE  6FA3               	movwf	i2__doprnt@fval& (0+255),b
 48239  0133E0  0E00               	movlw	0
 48240  0133E2  6FA4               	movwf	(i2__doprnt@fval+1)& (0+255),b
 48241  0133E4  0E00               	movlw	0
 48242  0133E6  6FA5               	movwf	(i2__doprnt@fval+2)& (0+255),b
 48243  0133E8  0E00               	movlw	0
 48244  0133EA  6FA6               	movwf	(i2__doprnt@fval+3)& (0+255),b
 48245                           
 48246                           ;doprnt.c: 1130: } else {
 48247  0133EC  D03C               	goto	i2l2169
 48248  0133EE                     i2l2160:
 48249                           
 48250                           ; BSR set to: 0
 48251                           ;doprnt.c: 1131: val = (unsigned long)fval;
 48252                           
 48253                           ; BSR set to: 0
 48254  0133EE  C0A3  F06C         	movff	i2__doprnt@fval,i2___fltol@f1
 48255  0133F2  C0A4  F06D         	movff	i2__doprnt@fval+1,i2___fltol@f1+1
 48256  0133F6  C0A5  F06E         	movff	i2__doprnt@fval+2,i2___fltol@f1+2
 48257  0133FA  C0A6  F06F         	movff	i2__doprnt@fval+3,i2___fltol@f1+3
 48258  0133FE  EC6E  F0CC         	call	i2___fltol	;wreg free
 48259  013402  C06C  F0A7         	movff	?i2___fltol,i2__doprnt@val
 48260  013406  C06D  F0A8         	movff	?i2___fltol+1,i2__doprnt@val+1
 48261  01340A  C06E  F0A9         	movff	?i2___fltol+2,i2__doprnt@val+2
 48262  01340E  C06F  F0AA         	movff	?i2___fltol+3,i2__doprnt@val+3
 48263                           
 48264                           ;doprnt.c: 1132: fval -= (double)val;
 48265  013412  C0A3  F080         	movff	i2__doprnt@fval,i2___flsub@b
 48266  013416  C0A4  F081         	movff	i2__doprnt@fval+1,i2___flsub@b+1
 48267  01341A  C0A5  F082         	movff	i2__doprnt@fval+2,i2___flsub@b+2
 48268  01341E  C0A6  F083         	movff	i2__doprnt@fval+3,i2___flsub@b+3
 48269  013422  C0A7  F005         	movff	i2__doprnt@val,i2___xxtofl@val
 48270  013426  C0A8  F006         	movff	i2__doprnt@val+1,i2___xxtofl@val+1
 48271  01342A  C0A9  F007         	movff	i2__doprnt@val+2,i2___xxtofl@val+2
 48272  01342E  C0AA  F008         	movff	i2__doprnt@val+3,i2___xxtofl@val+3
 48273  013432  0E00               	movlw	0
 48274  013434  EC92  F0C4         	call	i2___xxtofl
 48275  013438  C005  F084         	movff	?i2___xxtofl,i2___flsub@a
 48276  01343C  C006  F085         	movff	?i2___xxtofl+1,i2___flsub@a+1
 48277  013440  C007  F086         	movff	?i2___xxtofl+2,i2___flsub@a+2
 48278  013444  C008  F087         	movff	?i2___xxtofl+3,i2___flsub@a+3
 48279  013448  EC55  F0D9         	call	i2___flsub	;wreg free
 48280  01344C  C080  F0A3         	movff	?i2___flsub,i2__doprnt@fval
 48281  013450  C081  F0A4         	movff	?i2___flsub+1,i2__doprnt@fval+1
 48282  013454  C082  F0A5         	movff	?i2___flsub+2,i2__doprnt@fval+2
 48283  013458  C083  F0A6         	movff	?i2___flsub+3,i2__doprnt@fval+3
 48284                           
 48285                           ;doprnt.c: 1133: exp = 0;
 48286  01345C  0E00               	movlw	0
 48287  01345E  0100               	movlb	0	; () banked
 48288  013460  6F9E               	movwf	(i2__doprnt@exp+1)& (0+255),b
 48289  013462  0E00               	movlw	0
 48290  013464  6F9D               	movwf	i2__doprnt@exp& (0+255),b
 48291  013466                     i2l2169:
 48292                           
 48293                           ; BSR set to: 0
 48294                           ;doprnt.c: 1134: }
 48295                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 48296                           
 48297                           ; BSR set to: 0
 48298  013466  0E01               	movlw	1
 48299  013468  6FB1               	movwf	i2__doprnt@c& (0+255),b
 48300  01346A                     i2l24777:
 48301                           
 48302                           ; BSR set to: 0
 48303  01346A  0E0A               	movlw	10
 48304  01346C  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 48305  01346E  B4D8               	btfsc	status,2,c
 48306  013470  D01B               	goto	i2u3521_40
 48307                           
 48308                           ; BSR set to: 0
 48309                           ;doprnt.c: 1137: if(val < dpowers[c])
 48310                           
 48311                           ; BSR set to: 0
 48312                           
 48313                           ; BSR set to: 0
 48314  013472  51B1               	movf	i2__doprnt@c& (0+255),w,b
 48315  013474  0D04               	mullw	4
 48316  013476  0E45               	movlw	low _dpowers
 48317  013478  24F3               	addwf	prodl,w,c
 48318  01347A  6EF6               	movwf	tblptrl,c
 48319  01347C  0ECE               	movlw	high _dpowers
 48320  01347E  20F4               	addwfc	prodh,w,c
 48321  013480  6EF7               	movwf	tblptrh,c
 48322  013482                     	if	1	;There are 3 active tblptr bytes
 48323  013482  6AF8               	clrf	tblptru,c
 48324  013484  0E00               	movlw	low (__mediumconst shr (0+16))
 48325  013486  22F8               	addwfc	tblptru,f,c
 48326  013488                     	endif
 48327  013488  0009               	tblrd		*+
 48328  01348A  50F5               	movf	tablat,w,c
 48329  01348C  5DA7               	subwf	i2__doprnt@val& (0+255),w,b
 48330  01348E  0009               	tblrd		*+
 48331  013490  50F5               	movf	tablat,w,c
 48332  013492  59A8               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 48333  013494  0009               	tblrd		*+
 48334  013496  50F5               	movf	tablat,w,c
 48335  013498  59A9               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 48336  01349A  0009               	tblrd		*+
 48337  01349C  50F5               	movf	tablat,w,c
 48338  01349E  59AA               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 48339  0134A0  A0D8               	btfss	status,0,c
 48340  0134A2  D002               	goto	i2u3521_40
 48341                           
 48342                           ; BSR set to: 0
 48343                           
 48344                           ; BSR set to: 0
 48345                           
 48346                           ; BSR set to: 0
 48347                           ;doprnt.c: 1138: break;
 48348  0134A4  2BB1               	incf	i2__doprnt@c& (0+255),f,b
 48349  0134A6  D7E1               	goto	i2l24777
 48350  0134A8                     i2u3521_40:
 48351                           
 48352                           ; BSR set to: 0
 48353                           ;doprnt.c: 1142: width -= prec + c + exp;
 48354                           
 48355                           ; BSR set to: 0
 48356  0134A8  C0B1  F08E         	movff	i2__doprnt@c,??i2__doprnt
 48357  0134AC  6B8F               	clrf	(??i2__doprnt+1)& (0+255),b
 48358  0134AE  BF8E               	btfsc	??i2__doprnt& (0+255),7,b
 48359  0134B0  078F               	decf	(??i2__doprnt+1)& (0+255),f,b
 48360  0134B2  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 48361  0134B4  278E               	addwf	??i2__doprnt& (0+255),f,b
 48362  0134B6  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 48363  0134B8  238F               	addwfc	(??i2__doprnt+1)& (0+255),f,b
 48364  0134BA  519D               	movf	i2__doprnt@exp& (0+255),w,b
 48365  0134BC  278E               	addwf	??i2__doprnt& (0+255),f,b
 48366  0134BE  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 48367  0134C0  238F               	addwfc	(??i2__doprnt+1)& (0+255),f,b
 48368  0134C2  518E               	movf	??i2__doprnt& (0+255),w,b
 48369  0134C4  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 48370  0134C6  518F               	movf	(??i2__doprnt+1)& (0+255),w,b
 48371  0134C8  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 48372                           
 48373                           ;doprnt.c: 1143: if(
 48374                           ;doprnt.c: 1147: prec)
 48375  0134CA  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 48376  0134CC  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 48377  0134CE  B4D8               	btfsc	status,2,c
 48378  0134D0  D003               	goto	i2l2173
 48379                           
 48380                           ; BSR set to: 0
 48381                           ;doprnt.c: 1148: width--;
 48382  0134D2  07AB               	decf	i2__doprnt@width& (0+255),f,b
 48383  0134D4  A0D8               	btfss	status,0,c
 48384  0134D6  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 48385  0134D8                     i2l2173:
 48386                           
 48387                           ; BSR set to: 0
 48388                           ;doprnt.c: 1149: if(flag & 0x03)
 48389                           
 48390                           ; BSR set to: 0
 48391  0134D8  0E03               	movlw	3
 48392  0134DA  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 48393  0134DC  6F8E               	movwf	??i2__doprnt& (0+255),b
 48394  0134DE  0E00               	movlw	0
 48395  0134E0  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 48396  0134E2  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 48397  0134E4  518E               	movf	??i2__doprnt& (0+255),w,b
 48398  0134E6  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 48399  0134E8  B4D8               	btfsc	status,2,c
 48400  0134EA  D003               	goto	i2l2174
 48401                           
 48402                           ; BSR set to: 0
 48403                           ;doprnt.c: 1150: width--;
 48404  0134EC  07AB               	decf	i2__doprnt@width& (0+255),f,b
 48405  0134EE  A0D8               	btfss	status,0,c
 48406  0134F0  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 48407  0134F2                     i2l2174:
 48408                           
 48409                           ; BSR set to: 0
 48410                           ;doprnt.c: 1153: if(flag & 0x04) {
 48411                           
 48412                           ; BSR set to: 0
 48413  0134F2  A5AD               	btfss	i2__doprnt@flag& (0+255),2,b
 48414  0134F4  D0B6               	goto	i2l2185
 48415                           
 48416                           ; BSR set to: 0
 48417                           ;doprnt.c: 1157: if(flag & 0x03)
 48418  0134F6  0E03               	movlw	3
 48419  0134F8  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 48420  0134FA  6F8E               	movwf	??i2__doprnt& (0+255),b
 48421  0134FC  0E00               	movlw	0
 48422  0134FE  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 48423  013500  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 48424  013502  518E               	movf	??i2__doprnt& (0+255),w,b
 48425  013504  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 48426  013506  B4D8               	btfsc	status,2,c
 48427  013508  D06C               	goto	i2l2179
 48428                           
 48429                           ; BSR set to: 0
 48430                           ;doprnt.c: 1159: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 48431  01350A  EE20 F002          	lfsr	2,2
 48432  01350E  5188               	movf	i2__doprnt@pb& (0+255),w,b
 48433  013510  26D9               	addwf	fsr2l,f,c
 48434  013512  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 48435  013514  22DA               	addwfc	fsr2h,f,c
 48436  013516  50DE               	movf	postinc2,w,c
 48437  013518  10DE               	iorwf	postinc2,w,c
 48438  01351A  10DE               	iorwf	postinc2,w,c
 48439  01351C  B4D8               	btfsc	status,2,c
 48440  01351E  D013               	goto	i2l2177
 48441                           
 48442                           ; BSR set to: 0
 48443  013520  EE20 F002          	lfsr	2,2
 48444  013524  5188               	movf	i2__doprnt@pb& (0+255),w,b
 48445  013526  26D9               	addwf	fsr2l,f,c
 48446  013528  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 48447  01352A  22DA               	addwfc	fsr2h,f,c
 48448  01352C  D801               	call	i2u3527_48
 48449  01352E  D059               	goto	i2l2179
 48450  013530                     i2u3527_48:
 48451  013530  0005               	push	
 48452  013532  6EFA               	movwf	pclath,c
 48453  013534  50DE               	movf	postinc2,w,c
 48454  013536  6EFD               	movwf	tosl,c
 48455  013538  50DE               	movf	postinc2,w,c
 48456  01353A  6EFE               	movwf	tosh,c
 48457  01353C  50DE               	movf	postinc2,w,c
 48458  01353E  6EFF               	movwf	tosu,c
 48459  013540  50FA               	movf	pclath,w,c
 48460  013542  0E2D               	movlw	45
 48461  013544  0012               	return		;indir
 48462  013546                     i2l2177:
 48463  013546  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 48464  01354A  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 48465  01354E  CFDE F08E          	movff	postinc2,??i2__doprnt
 48466  013552  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 48467  013556  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 48468  01355A  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 48469  01355E  0E2D               	movlw	45
 48470  013560  6EDF               	movwf	indf2,c
 48471  013562  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 48472  013566  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 48473  01356A  2ADE               	incf	postinc2,f,c
 48474  01356C  0E00               	movlw	0
 48475  01356E  22DD               	addwfc	postdec2,f,c
 48476                           
 48477                           ;doprnt.c: 1168: while(width > 0) {
 48478  013570  D038               	goto	i2l2179
 48479  013572                     i2l24809:
 48480                           
 48481                           ;doprnt.c: 1169: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 48482  013572  0100               	movlb	0	; () banked
 48483  013574  EE20 F002          	lfsr	2,2
 48484  013578  5188               	movf	i2__doprnt@pb& (0+255),w,b
 48485  01357A  26D9               	addwf	fsr2l,f,c
 48486  01357C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 48487  01357E  22DA               	addwfc	fsr2h,f,c
 48488  013580  50DE               	movf	postinc2,w,c
 48489  013582  10DE               	iorwf	postinc2,w,c
 48490  013584  10DE               	iorwf	postinc2,w,c
 48491  013586  B4D8               	btfsc	status,2,c
 48492  013588  D013               	goto	i2l2181
 48493                           
 48494                           ; BSR set to: 0
 48495  01358A  EE20 F002          	lfsr	2,2
 48496  01358E  5188               	movf	i2__doprnt@pb& (0+255),w,b
 48497  013590  26D9               	addwf	fsr2l,f,c
 48498  013592  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 48499  013594  22DA               	addwfc	fsr2h,f,c
 48500  013596  D801               	call	i2u3529_48
 48501  013598  D020               	goto	i2l2182
 48502  01359A                     i2u3529_48:
 48503  01359A  0005               	push	
 48504  01359C  6EFA               	movwf	pclath,c
 48505  01359E  50DE               	movf	postinc2,w,c
 48506  0135A0  6EFD               	movwf	tosl,c
 48507  0135A2  50DE               	movf	postinc2,w,c
 48508  0135A4  6EFE               	movwf	tosh,c
 48509  0135A6  50DE               	movf	postinc2,w,c
 48510  0135A8  6EFF               	movwf	tosu,c
 48511  0135AA  50FA               	movf	pclath,w,c
 48512  0135AC  0E30               	movlw	48
 48513  0135AE  0012               	return		;indir
 48514  0135B0                     i2l2181:
 48515  0135B0  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 48516  0135B4  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 48517  0135B8  CFDE F08E          	movff	postinc2,??i2__doprnt
 48518  0135BC  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 48519  0135C0  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 48520  0135C4  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 48521  0135C8  0E30               	movlw	48
 48522  0135CA  6EDF               	movwf	indf2,c
 48523  0135CC  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 48524  0135D0  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 48525  0135D4  2ADE               	incf	postinc2,f,c
 48526  0135D6  0E00               	movlw	0
 48527  0135D8  22DD               	addwfc	postdec2,f,c
 48528  0135DA                     i2l2182:
 48529                           
 48530                           ;doprnt.c: 1170: width--;
 48531  0135DA  0100               	movlb	0	; () banked
 48532  0135DC  07AB               	decf	i2__doprnt@width& (0+255),f,b
 48533  0135DE  A0D8               	btfss	status,0,c
 48534  0135E0  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 48535  0135E2                     i2l2179:
 48536                           
 48537                           ; BSR set to: 0
 48538  0135E2  0100               	movlb	0	; () banked
 48539  0135E4  BFAC               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 48540  0135E6  D0F5               	goto	i2l2196
 48541  0135E8  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 48542  0135EA  E1C3               	bnz	i2l24809
 48543  0135EC  05AB               	decf	i2__doprnt@width& (0+255),w,b
 48544  0135EE  A0D8               	btfss	status,0,c
 48545  0135F0  D0F0               	goto	i2l2196
 48546  0135F2  D7BF               	goto	i2l2180
 48547  0135F4                     i2l24821:
 48548                           
 48549                           ; BSR set to: 0
 48550                           ;doprnt.c: 1181: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 48551  0135F4  EE20 F002          	lfsr	2,2
 48552  0135F8  5188               	movf	i2__doprnt@pb& (0+255),w,b
 48553  0135FA  26D9               	addwf	fsr2l,f,c
 48554  0135FC  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 48555  0135FE  22DA               	addwfc	fsr2h,f,c
 48556  013600  50DE               	movf	postinc2,w,c
 48557  013602  10DE               	iorwf	postinc2,w,c
 48558  013604  10DE               	iorwf	postinc2,w,c
 48559  013606  B4D8               	btfsc	status,2,c
 48560  013608  D013               	goto	i2l2187
 48561                           
 48562                           ; BSR set to: 0
 48563  01360A  EE20 F002          	lfsr	2,2
 48564  01360E  5188               	movf	i2__doprnt@pb& (0+255),w,b
 48565  013610  26D9               	addwf	fsr2l,f,c
 48566  013612  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 48567  013614  22DA               	addwfc	fsr2h,f,c
 48568  013616  D801               	call	i2u3532_48
 48569  013618  D020               	goto	i2l2188
 48570  01361A                     i2u3532_48:
 48571  01361A  0005               	push	
 48572  01361C  6EFA               	movwf	pclath,c
 48573  01361E  50DE               	movf	postinc2,w,c
 48574  013620  6EFD               	movwf	tosl,c
 48575  013622  50DE               	movf	postinc2,w,c
 48576  013624  6EFE               	movwf	tosh,c
 48577  013626  50DE               	movf	postinc2,w,c
 48578  013628  6EFF               	movwf	tosu,c
 48579  01362A  50FA               	movf	pclath,w,c
 48580  01362C  0E20               	movlw	32
 48581  01362E  0012               	return		;indir
 48582  013630                     i2l2187:
 48583  013630  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 48584  013634  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 48585  013638  CFDE F08E          	movff	postinc2,??i2__doprnt
 48586  01363C  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 48587  013640  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 48588  013644  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 48589  013648  0E20               	movlw	32
 48590  01364A  6EDF               	movwf	indf2,c
 48591  01364C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 48592  013650  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 48593  013654  2ADE               	incf	postinc2,f,c
 48594  013656  0E00               	movlw	0
 48595  013658  22DD               	addwfc	postdec2,f,c
 48596  01365A                     i2l2188:
 48597                           
 48598                           ;doprnt.c: 1182: width--;
 48599  01365A  0100               	movlb	0	; () banked
 48600  01365C  07AB               	decf	i2__doprnt@width& (0+255),f,b
 48601  01365E  A0D8               	btfss	status,0,c
 48602  013660  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 48603  013662                     i2l2185:
 48604                           
 48605                           ; BSR set to: 0
 48606                           
 48607                           ; BSR set to: 0
 48608  013662  BFAC               	btfsc	(i2__doprnt@width+1)& (0+255),7,b
 48609  013664  D005               	goto	i2u3533_40
 48610  013666  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 48611  013668  E1C5               	bnz	i2l24821
 48612  01366A  05AB               	decf	i2__doprnt@width& (0+255),w,b
 48613  01366C  B0D8               	btfsc	status,0,c
 48614  01366E  D7C2               	goto	i2l2186
 48615  013670                     i2u3533_40:
 48616                           
 48617                           ; BSR set to: 0
 48618                           ;doprnt.c: 1183: }
 48619                           ;doprnt.c: 1188: if(flag & 0x03)
 48620                           
 48621                           ; BSR set to: 0
 48622  013670  0E03               	movlw	3
 48623  013672  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 48624  013674  6F8E               	movwf	??i2__doprnt& (0+255),b
 48625  013676  0E00               	movlw	0
 48626  013678  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 48627  01367A  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 48628  01367C  518E               	movf	??i2__doprnt& (0+255),w,b
 48629  01367E  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 48630  013680  B4D8               	btfsc	status,2,c
 48631  013682  D0A7               	goto	i2l2196
 48632                           
 48633                           ; BSR set to: 0
 48634                           ;doprnt.c: 1190: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 48635  013684  EE20 F002          	lfsr	2,2
 48636  013688  5188               	movf	i2__doprnt@pb& (0+255),w,b
 48637  01368A  26D9               	addwf	fsr2l,f,c
 48638  01368C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 48639  01368E  22DA               	addwfc	fsr2h,f,c
 48640  013690  50DE               	movf	postinc2,w,c
 48641  013692  10DE               	iorwf	postinc2,w,c
 48642  013694  10DE               	iorwf	postinc2,w,c
 48643  013696  B4D8               	btfsc	status,2,c
 48644  013698  D013               	goto	i2l2191
 48645                           
 48646                           ; BSR set to: 0
 48647  01369A  EE20 F002          	lfsr	2,2
 48648  01369E  5188               	movf	i2__doprnt@pb& (0+255),w,b
 48649  0136A0  26D9               	addwf	fsr2l,f,c
 48650  0136A2  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 48651  0136A4  22DA               	addwfc	fsr2h,f,c
 48652  0136A6  D801               	call	i2u3536_48
 48653  0136A8  D094               	goto	i2l2196
 48654  0136AA                     i2u3536_48:
 48655  0136AA  0005               	push	
 48656  0136AC  6EFA               	movwf	pclath,c
 48657  0136AE  50DE               	movf	postinc2,w,c
 48658  0136B0  6EFD               	movwf	tosl,c
 48659  0136B2  50DE               	movf	postinc2,w,c
 48660  0136B4  6EFE               	movwf	tosh,c
 48661  0136B6  50DE               	movf	postinc2,w,c
 48662  0136B8  6EFF               	movwf	tosu,c
 48663  0136BA  50FA               	movf	pclath,w,c
 48664  0136BC  0E2D               	movlw	45
 48665  0136BE  0012               	return		;indir
 48666  0136C0                     i2l2191:
 48667  0136C0  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 48668  0136C4  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 48669  0136C8  CFDE F08E          	movff	postinc2,??i2__doprnt
 48670  0136CC  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 48671  0136D0  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 48672  0136D4  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 48673  0136D8  0E2D               	movlw	45
 48674  0136DA  D073               	goto	L19
 48675  0136DC                     
 48676                           ;doprnt.c: 1200: {
 48677                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 48678  0136DC  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 48679  0136E0  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 48680  0136E4  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 48681  0136E8  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 48682  0136EC  0100               	movlb	0	; () banked
 48683  0136EE  51B1               	movf	i2__doprnt@c& (0+255),w,b
 48684  0136F0  0D04               	mullw	4
 48685  0136F2  0E45               	movlw	low _dpowers
 48686  0136F4  24F3               	addwf	prodl,w,c
 48687  0136F6  6EF6               	movwf	tblptrl,c
 48688  0136F8  0ECE               	movlw	high _dpowers
 48689  0136FA  20F4               	addwfc	prodh,w,c
 48690  0136FC  6EF7               	movwf	tblptrh,c
 48691  0136FE                     	if	1	;There are 3 active tblptr bytes
 48692  0136FE  6AF8               	clrf	tblptru,c
 48693  013700  0E00               	movlw	low (__mediumconst shr (0+16))
 48694  013702  22F8               	addwfc	tblptru,f,c
 48695  013704                     	endif
 48696  013704  0009               	tblrd		*+
 48697  013706  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 48698  01370A  0009               	tblrd		*+
 48699  01370C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 48700  013710  0009               	tblrd		*+
 48701  013712  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 48702  013716  000A               	tblrd		*-
 48703  013718  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 48704  01371C  EC6C  F0D2         	call	i2___lldiv
 48705  013720  C001  F09F         	movff	?i2___lldiv,i2__doprnt@tmpval
 48706  013724  C002  F0A0         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 48707  013728  C003  F0A1         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 48708  01372C  C004  F0A2         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 48709                           
 48710                           ;doprnt.c: 1202: tmpval.vd %= 10;
 48711  013730  C09F  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 48712  013734  C0A0  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 48713  013738  C0A1  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 48714  01373C  C0A2  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 48715  013740  0E0A               	movlw	10
 48716  013742  6E12               	movwf	i2___llmod@divisor,c
 48717  013744  0E00               	movlw	0
 48718  013746  6E13               	movwf	i2___llmod@divisor+1,c
 48719  013748  0E00               	movlw	0
 48720  01374A  6E14               	movwf	i2___llmod@divisor+2,c
 48721  01374C  0E00               	movlw	0
 48722  01374E  6E15               	movwf	i2___llmod@divisor+3,c
 48723  013750  EC89  F0D5         	call	i2___llmod	;wreg free
 48724  013754  C00E  F09F         	movff	?i2___llmod,i2__doprnt@tmpval
 48725  013758  C00F  F0A0         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 48726  01375C  C010  F0A1         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 48727  013760  C011  F0A2         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 48728                           
 48729                           ;doprnt.c: 1203: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 48730  013764  0100               	movlb	0	; () banked
 48731  013766  EE20 F002          	lfsr	2,2
 48732  01376A  5188               	movf	i2__doprnt@pb& (0+255),w,b
 48733  01376C  26D9               	addwf	fsr2l,f,c
 48734  01376E  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 48735  013770  22DA               	addwfc	fsr2h,f,c
 48736  013772  50DE               	movf	postinc2,w,c
 48737  013774  10DE               	iorwf	postinc2,w,c
 48738  013776  10DE               	iorwf	postinc2,w,c
 48739  013778  B4D8               	btfsc	status,2,c
 48740  01377A  D014               	goto	i2l2195
 48741                           
 48742                           ; BSR set to: 0
 48743  01377C  EE20 F002          	lfsr	2,2
 48744  013780  5188               	movf	i2__doprnt@pb& (0+255),w,b
 48745  013782  26D9               	addwf	fsr2l,f,c
 48746  013784  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 48747  013786  22DA               	addwfc	fsr2h,f,c
 48748  013788  D801               	call	i2u3538_48
 48749  01378A  D023               	goto	i2l2196
 48750  01378C                     i2u3538_48:
 48751  01378C  0005               	push	
 48752  01378E  6EFA               	movwf	pclath,c
 48753  013790  50DE               	movf	postinc2,w,c
 48754  013792  6EFD               	movwf	tosl,c
 48755  013794  50DE               	movf	postinc2,w,c
 48756  013796  6EFE               	movwf	tosh,c
 48757  013798  50DE               	movf	postinc2,w,c
 48758  01379A  6EFF               	movwf	tosu,c
 48759  01379C  50FA               	movf	pclath,w,c
 48760  01379E  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 48761  0137A0  0F30               	addlw	48
 48762  0137A2  0012               	return		;indir
 48763  0137A4                     i2l2195:
 48764  0137A4  0100               	movlb	0	; () banked
 48765  0137A6  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 48766  0137A8  0F30               	addlw	48
 48767  0137AA  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 48768  0137AE  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 48769  0137B2  CFDE F08E          	movff	postinc2,??i2__doprnt
 48770  0137B6  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 48771  0137BA  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 48772  0137BE  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 48773  0137C2                     L19:
 48774  0137C2  6EDF               	movwf	indf2,c
 48775  0137C4  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 48776  0137C8  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 48777  0137CC  2ADE               	incf	postinc2,f,c
 48778  0137CE  0E00               	movlw	0
 48779  0137D0  22DD               	addwfc	postdec2,f,c
 48780  0137D2                     i2l2196:
 48781                           
 48782                           ; BSR set to: 0
 48783                           
 48784                           ; BSR set to: 0
 48785  0137D2  0100               	movlb	0	; () banked
 48786  0137D4  07B1               	decf	i2__doprnt@c& (0+255),f,b
 48787  0137D6  29B1               	incf	i2__doprnt@c& (0+255),w,b
 48788  0137D8  B4D8               	btfsc	status,2,c
 48789  0137DA  D038               	goto	i2l2198
 48790  0137DC  D77F               	goto	i2l2194
 48791  0137DE                     i2l24855:
 48792                           
 48793                           ; BSR set to: 0
 48794                           ;doprnt.c: 1208: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 48795  0137DE  EE20 F002          	lfsr	2,2
 48796  0137E2  5188               	movf	i2__doprnt@pb& (0+255),w,b
 48797  0137E4  26D9               	addwf	fsr2l,f,c
 48798  0137E6  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 48799  0137E8  22DA               	addwfc	fsr2h,f,c
 48800  0137EA  50DE               	movf	postinc2,w,c
 48801  0137EC  10DE               	iorwf	postinc2,w,c
 48802  0137EE  10DE               	iorwf	postinc2,w,c
 48803  0137F0  B4D8               	btfsc	status,2,c
 48804  0137F2  D013               	goto	i2l2200
 48805                           
 48806                           ; BSR set to: 0
 48807  0137F4  EE20 F002          	lfsr	2,2
 48808  0137F8  5188               	movf	i2__doprnt@pb& (0+255),w,b
 48809  0137FA  26D9               	addwf	fsr2l,f,c
 48810  0137FC  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 48811  0137FE  22DA               	addwfc	fsr2h,f,c
 48812  013800  D801               	call	i2u3541_48
 48813  013802  D020               	goto	i2l2201
 48814  013804                     i2u3541_48:
 48815  013804  0005               	push	
 48816  013806  6EFA               	movwf	pclath,c
 48817  013808  50DE               	movf	postinc2,w,c
 48818  01380A  6EFD               	movwf	tosl,c
 48819  01380C  50DE               	movf	postinc2,w,c
 48820  01380E  6EFE               	movwf	tosh,c
 48821  013810  50DE               	movf	postinc2,w,c
 48822  013812  6EFF               	movwf	tosu,c
 48823  013814  50FA               	movf	pclath,w,c
 48824  013816  0E30               	movlw	48
 48825  013818  0012               	return		;indir
 48826  01381A                     i2l2200:
 48827  01381A  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 48828  01381E  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 48829  013822  CFDE F08E          	movff	postinc2,??i2__doprnt
 48830  013826  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 48831  01382A  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 48832  01382E  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 48833  013832  0E30               	movlw	48
 48834  013834  6EDF               	movwf	indf2,c
 48835  013836  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 48836  01383A  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 48837  01383E  2ADE               	incf	postinc2,f,c
 48838  013840  0E00               	movlw	0
 48839  013842  22DD               	addwfc	postdec2,f,c
 48840  013844                     i2l2201:
 48841                           
 48842                           ;doprnt.c: 1209: exp--;
 48843  013844  0100               	movlb	0	; () banked
 48844  013846  079D               	decf	i2__doprnt@exp& (0+255),f,b
 48845  013848  A0D8               	btfss	status,0,c
 48846  01384A  079E               	decf	(i2__doprnt@exp+1)& (0+255),f,b
 48847  01384C                     i2l2198:
 48848                           
 48849                           ; BSR set to: 0
 48850                           
 48851                           ; BSR set to: 0
 48852  01384C  BF9E               	btfsc	(i2__doprnt@exp+1)& (0+255),7,b
 48853  01384E  D005               	goto	i2u3542_40
 48854  013850  519E               	movf	(i2__doprnt@exp+1)& (0+255),w,b
 48855  013852  E1C5               	bnz	i2l24855
 48856  013854  059D               	decf	i2__doprnt@exp& (0+255),w,b
 48857  013856  B0D8               	btfsc	status,0,c
 48858  013858  D7C2               	goto	i2l2199
 48859  01385A                     i2u3542_40:
 48860                           
 48861                           ; BSR set to: 0
 48862                           ;doprnt.c: 1210: }
 48863                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 48864                           
 48865                           ; BSR set to: 0
 48866  01385A  BFB0               	btfsc	(i2__doprnt@prec+1)& (0+255),7,b
 48867  01385C  D009               	goto	i2l2203
 48868  01385E  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 48869  013860  E104               	bnz	i2u3543_40
 48870  013862  0E09               	movlw	9
 48871  013864  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 48872  013866  A0D8               	btfss	status,0,c
 48873  013868  D003               	goto	i2l2203
 48874  01386A                     i2u3543_40:
 48875                           
 48876                           ; BSR set to: 0
 48877                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 48878  01386A  0E08               	movlw	8
 48879  01386C  6FB1               	movwf	i2__doprnt@c& (0+255),b
 48880  01386E  D002               	goto	i2l2204
 48881  013870                     i2l2203:
 48882                           
 48883                           ; BSR set to: 0
 48884                           ;doprnt.c: 1213: else
 48885                           ;doprnt.c: 1214: c = prec;
 48886  013870  C0AF  F0B1         	movff	i2__doprnt@prec,i2__doprnt@c
 48887  013874                     i2l2204:
 48888                           
 48889                           ; BSR set to: 0
 48890                           ;doprnt.c: 1215: prec -= c;
 48891                           
 48892                           ; BSR set to: 0
 48893  013874  51B1               	movf	i2__doprnt@c& (0+255),w,b
 48894  013876  5FAF               	subwf	i2__doprnt@prec& (0+255),f,b
 48895  013878  0E00               	movlw	0
 48896  01387A  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 48897  01387C  0EFF               	movlw	255
 48898  01387E  5BB0               	subwfb	(i2__doprnt@prec+1)& (0+255),f,b
 48899                           
 48900                           ; BSR set to: 0
 48901                           ;doprnt.c: 1219: if(c)
 48902  013880  51B1               	movf	i2__doprnt@c& (0+255),w,b
 48903  013882  B4D8               	btfsc	status,2,c
 48904  013884  D033               	goto	i2l2207
 48905                           
 48906                           ; BSR set to: 0
 48907                           ;doprnt.c: 1221: if(pb->func) (pb->func('.')); else ((*pb->ptr++ = '.'));
 48908  013886  EE20 F002          	lfsr	2,2
 48909  01388A  5188               	movf	i2__doprnt@pb& (0+255),w,b
 48910  01388C  26D9               	addwf	fsr2l,f,c
 48911  01388E  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 48912  013890  22DA               	addwfc	fsr2h,f,c
 48913  013892  50DE               	movf	postinc2,w,c
 48914  013894  10DE               	iorwf	postinc2,w,c
 48915  013896  10DE               	iorwf	postinc2,w,c
 48916  013898  B4D8               	btfsc	status,2,c
 48917  01389A  D013               	goto	i2l2206
 48918                           
 48919                           ; BSR set to: 0
 48920  01389C  EE20 F002          	lfsr	2,2
 48921  0138A0  5188               	movf	i2__doprnt@pb& (0+255),w,b
 48922  0138A2  26D9               	addwf	fsr2l,f,c
 48923  0138A4  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 48924  0138A6  22DA               	addwfc	fsr2h,f,c
 48925  0138A8  D801               	call	i2u3546_48
 48926  0138AA  D020               	goto	i2l2207
 48927  0138AC                     i2u3546_48:
 48928  0138AC  0005               	push	
 48929  0138AE  6EFA               	movwf	pclath,c
 48930  0138B0  50DE               	movf	postinc2,w,c
 48931  0138B2  6EFD               	movwf	tosl,c
 48932  0138B4  50DE               	movf	postinc2,w,c
 48933  0138B6  6EFE               	movwf	tosh,c
 48934  0138B8  50DE               	movf	postinc2,w,c
 48935  0138BA  6EFF               	movwf	tosu,c
 48936  0138BC  50FA               	movf	pclath,w,c
 48937  0138BE  0E2E               	movlw	46
 48938  0138C0  0012               	return		;indir
 48939  0138C2                     i2l2206:
 48940  0138C2  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 48941  0138C6  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 48942  0138CA  CFDE F08E          	movff	postinc2,??i2__doprnt
 48943  0138CE  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 48944  0138D2  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 48945  0138D6  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 48946  0138DA  0E2E               	movlw	46
 48947  0138DC  6EDF               	movwf	indf2,c
 48948  0138DE  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 48949  0138E2  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 48950  0138E6  2ADE               	incf	postinc2,f,c
 48951  0138E8  0E00               	movlw	0
 48952  0138EA  22DD               	addwfc	postdec2,f,c
 48953  0138EC                     i2l2207:
 48954                           
 48955                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 48956  0138EC  0100               	movlb	0	; () banked
 48957  0138EE  51B1               	movf	i2__doprnt@c& (0+255),w,b
 48958  0138F0  EC68  F0A8         	call	i2_scale
 48959  0138F4  C049  F094         	movff	?i2_scale,i2__doprnt$5962
 48960  0138F8  C04A  F095         	movff	?i2_scale+1,i2__doprnt$5962+1
 48961  0138FC  C04B  F096         	movff	?i2_scale+2,i2__doprnt$5962+2
 48962  013900  C04C  F097         	movff	?i2_scale+3,i2__doprnt$5962+3
 48963                           
 48964                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 48965  013904  C0A3  F034         	movff	i2__doprnt@fval,i2___flmul@a
 48966  013908  C0A4  F035         	movff	i2__doprnt@fval+1,i2___flmul@a+1
 48967  01390C  C0A5  F036         	movff	i2__doprnt@fval+2,i2___flmul@a+2
 48968  013910  C0A6  F037         	movff	i2__doprnt@fval+3,i2___flmul@a+3
 48969  013914  C094  F030         	movff	i2__doprnt$5962,i2___flmul@b
 48970  013918  C095  F031         	movff	i2__doprnt$5962+1,i2___flmul@b+1
 48971  01391C  C096  F032         	movff	i2__doprnt$5962+2,i2___flmul@b+2
 48972  013920  C097  F033         	movff	i2__doprnt$5962+3,i2___flmul@b+3
 48973  013924  EC05  F0AE         	call	i2___flmul	;wreg free
 48974  013928  C030  F06C         	movff	?i2___flmul,i2___fltol@f1
 48975  01392C  C031  F06D         	movff	?i2___flmul+1,i2___fltol@f1+1
 48976  013930  C032  F06E         	movff	?i2___flmul+2,i2___fltol@f1+2
 48977  013934  C033  F06F         	movff	?i2___flmul+3,i2___fltol@f1+3
 48978  013938  EC6E  F0CC         	call	i2___fltol	;wreg free
 48979  01393C  C06C  F0A7         	movff	?i2___fltol,i2__doprnt@val
 48980  013940  C06D  F0A8         	movff	?i2___fltol+1,i2__doprnt@val+1
 48981  013944  C06E  F0A9         	movff	?i2___fltol+2,i2__doprnt@val+2
 48982  013948  C06F  F0AA         	movff	?i2___fltol+3,i2__doprnt@val+3
 48983                           
 48984                           ;doprnt.c: 1228: while(c--) {
 48985  01394C  D0A5               	goto	i2l2208
 48986  01394E                     
 48987                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 48988  01394E  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 48989  013952  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 48990  013956  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 48991  01395A  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 48992  01395E  0100               	movlb	0	; () banked
 48993  013960  51B1               	movf	i2__doprnt@c& (0+255),w,b
 48994  013962  0D04               	mullw	4
 48995  013964  0E45               	movlw	low _dpowers
 48996  013966  24F3               	addwf	prodl,w,c
 48997  013968  6EF6               	movwf	tblptrl,c
 48998  01396A  0ECE               	movlw	high _dpowers
 48999  01396C  20F4               	addwfc	prodh,w,c
 49000  01396E  6EF7               	movwf	tblptrh,c
 49001  013970                     	if	1	;There are 3 active tblptr bytes
 49002  013970  6AF8               	clrf	tblptru,c
 49003  013972  0E00               	movlw	low (__mediumconst shr (0+16))
 49004  013974  22F8               	addwfc	tblptru,f,c
 49005  013976                     	endif
 49006  013976  0009               	tblrd		*+
 49007  013978  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 49008  01397C  0009               	tblrd		*+
 49009  01397E  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 49010  013982  0009               	tblrd		*+
 49011  013984  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 49012  013988  000A               	tblrd		*-
 49013  01398A  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 49014  01398E  EC6C  F0D2         	call	i2___lldiv	;wreg free
 49015  013992  C001  F09F         	movff	?i2___lldiv,i2__doprnt@tmpval
 49016  013996  C002  F0A0         	movff	?i2___lldiv+1,i2__doprnt@tmpval+1
 49017  01399A  C003  F0A1         	movff	?i2___lldiv+2,i2__doprnt@tmpval+2
 49018  01399E  C004  F0A2         	movff	?i2___lldiv+3,i2__doprnt@tmpval+3
 49019                           
 49020                           ;doprnt.c: 1230: tmpval.vd %= 10;
 49021  0139A2  C09F  F00E         	movff	i2__doprnt@tmpval,i2___llmod@dividend
 49022  0139A6  C0A0  F00F         	movff	i2__doprnt@tmpval+1,i2___llmod@dividend+1
 49023  0139AA  C0A1  F010         	movff	i2__doprnt@tmpval+2,i2___llmod@dividend+2
 49024  0139AE  C0A2  F011         	movff	i2__doprnt@tmpval+3,i2___llmod@dividend+3
 49025  0139B2  0E0A               	movlw	10
 49026  0139B4  6E12               	movwf	i2___llmod@divisor,c
 49027  0139B6  0E00               	movlw	0
 49028  0139B8  6E13               	movwf	i2___llmod@divisor+1,c
 49029  0139BA  0E00               	movlw	0
 49030  0139BC  6E14               	movwf	i2___llmod@divisor+2,c
 49031  0139BE  0E00               	movlw	0
 49032  0139C0  6E15               	movwf	i2___llmod@divisor+3,c
 49033  0139C2  EC89  F0D5         	call	i2___llmod	;wreg free
 49034  0139C6  C00E  F09F         	movff	?i2___llmod,i2__doprnt@tmpval
 49035  0139CA  C00F  F0A0         	movff	?i2___llmod+1,i2__doprnt@tmpval+1
 49036  0139CE  C010  F0A1         	movff	?i2___llmod+2,i2__doprnt@tmpval+2
 49037  0139D2  C011  F0A2         	movff	?i2___llmod+3,i2__doprnt@tmpval+3
 49038                           
 49039                           ;doprnt.c: 1231: if(pb->func) (pb->func('0' + tmpval.vd)); else ((*pb->ptr++ = '0' + tmp
      +                          val.vd));
 49040  0139D6  0100               	movlb	0	; () banked
 49041  0139D8  EE20 F002          	lfsr	2,2
 49042  0139DC  5188               	movf	i2__doprnt@pb& (0+255),w,b
 49043  0139DE  26D9               	addwf	fsr2l,f,c
 49044  0139E0  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 49045  0139E2  22DA               	addwfc	fsr2h,f,c
 49046  0139E4  50DE               	movf	postinc2,w,c
 49047  0139E6  10DE               	iorwf	postinc2,w,c
 49048  0139E8  10DE               	iorwf	postinc2,w,c
 49049  0139EA  B4D8               	btfsc	status,2,c
 49050  0139EC  D014               	goto	i2l2210
 49051                           
 49052                           ; BSR set to: 0
 49053  0139EE  EE20 F002          	lfsr	2,2
 49054  0139F2  5188               	movf	i2__doprnt@pb& (0+255),w,b
 49055  0139F4  26D9               	addwf	fsr2l,f,c
 49056  0139F6  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 49057  0139F8  22DA               	addwfc	fsr2h,f,c
 49058  0139FA  D801               	call	i2u3548_48
 49059  0139FC  D023               	goto	i2l2211
 49060  0139FE                     i2u3548_48:
 49061  0139FE  0005               	push	
 49062  013A00  6EFA               	movwf	pclath,c
 49063  013A02  50DE               	movf	postinc2,w,c
 49064  013A04  6EFD               	movwf	tosl,c
 49065  013A06  50DE               	movf	postinc2,w,c
 49066  013A08  6EFE               	movwf	tosh,c
 49067  013A0A  50DE               	movf	postinc2,w,c
 49068  013A0C  6EFF               	movwf	tosu,c
 49069  013A0E  50FA               	movf	pclath,w,c
 49070  013A10  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 49071  013A12  0F30               	addlw	48
 49072  013A14  0012               	return		;indir
 49073  013A16                     i2l2210:
 49074  013A16  0100               	movlb	0	; () banked
 49075  013A18  519F               	movf	i2__doprnt@tmpval& (0+255),w,b
 49076  013A1A  0F30               	addlw	48
 49077  013A1C  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 49078  013A20  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 49079  013A24  CFDE F08E          	movff	postinc2,??i2__doprnt
 49080  013A28  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 49081  013A2C  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 49082  013A30  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 49083  013A34  6EDF               	movwf	indf2,c
 49084  013A36  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 49085  013A3A  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 49086  013A3E  2ADE               	incf	postinc2,f,c
 49087  013A40  0E00               	movlw	0
 49088  013A42  22DD               	addwfc	postdec2,f,c
 49089  013A44                     i2l2211:
 49090                           
 49091                           ;doprnt.c: 1232: val %= dpowers[c];
 49092                           
 49093                           ; BSR set to: 0
 49094  013A44  C0A7  F00E         	movff	i2__doprnt@val,i2___llmod@dividend
 49095  013A48  C0A8  F00F         	movff	i2__doprnt@val+1,i2___llmod@dividend+1
 49096  013A4C  C0A9  F010         	movff	i2__doprnt@val+2,i2___llmod@dividend+2
 49097  013A50  C0AA  F011         	movff	i2__doprnt@val+3,i2___llmod@dividend+3
 49098  013A54  0100               	movlb	0	; () banked
 49099  013A56  51B1               	movf	i2__doprnt@c& (0+255),w,b
 49100  013A58  0D04               	mullw	4
 49101  013A5A  0E45               	movlw	low _dpowers
 49102  013A5C  24F3               	addwf	prodl,w,c
 49103  013A5E  6EF6               	movwf	tblptrl,c
 49104  013A60  0ECE               	movlw	high _dpowers
 49105  013A62  20F4               	addwfc	prodh,w,c
 49106  013A64  6EF7               	movwf	tblptrh,c
 49107  013A66                     	if	1	;There are 3 active tblptr bytes
 49108  013A66  6AF8               	clrf	tblptru,c
 49109  013A68  0E00               	movlw	low (__mediumconst shr (0+16))
 49110  013A6A  22F8               	addwfc	tblptru,f,c
 49111  013A6C                     	endif
 49112  013A6C  0009               	tblrd		*+
 49113  013A6E  CFF5 F012          	movff	tablat,i2___llmod@divisor
 49114  013A72  0009               	tblrd		*+
 49115  013A74  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 49116  013A78  0009               	tblrd		*+
 49117  013A7A  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 49118  013A7E  000A               	tblrd		*-
 49119  013A80  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 49120  013A84  EC89  F0D5         	call	i2___llmod
 49121  013A88  C00E  F0A7         	movff	?i2___llmod,i2__doprnt@val
 49122  013A8C  C00F  F0A8         	movff	?i2___llmod+1,i2__doprnt@val+1
 49123  013A90  C010  F0A9         	movff	?i2___llmod+2,i2__doprnt@val+2
 49124  013A94  C011  F0AA         	movff	?i2___llmod+3,i2__doprnt@val+3
 49125  013A98                     i2l2208:
 49126  013A98  0100               	movlb	0	; () banked
 49127  013A9A  07B1               	decf	i2__doprnt@c& (0+255),f,b
 49128  013A9C  29B1               	incf	i2__doprnt@c& (0+255),w,b
 49129  013A9E  B4D8               	btfsc	status,2,c
 49130  013AA0  D038               	goto	i2l2213
 49131  013AA2  D755               	goto	i2l2209
 49132  013AA4                     
 49133                           ; BSR set to: 0
 49134                           ;doprnt.c: 1236: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 49135                           
 49136                           ; BSR set to: 0
 49137  013AA4  EE20 F002          	lfsr	2,2
 49138  013AA8  5188               	movf	i2__doprnt@pb& (0+255),w,b
 49139  013AAA  26D9               	addwf	fsr2l,f,c
 49140  013AAC  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 49141  013AAE  22DA               	addwfc	fsr2h,f,c
 49142  013AB0  50DE               	movf	postinc2,w,c
 49143  013AB2  10DE               	iorwf	postinc2,w,c
 49144  013AB4  10DE               	iorwf	postinc2,w,c
 49145  013AB6  B4D8               	btfsc	status,2,c
 49146  013AB8  D013               	goto	i2l2215
 49147                           
 49148                           ; BSR set to: 0
 49149  013ABA  EE20 F002          	lfsr	2,2
 49150  013ABE  5188               	movf	i2__doprnt@pb& (0+255),w,b
 49151  013AC0  26D9               	addwf	fsr2l,f,c
 49152  013AC2  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 49153  013AC4  22DA               	addwfc	fsr2h,f,c
 49154  013AC6  D801               	call	i2u3551_48
 49155  013AC8  D020               	goto	i2l2216
 49156  013ACA                     i2u3551_48:
 49157  013ACA  0005               	push	
 49158  013ACC  6EFA               	movwf	pclath,c
 49159  013ACE  50DE               	movf	postinc2,w,c
 49160  013AD0  6EFD               	movwf	tosl,c
 49161  013AD2  50DE               	movf	postinc2,w,c
 49162  013AD4  6EFE               	movwf	tosh,c
 49163  013AD6  50DE               	movf	postinc2,w,c
 49164  013AD8  6EFF               	movwf	tosu,c
 49165  013ADA  50FA               	movf	pclath,w,c
 49166  013ADC  0E30               	movlw	48
 49167  013ADE  0012               	return		;indir
 49168  013AE0                     i2l2215:
 49169  013AE0  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 49170  013AE4  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 49171  013AE8  CFDE F08E          	movff	postinc2,??i2__doprnt
 49172  013AEC  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 49173  013AF0  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 49174  013AF4  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 49175  013AF8  0E30               	movlw	48
 49176  013AFA  6EDF               	movwf	indf2,c
 49177  013AFC  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 49178  013B00  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 49179  013B04  2ADE               	incf	postinc2,f,c
 49180  013B06  0E00               	movlw	0
 49181  013B08  22DD               	addwfc	postdec2,f,c
 49182  013B0A                     i2l2216:
 49183                           
 49184                           ;doprnt.c: 1237: prec--;
 49185  013B0A  0100               	movlb	0	; () banked
 49186  013B0C  07AF               	decf	i2__doprnt@prec& (0+255),f,b
 49187  013B0E  A0D8               	btfss	status,0,c
 49188  013B10  07B0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 49189  013B12                     i2l2213:
 49190                           
 49191                           ; BSR set to: 0
 49192                           
 49193                           ; BSR set to: 0
 49194  013B12  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 49195  013B14  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 49196  013B16  B4D8               	btfsc	status,2,c
 49197  013B18  D2EC               	goto	i2u3589_40
 49198  013B1A  D7C4               	goto	i2l2214
 49199  013B1C                     i2l2151:
 49200                           
 49201                           ; BSR set to: 0
 49202                           ;doprnt.c: 1246: }
 49203                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 49204                           
 49205                           ; BSR set to: 0
 49206  013B1C  0EC0               	movlw	192
 49207  013B1E  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 49208  013B20  6F8E               	movwf	??i2__doprnt& (0+255),b
 49209  013B22  0E00               	movlw	0
 49210  013B24  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 49211  013B26  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 49212  013B28  518E               	movf	??i2__doprnt& (0+255),w,b
 49213  013B2A  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 49214  013B2C  A4D8               	btfss	status,2,c
 49215  013B2E  D041               	goto	i2l2218
 49216                           
 49217                           ; BSR set to: 0
 49218                           ;doprnt.c: 1253: {
 49219                           ;doprnt.c: 1255: if(flag & 0x10)
 49220  013B30  A9AD               	btfss	i2__doprnt@flag& (0+255),4,b
 49221  013B32  D019               	goto	i2l2219
 49222                           
 49223                           ; BSR set to: 0
 49224                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 49225  013B34  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 49226  013B38  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 49227  013B3C  CFDF F08E          	movff	indf2,??i2__doprnt
 49228  013B40  0E04               	movlw	4
 49229  013B42  26DE               	addwf	postinc2,f,c
 49230  013B44  CFDF F08F          	movff	indf2,??i2__doprnt+1
 49231  013B48  0E00               	movlw	0
 49232  013B4A  22DD               	addwfc	postdec2,f,c
 49233  013B4C  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 49234  013B50  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 49235  013B54  CFDE F0A7          	movff	postinc2,i2__doprnt@val
 49236  013B58  CFDE F0A8          	movff	postinc2,i2__doprnt@val+1
 49237  013B5C  CFDE F0A9          	movff	postinc2,i2__doprnt@val+2
 49238  013B60  CFDE F0AA          	movff	postinc2,i2__doprnt@val+3
 49239  013B64  D019               	goto	i2l2220
 49240  013B66                     i2l2219:
 49241                           
 49242                           ; BSR set to: 0
 49243                           ;doprnt.c: 1257: else
 49244                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 49245                           
 49246                           ; BSR set to: 0
 49247  013B66  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 49248  013B6A  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 49249  013B6E  CFDF F08E          	movff	indf2,??i2__doprnt
 49250  013B72  0E02               	movlw	2
 49251  013B74  26DE               	addwf	postinc2,f,c
 49252  013B76  CFDF F08F          	movff	indf2,??i2__doprnt+1
 49253  013B7A  0E00               	movlw	0
 49254  013B7C  22DD               	addwfc	postdec2,f,c
 49255  013B7E  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 49256  013B82  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 49257  013B86  CFDE F0A7          	movff	postinc2,i2__doprnt@val
 49258  013B8A  CFDD F0A8          	movff	postdec2,i2__doprnt@val+1
 49259  013B8E  0E00               	movlw	0
 49260  013B90  BFA8               	btfsc	(i2__doprnt@val+1)& (0+255),7,b
 49261  013B92  0EFF               	movlw	-1
 49262  013B94  6FA9               	movwf	(i2__doprnt@val+2)& (0+255),b
 49263  013B96  6FAA               	movwf	(i2__doprnt@val+3)& (0+255),b
 49264  013B98                     i2l2220:
 49265                           
 49266                           ; BSR set to: 0
 49267                           ;doprnt.c: 1261: if((long)val < 0) {
 49268                           
 49269                           ; BSR set to: 0
 49270  013B98  AFAA               	btfss	(i2__doprnt@val+3)& (0+255),7,b
 49271  013B9A  D040               	goto	i2l2224
 49272                           
 49273                           ; BSR set to: 0
 49274                           ;doprnt.c: 1262: flag |= 0x03;
 49275  013B9C  0E03               	movlw	3
 49276  013B9E  13AD               	iorwf	i2__doprnt@flag& (0+255),f,b
 49277                           
 49278                           ; BSR set to: 0
 49279                           ;doprnt.c: 1263: val = -val;
 49280  013BA0  1FAA               	comf	(i2__doprnt@val+3)& (0+255),f,b
 49281  013BA2  1FA9               	comf	(i2__doprnt@val+2)& (0+255),f,b
 49282  013BA4  1FA8               	comf	(i2__doprnt@val+1)& (0+255),f,b
 49283  013BA6  6DA7               	negf	i2__doprnt@val& (0+255),b
 49284  013BA8  0E00               	movlw	0
 49285  013BAA  23A8               	addwfc	(i2__doprnt@val+1)& (0+255),f,b
 49286  013BAC  23A9               	addwfc	(i2__doprnt@val+2)& (0+255),f,b
 49287  013BAE  23AA               	addwfc	(i2__doprnt@val+3)& (0+255),f,b
 49288                           
 49289                           ; BSR set to: 0
 49290                           ;doprnt.c: 1264: }
 49291                           ;doprnt.c: 1266: }
 49292  013BB0  D035               	goto	i2l2224
 49293  013BB2                     i2l2218:
 49294                           
 49295                           ; BSR set to: 0
 49296                           ;doprnt.c: 1268: else
 49297                           ;doprnt.c: 1273: {
 49298                           ;doprnt.c: 1281: if(flag & 0x10)
 49299  013BB2  A9AD               	btfss	i2__doprnt@flag& (0+255),4,b
 49300  013BB4  D019               	goto	i2l2223
 49301                           
 49302                           ; BSR set to: 0
 49303                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 49304  013BB6  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 49305  013BBA  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 49306  013BBE  CFDF F08E          	movff	indf2,??i2__doprnt
 49307  013BC2  0E04               	movlw	4
 49308  013BC4  26DE               	addwf	postinc2,f,c
 49309  013BC6  CFDF F08F          	movff	indf2,??i2__doprnt+1
 49310  013BCA  0E00               	movlw	0
 49311  013BCC  22DD               	addwfc	postdec2,f,c
 49312  013BCE  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 49313  013BD2  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 49314  013BD6  CFDE F0A7          	movff	postinc2,i2__doprnt@val
 49315  013BDA  CFDE F0A8          	movff	postinc2,i2__doprnt@val+1
 49316  013BDE  CFDE F0A9          	movff	postinc2,i2__doprnt@val+2
 49317  013BE2  CFDE F0AA          	movff	postinc2,i2__doprnt@val+3
 49318  013BE6  D01A               	goto	i2l2224
 49319  013BE8                     i2l2223:
 49320                           
 49321                           ; BSR set to: 0
 49322                           ;doprnt.c: 1283: else
 49323                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 49324                           
 49325                           ; BSR set to: 0
 49326  013BE8  C08C  FFD9         	movff	i2__doprnt@ap,fsr2l
 49327  013BEC  C08D  FFDA         	movff	i2__doprnt@ap+1,fsr2h
 49328  013BF0  CFDF F08E          	movff	indf2,??i2__doprnt
 49329  013BF4  0E02               	movlw	2
 49330  013BF6  26DE               	addwf	postinc2,f,c
 49331  013BF8  CFDF F08F          	movff	indf2,??i2__doprnt+1
 49332  013BFC  0E00               	movlw	0
 49333  013BFE  22DD               	addwfc	postdec2,f,c
 49334  013C00  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 49335  013C04  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 49336  013C08  CFDE F090          	movff	postinc2,??i2__doprnt+2
 49337  013C0C  CFDD F091          	movff	postdec2,??i2__doprnt+3
 49338  013C10  C090  F0A7         	movff	??i2__doprnt+2,i2__doprnt@val
 49339  013C14  C091  F0A8         	movff	??i2__doprnt+3,i2__doprnt@val+1
 49340  013C18  6BA9               	clrf	(i2__doprnt@val+2)& (0+255),b
 49341  013C1A  6BAA               	clrf	(i2__doprnt@val+3)& (0+255),b
 49342  013C1C                     i2l2224:
 49343                           
 49344                           ; BSR set to: 0
 49345                           ;doprnt.c: 1287: }
 49346                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 49347                           
 49348                           ; BSR set to: 0
 49349                           
 49350                           ; BSR set to: 0
 49351  013C1C  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 49352  013C1E  11B0               	iorwf	(i2__doprnt@prec+1)& (0+255),w,b
 49353  013C20  A4D8               	btfss	status,2,c
 49354  013C22  D04B               	goto	i2l2226
 49355                           
 49356                           ; BSR set to: 0
 49357  013C24  51A7               	movf	i2__doprnt@val& (0+255),w,b
 49358  013C26  11A8               	iorwf	(i2__doprnt@val+1)& (0+255),w,b
 49359  013C28  11A9               	iorwf	(i2__doprnt@val+2)& (0+255),w,b
 49360  013C2A  11AA               	iorwf	(i2__doprnt@val+3)& (0+255),w,b
 49361  013C2C  A4D8               	btfss	status,2,c
 49362  013C2E  D045               	goto	i2l2226
 49363                           
 49364                           ; BSR set to: 0
 49365                           ;doprnt.c: 1291: prec++;
 49366  013C30  4BAF               	infsnz	i2__doprnt@prec& (0+255),f,b
 49367  013C32  2BB0               	incf	(i2__doprnt@prec+1)& (0+255),f,b
 49368                           
 49369                           ; BSR set to: 0
 49370                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 49371  013C34  D042               	goto	i2l2226
 49372  013C36                     
 49373                           ; BSR set to: 0
 49374                           ;doprnt.c: 1302: case 0xC0:
 49375                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 49376                           
 49377                           ; BSR set to: 0
 49378                           
 49379                           ; BSR set to: 0
 49380  013C36  0E01               	movlw	1
 49381  013C38  6FB1               	movwf	i2__doprnt@c& (0+255),b
 49382  013C3A                     i2l24939:
 49383                           
 49384                           ; BSR set to: 0
 49385  013C3A  0E0A               	movlw	10
 49386  013C3C  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 49387  013C3E  B4D8               	btfsc	status,2,c
 49388  013C40  D047               	goto	i2l2232
 49389                           
 49390                           ; BSR set to: 0
 49391                           ;doprnt.c: 1306: if(val < dpowers[c])
 49392                           
 49393                           ; BSR set to: 0
 49394                           
 49395                           ; BSR set to: 0
 49396  013C42  51B1               	movf	i2__doprnt@c& (0+255),w,b
 49397  013C44  0D04               	mullw	4
 49398  013C46  0E45               	movlw	low _dpowers
 49399  013C48  24F3               	addwf	prodl,w,c
 49400  013C4A  6EF6               	movwf	tblptrl,c
 49401  013C4C  0ECE               	movlw	high _dpowers
 49402  013C4E  20F4               	addwfc	prodh,w,c
 49403  013C50  6EF7               	movwf	tblptrh,c
 49404  013C52                     	if	1	;There are 3 active tblptr bytes
 49405  013C52  6AF8               	clrf	tblptru,c
 49406  013C54  0E00               	movlw	low (__mediumconst shr (0+16))
 49407  013C56  22F8               	addwfc	tblptru,f,c
 49408  013C58                     	endif
 49409  013C58  0009               	tblrd		*+
 49410  013C5A  50F5               	movf	tablat,w,c
 49411  013C5C  5DA7               	subwf	i2__doprnt@val& (0+255),w,b
 49412  013C5E  0009               	tblrd		*+
 49413  013C60  50F5               	movf	tablat,w,c
 49414  013C62  59A8               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 49415  013C64  0009               	tblrd		*+
 49416  013C66  50F5               	movf	tablat,w,c
 49417  013C68  59A9               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 49418  013C6A  0009               	tblrd		*+
 49419  013C6C  50F5               	movf	tablat,w,c
 49420  013C6E  59AA               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 49421  013C70  A0D8               	btfss	status,0,c
 49422  013C72  D02E               	goto	i2l2232
 49423                           
 49424                           ; BSR set to: 0
 49425                           
 49426                           ; BSR set to: 0
 49427                           
 49428                           ; BSR set to: 0
 49429                           ;doprnt.c: 1307: break;
 49430  013C74  2BB1               	incf	i2__doprnt@c& (0+255),f,b
 49431  013C76  D7E1               	goto	i2l24939
 49432  013C78                     
 49433                           ; BSR set to: 0
 49434                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 49435                           
 49436                           ; BSR set to: 0
 49437  013C78  0E01               	movlw	1
 49438  013C7A  6FB1               	movwf	i2__doprnt@c& (0+255),b
 49439  013C7C                     i2l24953:
 49440                           
 49441                           ; BSR set to: 0
 49442  013C7C  0E08               	movlw	8
 49443  013C7E  19B1               	xorwf	i2__doprnt@c& (0+255),w,b
 49444  013C80  B4D8               	btfsc	status,2,c
 49445  013C82  D026               	goto	i2l2232
 49446                           
 49447                           ; BSR set to: 0
 49448                           ;doprnt.c: 1317: if(val < hexpowers[c])
 49449                           
 49450                           ; BSR set to: 0
 49451                           
 49452                           ; BSR set to: 0
 49453  013C84  51B1               	movf	i2__doprnt@c& (0+255),w,b
 49454  013C86  0D04               	mullw	4
 49455  013C88  0E6D               	movlw	low _hexpowers
 49456  013C8A  24F3               	addwf	prodl,w,c
 49457  013C8C  6EF6               	movwf	tblptrl,c
 49458  013C8E  0ECE               	movlw	high _hexpowers
 49459  013C90  20F4               	addwfc	prodh,w,c
 49460  013C92  6EF7               	movwf	tblptrh,c
 49461  013C94                     	if	1	;There are 3 active tblptr bytes
 49462  013C94  6AF8               	clrf	tblptru,c
 49463  013C96  0E00               	movlw	low (__mediumconst shr (0+16))
 49464  013C98  22F8               	addwfc	tblptru,f,c
 49465  013C9A                     	endif
 49466  013C9A  0009               	tblrd		*+
 49467  013C9C  50F5               	movf	tablat,w,c
 49468  013C9E  5DA7               	subwf	i2__doprnt@val& (0+255),w,b
 49469  013CA0  0009               	tblrd		*+
 49470  013CA2  50F5               	movf	tablat,w,c
 49471  013CA4  59A8               	subwfb	(i2__doprnt@val+1)& (0+255),w,b
 49472  013CA6  0009               	tblrd		*+
 49473  013CA8  50F5               	movf	tablat,w,c
 49474  013CAA  59A9               	subwfb	(i2__doprnt@val+2)& (0+255),w,b
 49475  013CAC  0009               	tblrd		*+
 49476  013CAE  50F5               	movf	tablat,w,c
 49477  013CB0  59AA               	subwfb	(i2__doprnt@val+3)& (0+255),w,b
 49478  013CB2  A0D8               	btfss	status,0,c
 49479  013CB4  D00D               	goto	i2l2232
 49480                           
 49481                           ; BSR set to: 0
 49482                           
 49483                           ; BSR set to: 0
 49484                           
 49485                           ; BSR set to: 0
 49486                           ;doprnt.c: 1318: break;
 49487  013CB6  2BB1               	incf	i2__doprnt@c& (0+255),f,b
 49488  013CB8  D7E1               	goto	i2l24953
 49489  013CBA                     i2l2226:
 49490                           
 49491                           ; BSR set to: 0
 49492                           
 49493                           ; BSR set to: 0
 49494  013CBA  51AD               	movf	i2__doprnt@flag& (0+255),w,b
 49495  013CBC  0BC0               	andlw	192
 49496                           
 49497                           ; Switch size 1, requested type "space"
 49498                           ; Number of cases is 3, Range of values is 0 to 192
 49499                           ; switch strategies available:
 49500                           ; Name         Instructions Cycles
 49501                           ; simple_byte           10     6 (average)
 49502                           ;	Chosen strategy is simple_byte
 49503  013CBE  0A00               	xorlw	0	; case 0
 49504  013CC0  B4D8               	btfsc	status,2,c
 49505  013CC2  D7B9               	goto	i2l2227
 49506  013CC4  0A80               	xorlw	128	; case 128
 49507  013CC6  B4D8               	btfsc	status,2,c
 49508  013CC8  D7D7               	goto	i2l2233
 49509  013CCA  0A40               	xorlw	64	; case 192
 49510  013CCC  B4D8               	btfsc	status,2,c
 49511  013CCE  D7B3               	goto	i2l2227
 49512  013CD0                     i2l2232:
 49513                           
 49514                           ; BSR set to: 0
 49515                           ;doprnt.c: 1339: if(c < prec)
 49516                           
 49517                           ; BSR set to: 0
 49518  013CD0  0E80               	movlw	128
 49519  013CD2  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 49520  013CD4  0E7F               	movlw	127
 49521  013CD6  6F8E               	movwf	??i2__doprnt& (0+255),b
 49522  013CD8  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 49523  013CDA  5DB1               	subwf	i2__doprnt@c& (0+255),w,b
 49524  013CDC  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 49525  013CDE  0A80               	xorlw	128
 49526  013CE0  598E               	subwfb	??i2__doprnt& (0+255),w,b
 49527  013CE2  B0D8               	btfsc	status,0,c
 49528  013CE4  D003               	goto	i2l2237
 49529                           
 49530                           ; BSR set to: 0
 49531                           ;doprnt.c: 1340: c = prec;
 49532  013CE6  C0AF  F0B1         	movff	i2__doprnt@prec,i2__doprnt@c
 49533  013CEA  D010               	goto	i2l2239
 49534  013CEC                     i2l2237:
 49535                           
 49536                           ; BSR set to: 0
 49537                           ;doprnt.c: 1341: else if(prec < c)
 49538                           
 49539                           ; BSR set to: 0
 49540  013CEC  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 49541  013CEE  0A80               	xorlw	128
 49542  013CF0  6F8E               	movwf	??i2__doprnt& (0+255),b
 49543  013CF2  51B1               	movf	i2__doprnt@c& (0+255),w,b
 49544  013CF4  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 49545  013CF6  0E80               	movlw	128
 49546  013CF8  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 49547  013CFA  0E7F               	movlw	127
 49548  013CFC  598E               	subwfb	??i2__doprnt& (0+255),w,b
 49549  013CFE  B0D8               	btfsc	status,0,c
 49550  013D00  D005               	goto	i2l2239
 49551                           
 49552                           ; BSR set to: 0
 49553                           ;doprnt.c: 1342: prec = c;
 49554  013D02  51B1               	movf	i2__doprnt@c& (0+255),w,b
 49555  013D04  6FAF               	movwf	i2__doprnt@prec& (0+255),b
 49556  013D06  6BB0               	clrf	(i2__doprnt@prec+1)& (0+255),b
 49557  013D08  BFAF               	btfsc	i2__doprnt@prec& (0+255),7,b
 49558  013D0A  07B0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 49559  013D0C                     i2l2239:
 49560                           
 49561                           ; BSR set to: 0
 49562                           ;doprnt.c: 1345: if(width && flag & 0x03)
 49563                           
 49564                           ; BSR set to: 0
 49565                           
 49566                           ; BSR set to: 0
 49567  013D0C  51AB               	movf	i2__doprnt@width& (0+255),w,b
 49568  013D0E  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 49569  013D10  B4D8               	btfsc	status,2,c
 49570  013D12  D00D               	goto	i2l2240
 49571                           
 49572                           ; BSR set to: 0
 49573  013D14  0E03               	movlw	3
 49574  013D16  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 49575  013D18  6F8E               	movwf	??i2__doprnt& (0+255),b
 49576  013D1A  0E00               	movlw	0
 49577  013D1C  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 49578  013D1E  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 49579  013D20  518E               	movf	??i2__doprnt& (0+255),w,b
 49580  013D22  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 49581  013D24  B4D8               	btfsc	status,2,c
 49582  013D26  D003               	goto	i2l2240
 49583                           
 49584                           ; BSR set to: 0
 49585                           ;doprnt.c: 1346: width--;
 49586  013D28  07AB               	decf	i2__doprnt@width& (0+255),f,b
 49587  013D2A  A0D8               	btfss	status,0,c
 49588  013D2C  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 49589  013D2E                     i2l2240:
 49590                           
 49591                           ; BSR set to: 0
 49592                           ;doprnt.c: 1348: if(flag & 0x4000) {
 49593                           
 49594                           ; BSR set to: 0
 49595  013D2E  ADAE               	btfss	(i2__doprnt@flag+1)& (0+255),6,b
 49596  013D30  D013               	goto	i2l2243
 49597                           
 49598                           ; BSR set to: 0
 49599                           ;doprnt.c: 1349: if(width > prec)
 49600  013D32  51AB               	movf	i2__doprnt@width& (0+255),w,b
 49601  013D34  5DAF               	subwf	i2__doprnt@prec& (0+255),w,b
 49602  013D36  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 49603  013D38  0A80               	xorlw	128
 49604  013D3A  6F8E               	movwf	??i2__doprnt& (0+255),b
 49605  013D3C  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 49606  013D3E  0A80               	xorlw	128
 49607  013D40  598E               	subwfb	??i2__doprnt& (0+255),w,b
 49608  013D42  B0D8               	btfsc	status,0,c
 49609  013D44  D005               	goto	i2l2242
 49610                           
 49611                           ; BSR set to: 0
 49612                           ;doprnt.c: 1350: width -= prec;
 49613  013D46  51AF               	movf	i2__doprnt@prec& (0+255),w,b
 49614  013D48  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 49615  013D4A  51B0               	movf	(i2__doprnt@prec+1)& (0+255),w,b
 49616  013D4C  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 49617  013D4E  D004               	goto	i2l2243
 49618  013D50                     i2l2242:
 49619                           
 49620                           ; BSR set to: 0
 49621                           ;doprnt.c: 1351: else
 49622                           ;doprnt.c: 1352: width = 0;
 49623                           
 49624                           ; BSR set to: 0
 49625  013D50  0E00               	movlw	0
 49626  013D52  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 49627  013D54  0E00               	movlw	0
 49628  013D56  6FAB               	movwf	i2__doprnt@width& (0+255),b
 49629  013D58                     i2l2243:
 49630                           
 49631                           ; BSR set to: 0
 49632                           ;doprnt.c: 1353: }
 49633                           ;doprnt.c: 1381: if(width > c)
 49634                           
 49635                           ; BSR set to: 0
 49636                           
 49637                           ; BSR set to: 0
 49638  013D58  0E80               	movlw	128
 49639  013D5A  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 49640  013D5C  0E7F               	movlw	127
 49641  013D5E  6F8E               	movwf	??i2__doprnt& (0+255),b
 49642  013D60  51AB               	movf	i2__doprnt@width& (0+255),w,b
 49643  013D62  5DB1               	subwf	i2__doprnt@c& (0+255),w,b
 49644  013D64  51AC               	movf	(i2__doprnt@width+1)& (0+255),w,b
 49645  013D66  0A80               	xorlw	128
 49646  013D68  598E               	subwfb	??i2__doprnt& (0+255),w,b
 49647  013D6A  B0D8               	btfsc	status,0,c
 49648  013D6C  D007               	goto	i2l2244
 49649                           
 49650                           ; BSR set to: 0
 49651                           ;doprnt.c: 1382: width -= c;
 49652  013D6E  51B1               	movf	i2__doprnt@c& (0+255),w,b
 49653  013D70  5FAB               	subwf	i2__doprnt@width& (0+255),f,b
 49654  013D72  0E00               	movlw	0
 49655  013D74  BFB1               	btfsc	i2__doprnt@c& (0+255),7,b
 49656  013D76  0EFF               	movlw	255
 49657  013D78  5BAC               	subwfb	(i2__doprnt@width+1)& (0+255),f,b
 49658  013D7A  D004               	goto	i2l2245
 49659  013D7C                     i2l2244:
 49660                           
 49661                           ; BSR set to: 0
 49662                           ;doprnt.c: 1383: else
 49663                           ;doprnt.c: 1384: width = 0;
 49664                           
 49665                           ; BSR set to: 0
 49666  013D7C  0E00               	movlw	0
 49667  013D7E  6FAC               	movwf	(i2__doprnt@width+1)& (0+255),b
 49668  013D80  0E00               	movlw	0
 49669  013D82  6FAB               	movwf	i2__doprnt@width& (0+255),b
 49670  013D84                     i2l2245:
 49671                           
 49672                           ; BSR set to: 0
 49673                           ;doprnt.c: 1387: if(flag & 0x04) {
 49674                           
 49675                           ; BSR set to: 0
 49676  013D84  A5AD               	btfss	i2__doprnt@flag& (0+255),2,b
 49677  013D86  D07A               	goto	i2l2246
 49678                           
 49679                           ; BSR set to: 0
 49680                           ;doprnt.c: 1392: if(flag & 0x03)
 49681  013D88  0E03               	movlw	3
 49682  013D8A  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 49683  013D8C  6F8E               	movwf	??i2__doprnt& (0+255),b
 49684  013D8E  0E00               	movlw	0
 49685  013D90  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 49686  013D92  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 49687  013D94  518E               	movf	??i2__doprnt& (0+255),w,b
 49688  013D96  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 49689  013D98  B4D8               	btfsc	status,2,c
 49690  013D9A  D033               	goto	i2l2249
 49691                           
 49692                           ; BSR set to: 0
 49693                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 49694  013D9C  EE20 F002          	lfsr	2,2
 49695  013DA0  5188               	movf	i2__doprnt@pb& (0+255),w,b
 49696  013DA2  26D9               	addwf	fsr2l,f,c
 49697  013DA4  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 49698  013DA6  22DA               	addwfc	fsr2h,f,c
 49699  013DA8  50DE               	movf	postinc2,w,c
 49700  013DAA  10DE               	iorwf	postinc2,w,c
 49701  013DAC  10DE               	iorwf	postinc2,w,c
 49702  013DAE  B4D8               	btfsc	status,2,c
 49703  013DB0  D013               	goto	i2l2248
 49704                           
 49705                           ; BSR set to: 0
 49706  013DB2  EE20 F002          	lfsr	2,2
 49707  013DB6  5188               	movf	i2__doprnt@pb& (0+255),w,b
 49708  013DB8  26D9               	addwf	fsr2l,f,c
 49709  013DBA  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 49710  013DBC  22DA               	addwfc	fsr2h,f,c
 49711  013DBE  D801               	call	i2u3575_48
 49712  013DC0  D020               	goto	i2l2249
 49713  013DC2                     i2u3575_48:
 49714  013DC2  0005               	push	
 49715  013DC4  6EFA               	movwf	pclath,c
 49716  013DC6  50DE               	movf	postinc2,w,c
 49717  013DC8  6EFD               	movwf	tosl,c
 49718  013DCA  50DE               	movf	postinc2,w,c
 49719  013DCC  6EFE               	movwf	tosh,c
 49720  013DCE  50DE               	movf	postinc2,w,c
 49721  013DD0  6EFF               	movwf	tosu,c
 49722  013DD2  50FA               	movf	pclath,w,c
 49723  013DD4  0E2D               	movlw	45
 49724  013DD6  0012               	return		;indir
 49725  013DD8                     i2l2248:
 49726  013DD8  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 49727  013DDC  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 49728  013DE0  CFDE F08E          	movff	postinc2,??i2__doprnt
 49729  013DE4  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 49730  013DE8  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 49731  013DEC  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 49732  013DF0  0E2D               	movlw	45
 49733  013DF2  6EDF               	movwf	indf2,c
 49734  013DF4  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 49735  013DF8  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 49736  013DFC  2ADE               	incf	postinc2,f,c
 49737  013DFE  0E00               	movlw	0
 49738  013E00  22DD               	addwfc	postdec2,f,c
 49739  013E02                     i2l2249:
 49740                           
 49741                           ;doprnt.c: 1415: if(width)
 49742  013E02  0100               	movlb	0	; () banked
 49743  013E04  51AB               	movf	i2__doprnt@width& (0+255),w,b
 49744  013E06  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 49745  013E08  B4D8               	btfsc	status,2,c
 49746  013E0A  D16A               	goto	i2l2272
 49747                           
 49748                           ; BSR set to: 0
 49749                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 49750                           
 49751                           ; BSR set to: 0
 49752                           
 49753                           ;doprnt.c: 1416: do
 49754  013E0C  EE20 F002          	lfsr	2,2
 49755  013E10  5188               	movf	i2__doprnt@pb& (0+255),w,b
 49756  013E12  26D9               	addwf	fsr2l,f,c
 49757  013E14  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 49758  013E16  22DA               	addwfc	fsr2h,f,c
 49759  013E18  50DE               	movf	postinc2,w,c
 49760  013E1A  10DE               	iorwf	postinc2,w,c
 49761  013E1C  10DE               	iorwf	postinc2,w,c
 49762  013E1E  B4D8               	btfsc	status,2,c
 49763  013E20  D013               	goto	i2l2252
 49764                           
 49765                           ; BSR set to: 0
 49766  013E22  EE20 F002          	lfsr	2,2
 49767  013E26  5188               	movf	i2__doprnt@pb& (0+255),w,b
 49768  013E28  26D9               	addwf	fsr2l,f,c
 49769  013E2A  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 49770  013E2C  22DA               	addwfc	fsr2h,f,c
 49771  013E2E  D801               	call	i2u3578_48
 49772  013E30  D020               	goto	i2l2253
 49773  013E32                     i2u3578_48:
 49774  013E32  0005               	push	
 49775  013E34  6EFA               	movwf	pclath,c
 49776  013E36  50DE               	movf	postinc2,w,c
 49777  013E38  6EFD               	movwf	tosl,c
 49778  013E3A  50DE               	movf	postinc2,w,c
 49779  013E3C  6EFE               	movwf	tosh,c
 49780  013E3E  50DE               	movf	postinc2,w,c
 49781  013E40  6EFF               	movwf	tosu,c
 49782  013E42  50FA               	movf	pclath,w,c
 49783  013E44  0E30               	movlw	48
 49784  013E46  0012               	return		;indir
 49785  013E48                     i2l2252:
 49786  013E48  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 49787  013E4C  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 49788  013E50  CFDE F08E          	movff	postinc2,??i2__doprnt
 49789  013E54  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 49790  013E58  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 49791  013E5C  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 49792  013E60  0E30               	movlw	48
 49793  013E62  6EDF               	movwf	indf2,c
 49794  013E64  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 49795  013E68  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 49796  013E6C  2ADE               	incf	postinc2,f,c
 49797  013E6E  0E00               	movlw	0
 49798  013E70  22DD               	addwfc	postdec2,f,c
 49799  013E72                     i2l2253:
 49800                           
 49801                           ;doprnt.c: 1418: while(--width);
 49802  013E72  0100               	movlb	0	; () banked
 49803  013E74  07AB               	decf	i2__doprnt@width& (0+255),f,b
 49804  013E76  A0D8               	btfss	status,0,c
 49805  013E78  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 49806  013E7A  D7C4               	goto	L34
 49807  013E7C                     i2l2246:
 49808                           
 49809                           ; BSR set to: 0
 49810                           ;doprnt.c: 1422: {
 49811                           ;doprnt.c: 1424: if(width
 49812                           ;doprnt.c: 1428: )
 49813                           
 49814                           ; BSR set to: 0
 49815  013E7C  51AB               	movf	i2__doprnt@width& (0+255),w,b
 49816  013E7E  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 49817  013E80  B4D8               	btfsc	status,2,c
 49818  013E82  D03B               	goto	i2u3583_40
 49819  013E84                     i2u3580_40:
 49820                           
 49821                           ; BSR set to: 0
 49822                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 49823                           
 49824                           ; BSR set to: 0
 49825                           
 49826                           ;doprnt.c: 1429: do
 49827  013E84  EE20 F002          	lfsr	2,2
 49828  013E88  5188               	movf	i2__doprnt@pb& (0+255),w,b
 49829  013E8A  26D9               	addwf	fsr2l,f,c
 49830  013E8C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 49831  013E8E  22DA               	addwfc	fsr2h,f,c
 49832  013E90  50DE               	movf	postinc2,w,c
 49833  013E92  10DE               	iorwf	postinc2,w,c
 49834  013E94  10DE               	iorwf	postinc2,w,c
 49835  013E96  B4D8               	btfsc	status,2,c
 49836  013E98  D013               	goto	i2l2258
 49837                           
 49838                           ; BSR set to: 0
 49839  013E9A  EE20 F002          	lfsr	2,2
 49840  013E9E  5188               	movf	i2__doprnt@pb& (0+255),w,b
 49841  013EA0  26D9               	addwf	fsr2l,f,c
 49842  013EA2  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 49843  013EA4  22DA               	addwfc	fsr2h,f,c
 49844  013EA6  D801               	call	i2u3582_48
 49845  013EA8  D020               	goto	i2l2259
 49846  013EAA                     i2u3582_48:
 49847  013EAA  0005               	push	
 49848  013EAC  6EFA               	movwf	pclath,c
 49849  013EAE  50DE               	movf	postinc2,w,c
 49850  013EB0  6EFD               	movwf	tosl,c
 49851  013EB2  50DE               	movf	postinc2,w,c
 49852  013EB4  6EFE               	movwf	tosh,c
 49853  013EB6  50DE               	movf	postinc2,w,c
 49854  013EB8  6EFF               	movwf	tosu,c
 49855  013EBA  50FA               	movf	pclath,w,c
 49856  013EBC  0E20               	movlw	32
 49857  013EBE  0012               	return		;indir
 49858  013EC0                     i2l2258:
 49859  013EC0  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 49860  013EC4  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 49861  013EC8  CFDE F08E          	movff	postinc2,??i2__doprnt
 49862  013ECC  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 49863  013ED0  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 49864  013ED4  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 49865  013ED8  0E20               	movlw	32
 49866  013EDA  6EDF               	movwf	indf2,c
 49867  013EDC  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 49868  013EE0  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 49869  013EE4  2ADE               	incf	postinc2,f,c
 49870  013EE6  0E00               	movlw	0
 49871  013EE8  22DD               	addwfc	postdec2,f,c
 49872  013EEA                     i2l2259:
 49873                           
 49874                           ;doprnt.c: 1431: while(--width);
 49875  013EEA  0100               	movlb	0	; () banked
 49876  013EEC  07AB               	decf	i2__doprnt@width& (0+255),f,b
 49877  013EEE  A0D8               	btfss	status,0,c
 49878  013EF0  07AC               	decf	(i2__doprnt@width+1)& (0+255),f,b
 49879  013EF2  51AB               	movf	i2__doprnt@width& (0+255),w,b
 49880  013EF4  11AC               	iorwf	(i2__doprnt@width+1)& (0+255),w,b
 49881  013EF6  A4D8               	btfss	status,2,c
 49882  013EF8  D7C5               	goto	i2u3580_40
 49883  013EFA                     i2u3583_40:
 49884                           
 49885                           ; BSR set to: 0
 49886                           ;doprnt.c: 1438: if(flag & 0x03)
 49887                           
 49888                           ; BSR set to: 0
 49889                           
 49890                           ; BSR set to: 0
 49891  013EFA  0E03               	movlw	3
 49892  013EFC  15AD               	andwf	i2__doprnt@flag& (0+255),w,b
 49893  013EFE  6F8E               	movwf	??i2__doprnt& (0+255),b
 49894  013F00  0E00               	movlw	0
 49895  013F02  15AE               	andwf	(i2__doprnt@flag+1)& (0+255),w,b
 49896  013F04  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 49897  013F06  518E               	movf	??i2__doprnt& (0+255),w,b
 49898  013F08  118F               	iorwf	(??i2__doprnt+1)& (0+255),w,b
 49899  013F0A  B4D8               	btfsc	status,2,c
 49900  013F0C  D0E9               	goto	i2l2272
 49901                           
 49902                           ; BSR set to: 0
 49903                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 49904  013F0E  EE20 F002          	lfsr	2,2
 49905  013F12  5188               	movf	i2__doprnt@pb& (0+255),w,b
 49906  013F14  26D9               	addwf	fsr2l,f,c
 49907  013F16  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 49908  013F18  22DA               	addwfc	fsr2h,f,c
 49909  013F1A  50DE               	movf	postinc2,w,c
 49910  013F1C  10DE               	iorwf	postinc2,w,c
 49911  013F1E  10DE               	iorwf	postinc2,w,c
 49912  013F20  B4D8               	btfsc	status,2,c
 49913  013F22  D013               	goto	i2l2262
 49914                           
 49915                           ; BSR set to: 0
 49916  013F24  EE20 F002          	lfsr	2,2
 49917  013F28  5188               	movf	i2__doprnt@pb& (0+255),w,b
 49918  013F2A  26D9               	addwf	fsr2l,f,c
 49919  013F2C  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 49920  013F2E  22DA               	addwfc	fsr2h,f,c
 49921  013F30  D801               	call	i2u3586_48
 49922  013F32  D0D6               	goto	i2l2272
 49923  013F34                     i2u3586_48:
 49924  013F34  0005               	push	
 49925  013F36  6EFA               	movwf	pclath,c
 49926  013F38  50DE               	movf	postinc2,w,c
 49927  013F3A  6EFD               	movwf	tosl,c
 49928  013F3C  50DE               	movf	postinc2,w,c
 49929  013F3E  6EFE               	movwf	tosh,c
 49930  013F40  50DE               	movf	postinc2,w,c
 49931  013F42  6EFF               	movwf	tosu,c
 49932  013F44  50FA               	movf	pclath,w,c
 49933  013F46  0E2D               	movlw	45
 49934  013F48  0012               	return		;indir
 49935  013F4A                     i2l2262:
 49936  013F4A  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 49937  013F4E  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 49938  013F52  CFDE F08E          	movff	postinc2,??i2__doprnt
 49939  013F56  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 49940  013F5A  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 49941  013F5E  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 49942  013F62  0E2D               	movlw	45
 49943  013F64  6EDF               	movwf	indf2,c
 49944  013F66  D0B5               	goto	i2l25059
 49945  013F68                     
 49946                           ;doprnt.c: 1486: case 0xC0:
 49947                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 49948  013F68  C0AF  F08E         	movff	i2__doprnt@prec,??i2__doprnt
 49949  013F6C  C0B0  F08F         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 49950  013F70  0100               	movlb	0	; () banked
 49951  013F72  90D8               	bcf	status,0,c
 49952  013F74  378E               	rlcf	??i2__doprnt& (0+255),f,b
 49953  013F76  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 49954  013F78  90D8               	bcf	status,0,c
 49955  013F7A  378E               	rlcf	??i2__doprnt& (0+255),f,b
 49956  013F7C  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 49957  013F7E  0E45               	movlw	low _dpowers
 49958  013F80  258E               	addwf	??i2__doprnt& (0+255),w,b
 49959  013F82  6EF6               	movwf	tblptrl,c
 49960  013F84  0ECE               	movlw	high _dpowers
 49961  013F86  218F               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 49962  013F88  6EF7               	movwf	tblptrh,c
 49963  013F8A                     	if	1	;There are 3 active tblptr bytes
 49964  013F8A  6AF8               	clrf	tblptru,c
 49965  013F8C  0E00               	movlw	low (__mediumconst shr (0+16))
 49966  013F8E  22F8               	addwfc	tblptru,f,c
 49967  013F90                     	endif
 49968  013F90  0009               	tblrd		*+
 49969  013F92  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 49970  013F96  0009               	tblrd		*+
 49971  013F98  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 49972  013F9C  0009               	tblrd		*+
 49973  013F9E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 49974  013FA2  000A               	tblrd		*-
 49975  013FA4  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 49976  013FA8  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 49977  013FAC  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 49978  013FB0  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 49979  013FB4  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 49980  013FB8  EC6C  F0D2         	call	i2___lldiv
 49981  013FBC  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 49982  013FC0  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 49983  013FC4  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 49984  013FC8  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 49985  013FCC  0E0A               	movlw	10
 49986  013FCE  6E12               	movwf	i2___llmod@divisor,c
 49987  013FD0  0E00               	movlw	0
 49988  013FD2  6E13               	movwf	i2___llmod@divisor+1,c
 49989  013FD4  0E00               	movlw	0
 49990  013FD6  6E14               	movwf	i2___llmod@divisor+2,c
 49991  013FD8  0E00               	movlw	0
 49992  013FDA  6E15               	movwf	i2___llmod@divisor+3,c
 49993  013FDC  EC89  F0D5         	call	i2___llmod	;wreg free
 49994  013FE0  500E               	movf	?i2___llmod,w,c
 49995  013FE2  0F30               	addlw	48
 49996  013FE4  0100               	movlb	0	; () banked
 49997  013FE6  6FB1               	movwf	i2__doprnt@c& (0+255),b
 49998                           
 49999                           ;doprnt.c: 1491: break;
 50000  013FE8  D048               	goto	i2l2269
 50001  013FEA                     
 50002                           ; BSR set to: 0
 50003                           ;doprnt.c: 1499: {
 50004                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 50005                           
 50006                           ; BSR set to: 0
 50007  013FEA  C0A7  F001         	movff	i2__doprnt@val,i2___lldiv@dividend
 50008  013FEE  C0A8  F002         	movff	i2__doprnt@val+1,i2___lldiv@dividend+1
 50009  013FF2  C0A9  F003         	movff	i2__doprnt@val+2,i2___lldiv@dividend+2
 50010  013FF6  C0AA  F004         	movff	i2__doprnt@val+3,i2___lldiv@dividend+3
 50011  013FFA  C0AF  F08E         	movff	i2__doprnt@prec,??i2__doprnt
 50012  013FFE  C0B0  F08F         	movff	i2__doprnt@prec+1,??i2__doprnt+1
 50013  014002  90D8               	bcf	status,0,c
 50014  014004  378E               	rlcf	??i2__doprnt& (0+255),f,b
 50015  014006  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 50016  014008  90D8               	bcf	status,0,c
 50017  01400A  378E               	rlcf	??i2__doprnt& (0+255),f,b
 50018  01400C  378F               	rlcf	(??i2__doprnt+1)& (0+255),f,b
 50019  01400E  0E6D               	movlw	low _hexpowers
 50020  014010  258E               	addwf	??i2__doprnt& (0+255),w,b
 50021  014012  6EF6               	movwf	tblptrl,c
 50022  014014  0ECE               	movlw	high _hexpowers
 50023  014016  218F               	addwfc	(??i2__doprnt+1)& (0+255),w,b
 50024  014018  6EF7               	movwf	tblptrh,c
 50025  01401A                     	if	1	;There are 3 active tblptr bytes
 50026  01401A  6AF8               	clrf	tblptru,c
 50027  01401C  0E00               	movlw	low (__mediumconst shr (0+16))
 50028  01401E  22F8               	addwfc	tblptru,f,c
 50029  014020                     	endif
 50030  014020  0009               	tblrd		*+
 50031  014022  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 50032  014026  0009               	tblrd		*+
 50033  014028  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 50034  01402C  0009               	tblrd		*+
 50035  01402E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 50036  014032  000A               	tblrd		*-
 50037  014034  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 50038  014038  EC6C  F0D2         	call	i2___lldiv	;wreg free
 50039  01403C  5001               	movf	?i2___lldiv,w,c
 50040  01403E  0B0F               	andlw	15
 50041  014040  0100               	movlb	0	; () banked
 50042  014042  6F98               	movwf	i2__doprnt@idx& (0+255),b
 50043                           
 50044                           ; BSR set to: 0
 50045                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 50046  014044  5198               	movf	i2__doprnt@idx& (0+255),w,b
 50047  014046  0D01               	mullw	1
 50048  014048  0E38               	movlw	low STR_215
 50049  01404A  24F3               	addwf	prodl,w,c
 50050  01404C  6EF6               	movwf	tblptrl,c
 50051  01404E  0EFC               	movlw	high STR_215
 50052  014050  20F4               	addwfc	prodh,w,c
 50053  014052  6EF7               	movwf	tblptrh,c
 50054  014054                     	if	1	;There are 3 active tblptr bytes
 50055  014054  6AF8               	clrf	tblptru,c
 50056  014056  0E00               	movlw	low (__mediumconst shr (0+16))
 50057  014058  22F8               	addwfc	tblptru,f,c
 50058  01405A                     	endif
 50059  01405A  0008               	tblrd		*
 50060  01405C  CFF5 F0B1          	movff	tablat,i2__doprnt@c
 50061                           
 50062                           ; BSR set to: 0
 50063                           ;doprnt.c: 1523: }
 50064                           
 50065                           ;doprnt.c: 1508: }
 50066                           ;doprnt.c: 1510: break;
 50067  014060  D00C               	goto	i2l2269
 50068  014062                     i2l25051:
 50069  014062  0100               	movlb	0	; () banked
 50070  014064  51AD               	movf	i2__doprnt@flag& (0+255),w,b
 50071  014066  0BC0               	andlw	192
 50072                           
 50073                           ; Switch size 1, requested type "space"
 50074                           ; Number of cases is 3, Range of values is 0 to 192
 50075                           ; switch strategies available:
 50076                           ; Name         Instructions Cycles
 50077                           ; simple_byte           10     6 (average)
 50078                           ;	Chosen strategy is simple_byte
 50079  014068  0A00               	xorlw	0	; case 0
 50080  01406A  B4D8               	btfsc	status,2,c
 50081  01406C  D77D               	goto	i2l2267
 50082  01406E  0A80               	xorlw	128	; case 128
 50083  014070  B4D8               	btfsc	status,2,c
 50084  014072  D7BB               	goto	i2l2270
 50085  014074  0A40               	xorlw	64	; case 192
 50086  014076  B4D8               	btfsc	status,2,c
 50087  014078  D777               	goto	i2l2267
 50088  01407A                     i2l2269:
 50089                           
 50090                           ; BSR set to: 0
 50091                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 50092                           
 50093                           ; BSR set to: 0
 50094  01407A  EE20 F002          	lfsr	2,2
 50095  01407E  5188               	movf	i2__doprnt@pb& (0+255),w,b
 50096  014080  26D9               	addwf	fsr2l,f,c
 50097  014082  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 50098  014084  22DA               	addwfc	fsr2h,f,c
 50099  014086  50DE               	movf	postinc2,w,c
 50100  014088  10DE               	iorwf	postinc2,w,c
 50101  01408A  10DE               	iorwf	postinc2,w,c
 50102  01408C  B4D8               	btfsc	status,2,c
 50103  01408E  D013               	goto	i2l2271
 50104                           
 50105                           ; BSR set to: 0
 50106  014090  EE20 F002          	lfsr	2,2
 50107  014094  5188               	movf	i2__doprnt@pb& (0+255),w,b
 50108  014096  26D9               	addwf	fsr2l,f,c
 50109  014098  5189               	movf	(i2__doprnt@pb+1)& (0+255),w,b
 50110  01409A  22DA               	addwfc	fsr2h,f,c
 50111  01409C  D801               	call	i2u3588_48
 50112  01409E  D020               	goto	i2l2272
 50113  0140A0                     i2u3588_48:
 50114  0140A0  0005               	push	
 50115  0140A2  6EFA               	movwf	pclath,c
 50116  0140A4  50DE               	movf	postinc2,w,c
 50117  0140A6  6EFD               	movwf	tosl,c
 50118  0140A8  50DE               	movf	postinc2,w,c
 50119  0140AA  6EFE               	movwf	tosh,c
 50120  0140AC  50DE               	movf	postinc2,w,c
 50121  0140AE  6EFF               	movwf	tosu,c
 50122  0140B0  50FA               	movf	pclath,w,c
 50123  0140B2  51B1               	movf	i2__doprnt@c& (0+255),w,b
 50124  0140B4  0012               	return		;indir
 50125  0140B6                     i2l2271:
 50126  0140B6  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 50127  0140BA  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 50128  0140BE  CFDE F08E          	movff	postinc2,??i2__doprnt
 50129  0140C2  CFDD F08F          	movff	postdec2,??i2__doprnt+1
 50130  0140C6  C08E  FFD9         	movff	??i2__doprnt,fsr2l
 50131  0140CA  C08F  FFDA         	movff	??i2__doprnt+1,fsr2h
 50132  0140CE  C0B1  FFDF         	movff	i2__doprnt@c,indf2
 50133  0140D2                     i2l25059:
 50134  0140D2  C088  FFD9         	movff	i2__doprnt@pb,fsr2l
 50135  0140D6  C089  FFDA         	movff	i2__doprnt@pb+1,fsr2h
 50136  0140DA  2ADE               	incf	postinc2,f,c
 50137  0140DC  0E00               	movlw	0
 50138  0140DE  22DD               	addwfc	postdec2,f,c
 50139  0140E0                     i2l2272:
 50140  0140E0  0100               	movlb	0	; () banked
 50141  0140E2  07AF               	decf	i2__doprnt@prec& (0+255),f,b
 50142  0140E4  A0D8               	btfss	status,0,c
 50143  0140E6  07B0               	decf	(i2__doprnt@prec+1)& (0+255),f,b
 50144  0140E8  29AF               	incf	i2__doprnt@prec& (0+255),w,b
 50145  0140EA  E1BB               	bnz	i2l25051
 50146  0140EC  29B0               	incf	(i2__doprnt@prec+1)& (0+255),w,b
 50147  0140EE  A4D8               	btfss	status,2,c
 50148  0140F0  D7B8               	goto	i2l2266
 50149  0140F2                     i2u3589_40:
 50150                           
 50151                           ; BSR set to: 0
 50152                           
 50153                           ; BSR set to: 0
 50154  0140F2  0100               	movlb	0	; () banked
 50155  0140F4  518A               	movf	i2__doprnt@f& (0+255),w,b
 50156  0140F6  6F8E               	movwf	??i2__doprnt& (0+255),b
 50157  0140F8  518B               	movf	(i2__doprnt@f+1)& (0+255),w,b
 50158  0140FA  6F8F               	movwf	(??i2__doprnt+1)& (0+255),b
 50159  0140FC  4B8A               	infsnz	i2__doprnt@f& (0+255),f,b
 50160  0140FE  2B8B               	incf	(i2__doprnt@f+1)& (0+255),f,b
 50161  014100  C08E  FFF6         	movff	??i2__doprnt,tblptrl
 50162  014104  C08F  FFF7         	movff	??i2__doprnt+1,tblptrh
 50163  014108  0E00               	movlw	low (__mediumconst shr (0+16))
 50164  01410A  6EF8               	movwf	tblptru,c
 50165  01410C  0E0D               	movlw	(high __ramtop+-1)
 50166  01410E  64F7               	cpfsgt	tblptrh,c
 50167  014110  D003               	bra	i2u3590_47
 50168  014112  0008               	tblrd		*
 50169  014114  50F5               	movf	tablat,w,c
 50170  014116  D005               	bra	i2u3590_40
 50171  014118                     i2u3590_47:
 50172  014118  CFF6 FFE9          	movff	tblptrl,fsr0l
 50173  01411C  CFF7 FFEA          	movff	tblptrh,fsr0h
 50174  014120  50EF               	movf	indf0,w,c
 50175  014122                     i2u3590_40:
 50176  014122  0100               	movlb	0	; () banked
 50177  014124  6FB1               	movwf	i2__doprnt@c& (0+255),b
 50178  014126  51B1               	movf	i2__doprnt@c& (0+255),w,b
 50179  014128  A4D8               	btfss	status,2,c
 50180  01412A  EF1C  F096         	goto	i2l2100
 50181  01412E                     i2u3591_40:
 50182                           
 50183                           ; BSR set to: 0
 50184                           ;doprnt.c: 1540: return 0;
 50185                           
 50186                           ; BSR set to: 0
 50187                           
 50188                           ;doprnt.c: 1525: }
 50189                           ;doprnt.c: 1533: }
 50190                           ;doprnt.c: 1535: alldone:
 50191                           
 50192                           ; BSR set to: 0
 50193  01412E  0E00               	movlw	0
 50194  014130  6F89               	movwf	(?i2__doprnt+1)& (0+255),b
 50195  014132  0E00               	movlw	0
 50196  014134  6F88               	movwf	?i2__doprnt& (0+255),b
 50197  014136  0012               	return	
 50198  014138                     __end_ofi2__doprnt:
 50199                           	opt stack 0
 50200                           tosu	equ	0xFFF
 50201                           tosh	equ	0xFFE
 50202                           tosl	equ	0xFFD
 50203                           pclatu	equ	0xFFB
 50204                           pclath	equ	0xFFA
 50205                           tblptru	equ	0xFF8
 50206                           tblptrh	equ	0xFF7
 50207                           tblptrl	equ	0xFF6
 50208                           tablat	equ	0xFF5
 50209                           prodh	equ	0xFF4
 50210                           prodl	equ	0xFF3
 50211                           intcon	equ	0xFF2
 50212                           indf0	equ	0xFEF
 50213                           postinc0	equ	0xFEE
 50214                           fsr0h	equ	0xFEA
 50215                           fsr0l	equ	0xFE9
 50216                           wreg	equ	0xFE8
 50217                           indf1	equ	0xFE7
 50218                           postdec1	equ	0xFE5
 50219                           plusw1	equ	0xFE3
 50220                           fsr1h	equ	0xFE2
 50221                           fsr1l	equ	0xFE1
 50222                           bsr	equ	0xFE0
 50223                           indf2	equ	0xFDF
 50224                           postinc2	equ	0xFDE
 50225                           postdec2	equ	0xFDD
 50226                           plusw2	equ	0xFDB
 50227                           fsr2h	equ	0xFDA
 50228                           fsr2l	equ	0xFD9
 50229                           status	equ	0xFD8
 50230                           
 50231 ;; *************** function i2_scale *****************
 50232 ;; Defined at:
 50233 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 50234 ;; Parameters:    Size  Location     Type
 50235 ;;  scl             1    wreg     char 
 50236 ;; Auto vars:     Size  Location     Type
 50237 ;;  scl             1   80[COMRAM] char 
 50238 ;; Return value:  Size  Location     Type
 50239 ;;                  4   72[COMRAM] char 
 50240 ;; Registers used:
 50241 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50242 ;; Tracked objects:
 50243 ;;		On entry : 0/0
 50244 ;;		On exit  : 0/0
 50245 ;;		Unchanged: 0/0
 50246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50247 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50248 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50250 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50251 ;;Total ram usage:        9 bytes
 50252 ;; Hardware stack levels used:    1
 50253 ;; Hardware stack levels required when called:    1
 50254 ;; This function calls:
 50255 ;;		i2___awdiv
 50256 ;;		i2___awmod
 50257 ;;		i2___flmul
 50258 ;; This function is called by:
 50259 ;;		i2__doprnt
 50260 ;; This function uses a non-reentrant model
 50261 ;;
 50262                           
 50263                           	psect	text162
 50264  0150D0                     __ptext162:
 50265                           	opt stack 0
 50266  0150D0                     i2_scale:
 50267                           	opt stack 6
 50268                           
 50269                           ; BSR set to: 0
 50270                           ;incstack = 0
 50271                           ;i2scale@scl stored from wreg
 50272  0150D0  6E51               	movwf	i2scale@scl,c
 50273                           
 50274                           ;doprnt.c: 428: if(scl < 0) {
 50275  0150D2  AE51               	btfss	i2scale@scl,7,c
 50276  0150D4  D11F               	goto	i2l2089
 50277                           
 50278                           ;doprnt.c: 429: scl = -scl;
 50279  0150D6  6C51               	negf	i2scale@scl,c
 50280                           
 50281                           ;doprnt.c: 430: if(scl>=110)
 50282  0150D8  5051               	movf	i2scale@scl,w,c
 50283  0150DA  0A80               	xorlw	128
 50284  0150DC  0F12               	addlw	-238
 50285  0150DE  A0D8               	btfss	status,0,c
 50286  0150E0  D0A1               	goto	i2l2090
 50287                           
 50288                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 50289  0150E2  0E00               	movlw	0
 50290  0150E4  6E0A               	movwf	i2___awdiv@divisor+1,c
 50291  0150E6  0E0A               	movlw	10
 50292  0150E8  6E09               	movwf	i2___awdiv@divisor,c
 50293  0150EA  0E00               	movlw	0
 50294  0150EC  6E04               	movwf	i2___awmod@divisor+1,c
 50295  0150EE  0E64               	movlw	100
 50296  0150F0  6E03               	movwf	i2___awmod@divisor,c
 50297  0150F2  5051               	movf	i2scale@scl,w,c
 50298  0150F4  6E01               	movwf	i2___awmod@dividend,c
 50299  0150F6  6A02               	clrf	i2___awmod@dividend+1,c
 50300  0150F8  BE01               	btfsc	i2___awmod@dividend,7,c
 50301  0150FA  0602               	decf	i2___awmod@dividend+1,f,c
 50302  0150FC  EC15  F0D4         	call	i2___awmod
 50303  015100  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 50304  015104  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 50305  015108  ECE9  F0D1         	call	i2___awdiv	;wreg free
 50306  01510C  90D8               	bcf	status,0,c
 50307  01510E  3607               	rlcf	?i2___awdiv,f,c
 50308  015110  3608               	rlcf	?i2___awdiv+1,f,c
 50309  015112  90D8               	bcf	status,0,c
 50310  015114  3607               	rlcf	?i2___awdiv,f,c
 50311  015116  3608               	rlcf	?i2___awdiv+1,f,c
 50312  015118  0E24               	movlw	36
 50313  01511A  2607               	addwf	?i2___awdiv,f,c
 50314  01511C  0E00               	movlw	0
 50315  01511E  2208               	addwfc	?i2___awdiv+1,f,c
 50316  015120  0E11               	movlw	low __npowers_
 50317  015122  2407               	addwf	?i2___awdiv,w,c
 50318  015124  6EF6               	movwf	tblptrl,c
 50319  015126  0ECE               	movlw	high __npowers_
 50320  015128  2008               	addwfc	?i2___awdiv+1,w,c
 50321  01512A  6EF7               	movwf	tblptrh,c
 50322  01512C                     	if	1	;There are 3 active tblptr bytes
 50323  01512C  6AF8               	clrf	tblptru,c
 50324  01512E  0E00               	movlw	low (__mediumconst shr (0+16))
 50325  015130  22F8               	addwfc	tblptru,f,c
 50326  015132                     	endif
 50327  015132  0009               	tblrd		*+
 50328  015134  CFF5 F034          	movff	tablat,i2___flmul@a
 50329  015138  0009               	tblrd		*+
 50330  01513A  CFF5 F035          	movff	tablat,i2___flmul@a+1
 50331  01513E  0009               	tblrd		*+
 50332  015140  CFF5 F036          	movff	tablat,i2___flmul@a+2
 50333  015144  000A               	tblrd		*-
 50334  015146  CFF5 F037          	movff	tablat,i2___flmul@a+3
 50335  01514A  0E00               	movlw	0
 50336  01514C  6E0A               	movwf	i2___awdiv@divisor+1,c
 50337  01514E  0E64               	movlw	100
 50338  015150  6E09               	movwf	i2___awdiv@divisor,c
 50339  015152  5051               	movf	i2scale@scl,w,c
 50340  015154  6E07               	movwf	i2___awdiv@dividend,c
 50341  015156  6A08               	clrf	i2___awdiv@dividend+1,c
 50342  015158  BE07               	btfsc	i2___awdiv@dividend,7,c
 50343  01515A  0608               	decf	i2___awdiv@dividend+1,f,c
 50344  01515C  ECE9  F0D1         	call	i2___awdiv	;wreg free
 50345  015160  90D8               	bcf	status,0,c
 50346  015162  3607               	rlcf	?i2___awdiv,f,c
 50347  015164  3608               	rlcf	?i2___awdiv+1,f,c
 50348  015166  90D8               	bcf	status,0,c
 50349  015168  3607               	rlcf	?i2___awdiv,f,c
 50350  01516A  3608               	rlcf	?i2___awdiv+1,f,c
 50351  01516C  0E48               	movlw	72
 50352  01516E  2607               	addwf	?i2___awdiv,f,c
 50353  015170  0E00               	movlw	0
 50354  015172  2208               	addwfc	?i2___awdiv+1,f,c
 50355  015174  0E11               	movlw	low __npowers_
 50356  015176  2407               	addwf	?i2___awdiv,w,c
 50357  015178  6EF6               	movwf	tblptrl,c
 50358  01517A  0ECE               	movlw	high __npowers_
 50359  01517C  2008               	addwfc	?i2___awdiv+1,w,c
 50360  01517E  6EF7               	movwf	tblptrh,c
 50361  015180                     	if	1	;There are 3 active tblptr bytes
 50362  015180  6AF8               	clrf	tblptru,c
 50363  015182  0E00               	movlw	low (__mediumconst shr (0+16))
 50364  015184  22F8               	addwfc	tblptru,f,c
 50365  015186                     	endif
 50366  015186  0009               	tblrd		*+
 50367  015188  CFF5 F030          	movff	tablat,i2___flmul@b
 50368  01518C  0009               	tblrd		*+
 50369  01518E  CFF5 F031          	movff	tablat,i2___flmul@b+1
 50370  015192  0009               	tblrd		*+
 50371  015194  CFF5 F032          	movff	tablat,i2___flmul@b+2
 50372  015198  000A               	tblrd		*-
 50373  01519A  CFF5 F033          	movff	tablat,i2___flmul@b+3
 50374  01519E  EC05  F0AE         	call	i2___flmul	;wreg free
 50375  0151A2  C030  F04D         	movff	?i2___flmul,i2_scale$5961
 50376  0151A6  C031  F04E         	movff	?i2___flmul+1,i2_scale$5961+1
 50377  0151AA  C032  F04F         	movff	?i2___flmul+2,i2_scale$5961+2
 50378  0151AE  C033  F050         	movff	?i2___flmul+3,i2_scale$5961+3
 50379                           
 50380                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 50381  0151B2  C04D  F030         	movff	i2_scale$5961,i2___flmul@b
 50382  0151B6  C04E  F031         	movff	i2_scale$5961+1,i2___flmul@b+1
 50383  0151BA  C04F  F032         	movff	i2_scale$5961+2,i2___flmul@b+2
 50384  0151BE  C050  F033         	movff	i2_scale$5961+3,i2___flmul@b+3
 50385  0151C2  0E00               	movlw	0
 50386  0151C4  6E04               	movwf	i2___awmod@divisor+1,c
 50387  0151C6  0E0A               	movlw	10
 50388  0151C8  6E03               	movwf	i2___awmod@divisor,c
 50389  0151CA  5051               	movf	i2scale@scl,w,c
 50390  0151CC  6E01               	movwf	i2___awmod@dividend,c
 50391  0151CE  6A02               	clrf	i2___awmod@dividend+1,c
 50392  0151D0  BE01               	btfsc	i2___awmod@dividend,7,c
 50393  0151D2  0602               	decf	i2___awmod@dividend+1,f,c
 50394  0151D4  EC15  F0D4         	call	i2___awmod	;wreg free
 50395  0151D8  90D8               	bcf	status,0,c
 50396  0151DA  3601               	rlcf	?i2___awmod,f,c
 50397  0151DC  3602               	rlcf	?i2___awmod+1,f,c
 50398  0151DE  90D8               	bcf	status,0,c
 50399  0151E0  3601               	rlcf	?i2___awmod,f,c
 50400  0151E2  3602               	rlcf	?i2___awmod+1,f,c
 50401  0151E4  0E11               	movlw	low __npowers_
 50402  0151E6  2401               	addwf	?i2___awmod,w,c
 50403  0151E8  6EF6               	movwf	tblptrl,c
 50404  0151EA  0ECE               	movlw	high __npowers_
 50405  0151EC  2002               	addwfc	?i2___awmod+1,w,c
 50406  0151EE  6EF7               	movwf	tblptrh,c
 50407  0151F0                     	if	1	;There are 3 active tblptr bytes
 50408  0151F0  6AF8               	clrf	tblptru,c
 50409  0151F2  0E00               	movlw	low (__mediumconst shr (0+16))
 50410  0151F4  22F8               	addwfc	tblptru,f,c
 50411  0151F6                     	endif
 50412  0151F6  0009               	tblrd		*+
 50413  0151F8  CFF5 F034          	movff	tablat,i2___flmul@a
 50414  0151FC  0009               	tblrd		*+
 50415  0151FE  CFF5 F035          	movff	tablat,i2___flmul@a+1
 50416  015202  0009               	tblrd		*+
 50417  015204  CFF5 F036          	movff	tablat,i2___flmul@a+2
 50418  015208  000A               	tblrd		*-
 50419  01520A  CFF5 F037          	movff	tablat,i2___flmul@a+3
 50420  01520E  EC05  F0AE         	call	i2___flmul	;wreg free
 50421  015212  C030  F049         	movff	?i2___flmul,?i2_scale
 50422  015216  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 50423  01521A  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 50424  01521E  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 50425  015222  0012               	return	
 50426  015224                     i2l2090:
 50427                           
 50428                           ;doprnt.c: 432: else if(scl > 10)
 50429  015224  5051               	movf	i2scale@scl,w,c
 50430  015226  0A80               	xorlw	128
 50431  015228  0F75               	addlw	-139
 50432  01522A  A0D8               	btfss	status,0,c
 50433  01522C  D05B               	goto	i2l2093
 50434                           
 50435                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 50436  01522E  0E00               	movlw	0
 50437  015230  6E0A               	movwf	i2___awdiv@divisor+1,c
 50438  015232  0E0A               	movlw	10
 50439  015234  6E09               	movwf	i2___awdiv@divisor,c
 50440  015236  5051               	movf	i2scale@scl,w,c
 50441  015238  6E07               	movwf	i2___awdiv@dividend,c
 50442  01523A  6A08               	clrf	i2___awdiv@dividend+1,c
 50443  01523C  BE07               	btfsc	i2___awdiv@dividend,7,c
 50444  01523E  0608               	decf	i2___awdiv@dividend+1,f,c
 50445  015240  ECE9  F0D1         	call	i2___awdiv	;wreg free
 50446  015244  90D8               	bcf	status,0,c
 50447  015246  3607               	rlcf	?i2___awdiv,f,c
 50448  015248  3608               	rlcf	?i2___awdiv+1,f,c
 50449  01524A  90D8               	bcf	status,0,c
 50450  01524C  3607               	rlcf	?i2___awdiv,f,c
 50451  01524E  3608               	rlcf	?i2___awdiv+1,f,c
 50452  015250  0E24               	movlw	36
 50453  015252  2607               	addwf	?i2___awdiv,f,c
 50454  015254  0E00               	movlw	0
 50455  015256  2208               	addwfc	?i2___awdiv+1,f,c
 50456  015258  0E11               	movlw	low __npowers_
 50457  01525A  2407               	addwf	?i2___awdiv,w,c
 50458  01525C  6EF6               	movwf	tblptrl,c
 50459  01525E  0ECE               	movlw	high __npowers_
 50460  015260  2008               	addwfc	?i2___awdiv+1,w,c
 50461  015262  6EF7               	movwf	tblptrh,c
 50462  015264                     	if	1	;There are 3 active tblptr bytes
 50463  015264  6AF8               	clrf	tblptru,c
 50464  015266  0E00               	movlw	low (__mediumconst shr (0+16))
 50465  015268  22F8               	addwfc	tblptru,f,c
 50466  01526A                     	endif
 50467  01526A  0009               	tblrd		*+
 50468  01526C  CFF5 F030          	movff	tablat,i2___flmul@b
 50469  015270  0009               	tblrd		*+
 50470  015272  CFF5 F031          	movff	tablat,i2___flmul@b+1
 50471  015276  0009               	tblrd		*+
 50472  015278  CFF5 F032          	movff	tablat,i2___flmul@b+2
 50473  01527C  000A               	tblrd		*-
 50474  01527E  CFF5 F033          	movff	tablat,i2___flmul@b+3
 50475  015282  0E00               	movlw	0
 50476  015284  6E04               	movwf	i2___awmod@divisor+1,c
 50477  015286  0E0A               	movlw	10
 50478  015288  6E03               	movwf	i2___awmod@divisor,c
 50479  01528A  5051               	movf	i2scale@scl,w,c
 50480  01528C  6E01               	movwf	i2___awmod@dividend,c
 50481  01528E  6A02               	clrf	i2___awmod@dividend+1,c
 50482  015290  BE01               	btfsc	i2___awmod@dividend,7,c
 50483  015292  0602               	decf	i2___awmod@dividend+1,f,c
 50484  015294  EC15  F0D4         	call	i2___awmod	;wreg free
 50485  015298  90D8               	bcf	status,0,c
 50486  01529A  3601               	rlcf	?i2___awmod,f,c
 50487  01529C  3602               	rlcf	?i2___awmod+1,f,c
 50488  01529E  90D8               	bcf	status,0,c
 50489  0152A0  3601               	rlcf	?i2___awmod,f,c
 50490  0152A2  3602               	rlcf	?i2___awmod+1,f,c
 50491  0152A4  0E11               	movlw	low __npowers_
 50492  0152A6  2401               	addwf	?i2___awmod,w,c
 50493  0152A8  6EF6               	movwf	tblptrl,c
 50494  0152AA  0ECE               	movlw	high __npowers_
 50495  0152AC  2002               	addwfc	?i2___awmod+1,w,c
 50496  0152AE  6EF7               	movwf	tblptrh,c
 50497  0152B0                     	if	1	;There are 3 active tblptr bytes
 50498  0152B0  6AF8               	clrf	tblptru,c
 50499  0152B2  0E00               	movlw	low (__mediumconst shr (0+16))
 50500  0152B4  22F8               	addwfc	tblptru,f,c
 50501  0152B6                     	endif
 50502  0152B6  0009               	tblrd		*+
 50503  0152B8  CFF5 F034          	movff	tablat,i2___flmul@a
 50504  0152BC  0009               	tblrd		*+
 50505  0152BE  CFF5 F035          	movff	tablat,i2___flmul@a+1
 50506  0152C2  0009               	tblrd		*+
 50507  0152C4  CFF5 F036          	movff	tablat,i2___flmul@a+2
 50508  0152C8  000A               	tblrd		*-
 50509  0152CA  CFF5 F037          	movff	tablat,i2___flmul@a+3
 50510  0152CE  EC05  F0AE         	call	i2___flmul	;wreg free
 50511  0152D2  C030  F049         	movff	?i2___flmul,?i2_scale
 50512  0152D6  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 50513  0152DA  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 50514  0152DE  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 50515  0152E2  0012               	return	
 50516  0152E4                     i2l2093:
 50517                           
 50518                           ;doprnt.c: 434: return _npowers_[scl];
 50519  0152E4  5051               	movf	i2scale@scl,w,c
 50520  0152E6  0D04               	mullw	4
 50521  0152E8  0E11               	movlw	low __npowers_
 50522  0152EA  24F3               	addwf	prodl,w,c
 50523  0152EC  6EF6               	movwf	tblptrl,c
 50524  0152EE  0ECE               	movlw	high __npowers_
 50525  0152F0  20F4               	addwfc	prodh,w,c
 50526  0152F2  6EF7               	movwf	tblptrh,c
 50527  0152F4                     	if	1	;There are 3 active tblptr bytes
 50528  0152F4  6AF8               	clrf	tblptru,c
 50529  0152F6  0E00               	movlw	low (__mediumconst shr (0+16))
 50530  0152F8  22F8               	addwfc	tblptru,f,c
 50531  0152FA                     	endif
 50532  0152FA  0009               	tblrd		*+
 50533  0152FC  CFF5 F049          	movff	tablat,?i2_scale
 50534  015300  0009               	tblrd		*+
 50535  015302  CFF5 F04A          	movff	tablat,?i2_scale+1
 50536  015306  0009               	tblrd		*+
 50537  015308  CFF5 F04B          	movff	tablat,?i2_scale+2
 50538  01530C  000A               	tblrd		*-
 50539  01530E  CFF5 F04C          	movff	tablat,?i2_scale+3
 50540  015312  0012               	return	
 50541  015314                     i2l2089:
 50542                           
 50543                           ;doprnt.c: 435: }
 50544                           ;doprnt.c: 436: if(scl>=110)
 50545  015314  5051               	movf	i2scale@scl,w,c
 50546  015316  0A80               	xorlw	128
 50547  015318  0F12               	addlw	-238
 50548  01531A  A0D8               	btfss	status,0,c
 50549  01531C  D0A1               	goto	i2l2094
 50550                           
 50551                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 50552  01531E  0E00               	movlw	0
 50553  015320  6E0A               	movwf	i2___awdiv@divisor+1,c
 50554  015322  0E0A               	movlw	10
 50555  015324  6E09               	movwf	i2___awdiv@divisor,c
 50556  015326  0E00               	movlw	0
 50557  015328  6E04               	movwf	i2___awmod@divisor+1,c
 50558  01532A  0E64               	movlw	100
 50559  01532C  6E03               	movwf	i2___awmod@divisor,c
 50560  01532E  5051               	movf	i2scale@scl,w,c
 50561  015330  6E01               	movwf	i2___awmod@dividend,c
 50562  015332  6A02               	clrf	i2___awmod@dividend+1,c
 50563  015334  BE01               	btfsc	i2___awmod@dividend,7,c
 50564  015336  0602               	decf	i2___awmod@dividend+1,f,c
 50565  015338  EC15  F0D4         	call	i2___awmod	;wreg free
 50566  01533C  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 50567  015340  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 50568  015344  ECE9  F0D1         	call	i2___awdiv	;wreg free
 50569  015348  90D8               	bcf	status,0,c
 50570  01534A  3607               	rlcf	?i2___awdiv,f,c
 50571  01534C  3608               	rlcf	?i2___awdiv+1,f,c
 50572  01534E  90D8               	bcf	status,0,c
 50573  015350  3607               	rlcf	?i2___awdiv,f,c
 50574  015352  3608               	rlcf	?i2___awdiv+1,f,c
 50575  015354  0E24               	movlw	36
 50576  015356  2607               	addwf	?i2___awdiv,f,c
 50577  015358  0E00               	movlw	0
 50578  01535A  2208               	addwfc	?i2___awdiv+1,f,c
 50579  01535C  0EDD               	movlw	low __powers_
 50580  01535E  2407               	addwf	?i2___awdiv,w,c
 50581  015360  6EF6               	movwf	tblptrl,c
 50582  015362  0ECD               	movlw	high __powers_
 50583  015364  2008               	addwfc	?i2___awdiv+1,w,c
 50584  015366  6EF7               	movwf	tblptrh,c
 50585  015368                     	if	1	;There are 3 active tblptr bytes
 50586  015368  6AF8               	clrf	tblptru,c
 50587  01536A  0E00               	movlw	low (__mediumconst shr (0+16))
 50588  01536C  22F8               	addwfc	tblptru,f,c
 50589  01536E                     	endif
 50590  01536E  0009               	tblrd		*+
 50591  015370  CFF5 F034          	movff	tablat,i2___flmul@a
 50592  015374  0009               	tblrd		*+
 50593  015376  CFF5 F035          	movff	tablat,i2___flmul@a+1
 50594  01537A  0009               	tblrd		*+
 50595  01537C  CFF5 F036          	movff	tablat,i2___flmul@a+2
 50596  015380  000A               	tblrd		*-
 50597  015382  CFF5 F037          	movff	tablat,i2___flmul@a+3
 50598  015386  0E00               	movlw	0
 50599  015388  6E0A               	movwf	i2___awdiv@divisor+1,c
 50600  01538A  0E64               	movlw	100
 50601  01538C  6E09               	movwf	i2___awdiv@divisor,c
 50602  01538E  5051               	movf	i2scale@scl,w,c
 50603  015390  6E07               	movwf	i2___awdiv@dividend,c
 50604  015392  6A08               	clrf	i2___awdiv@dividend+1,c
 50605  015394  BE07               	btfsc	i2___awdiv@dividend,7,c
 50606  015396  0608               	decf	i2___awdiv@dividend+1,f,c
 50607  015398  ECE9  F0D1         	call	i2___awdiv	;wreg free
 50608  01539C  90D8               	bcf	status,0,c
 50609  01539E  3607               	rlcf	?i2___awdiv,f,c
 50610  0153A0  3608               	rlcf	?i2___awdiv+1,f,c
 50611  0153A2  90D8               	bcf	status,0,c
 50612  0153A4  3607               	rlcf	?i2___awdiv,f,c
 50613  0153A6  3608               	rlcf	?i2___awdiv+1,f,c
 50614  0153A8  0E48               	movlw	72
 50615  0153AA  2607               	addwf	?i2___awdiv,f,c
 50616  0153AC  0E00               	movlw	0
 50617  0153AE  2208               	addwfc	?i2___awdiv+1,f,c
 50618  0153B0  0EDD               	movlw	low __powers_
 50619  0153B2  2407               	addwf	?i2___awdiv,w,c
 50620  0153B4  6EF6               	movwf	tblptrl,c
 50621  0153B6  0ECD               	movlw	high __powers_
 50622  0153B8  2008               	addwfc	?i2___awdiv+1,w,c
 50623  0153BA  6EF7               	movwf	tblptrh,c
 50624  0153BC                     	if	1	;There are 3 active tblptr bytes
 50625  0153BC  6AF8               	clrf	tblptru,c
 50626  0153BE  0E00               	movlw	low (__mediumconst shr (0+16))
 50627  0153C0  22F8               	addwfc	tblptru,f,c
 50628  0153C2                     	endif
 50629  0153C2  0009               	tblrd		*+
 50630  0153C4  CFF5 F030          	movff	tablat,i2___flmul@b
 50631  0153C8  0009               	tblrd		*+
 50632  0153CA  CFF5 F031          	movff	tablat,i2___flmul@b+1
 50633  0153CE  0009               	tblrd		*+
 50634  0153D0  CFF5 F032          	movff	tablat,i2___flmul@b+2
 50635  0153D4  000A               	tblrd		*-
 50636  0153D6  CFF5 F033          	movff	tablat,i2___flmul@b+3
 50637  0153DA  EC05  F0AE         	call	i2___flmul	;wreg free
 50638  0153DE  C030  F04D         	movff	?i2___flmul,i2_scale$5961
 50639  0153E2  C031  F04E         	movff	?i2___flmul+1,i2_scale$5961+1
 50640  0153E6  C032  F04F         	movff	?i2___flmul+2,i2_scale$5961+2
 50641  0153EA  C033  F050         	movff	?i2___flmul+3,i2_scale$5961+3
 50642                           
 50643                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 50644  0153EE  C04D  F030         	movff	i2_scale$5961,i2___flmul@b
 50645  0153F2  C04E  F031         	movff	i2_scale$5961+1,i2___flmul@b+1
 50646  0153F6  C04F  F032         	movff	i2_scale$5961+2,i2___flmul@b+2
 50647  0153FA  C050  F033         	movff	i2_scale$5961+3,i2___flmul@b+3
 50648  0153FE  0E00               	movlw	0
 50649  015400  6E04               	movwf	i2___awmod@divisor+1,c
 50650  015402  0E0A               	movlw	10
 50651  015404  6E03               	movwf	i2___awmod@divisor,c
 50652  015406  5051               	movf	i2scale@scl,w,c
 50653  015408  6E01               	movwf	i2___awmod@dividend,c
 50654  01540A  6A02               	clrf	i2___awmod@dividend+1,c
 50655  01540C  BE01               	btfsc	i2___awmod@dividend,7,c
 50656  01540E  0602               	decf	i2___awmod@dividend+1,f,c
 50657  015410  EC15  F0D4         	call	i2___awmod	;wreg free
 50658  015414  90D8               	bcf	status,0,c
 50659  015416  3601               	rlcf	?i2___awmod,f,c
 50660  015418  3602               	rlcf	?i2___awmod+1,f,c
 50661  01541A  90D8               	bcf	status,0,c
 50662  01541C  3601               	rlcf	?i2___awmod,f,c
 50663  01541E  3602               	rlcf	?i2___awmod+1,f,c
 50664  015420  0EDD               	movlw	low __powers_
 50665  015422  2401               	addwf	?i2___awmod,w,c
 50666  015424  6EF6               	movwf	tblptrl,c
 50667  015426  0ECD               	movlw	high __powers_
 50668  015428  2002               	addwfc	?i2___awmod+1,w,c
 50669  01542A  6EF7               	movwf	tblptrh,c
 50670  01542C                     	if	1	;There are 3 active tblptr bytes
 50671  01542C  6AF8               	clrf	tblptru,c
 50672  01542E  0E00               	movlw	low (__mediumconst shr (0+16))
 50673  015430  22F8               	addwfc	tblptru,f,c
 50674  015432                     	endif
 50675  015432  0009               	tblrd		*+
 50676  015434  CFF5 F034          	movff	tablat,i2___flmul@a
 50677  015438  0009               	tblrd		*+
 50678  01543A  CFF5 F035          	movff	tablat,i2___flmul@a+1
 50679  01543E  0009               	tblrd		*+
 50680  015440  CFF5 F036          	movff	tablat,i2___flmul@a+2
 50681  015444  000A               	tblrd		*-
 50682  015446  CFF5 F037          	movff	tablat,i2___flmul@a+3
 50683  01544A  EC05  F0AE         	call	i2___flmul	;wreg free
 50684  01544E  C030  F049         	movff	?i2___flmul,?i2_scale
 50685  015452  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 50686  015456  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 50687  01545A  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 50688  01545E  0012               	return	
 50689  015460                     i2l2094:
 50690                           
 50691                           ;doprnt.c: 438: else if(scl > 10)
 50692  015460  5051               	movf	i2scale@scl,w,c
 50693  015462  0A80               	xorlw	128
 50694  015464  0F75               	addlw	-139
 50695  015466  A0D8               	btfss	status,0,c
 50696  015468  D05B               	goto	i2l2096
 50697                           
 50698                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 50699  01546A  0E00               	movlw	0
 50700  01546C  6E0A               	movwf	i2___awdiv@divisor+1,c
 50701  01546E  0E0A               	movlw	10
 50702  015470  6E09               	movwf	i2___awdiv@divisor,c
 50703  015472  5051               	movf	i2scale@scl,w,c
 50704  015474  6E07               	movwf	i2___awdiv@dividend,c
 50705  015476  6A08               	clrf	i2___awdiv@dividend+1,c
 50706  015478  BE07               	btfsc	i2___awdiv@dividend,7,c
 50707  01547A  0608               	decf	i2___awdiv@dividend+1,f,c
 50708  01547C  ECE9  F0D1         	call	i2___awdiv	;wreg free
 50709  015480  90D8               	bcf	status,0,c
 50710  015482  3607               	rlcf	?i2___awdiv,f,c
 50711  015484  3608               	rlcf	?i2___awdiv+1,f,c
 50712  015486  90D8               	bcf	status,0,c
 50713  015488  3607               	rlcf	?i2___awdiv,f,c
 50714  01548A  3608               	rlcf	?i2___awdiv+1,f,c
 50715  01548C  0E24               	movlw	36
 50716  01548E  2607               	addwf	?i2___awdiv,f,c
 50717  015490  0E00               	movlw	0
 50718  015492  2208               	addwfc	?i2___awdiv+1,f,c
 50719  015494  0EDD               	movlw	low __powers_
 50720  015496  2407               	addwf	?i2___awdiv,w,c
 50721  015498  6EF6               	movwf	tblptrl,c
 50722  01549A  0ECD               	movlw	high __powers_
 50723  01549C  2008               	addwfc	?i2___awdiv+1,w,c
 50724  01549E  6EF7               	movwf	tblptrh,c
 50725  0154A0                     	if	1	;There are 3 active tblptr bytes
 50726  0154A0  6AF8               	clrf	tblptru,c
 50727  0154A2  0E00               	movlw	low (__mediumconst shr (0+16))
 50728  0154A4  22F8               	addwfc	tblptru,f,c
 50729  0154A6                     	endif
 50730  0154A6  0009               	tblrd		*+
 50731  0154A8  CFF5 F030          	movff	tablat,i2___flmul@b
 50732  0154AC  0009               	tblrd		*+
 50733  0154AE  CFF5 F031          	movff	tablat,i2___flmul@b+1
 50734  0154B2  0009               	tblrd		*+
 50735  0154B4  CFF5 F032          	movff	tablat,i2___flmul@b+2
 50736  0154B8  000A               	tblrd		*-
 50737  0154BA  CFF5 F033          	movff	tablat,i2___flmul@b+3
 50738  0154BE  0E00               	movlw	0
 50739  0154C0  6E04               	movwf	i2___awmod@divisor+1,c
 50740  0154C2  0E0A               	movlw	10
 50741  0154C4  6E03               	movwf	i2___awmod@divisor,c
 50742  0154C6  5051               	movf	i2scale@scl,w,c
 50743  0154C8  6E01               	movwf	i2___awmod@dividend,c
 50744  0154CA  6A02               	clrf	i2___awmod@dividend+1,c
 50745  0154CC  BE01               	btfsc	i2___awmod@dividend,7,c
 50746  0154CE  0602               	decf	i2___awmod@dividend+1,f,c
 50747  0154D0  EC15  F0D4         	call	i2___awmod	;wreg free
 50748  0154D4  90D8               	bcf	status,0,c
 50749  0154D6  3601               	rlcf	?i2___awmod,f,c
 50750  0154D8  3602               	rlcf	?i2___awmod+1,f,c
 50751  0154DA  90D8               	bcf	status,0,c
 50752  0154DC  3601               	rlcf	?i2___awmod,f,c
 50753  0154DE  3602               	rlcf	?i2___awmod+1,f,c
 50754  0154E0  0EDD               	movlw	low __powers_
 50755  0154E2  2401               	addwf	?i2___awmod,w,c
 50756  0154E4  6EF6               	movwf	tblptrl,c
 50757  0154E6  0ECD               	movlw	high __powers_
 50758  0154E8  2002               	addwfc	?i2___awmod+1,w,c
 50759  0154EA  6EF7               	movwf	tblptrh,c
 50760  0154EC                     	if	1	;There are 3 active tblptr bytes
 50761  0154EC  6AF8               	clrf	tblptru,c
 50762  0154EE  0E00               	movlw	low (__mediumconst shr (0+16))
 50763  0154F0  22F8               	addwfc	tblptru,f,c
 50764  0154F2                     	endif
 50765  0154F2  0009               	tblrd		*+
 50766  0154F4  CFF5 F034          	movff	tablat,i2___flmul@a
 50767  0154F8  0009               	tblrd		*+
 50768  0154FA  CFF5 F035          	movff	tablat,i2___flmul@a+1
 50769  0154FE  0009               	tblrd		*+
 50770  015500  CFF5 F036          	movff	tablat,i2___flmul@a+2
 50771  015504  000A               	tblrd		*-
 50772  015506  CFF5 F037          	movff	tablat,i2___flmul@a+3
 50773  01550A  EC05  F0AE         	call	i2___flmul	;wreg free
 50774  01550E  C030  F049         	movff	?i2___flmul,?i2_scale
 50775  015512  C031  F04A         	movff	?i2___flmul+1,?i2_scale+1
 50776  015516  C032  F04B         	movff	?i2___flmul+2,?i2_scale+2
 50777  01551A  C033  F04C         	movff	?i2___flmul+3,?i2_scale+3
 50778  01551E  0012               	return	
 50779  015520                     i2l2096:
 50780                           
 50781                           ;doprnt.c: 440: return _powers_[scl];
 50782  015520  5051               	movf	i2scale@scl,w,c
 50783  015522  0D04               	mullw	4
 50784  015524  0EDD               	movlw	low __powers_
 50785  015526  24F3               	addwf	prodl,w,c
 50786  015528  6EF6               	movwf	tblptrl,c
 50787  01552A  0ECD               	movlw	high __powers_
 50788  01552C  20F4               	addwfc	prodh,w,c
 50789  01552E  6EF7               	movwf	tblptrh,c
 50790  015530                     	if	1	;There are 3 active tblptr bytes
 50791  015530  6AF8               	clrf	tblptru,c
 50792  015532  0E00               	movlw	low (__mediumconst shr (0+16))
 50793  015534  22F8               	addwfc	tblptru,f,c
 50794  015536                     	endif
 50795  015536  0009               	tblrd		*+
 50796  015538  CFF5 F049          	movff	tablat,?i2_scale
 50797  01553C  0009               	tblrd		*+
 50798  01553E  CFF5 F04A          	movff	tablat,?i2_scale+1
 50799  015542  0009               	tblrd		*+
 50800  015544  CFF5 F04B          	movff	tablat,?i2_scale+2
 50801  015548  000A               	tblrd		*-
 50802  01554A  CFF5 F04C          	movff	tablat,?i2_scale+3
 50803  01554E  0012               	return	
 50804  015550                     __end_ofi2_scale:
 50805                           	opt stack 0
 50806                           tosu	equ	0xFFF
 50807                           tosh	equ	0xFFE
 50808                           tosl	equ	0xFFD
 50809                           pclatu	equ	0xFFB
 50810                           pclath	equ	0xFFA
 50811                           tblptru	equ	0xFF8
 50812                           tblptrh	equ	0xFF7
 50813                           tblptrl	equ	0xFF6
 50814                           tablat	equ	0xFF5
 50815                           prodh	equ	0xFF4
 50816                           prodl	equ	0xFF3
 50817                           intcon	equ	0xFF2
 50818                           indf0	equ	0xFEF
 50819                           postinc0	equ	0xFEE
 50820                           fsr0h	equ	0xFEA
 50821                           fsr0l	equ	0xFE9
 50822                           wreg	equ	0xFE8
 50823                           indf1	equ	0xFE7
 50824                           postdec1	equ	0xFE5
 50825                           plusw1	equ	0xFE3
 50826                           fsr1h	equ	0xFE2
 50827                           fsr1l	equ	0xFE1
 50828                           bsr	equ	0xFE0
 50829                           indf2	equ	0xFDF
 50830                           postinc2	equ	0xFDE
 50831                           postdec2	equ	0xFDD
 50832                           plusw2	equ	0xFDB
 50833                           fsr2h	equ	0xFDA
 50834                           fsr2l	equ	0xFD9
 50835                           status	equ	0xFD8
 50836                           
 50837 ;; *************** function i2_putch *****************
 50838 ;; Defined at:
 50839 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 50840 ;; Parameters:    Size  Location     Type
 50841 ;;  txData          1    wreg     unsigned char 
 50842 ;; Auto vars:     Size  Location     Type
 50843 ;;  txData          1    1[COMRAM] unsigned char 
 50844 ;; Return value:  Size  Location     Type
 50845 ;;                  1    wreg      void 
 50846 ;; Registers used:
 50847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 50848 ;; Tracked objects:
 50849 ;;		On entry : 0/0
 50850 ;;		On exit  : 0/0
 50851 ;;		Unchanged: 0/0
 50852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50856 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50857 ;;Total ram usage:        1 bytes
 50858 ;; Hardware stack levels used:    1
 50859 ;; Hardware stack levels required when called:    1
 50860 ;; This function calls:
 50861 ;;		i2_EUSART2_Write
 50862 ;; This function is called by:
 50863 ;;		i2_printf
 50864 ;; This function uses a non-reentrant model
 50865 ;;
 50866                           
 50867                           	psect	text163
 50868  01BFE6                     __ptext163:
 50869                           	opt stack 0
 50870  01BFE6                     i2_putch:
 50871                           	opt stack 6
 50872                           
 50873                           ;incstack = 0
 50874                           ;i2putch@txData stored from wreg
 50875  01BFE6  6E02               	movwf	i2putch@txData,c
 50876                           
 50877                           ;eusart2.c: 187: EUSART2_Write(txData);
 50878  01BFE8  5002               	movf	i2putch@txData,w,c
 50879  01BFEA  EC7A  F0D8         	call	i2_EUSART2_Write
 50880  01BFEE  0012               	return		;funcret
 50881  01BFF0                     __end_ofi2_putch:
 50882                           	opt stack 0
 50883                           tosu	equ	0xFFF
 50884                           tosh	equ	0xFFE
 50885                           tosl	equ	0xFFD
 50886                           pclatu	equ	0xFFB
 50887                           pclath	equ	0xFFA
 50888                           tblptru	equ	0xFF8
 50889                           tblptrh	equ	0xFF7
 50890                           tblptrl	equ	0xFF6
 50891                           tablat	equ	0xFF5
 50892                           prodh	equ	0xFF4
 50893                           prodl	equ	0xFF3
 50894                           intcon	equ	0xFF2
 50895                           indf0	equ	0xFEF
 50896                           postinc0	equ	0xFEE
 50897                           fsr0h	equ	0xFEA
 50898                           fsr0l	equ	0xFE9
 50899                           wreg	equ	0xFE8
 50900                           indf1	equ	0xFE7
 50901                           postdec1	equ	0xFE5
 50902                           plusw1	equ	0xFE3
 50903                           fsr1h	equ	0xFE2
 50904                           fsr1l	equ	0xFE1
 50905                           bsr	equ	0xFE0
 50906                           indf2	equ	0xFDF
 50907                           postinc2	equ	0xFDE
 50908                           postdec2	equ	0xFDD
 50909                           plusw2	equ	0xFDB
 50910                           fsr2h	equ	0xFDA
 50911                           fsr2l	equ	0xFD9
 50912                           status	equ	0xFD8
 50913                           
 50914 ;; *************** function i2_EUSART2_Write *****************
 50915 ;; Defined at:
 50916 ;;		line 155 in file "mcc_generated_files/eusart2.c"
 50917 ;; Parameters:    Size  Location     Type
 50918 ;;  txData          1    wreg     unsigned char 
 50919 ;; Auto vars:     Size  Location     Type
 50920 ;;  txData          1    0[COMRAM] unsigned char 
 50921 ;; Return value:  Size  Location     Type
 50922 ;;                  1    wreg      void 
 50923 ;; Registers used:
 50924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 50925 ;; Tracked objects:
 50926 ;;		On entry : 0/0
 50927 ;;		On exit  : 0/0
 50928 ;;		Unchanged: 0/0
 50929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 50930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50931 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50933 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50934 ;;Total ram usage:        1 bytes
 50935 ;; Hardware stack levels used:    1
 50936 ;; This function calls:
 50937 ;;		Nothing
 50938 ;; This function is called by:
 50939 ;;		i2_putch
 50940 ;; This function uses a non-reentrant model
 50941 ;;
 50942                           
 50943                           	psect	text164
 50944  01B0F4                     __ptext164:
 50945                           	opt stack 0
 50946  01B0F4                     i2_EUSART2_Write:
 50947                           	opt stack 6
 50948                           
 50949                           ;incstack = 0
 50950                           ;i2EUSART2_Write@txData stored from wreg
 50951  01B0F4  6E01               	movwf	i2EUSART2_Write@txData,c
 50952                           
 50953                           ;eusart2.c: 157: while(0 == eusart2TxBufferRemaining)
 50954  01B0F6  D004               	goto	i2l436
 50955  01B0F8                     i2l437:
 50956                           
 50957                           ; BSR set to: 1
 50958  01B0F8  0004               	clrwdt		;# 
 50959                           
 50960                           ;eusart2.c: 160: error_handler.USB_UART_COMM_error_flag = 1;
 50961  01B0FA  0E01               	movlw	1
 50962  01B0FC  0101               	movlb	1	; () banked
 50963  01B0FE  6F68               	movwf	(_error_handler+8)& (0+255),b
 50964  01B100                     i2l436:
 50965                           
 50966                           ; BSR set to: 1
 50967  01B100  0101               	movlb	1	; () banked
 50968  01B102  51A4               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 50969  01B104  B4D8               	btfsc	status,2,c
 50970  01B106  D7F8               	goto	i2l437
 50971                           
 50972                           ; BSR set to: 1
 50973                           ;eusart2.c: 161: }
 50974                           ;eusart2.c: 163: if(0 == PIE3bits.TX2IE)
 50975  01B108  010E               	movlb	14	; () banked
 50976  01B10A  BD2C               	btfsc	44,6,b	;volatile
 50977  01B10C  D003               	goto	i2l439
 50978                           
 50979                           ; BSR set to: 14
 50980                           ;eusart2.c: 164: {
 50981                           ;eusart2.c: 165: TX2REG = txData;
 50982  01B10E  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 50983                           
 50984                           ;eusart2.c: 166: }
 50985  01B112  D013               	goto	i2l440
 50986  01B114                     i2l439:
 50987                           
 50988                           ; BSR set to: 14
 50989                           ;eusart2.c: 167: else
 50990                           ;eusart2.c: 168: {
 50991                           ;eusart2.c: 169: PIE3bits.TX2IE = 0;
 50992  01B114  9D2C               	bcf	44,6,b	;volatile
 50993                           
 50994                           ; BSR set to: 14
 50995                           ;eusart2.c: 170: eusart2TxBuffer[eusart2TxHead++] = txData;
 50996  01B116  0101               	movlb	1	; () banked
 50997  01B118  51A6               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 50998  01B11A  0D01               	mullw	1
 50999  01B11C  0E00               	movlw	low _eusart2TxBuffer
 51000  01B11E  24F3               	addwf	prodl,w,c
 51001  01B120  6ED9               	movwf	fsr2l,c
 51002  01B122  0E04               	movlw	high _eusart2TxBuffer
 51003  01B124  20F4               	addwfc	prodh,w,c
 51004  01B126  6EDA               	movwf	fsr2h,c
 51005  01B128  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 51006                           
 51007                           ; BSR set to: 1
 51008  01B12C  2BA6               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 51009                           
 51010                           ; BSR set to: 1
 51011                           ;eusart2.c: 171: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 51012  01B12E  0E7F               	movlw	127
 51013  01B130  65A6               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 51014  01B132  D002               	goto	i2l441
 51015                           
 51016                           ; BSR set to: 1
 51017                           ;eusart2.c: 172: {
 51018                           ;eusart2.c: 173: eusart2TxHead = 0;
 51019  01B134  0E00               	movlw	0
 51020  01B136  6FA6               	movwf	_eusart2TxHead& (0+255),b	;volatile
 51021  01B138                     i2l441:
 51022                           
 51023                           ; BSR set to: 1
 51024                           ;eusart2.c: 174: }
 51025                           ;eusart2.c: 175: eusart2TxBufferRemaining--;
 51026                           
 51027                           ; BSR set to: 1
 51028  01B138  07A4               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 51029  01B13A                     i2l440:
 51030                           
 51031                           ;eusart2.c: 176: }
 51032                           ;eusart2.c: 177: PIE3bits.TX2IE = 1;
 51033                           
 51034                           ; BSR set to: 1
 51035  01B13A  010E               	movlb	14	; () banked
 51036  01B13C  8D2C               	bsf	44,6,b	;volatile
 51037                           
 51038                           ; BSR set to: 14
 51039  01B13E  0012               	return		;funcret
 51040  01B140                     __end_ofi2_EUSART2_Write:
 51041                           	opt stack 0
 51042                           tosu	equ	0xFFF
 51043                           tosh	equ	0xFFE
 51044                           tosl	equ	0xFFD
 51045                           pclatu	equ	0xFFB
 51046                           pclath	equ	0xFFA
 51047                           tblptru	equ	0xFF8
 51048                           tblptrh	equ	0xFF7
 51049                           tblptrl	equ	0xFF6
 51050                           tablat	equ	0xFF5
 51051                           prodh	equ	0xFF4
 51052                           prodl	equ	0xFF3
 51053                           intcon	equ	0xFF2
 51054                           indf0	equ	0xFEF
 51055                           postinc0	equ	0xFEE
 51056                           fsr0h	equ	0xFEA
 51057                           fsr0l	equ	0xFE9
 51058                           wreg	equ	0xFE8
 51059                           indf1	equ	0xFE7
 51060                           postdec1	equ	0xFE5
 51061                           plusw1	equ	0xFE3
 51062                           fsr1h	equ	0xFE2
 51063                           fsr1l	equ	0xFE1
 51064                           bsr	equ	0xFE0
 51065                           indf2	equ	0xFDF
 51066                           postinc2	equ	0xFDE
 51067                           postdec2	equ	0xFDD
 51068                           plusw2	equ	0xFDB
 51069                           fsr2h	equ	0xFDA
 51070                           fsr2l	equ	0xFD9
 51071                           status	equ	0xFD8
 51072                           
 51073 ;; *************** function i2_isdigit *****************
 51074 ;; Defined at:
 51075 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 51076 ;; Parameters:    Size  Location     Type
 51077 ;;  c               1    wreg     unsigned char 
 51078 ;; Auto vars:     Size  Location     Type
 51079 ;;  c               1    2[COMRAM] unsigned char 
 51080 ;; Return value:  Size  Location     Type
 51081 ;;		None               void
 51082 ;; Registers used:
 51083 ;;		wreg, status,2, status,0
 51084 ;; Tracked objects:
 51085 ;;		On entry : 0/0
 51086 ;;		On exit  : 0/0
 51087 ;;		Unchanged: 0/0
 51088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51090 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51091 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51092 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51093 ;;Total ram usage:        3 bytes
 51094 ;; Hardware stack levels used:    1
 51095 ;; This function calls:
 51096 ;;		Nothing
 51097 ;; This function is called by:
 51098 ;;		i2__doprnt
 51099 ;; This function uses a non-reentrant model
 51100 ;;
 51101                           
 51102                           	psect	text165
 51103  01BD2E                     __ptext165:
 51104                           	opt stack 0
 51105  01BD2E                     i2_isdigit:
 51106                           	opt stack 7
 51107                           
 51108                           ; BSR set to: 14
 51109                           ;incstack = 0
 51110                           ;i2isdigit@c stored from wreg
 51111  01BD2E  6E03               	movwf	i2isdigit@c,c
 51112  01BD30  0E00               	movlw	0
 51113  01BD32  6E02               	movwf	i2_isdigit$4697,c
 51114  01BD34  0E3A               	movlw	58
 51115  01BD36  6003               	cpfslt	i2isdigit@c,c
 51116  01BD38  D005               	goto	i2l2715
 51117  01BD3A  0E2F               	movlw	47
 51118  01BD3C  6403               	cpfsgt	i2isdigit@c,c
 51119  01BD3E  D002               	goto	i2l2715
 51120  01BD40  0E01               	movlw	1
 51121  01BD42  6E02               	movwf	i2_isdigit$4697,c
 51122  01BD44                     i2l2715:
 51123  01BD44  C002  F001         	movff	i2_isdigit$4697,??i2_isdigit
 51124  01BD48  3001               	rrcf	??i2_isdigit,w,c
 51125  01BD4A  0012               	return	
 51126  01BD4C                     __end_ofi2_isdigit:
 51127                           	opt stack 0
 51128                           tosu	equ	0xFFF
 51129                           tosh	equ	0xFFE
 51130                           tosl	equ	0xFFD
 51131                           pclatu	equ	0xFFB
 51132                           pclath	equ	0xFFA
 51133                           tblptru	equ	0xFF8
 51134                           tblptrh	equ	0xFF7
 51135                           tblptrl	equ	0xFF6
 51136                           tablat	equ	0xFF5
 51137                           prodh	equ	0xFF4
 51138                           prodl	equ	0xFF3
 51139                           intcon	equ	0xFF2
 51140                           indf0	equ	0xFEF
 51141                           postinc0	equ	0xFEE
 51142                           fsr0h	equ	0xFEA
 51143                           fsr0l	equ	0xFE9
 51144                           wreg	equ	0xFE8
 51145                           indf1	equ	0xFE7
 51146                           postdec1	equ	0xFE5
 51147                           plusw1	equ	0xFE3
 51148                           fsr1h	equ	0xFE2
 51149                           fsr1l	equ	0xFE1
 51150                           bsr	equ	0xFE0
 51151                           indf2	equ	0xFDF
 51152                           postinc2	equ	0xFDE
 51153                           postdec2	equ	0xFDD
 51154                           plusw2	equ	0xFDB
 51155                           fsr2h	equ	0xFDA
 51156                           fsr2l	equ	0xFD9
 51157                           status	equ	0xFD8
 51158                           
 51159 ;; *************** function i2_fround *****************
 51160 ;; Defined at:
 51161 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 51162 ;; Parameters:    Size  Location     Type
 51163 ;;  prec            1    wreg     unsigned char 
 51164 ;; Auto vars:     Size  Location     Type
 51165 ;;  prec            1   84[COMRAM] unsigned char 
 51166 ;; Return value:  Size  Location     Type
 51167 ;;                  4   72[COMRAM] unsigned char 
 51168 ;; Registers used:
 51169 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 51170 ;; Tracked objects:
 51171 ;;		On entry : 0/0
 51172 ;;		On exit  : 0/0
 51173 ;;		Unchanged: 0/0
 51174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51176 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51178 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51179 ;;Total ram usage:       13 bytes
 51180 ;; Hardware stack levels used:    1
 51181 ;; Hardware stack levels required when called:    1
 51182 ;; This function calls:
 51183 ;;		i2___awdiv
 51184 ;;		i2___awmod
 51185 ;;		i2___flmul
 51186 ;; This function is called by:
 51187 ;;		i2__doprnt
 51188 ;; This function uses a non-reentrant model
 51189 ;;
 51190                           
 51191                           	psect	text166
 51192  0176D0                     __ptext166:
 51193                           	opt stack 0
 51194  0176D0                     i2_fround:
 51195                           	opt stack 6
 51196                           
 51197                           ;incstack = 0
 51198                           ;i2fround@prec stored from wreg
 51199  0176D0  6E55               	movwf	i2fround@prec,c
 51200                           
 51201                           ;doprnt.c: 413: if(prec>=110)
 51202  0176D2  0E6D               	movlw	109
 51203  0176D4  6455               	cpfsgt	i2fround@prec,c
 51204  0176D6  D0B5               	goto	i2l2083
 51205                           
 51206                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 51207  0176D8  0E00               	movlw	0
 51208  0176DA  6E0A               	movwf	i2___awdiv@divisor+1,c
 51209  0176DC  0E0A               	movlw	10
 51210  0176DE  6E09               	movwf	i2___awdiv@divisor,c
 51211  0176E0  0E00               	movlw	0
 51212  0176E2  6E04               	movwf	i2___awmod@divisor+1,c
 51213  0176E4  0E64               	movlw	100
 51214  0176E6  6E03               	movwf	i2___awmod@divisor,c
 51215  0176E8  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 51216  0176EC  6A02               	clrf	i2___awmod@dividend+1,c
 51217  0176EE  EC15  F0D4         	call	i2___awmod	;wreg free
 51218  0176F2  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 51219  0176F6  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 51220  0176FA  ECE9  F0D1         	call	i2___awdiv	;wreg free
 51221  0176FE  90D8               	bcf	status,0,c
 51222  017700  3607               	rlcf	?i2___awdiv,f,c
 51223  017702  3608               	rlcf	?i2___awdiv+1,f,c
 51224  017704  90D8               	bcf	status,0,c
 51225  017706  3607               	rlcf	?i2___awdiv,f,c
 51226  017708  3608               	rlcf	?i2___awdiv+1,f,c
 51227  01770A  0E24               	movlw	36
 51228  01770C  2607               	addwf	?i2___awdiv,f,c
 51229  01770E  0E00               	movlw	0
 51230  017710  2208               	addwfc	?i2___awdiv+1,f,c
 51231  017712  0E11               	movlw	low __npowers_
 51232  017714  2407               	addwf	?i2___awdiv,w,c
 51233  017716  6EF6               	movwf	tblptrl,c
 51234  017718  0ECE               	movlw	high __npowers_
 51235  01771A  2008               	addwfc	?i2___awdiv+1,w,c
 51236  01771C  6EF7               	movwf	tblptrh,c
 51237  01771E                     	if	1	;There are 3 active tblptr bytes
 51238  01771E  6AF8               	clrf	tblptru,c
 51239  017720  0E00               	movlw	low (__mediumconst shr (0+16))
 51240  017722  22F8               	addwfc	tblptru,f,c
 51241  017724                     	endif
 51242  017724  0009               	tblrd		*+
 51243  017726  CFF5 F034          	movff	tablat,i2___flmul@a
 51244  01772A  0009               	tblrd		*+
 51245  01772C  CFF5 F035          	movff	tablat,i2___flmul@a+1
 51246  017730  0009               	tblrd		*+
 51247  017732  CFF5 F036          	movff	tablat,i2___flmul@a+2
 51248  017736  000A               	tblrd		*-
 51249  017738  CFF5 F037          	movff	tablat,i2___flmul@a+3
 51250  01773C  0E00               	movlw	0
 51251  01773E  6E0A               	movwf	i2___awdiv@divisor+1,c
 51252  017740  0E64               	movlw	100
 51253  017742  6E09               	movwf	i2___awdiv@divisor,c
 51254  017744  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 51255  017748  6A08               	clrf	i2___awdiv@dividend+1,c
 51256  01774A  ECE9  F0D1         	call	i2___awdiv	;wreg free
 51257  01774E  90D8               	bcf	status,0,c
 51258  017750  3607               	rlcf	?i2___awdiv,f,c
 51259  017752  3608               	rlcf	?i2___awdiv+1,f,c
 51260  017754  90D8               	bcf	status,0,c
 51261  017756  3607               	rlcf	?i2___awdiv,f,c
 51262  017758  3608               	rlcf	?i2___awdiv+1,f,c
 51263  01775A  0E48               	movlw	72
 51264  01775C  2607               	addwf	?i2___awdiv,f,c
 51265  01775E  0E00               	movlw	0
 51266  017760  2208               	addwfc	?i2___awdiv+1,f,c
 51267  017762  0E11               	movlw	low __npowers_
 51268  017764  2407               	addwf	?i2___awdiv,w,c
 51269  017766  6EF6               	movwf	tblptrl,c
 51270  017768  0ECE               	movlw	high __npowers_
 51271  01776A  2008               	addwfc	?i2___awdiv+1,w,c
 51272  01776C  6EF7               	movwf	tblptrh,c
 51273  01776E                     	if	1	;There are 3 active tblptr bytes
 51274  01776E  6AF8               	clrf	tblptru,c
 51275  017770  0E00               	movlw	low (__mediumconst shr (0+16))
 51276  017772  22F8               	addwfc	tblptru,f,c
 51277  017774                     	endif
 51278  017774  0009               	tblrd		*+
 51279  017776  CFF5 F030          	movff	tablat,i2___flmul@b
 51280  01777A  0009               	tblrd		*+
 51281  01777C  CFF5 F031          	movff	tablat,i2___flmul@b+1
 51282  017780  0009               	tblrd		*+
 51283  017782  CFF5 F032          	movff	tablat,i2___flmul@b+2
 51284  017786  000A               	tblrd		*-
 51285  017788  CFF5 F033          	movff	tablat,i2___flmul@b+3
 51286  01778C  EC05  F0AE         	call	i2___flmul	;wreg free
 51287  017790  C030  F051         	movff	?i2___flmul,i2_fround$5959
 51288  017794  C031  F052         	movff	?i2___flmul+1,i2_fround$5959+1
 51289  017798  C032  F053         	movff	?i2___flmul+2,i2_fround$5959+2
 51290  01779C  C033  F054         	movff	?i2___flmul+3,i2_fround$5959+3
 51291                           
 51292                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 51293  0177A0  0E00               	movlw	0
 51294  0177A2  6E04               	movwf	i2___awmod@divisor+1,c
 51295  0177A4  0E0A               	movlw	10
 51296  0177A6  6E03               	movwf	i2___awmod@divisor,c
 51297  0177A8  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 51298  0177AC  6A02               	clrf	i2___awmod@dividend+1,c
 51299  0177AE  EC15  F0D4         	call	i2___awmod	;wreg free
 51300  0177B2  90D8               	bcf	status,0,c
 51301  0177B4  3601               	rlcf	?i2___awmod,f,c
 51302  0177B6  3602               	rlcf	?i2___awmod+1,f,c
 51303  0177B8  90D8               	bcf	status,0,c
 51304  0177BA  3601               	rlcf	?i2___awmod,f,c
 51305  0177BC  3602               	rlcf	?i2___awmod+1,f,c
 51306  0177BE  0E11               	movlw	low __npowers_
 51307  0177C0  2401               	addwf	?i2___awmod,w,c
 51308  0177C2  6EF6               	movwf	tblptrl,c
 51309  0177C4  0ECE               	movlw	high __npowers_
 51310  0177C6  2002               	addwfc	?i2___awmod+1,w,c
 51311  0177C8  6EF7               	movwf	tblptrh,c
 51312  0177CA                     	if	1	;There are 3 active tblptr bytes
 51313  0177CA  6AF8               	clrf	tblptru,c
 51314  0177CC  0E00               	movlw	low (__mediumconst shr (0+16))
 51315  0177CE  22F8               	addwfc	tblptru,f,c
 51316  0177D0                     	endif
 51317  0177D0  0009               	tblrd		*+
 51318  0177D2  CFF5 F034          	movff	tablat,i2___flmul@a
 51319  0177D6  0009               	tblrd		*+
 51320  0177D8  CFF5 F035          	movff	tablat,i2___flmul@a+1
 51321  0177DC  0009               	tblrd		*+
 51322  0177DE  CFF5 F036          	movff	tablat,i2___flmul@a+2
 51323  0177E2  000A               	tblrd		*-
 51324  0177E4  CFF5 F037          	movff	tablat,i2___flmul@a+3
 51325  0177E8  C051  F030         	movff	i2_fround$5959,i2___flmul@b
 51326  0177EC  C052  F031         	movff	i2_fround$5959+1,i2___flmul@b+1
 51327  0177F0  C053  F032         	movff	i2_fround$5959+2,i2___flmul@b+2
 51328  0177F4  C054  F033         	movff	i2_fround$5959+3,i2___flmul@b+3
 51329  0177F8  EC05  F0AE         	call	i2___flmul	;wreg free
 51330  0177FC  C030  F04D         	movff	?i2___flmul,i2_fround$5960
 51331  017800  C031  F04E         	movff	?i2___flmul+1,i2_fround$5960+1
 51332  017804  C032  F04F         	movff	?i2___flmul+2,i2_fround$5960+2
 51333  017808  C033  F050         	movff	?i2___flmul+3,i2_fround$5960+3
 51334                           
 51335                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 51336  01780C  C04D  F030         	movff	i2_fround$5960,i2___flmul@b
 51337  017810  C04E  F031         	movff	i2_fround$5960+1,i2___flmul@b+1
 51338  017814  C04F  F032         	movff	i2_fround$5960+2,i2___flmul@b+2
 51339  017818  C050  F033         	movff	i2_fround$5960+3,i2___flmul@b+3
 51340  01781C  0E00               	movlw	0
 51341  01781E  6E34               	movwf	i2___flmul@a,c
 51342  017820  0E00               	movlw	0
 51343  017822  6E35               	movwf	i2___flmul@a+1,c
 51344  017824  0E00               	movlw	0
 51345  017826  6E36               	movwf	i2___flmul@a+2,c
 51346  017828  0E3F               	movlw	63
 51347  01782A  6E37               	movwf	i2___flmul@a+3,c
 51348  01782C  EC05  F0AE         	call	i2___flmul	;wreg free
 51349  017830  C030  F049         	movff	?i2___flmul,?i2_fround
 51350  017834  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 51351  017838  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 51352  01783C  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 51353  017840  0012               	return	
 51354  017842                     i2l2083:
 51355                           
 51356                           ;doprnt.c: 415: else if(prec > 10)
 51357  017842  0E0A               	movlw	10
 51358  017844  6455               	cpfsgt	i2fround@prec,c
 51359  017846  D071               	goto	i2l2086
 51360                           
 51361                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 51362  017848  0E00               	movlw	0
 51363  01784A  6E04               	movwf	i2___awmod@divisor+1,c
 51364  01784C  0E0A               	movlw	10
 51365  01784E  6E03               	movwf	i2___awmod@divisor,c
 51366  017850  C055  F001         	movff	i2fround@prec,i2___awmod@dividend
 51367  017854  6A02               	clrf	i2___awmod@dividend+1,c
 51368  017856  EC15  F0D4         	call	i2___awmod	;wreg free
 51369  01785A  90D8               	bcf	status,0,c
 51370  01785C  3601               	rlcf	?i2___awmod,f,c
 51371  01785E  3602               	rlcf	?i2___awmod+1,f,c
 51372  017860  90D8               	bcf	status,0,c
 51373  017862  3601               	rlcf	?i2___awmod,f,c
 51374  017864  3602               	rlcf	?i2___awmod+1,f,c
 51375  017866  0E11               	movlw	low __npowers_
 51376  017868  2401               	addwf	?i2___awmod,w,c
 51377  01786A  6EF6               	movwf	tblptrl,c
 51378  01786C  0ECE               	movlw	high __npowers_
 51379  01786E  2002               	addwfc	?i2___awmod+1,w,c
 51380  017870  6EF7               	movwf	tblptrh,c
 51381  017872                     	if	1	;There are 3 active tblptr bytes
 51382  017872  6AF8               	clrf	tblptru,c
 51383  017874  0E00               	movlw	low (__mediumconst shr (0+16))
 51384  017876  22F8               	addwfc	tblptru,f,c
 51385  017878                     	endif
 51386  017878  0009               	tblrd		*+
 51387  01787A  CFF5 F034          	movff	tablat,i2___flmul@a
 51388  01787E  0009               	tblrd		*+
 51389  017880  CFF5 F035          	movff	tablat,i2___flmul@a+1
 51390  017884  0009               	tblrd		*+
 51391  017886  CFF5 F036          	movff	tablat,i2___flmul@a+2
 51392  01788A  000A               	tblrd		*-
 51393  01788C  CFF5 F037          	movff	tablat,i2___flmul@a+3
 51394  017890  0E00               	movlw	0
 51395  017892  6E0A               	movwf	i2___awdiv@divisor+1,c
 51396  017894  0E0A               	movlw	10
 51397  017896  6E09               	movwf	i2___awdiv@divisor,c
 51398  017898  C055  F007         	movff	i2fround@prec,i2___awdiv@dividend
 51399  01789C  6A08               	clrf	i2___awdiv@dividend+1,c
 51400  01789E  ECE9  F0D1         	call	i2___awdiv	;wreg free
 51401  0178A2  90D8               	bcf	status,0,c
 51402  0178A4  3607               	rlcf	?i2___awdiv,f,c
 51403  0178A6  3608               	rlcf	?i2___awdiv+1,f,c
 51404  0178A8  90D8               	bcf	status,0,c
 51405  0178AA  3607               	rlcf	?i2___awdiv,f,c
 51406  0178AC  3608               	rlcf	?i2___awdiv+1,f,c
 51407  0178AE  0E24               	movlw	36
 51408  0178B0  2607               	addwf	?i2___awdiv,f,c
 51409  0178B2  0E00               	movlw	0
 51410  0178B4  2208               	addwfc	?i2___awdiv+1,f,c
 51411  0178B6  0E11               	movlw	low __npowers_
 51412  0178B8  2407               	addwf	?i2___awdiv,w,c
 51413  0178BA  6EF6               	movwf	tblptrl,c
 51414  0178BC  0ECE               	movlw	high __npowers_
 51415  0178BE  2008               	addwfc	?i2___awdiv+1,w,c
 51416  0178C0  6EF7               	movwf	tblptrh,c
 51417  0178C2                     	if	1	;There are 3 active tblptr bytes
 51418  0178C2  6AF8               	clrf	tblptru,c
 51419  0178C4  0E00               	movlw	low (__mediumconst shr (0+16))
 51420  0178C6  22F8               	addwfc	tblptru,f,c
 51421  0178C8                     	endif
 51422  0178C8  0009               	tblrd		*+
 51423  0178CA  CFF5 F030          	movff	tablat,i2___flmul@b
 51424  0178CE  0009               	tblrd		*+
 51425  0178D0  CFF5 F031          	movff	tablat,i2___flmul@b+1
 51426  0178D4  0009               	tblrd		*+
 51427  0178D6  CFF5 F032          	movff	tablat,i2___flmul@b+2
 51428  0178DA  000A               	tblrd		*-
 51429  0178DC  CFF5 F033          	movff	tablat,i2___flmul@b+3
 51430  0178E0  EC05  F0AE         	call	i2___flmul	;wreg free
 51431  0178E4  C030  F051         	movff	?i2___flmul,i2_fround$5959
 51432  0178E8  C031  F052         	movff	?i2___flmul+1,i2_fround$5959+1
 51433  0178EC  C032  F053         	movff	?i2___flmul+2,i2_fround$5959+2
 51434  0178F0  C033  F054         	movff	?i2___flmul+3,i2_fround$5959+3
 51435                           
 51436                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 51437  0178F4  C051  F030         	movff	i2_fround$5959,i2___flmul@b
 51438  0178F8  C052  F031         	movff	i2_fround$5959+1,i2___flmul@b+1
 51439  0178FC  C053  F032         	movff	i2_fround$5959+2,i2___flmul@b+2
 51440  017900  C054  F033         	movff	i2_fround$5959+3,i2___flmul@b+3
 51441  017904  0E00               	movlw	0
 51442  017906  6E34               	movwf	i2___flmul@a,c
 51443  017908  0E00               	movlw	0
 51444  01790A  6E35               	movwf	i2___flmul@a+1,c
 51445  01790C  0E00               	movlw	0
 51446  01790E  6E36               	movwf	i2___flmul@a+2,c
 51447  017910  0E3F               	movlw	63
 51448  017912  6E37               	movwf	i2___flmul@a+3,c
 51449  017914  EC05  F0AE         	call	i2___flmul	;wreg free
 51450  017918  C030  F049         	movff	?i2___flmul,?i2_fround
 51451  01791C  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 51452  017920  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 51453  017924  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 51454  017928  0012               	return	
 51455  01792A                     i2l2086:
 51456                           
 51457                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 51458  01792A  5055               	movf	i2fround@prec,w,c
 51459  01792C  0D04               	mullw	4
 51460  01792E  0E11               	movlw	low __npowers_
 51461  017930  24F3               	addwf	prodl,w,c
 51462  017932  6EF6               	movwf	tblptrl,c
 51463  017934  0ECE               	movlw	high __npowers_
 51464  017936  20F4               	addwfc	prodh,w,c
 51465  017938  6EF7               	movwf	tblptrh,c
 51466  01793A                     	if	1	;There are 3 active tblptr bytes
 51467  01793A  6AF8               	clrf	tblptru,c
 51468  01793C  0E00               	movlw	low (__mediumconst shr (0+16))
 51469  01793E  22F8               	addwfc	tblptru,f,c
 51470  017940                     	endif
 51471  017940  0009               	tblrd		*+
 51472  017942  CFF5 F030          	movff	tablat,i2___flmul@b
 51473  017946  0009               	tblrd		*+
 51474  017948  CFF5 F031          	movff	tablat,i2___flmul@b+1
 51475  01794C  0009               	tblrd		*+
 51476  01794E  CFF5 F032          	movff	tablat,i2___flmul@b+2
 51477  017952  000A               	tblrd		*-
 51478  017954  CFF5 F033          	movff	tablat,i2___flmul@b+3
 51479  017958  0E00               	movlw	0
 51480  01795A  6E34               	movwf	i2___flmul@a,c
 51481  01795C  0E00               	movlw	0
 51482  01795E  6E35               	movwf	i2___flmul@a+1,c
 51483  017960  0E00               	movlw	0
 51484  017962  6E36               	movwf	i2___flmul@a+2,c
 51485  017964  0E3F               	movlw	63
 51486  017966  6E37               	movwf	i2___flmul@a+3,c
 51487  017968  EC05  F0AE         	call	i2___flmul	;wreg free
 51488  01796C  C030  F049         	movff	?i2___flmul,?i2_fround
 51489  017970  C031  F04A         	movff	?i2___flmul+1,?i2_fround+1
 51490  017974  C032  F04B         	movff	?i2___flmul+2,?i2_fround+2
 51491  017978  C033  F04C         	movff	?i2___flmul+3,?i2_fround+3
 51492  01797C  0012               	return	
 51493  01797E                     __end_ofi2_fround:
 51494                           	opt stack 0
 51495                           tosu	equ	0xFFF
 51496                           tosh	equ	0xFFE
 51497                           tosl	equ	0xFFD
 51498                           pclatu	equ	0xFFB
 51499                           pclath	equ	0xFFA
 51500                           tblptru	equ	0xFF8
 51501                           tblptrh	equ	0xFF7
 51502                           tblptrl	equ	0xFF6
 51503                           tablat	equ	0xFF5
 51504                           prodh	equ	0xFF4
 51505                           prodl	equ	0xFF3
 51506                           intcon	equ	0xFF2
 51507                           indf0	equ	0xFEF
 51508                           postinc0	equ	0xFEE
 51509                           fsr0h	equ	0xFEA
 51510                           fsr0l	equ	0xFE9
 51511                           wreg	equ	0xFE8
 51512                           indf1	equ	0xFE7
 51513                           postdec1	equ	0xFE5
 51514                           plusw1	equ	0xFE3
 51515                           fsr1h	equ	0xFE2
 51516                           fsr1l	equ	0xFE1
 51517                           bsr	equ	0xFE0
 51518                           indf2	equ	0xFDF
 51519                           postinc2	equ	0xFDE
 51520                           postdec2	equ	0xFDD
 51521                           plusw2	equ	0xFDB
 51522                           fsr2h	equ	0xFDA
 51523                           fsr2l	equ	0xFD9
 51524                           status	equ	0xFD8
 51525                           
 51526 ;; *************** function i2___awmod *****************
 51527 ;; Defined at:
 51528 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 51529 ;; Parameters:    Size  Location     Type
 51530 ;;  dividend        2    0[COMRAM] int 
 51531 ;;  divisor         2    2[COMRAM] int 
 51532 ;; Auto vars:     Size  Location     Type
 51533 ;;  __awmod         1    5[COMRAM] unsigned char 
 51534 ;;  __awmod         1    4[COMRAM] unsigned char 
 51535 ;; Return value:  Size  Location     Type
 51536 ;;                  2    0[COMRAM] int 
 51537 ;; Registers used:
 51538 ;;		wreg, status,2, status,0
 51539 ;; Tracked objects:
 51540 ;;		On entry : 0/0
 51541 ;;		On exit  : 0/0
 51542 ;;		Unchanged: 0/0
 51543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51545 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51547 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51548 ;;Total ram usage:        6 bytes
 51549 ;; Hardware stack levels used:    1
 51550 ;; This function calls:
 51551 ;;		Nothing
 51552 ;; This function is called by:
 51553 ;;		i2_fround
 51554 ;;		i2_scale
 51555 ;; This function uses a non-reentrant model
 51556 ;;
 51557                           
 51558                           	psect	text167
 51559  01A82A                     __ptext167:
 51560                           	opt stack 0
 51561  01A82A                     i2___awmod:
 51562                           	opt stack 6
 51563                           
 51564                           ;incstack = 0
 51565  01A82A  0E00               	movlw	0
 51566  01A82C  6E06               	movwf	i2___awmod@sign,c
 51567  01A82E  AE02               	btfss	i2___awmod@dividend+1,7,c
 51568  01A830  D006               	goto	i2l2512
 51569  01A832  6C01               	negf	i2___awmod@dividend,c
 51570  01A834  1E02               	comf	i2___awmod@dividend+1,f,c
 51571  01A836  B0D8               	btfsc	status,0,c
 51572  01A838  2A02               	incf	i2___awmod@dividend+1,f,c
 51573  01A83A  0E01               	movlw	1
 51574  01A83C  6E06               	movwf	i2___awmod@sign,c
 51575  01A83E                     i2l2512:
 51576  01A83E  AE04               	btfss	i2___awmod@divisor+1,7,c
 51577  01A840  D004               	goto	i2l2513
 51578  01A842  6C03               	negf	i2___awmod@divisor,c
 51579  01A844  1E04               	comf	i2___awmod@divisor+1,f,c
 51580  01A846  B0D8               	btfsc	status,0,c
 51581  01A848  2A04               	incf	i2___awmod@divisor+1,f,c
 51582  01A84A                     i2l2513:
 51583  01A84A  5003               	movf	i2___awmod@divisor,w,c
 51584  01A84C  1004               	iorwf	i2___awmod@divisor+1,w,c
 51585  01A84E  B4D8               	btfsc	status,2,c
 51586  01A850  D018               	goto	i2l2520
 51587  01A852  0E01               	movlw	1
 51588  01A854  6E05               	movwf	i2___awmod@counter,c
 51589  01A856  D004               	goto	i2l2515
 51590  01A858  90D8               	bcf	status,0,c
 51591  01A85A  3603               	rlcf	i2___awmod@divisor,f,c
 51592  01A85C  3604               	rlcf	i2___awmod@divisor+1,f,c
 51593  01A85E  2A05               	incf	i2___awmod@counter,f,c
 51594  01A860                     i2l2515:
 51595  01A860  AE04               	btfss	i2___awmod@divisor+1,7,c
 51596  01A862  D7FA               	goto	i2l2516
 51597  01A864                     i2u2208_40:
 51598  01A864  5003               	movf	i2___awmod@divisor,w,c
 51599  01A866  5C01               	subwf	i2___awmod@dividend,w,c
 51600  01A868  5004               	movf	i2___awmod@divisor+1,w,c
 51601  01A86A  5802               	subwfb	i2___awmod@dividend+1,w,c
 51602  01A86C  A0D8               	btfss	status,0,c
 51603  01A86E  D004               	goto	i2l2519
 51604  01A870  5003               	movf	i2___awmod@divisor,w,c
 51605  01A872  5E01               	subwf	i2___awmod@dividend,f,c
 51606  01A874  5004               	movf	i2___awmod@divisor+1,w,c
 51607  01A876  5A02               	subwfb	i2___awmod@dividend+1,f,c
 51608  01A878                     i2l2519:
 51609  01A878  90D8               	bcf	status,0,c
 51610  01A87A  3204               	rrcf	i2___awmod@divisor+1,f,c
 51611  01A87C  3203               	rrcf	i2___awmod@divisor,f,c
 51612  01A87E  2E05               	decfsz	i2___awmod@counter,f,c
 51613  01A880  D7F1               	goto	i2u2208_40
 51614  01A882                     i2l2520:
 51615  01A882  5006               	movf	i2___awmod@sign,w,c
 51616  01A884  B4D8               	btfsc	status,2,c
 51617  01A886  D004               	goto	i2l2521
 51618  01A888  6C01               	negf	i2___awmod@dividend,c
 51619  01A88A  1E02               	comf	i2___awmod@dividend+1,f,c
 51620  01A88C  B0D8               	btfsc	status,0,c
 51621  01A88E  2A02               	incf	i2___awmod@dividend+1,f,c
 51622  01A890                     i2l2521:
 51623  01A890  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 51624  01A894  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 51625  01A898  0012               	return	
 51626  01A89A                     __end_ofi2___awmod:
 51627                           	opt stack 0
 51628                           tosu	equ	0xFFF
 51629                           tosh	equ	0xFFE
 51630                           tosl	equ	0xFFD
 51631                           pclatu	equ	0xFFB
 51632                           pclath	equ	0xFFA
 51633                           tblptru	equ	0xFF8
 51634                           tblptrh	equ	0xFF7
 51635                           tblptrl	equ	0xFF6
 51636                           tablat	equ	0xFF5
 51637                           prodh	equ	0xFF4
 51638                           prodl	equ	0xFF3
 51639                           intcon	equ	0xFF2
 51640                           indf0	equ	0xFEF
 51641                           postinc0	equ	0xFEE
 51642                           fsr0h	equ	0xFEA
 51643                           fsr0l	equ	0xFE9
 51644                           wreg	equ	0xFE8
 51645                           indf1	equ	0xFE7
 51646                           postdec1	equ	0xFE5
 51647                           plusw1	equ	0xFE3
 51648                           fsr1h	equ	0xFE2
 51649                           fsr1l	equ	0xFE1
 51650                           bsr	equ	0xFE0
 51651                           indf2	equ	0xFDF
 51652                           postinc2	equ	0xFDE
 51653                           postdec2	equ	0xFDD
 51654                           plusw2	equ	0xFDB
 51655                           fsr2h	equ	0xFDA
 51656                           fsr2l	equ	0xFD9
 51657                           status	equ	0xFD8
 51658                           
 51659 ;; *************** function i2___awdiv *****************
 51660 ;; Defined at:
 51661 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 51662 ;; Parameters:    Size  Location     Type
 51663 ;;  dividend        2    6[COMRAM] int 
 51664 ;;  divisor         2    8[COMRAM] int 
 51665 ;; Auto vars:     Size  Location     Type
 51666 ;;  __awdiv         2   12[COMRAM] int 
 51667 ;;  __awdiv         1   11[COMRAM] unsigned char 
 51668 ;;  __awdiv         1   10[COMRAM] unsigned char 
 51669 ;; Return value:  Size  Location     Type
 51670 ;;                  2    6[COMRAM] int 
 51671 ;; Registers used:
 51672 ;;		wreg, status,2, status,0
 51673 ;; Tracked objects:
 51674 ;;		On entry : 0/0
 51675 ;;		On exit  : 0/0
 51676 ;;		Unchanged: 0/0
 51677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51678 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51679 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51681 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51682 ;;Total ram usage:        8 bytes
 51683 ;; Hardware stack levels used:    1
 51684 ;; This function calls:
 51685 ;;		Nothing
 51686 ;; This function is called by:
 51687 ;;		i2_fround
 51688 ;;		i2_scale
 51689 ;;		i2__doprnt
 51690 ;; This function uses a non-reentrant model
 51691 ;;
 51692                           
 51693                           	psect	text168
 51694  01A3D2                     __ptext168:
 51695                           	opt stack 0
 51696  01A3D2                     i2___awdiv:
 51697                           	opt stack 6
 51698                           
 51699                           ;incstack = 0
 51700  01A3D2  0E00               	movlw	0
 51701  01A3D4  6E0C               	movwf	i2___awdiv@sign,c
 51702  01A3D6  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 51703  01A3D8  D006               	goto	i2l2499
 51704  01A3DA  6C09               	negf	i2___awdiv@divisor,c
 51705  01A3DC  1E0A               	comf	i2___awdiv@divisor+1,f,c
 51706  01A3DE  B0D8               	btfsc	status,0,c
 51707  01A3E0  2A0A               	incf	i2___awdiv@divisor+1,f,c
 51708  01A3E2  0E01               	movlw	1
 51709  01A3E4  6E0C               	movwf	i2___awdiv@sign,c
 51710  01A3E6                     i2l2499:
 51711  01A3E6  AE08               	btfss	i2___awdiv@dividend+1,7,c
 51712  01A3E8  D006               	goto	i2l2500
 51713  01A3EA  6C07               	negf	i2___awdiv@dividend,c
 51714  01A3EC  1E08               	comf	i2___awdiv@dividend+1,f,c
 51715  01A3EE  B0D8               	btfsc	status,0,c
 51716  01A3F0  2A08               	incf	i2___awdiv@dividend+1,f,c
 51717  01A3F2  0E01               	movlw	1
 51718  01A3F4  1A0C               	xorwf	i2___awdiv@sign,f,c
 51719  01A3F6                     i2l2500:
 51720  01A3F6  0E00               	movlw	0
 51721  01A3F8  6E0E               	movwf	i2___awdiv@quotient+1,c
 51722  01A3FA  0E00               	movlw	0
 51723  01A3FC  6E0D               	movwf	i2___awdiv@quotient,c
 51724  01A3FE  5009               	movf	i2___awdiv@divisor,w,c
 51725  01A400  100A               	iorwf	i2___awdiv@divisor+1,w,c
 51726  01A402  B4D8               	btfsc	status,2,c
 51727  01A404  D01C               	goto	i2l2507
 51728  01A406  0E01               	movlw	1
 51729  01A408  6E0B               	movwf	i2___awdiv@counter,c
 51730  01A40A  D004               	goto	i2l2502
 51731  01A40C  90D8               	bcf	status,0,c
 51732  01A40E  3609               	rlcf	i2___awdiv@divisor,f,c
 51733  01A410  360A               	rlcf	i2___awdiv@divisor+1,f,c
 51734  01A412  2A0B               	incf	i2___awdiv@counter,f,c
 51735  01A414                     i2l2502:
 51736  01A414  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 51737  01A416  D7FA               	goto	i2l2503
 51738  01A418                     i2u2202_40:
 51739  01A418  90D8               	bcf	status,0,c
 51740  01A41A  360D               	rlcf	i2___awdiv@quotient,f,c
 51741  01A41C  360E               	rlcf	i2___awdiv@quotient+1,f,c
 51742  01A41E  5009               	movf	i2___awdiv@divisor,w,c
 51743  01A420  5C07               	subwf	i2___awdiv@dividend,w,c
 51744  01A422  500A               	movf	i2___awdiv@divisor+1,w,c
 51745  01A424  5808               	subwfb	i2___awdiv@dividend+1,w,c
 51746  01A426  A0D8               	btfss	status,0,c
 51747  01A428  D005               	goto	i2l2506
 51748  01A42A  5009               	movf	i2___awdiv@divisor,w,c
 51749  01A42C  5E07               	subwf	i2___awdiv@dividend,f,c
 51750  01A42E  500A               	movf	i2___awdiv@divisor+1,w,c
 51751  01A430  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 51752  01A432  800D               	bsf	i2___awdiv@quotient,0,c
 51753  01A434                     i2l2506:
 51754  01A434  90D8               	bcf	status,0,c
 51755  01A436  320A               	rrcf	i2___awdiv@divisor+1,f,c
 51756  01A438  3209               	rrcf	i2___awdiv@divisor,f,c
 51757  01A43A  2E0B               	decfsz	i2___awdiv@counter,f,c
 51758  01A43C  D7ED               	goto	i2u2202_40
 51759  01A43E                     i2l2507:
 51760  01A43E  500C               	movf	i2___awdiv@sign,w,c
 51761  01A440  B4D8               	btfsc	status,2,c
 51762  01A442  D004               	goto	i2l2508
 51763  01A444  6C0D               	negf	i2___awdiv@quotient,c
 51764  01A446  1E0E               	comf	i2___awdiv@quotient+1,f,c
 51765  01A448  B0D8               	btfsc	status,0,c
 51766  01A44A  2A0E               	incf	i2___awdiv@quotient+1,f,c
 51767  01A44C                     i2l2508:
 51768  01A44C  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 51769  01A450  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 51770  01A454  0012               	return	
 51771  01A456                     __end_ofi2___awdiv:
 51772                           	opt stack 0
 51773                           tosu	equ	0xFFF
 51774                           tosh	equ	0xFFE
 51775                           tosl	equ	0xFFD
 51776                           pclatu	equ	0xFFB
 51777                           pclath	equ	0xFFA
 51778                           tblptru	equ	0xFF8
 51779                           tblptrh	equ	0xFF7
 51780                           tblptrl	equ	0xFF6
 51781                           tablat	equ	0xFF5
 51782                           prodh	equ	0xFF4
 51783                           prodl	equ	0xFF3
 51784                           intcon	equ	0xFF2
 51785                           indf0	equ	0xFEF
 51786                           postinc0	equ	0xFEE
 51787                           fsr0h	equ	0xFEA
 51788                           fsr0l	equ	0xFE9
 51789                           wreg	equ	0xFE8
 51790                           indf1	equ	0xFE7
 51791                           postdec1	equ	0xFE5
 51792                           plusw1	equ	0xFE3
 51793                           fsr1h	equ	0xFE2
 51794                           fsr1l	equ	0xFE1
 51795                           bsr	equ	0xFE0
 51796                           indf2	equ	0xFDF
 51797                           postinc2	equ	0xFDE
 51798                           postdec2	equ	0xFDD
 51799                           plusw2	equ	0xFDB
 51800                           fsr2h	equ	0xFDA
 51801                           fsr2l	equ	0xFD9
 51802                           status	equ	0xFD8
 51803                           
 51804 ;; *************** function i2__tdiv_to_l_ *****************
 51805 ;; Defined at:
 51806 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 51807 ;; Parameters:    Size  Location     Type
 51808 ;;  f1              3    0[COMRAM] float 
 51809 ;;  f2              3    3[COMRAM] float 
 51810 ;; Auto vars:     Size  Location     Type
 51811 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 51812 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 51813 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 51814 ;; Return value:  Size  Location     Type
 51815 ;;                  4    0[COMRAM] unsigned long 
 51816 ;; Registers used:
 51817 ;;		wreg, status,2, status,0
 51818 ;; Tracked objects:
 51819 ;;		On entry : 0/0
 51820 ;;		On exit  : 0/0
 51821 ;;		Unchanged: 0/0
 51822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 51823 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51824 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51825 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51826 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51827 ;;Total ram usage:       15 bytes
 51828 ;; Hardware stack levels used:    1
 51829 ;; This function calls:
 51830 ;;		Nothing
 51831 ;; This function is called by:
 51832 ;;		i2__doprnt
 51833 ;; This function uses a non-reentrant model
 51834 ;;
 51835                           
 51836                           	psect	text169
 51837  018E18                     __ptext169:
 51838                           	opt stack 0
 51839  018E18                     i2__tdiv_to_l_:
 51840                           	opt stack 7
 51841                           
 51842                           ;incstack = 0
 51843  018E18  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 51844  018E1C  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 51845  018E1E  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 51846  018E20  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 51847  018E22  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 51848  018E24  E301               	bnc	u2248_41
 51849  018E26  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 51850  018E28                     u2248_41:
 51851  018E28  5007               	movf	??i2__tdiv_to_l_,w,c
 51852  018E2A  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 51853  018E2C  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 51854  018E2E  A4D8               	btfss	status,2,c
 51855  018E30  D009               	goto	i2l2647
 51856  018E32  0E00               	movlw	0
 51857  018E34  6E01               	movwf	?i2__tdiv_to_l_,c
 51858  018E36  0E00               	movlw	0
 51859  018E38  6E02               	movwf	?i2__tdiv_to_l_+1,c
 51860  018E3A  0E00               	movlw	0
 51861  018E3C  6E03               	movwf	?i2__tdiv_to_l_+2,c
 51862  018E3E  0E00               	movlw	0
 51863  018E40  6E04               	movwf	?i2__tdiv_to_l_+3,c
 51864  018E42  0012               	return	
 51865  018E44                     i2l2647:
 51866  018E44  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 51867  018E48  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 51868  018E4A  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 51869  018E4C  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 51870  018E4E  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 51871  018E50  E301               	bnc	u2250_41
 51872  018E52  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 51873  018E54                     u2250_41:
 51874  018E54  5007               	movf	??i2__tdiv_to_l_,w,c
 51875  018E56  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 51876  018E58  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 51877  018E5A  A4D8               	btfss	status,2,c
 51878  018E5C  D009               	goto	i2l2649
 51879  018E5E  0E00               	movlw	0
 51880  018E60  6E01               	movwf	?i2__tdiv_to_l_,c
 51881  018E62  0E00               	movlw	0
 51882  018E64  6E02               	movwf	?i2__tdiv_to_l_+1,c
 51883  018E66  0E00               	movlw	0
 51884  018E68  6E03               	movwf	?i2__tdiv_to_l_+2,c
 51885  018E6A  0E00               	movlw	0
 51886  018E6C  6E04               	movwf	?i2__tdiv_to_l_+3,c
 51887  018E6E  0012               	return	
 51888  018E70                     i2l2649:
 51889  018E70  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 51890  018E72  0EFF               	movlw	255
 51891  018E74  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 51892  018E76  0EFF               	movlw	255
 51893  018E78  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 51894  018E7A  0E00               	movlw	0
 51895  018E7C  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 51896  018E7E  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 51897  018E80  0EFF               	movlw	255
 51898  018E82  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 51899  018E84  0EFF               	movlw	255
 51900  018E86  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 51901  018E88  0E00               	movlw	0
 51902  018E8A  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 51903  018E8C  0E00               	movlw	0
 51904  018E8E  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 51905  018E90  0E00               	movlw	0
 51906  018E92  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 51907  018E94  0E00               	movlw	0
 51908  018E96  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 51909  018E98  0E00               	movlw	0
 51910  018E9A  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 51911  018E9C  0E7F               	movlw	127
 51912  018E9E  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 51913  018EA0  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 51914  018EA2  0F98               	addlw	152
 51915  018EA4  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 51916  018EA6  0E18               	movlw	24
 51917  018EA8  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 51918  018EAA                     i2l2650:
 51919  018EAA  90D8               	bcf	status,0,c
 51920  018EAC  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 51921  018EAE  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 51922  018EB0  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 51923  018EB2  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 51924  018EB4  5004               	movf	i2__tdiv_to_l_@f2,w,c
 51925  018EB6  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 51926  018EB8  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 51927  018EBA  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 51928  018EBC  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 51929  018EBE  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 51930  018EC0  A0D8               	btfss	status,0,c
 51931  018EC2  D007               	goto	i2l2651
 51932  018EC4  5004               	movf	i2__tdiv_to_l_@f2,w,c
 51933  018EC6  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 51934  018EC8  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 51935  018ECA  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 51936  018ECC  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 51937  018ECE  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 51938  018ED0  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 51939  018ED2                     i2l2651:
 51940  018ED2  90D8               	bcf	status,0,c
 51941  018ED4  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 51942  018ED6  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 51943  018ED8  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 51944  018EDA  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 51945  018EDC  D7E6               	goto	i2l2650
 51946  018EDE  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 51947  018EE0  D016               	goto	i2l2653
 51948  018EE2  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 51949  018EE4  0A80               	xorlw	128
 51950  018EE6  0F97               	addlw	151
 51951  018EE8  B0D8               	btfsc	status,0,c
 51952  018EEA  D009               	goto	i2l2654
 51953  018EEC  0E00               	movlw	0
 51954  018EEE  6E01               	movwf	?i2__tdiv_to_l_,c
 51955  018EF0  0E00               	movlw	0
 51956  018EF2  6E02               	movwf	?i2__tdiv_to_l_+1,c
 51957  018EF4  0E00               	movlw	0
 51958  018EF6  6E03               	movwf	?i2__tdiv_to_l_+2,c
 51959  018EF8  0E00               	movlw	0
 51960  018EFA  6E04               	movwf	?i2__tdiv_to_l_+3,c
 51961  018EFC  0012               	return	
 51962  018EFE                     i2l2654:
 51963  018EFE  90D8               	bcf	status,0,c
 51964  018F00  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 51965  018F02  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 51966  018F04  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 51967  018F06  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 51968  018F08  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 51969  018F0A  D7F9               	goto	i2l2654
 51970  018F0C  D015               	goto	i2u2256_40
 51971  018F0E                     i2l2653:
 51972  018F0E  0E17               	movlw	23
 51973  018F10  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 51974  018F12  D00F               	goto	i2l2659
 51975  018F14  0E00               	movlw	0
 51976  018F16  6E01               	movwf	?i2__tdiv_to_l_,c
 51977  018F18  0E00               	movlw	0
 51978  018F1A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 51979  018F1C  0E00               	movlw	0
 51980  018F1E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 51981  018F20  0E00               	movlw	0
 51982  018F22  6E04               	movwf	?i2__tdiv_to_l_+3,c
 51983  018F24  0012               	return	
 51984  018F26  90D8               	bcf	status,0,c
 51985  018F28  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 51986  018F2A  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 51987  018F2C  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 51988  018F2E  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 51989  018F30  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 51990  018F32                     i2l2659:
 51991  018F32  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 51992  018F34  A4D8               	btfss	status,2,c
 51993  018F36  D7F7               	goto	i2l2660
 51994  018F38                     i2u2256_40:
 51995  018F38  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 51996  018F3C  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 51997  018F40  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 51998  018F44  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 51999  018F48  0012               	return		;funcret
 52000  018F4A                     __end_ofi2__tdiv_to_l_:
 52001                           	opt stack 0
 52002                           tosu	equ	0xFFF
 52003                           tosh	equ	0xFFE
 52004                           tosl	equ	0xFFD
 52005                           pclatu	equ	0xFFB
 52006                           pclath	equ	0xFFA
 52007                           tblptru	equ	0xFF8
 52008                           tblptrh	equ	0xFF7
 52009                           tblptrl	equ	0xFF6
 52010                           tablat	equ	0xFF5
 52011                           prodh	equ	0xFF4
 52012                           prodl	equ	0xFF3
 52013                           intcon	equ	0xFF2
 52014                           indf0	equ	0xFEF
 52015                           postinc0	equ	0xFEE
 52016                           fsr0h	equ	0xFEA
 52017                           fsr0l	equ	0xFE9
 52018                           wreg	equ	0xFE8
 52019                           indf1	equ	0xFE7
 52020                           postdec1	equ	0xFE5
 52021                           plusw1	equ	0xFE3
 52022                           fsr1h	equ	0xFE2
 52023                           fsr1l	equ	0xFE1
 52024                           bsr	equ	0xFE0
 52025                           indf2	equ	0xFDF
 52026                           postinc2	equ	0xFDE
 52027                           postdec2	equ	0xFDD
 52028                           plusw2	equ	0xFDB
 52029                           fsr2h	equ	0xFDA
 52030                           fsr2l	equ	0xFD9
 52031                           status	equ	0xFD8
 52032                           
 52033 ;; *************** function i2__div_to_l_ *****************
 52034 ;; Defined at:
 52035 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 52036 ;; Parameters:    Size  Location     Type
 52037 ;;  f1              4    0[COMRAM] unsigned long 
 52038 ;;  f2              4    4[COMRAM] unsigned long 
 52039 ;; Auto vars:     Size  Location     Type
 52040 ;;  _div_to_l_      4    8[COMRAM] unsigned long 
 52041 ;;  _div_to_l_      1   13[COMRAM] unsigned char 
 52042 ;;  _div_to_l_      1   12[COMRAM] unsigned char 
 52043 ;; Return value:  Size  Location     Type
 52044 ;;                  4    0[COMRAM] unsigned long 
 52045 ;; Registers used:
 52046 ;;		wreg, status,2, status,0
 52047 ;; Tracked objects:
 52048 ;;		On entry : 0/0
 52049 ;;		On exit  : 0/0
 52050 ;;		Unchanged: 0/0
 52051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52052 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52053 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52055 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52056 ;;Total ram usage:       14 bytes
 52057 ;; Hardware stack levels used:    1
 52058 ;; This function calls:
 52059 ;;		Nothing
 52060 ;; This function is called by:
 52061 ;;		i2__doprnt
 52062 ;; This function uses a non-reentrant model
 52063 ;;
 52064                           
 52065                           	psect	text170
 52066  019074                     __ptext170:
 52067                           	opt stack 0
 52068  019074                     i2__div_to_l_:
 52069                           	opt stack 7
 52070                           
 52071                           ;incstack = 0
 52072  019074  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 52073  019076  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 52074  019078  6E0E               	movwf	i2__div_to_l_@exp1,c
 52075  01907A  500E               	movf	i2__div_to_l_@exp1,w,c
 52076  01907C  A4D8               	btfss	status,2,c
 52077  01907E  D009               	goto	i2l2543
 52078  019080  0E00               	movlw	0
 52079  019082  6E01               	movwf	?i2__div_to_l_,c
 52080  019084  0E00               	movlw	0
 52081  019086  6E02               	movwf	?i2__div_to_l_+1,c
 52082  019088  0E00               	movlw	0
 52083  01908A  6E03               	movwf	?i2__div_to_l_+2,c
 52084  01908C  0E00               	movlw	0
 52085  01908E  6E04               	movwf	?i2__div_to_l_+3,c
 52086  019090  0012               	return	
 52087  019092                     i2l2543:
 52088  019092  3407               	rlcf	i2__div_to_l_@f2+2,w,c
 52089  019094  3408               	rlcf	i2__div_to_l_@f2+3,w,c
 52090  019096  6E0D               	movwf	i2__div_to_l_@cntr,c
 52091  019098  500D               	movf	i2__div_to_l_@cntr,w,c
 52092  01909A  A4D8               	btfss	status,2,c
 52093  01909C  D009               	goto	i2l2545
 52094  01909E  0E00               	movlw	0
 52095  0190A0  6E01               	movwf	?i2__div_to_l_,c
 52096  0190A2  0E00               	movlw	0
 52097  0190A4  6E02               	movwf	?i2__div_to_l_+1,c
 52098  0190A6  0E00               	movlw	0
 52099  0190A8  6E03               	movwf	?i2__div_to_l_+2,c
 52100  0190AA  0E00               	movlw	0
 52101  0190AC  6E04               	movwf	?i2__div_to_l_+3,c
 52102  0190AE  0012               	return	
 52103  0190B0                     i2l2545:
 52104  0190B0  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 52105  0190B2  0EFF               	movlw	255
 52106  0190B4  1601               	andwf	i2__div_to_l_@f1,f,c
 52107  0190B6  0EFF               	movlw	255
 52108  0190B8  1602               	andwf	i2__div_to_l_@f1+1,f,c
 52109  0190BA  0EFF               	movlw	255
 52110  0190BC  1603               	andwf	i2__div_to_l_@f1+2,f,c
 52111  0190BE  0E00               	movlw	0
 52112  0190C0  1604               	andwf	i2__div_to_l_@f1+3,f,c
 52113  0190C2  8E07               	bsf	i2__div_to_l_@f2+2,7,c
 52114  0190C4  0EFF               	movlw	255
 52115  0190C6  1605               	andwf	i2__div_to_l_@f2,f,c
 52116  0190C8  0EFF               	movlw	255
 52117  0190CA  1606               	andwf	i2__div_to_l_@f2+1,f,c
 52118  0190CC  0EFF               	movlw	255
 52119  0190CE  1607               	andwf	i2__div_to_l_@f2+2,f,c
 52120  0190D0  0E00               	movlw	0
 52121  0190D2  1608               	andwf	i2__div_to_l_@f2+3,f,c
 52122  0190D4  0E00               	movlw	0
 52123  0190D6  6E09               	movwf	i2__div_to_l_@quot,c
 52124  0190D8  0E00               	movlw	0
 52125  0190DA  6E0A               	movwf	i2__div_to_l_@quot+1,c
 52126  0190DC  0E00               	movlw	0
 52127  0190DE  6E0B               	movwf	i2__div_to_l_@quot+2,c
 52128  0190E0  0E00               	movlw	0
 52129  0190E2  6E0C               	movwf	i2__div_to_l_@quot+3,c
 52130  0190E4  0E7F               	movlw	127
 52131  0190E6  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 52132  0190E8  500D               	movf	i2__div_to_l_@cntr,w,c
 52133  0190EA  0FA0               	addlw	160
 52134  0190EC  5E0E               	subwf	i2__div_to_l_@exp1,f,c
 52135  0190EE  0E20               	movlw	32
 52136  0190F0  6E0D               	movwf	i2__div_to_l_@cntr,c
 52137  0190F2  90D8               	bcf	status,0,c
 52138  0190F4  3609               	rlcf	i2__div_to_l_@quot,f,c
 52139  0190F6  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 52140  0190F8  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 52141  0190FA  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 52142  0190FC  5005               	movf	i2__div_to_l_@f2,w,c
 52143  0190FE  5C01               	subwf	i2__div_to_l_@f1,w,c
 52144  019100  5006               	movf	i2__div_to_l_@f2+1,w,c
 52145  019102  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 52146  019104  5007               	movf	i2__div_to_l_@f2+2,w,c
 52147  019106  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 52148  019108  5008               	movf	i2__div_to_l_@f2+3,w,c
 52149  01910A  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 52150  01910C  A0D8               	btfss	status,0,c
 52151  01910E  D009               	goto	i2l2547
 52152  019110  5005               	movf	i2__div_to_l_@f2,w,c
 52153  019112  5E01               	subwf	i2__div_to_l_@f1,f,c
 52154  019114  5006               	movf	i2__div_to_l_@f2+1,w,c
 52155  019116  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 52156  019118  5007               	movf	i2__div_to_l_@f2+2,w,c
 52157  01911A  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 52158  01911C  5008               	movf	i2__div_to_l_@f2+3,w,c
 52159  01911E  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 52160  019120  8009               	bsf	i2__div_to_l_@quot,0,c
 52161  019122                     i2l2547:
 52162  019122  90D8               	bcf	status,0,c
 52163  019124  3601               	rlcf	i2__div_to_l_@f1,f,c
 52164  019126  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 52165  019128  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 52166  01912A  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 52167  01912C  2E0D               	decfsz	i2__div_to_l_@cntr,f,c
 52168  01912E  D7E1               	goto	i2l2546
 52169  019130  AE0E               	btfss	i2__div_to_l_@exp1,7,c
 52170  019132  D016               	goto	i2l2549
 52171  019134  500E               	movf	i2__div_to_l_@exp1,w,c
 52172  019136  0A80               	xorlw	128
 52173  019138  0F9F               	addlw	159
 52174  01913A  B0D8               	btfsc	status,0,c
 52175  01913C  D009               	goto	i2l2550
 52176  01913E  0E00               	movlw	0
 52177  019140  6E01               	movwf	?i2__div_to_l_,c
 52178  019142  0E00               	movlw	0
 52179  019144  6E02               	movwf	?i2__div_to_l_+1,c
 52180  019146  0E00               	movlw	0
 52181  019148  6E03               	movwf	?i2__div_to_l_+2,c
 52182  01914A  0E00               	movlw	0
 52183  01914C  6E04               	movwf	?i2__div_to_l_+3,c
 52184  01914E  0012               	return	
 52185  019150                     i2l2550:
 52186  019150  90D8               	bcf	status,0,c
 52187  019152  320C               	rrcf	i2__div_to_l_@quot+3,f,c
 52188  019154  320B               	rrcf	i2__div_to_l_@quot+2,f,c
 52189  019156  320A               	rrcf	i2__div_to_l_@quot+1,f,c
 52190  019158  3209               	rrcf	i2__div_to_l_@quot,f,c
 52191  01915A  3E0E               	incfsz	i2__div_to_l_@exp1,f,c
 52192  01915C  D7F9               	goto	i2l2550
 52193  01915E  D015               	goto	i2u2247_40
 52194  019160                     i2l2549:
 52195  019160  0E1F               	movlw	31
 52196  019162  640E               	cpfsgt	i2__div_to_l_@exp1,c
 52197  019164  D00F               	goto	i2l2555
 52198  019166  0E00               	movlw	0
 52199  019168  6E01               	movwf	?i2__div_to_l_,c
 52200  01916A  0E00               	movlw	0
 52201  01916C  6E02               	movwf	?i2__div_to_l_+1,c
 52202  01916E  0E00               	movlw	0
 52203  019170  6E03               	movwf	?i2__div_to_l_+2,c
 52204  019172  0E00               	movlw	0
 52205  019174  6E04               	movwf	?i2__div_to_l_+3,c
 52206  019176  0012               	return	
 52207  019178  90D8               	bcf	status,0,c
 52208  01917A  3609               	rlcf	i2__div_to_l_@quot,f,c
 52209  01917C  360A               	rlcf	i2__div_to_l_@quot+1,f,c
 52210  01917E  360B               	rlcf	i2__div_to_l_@quot+2,f,c
 52211  019180  360C               	rlcf	i2__div_to_l_@quot+3,f,c
 52212  019182  060E               	decf	i2__div_to_l_@exp1,f,c
 52213  019184                     i2l2555:
 52214  019184  500E               	movf	i2__div_to_l_@exp1,w,c
 52215  019186  A4D8               	btfss	status,2,c
 52216  019188  D7F7               	goto	i2l2556
 52217  01918A                     i2u2247_40:
 52218  01918A  C009  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 52219  01918E  C00A  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 52220  019192  C00B  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 52221  019196  C00C  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 52222  01919A  0012               	return		;funcret
 52223  01919C                     __end_ofi2__div_to_l_:
 52224                           	opt stack 0
 52225                           tosu	equ	0xFFF
 52226                           tosh	equ	0xFFE
 52227                           tosl	equ	0xFFD
 52228                           pclatu	equ	0xFFB
 52229                           pclath	equ	0xFFA
 52230                           tblptru	equ	0xFF8
 52231                           tblptrh	equ	0xFF7
 52232                           tblptrl	equ	0xFF6
 52233                           tablat	equ	0xFF5
 52234                           prodh	equ	0xFF4
 52235                           prodl	equ	0xFF3
 52236                           intcon	equ	0xFF2
 52237                           indf0	equ	0xFEF
 52238                           postinc0	equ	0xFEE
 52239                           fsr0h	equ	0xFEA
 52240                           fsr0l	equ	0xFE9
 52241                           wreg	equ	0xFE8
 52242                           indf1	equ	0xFE7
 52243                           postdec1	equ	0xFE5
 52244                           plusw1	equ	0xFE3
 52245                           fsr1h	equ	0xFE2
 52246                           fsr1l	equ	0xFE1
 52247                           bsr	equ	0xFE0
 52248                           indf2	equ	0xFDF
 52249                           postinc2	equ	0xFDE
 52250                           postdec2	equ	0xFDD
 52251                           plusw2	equ	0xFDB
 52252                           fsr2h	equ	0xFDA
 52253                           fsr2l	equ	0xFD9
 52254                           status	equ	0xFD8
 52255                           
 52256 ;; *************** function i2___wmul *****************
 52257 ;; Defined at:
 52258 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 52259 ;; Parameters:    Size  Location     Type
 52260 ;;  multiplier      2    0[COMRAM] unsigned int 
 52261 ;;  multiplicand    2    2[COMRAM] unsigned int 
 52262 ;; Auto vars:     Size  Location     Type
 52263 ;;  __wmul          2    4[COMRAM] unsigned int 
 52264 ;; Return value:  Size  Location     Type
 52265 ;;                  2    0[COMRAM] unsigned int 
 52266 ;; Registers used:
 52267 ;;		wreg, status,2, status,0, prodl, prodh
 52268 ;; Tracked objects:
 52269 ;;		On entry : 0/0
 52270 ;;		On exit  : 0/0
 52271 ;;		Unchanged: 0/0
 52272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52273 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52274 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52276 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52277 ;;Total ram usage:        6 bytes
 52278 ;; Hardware stack levels used:    1
 52279 ;; This function calls:
 52280 ;;		Nothing
 52281 ;; This function is called by:
 52282 ;;		i2__doprnt
 52283 ;; This function uses a non-reentrant model
 52284 ;;
 52285                           
 52286                           	psect	text171
 52287  01BBB8                     __ptext171:
 52288                           	opt stack 0
 52289  01BBB8                     i2___wmul:
 52290                           	opt stack 7
 52291                           
 52292                           ;incstack = 0
 52293  01BBB8  5001               	movf	i2___wmul@multiplier,w,c
 52294  01BBBA  0203               	mulwf	i2___wmul@multiplicand,c
 52295  01BBBC  CFF3 F005          	movff	prodl,i2___wmul@product
 52296  01BBC0  CFF4 F006          	movff	prodh,i2___wmul@product+1
 52297  01BBC4  5001               	movf	i2___wmul@multiplier,w,c
 52298  01BBC6  0204               	mulwf	i2___wmul@multiplicand+1,c
 52299  01BBC8  50F3               	movf	prodl,w,c
 52300  01BBCA  2606               	addwf	i2___wmul@product+1,f,c
 52301  01BBCC  5002               	movf	i2___wmul@multiplier+1,w,c
 52302  01BBCE  0203               	mulwf	i2___wmul@multiplicand,c
 52303  01BBD0  50F3               	movf	prodl,w,c
 52304  01BBD2  2606               	addwf	i2___wmul@product+1,f,c
 52305  01BBD4  C005  F001         	movff	i2___wmul@product,?i2___wmul
 52306  01BBD8  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 52307  01BBDC  0012               	return	
 52308  01BBDE                     __end_ofi2___wmul:
 52309                           	opt stack 0
 52310                           tosu	equ	0xFFF
 52311                           tosh	equ	0xFFE
 52312                           tosl	equ	0xFFD
 52313                           pclatu	equ	0xFFB
 52314                           pclath	equ	0xFFA
 52315                           tblptru	equ	0xFF8
 52316                           tblptrh	equ	0xFF7
 52317                           tblptrl	equ	0xFF6
 52318                           tablat	equ	0xFF5
 52319                           prodh	equ	0xFF4
 52320                           prodl	equ	0xFF3
 52321                           intcon	equ	0xFF2
 52322                           indf0	equ	0xFEF
 52323                           postinc0	equ	0xFEE
 52324                           fsr0h	equ	0xFEA
 52325                           fsr0l	equ	0xFE9
 52326                           wreg	equ	0xFE8
 52327                           indf1	equ	0xFE7
 52328                           postdec1	equ	0xFE5
 52329                           plusw1	equ	0xFE3
 52330                           fsr1h	equ	0xFE2
 52331                           fsr1l	equ	0xFE1
 52332                           bsr	equ	0xFE0
 52333                           indf2	equ	0xFDF
 52334                           postinc2	equ	0xFDE
 52335                           postdec2	equ	0xFDD
 52336                           plusw2	equ	0xFDB
 52337                           fsr2h	equ	0xFDA
 52338                           fsr2l	equ	0xFD9
 52339                           status	equ	0xFD8
 52340                           
 52341 ;; *************** function i2___llmod *****************
 52342 ;; Defined at:
 52343 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 52344 ;; Parameters:    Size  Location     Type
 52345 ;;  dividend        4   13[COMRAM] unsigned long 
 52346 ;;  divisor         4   17[COMRAM] unsigned long 
 52347 ;; Auto vars:     Size  Location     Type
 52348 ;;  __llmod         1   21[COMRAM] unsigned char 
 52349 ;; Return value:  Size  Location     Type
 52350 ;;                  4   13[COMRAM] unsigned long 
 52351 ;; Registers used:
 52352 ;;		wreg, status,2, status,0
 52353 ;; Tracked objects:
 52354 ;;		On entry : 0/0
 52355 ;;		On exit  : 0/0
 52356 ;;		Unchanged: 0/0
 52357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52358 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52361 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52362 ;;Total ram usage:        9 bytes
 52363 ;; Hardware stack levels used:    1
 52364 ;; This function calls:
 52365 ;;		Nothing
 52366 ;; This function is called by:
 52367 ;;		i2__doprnt
 52368 ;; This function uses a non-reentrant model
 52369 ;;
 52370                           
 52371                           	psect	text172
 52372  01AB12                     __ptext172:
 52373                           	opt stack 0
 52374  01AB12                     i2___llmod:
 52375                           	opt stack 7
 52376                           
 52377                           ;incstack = 0
 52378  01AB12  5012               	movf	i2___llmod@divisor,w,c
 52379  01AB14  1013               	iorwf	i2___llmod@divisor+1,w,c
 52380  01AB16  1014               	iorwf	i2___llmod@divisor+2,w,c
 52381  01AB18  1015               	iorwf	i2___llmod@divisor+3,w,c
 52382  01AB1A  B4D8               	btfsc	status,2,c
 52383  01AB1C  D024               	goto	i2l2770
 52384  01AB1E  0E01               	movlw	1
 52385  01AB20  6E16               	movwf	i2___llmod@counter,c
 52386  01AB22  D006               	goto	i2l2765
 52387  01AB24  90D8               	bcf	status,0,c
 52388  01AB26  3612               	rlcf	i2___llmod@divisor,f,c
 52389  01AB28  3613               	rlcf	i2___llmod@divisor+1,f,c
 52390  01AB2A  3614               	rlcf	i2___llmod@divisor+2,f,c
 52391  01AB2C  3615               	rlcf	i2___llmod@divisor+3,f,c
 52392  01AB2E  2A16               	incf	i2___llmod@counter,f,c
 52393  01AB30                     i2l2765:
 52394  01AB30  AE15               	btfss	i2___llmod@divisor+3,7,c
 52395  01AB32  D7F8               	goto	i2l2766
 52396  01AB34                     i2u2263_40:
 52397  01AB34  5012               	movf	i2___llmod@divisor,w,c
 52398  01AB36  5C0E               	subwf	i2___llmod@dividend,w,c
 52399  01AB38  5013               	movf	i2___llmod@divisor+1,w,c
 52400  01AB3A  580F               	subwfb	i2___llmod@dividend+1,w,c
 52401  01AB3C  5014               	movf	i2___llmod@divisor+2,w,c
 52402  01AB3E  5810               	subwfb	i2___llmod@dividend+2,w,c
 52403  01AB40  5015               	movf	i2___llmod@divisor+3,w,c
 52404  01AB42  5811               	subwfb	i2___llmod@dividend+3,w,c
 52405  01AB44  A0D8               	btfss	status,0,c
 52406  01AB46  D008               	goto	i2l2769
 52407  01AB48  5012               	movf	i2___llmod@divisor,w,c
 52408  01AB4A  5E0E               	subwf	i2___llmod@dividend,f,c
 52409  01AB4C  5013               	movf	i2___llmod@divisor+1,w,c
 52410  01AB4E  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 52411  01AB50  5014               	movf	i2___llmod@divisor+2,w,c
 52412  01AB52  5A10               	subwfb	i2___llmod@dividend+2,f,c
 52413  01AB54  5015               	movf	i2___llmod@divisor+3,w,c
 52414  01AB56  5A11               	subwfb	i2___llmod@dividend+3,f,c
 52415  01AB58                     i2l2769:
 52416  01AB58  90D8               	bcf	status,0,c
 52417  01AB5A  3215               	rrcf	i2___llmod@divisor+3,f,c
 52418  01AB5C  3214               	rrcf	i2___llmod@divisor+2,f,c
 52419  01AB5E  3213               	rrcf	i2___llmod@divisor+1,f,c
 52420  01AB60  3212               	rrcf	i2___llmod@divisor,f,c
 52421  01AB62  2E16               	decfsz	i2___llmod@counter,f,c
 52422  01AB64  D7E7               	goto	i2u2263_40
 52423  01AB66                     i2l2770:
 52424  01AB66  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 52425  01AB6A  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 52426  01AB6E  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 52427  01AB72  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 52428  01AB76  0012               	return		;funcret
 52429  01AB78                     __end_ofi2___llmod:
 52430                           	opt stack 0
 52431                           tosu	equ	0xFFF
 52432                           tosh	equ	0xFFE
 52433                           tosl	equ	0xFFD
 52434                           pclatu	equ	0xFFB
 52435                           pclath	equ	0xFFA
 52436                           tblptru	equ	0xFF8
 52437                           tblptrh	equ	0xFF7
 52438                           tblptrl	equ	0xFF6
 52439                           tablat	equ	0xFF5
 52440                           prodh	equ	0xFF4
 52441                           prodl	equ	0xFF3
 52442                           intcon	equ	0xFF2
 52443                           indf0	equ	0xFEF
 52444                           postinc0	equ	0xFEE
 52445                           fsr0h	equ	0xFEA
 52446                           fsr0l	equ	0xFE9
 52447                           wreg	equ	0xFE8
 52448                           indf1	equ	0xFE7
 52449                           postdec1	equ	0xFE5
 52450                           plusw1	equ	0xFE3
 52451                           fsr1h	equ	0xFE2
 52452                           fsr1l	equ	0xFE1
 52453                           bsr	equ	0xFE0
 52454                           indf2	equ	0xFDF
 52455                           postinc2	equ	0xFDE
 52456                           postdec2	equ	0xFDD
 52457                           plusw2	equ	0xFDB
 52458                           fsr2h	equ	0xFDA
 52459                           fsr2l	equ	0xFD9
 52460                           status	equ	0xFD8
 52461                           
 52462 ;; *************** function i2___lldiv *****************
 52463 ;; Defined at:
 52464 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 52465 ;; Parameters:    Size  Location     Type
 52466 ;;  dividend        4    0[COMRAM] unsigned long 
 52467 ;;  divisor         4    4[COMRAM] unsigned long 
 52468 ;; Auto vars:     Size  Location     Type
 52469 ;;  __lldiv         4    8[COMRAM] unsigned long 
 52470 ;;  __lldiv         1   12[COMRAM] unsigned char 
 52471 ;; Return value:  Size  Location     Type
 52472 ;;                  4    0[COMRAM] unsigned long 
 52473 ;; Registers used:
 52474 ;;		wreg, status,2, status,0
 52475 ;; Tracked objects:
 52476 ;;		On entry : 0/0
 52477 ;;		On exit  : 0/0
 52478 ;;		Unchanged: 0/0
 52479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52480 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52481 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52483 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52484 ;;Total ram usage:       13 bytes
 52485 ;; Hardware stack levels used:    1
 52486 ;; This function calls:
 52487 ;;		Nothing
 52488 ;; This function is called by:
 52489 ;;		i2__doprnt
 52490 ;; This function uses a non-reentrant model
 52491 ;;
 52492                           
 52493                           	psect	text173
 52494  01A4D8                     __ptext173:
 52495                           	opt stack 0
 52496  01A4D8                     i2___lldiv:
 52497                           	opt stack 7
 52498                           
 52499                           ;incstack = 0
 52500  01A4D8  0E00               	movlw	0
 52501  01A4DA  6E09               	movwf	i2___lldiv@quotient,c
 52502  01A4DC  0E00               	movlw	0
 52503  01A4DE  6E0A               	movwf	i2___lldiv@quotient+1,c
 52504  01A4E0  0E00               	movlw	0
 52505  01A4E2  6E0B               	movwf	i2___lldiv@quotient+2,c
 52506  01A4E4  0E00               	movlw	0
 52507  01A4E6  6E0C               	movwf	i2___lldiv@quotient+3,c
 52508  01A4E8  5005               	movf	i2___lldiv@divisor,w,c
 52509  01A4EA  1006               	iorwf	i2___lldiv@divisor+1,w,c
 52510  01A4EC  1007               	iorwf	i2___lldiv@divisor+2,w,c
 52511  01A4EE  1008               	iorwf	i2___lldiv@divisor+3,w,c
 52512  01A4F0  B4D8               	btfsc	status,2,c
 52513  01A4F2  D02A               	goto	i2l2760
 52514  01A4F4  0E01               	movlw	1
 52515  01A4F6  6E0D               	movwf	i2___lldiv@counter,c
 52516  01A4F8  D006               	goto	i2l2755
 52517  01A4FA  90D8               	bcf	status,0,c
 52518  01A4FC  3605               	rlcf	i2___lldiv@divisor,f,c
 52519  01A4FE  3606               	rlcf	i2___lldiv@divisor+1,f,c
 52520  01A500  3607               	rlcf	i2___lldiv@divisor+2,f,c
 52521  01A502  3608               	rlcf	i2___lldiv@divisor+3,f,c
 52522  01A504  2A0D               	incf	i2___lldiv@counter,f,c
 52523  01A506                     i2l2755:
 52524  01A506  AE08               	btfss	i2___lldiv@divisor+3,7,c
 52525  01A508  D7F8               	goto	i2l2756
 52526  01A50A                     i2u2260_40:
 52527  01A50A  90D8               	bcf	status,0,c
 52528  01A50C  3609               	rlcf	i2___lldiv@quotient,f,c
 52529  01A50E  360A               	rlcf	i2___lldiv@quotient+1,f,c
 52530  01A510  360B               	rlcf	i2___lldiv@quotient+2,f,c
 52531  01A512  360C               	rlcf	i2___lldiv@quotient+3,f,c
 52532  01A514  5005               	movf	i2___lldiv@divisor,w,c
 52533  01A516  5C01               	subwf	i2___lldiv@dividend,w,c
 52534  01A518  5006               	movf	i2___lldiv@divisor+1,w,c
 52535  01A51A  5802               	subwfb	i2___lldiv@dividend+1,w,c
 52536  01A51C  5007               	movf	i2___lldiv@divisor+2,w,c
 52537  01A51E  5803               	subwfb	i2___lldiv@dividend+2,w,c
 52538  01A520  5008               	movf	i2___lldiv@divisor+3,w,c
 52539  01A522  5804               	subwfb	i2___lldiv@dividend+3,w,c
 52540  01A524  A0D8               	btfss	status,0,c
 52541  01A526  D009               	goto	i2l2759
 52542  01A528  5005               	movf	i2___lldiv@divisor,w,c
 52543  01A52A  5E01               	subwf	i2___lldiv@dividend,f,c
 52544  01A52C  5006               	movf	i2___lldiv@divisor+1,w,c
 52545  01A52E  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 52546  01A530  5007               	movf	i2___lldiv@divisor+2,w,c
 52547  01A532  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 52548  01A534  5008               	movf	i2___lldiv@divisor+3,w,c
 52549  01A536  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 52550  01A538  8009               	bsf	i2___lldiv@quotient,0,c
 52551  01A53A                     i2l2759:
 52552  01A53A  90D8               	bcf	status,0,c
 52553  01A53C  3208               	rrcf	i2___lldiv@divisor+3,f,c
 52554  01A53E  3207               	rrcf	i2___lldiv@divisor+2,f,c
 52555  01A540  3206               	rrcf	i2___lldiv@divisor+1,f,c
 52556  01A542  3205               	rrcf	i2___lldiv@divisor,f,c
 52557  01A544  2E0D               	decfsz	i2___lldiv@counter,f,c
 52558  01A546  D7E1               	goto	i2u2260_40
 52559  01A548                     i2l2760:
 52560  01A548  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 52561  01A54C  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 52562  01A550  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 52563  01A554  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 52564  01A558  0012               	return		;funcret
 52565  01A55A                     __end_ofi2___lldiv:
 52566                           	opt stack 0
 52567                           tosu	equ	0xFFF
 52568                           tosh	equ	0xFFE
 52569                           tosl	equ	0xFFD
 52570                           pclatu	equ	0xFFB
 52571                           pclath	equ	0xFFA
 52572                           tblptru	equ	0xFF8
 52573                           tblptrh	equ	0xFF7
 52574                           tblptrl	equ	0xFF6
 52575                           tablat	equ	0xFF5
 52576                           prodh	equ	0xFF4
 52577                           prodl	equ	0xFF3
 52578                           intcon	equ	0xFF2
 52579                           indf0	equ	0xFEF
 52580                           postinc0	equ	0xFEE
 52581                           fsr0h	equ	0xFEA
 52582                           fsr0l	equ	0xFE9
 52583                           wreg	equ	0xFE8
 52584                           indf1	equ	0xFE7
 52585                           postdec1	equ	0xFE5
 52586                           plusw1	equ	0xFE3
 52587                           fsr1h	equ	0xFE2
 52588                           fsr1l	equ	0xFE1
 52589                           bsr	equ	0xFE0
 52590                           indf2	equ	0xFDF
 52591                           postinc2	equ	0xFDE
 52592                           postdec2	equ	0xFDD
 52593                           plusw2	equ	0xFDB
 52594                           fsr2h	equ	0xFDA
 52595                           fsr2l	equ	0xFD9
 52596                           status	equ	0xFD8
 52597                           
 52598 ;; *************** function _ADCC_ThresholdISR *****************
 52599 ;; Defined at:
 52600 ;;		line 301 in file "mcc_generated_files/adcc.c"
 52601 ;; Parameters:    Size  Location     Type
 52602 ;;		None
 52603 ;; Auto vars:     Size  Location     Type
 52604 ;;		None
 52605 ;; Return value:  Size  Location     Type
 52606 ;;                  1    wreg      void 
 52607 ;; Registers used:
 52608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 52609 ;; Tracked objects:
 52610 ;;		On entry : 0/0
 52611 ;;		On exit  : 0/0
 52612 ;;		Unchanged: 0/0
 52613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52618 ;;Total ram usage:        0 bytes
 52619 ;; Hardware stack levels used:    1
 52620 ;; Hardware stack levels required when called:    7
 52621 ;; This function calls:
 52622 ;;		Absolute function
 52623 ;;		_ADCC_DefaultInterruptHandler
 52624 ;;		_ADC_PostProcessingCallback
 52625 ;; This function is called by:
 52626 ;;		_INTERRUPT_InterruptManagerHigh
 52627 ;; This function uses a non-reentrant model
 52628 ;;
 52629                           
 52630                           	psect	text174
 52631  01BAD2                     __ptext174:
 52632                           	opt stack 0
 52633  01BAD2                     _ADCC_ThresholdISR:
 52634                           	opt stack 3
 52635                           
 52636                           ;adcc.c: 304: PIR1bits.ADTIF = 0;
 52637                           
 52638                           ;incstack = 0
 52639  01BAD2  010E               	movlb	14	; () banked
 52640  01BAD4  9334               	bcf	52,1,b	;volatile
 52641                           
 52642                           ; BSR set to: 14
 52643                           ;adcc.c: 306: if (ADCC_ADTI_InterruptHandler)
 52644  01BAD6  0102               	movlb	2	; () banked
 52645  01BAD8  51D4               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 52646  01BADA  11D5               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 52647  01BADC  11D6               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 52648  01BADE  B4D8               	btfsc	status,2,c
 52649  01BAE0  0012               	return	
 52650                           
 52651                           ; BSR set to: 2
 52652                           ;adcc.c: 307: ADCC_ADTI_InterruptHandler();
 52653  01BAE2  D801               	call	i2u3680_48
 52654  01BAE4  0012               	return	
 52655  01BAE6                     i2u3680_48:
 52656  01BAE6  0005               	push	
 52657  01BAE8  6EFA               	movwf	pclath,c
 52658  01BAEA  51D4               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 52659  01BAEC  6EFD               	movwf	tosl,c
 52660  01BAEE  51D5               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 52661  01BAF0  6EFE               	movwf	tosh,c
 52662  01BAF2  51D6               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 52663  01BAF4  6EFF               	movwf	tosu,c
 52664  01BAF6  50FA               	movf	pclath,w,c
 52665  01BAF8  0012               	return		;indir
 52666  01BAFA                     __end_of_ADCC_ThresholdISR:
 52667                           	opt stack 0
 52668                           tosu	equ	0xFFF
 52669                           tosh	equ	0xFFE
 52670                           tosl	equ	0xFFD
 52671                           pclatu	equ	0xFFB
 52672                           pclath	equ	0xFFA
 52673                           tblptru	equ	0xFF8
 52674                           tblptrh	equ	0xFF7
 52675                           tblptrl	equ	0xFF6
 52676                           tablat	equ	0xFF5
 52677                           prodh	equ	0xFF4
 52678                           prodl	equ	0xFF3
 52679                           intcon	equ	0xFF2
 52680                           indf0	equ	0xFEF
 52681                           postinc0	equ	0xFEE
 52682                           fsr0h	equ	0xFEA
 52683                           fsr0l	equ	0xFE9
 52684                           wreg	equ	0xFE8
 52685                           indf1	equ	0xFE7
 52686                           postdec1	equ	0xFE5
 52687                           plusw1	equ	0xFE3
 52688                           fsr1h	equ	0xFE2
 52689                           fsr1l	equ	0xFE1
 52690                           bsr	equ	0xFE0
 52691                           indf2	equ	0xFDF
 52692                           postinc2	equ	0xFDE
 52693                           postdec2	equ	0xFDD
 52694                           plusw2	equ	0xFDB
 52695                           fsr2h	equ	0xFDA
 52696                           fsr2l	equ	0xFD9
 52697                           status	equ	0xFD8
 52698                           
 52699 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 52700 ;; Defined at:
 52701 ;;		line 313 in file "mcc_generated_files/adcc.c"
 52702 ;; Parameters:    Size  Location     Type
 52703 ;;		None
 52704 ;; Auto vars:     Size  Location     Type
 52705 ;;		None
 52706 ;; Return value:  Size  Location     Type
 52707 ;;                  1    wreg      void 
 52708 ;; Registers used:
 52709 ;;		None
 52710 ;; Tracked objects:
 52711 ;;		On entry : 0/0
 52712 ;;		On exit  : 0/0
 52713 ;;		Unchanged: 0/0
 52714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52719 ;;Total ram usage:        0 bytes
 52720 ;; Hardware stack levels used:    1
 52721 ;; This function calls:
 52722 ;;		Nothing
 52723 ;; This function is called by:
 52724 ;;		_ADCC_Initialize
 52725 ;;		_ADCC_ThresholdISR
 52726 ;; This function uses a non-reentrant model
 52727 ;;
 52728                           
 52729                           	psect	text175
 52730  01C036                     __ptext175:
 52731                           	opt stack 0
 52732  01C036                     _ADCC_DefaultInterruptHandler:
 52733                           	opt stack 9
 52734                           
 52735                           ;incstack = 0
 52736  01C036  0012               	return		;funcret
 52737  01C038                     __end_of_ADCC_DefaultInterruptHandler:
 52738                           	opt stack 0
 52739                           tosu	equ	0xFFF
 52740                           tosh	equ	0xFFE
 52741                           tosl	equ	0xFFD
 52742                           pclatu	equ	0xFFB
 52743                           pclath	equ	0xFFA
 52744                           tblptru	equ	0xFF8
 52745                           tblptrh	equ	0xFF7
 52746                           tblptrl	equ	0xFF6
 52747                           tablat	equ	0xFF5
 52748                           prodh	equ	0xFF4
 52749                           prodl	equ	0xFF3
 52750                           intcon	equ	0xFF2
 52751                           indf0	equ	0xFEF
 52752                           postinc0	equ	0xFEE
 52753                           fsr0h	equ	0xFEA
 52754                           fsr0l	equ	0xFE9
 52755                           wreg	equ	0xFE8
 52756                           indf1	equ	0xFE7
 52757                           postdec1	equ	0xFE5
 52758                           plusw1	equ	0xFE3
 52759                           fsr1h	equ	0xFE2
 52760                           fsr1l	equ	0xFE1
 52761                           bsr	equ	0xFE0
 52762                           indf2	equ	0xFDF
 52763                           postinc2	equ	0xFDE
 52764                           postdec2	equ	0xFDD
 52765                           plusw2	equ	0xFDB
 52766                           fsr2h	equ	0xFDA
 52767                           fsr2l	equ	0xFD9
 52768                           status	equ	0xFD8
 52769                           
 52770 ;; *************** function _ADC_PostProcessingCallback *****************
 52771 ;; Defined at:
 52772 ;;		line 232 in file "main.c"
 52773 ;; Parameters:    Size  Location     Type
 52774 ;;		None
 52775 ;; Auto vars:     Size  Location     Type
 52776 ;;  current_adc_    1  117[BANK0 ] enum E17652
 52777 ;; Return value:  Size  Location     Type
 52778 ;;                  1    wreg      void 
 52779 ;; Registers used:
 52780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 52781 ;; Tracked objects:
 52782 ;;		On entry : 0/0
 52783 ;;		On exit  : 0/0
 52784 ;;		Unchanged: 0/0
 52785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 52786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52787 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52789 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52790 ;;Total ram usage:       21 bytes
 52791 ;; Hardware stack levels used:    1
 52792 ;; Hardware stack levels required when called:    6
 52793 ;; This function calls:
 52794 ;;		_ADCC_GetConversionResult
 52795 ;;		_ADCC_GetCurrentCountofConversions
 52796 ;;		_ADCC_GetFilterValue
 52797 ;;		_ADCC_HasAccumulatorOverflowed
 52798 ;;		_ADCC_StopConversion
 52799 ;;		_abs
 52800 ;;		_currentMeasuredToPeak
 52801 ;;		_peakToRMS
 52802 ;;		i2___fladd
 52803 ;;		i2___fldiv
 52804 ;;		i2___flge
 52805 ;;		i2___flmul
 52806 ;;		i2___flneg
 52807 ;;		i2___fltol
 52808 ;;		i2___xxtofl
 52809 ;; This function is called by:
 52810 ;;		_main
 52811 ;;		_ADCC_ThresholdISR
 52812 ;; This function uses a non-reentrant model
 52813 ;;
 52814                           
 52815                           	psect	text176
 52816  014138                     __ptext176:
 52817                           	opt stack 0
 52818  014138                     _ADC_PostProcessingCallback:
 52819                           	opt stack 3
 52820                           
 52821                           ;main.c: 235: ADCC_StopConversion();
 52822                           
 52823                           ;incstack = 0
 52824  014138  EC11  F0E0         	call	_ADCC_StopConversion	;wreg free
 52825                           
 52826                           ;main.c: 238: adcc_channel_t current_adc_channel = ADPCH;
 52827  01413C  CF5F F0D5          	movff	3935,ADC_PostProcessingCallback@current_adc_channel	;volatile
 52828                           
 52829                           ;main.c: 241: switch (current_adc_channel) {
 52830  014140  EFD4  F0A5         	goto	i2l1360
 52831  014144                     
 52832                           ;main.c: 245: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 52833  014144  EC47  F0DF         	call	_ADCC_GetConversionResult	;wreg free
 52834  014148  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 52835  01414C  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 52836  014150  6A07               	clrf	i2___xxtofl@val+2,c
 52837  014152  6A08               	clrf	i2___xxtofl@val+3,c
 52838  014154  0E00               	movlw	0
 52839  014156  EC92  F0C4         	call	i2___xxtofl
 52840  01415A  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 52841  01415E  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 52842  014162  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 52843  014166  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 52844  01416A  0E0D               	movlw	13
 52845  01416C  6E34               	movwf	i2___flmul@a,c
 52846  01416E  0E68               	movlw	104
 52847  014170  6E35               	movwf	i2___flmul@a+1,c
 52848  014172  0E53               	movlw	83
 52849  014174  6E36               	movwf	i2___flmul@a+2,c
 52850  014176  0E3B               	movlw	59
 52851  014178  6E37               	movwf	i2___flmul@a+3,c
 52852  01417A  EC05  F0AE         	call	i2___flmul	;wreg free
 52853  01417E  C030  F2C1         	movff	?i2___flmul,_AVSS_ADC_Result	;volatile
 52854  014182  C031  F2C2         	movff	?i2___flmul+1,_AVSS_ADC_Result+1	;volatile
 52855  014186  C032  F2C3         	movff	?i2___flmul+2,_AVSS_ADC_Result+2	;volatile
 52856  01418A  C033  F2C4         	movff	?i2___flmul+3,_AVSS_ADC_Result+3	;volatile
 52857                           
 52858                           ;main.c: 247: if ((AVSS_ADC_Result > 0.01) || ADCC_HasAccumulatorOverflowed()) {
 52859  01418E  0E0A               	movlw	10
 52860  014190  6E34               	movwf	i2___flge@ff1,c
 52861  014192  0ED7               	movlw	215
 52862  014194  6E35               	movwf	i2___flge@ff1+1,c
 52863  014196  0E23               	movlw	35
 52864  014198  6E36               	movwf	i2___flge@ff1+2,c
 52865  01419A  0E3C               	movlw	60
 52866  01419C  6E37               	movwf	i2___flge@ff1+3,c
 52867  01419E  C2C1  F038         	movff	_AVSS_ADC_Result,i2___flge@ff2	;volatile
 52868  0141A2  C2C2  F039         	movff	_AVSS_ADC_Result+1,i2___flge@ff2+1	;volatile
 52869  0141A6  C2C3  F03A         	movff	_AVSS_ADC_Result+2,i2___flge@ff2+2	;volatile
 52870  0141AA  C2C4  F03B         	movff	_AVSS_ADC_Result+3,i2___flge@ff2+3	;volatile
 52871  0141AE  EC5F  F0C9         	call	i2___flge	;wreg free
 52872  0141B2  A0D8               	btfss	status,0,c
 52873  0141B4  D005               	goto	i2u2440_40
 52874  0141B6  ECDE  F0DF         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 52875  0141BA  0900               	iorlw	0
 52876  0141BC  B4D8               	btfsc	status,2,c
 52877  0141BE  D004               	goto	i2l1362
 52878  0141C0                     i2u2440_40:
 52879                           
 52880                           ;main.c: 249: error_handler.AVSS_ADC_error_flag = 1;
 52881  0141C0  0E01               	movlw	1
 52882  0141C2  0101               	movlb	1	; () banked
 52883  0141C4  6F63               	movwf	(_error_handler+3)& (0+255),b
 52884                           
 52885                           ; BSR set to: 1
 52886                           ;main.c: 250: return;
 52887  0141C6  0012               	return	
 52888  0141C8                     i2l1362:
 52889                           
 52890                           ;main.c: 252: }
 52891                           ;main.c: 254: next_channel = channel_FVR_buf1;
 52892                           
 52893                           ; BSR set to: 1
 52894  0141C8  0E3F               	movlw	63
 52895  0141CA  EFCD  F0A5         	goto	L26
 52896  0141CE                     
 52897                           ;main.c: 261: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 52898                           
 52899                           ; BSR set to: 1
 52900  0141CE  0E0D               	movlw	13
 52901  0141D0  6E34               	movwf	i2___flmul@a,c
 52902  0141D2  0E68               	movlw	104
 52903  0141D4  6E35               	movwf	i2___flmul@a+1,c
 52904  0141D6  0E53               	movlw	83
 52905  0141D8  6E36               	movwf	i2___flmul@a+2,c
 52906  0141DA  0E3B               	movlw	59
 52907  0141DC  6E37               	movwf	i2___flmul@a+3,c
 52908  0141DE  EC47  F0DF         	call	_ADCC_GetConversionResult	;wreg free
 52909  0141E2  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 52910  0141E6  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 52911  0141EA  6A07               	clrf	i2___xxtofl@val+2,c
 52912  0141EC  6A08               	clrf	i2___xxtofl@val+3,c
 52913  0141EE  0E00               	movlw	0
 52914  0141F0  EC92  F0C4         	call	i2___xxtofl
 52915  0141F4  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 52916  0141F8  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 52917  0141FC  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 52918  014200  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 52919  014204  EC05  F0AE         	call	i2___flmul	;wreg free
 52920  014208  C030  F056         	movff	?i2___flmul,i2___fladd@b
 52921  01420C  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 52922  014210  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 52923  014214  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 52924  014218  C2C1  F05A         	movff	_AVSS_ADC_Result,i2___fladd@a	;volatile
 52925  01421C  C2C2  F05B         	movff	_AVSS_ADC_Result+1,i2___fladd@a+1	;volatile
 52926  014220  C2C3  F05C         	movff	_AVSS_ADC_Result+2,i2___fladd@a+2	;volatile
 52927  014224  C2C4  F05D         	movff	_AVSS_ADC_Result+3,i2___fladd@a+3	;volatile
 52928  014228  EC4C  F0B1         	call	i2___fladd	;wreg free
 52929  01422C  C056  F1A7         	movff	?i2___fladd,_FVR_ADC_Result	;volatile
 52930  014230  C057  F1A8         	movff	?i2___fladd+1,_FVR_ADC_Result+1	;volatile
 52931  014234  C058  F1A9         	movff	?i2___fladd+2,_FVR_ADC_Result+2	;volatile
 52932  014238  C059  F1AA         	movff	?i2___fladd+3,_FVR_ADC_Result+3	;volatile
 52933                           
 52934                           ;main.c: 262: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 52935  01423C  0E6F               	movlw	111
 52936  01423E  6E13               	movwf	i2___fldiv@b,c
 52937  014240  0E12               	movlw	18
 52938  014242  6E14               	movwf	i2___fldiv@b+1,c
 52939  014244  0E03               	movlw	3
 52940  014246  6E15               	movwf	i2___fldiv@b+2,c
 52941  014248  0E40               	movlw	64
 52942  01424A  6E16               	movwf	i2___fldiv@b+3,c
 52943  01424C  C1A7  F017         	movff	_FVR_ADC_Result,i2___fldiv@a	;volatile
 52944  014250  C1A8  F018         	movff	_FVR_ADC_Result+1,i2___fldiv@a+1	;volatile
 52945  014254  C1A9  F019         	movff	_FVR_ADC_Result+2,i2___fldiv@a+2	;volatile
 52946  014258  C1AA  F01A         	movff	_FVR_ADC_Result+3,i2___fldiv@a+3	;volatile
 52947  01425C  EC0E  F0BA         	call	i2___fldiv	;wreg free
 52948  014260  C013  F2BD         	movff	?i2___fldiv,_ADC_Result_Scaling	;volatile
 52949  014264  C014  F2BE         	movff	?i2___fldiv+1,_ADC_Result_Scaling+1	;volatile
 52950  014268  C015  F2BF         	movff	?i2___fldiv+2,_ADC_Result_Scaling+2	;volatile
 52951  01426C  C016  F2C0         	movff	?i2___fldiv+3,_ADC_Result_Scaling+3	;volatile
 52952                           
 52953                           ;main.c: 264: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0 || ADCC_HasAccumulatorOve
      +                          rflowed()) {
 52954  014270  0E00               	movlw	0
 52955  014272  6E34               	movwf	i2___flge@ff1,c
 52956  014274  0E00               	movlw	0
 52957  014276  6E35               	movwf	i2___flge@ff1+1,c
 52958  014278  0E20               	movlw	32
 52959  01427A  6E36               	movwf	i2___flge@ff1+2,c
 52960  01427C  0E40               	movlw	64
 52961  01427E  6E37               	movwf	i2___flge@ff1+3,c
 52962  014280  C1A7  F038         	movff	_FVR_ADC_Result,i2___flge@ff2	;volatile
 52963  014284  C1A8  F039         	movff	_FVR_ADC_Result+1,i2___flge@ff2+1	;volatile
 52964  014288  C1A9  F03A         	movff	_FVR_ADC_Result+2,i2___flge@ff2+2	;volatile
 52965  01428C  C1AA  F03B         	movff	_FVR_ADC_Result+3,i2___flge@ff2+3	;volatile
 52966  014290  EC5F  F0C9         	call	i2___flge	;wreg free
 52967  014294  A0D8               	btfss	status,0,c
 52968  014296  D019               	goto	i2u2443_40
 52969  014298  C1A7  F034         	movff	_FVR_ADC_Result,i2___flge@ff1	;volatile
 52970  01429C  C1A8  F035         	movff	_FVR_ADC_Result+1,i2___flge@ff1+1	;volatile
 52971  0142A0  C1A9  F036         	movff	_FVR_ADC_Result+2,i2___flge@ff1+2	;volatile
 52972  0142A4  C1AA  F037         	movff	_FVR_ADC_Result+3,i2___flge@ff1+3	;volatile
 52973  0142A8  0E00               	movlw	0
 52974  0142AA  6E38               	movwf	i2___flge@ff2,c
 52975  0142AC  0E00               	movlw	0
 52976  0142AE  6E39               	movwf	i2___flge@ff2+1,c
 52977  0142B0  0E00               	movlw	0
 52978  0142B2  6E3A               	movwf	i2___flge@ff2+2,c
 52979  0142B4  0E40               	movlw	64
 52980  0142B6  6E3B               	movwf	i2___flge@ff2+3,c
 52981  0142B8  EC5F  F0C9         	call	i2___flge	;wreg free
 52982  0142BC  A0D8               	btfss	status,0,c
 52983  0142BE  D005               	goto	i2u2443_40
 52984  0142C0  ECDE  F0DF         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 52985  0142C4  0900               	iorlw	0
 52986  0142C6  B4D8               	btfsc	status,2,c
 52987  0142C8  D004               	goto	i2l1368
 52988  0142CA                     i2u2443_40:
 52989                           
 52990                           ;main.c: 266: error_handler.FVR_ADC_error_flag = 1;
 52991  0142CA  0E01               	movlw	1
 52992  0142CC  0101               	movlb	1	; () banked
 52993  0142CE  6F65               	movwf	(_error_handler+5)& (0+255),b
 52994                           
 52995                           ; BSR set to: 1
 52996                           ;main.c: 267: return;
 52997  0142D0  0012               	return	
 52998  0142D2                     i2l1368:
 52999                           
 53000                           ;main.c: 269: }
 53001                           ;main.c: 271: next_channel = POS3P3_ADC;
 53002                           
 53003                           ; BSR set to: 1
 53004  0142D2  0E22               	movlw	34
 53005  0142D4  EFCD  F0A5         	goto	L26
 53006  0142D8                     
 53007                           ;main.c: 278: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 53008                           
 53009                           ; BSR set to: 1
 53010  0142D8  C2BD  F034         	movff	_ADC_Result_Scaling,i2___flmul@a	;volatile
 53011  0142DC  C2BE  F035         	movff	_ADC_Result_Scaling+1,i2___flmul@a+1	;volatile
 53012  0142E0  C2BF  F036         	movff	_ADC_Result_Scaling+2,i2___flmul@a+2	;volatile
 53013  0142E4  C2C0  F037         	movff	_ADC_Result_Scaling+3,i2___flmul@a+3	;volatile
 53014  0142E8  EC3D  F0DF         	call	_ADCC_GetFilterValue	;wreg free
 53015  0142EC  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 53016  0142F0  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 53017  0142F4  6A07               	clrf	i2___xxtofl@val+2,c
 53018  0142F6  6A08               	clrf	i2___xxtofl@val+3,c
 53019  0142F8  0E00               	movlw	0
 53020  0142FA  EC92  F0C4         	call	i2___xxtofl
 53021  0142FE  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 53022  014302  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 53023  014306  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 53024  01430A  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 53025  01430E  EC05  F0AE         	call	i2___flmul	;wreg free
 53026  014312  C030  F0D6         	movff	?i2___flmul,_ADC_PostProcessingCallback$5949
 53027  014316  C031  F0D7         	movff	?i2___flmul+1,_ADC_PostProcessingCallback$5949+1
 53028  01431A  C032  F0D8         	movff	?i2___flmul+2,_ADC_PostProcessingCallback$5949+2
 53029  01431E  C033  F0D9         	movff	?i2___flmul+3,_ADC_PostProcessingCallback$5949+3
 53030                           
 53031                           ;main.c: 278: POS3P3_ADC_Result = ((ADCC_GetFilterValue()) * (3.3/1023.0)) * 2.0 * ADC_R
      +                          esult_Scaling;
 53032  014322  C0D6  F030         	movff	_ADC_PostProcessingCallback$5949,i2___flmul@b
 53033  014326  C0D7  F031         	movff	_ADC_PostProcessingCallback$5949+1,i2___flmul@b+1
 53034  01432A  C0D8  F032         	movff	_ADC_PostProcessingCallback$5949+2,i2___flmul@b+2
 53035  01432E  C0D9  F033         	movff	_ADC_PostProcessingCallback$5949+3,i2___flmul@b+3
 53036  014332  0E0D               	movlw	13
 53037  014334  6E34               	movwf	i2___flmul@a,c
 53038  014336  0E68               	movlw	104
 53039  014338  6E35               	movwf	i2___flmul@a+1,c
 53040  01433A  0ED3               	movlw	211
 53041  01433C  6E36               	movwf	i2___flmul@a+2,c
 53042  01433E  0E3B               	movlw	59
 53043  014340  6E37               	movwf	i2___flmul@a+3,c
 53044  014342  EC05  F0AE         	call	i2___flmul	;wreg free
 53045  014346  C030  F184         	movff	?i2___flmul,_POS3P3_ADC_Result	;volatile
 53046  01434A  C031  F185         	movff	?i2___flmul+1,_POS3P3_ADC_Result+1	;volatile
 53047  01434E  C032  F186         	movff	?i2___flmul+2,_POS3P3_ADC_Result+2	;volatile
 53048  014352  C033  F187         	movff	?i2___flmul+3,_POS3P3_ADC_Result+3	;volatile
 53049                           
 53050                           ;main.c: 280: if (POS3P3_ADC_Result > 3.5 || ADCC_HasAccumulatorOverflowed()) {
 53051  014356  0E00               	movlw	0
 53052  014358  6E34               	movwf	i2___flge@ff1,c
 53053  01435A  0E00               	movlw	0
 53054  01435C  6E35               	movwf	i2___flge@ff1+1,c
 53055  01435E  0E60               	movlw	96
 53056  014360  6E36               	movwf	i2___flge@ff1+2,c
 53057  014362  0E40               	movlw	64
 53058  014364  6E37               	movwf	i2___flge@ff1+3,c
 53059  014366  C184  F038         	movff	_POS3P3_ADC_Result,i2___flge@ff2	;volatile
 53060  01436A  C185  F039         	movff	_POS3P3_ADC_Result+1,i2___flge@ff2+1	;volatile
 53061  01436E  C186  F03A         	movff	_POS3P3_ADC_Result+2,i2___flge@ff2+2	;volatile
 53062  014372  C187  F03B         	movff	_POS3P3_ADC_Result+3,i2___flge@ff2+3	;volatile
 53063  014376  EC5F  F0C9         	call	i2___flge	;wreg free
 53064  01437A  A0D8               	btfss	status,0,c
 53065  01437C  D005               	goto	i2u2445_40
 53066  01437E  ECDE  F0DF         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 53067  014382  0900               	iorlw	0
 53068  014384  B4D8               	btfsc	status,2,c
 53069  014386  D004               	goto	i2l1372
 53070  014388                     i2u2445_40:
 53071                           
 53072                           ;main.c: 282: error_handler.POS3P3_ADC_error_flag = 1;
 53073  014388  0E01               	movlw	1
 53074  01438A  0101               	movlb	1	; () banked
 53075  01438C  6F62               	movwf	(_error_handler+2)& (0+255),b
 53076                           
 53077                           ; BSR set to: 1
 53078                           ;main.c: 283: return;
 53079  01438E  0012               	return	
 53080  014390                     i2l1372:
 53081                           
 53082                           ;main.c: 285: }
 53083                           ;main.c: 287: next_channel = ISNS_ADC;
 53084                           
 53085                           ; BSR set to: 1
 53086  014390  0E00               	movlw	0
 53087  014392  EFCD  F0A5         	goto	L26
 53088  014396                     
 53089                           ;main.c: 294: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 53090                           
 53091                           ; BSR set to: 1
 53092  014396  0E00               	movlw	0
 53093  014398  6E17               	movwf	i2___fldiv@a,c
 53094  01439A  0EC0               	movlw	192
 53095  01439C  6E18               	movwf	i2___fldiv@a+1,c
 53096  01439E  0E7F               	movlw	127
 53097  0143A0  6E19               	movwf	i2___fldiv@a+2,c
 53098  0143A2  0E44               	movlw	68
 53099  0143A4  6E1A               	movwf	i2___fldiv@a+3,c
 53100  0143A6  C184  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 53101  0143AA  C185  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 53102  0143AE  C186  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 53103  0143B2  C187  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 53104  0143B6  EC0E  F0BA         	call	i2___fldiv	;wreg free
 53105  0143BA  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 53106  0143BE  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 53107  0143C2  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 53108  0143C6  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 53109  0143CA  EC3D  F0DF         	call	_ADCC_GetFilterValue	;wreg free
 53110  0143CE  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 53111  0143D2  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 53112  0143D6  6A07               	clrf	i2___xxtofl@val+2,c
 53113  0143D8  6A08               	clrf	i2___xxtofl@val+3,c
 53114  0143DA  0E00               	movlw	0
 53115  0143DC  EC92  F0C4         	call	i2___xxtofl
 53116  0143E0  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 53117  0143E4  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 53118  0143E8  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 53119  0143EC  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 53120  0143F0  EC05  F0AE         	call	i2___flmul	;wreg free
 53121  0143F4  C030  F0D6         	movff	?i2___flmul,_ADC_PostProcessingCallback$5949
 53122  0143F8  C031  F0D7         	movff	?i2___flmul+1,_ADC_PostProcessingCallback$5949+1
 53123  0143FC  C032  F0D8         	movff	?i2___flmul+2,_ADC_PostProcessingCallback$5949+2
 53124  014400  C033  F0D9         	movff	?i2___flmul+3,_ADC_PostProcessingCallback$5949+3
 53125                           
 53126                           ;main.c: 294: Imeas = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * (3.787 / 2.
      +                          0);
 53127  014404  C0D6  F030         	movff	_ADC_PostProcessingCallback$5949,i2___flmul@b
 53128  014408  C0D7  F031         	movff	_ADC_PostProcessingCallback$5949+1,i2___flmul@b+1
 53129  01440C  C0D8  F032         	movff	_ADC_PostProcessingCallback$5949+2,i2___flmul@b+2
 53130  014410  C0D9  F033         	movff	_ADC_PostProcessingCallback$5949+3,i2___flmul@b+3
 53131  014414  0E35               	movlw	53
 53132  014416  6E34               	movwf	i2___flmul@a,c
 53133  014418  0E5E               	movlw	94
 53134  01441A  6E35               	movwf	i2___flmul@a+1,c
 53135  01441C  0EF2               	movlw	242
 53136  01441E  6E36               	movwf	i2___flmul@a+2,c
 53137  014420  0E3F               	movlw	63
 53138  014422  6E37               	movwf	i2___flmul@a+3,c
 53139  014424  EC05  F0AE         	call	i2___flmul	;wreg free
 53140  014428  C030  F2B5         	movff	?i2___flmul,_Imeas	;volatile
 53141  01442C  C031  F2B6         	movff	?i2___flmul+1,_Imeas+1	;volatile
 53142  014430  C032  F2B7         	movff	?i2___flmul+2,_Imeas+2	;volatile
 53143  014434  C033  F2B8         	movff	?i2___flmul+3,_Imeas+3	;volatile
 53144                           
 53145                           ;main.c: 298: if (LATGbits.LATG0 != 1) {
 53146  014438  B07F               	btfsc	3967,0,c	;volatile
 53147  01443A  D166               	goto	i2l1376
 53148                           
 53149                           ;main.c: 303: if (load_enable) {
 53150  01443C  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 53151  01443E  D0CD               	goto	i2l1377
 53152                           
 53153                           ;main.c: 306: if (dimming_period < 0x7FEE) {
 53154  014440  0EEE               	movlw	238
 53155  014442  0102               	movlb	2	; () banked
 53156  014444  5DFC               	subwf	_dimming_period& (0+255),w,b	;volatile
 53157  014446  0E7F               	movlw	127
 53158  014448  59FD               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 53159  01444A  B0D8               	btfsc	status,0,c
 53160  01444C  D052               	goto	i2l1378
 53161                           
 53162                           ; BSR set to: 2
 53163                           ;main.c: 308: Ipk = Imeas;
 53164  01444E  C2B5  F178         	movff	_Imeas,_Ipk	;volatile
 53165  014452  C2B6  F179         	movff	_Imeas+1,_Ipk+1	;volatile
 53166  014456  C2B7  F17A         	movff	_Imeas+2,_Ipk+2	;volatile
 53167  01445A  C2B8  F17B         	movff	_Imeas+3,_Ipk+3	;volatile
 53168                           
 53169                           ; BSR set to: 2
 53170                           ;main.c: 309: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 53171  01445E  C0F7  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 53172  014462  C0F8  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 53173  014466  C0F9  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 53174  01446A  C0FA  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 53175  01446E  C178  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 53176  014472  C179  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 53177  014476  C17A  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 53178  01447A  C17B  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 53179  01447E  ECA8  F0C1         	call	_peakToRMS	;wreg free
 53180  014482  C0B1  F0DA         	movff	?_peakToRMS,_ADC_PostProcessingCallback$5950
 53181  014486  C0B2  F0DB         	movff	?_peakToRMS+1,_ADC_PostProcessingCallback$5950+1
 53182  01448A  C0B3  F0DC         	movff	?_peakToRMS+2,_ADC_PostProcessingCallback$5950+2
 53183  01448E  C0B4  F0DD         	movff	?_peakToRMS+3,_ADC_PostProcessingCallback$5950+3
 53184                           
 53185                           ;main.c: 309: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 53186  014492  C1AC  F05A         	movff	_Irms_offset,i2___fladd@a
 53187  014496  C1AD  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 53188  01449A  C1AE  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 53189  01449E  C1AF  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 53190  0144A2  C0DA  F056         	movff	_ADC_PostProcessingCallback$5950,i2___fladd@b
 53191  0144A6  C0DB  F057         	movff	_ADC_PostProcessingCallback$5950+1,i2___fladd@b+1
 53192  0144AA  C0DC  F058         	movff	_ADC_PostProcessingCallback$5950+2,i2___fladd@b+2
 53193  0144AE  C0DD  F059         	movff	_ADC_PostProcessingCallback$5950+3,i2___fladd@b+3
 53194  0144B2  EC4C  F0B1         	call	i2___fladd	;wreg free
 53195  0144B6  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 53196  0144BA  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 53197  0144BE  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 53198  0144C2  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 53199  0144C6  EC6E  F0CC         	call	i2___fltol	;wreg free
 53200  0144CA  C06C  F076         	movff	?i2___fltol,abs@a
 53201  0144CE  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 53202  0144D2  EC2C  F0DD         	call	_abs	;wreg free
 53203  0144D6  0100               	movlb	0	; () banked
 53204  0144D8  C076  F005         	movff	?_abs,i2___xxtofl@val
 53205  0144DC  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 53206  0144E0  0E00               	movlw	0
 53207  0144E2  BE06               	btfsc	i2___xxtofl@val+1,7,c
 53208  0144E4  0EFF               	movlw	-1
 53209  0144E6  6E07               	movwf	i2___xxtofl@val+2,c
 53210  0144E8  6E08               	movwf	i2___xxtofl@val+3,c
 53211  0144EA  0E01               	movlw	1
 53212  0144EC  EC92  F0C4         	call	i2___xxtofl
 53213  0144F0  D063               	goto	L24
 53214  0144F2                     i2l1378:
 53215                           
 53216                           ;main.c: 314: else {
 53217                           ;main.c: 316: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 53218  0144F2  C2B5  F099         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 53219  0144F6  C2B6  F09A         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 53220  0144FA  C2B7  F09B         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 53221  0144FE  C2B8  F09C         	movff	_Imeas+3,currentMeasuredToPeak@Measured+3	;volatile
 53222  014502  C0F7  F09D         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 53223  014506  C0F8  F09E         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 53224  01450A  C0F9  F09F         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 53225  01450E  C0FA  F0A0         	movff	_TRIAC_Firing_Angle+3,currentMeasuredToPeak@Angle+3	;volatile
 53226  014512  ECAD  F0D2         	call	_currentMeasuredToPeak	;wreg free
 53227  014516  C099  F178         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 53228  01451A  C09A  F179         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 53229  01451E  C09B  F17A         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 53230  014522  C09C  F17B         	movff	?_currentMeasuredToPeak+3,_Ipk+3	;volatile
 53231                           
 53232                           ;main.c: 317: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 53233  014526  C0F7  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 53234  01452A  C0F8  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 53235  01452E  C0F9  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 53236  014532  C0FA  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 53237  014536  C178  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 53238  01453A  C179  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 53239  01453E  C17A  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 53240  014542  C17B  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 53241  014546  ECA8  F0C1         	call	_peakToRMS	;wreg free
 53242  01454A  C0B1  F0DA         	movff	?_peakToRMS,_ADC_PostProcessingCallback$5950
 53243  01454E  C0B2  F0DB         	movff	?_peakToRMS+1,_ADC_PostProcessingCallback$5950+1
 53244  014552  C0B3  F0DC         	movff	?_peakToRMS+2,_ADC_PostProcessingCallback$5950+2
 53245  014556  C0B4  F0DD         	movff	?_peakToRMS+3,_ADC_PostProcessingCallback$5950+3
 53246                           
 53247                           ;main.c: 317: Irms = abs(peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset);
 53248  01455A  C1AC  F05A         	movff	_Irms_offset,i2___fladd@a
 53249  01455E  C1AD  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 53250  014562  C1AE  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 53251  014566  C1AF  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 53252  01456A  C0DA  F056         	movff	_ADC_PostProcessingCallback$5950,i2___fladd@b
 53253  01456E  C0DB  F057         	movff	_ADC_PostProcessingCallback$5950+1,i2___fladd@b+1
 53254  014572  C0DC  F058         	movff	_ADC_PostProcessingCallback$5950+2,i2___fladd@b+2
 53255  014576  C0DD  F059         	movff	_ADC_PostProcessingCallback$5950+3,i2___fladd@b+3
 53256  01457A  EC4C  F0B1         	call	i2___fladd	;wreg free
 53257  01457E  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 53258  014582  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 53259  014586  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 53260  01458A  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 53261  01458E  EC6E  F0CC         	call	i2___fltol	;wreg free
 53262  014592  C06C  F076         	movff	?i2___fltol,abs@a
 53263  014596  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 53264  01459A  EC2C  F0DD         	call	_abs	;wreg free
 53265  01459E  0100               	movlb	0	; () banked
 53266  0145A0  C076  F005         	movff	?_abs,i2___xxtofl@val
 53267  0145A4  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 53268  0145A8  0E00               	movlw	0
 53269  0145AA  BE06               	btfsc	i2___xxtofl@val+1,7,c
 53270  0145AC  0EFF               	movlw	-1
 53271  0145AE  6E07               	movwf	i2___xxtofl@val+2,c
 53272  0145B0  6E08               	movwf	i2___xxtofl@val+3,c
 53273  0145B2  0E01               	movlw	1
 53274  0145B4  EC92  F0C4         	call	i2___xxtofl
 53275  0145B8                     L24:
 53276  0145B8  C005  F174         	movff	?i2___xxtofl,_Irms	;volatile
 53277  0145BC  C006  F175         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 53278  0145C0  C007  F176         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 53279  0145C4  C008  F177         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 53280                           
 53281                           ;main.c: 319: }
 53282                           ;main.c: 321: Vpk = Vpk_const;
 53283  0145C8  C2F4  F2B9         	movff	_Vpk_const,_Vpk	;volatile
 53284  0145CC  C2F5  F2BA         	movff	_Vpk_const+1,_Vpk+1	;volatile
 53285  0145D0  C2F6  F2BB         	movff	_Vpk_const+2,_Vpk+2	;volatile
 53286  0145D4  C2F7  F2BC         	movff	_Vpk_const+3,_Vpk+3	;volatile
 53287                           
 53288                           ;main.c: 323: }
 53289  0145D8  D02C               	goto	i2l1380
 53290  0145DA                     i2l1377:
 53291                           
 53292                           ;main.c: 325: else {
 53293                           ;main.c: 327: Ipk = 0.0;
 53294  0145DA  0E00               	movlw	0
 53295  0145DC  0101               	movlb	1	; () banked
 53296  0145DE  6F78               	movwf	_Ipk& (0+255),b	;volatile
 53297  0145E0  0E00               	movlw	0
 53298  0145E2  6F79               	movwf	(_Ipk+1)& (0+255),b	;volatile
 53299  0145E4  0E00               	movlw	0
 53300  0145E6  6F7A               	movwf	(_Ipk+2)& (0+255),b	;volatile
 53301  0145E8  0E00               	movlw	0
 53302  0145EA  6F7B               	movwf	(_Ipk+3)& (0+255),b	;volatile
 53303                           
 53304                           ;main.c: 328: Vpk = 0.0;
 53305  0145EC  0E00               	movlw	0
 53306  0145EE  0102               	movlb	2	; () banked
 53307  0145F0  6FB9               	movwf	_Vpk& (0+255),b	;volatile
 53308  0145F2  0E00               	movlw	0
 53309  0145F4  6FBA               	movwf	(_Vpk+1)& (0+255),b	;volatile
 53310  0145F6  0E00               	movlw	0
 53311  0145F8  6FBB               	movwf	(_Vpk+2)& (0+255),b	;volatile
 53312  0145FA  0E00               	movlw	0
 53313  0145FC  6FBC               	movwf	(_Vpk+3)& (0+255),b	;volatile
 53314                           
 53315                           ; BSR set to: 2
 53316                           ;main.c: 329: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 53317  0145FE  C178  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 53318  014602  C179  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 53319  014606  C17A  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 53320  01460A  C17B  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 53321  01460E  C0F7  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 53322  014612  C0F8  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 53323  014616  C0F9  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 53324  01461A  C0FA  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 53325  01461E  ECA8  F0C1         	call	_peakToRMS	;wreg free
 53326  014622  C0B1  F174         	movff	?_peakToRMS,_Irms	;volatile
 53327  014626  C0B2  F175         	movff	?_peakToRMS+1,_Irms+1	;volatile
 53328  01462A  C0B3  F176         	movff	?_peakToRMS+2,_Irms+2	;volatile
 53329  01462E  C0B4  F177         	movff	?_peakToRMS+3,_Irms+3	;volatile
 53330  014632                     i2l1380:
 53331                           
 53332                           ;main.c: 331: }
 53333                           ;main.c: 333: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 53334  014632  C2B9  F0B1         	movff	_Vpk,peakToRMS@Peak	;volatile
 53335  014636  C2BA  F0B2         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 53336  01463A  C2BB  F0B3         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 53337  01463E  C2BC  F0B4         	movff	_Vpk+3,peakToRMS@Peak+3	;volatile
 53338  014642  C0F7  F0B5         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 53339  014646  C0F8  F0B6         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 53340  01464A  C0F9  F0B7         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 53341  01464E  C0FA  F0B8         	movff	_TRIAC_Firing_Angle+3,peakToRMS@Angle+3	;volatile
 53342  014652  ECA8  F0C1         	call	_peakToRMS	;wreg free
 53343  014656  C0B1  F2B1         	movff	?_peakToRMS,_Vrms	;volatile
 53344  01465A  C0B2  F2B2         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 53345  01465E  C0B3  F2B3         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 53346  014662  C0B4  F2B4         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 53347                           
 53348                           ;main.c: 334: Avg_Power = Vrms * Irms;
 53349  014666  C2B1  F030         	movff	_Vrms,i2___flmul@b	;volatile
 53350  01466A  C2B2  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 53351  01466E  C2B3  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 53352  014672  C2B4  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 53353  014676  C174  F034         	movff	_Irms,i2___flmul@a	;volatile
 53354  01467A  C175  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 53355  01467E  C176  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 53356  014682  C177  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 53357  014686  EC05  F0AE         	call	i2___flmul	;wreg free
 53358  01468A  C030  F170         	movff	?i2___flmul,_Avg_Power	;volatile
 53359  01468E  C031  F171         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 53360  014692  C032  F172         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 53361  014696  C033  F173         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 53362                           
 53363                           ;main.c: 335: Total_Energy = Total_Energy + (Avg_Power * 0.07 / 3600.0);
 53364  01469A  0E00               	movlw	0
 53365  01469C  6E17               	movwf	i2___fldiv@a,c
 53366  01469E  0E00               	movlw	0
 53367  0146A0  6E18               	movwf	i2___fldiv@a+1,c
 53368  0146A2  0E61               	movlw	97
 53369  0146A4  6E19               	movwf	i2___fldiv@a+2,c
 53370  0146A6  0E45               	movlw	69
 53371  0146A8  6E1A               	movwf	i2___fldiv@a+3,c
 53372  0146AA  0E29               	movlw	41
 53373  0146AC  6E34               	movwf	i2___flmul@a,c
 53374  0146AE  0E5C               	movlw	92
 53375  0146B0  6E35               	movwf	i2___flmul@a+1,c
 53376  0146B2  0E8F               	movlw	143
 53377  0146B4  6E36               	movwf	i2___flmul@a+2,c
 53378  0146B6  0E3D               	movlw	61
 53379  0146B8  6E37               	movwf	i2___flmul@a+3,c
 53380  0146BA  C170  F030         	movff	_Avg_Power,i2___flmul@b	;volatile
 53381  0146BE  C171  F031         	movff	_Avg_Power+1,i2___flmul@b+1	;volatile
 53382  0146C2  C172  F032         	movff	_Avg_Power+2,i2___flmul@b+2	;volatile
 53383  0146C6  C173  F033         	movff	_Avg_Power+3,i2___flmul@b+3	;volatile
 53384  0146CA  EC05  F0AE         	call	i2___flmul	;wreg free
 53385  0146CE  C030  F013         	movff	?i2___flmul,i2___fldiv@b
 53386  0146D2  C031  F014         	movff	?i2___flmul+1,i2___fldiv@b+1
 53387  0146D6  C032  F015         	movff	?i2___flmul+2,i2___fldiv@b+2
 53388  0146DA  C033  F016         	movff	?i2___flmul+3,i2___fldiv@b+3
 53389  0146DE  EC0E  F0BA         	call	i2___fldiv	;wreg free
 53390  0146E2  C013  F056         	movff	?i2___fldiv,i2___fladd@b
 53391  0146E6  C014  F057         	movff	?i2___fldiv+1,i2___fladd@b+1
 53392  0146EA  C015  F058         	movff	?i2___fldiv+2,i2___fladd@b+2
 53393  0146EE  C016  F059         	movff	?i2___fldiv+3,i2___fladd@b+3
 53394  0146F2  C0F0  F05A         	movff	_Total_Energy,i2___fladd@a	;volatile
 53395  0146F6  C0F1  F05B         	movff	_Total_Energy+1,i2___fladd@a+1	;volatile
 53396  0146FA  C0F2  F05C         	movff	_Total_Energy+2,i2___fladd@a+2	;volatile
 53397  0146FE  C0F3  F05D         	movff	_Total_Energy+3,i2___fladd@a+3	;volatile
 53398  014702  EC4C  F0B1         	call	i2___fladd	;wreg free
 53399  014706  D0C5               	goto	L20
 53400  014708                     i2l1376:
 53401                           
 53402                           ;main.c: 340: else {
 53403                           ;main.c: 342: Ipk = Imeas;
 53404  014708  C2B5  F178         	movff	_Imeas,_Ipk	;volatile
 53405  01470C  C2B6  F179         	movff	_Imeas+1,_Ipk+1	;volatile
 53406  014710  C2B7  F17A         	movff	_Imeas+2,_Ipk+2	;volatile
 53407  014714  C2B8  F17B         	movff	_Imeas+3,_Ipk+3	;volatile
 53408                           
 53409                           ;main.c: 343: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 53410  014718  0E00               	movlw	0
 53411  01471A  0100               	movlb	0	; () banked
 53412  01471C  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 53413  01471E  0E00               	movlw	0
 53414  014720  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 53415  014722  0E00               	movlw	0
 53416  014724  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 53417  014726  0E00               	movlw	0
 53418  014728  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 53419  01472A  C178  F0B1         	movff	_Ipk,peakToRMS@Peak	;volatile
 53420  01472E  C179  F0B2         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 53421  014732  C17A  F0B3         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 53422  014736  C17B  F0B4         	movff	_Ipk+3,peakToRMS@Peak+3	;volatile
 53423  01473A  ECA8  F0C1         	call	_peakToRMS	;wreg free
 53424  01473E  C0B1  F0DA         	movff	?_peakToRMS,_ADC_PostProcessingCallback$5950
 53425  014742  C0B2  F0DB         	movff	?_peakToRMS+1,_ADC_PostProcessingCallback$5950+1
 53426  014746  C0B3  F0DC         	movff	?_peakToRMS+2,_ADC_PostProcessingCallback$5950+2
 53427  01474A  C0B4  F0DD         	movff	?_peakToRMS+3,_ADC_PostProcessingCallback$5950+3
 53428                           
 53429                           ;main.c: 343: Irms = abs(peakToRMS(Ipk, 0.0) + Irms_offset);
 53430  01474E  C1AC  F05A         	movff	_Irms_offset,i2___fladd@a
 53431  014752  C1AD  F05B         	movff	_Irms_offset+1,i2___fladd@a+1
 53432  014756  C1AE  F05C         	movff	_Irms_offset+2,i2___fladd@a+2
 53433  01475A  C1AF  F05D         	movff	_Irms_offset+3,i2___fladd@a+3
 53434  01475E  C0DA  F056         	movff	_ADC_PostProcessingCallback$5950,i2___fladd@b
 53435  014762  C0DB  F057         	movff	_ADC_PostProcessingCallback$5950+1,i2___fladd@b+1
 53436  014766  C0DC  F058         	movff	_ADC_PostProcessingCallback$5950+2,i2___fladd@b+2
 53437  01476A  C0DD  F059         	movff	_ADC_PostProcessingCallback$5950+3,i2___fladd@b+3
 53438  01476E  EC4C  F0B1         	call	i2___fladd	;wreg free
 53439  014772  C056  F06C         	movff	?i2___fladd,i2___fltol@f1
 53440  014776  C057  F06D         	movff	?i2___fladd+1,i2___fltol@f1+1
 53441  01477A  C058  F06E         	movff	?i2___fladd+2,i2___fltol@f1+2
 53442  01477E  C059  F06F         	movff	?i2___fladd+3,i2___fltol@f1+3
 53443  014782  EC6E  F0CC         	call	i2___fltol	;wreg free
 53444  014786  C06C  F076         	movff	?i2___fltol,abs@a
 53445  01478A  C06D  F077         	movff	?i2___fltol+1,abs@a+1
 53446  01478E  EC2C  F0DD         	call	_abs	;wreg free
 53447  014792  0100               	movlb	0	; () banked
 53448  014794  C076  F005         	movff	?_abs,i2___xxtofl@val
 53449  014798  C077  F006         	movff	?_abs+1,i2___xxtofl@val+1
 53450  01479C  0E00               	movlw	0
 53451  01479E  BE06               	btfsc	i2___xxtofl@val+1,7,c
 53452  0147A0  0EFF               	movlw	-1
 53453  0147A2  6E07               	movwf	i2___xxtofl@val+2,c
 53454  0147A4  6E08               	movwf	i2___xxtofl@val+3,c
 53455  0147A6  0E01               	movlw	1
 53456  0147A8  EC92  F0C4         	call	i2___xxtofl
 53457  0147AC  C005  F174         	movff	?i2___xxtofl,_Irms	;volatile
 53458  0147B0  C006  F175         	movff	?i2___xxtofl+1,_Irms+1	;volatile
 53459  0147B4  C007  F176         	movff	?i2___xxtofl+2,_Irms+2	;volatile
 53460  0147B8  C008  F177         	movff	?i2___xxtofl+3,_Irms+3	;volatile
 53461                           
 53462                           ;main.c: 344: Vrms = peakToRMS(Vpk_const, 0.0);
 53463  0147BC  C2F4  F0B1         	movff	_Vpk_const,peakToRMS@Peak
 53464  0147C0  C2F5  F0B2         	movff	_Vpk_const+1,peakToRMS@Peak+1
 53465  0147C4  C2F6  F0B3         	movff	_Vpk_const+2,peakToRMS@Peak+2
 53466  0147C8  C2F7  F0B4         	movff	_Vpk_const+3,peakToRMS@Peak+3
 53467  0147CC  0E00               	movlw	0
 53468  0147CE  0100               	movlb	0	; () banked
 53469  0147D0  6FB5               	movwf	peakToRMS@Angle& (0+255),b
 53470  0147D2  0E00               	movlw	0
 53471  0147D4  6FB6               	movwf	(peakToRMS@Angle+1)& (0+255),b
 53472  0147D6  0E00               	movlw	0
 53473  0147D8  6FB7               	movwf	(peakToRMS@Angle+2)& (0+255),b
 53474  0147DA  0E00               	movlw	0
 53475  0147DC  6FB8               	movwf	(peakToRMS@Angle+3)& (0+255),b
 53476  0147DE  ECA8  F0C1         	call	_peakToRMS	;wreg free
 53477  0147E2  C0B1  F2B1         	movff	?_peakToRMS,_Vrms	;volatile
 53478  0147E6  C0B2  F2B2         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 53479  0147EA  C0B3  F2B3         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 53480  0147EE  C0B4  F2B4         	movff	?_peakToRMS+3,_Vrms+3	;volatile
 53481                           
 53482                           ;main.c: 345: Avg_Power = Vrms * Irms;
 53483  0147F2  C2B1  F030         	movff	_Vrms,i2___flmul@b	;volatile
 53484  0147F6  C2B2  F031         	movff	_Vrms+1,i2___flmul@b+1	;volatile
 53485  0147FA  C2B3  F032         	movff	_Vrms+2,i2___flmul@b+2	;volatile
 53486  0147FE  C2B4  F033         	movff	_Vrms+3,i2___flmul@b+3	;volatile
 53487  014802  C174  F034         	movff	_Irms,i2___flmul@a	;volatile
 53488  014806  C175  F035         	movff	_Irms+1,i2___flmul@a+1	;volatile
 53489  01480A  C176  F036         	movff	_Irms+2,i2___flmul@a+2	;volatile
 53490  01480E  C177  F037         	movff	_Irms+3,i2___flmul@a+3	;volatile
 53491  014812  EC05  F0AE         	call	i2___flmul	;wreg free
 53492  014816  C030  F170         	movff	?i2___flmul,_Avg_Power	;volatile
 53493  01481A  C031  F171         	movff	?i2___flmul+1,_Avg_Power+1	;volatile
 53494  01481E  C032  F172         	movff	?i2___flmul+2,_Avg_Power+2	;volatile
 53495  014822  C033  F173         	movff	?i2___flmul+3,_Avg_Power+3	;volatile
 53496                           
 53497                           ;main.c: 346: Total_Energy = Total_Energy + (Avg_Power * 0.07 / 3600.0);
 53498  014826  0E00               	movlw	0
 53499  014828  6E17               	movwf	i2___fldiv@a,c
 53500  01482A  0E00               	movlw	0
 53501  01482C  6E18               	movwf	i2___fldiv@a+1,c
 53502  01482E  0E61               	movlw	97
 53503  014830  6E19               	movwf	i2___fldiv@a+2,c
 53504  014832  0E45               	movlw	69
 53505  014834  6E1A               	movwf	i2___fldiv@a+3,c
 53506  014836  0E29               	movlw	41
 53507  014838  6E34               	movwf	i2___flmul@a,c
 53508  01483A  0E5C               	movlw	92
 53509  01483C  6E35               	movwf	i2___flmul@a+1,c
 53510  01483E  0E8F               	movlw	143
 53511  014840  6E36               	movwf	i2___flmul@a+2,c
 53512  014842  0E3D               	movlw	61
 53513  014844  6E37               	movwf	i2___flmul@a+3,c
 53514  014846  C170  F030         	movff	_Avg_Power,i2___flmul@b	;volatile
 53515  01484A  C171  F031         	movff	_Avg_Power+1,i2___flmul@b+1	;volatile
 53516  01484E  C172  F032         	movff	_Avg_Power+2,i2___flmul@b+2	;volatile
 53517  014852  C173  F033         	movff	_Avg_Power+3,i2___flmul@b+3	;volatile
 53518  014856  EC05  F0AE         	call	i2___flmul	;wreg free
 53519  01485A  C030  F013         	movff	?i2___flmul,i2___fldiv@b
 53520  01485E  C031  F014         	movff	?i2___flmul+1,i2___fldiv@b+1
 53521  014862  C032  F015         	movff	?i2___flmul+2,i2___fldiv@b+2
 53522  014866  C033  F016         	movff	?i2___flmul+3,i2___fldiv@b+3
 53523  01486A  EC0E  F0BA         	call	i2___fldiv	;wreg free
 53524  01486E  C013  F056         	movff	?i2___fldiv,i2___fladd@b
 53525  014872  C014  F057         	movff	?i2___fldiv+1,i2___fladd@b+1
 53526  014876  C015  F058         	movff	?i2___fldiv+2,i2___fladd@b+2
 53527  01487A  C016  F059         	movff	?i2___fldiv+3,i2___fladd@b+3
 53528  01487E  C0F0  F05A         	movff	_Total_Energy,i2___fladd@a	;volatile
 53529  014882  C0F1  F05B         	movff	_Total_Energy+1,i2___fladd@a+1	;volatile
 53530  014886  C0F2  F05C         	movff	_Total_Energy+2,i2___fladd@a+2	;volatile
 53531  01488A  C0F3  F05D         	movff	_Total_Energy+3,i2___fladd@a+3	;volatile
 53532  01488E  EC4C  F0B1         	call	i2___fladd	;wreg free
 53533  014892                     L20:
 53534  014892  C056  F0F0         	movff	?i2___fladd,_Total_Energy	;volatile
 53535  014896  C057  F0F1         	movff	?i2___fladd+1,_Total_Energy+1	;volatile
 53536  01489A  C058  F0F2         	movff	?i2___fladd+2,_Total_Energy+2	;volatile
 53537  01489E  C059  F0F3         	movff	?i2___fladd+3,_Total_Energy+3	;volatile
 53538                           
 53539                           ;main.c: 348: }
 53540                           ;main.c: 350: if (Irms > 5.0 || ADCC_HasAccumulatorOverflowed()) {
 53541  0148A2  0E00               	movlw	0
 53542  0148A4  6E34               	movwf	i2___flge@ff1,c
 53543  0148A6  0E00               	movlw	0
 53544  0148A8  6E35               	movwf	i2___flge@ff1+1,c
 53545  0148AA  0EA0               	movlw	160
 53546  0148AC  6E36               	movwf	i2___flge@ff1+2,c
 53547  0148AE  0E40               	movlw	64
 53548  0148B0  6E37               	movwf	i2___flge@ff1+3,c
 53549  0148B2  C174  F038         	movff	_Irms,i2___flge@ff2	;volatile
 53550  0148B6  C175  F039         	movff	_Irms+1,i2___flge@ff2+1	;volatile
 53551  0148BA  C176  F03A         	movff	_Irms+2,i2___flge@ff2+2	;volatile
 53552  0148BE  C177  F03B         	movff	_Irms+3,i2___flge@ff2+3	;volatile
 53553  0148C2  EC5F  F0C9         	call	i2___flge	;wreg free
 53554  0148C6  A0D8               	btfss	status,0,c
 53555  0148C8  D005               	goto	i2u2450_40
 53556  0148CA  ECDE  F0DF         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 53557  0148CE  0900               	iorlw	0
 53558  0148D0  B4D8               	btfsc	status,2,c
 53559  0148D2  D004               	goto	i2l1382
 53560  0148D4                     i2u2450_40:
 53561                           
 53562                           ;main.c: 352: error_handler.ISNS_ADC_error_flag = 1;
 53563  0148D4  0E01               	movlw	1
 53564  0148D6  0101               	movlb	1	; () banked
 53565  0148D8  6F60               	movwf	_error_handler& (0+255),b
 53566                           
 53567                           ; BSR set to: 1
 53568                           ;main.c: 353: return;
 53569  0148DA  0012               	return	
 53570  0148DC                     i2l1382:
 53571                           
 53572                           ;main.c: 355: }
 53573                           ;main.c: 357: next_channel = POS12_ADC;
 53574                           
 53575                           ; BSR set to: 1
 53576  0148DC  0E04               	movlw	4
 53577  0148DE  D15D               	goto	L26
 53578  0148E0                     
 53579                           ;main.c: 364: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 53580                           
 53581                           ; BSR set to: 1
 53582  0148E0  0E00               	movlw	0
 53583  0148E2  6E17               	movwf	i2___fldiv@a,c
 53584  0148E4  0EC0               	movlw	192
 53585  0148E6  6E18               	movwf	i2___fldiv@a+1,c
 53586  0148E8  0E7F               	movlw	127
 53587  0148EA  6E19               	movwf	i2___fldiv@a+2,c
 53588  0148EC  0E44               	movlw	68
 53589  0148EE  6E1A               	movwf	i2___fldiv@a+3,c
 53590  0148F0  C184  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 53591  0148F4  C185  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 53592  0148F8  C186  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 53593  0148FC  C187  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 53594  014900  EC0E  F0BA         	call	i2___fldiv	;wreg free
 53595  014904  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 53596  014908  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 53597  01490C  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 53598  014910  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 53599  014914  EC3D  F0DF         	call	_ADCC_GetFilterValue	;wreg free
 53600  014918  C001  F005         	movff	?_ADCC_GetFilterValue,i2___xxtofl@val
 53601  01491C  C002  F006         	movff	?_ADCC_GetFilterValue+1,i2___xxtofl@val+1
 53602  014920  6A07               	clrf	i2___xxtofl@val+2,c
 53603  014922  6A08               	clrf	i2___xxtofl@val+3,c
 53604  014924  0E00               	movlw	0
 53605  014926  EC92  F0C4         	call	i2___xxtofl
 53606  01492A  C005  F030         	movff	?i2___xxtofl,i2___flmul@b
 53607  01492E  C006  F031         	movff	?i2___xxtofl+1,i2___flmul@b+1
 53608  014932  C007  F032         	movff	?i2___xxtofl+2,i2___flmul@b+2
 53609  014936  C008  F033         	movff	?i2___xxtofl+3,i2___flmul@b+3
 53610  01493A  EC05  F0AE         	call	i2___flmul	;wreg free
 53611  01493E  C030  F0D6         	movff	?i2___flmul,_ADC_PostProcessingCallback$5949
 53612  014942  C031  F0D7         	movff	?i2___flmul+1,_ADC_PostProcessingCallback$5949+1
 53613  014946  C032  F0D8         	movff	?i2___flmul+2,_ADC_PostProcessingCallback$5949+2
 53614  01494A  C033  F0D9         	movff	?i2___flmul+3,_ADC_PostProcessingCallback$5949+3
 53615                           
 53616                           ;main.c: 364: POS12_ADC_Result = (ADCC_GetFilterValue()) * (POS3P3_ADC_Result/1023.0) * 
      +                          4.0303030303;
 53617  01494E  C0D6  F030         	movff	_ADC_PostProcessingCallback$5949,i2___flmul@b
 53618  014952  C0D7  F031         	movff	_ADC_PostProcessingCallback$5949+1,i2___flmul@b+1
 53619  014956  C0D8  F032         	movff	_ADC_PostProcessingCallback$5949+2,i2___flmul@b+2
 53620  01495A  C0D9  F033         	movff	_ADC_PostProcessingCallback$5949+3,i2___flmul@b+3
 53621  01495E  0E3E               	movlw	62
 53622  014960  6E34               	movwf	i2___flmul@a,c
 53623  014962  0EF8               	movlw	248
 53624  014964  6E35               	movwf	i2___flmul@a+1,c
 53625  014966  0E80               	movlw	128
 53626  014968  6E36               	movwf	i2___flmul@a+2,c
 53627  01496A  0E40               	movlw	64
 53628  01496C  6E37               	movwf	i2___flmul@a+3,c
 53629  01496E  EC05  F0AE         	call	i2___flmul	;wreg free
 53630  014972  C030  F180         	movff	?i2___flmul,_POS12_ADC_Result	;volatile
 53631  014976  C031  F181         	movff	?i2___flmul+1,_POS12_ADC_Result+1	;volatile
 53632  01497A  C032  F182         	movff	?i2___flmul+2,_POS12_ADC_Result+2	;volatile
 53633  01497E  C033  F183         	movff	?i2___flmul+3,_POS12_ADC_Result+3	;volatile
 53634                           
 53635                           ;main.c: 366: if (POS12_ADC_Result > 13.6 || ADCC_HasAccumulatorOverflowed()) {
 53636  014982  0E9A               	movlw	154
 53637  014984  6E34               	movwf	i2___flge@ff1,c
 53638  014986  0E99               	movlw	153
 53639  014988  6E35               	movwf	i2___flge@ff1+1,c
 53640  01498A  0E59               	movlw	89
 53641  01498C  6E36               	movwf	i2___flge@ff1+2,c
 53642  01498E  0E41               	movlw	65
 53643  014990  6E37               	movwf	i2___flge@ff1+3,c
 53644  014992  C180  F038         	movff	_POS12_ADC_Result,i2___flge@ff2	;volatile
 53645  014996  C181  F039         	movff	_POS12_ADC_Result+1,i2___flge@ff2+1	;volatile
 53646  01499A  C182  F03A         	movff	_POS12_ADC_Result+2,i2___flge@ff2+2	;volatile
 53647  01499E  C183  F03B         	movff	_POS12_ADC_Result+3,i2___flge@ff2+3	;volatile
 53648  0149A2  EC5F  F0C9         	call	i2___flge	;wreg free
 53649  0149A6  A0D8               	btfss	status,0,c
 53650  0149A8  D005               	goto	i2u2452_40
 53651  0149AA  ECDE  F0DF         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 53652  0149AE  0900               	iorlw	0
 53653  0149B0  B4D8               	btfsc	status,2,c
 53654  0149B2  D004               	goto	i2l1386
 53655  0149B4                     i2u2452_40:
 53656                           
 53657                           ;main.c: 368: error_handler.POS12_ADC_error_flag = 1;
 53658  0149B4  0E01               	movlw	1
 53659  0149B6  0101               	movlb	1	; () banked
 53660  0149B8  6F61               	movwf	(_error_handler+1)& (0+255),b
 53661                           
 53662                           ; BSR set to: 1
 53663                           ;main.c: 369: return;
 53664  0149BA  0012               	return	
 53665  0149BC                     i2l1386:
 53666                           
 53667                           ;main.c: 371: }
 53668                           ;main.c: 373: next_channel = channel_Temp;
 53669                           
 53670                           ; BSR set to: 1
 53671  0149BC  0E3D               	movlw	61
 53672  0149BE  D0ED               	goto	L26
 53673  0149C0                     
 53674                           ;main.c: 380: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 53675                           
 53676                           ; BSR set to: 1
 53677  0149C0  0E00               	movlw	0
 53678  0149C2  6E17               	movwf	i2___fldiv@a,c
 53679  0149C4  0E00               	movlw	0
 53680  0149C6  6E18               	movwf	i2___fldiv@a+1,c
 53681  0149C8  0E00               	movlw	0
 53682  0149CA  6E19               	movwf	i2___fldiv@a+2,c
 53683  0149CC  0E40               	movlw	64
 53684  0149CE  6E1A               	movwf	i2___fldiv@a+3,c
 53685  0149D0  C184  F013         	movff	_POS3P3_ADC_Result,i2___fldiv@b	;volatile
 53686  0149D4  C185  F014         	movff	_POS3P3_ADC_Result+1,i2___fldiv@b+1	;volatile
 53687  0149D8  C186  F015         	movff	_POS3P3_ADC_Result+2,i2___fldiv@b+2	;volatile
 53688  0149DC  C187  F016         	movff	_POS3P3_ADC_Result+3,i2___fldiv@b+3	;volatile
 53689  0149E0  EC0E  F0BA         	call	i2___fldiv	;wreg free
 53690  0149E4  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 53691  0149E8  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 53692  0149EC  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 53693  0149F0  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 53694  0149F4  0E00               	movlw	0
 53695  0149F6  6E5A               	movwf	i2___fladd@a,c
 53696  0149F8  0E00               	movlw	0
 53697  0149FA  6E5B               	movwf	i2___fladd@a+1,c
 53698  0149FC  0E80               	movlw	128
 53699  0149FE  6E5C               	movwf	i2___fladd@a+2,c
 53700  014A00  0E3F               	movlw	63
 53701  014A02  6E5D               	movwf	i2___fladd@a+3,c
 53702  014A04  0E00               	movlw	0
 53703  014A06  6E17               	movwf	i2___fldiv@a,c
 53704  014A08  0EC0               	movlw	192
 53705  014A0A  6E18               	movwf	i2___fldiv@a+1,c
 53706  014A0C  0E7F               	movlw	127
 53707  014A0E  6E19               	movwf	i2___fldiv@a+2,c
 53708  014A10  0E44               	movlw	68
 53709  014A12  6E1A               	movwf	i2___fldiv@a+3,c
 53710  014A14  EC47  F0DF         	call	_ADCC_GetConversionResult	;wreg free
 53711  014A18  C001  F005         	movff	?_ADCC_GetConversionResult,i2___xxtofl@val
 53712  014A1C  C002  F006         	movff	?_ADCC_GetConversionResult+1,i2___xxtofl@val+1
 53713  014A20  6A07               	clrf	i2___xxtofl@val+2,c
 53714  014A22  6A08               	clrf	i2___xxtofl@val+3,c
 53715  014A24  0E00               	movlw	0
 53716  014A26  EC92  F0C4         	call	i2___xxtofl
 53717  014A2A  C005  F013         	movff	?i2___xxtofl,i2___fldiv@b
 53718  014A2E  C006  F014         	movff	?i2___xxtofl+1,i2___fldiv@b+1
 53719  014A32  C007  F015         	movff	?i2___xxtofl+2,i2___fldiv@b+2
 53720  014A36  C008  F016         	movff	?i2___xxtofl+3,i2___fldiv@b+3
 53721  014A3A  EC0E  F0BA         	call	i2___fldiv	;wreg free
 53722  014A3E  C013  F02C         	movff	?i2___fldiv,i2___flneg@f1
 53723  014A42  C014  F02D         	movff	?i2___fldiv+1,i2___flneg@f1+1
 53724  014A46  C015  F02E         	movff	?i2___fldiv+2,i2___flneg@f1+2
 53725  014A4A  C016  F02F         	movff	?i2___fldiv+3,i2___flneg@f1+3
 53726  014A4E  EC15  F0DD         	call	i2___flneg	;wreg free
 53727  014A52  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 53728  014A56  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 53729  014A5A  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 53730  014A5E  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 53731  014A62  EC4C  F0B1         	call	i2___fladd	;wreg free
 53732  014A66  C056  F030         	movff	?i2___fladd,i2___flmul@b
 53733  014A6A  C057  F031         	movff	?i2___fladd+1,i2___flmul@b+1
 53734  014A6E  C058  F032         	movff	?i2___fladd+2,i2___flmul@b+2
 53735  014A72  C059  F033         	movff	?i2___fladd+3,i2___flmul@b+3
 53736  014A76  EC05  F0AE         	call	i2___flmul	;wreg free
 53737  014A7A  C030  F0C9         	movff	?i2___flmul,_ADC_PostProcessingCallback$5951
 53738  014A7E  C031  F0CA         	movff	?i2___flmul+1,_ADC_PostProcessingCallback$5951+1
 53739  014A82  C032  F0CB         	movff	?i2___flmul+2,_ADC_PostProcessingCallback$5951+2
 53740  014A86  C033  F0CC         	movff	?i2___flmul+3,_ADC_PostProcessingCallback$5951+3
 53741                           
 53742                           ;main.c: 380: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 53743  014A8A  0EDA               	movlw	218
 53744  014A8C  6E17               	movwf	i2___fldiv@a,c
 53745  014A8E  0E03               	movlw	3
 53746  014A90  6E18               	movwf	i2___fldiv@a+1,c
 53747  014A92  0EAD               	movlw	173
 53748  014A94  6E19               	movwf	i2___fldiv@a+2,c
 53749  014A96  0E3A               	movlw	58
 53750  014A98  6E1A               	movwf	i2___fldiv@a+3,c
 53751  014A9A  0E39               	movlw	57
 53752  014A9C  6E5A               	movwf	i2___fladd@a,c
 53753  014A9E  0EB4               	movlw	180
 53754  014AA0  6E5B               	movwf	i2___fladd@a+1,c
 53755  014AA2  0E28               	movlw	40
 53756  014AA4  6E5C               	movwf	i2___fladd@a+2,c
 53757  014AA6  0E3F               	movlw	63
 53758  014AA8  6E5D               	movwf	i2___fladd@a+3,c
 53759  014AAA  C0C9  F02C         	movff	_ADC_PostProcessingCallback$5951,i2___flneg@f1
 53760  014AAE  C0CA  F02D         	movff	_ADC_PostProcessingCallback$5951+1,i2___flneg@f1+1
 53761  014AB2  C0CB  F02E         	movff	_ADC_PostProcessingCallback$5951+2,i2___flneg@f1+2
 53762  014AB6  C0CC  F02F         	movff	_ADC_PostProcessingCallback$5951+3,i2___flneg@f1+3
 53763  014ABA  EC15  F0DD         	call	i2___flneg	;wreg free
 53764  014ABE  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 53765  014AC2  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 53766  014AC6  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 53767  014ACA  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 53768  014ACE  EC4C  F0B1         	call	i2___fladd	;wreg free
 53769  014AD2  C056  F013         	movff	?i2___fladd,i2___fldiv@b
 53770  014AD6  C057  F014         	movff	?i2___fladd+1,i2___fldiv@b+1
 53771  014ADA  C058  F015         	movff	?i2___fladd+2,i2___fldiv@b+2
 53772  014ADE  C059  F016         	movff	?i2___fladd+3,i2___fldiv@b+3
 53773  014AE2  EC0E  F0BA         	call	i2___fldiv	;wreg free
 53774  014AE6  C013  F0CD         	movff	?i2___fldiv,_ADC_PostProcessingCallback$5952
 53775  014AEA  C014  F0CE         	movff	?i2___fldiv+1,_ADC_PostProcessingCallback$5952+1
 53776  014AEE  C015  F0CF         	movff	?i2___fldiv+2,_ADC_PostProcessingCallback$5952+2
 53777  014AF2  C016  F0D0         	movff	?i2___fldiv+3,_ADC_PostProcessingCallback$5952+3
 53778                           
 53779                           ;main.c: 380: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 53780  014AF6  C2F8  F05A         	movff	_Temp_ADC_Offset,i2___fladd@a	;volatile
 53781  014AFA  C2F9  F05B         	movff	_Temp_ADC_Offset+1,i2___fladd@a+1	;volatile
 53782  014AFE  C2FA  F05C         	movff	_Temp_ADC_Offset+2,i2___fladd@a+2	;volatile
 53783  014B02  C2FB  F05D         	movff	_Temp_ADC_Offset+3,i2___fladd@a+3	;volatile
 53784  014B06  C0CD  F056         	movff	_ADC_PostProcessingCallback$5952,i2___fladd@b
 53785  014B0A  C0CE  F057         	movff	_ADC_PostProcessingCallback$5952+1,i2___fladd@b+1
 53786  014B0E  C0CF  F058         	movff	_ADC_PostProcessingCallback$5952+2,i2___fladd@b+2
 53787  014B12  C0D0  F059         	movff	_ADC_PostProcessingCallback$5952+3,i2___fladd@b+3
 53788  014B16  EC4C  F0B1         	call	i2___fladd	;wreg free
 53789  014B1A  C056  F0D1         	movff	?i2___fladd,_ADC_PostProcessingCallback$5953
 53790  014B1E  C057  F0D2         	movff	?i2___fladd+1,_ADC_PostProcessingCallback$5953+1
 53791  014B22  C058  F0D3         	movff	?i2___fladd+2,_ADC_PostProcessingCallback$5953+2
 53792  014B26  C059  F0D4         	movff	?i2___fladd+3,_ADC_PostProcessingCallback$5953+3
 53793                           
 53794                           ;main.c: 380: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 53795  014B2A  C0D1  F056         	movff	_ADC_PostProcessingCallback$5953,i2___fladd@b
 53796  014B2E  C0D2  F057         	movff	_ADC_PostProcessingCallback$5953+1,i2___fladd@b+1
 53797  014B32  C0D3  F058         	movff	_ADC_PostProcessingCallback$5953+2,i2___fladd@b+2
 53798  014B36  C0D4  F059         	movff	_ADC_PostProcessingCallback$5953+3,i2___fladd@b+3
 53799  014B3A  0E00               	movlw	0
 53800  014B3C  6E5A               	movwf	i2___fladd@a,c
 53801  014B3E  0E00               	movlw	0
 53802  014B40  6E5B               	movwf	i2___fladd@a+1,c
 53803  014B42  0E20               	movlw	32
 53804  014B44  6E5C               	movwf	i2___fladd@a+2,c
 53805  014B46  0EC2               	movlw	194
 53806  014B48  6E5D               	movwf	i2___fladd@a+3,c
 53807  014B4A  EC4C  F0B1         	call	i2___fladd	;wreg free
 53808  014B4E  C056  F17C         	movff	?i2___fladd,_Temp_ADC_Result	;volatile
 53809  014B52  C057  F17D         	movff	?i2___fladd+1,_Temp_ADC_Result+1	;volatile
 53810  014B56  C058  F17E         	movff	?i2___fladd+2,_Temp_ADC_Result+2	;volatile
 53811  014B5A  C059  F17F         	movff	?i2___fladd+3,_Temp_ADC_Result+3	;volatile
 53812                           
 53813                           ;main.c: 382: if (Temp_ADC_Result > 40.0 || ADCC_HasAccumulatorOverflowed()) {
 53814  014B5E  0E00               	movlw	0
 53815  014B60  6E34               	movwf	i2___flge@ff1,c
 53816  014B62  0E00               	movlw	0
 53817  014B64  6E35               	movwf	i2___flge@ff1+1,c
 53818  014B66  0E20               	movlw	32
 53819  014B68  6E36               	movwf	i2___flge@ff1+2,c
 53820  014B6A  0E42               	movlw	66
 53821  014B6C  6E37               	movwf	i2___flge@ff1+3,c
 53822  014B6E  C17C  F038         	movff	_Temp_ADC_Result,i2___flge@ff2	;volatile
 53823  014B72  C17D  F039         	movff	_Temp_ADC_Result+1,i2___flge@ff2+1	;volatile
 53824  014B76  C17E  F03A         	movff	_Temp_ADC_Result+2,i2___flge@ff2+2	;volatile
 53825  014B7A  C17F  F03B         	movff	_Temp_ADC_Result+3,i2___flge@ff2+3	;volatile
 53826  014B7E  EC5F  F0C9         	call	i2___flge	;wreg free
 53827  014B82  A0D8               	btfss	status,0,c
 53828  014B84  D005               	goto	i2u2454_40
 53829  014B86  ECDE  F0DF         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 53830  014B8A  0900               	iorlw	0
 53831  014B8C  B4D8               	btfsc	status,2,c
 53832  014B8E  D004               	goto	i2l1390
 53833  014B90                     i2u2454_40:
 53834                           
 53835                           ;main.c: 384: error_handler.Temp_ADC_error_flag = 1;
 53836  014B90  0E01               	movlw	1
 53837  014B92  0101               	movlb	1	; () banked
 53838  014B94  6F64               	movwf	(_error_handler+4)& (0+255),b
 53839                           
 53840                           ; BSR set to: 1
 53841                           ;main.c: 385: return;
 53842  014B96  0012               	return	
 53843  014B98                     i2l1390:
 53844                           
 53845                           ;main.c: 387: }
 53846                           ;main.c: 389: next_channel = channel_VSS;
 53847                           
 53848                           ; BSR set to: 1
 53849  014B98  0E3C               	movlw	60
 53850  014B9A                     L26:
 53851  014B9A  0101               	movlb	1	; () banked
 53852  014B9C  6FB0               	movwf	_next_channel& (0+255),b
 53853                           
 53854                           ;main.c: 391: break;
 53855  014B9E  D01D               	goto	i2l1366
 53856  014BA0                     
 53857                           ;main.c: 396: error_handler.ADC_general_error_flag = 1;
 53858                           
 53859                           ; BSR set to: 1
 53860  014BA0  0E01               	movlw	1
 53861  014BA2  0101               	movlb	1	; () banked
 53862  014BA4  6F66               	movwf	(_error_handler+6)& (0+255),b
 53863                           
 53864                           ; BSR set to: 1
 53865                           ;main.c: 399: }
 53866                           
 53867                           ;main.c: 397: break;
 53868  014BA6  D019               	goto	i2l1366
 53869  014BA8                     i2l1360:
 53870                           
 53871                           ; BSR set to: 1
 53872  014BA8  0100               	movlb	0	; () banked
 53873  014BAA  51D5               	movf	ADC_PostProcessingCallback@current_adc_channel& (0+255),w,b
 53874                           
 53875                           ; Switch size 1, requested type "space"
 53876                           ; Number of cases is 6, Range of values is 0 to 63
 53877                           ; switch strategies available:
 53878                           ; Name         Instructions Cycles
 53879                           ; simple_byte           19    10 (average)
 53880                           ;	Chosen strategy is simple_byte
 53881  014BAC  0A00               	xorlw	0	; case 0
 53882  014BAE  B4D8               	btfsc	status,2,c
 53883  014BB0  EFCB  F0A1         	goto	i2l1375
 53884  014BB4  0A04               	xorlw	4	; case 4
 53885  014BB6  B4D8               	btfsc	status,2,c
 53886  014BB8  D693               	goto	i2l1385
 53887  014BBA  0A26               	xorlw	38	; case 34
 53888  014BBC  B4D8               	btfsc	status,2,c
 53889  014BBE  EF6C  F0A1         	goto	i2l1371
 53890  014BC2  0A1E               	xorlw	30	; case 60
 53891  014BC4  B4D8               	btfsc	status,2,c
 53892  014BC6  EFA2  F0A0         	goto	i2l1361
 53893  014BCA  0A01               	xorlw	1	; case 61
 53894  014BCC  B4D8               	btfsc	status,2,c
 53895  014BCE  D6F8               	goto	i2l1389
 53896  014BD0  0A02               	xorlw	2	; case 63
 53897  014BD2  B4D8               	btfsc	status,2,c
 53898  014BD4  EFE7  F0A0         	goto	i2l1367
 53899  014BD8  D7E3               	goto	i2l1393
 53900  014BDA                     i2l1366:
 53901                           
 53902                           ;main.c: 401: if (ADCC_GetCurrentCountofConversions() != 255) {
 53903                           
 53904                           ; BSR set to: 0
 53905  014BDA  EC13  F0E0         	call	_ADCC_GetCurrentCountofConversions	;wreg free
 53906  014BDE  0AFF               	xorlw	255
 53907  014BE0  B4D8               	btfsc	status,2,c
 53908  014BE2  D003               	goto	i2l1394
 53909                           
 53910                           ;main.c: 402: error_handler.ADC_general_error_flag = 1;
 53911  014BE4  0E01               	movlw	1
 53912  014BE6  0101               	movlb	1	; () banked
 53913  014BE8  6F66               	movwf	(_error_handler+6)& (0+255),b
 53914  014BEA                     i2l1394:
 53915                           
 53916                           ;main.c: 403: }
 53917                           ;main.c: 405: if (ADCC_HasAccumulatorOverflowed()) {
 53918                           
 53919                           ; BSR set to: 1
 53920  014BEA  ECDE  F0DF         	call	_ADCC_HasAccumulatorOverflowed	;wreg free
 53921  014BEE  0900               	iorlw	0
 53922  014BF0  B4D8               	btfsc	status,2,c
 53923  014BF2  0012               	return	
 53924                           
 53925                           ;main.c: 406: error_handler.ADC_general_error_flag = 1;
 53926  014BF4  0E01               	movlw	1
 53927  014BF6  0101               	movlb	1	; () banked
 53928  014BF8  6F66               	movwf	(_error_handler+6)& (0+255),b
 53929  014BFA  0012               	return	
 53930  014BFC                     __end_of_ADC_PostProcessingCallback:
 53931                           	opt stack 0
 53932                           tosu	equ	0xFFF
 53933                           tosh	equ	0xFFE
 53934                           tosl	equ	0xFFD
 53935                           pclatu	equ	0xFFB
 53936                           pclath	equ	0xFFA
 53937                           tblptru	equ	0xFF8
 53938                           tblptrh	equ	0xFF7
 53939                           tblptrl	equ	0xFF6
 53940                           tablat	equ	0xFF5
 53941                           prodh	equ	0xFF4
 53942                           prodl	equ	0xFF3
 53943                           intcon	equ	0xFF2
 53944                           indf0	equ	0xFEF
 53945                           postinc0	equ	0xFEE
 53946                           fsr0h	equ	0xFEA
 53947                           fsr0l	equ	0xFE9
 53948                           wreg	equ	0xFE8
 53949                           indf1	equ	0xFE7
 53950                           postdec1	equ	0xFE5
 53951                           plusw1	equ	0xFE3
 53952                           fsr1h	equ	0xFE2
 53953                           fsr1l	equ	0xFE1
 53954                           bsr	equ	0xFE0
 53955                           indf2	equ	0xFDF
 53956                           postinc2	equ	0xFDE
 53957                           postdec2	equ	0xFDD
 53958                           plusw2	equ	0xFDB
 53959                           fsr2h	equ	0xFDA
 53960                           fsr2l	equ	0xFD9
 53961                           status	equ	0xFD8
 53962                           
 53963 ;; *************** function _peakToRMS *****************
 53964 ;; Defined at:
 53965 ;;		line 126 in file "main.c"
 53966 ;; Parameters:    Size  Location     Type
 53967 ;;  Peak            4   81[BANK0 ] void 
 53968 ;;  Angle           4   85[BANK0 ] void 
 53969 ;; Auto vars:     Size  Location     Type
 53970 ;;  RMS             4  101[BANK0 ] void 
 53971 ;; Return value:  Size  Location     Type
 53972 ;;                  4   81[BANK0 ] void 
 53973 ;; Registers used:
 53974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 53975 ;; Tracked objects:
 53976 ;;		On entry : 0/0
 53977 ;;		On exit  : 0/0
 53978 ;;		Unchanged: 0/0
 53979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 53980 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53981 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53983 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53984 ;;Total ram usage:       24 bytes
 53985 ;; Hardware stack levels used:    1
 53986 ;; Hardware stack levels required when called:    5
 53987 ;; This function calls:
 53988 ;;		_acos
 53989 ;;		_sin
 53990 ;;		_sqrt
 53991 ;;		i2___fladd
 53992 ;;		i2___fldiv
 53993 ;;		i2___flmul
 53994 ;;		i2___flneg
 53995 ;; This function is called by:
 53996 ;;		_ADC_PostProcessingCallback
 53997 ;; This function uses a non-reentrant model
 53998 ;;
 53999                           
 54000                           	psect	text177
 54001  018350                     __ptext177:
 54002                           	opt stack 0
 54003  018350                     _peakToRMS:
 54004                           	opt stack 3
 54005                           
 54006                           ;main.c: 129: double RMS = 0.0;
 54007                           
 54008                           ;incstack = 0
 54009  018350  0E00               	movlw	0
 54010  018352  0100               	movlb	0	; () banked
 54011  018354  6FC5               	movwf	peakToRMS@RMS& (0+255),b
 54012  018356  0E00               	movlw	0
 54013  018358  6FC6               	movwf	(peakToRMS@RMS+1)& (0+255),b
 54014  01835A  0E00               	movlw	0
 54015  01835C  6FC7               	movwf	(peakToRMS@RMS+2)& (0+255),b
 54016  01835E  0E00               	movlw	0
 54017  018360  6FC8               	movwf	(peakToRMS@RMS+3)& (0+255),b
 54018                           
 54019                           ; BSR set to: 0
 54020                           ;main.c: 132: RMS = 2.0 * acos(-1.0);
 54021  018362  0E00               	movlw	0
 54022  018364  6FA9               	movwf	acos@x& (0+255),b
 54023  018366  0E00               	movlw	0
 54024  018368  6FAA               	movwf	(acos@x+1)& (0+255),b
 54025  01836A  0E80               	movlw	128
 54026  01836C  6FAB               	movwf	(acos@x+2)& (0+255),b
 54027  01836E  0EBF               	movlw	191
 54028  018370  6FAC               	movwf	(acos@x+3)& (0+255),b
 54029  018372  EC4D  F0D4         	call	_acos	;wreg free
 54030  018376  C0A9  F0C1         	movff	?_acos,_peakToRMS$5946
 54031  01837A  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$5946+1
 54032  01837E  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$5946+2
 54033  018382  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$5946+3
 54034                           
 54035                           ;main.c: 132: RMS = 2.0 * acos(-1.0);
 54036  018386  C0C1  F030         	movff	_peakToRMS$5946,i2___flmul@b
 54037  01838A  C0C2  F031         	movff	_peakToRMS$5946+1,i2___flmul@b+1
 54038  01838E  C0C3  F032         	movff	_peakToRMS$5946+2,i2___flmul@b+2
 54039  018392  C0C4  F033         	movff	_peakToRMS$5946+3,i2___flmul@b+3
 54040  018396  0E00               	movlw	0
 54041  018398  6E34               	movwf	i2___flmul@a,c
 54042  01839A  0E00               	movlw	0
 54043  01839C  6E35               	movwf	i2___flmul@a+1,c
 54044  01839E  0E00               	movlw	0
 54045  0183A0  6E36               	movwf	i2___flmul@a+2,c
 54046  0183A2  0E40               	movlw	64
 54047  0183A4  6E37               	movwf	i2___flmul@a+3,c
 54048  0183A6  EC05  F0AE         	call	i2___flmul	;wreg free
 54049  0183AA  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 54050  0183AE  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 54051  0183B2  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 54052  0183B6  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 54053                           
 54054                           ;main.c: 133: RMS = RMS - (2.0 * Angle);
 54055  0183BA  0E00               	movlw	0
 54056  0183BC  6E34               	movwf	i2___flmul@a,c
 54057  0183BE  0E00               	movlw	0
 54058  0183C0  6E35               	movwf	i2___flmul@a+1,c
 54059  0183C2  0E00               	movlw	0
 54060  0183C4  6E36               	movwf	i2___flmul@a+2,c
 54061  0183C6  0E40               	movlw	64
 54062  0183C8  6E37               	movwf	i2___flmul@a+3,c
 54063  0183CA  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 54064  0183CE  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 54065  0183D2  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 54066  0183D6  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 54067  0183DA  EC05  F0AE         	call	i2___flmul	;wreg free
 54068  0183DE  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 54069  0183E2  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 54070  0183E6  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 54071  0183EA  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 54072  0183EE  EC15  F0DD         	call	i2___flneg	;wreg free
 54073  0183F2  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 54074  0183F6  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 54075  0183FA  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 54076  0183FE  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 54077  018402  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 54078  018406  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 54079  01840A  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 54080  01840E  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 54081  018412  EC4C  F0B1         	call	i2___fladd	;wreg free
 54082  018416  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 54083  01841A  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 54084  01841E  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 54085  018422  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 54086                           
 54087                           ;main.c: 134: RMS = RMS + sin(2.0 * Angle);
 54088  018426  0E00               	movlw	0
 54089  018428  6E34               	movwf	i2___flmul@a,c
 54090  01842A  0E00               	movlw	0
 54091  01842C  6E35               	movwf	i2___flmul@a+1,c
 54092  01842E  0E00               	movlw	0
 54093  018430  6E36               	movwf	i2___flmul@a+2,c
 54094  018432  0E40               	movlw	64
 54095  018434  6E37               	movwf	i2___flmul@a+3,c
 54096  018436  C0B5  F030         	movff	peakToRMS@Angle,i2___flmul@b
 54097  01843A  C0B6  F031         	movff	peakToRMS@Angle+1,i2___flmul@b+1
 54098  01843E  C0B7  F032         	movff	peakToRMS@Angle+2,i2___flmul@b+2
 54099  018442  C0B8  F033         	movff	peakToRMS@Angle+3,i2___flmul@b+3
 54100  018446  EC05  F0AE         	call	i2___flmul	;wreg free
 54101  01844A  C030  F0B9         	movff	?i2___flmul,_peakToRMS$5947
 54102  01844E  C031  F0BA         	movff	?i2___flmul+1,_peakToRMS$5947+1
 54103  018452  C032  F0BB         	movff	?i2___flmul+2,_peakToRMS$5947+2
 54104  018456  C033  F0BC         	movff	?i2___flmul+3,_peakToRMS$5947+3
 54105                           
 54106                           ;main.c: 134: RMS = RMS + sin(2.0 * Angle);
 54107  01845A  C0B9  F088         	movff	_peakToRMS$5947,sin@f
 54108  01845E  C0BA  F089         	movff	_peakToRMS$5947+1,sin@f+1
 54109  018462  C0BB  F08A         	movff	_peakToRMS$5947+2,sin@f+2
 54110  018466  C0BC  F08B         	movff	_peakToRMS$5947+3,sin@f+3
 54111  01846A  EC6D  F0B4         	call	_sin	;wreg free
 54112  01846E  C088  F0BD         	movff	?_sin,_peakToRMS$5948
 54113  018472  C089  F0BE         	movff	?_sin+1,_peakToRMS$5948+1
 54114  018476  C08A  F0BF         	movff	?_sin+2,_peakToRMS$5948+2
 54115  01847A  C08B  F0C0         	movff	?_sin+3,_peakToRMS$5948+3
 54116                           
 54117                           ;main.c: 134: RMS = RMS + sin(2.0 * Angle);
 54118  01847E  C0BD  F056         	movff	_peakToRMS$5948,i2___fladd@b
 54119  018482  C0BE  F057         	movff	_peakToRMS$5948+1,i2___fladd@b+1
 54120  018486  C0BF  F058         	movff	_peakToRMS$5948+2,i2___fladd@b+2
 54121  01848A  C0C0  F059         	movff	_peakToRMS$5948+3,i2___fladd@b+3
 54122  01848E  C0C5  F05A         	movff	peakToRMS@RMS,i2___fladd@a
 54123  018492  C0C6  F05B         	movff	peakToRMS@RMS+1,i2___fladd@a+1
 54124  018496  C0C7  F05C         	movff	peakToRMS@RMS+2,i2___fladd@a+2
 54125  01849A  C0C8  F05D         	movff	peakToRMS@RMS+3,i2___fladd@a+3
 54126  01849E  EC4C  F0B1         	call	i2___fladd	;wreg free
 54127  0184A2  C056  F0C5         	movff	?i2___fladd,peakToRMS@RMS
 54128  0184A6  C057  F0C6         	movff	?i2___fladd+1,peakToRMS@RMS+1
 54129  0184AA  C058  F0C7         	movff	?i2___fladd+2,peakToRMS@RMS+2
 54130  0184AE  C059  F0C8         	movff	?i2___fladd+3,peakToRMS@RMS+3
 54131                           
 54132                           ;main.c: 135: RMS = RMS / (4.0 * acos(-1.0));
 54133  0184B2  0E00               	movlw	0
 54134  0184B4  0100               	movlb	0	; () banked
 54135  0184B6  6FA9               	movwf	acos@x& (0+255),b
 54136  0184B8  0E00               	movlw	0
 54137  0184BA  6FAA               	movwf	(acos@x+1)& (0+255),b
 54138  0184BC  0E80               	movlw	128
 54139  0184BE  6FAB               	movwf	(acos@x+2)& (0+255),b
 54140  0184C0  0EBF               	movlw	191
 54141  0184C2  6FAC               	movwf	(acos@x+3)& (0+255),b
 54142  0184C4  EC4D  F0D4         	call	_acos	;wreg free
 54143  0184C8  C0A9  F0C1         	movff	?_acos,_peakToRMS$5946
 54144  0184CC  C0AA  F0C2         	movff	?_acos+1,_peakToRMS$5946+1
 54145  0184D0  C0AB  F0C3         	movff	?_acos+2,_peakToRMS$5946+2
 54146  0184D4  C0AC  F0C4         	movff	?_acos+3,_peakToRMS$5946+3
 54147                           
 54148                           ;main.c: 135: RMS = RMS / (4.0 * acos(-1.0));
 54149  0184D8  C0C5  F013         	movff	peakToRMS@RMS,i2___fldiv@b
 54150  0184DC  C0C6  F014         	movff	peakToRMS@RMS+1,i2___fldiv@b+1
 54151  0184E0  C0C7  F015         	movff	peakToRMS@RMS+2,i2___fldiv@b+2
 54152  0184E4  C0C8  F016         	movff	peakToRMS@RMS+3,i2___fldiv@b+3
 54153  0184E8  0E00               	movlw	0
 54154  0184EA  6E34               	movwf	i2___flmul@a,c
 54155  0184EC  0E00               	movlw	0
 54156  0184EE  6E35               	movwf	i2___flmul@a+1,c
 54157  0184F0  0E80               	movlw	128
 54158  0184F2  6E36               	movwf	i2___flmul@a+2,c
 54159  0184F4  0E40               	movlw	64
 54160  0184F6  6E37               	movwf	i2___flmul@a+3,c
 54161  0184F8  C0C1  F030         	movff	_peakToRMS$5946,i2___flmul@b
 54162  0184FC  C0C2  F031         	movff	_peakToRMS$5946+1,i2___flmul@b+1
 54163  018500  C0C3  F032         	movff	_peakToRMS$5946+2,i2___flmul@b+2
 54164  018504  C0C4  F033         	movff	_peakToRMS$5946+3,i2___flmul@b+3
 54165  018508  EC05  F0AE         	call	i2___flmul	;wreg free
 54166  01850C  C030  F017         	movff	?i2___flmul,i2___fldiv@a
 54167  018510  C031  F018         	movff	?i2___flmul+1,i2___fldiv@a+1
 54168  018514  C032  F019         	movff	?i2___flmul+2,i2___fldiv@a+2
 54169  018518  C033  F01A         	movff	?i2___flmul+3,i2___fldiv@a+3
 54170  01851C  EC0E  F0BA         	call	i2___fldiv	;wreg free
 54171  018520  C013  F0C5         	movff	?i2___fldiv,peakToRMS@RMS
 54172  018524  C014  F0C6         	movff	?i2___fldiv+1,peakToRMS@RMS+1
 54173  018528  C015  F0C7         	movff	?i2___fldiv+2,peakToRMS@RMS+2
 54174  01852C  C016  F0C8         	movff	?i2___fldiv+3,peakToRMS@RMS+3
 54175                           
 54176                           ;main.c: 136: RMS = sqrt(RMS);
 54177  018530  C0C5  F06C         	movff	peakToRMS@RMS,sqrt@a
 54178  018534  C0C6  F06D         	movff	peakToRMS@RMS+1,sqrt@a+1
 54179  018538  C0C7  F06E         	movff	peakToRMS@RMS+2,sqrt@a+2
 54180  01853C  C0C8  F06F         	movff	peakToRMS@RMS+3,sqrt@a+3
 54181  018540  EC4F  F0B7         	call	_sqrt	;wreg free
 54182  018544  C06C  F0C5         	movff	?_sqrt,peakToRMS@RMS
 54183  018548  C06D  F0C6         	movff	?_sqrt+1,peakToRMS@RMS+1
 54184  01854C  C06E  F0C7         	movff	?_sqrt+2,peakToRMS@RMS+2
 54185  018550  C06F  F0C8         	movff	?_sqrt+3,peakToRMS@RMS+3
 54186                           
 54187                           ;main.c: 137: RMS = Peak * RMS;
 54188  018554  C0B1  F030         	movff	peakToRMS@Peak,i2___flmul@b
 54189  018558  C0B2  F031         	movff	peakToRMS@Peak+1,i2___flmul@b+1
 54190  01855C  C0B3  F032         	movff	peakToRMS@Peak+2,i2___flmul@b+2
 54191  018560  C0B4  F033         	movff	peakToRMS@Peak+3,i2___flmul@b+3
 54192  018564  C0C5  F034         	movff	peakToRMS@RMS,i2___flmul@a
 54193  018568  C0C6  F035         	movff	peakToRMS@RMS+1,i2___flmul@a+1
 54194  01856C  C0C7  F036         	movff	peakToRMS@RMS+2,i2___flmul@a+2
 54195  018570  C0C8  F037         	movff	peakToRMS@RMS+3,i2___flmul@a+3
 54196  018574  EC05  F0AE         	call	i2___flmul	;wreg free
 54197  018578  C030  F0C5         	movff	?i2___flmul,peakToRMS@RMS
 54198  01857C  C031  F0C6         	movff	?i2___flmul+1,peakToRMS@RMS+1
 54199  018580  C032  F0C7         	movff	?i2___flmul+2,peakToRMS@RMS+2
 54200  018584  C033  F0C8         	movff	?i2___flmul+3,peakToRMS@RMS+3
 54201                           
 54202                           ;main.c: 138: return RMS;
 54203  018588  C0C5  F0B1         	movff	peakToRMS@RMS,?_peakToRMS
 54204  01858C  C0C6  F0B2         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 54205  018590  C0C7  F0B3         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 54206  018594  C0C8  F0B4         	movff	peakToRMS@RMS+3,?_peakToRMS+3
 54207  018598  0012               	return	
 54208  01859A                     __end_of_peakToRMS:
 54209                           	opt stack 0
 54210                           tosu	equ	0xFFF
 54211                           tosh	equ	0xFFE
 54212                           tosl	equ	0xFFD
 54213                           pclatu	equ	0xFFB
 54214                           pclath	equ	0xFFA
 54215                           tblptru	equ	0xFF8
 54216                           tblptrh	equ	0xFF7
 54217                           tblptrl	equ	0xFF6
 54218                           tablat	equ	0xFF5
 54219                           prodh	equ	0xFF4
 54220                           prodl	equ	0xFF3
 54221                           intcon	equ	0xFF2
 54222                           indf0	equ	0xFEF
 54223                           postinc0	equ	0xFEE
 54224                           fsr0h	equ	0xFEA
 54225                           fsr0l	equ	0xFE9
 54226                           wreg	equ	0xFE8
 54227                           indf1	equ	0xFE7
 54228                           postdec1	equ	0xFE5
 54229                           plusw1	equ	0xFE3
 54230                           fsr1h	equ	0xFE2
 54231                           fsr1l	equ	0xFE1
 54232                           bsr	equ	0xFE0
 54233                           indf2	equ	0xFDF
 54234                           postinc2	equ	0xFDE
 54235                           postdec2	equ	0xFDD
 54236                           plusw2	equ	0xFDB
 54237                           fsr2h	equ	0xFDA
 54238                           fsr2l	equ	0xFD9
 54239                           status	equ	0xFD8
 54240                           
 54241 ;; *************** function _acos *****************
 54242 ;; Defined at:
 54243 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 54244 ;; Parameters:    Size  Location     Type
 54245 ;;  x               4   73[BANK0 ] void 
 54246 ;; Auto vars:     Size  Location     Type
 54247 ;;		None
 54248 ;; Return value:  Size  Location     Type
 54249 ;;                  4   73[BANK0 ] void 
 54250 ;; Registers used:
 54251 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 54252 ;; Tracked objects:
 54253 ;;		On entry : 0/0
 54254 ;;		On exit  : 0/0
 54255 ;;		Unchanged: 0/0
 54256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54257 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54258 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54260 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54261 ;;Total ram usage:        8 bytes
 54262 ;; Hardware stack levels used:    1
 54263 ;; Hardware stack levels required when called:    4
 54264 ;; This function calls:
 54265 ;;		_asin
 54266 ;;		i2___fladd
 54267 ;;		i2___flneg
 54268 ;; This function is called by:
 54269 ;;		_peakToRMS
 54270 ;; This function uses a non-reentrant model
 54271 ;;
 54272                           
 54273                           	psect	text178
 54274  01A89A                     __ptext178:
 54275                           	opt stack 0
 54276  01A89A                     _acos:
 54277                           	opt stack 3
 54278                           
 54279                           ;incstack = 0
 54280  01A89A  C0A9  F091         	movff	acos@x,asin@x
 54281  01A89E  C0AA  F092         	movff	acos@x+1,asin@x+1
 54282  01A8A2  C0AB  F093         	movff	acos@x+2,asin@x+2
 54283  01A8A6  C0AC  F094         	movff	acos@x+3,asin@x+3
 54284  01A8AA  ECEB  F0B2         	call	_asin	;wreg free
 54285  01A8AE  C091  F0AD         	movff	?_asin,_acos$5954
 54286  01A8B2  C092  F0AE         	movff	?_asin+1,_acos$5954+1
 54287  01A8B6  C093  F0AF         	movff	?_asin+2,_acos$5954+2
 54288  01A8BA  C094  F0B0         	movff	?_asin+3,_acos$5954+3
 54289  01A8BE  C0AD  F02C         	movff	_acos$5954,i2___flneg@f1
 54290  01A8C2  C0AE  F02D         	movff	_acos$5954+1,i2___flneg@f1+1
 54291  01A8C6  C0AF  F02E         	movff	_acos$5954+2,i2___flneg@f1+2
 54292  01A8CA  C0B0  F02F         	movff	_acos$5954+3,i2___flneg@f1+3
 54293  01A8CE  EC15  F0DD         	call	i2___flneg	;wreg free
 54294  01A8D2  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 54295  01A8D6  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 54296  01A8DA  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 54297  01A8DE  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 54298  01A8E2  0EDB               	movlw	219
 54299  01A8E4  6E5A               	movwf	i2___fladd@a,c
 54300  01A8E6  0E0F               	movlw	15
 54301  01A8E8  6E5B               	movwf	i2___fladd@a+1,c
 54302  01A8EA  0EC9               	movlw	201
 54303  01A8EC  6E5C               	movwf	i2___fladd@a+2,c
 54304  01A8EE  0E3F               	movlw	63
 54305  01A8F0  6E5D               	movwf	i2___fladd@a+3,c
 54306  01A8F2  EC4C  F0B1         	call	i2___fladd	;wreg free
 54307  01A8F6  C056  F0A9         	movff	?i2___fladd,?_acos
 54308  01A8FA  C057  F0AA         	movff	?i2___fladd+1,?_acos+1
 54309  01A8FE  C058  F0AB         	movff	?i2___fladd+2,?_acos+2
 54310  01A902  C059  F0AC         	movff	?i2___fladd+3,?_acos+3
 54311  01A906  0012               	return	
 54312  01A908                     __end_of_acos:
 54313                           	opt stack 0
 54314                           tosu	equ	0xFFF
 54315                           tosh	equ	0xFFE
 54316                           tosl	equ	0xFFD
 54317                           pclatu	equ	0xFFB
 54318                           pclath	equ	0xFFA
 54319                           tblptru	equ	0xFF8
 54320                           tblptrh	equ	0xFF7
 54321                           tblptrl	equ	0xFF6
 54322                           tablat	equ	0xFF5
 54323                           prodh	equ	0xFF4
 54324                           prodl	equ	0xFF3
 54325                           intcon	equ	0xFF2
 54326                           indf0	equ	0xFEF
 54327                           postinc0	equ	0xFEE
 54328                           fsr0h	equ	0xFEA
 54329                           fsr0l	equ	0xFE9
 54330                           wreg	equ	0xFE8
 54331                           indf1	equ	0xFE7
 54332                           postdec1	equ	0xFE5
 54333                           plusw1	equ	0xFE3
 54334                           fsr1h	equ	0xFE2
 54335                           fsr1l	equ	0xFE1
 54336                           bsr	equ	0xFE0
 54337                           indf2	equ	0xFDF
 54338                           postinc2	equ	0xFDE
 54339                           postdec2	equ	0xFDD
 54340                           plusw2	equ	0xFDB
 54341                           fsr2h	equ	0xFDA
 54342                           fsr2l	equ	0xFD9
 54343                           status	equ	0xFD8
 54344                           
 54345 ;; *************** function _asin *****************
 54346 ;; Defined at:
 54347 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 54348 ;; Parameters:    Size  Location     Type
 54349 ;;  x               4   49[BANK0 ] void 
 54350 ;; Auto vars:     Size  Location     Type
 54351 ;;  y               4   65[BANK0 ] void 
 54352 ;;  sgn             4   53[BANK0 ] void 
 54353 ;; Return value:  Size  Location     Type
 54354 ;;                  4   49[BANK0 ] void 
 54355 ;; Registers used:
 54356 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 54357 ;; Tracked objects:
 54358 ;;		On entry : 0/0
 54359 ;;		On exit  : 0/0
 54360 ;;		Unchanged: 0/0
 54361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54362 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54363 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54365 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54366 ;;Total ram usage:       24 bytes
 54367 ;; Hardware stack levels used:    1
 54368 ;; Hardware stack levels required when called:    3
 54369 ;; This function calls:
 54370 ;;		_atan
 54371 ;;		_fabs
 54372 ;;		_sqrt
 54373 ;;		i2___fladd
 54374 ;;		i2___fldiv
 54375 ;;		i2___flge
 54376 ;;		i2___flmul
 54377 ;;		i2___flneg
 54378 ;; This function is called by:
 54379 ;;		_acos
 54380 ;; This function uses a non-reentrant model
 54381 ;;
 54382                           
 54383                           	psect	text179
 54384  0165D6                     __ptext179:
 54385                           	opt stack 0
 54386  0165D6                     _asin:
 54387                           	opt stack 3
 54388                           
 54389                           ;incstack = 0
 54390  0165D6  0E00               	movlw	0
 54391  0165D8  6E34               	movwf	i2___flge@ff1,c
 54392  0165DA  0E00               	movlw	0
 54393  0165DC  6E35               	movwf	i2___flge@ff1+1,c
 54394  0165DE  0E80               	movlw	128
 54395  0165E0  6E36               	movwf	i2___flge@ff1+2,c
 54396  0165E2  0E3F               	movlw	63
 54397  0165E4  6E37               	movwf	i2___flge@ff1+3,c
 54398  0165E6  C091  F030         	movff	asin@x,fabs@d
 54399  0165EA  C092  F031         	movff	asin@x+1,fabs@d+1
 54400  0165EE  C093  F032         	movff	asin@x+2,fabs@d+2
 54401  0165F2  C094  F033         	movff	asin@x+3,fabs@d+3
 54402  0165F6  EC75  F0DB         	call	_fabs	;wreg free
 54403  0165FA  C030  F038         	movff	?_fabs,i2___flge@ff2
 54404  0165FE  C031  F039         	movff	?_fabs+1,i2___flge@ff2+1
 54405  016602  C032  F03A         	movff	?_fabs+2,i2___flge@ff2+2
 54406  016606  C033  F03B         	movff	?_fabs+3,i2___flge@ff2+3
 54407  01660A  EC5F  F0C9         	call	i2___flge	;wreg free
 54408  01660E  B0D8               	btfsc	status,0,c
 54409  016610  D00F               	goto	i2l2423
 54410  016612  0E00               	movlw	0
 54411  016614  0102               	movlb	2	; () banked
 54412  016616  6FDE               	movwf	(_errno+1)& (0+255),b
 54413  016618  0E21               	movlw	33
 54414  01661A  6FDD               	movwf	_errno& (0+255),b
 54415  01661C  0E00               	movlw	0
 54416  01661E  0100               	movlb	0	; () banked
 54417  016620  6F91               	movwf	?_asin& (0+255),b
 54418  016622  0E00               	movlw	0
 54419  016624  6F92               	movwf	(?_asin+1)& (0+255),b
 54420  016626  0E00               	movlw	0
 54421  016628  6F93               	movwf	(?_asin+2)& (0+255),b
 54422  01662A  0E00               	movlw	0
 54423  01662C  6F94               	movwf	(?_asin+3)& (0+255),b
 54424                           
 54425                           ; BSR set to: 0
 54426  01662E  0012               	return	
 54427  016630                     i2l2423:
 54428                           
 54429                           ; BSR set to: 0
 54430  016630  0E00               	movlw	0
 54431  016632  0100               	movlb	0	; () banked
 54432  016634  6F95               	movwf	asin@sgn& (0+255),b
 54433  016636  0E00               	movlw	0
 54434  016638  6F96               	movwf	(asin@sgn+1)& (0+255),b
 54435  01663A  0E80               	movlw	128
 54436  01663C  6F97               	movwf	(asin@sgn+2)& (0+255),b
 54437  01663E  0E3F               	movlw	63
 54438  016640  6F98               	movwf	(asin@sgn+3)& (0+255),b
 54439                           
 54440                           ; BSR set to: 0
 54441  016642  C091  F034         	movff	asin@x,i2___flmul@a
 54442  016646  C092  F035         	movff	asin@x+1,i2___flmul@a+1
 54443  01664A  C093  F036         	movff	asin@x+2,i2___flmul@a+2
 54444  01664E  C094  F037         	movff	asin@x+3,i2___flmul@a+3
 54445  016652  C091  F030         	movff	asin@x,i2___flmul@b
 54446  016656  C092  F031         	movff	asin@x+1,i2___flmul@b+1
 54447  01665A  C093  F032         	movff	asin@x+2,i2___flmul@b+2
 54448  01665E  C094  F033         	movff	asin@x+3,i2___flmul@b+3
 54449  016662  EC05  F0AE         	call	i2___flmul	;wreg free
 54450  016666  C030  F02C         	movff	?i2___flmul,i2___flneg@f1
 54451  01666A  C031  F02D         	movff	?i2___flmul+1,i2___flneg@f1+1
 54452  01666E  C032  F02E         	movff	?i2___flmul+2,i2___flneg@f1+2
 54453  016672  C033  F02F         	movff	?i2___flmul+3,i2___flneg@f1+3
 54454  016676  EC15  F0DD         	call	i2___flneg	;wreg free
 54455  01667A  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 54456  01667E  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 54457  016682  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 54458  016686  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 54459  01668A  0E00               	movlw	0
 54460  01668C  6E5A               	movwf	i2___fladd@a,c
 54461  01668E  0E00               	movlw	0
 54462  016690  6E5B               	movwf	i2___fladd@a+1,c
 54463  016692  0E80               	movlw	128
 54464  016694  6E5C               	movwf	i2___fladd@a+2,c
 54465  016696  0E3F               	movlw	63
 54466  016698  6E5D               	movwf	i2___fladd@a+3,c
 54467  01669A  EC4C  F0B1         	call	i2___fladd	;wreg free
 54468  01669E  C056  F06C         	movff	?i2___fladd,sqrt@a
 54469  0166A2  C057  F06D         	movff	?i2___fladd+1,sqrt@a+1
 54470  0166A6  C058  F06E         	movff	?i2___fladd+2,sqrt@a+2
 54471  0166AA  C059  F06F         	movff	?i2___fladd+3,sqrt@a+3
 54472  0166AE  EC4F  F0B7         	call	_sqrt	;wreg free
 54473  0166B2  C06C  F0A1         	movff	?_sqrt,asin@y
 54474  0166B6  C06D  F0A2         	movff	?_sqrt+1,asin@y+1
 54475  0166BA  C06E  F0A3         	movff	?_sqrt+2,asin@y+2
 54476  0166BE  C06F  F0A4         	movff	?_sqrt+3,asin@y+3
 54477  0166C2  C091  F030         	movff	asin@x,fabs@d
 54478  0166C6  C092  F031         	movff	asin@x+1,fabs@d+1
 54479  0166CA  C093  F032         	movff	asin@x+2,fabs@d+2
 54480  0166CE  C094  F033         	movff	asin@x+3,fabs@d+3
 54481  0166D2  EC75  F0DB         	call	_fabs	;wreg free
 54482  0166D6  C030  F034         	movff	?_fabs,i2___flge@ff1
 54483  0166DA  C031  F035         	movff	?_fabs+1,i2___flge@ff1+1
 54484  0166DE  C032  F036         	movff	?_fabs+2,i2___flge@ff1+2
 54485  0166E2  C033  F037         	movff	?_fabs+3,i2___flge@ff1+3
 54486  0166E6  0E8F               	movlw	143
 54487  0166E8  6E38               	movwf	i2___flge@ff2,c
 54488  0166EA  0EC2               	movlw	194
 54489  0166EC  6E39               	movwf	i2___flge@ff2+1,c
 54490  0166EE  0E35               	movlw	53
 54491  0166F0  6E3A               	movwf	i2___flge@ff2+2,c
 54492  0166F2  0E3F               	movlw	63
 54493  0166F4  6E3B               	movwf	i2___flge@ff2+3,c
 54494  0166F6  EC5F  F0C9         	call	i2___flge	;wreg free
 54495  0166FA  B0D8               	btfsc	status,0,c
 54496  0166FC  D02D               	goto	i2l2425
 54497  0166FE  C091  F013         	movff	asin@x,i2___fldiv@b
 54498  016702  C092  F014         	movff	asin@x+1,i2___fldiv@b+1
 54499  016706  C093  F015         	movff	asin@x+2,i2___fldiv@b+2
 54500  01670A  C094  F016         	movff	asin@x+3,i2___fldiv@b+3
 54501  01670E  C0A1  F017         	movff	asin@y,i2___fldiv@a
 54502  016712  C0A2  F018         	movff	asin@y+1,i2___fldiv@a+1
 54503  016716  C0A3  F019         	movff	asin@y+2,i2___fldiv@a+2
 54504  01671A  C0A4  F01A         	movff	asin@y+3,i2___fldiv@a+3
 54505  01671E  EC0E  F0BA         	call	i2___fldiv	;wreg free
 54506  016722  C013  F0A5         	movff	?i2___fldiv,_asin$5955
 54507  016726  C014  F0A6         	movff	?i2___fldiv+1,_asin$5955+1
 54508  01672A  C015  F0A7         	movff	?i2___fldiv+2,_asin$5955+2
 54509  01672E  C016  F0A8         	movff	?i2___fldiv+3,_asin$5955+3
 54510  016732  C0A5  F07C         	movff	_asin$5955,atan@f
 54511  016736  C0A6  F07D         	movff	_asin$5955+1,atan@f+1
 54512  01673A  C0A7  F07E         	movff	_asin$5955+2,atan@f+2
 54513  01673E  C0A8  F07F         	movff	_asin$5955+3,atan@f+3
 54514  016742  ECCD  F0C2         	call	_atan	;wreg free
 54515  016746  C07C  F091         	movff	?_atan,?_asin
 54516  01674A  C07D  F092         	movff	?_atan+1,?_asin+1
 54517  01674E  C07E  F093         	movff	?_atan+2,?_asin+2
 54518  016752  C07F  F094         	movff	?_atan+3,?_asin+3
 54519  016756  0012               	return	
 54520  016758                     i2l2425:
 54521  016758  0100               	movlb	0	; () banked
 54522  01675A  AF94               	btfss	(asin@x+3)& (0+255),7,b
 54523  01675C  D06D               	goto	i2l2426
 54524                           
 54525                           ; BSR set to: 0
 54526  01675E  C091  F017         	movff	asin@x,i2___fldiv@a
 54527  016762  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 54528  016766  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 54529  01676A  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 54530  01676E  C0A1  F02C         	movff	asin@y,i2___flneg@f1
 54531  016772  C0A2  F02D         	movff	asin@y+1,i2___flneg@f1+1
 54532  016776  C0A3  F02E         	movff	asin@y+2,i2___flneg@f1+2
 54533  01677A  C0A4  F02F         	movff	asin@y+3,i2___flneg@f1+3
 54534  01677E  EC15  F0DD         	call	i2___flneg	;wreg free
 54535  016782  C02C  F013         	movff	?i2___flneg,i2___fldiv@b
 54536  016786  C02D  F014         	movff	?i2___flneg+1,i2___fldiv@b+1
 54537  01678A  C02E  F015         	movff	?i2___flneg+2,i2___fldiv@b+2
 54538  01678E  C02F  F016         	movff	?i2___flneg+3,i2___fldiv@b+3
 54539  016792  EC0E  F0BA         	call	i2___fldiv	;wreg free
 54540  016796  C013  F0A5         	movff	?i2___fldiv,_asin$5955
 54541  01679A  C014  F0A6         	movff	?i2___fldiv+1,_asin$5955+1
 54542  01679E  C015  F0A7         	movff	?i2___fldiv+2,_asin$5955+2
 54543  0167A2  C016  F0A8         	movff	?i2___fldiv+3,_asin$5955+3
 54544  0167A6  C0A5  F07C         	movff	_asin$5955,atan@f
 54545  0167AA  C0A6  F07D         	movff	_asin$5955+1,atan@f+1
 54546  0167AE  C0A7  F07E         	movff	_asin$5955+2,atan@f+2
 54547  0167B2  C0A8  F07F         	movff	_asin$5955+3,atan@f+3
 54548  0167B6  ECCD  F0C2         	call	_atan	;wreg free
 54549  0167BA  C07C  F09D         	movff	?_atan,_asin$5956
 54550  0167BE  C07D  F09E         	movff	?_atan+1,_asin$5956+1
 54551  0167C2  C07E  F09F         	movff	?_atan+2,_asin$5956+2
 54552  0167C6  C07F  F0A0         	movff	?_atan+3,_asin$5956+3
 54553  0167CA  0EDB               	movlw	219
 54554  0167CC  6E5A               	movwf	i2___fladd@a,c
 54555  0167CE  0E0F               	movlw	15
 54556  0167D0  6E5B               	movwf	i2___fladd@a+1,c
 54557  0167D2  0EC9               	movlw	201
 54558  0167D4  6E5C               	movwf	i2___fladd@a+2,c
 54559  0167D6  0E3F               	movlw	63
 54560  0167D8  6E5D               	movwf	i2___fladd@a+3,c
 54561  0167DA  C09D  F02C         	movff	_asin$5956,i2___flneg@f1
 54562  0167DE  C09E  F02D         	movff	_asin$5956+1,i2___flneg@f1+1
 54563  0167E2  C09F  F02E         	movff	_asin$5956+2,i2___flneg@f1+2
 54564  0167E6  C0A0  F02F         	movff	_asin$5956+3,i2___flneg@f1+3
 54565  0167EA  EC15  F0DD         	call	i2___flneg	;wreg free
 54566  0167EE  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 54567  0167F2  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 54568  0167F6  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 54569  0167FA  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 54570  0167FE  EC4C  F0B1         	call	i2___fladd	;wreg free
 54571  016802  C056  F099         	movff	?i2___fladd,_asin$5957
 54572  016806  C057  F09A         	movff	?i2___fladd+1,_asin$5957+1
 54573  01680A  C058  F09B         	movff	?i2___fladd+2,_asin$5957+2
 54574  01680E  C059  F09C         	movff	?i2___fladd+3,_asin$5957+3
 54575  016812  C099  F02C         	movff	_asin$5957,i2___flneg@f1
 54576  016816  C09A  F02D         	movff	_asin$5957+1,i2___flneg@f1+1
 54577  01681A  C09B  F02E         	movff	_asin$5957+2,i2___flneg@f1+2
 54578  01681E  C09C  F02F         	movff	_asin$5957+3,i2___flneg@f1+3
 54579  016822  EC15  F0DD         	call	i2___flneg	;wreg free
 54580  016826  C02C  F091         	movff	?i2___flneg,?_asin
 54581  01682A  C02D  F092         	movff	?i2___flneg+1,?_asin+1
 54582  01682E  C02E  F093         	movff	?i2___flneg+2,?_asin+2
 54583  016832  C02F  F094         	movff	?i2___flneg+3,?_asin+3
 54584  016836  0012               	return	
 54585  016838                     i2l2426:
 54586  016838  C091  F017         	movff	asin@x,i2___fldiv@a
 54587  01683C  C092  F018         	movff	asin@x+1,i2___fldiv@a+1
 54588  016840  C093  F019         	movff	asin@x+2,i2___fldiv@a+2
 54589  016844  C094  F01A         	movff	asin@x+3,i2___fldiv@a+3
 54590  016848  C0A1  F013         	movff	asin@y,i2___fldiv@b
 54591  01684C  C0A2  F014         	movff	asin@y+1,i2___fldiv@b+1
 54592  016850  C0A3  F015         	movff	asin@y+2,i2___fldiv@b+2
 54593  016854  C0A4  F016         	movff	asin@y+3,i2___fldiv@b+3
 54594  016858  EC0E  F0BA         	call	i2___fldiv	;wreg free
 54595  01685C  C013  F0A5         	movff	?i2___fldiv,_asin$5955
 54596  016860  C014  F0A6         	movff	?i2___fldiv+1,_asin$5955+1
 54597  016864  C015  F0A7         	movff	?i2___fldiv+2,_asin$5955+2
 54598  016868  C016  F0A8         	movff	?i2___fldiv+3,_asin$5955+3
 54599  01686C  C0A5  F07C         	movff	_asin$5955,atan@f
 54600  016870  C0A6  F07D         	movff	_asin$5955+1,atan@f+1
 54601  016874  C0A7  F07E         	movff	_asin$5955+2,atan@f+2
 54602  016878  C0A8  F07F         	movff	_asin$5955+3,atan@f+3
 54603  01687C  ECCD  F0C2         	call	_atan	;wreg free
 54604  016880  C07C  F09D         	movff	?_atan,_asin$5956
 54605  016884  C07D  F09E         	movff	?_atan+1,_asin$5956+1
 54606  016888  C07E  F09F         	movff	?_atan+2,_asin$5956+2
 54607  01688C  C07F  F0A0         	movff	?_atan+3,_asin$5956+3
 54608  016890  C09D  F02C         	movff	_asin$5956,i2___flneg@f1
 54609  016894  C09E  F02D         	movff	_asin$5956+1,i2___flneg@f1+1
 54610  016898  C09F  F02E         	movff	_asin$5956+2,i2___flneg@f1+2
 54611  01689C  C0A0  F02F         	movff	_asin$5956+3,i2___flneg@f1+3
 54612  0168A0  EC15  F0DD         	call	i2___flneg	;wreg free
 54613  0168A4  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 54614  0168A8  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 54615  0168AC  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 54616  0168B0  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 54617  0168B4  0EDB               	movlw	219
 54618  0168B6  6E5A               	movwf	i2___fladd@a,c
 54619  0168B8  0E0F               	movlw	15
 54620  0168BA  6E5B               	movwf	i2___fladd@a+1,c
 54621  0168BC  0EC9               	movlw	201
 54622  0168BE  6E5C               	movwf	i2___fladd@a+2,c
 54623  0168C0  0E3F               	movlw	63
 54624  0168C2  6E5D               	movwf	i2___fladd@a+3,c
 54625  0168C4  EC4C  F0B1         	call	i2___fladd	;wreg free
 54626  0168C8  C056  F091         	movff	?i2___fladd,?_asin
 54627  0168CC  C057  F092         	movff	?i2___fladd+1,?_asin+1
 54628  0168D0  C058  F093         	movff	?i2___fladd+2,?_asin+2
 54629  0168D4  C059  F094         	movff	?i2___fladd+3,?_asin+3
 54630  0168D8  0012               	return	
 54631  0168DA                     __end_of_asin:
 54632                           	opt stack 0
 54633                           tosu	equ	0xFFF
 54634                           tosh	equ	0xFFE
 54635                           tosl	equ	0xFFD
 54636                           pclatu	equ	0xFFB
 54637                           pclath	equ	0xFFA
 54638                           tblptru	equ	0xFF8
 54639                           tblptrh	equ	0xFF7
 54640                           tblptrl	equ	0xFF6
 54641                           tablat	equ	0xFF5
 54642                           prodh	equ	0xFF4
 54643                           prodl	equ	0xFF3
 54644                           intcon	equ	0xFF2
 54645                           indf0	equ	0xFEF
 54646                           postinc0	equ	0xFEE
 54647                           fsr0h	equ	0xFEA
 54648                           fsr0l	equ	0xFE9
 54649                           wreg	equ	0xFE8
 54650                           indf1	equ	0xFE7
 54651                           postdec1	equ	0xFE5
 54652                           plusw1	equ	0xFE3
 54653                           fsr1h	equ	0xFE2
 54654                           fsr1l	equ	0xFE1
 54655                           bsr	equ	0xFE0
 54656                           indf2	equ	0xFDF
 54657                           postinc2	equ	0xFDE
 54658                           postdec2	equ	0xFDD
 54659                           plusw2	equ	0xFDB
 54660                           fsr2h	equ	0xFDA
 54661                           fsr2l	equ	0xFD9
 54662                           status	equ	0xFD8
 54663                           
 54664 ;; *************** function _sqrt *****************
 54665 ;; Defined at:
 54666 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 54667 ;; Parameters:    Size  Location     Type
 54668 ;;  a               4   12[BANK0 ] void 
 54669 ;; Auto vars:     Size  Location     Type
 54670 ;;  frac            4   37[BANK0 ] unsigned long 
 54671 ;;  root            4   33[BANK0 ] struct .
 54672 ;;  grs             4   27[BANK0 ] unsigned long 
 54673 ;;  tfrac           4   22[BANK0 ] unsigned long 
 54674 ;;  exp             2   31[BANK0 ] int 
 54675 ;;  p               1   26[BANK0 ] unsigned char 
 54676 ;;  i               1   21[BANK0 ] unsigned char 
 54677 ;;  sign            1   20[BANK0 ] unsigned char 
 54678 ;; Return value:  Size  Location     Type
 54679 ;;                  4   12[BANK0 ] unsigned char 
 54680 ;; Registers used:
 54681 ;;		wreg, status,2, status,0
 54682 ;; Tracked objects:
 54683 ;;		On entry : 0/0
 54684 ;;		On exit  : 0/0
 54685 ;;		Unchanged: 0/0
 54686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 54687 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54688 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54689 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54690 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54691 ;;Total ram usage:       29 bytes
 54692 ;; Hardware stack levels used:    1
 54693 ;; This function calls:
 54694 ;;		Nothing
 54695 ;; This function is called by:
 54696 ;;		_peakToRMS
 54697 ;;		_asin
 54698 ;; This function uses a non-reentrant model
 54699 ;;
 54700                           
 54701                           	psect	text180
 54702  016E9E                     __ptext180:
 54703                           	opt stack 0
 54704  016E9E                     _sqrt:
 54705                           	opt stack 7
 54706                           
 54707                           ;incstack = 0
 54708  016E9E  0100               	movlb	0	; () banked
 54709  016EA0  516F               	movf	(sqrt@a+3)& (0+255),w,b
 54710  016EA2  0B80               	andlw	128
 54711  016EA4  6F74               	movwf	sqrt@sign& (0+255),b
 54712  016EA6  516F               	movf	(sqrt@a+3)& (0+255),w,b
 54713  016EA8  256F               	addwf	(sqrt@a+3)& (0+255),w,b
 54714  016EAA  6F7A               	movwf	sqrt@p& (0+255),b
 54715                           
 54716                           ; BSR set to: 0
 54717  016EAC  BF6E               	btfsc	(sqrt@a+2)& (0+255),7,b
 54718                           
 54719                           ; BSR set to: 0
 54720  016EAE  817A               	bsf	sqrt@p& (0+255),0,b
 54721                           
 54722                           ; BSR set to: 0
 54723                           
 54724                           ; BSR set to: 0
 54725  016EB0  C07A  F07F         	movff	sqrt@p,sqrt@exp
 54726  016EB4  6B80               	clrf	(sqrt@exp+1)& (0+255),b
 54727                           
 54728                           ; BSR set to: 0
 54729  016EB6  0EFF               	movlw	255
 54730  016EB8  156C               	andwf	sqrt@a& (0+255),w,b
 54731  016EBA  6F85               	movwf	sqrt@frac& (0+255),b
 54732  016EBC  0EFF               	movlw	255
 54733  016EBE  156D               	andwf	(sqrt@a+1)& (0+255),w,b
 54734  016EC0  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 54735  016EC2  0E7F               	movlw	127
 54736  016EC4  156E               	andwf	(sqrt@a+2)& (0+255),w,b
 54737  016EC6  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 54738  016EC8  0E00               	movlw	0
 54739  016ECA  156F               	andwf	(sqrt@a+3)& (0+255),w,b
 54740  016ECC  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 54741                           
 54742                           ; BSR set to: 0
 54743  016ECE  517F               	movf	sqrt@exp& (0+255),w,b
 54744  016ED0  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 54745  016ED2  B4D8               	btfsc	status,2,c
 54746  016ED4  D005               	goto	i2l2993
 54747                           
 54748                           ; BSR set to: 0
 54749  016ED6  8F87               	bsf	(sqrt@frac+2)& (0+255),7,b
 54750                           
 54751                           ; BSR set to: 0
 54752  016ED8  297F               	incf	sqrt@exp& (0+255),w,b
 54753  016EDA  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 54754  016EDC  A4D8               	btfss	status,2,c
 54755  016EDE  D008               	goto	i2l2995
 54756  016EE0                     i2l2993:
 54757                           
 54758                           ; BSR set to: 0
 54759                           
 54760                           ; BSR set to: 0
 54761  016EE0  0E00               	movlw	0
 54762  016EE2  6F85               	movwf	sqrt@frac& (0+255),b
 54763  016EE4  0E00               	movlw	0
 54764  016EE6  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 54765  016EE8  0E00               	movlw	0
 54766  016EEA  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 54767  016EEC  0E00               	movlw	0
 54768  016EEE  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 54769  016EF0                     i2l2995:
 54770                           
 54771                           ; BSR set to: 0
 54772                           
 54773                           ; BSR set to: 0
 54774  016EF0  517F               	movf	sqrt@exp& (0+255),w,b
 54775  016EF2  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 54776  016EF4  A4D8               	btfss	status,2,c
 54777  016EF6  D009               	goto	i2l2996
 54778                           
 54779                           ; BSR set to: 0
 54780  016EF8  0E00               	movlw	0
 54781  016EFA  6F6C               	movwf	?_sqrt& (0+255),b
 54782  016EFC  0E00               	movlw	0
 54783  016EFE  6F6D               	movwf	(?_sqrt+1)& (0+255),b
 54784  016F00  0E00               	movlw	0
 54785  016F02  6F6E               	movwf	(?_sqrt+2)& (0+255),b
 54786  016F04  0E00               	movlw	0
 54787  016F06  6F6F               	movwf	(?_sqrt+3)& (0+255),b
 54788                           
 54789                           ; BSR set to: 0
 54790  016F08  0012               	return	
 54791  016F0A                     i2l2996:
 54792                           
 54793                           ; BSR set to: 0
 54794                           
 54795                           ; BSR set to: 0
 54796  016F0A  5174               	movf	sqrt@sign& (0+255),w,b
 54797  016F0C  B4D8               	btfsc	status,2,c
 54798  016F0E  D01A               	goto	i2l2998
 54799                           
 54800                           ; BSR set to: 0
 54801  016F10  0E00               	movlw	0
 54802  016F12  6F81               	movwf	sqrt@root& (0+255),b
 54803  016F14  0E00               	movlw	0
 54804  016F16  6F82               	movwf	(sqrt@root+1)& (0+255),b
 54805  016F18  0E40               	movlw	64
 54806  016F1A  6F83               	movwf	(sqrt@root+2)& (0+255),b
 54807  016F1C  0E00               	movlw	0
 54808  016F1E  6F84               	movwf	(sqrt@root+3)& (0+255),b
 54809                           
 54810                           ; BSR set to: 0
 54811  016F20  0E80               	movlw	128
 54812  016F22  1383               	iorwf	(sqrt@root+2)& (0+255),f,b
 54813  016F24  0EFF               	movlw	255
 54814  016F26  1384               	iorwf	(sqrt@root+3)& (0+255),f,b
 54815                           
 54816                           ; BSR set to: 0
 54817  016F28  0E00               	movlw	0
 54818  016F2A  0102               	movlb	2	; () banked
 54819  016F2C  6FDE               	movwf	(_errno+1)& (0+255),b
 54820  016F2E  0E21               	movlw	33
 54821  016F30  6FDD               	movwf	_errno& (0+255),b
 54822                           
 54823                           ; BSR set to: 2
 54824  016F32  C081  F06C         	movff	sqrt@root,?_sqrt
 54825  016F36  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 54826  016F3A  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 54827  016F3E  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 54828                           
 54829                           ; BSR set to: 2
 54830  016F42  0012               	return	
 54831  016F44                     i2l2998:
 54832                           
 54833                           ; BSR set to: 2
 54834  016F44  0100               	movlb	0	; () banked
 54835  016F46  297F               	incf	sqrt@exp& (0+255),w,b
 54836  016F48  1180               	iorwf	(sqrt@exp+1)& (0+255),w,b
 54837  016F4A  A4D8               	btfss	status,2,c
 54838  016F4C  D011               	goto	i2l2999
 54839                           
 54840                           ; BSR set to: 0
 54841  016F4E  0E00               	movlw	0
 54842  016F50  6F81               	movwf	sqrt@root& (0+255),b
 54843  016F52  0E00               	movlw	0
 54844  016F54  6F82               	movwf	(sqrt@root+1)& (0+255),b
 54845  016F56  0E80               	movlw	128
 54846  016F58  6F83               	movwf	(sqrt@root+2)& (0+255),b
 54847  016F5A  0E7F               	movlw	127
 54848  016F5C  6F84               	movwf	(sqrt@root+3)& (0+255),b
 54849                           
 54850                           ; BSR set to: 0
 54851  016F5E  C081  F06C         	movff	sqrt@root,?_sqrt
 54852  016F62  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 54853  016F66  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 54854  016F6A  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 54855                           
 54856                           ; BSR set to: 0
 54857  016F6E  0012               	return	
 54858  016F70                     i2l2999:
 54859                           
 54860                           ; BSR set to: 0
 54861                           
 54862                           ; BSR set to: 0
 54863  016F70  0E81               	movlw	129
 54864  016F72  277F               	addwf	sqrt@exp& (0+255),f,b
 54865  016F74  0EFF               	movlw	255
 54866  016F76  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 54867  016F78  517F               	movf	sqrt@exp& (0+255),w,b
 54868  016F7A  0B01               	andlw	1
 54869  016F7C  6F7A               	movwf	sqrt@p& (0+255),b
 54870  016F7E  3580               	rlcf	(sqrt@exp+1)& (0+255),w,b
 54871  016F80  3380               	rrcf	(sqrt@exp+1)& (0+255),f,b
 54872  016F82  337F               	rrcf	sqrt@exp& (0+255),f,b
 54873  016F84  0E7F               	movlw	127
 54874  016F86  277F               	addwf	sqrt@exp& (0+255),f,b
 54875  016F88  0E00               	movlw	0
 54876  016F8A  2380               	addwfc	(sqrt@exp+1)& (0+255),f,b
 54877  016F8C  90D8               	bcf	status,0,c
 54878  016F8E  3585               	rlcf	sqrt@frac& (0+255),w,b
 54879  016F90  6F76               	movwf	sqrt@tfrac& (0+255),b
 54880  016F92  3586               	rlcf	(sqrt@frac+1)& (0+255),w,b
 54881  016F94  6F77               	movwf	(sqrt@tfrac+1)& (0+255),b
 54882  016F96  3587               	rlcf	(sqrt@frac+2)& (0+255),w,b
 54883  016F98  6F78               	movwf	(sqrt@tfrac+2)& (0+255),b
 54884  016F9A  3588               	rlcf	(sqrt@frac+3)& (0+255),w,b
 54885  016F9C  6F79               	movwf	(sqrt@tfrac+3)& (0+255),b
 54886                           
 54887                           ; BSR set to: 0
 54888  016F9E  0E00               	movlw	0
 54889  016FA0  6F85               	movwf	sqrt@frac& (0+255),b
 54890  016FA2  0E00               	movlw	0
 54891  016FA4  6F86               	movwf	(sqrt@frac+1)& (0+255),b
 54892  016FA6  0E00               	movlw	0
 54893  016FA8  6F87               	movwf	(sqrt@frac+2)& (0+255),b
 54894  016FAA  0E00               	movlw	0
 54895  016FAC  6F88               	movwf	(sqrt@frac+3)& (0+255),b
 54896                           
 54897                           ; BSR set to: 0
 54898  016FAE  0E00               	movlw	0
 54899  016FB0  6F7B               	movwf	sqrt@grs& (0+255),b
 54900  016FB2  0E00               	movlw	0
 54901  016FB4  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 54902  016FB6  0E00               	movlw	0
 54903  016FB8  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 54904  016FBA  0E01               	movlw	1
 54905  016FBC  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 54906                           
 54907                           ; BSR set to: 0
 54908  016FBE  517A               	movf	sqrt@p& (0+255),w,b
 54909  016FC0  B4D8               	btfsc	status,2,c
 54910  016FC2  D005               	goto	i2l3000
 54911                           
 54912                           ; BSR set to: 0
 54913  016FC4  90D8               	bcf	status,0,c
 54914  016FC6  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 54915  016FC8  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 54916  016FCA  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 54917  016FCC  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 54918  016FCE                     i2l3000:
 54919                           
 54920                           ; BSR set to: 0
 54921                           
 54922                           ; BSR set to: 0
 54923  016FCE  0E00               	movlw	0
 54924  016FD0  6F75               	movwf	sqrt@i& (0+255),b
 54925  016FD2  D052               	goto	i2l3001
 54926  016FD4                     
 54927                           ; BSR set to: 0
 54928                           
 54929                           ; BSR set to: 0
 54930  016FD4  517B               	movf	sqrt@grs& (0+255),w,b
 54931  016FD6  1385               	iorwf	sqrt@frac& (0+255),f,b
 54932  016FD8  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 54933  016FDA  1386               	iorwf	(sqrt@frac+1)& (0+255),f,b
 54934  016FDC  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 54935  016FDE  1387               	iorwf	(sqrt@frac+2)& (0+255),f,b
 54936  016FE0  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 54937  016FE2  1388               	iorwf	(sqrt@frac+3)& (0+255),f,b
 54938  016FE4  5185               	movf	sqrt@frac& (0+255),w,b
 54939  016FE6  5D76               	subwf	sqrt@tfrac& (0+255),w,b
 54940  016FE8  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 54941  016FEA  5977               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
 54942  016FEC  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 54943  016FEE  5978               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
 54944  016FF0  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 54945  016FF2  5979               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
 54946  016FF4  A0D8               	btfss	status,0,c
 54947  016FF6  D011               	goto	i2l3003
 54948                           
 54949                           ; BSR set to: 0
 54950  016FF8  5185               	movf	sqrt@frac& (0+255),w,b
 54951  016FFA  5F76               	subwf	sqrt@tfrac& (0+255),f,b
 54952  016FFC  5186               	movf	(sqrt@frac+1)& (0+255),w,b
 54953  016FFE  5B77               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
 54954  017000  5187               	movf	(sqrt@frac+2)& (0+255),w,b
 54955  017002  5B78               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
 54956  017004  5188               	movf	(sqrt@frac+3)& (0+255),w,b
 54957  017006  5B79               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
 54958  017008  517B               	movf	sqrt@grs& (0+255),w,b
 54959  01700A  2785               	addwf	sqrt@frac& (0+255),f,b
 54960  01700C  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 54961  01700E  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 54962  017010  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 54963  017012  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 54964  017014  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 54965  017016  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 54966  017018  D014               	goto	i2l3004
 54967  01701A                     i2l3003:
 54968                           
 54969                           ; BSR set to: 0
 54970                           
 54971                           ; BSR set to: 0
 54972  01701A  C07B  F070         	movff	sqrt@grs,??_sqrt
 54973  01701E  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 54974  017022  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 54975  017026  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 54976  01702A  1F70               	comf	??_sqrt& (0+255),f,b
 54977  01702C  1F71               	comf	(??_sqrt+1)& (0+255),f,b
 54978  01702E  1F72               	comf	(??_sqrt+2)& (0+255),f,b
 54979  017030  1F73               	comf	(??_sqrt+3)& (0+255),f,b
 54980  017032  5170               	movf	??_sqrt& (0+255),w,b
 54981  017034  1785               	andwf	sqrt@frac& (0+255),f,b
 54982  017036  5171               	movf	(??_sqrt+1)& (0+255),w,b
 54983  017038  1786               	andwf	(sqrt@frac+1)& (0+255),f,b
 54984  01703A  5172               	movf	(??_sqrt+2)& (0+255),w,b
 54985  01703C  1787               	andwf	(sqrt@frac+2)& (0+255),f,b
 54986  01703E  5173               	movf	(??_sqrt+3)& (0+255),w,b
 54987  017040  1788               	andwf	(sqrt@frac+3)& (0+255),f,b
 54988  017042                     i2l3004:
 54989                           
 54990                           ; BSR set to: 0
 54991                           
 54992                           ; BSR set to: 0
 54993  017042  C07B  F070         	movff	sqrt@grs,??_sqrt
 54994  017046  C07C  F071         	movff	sqrt@grs+1,??_sqrt+1
 54995  01704A  C07D  F072         	movff	sqrt@grs+2,??_sqrt+2
 54996  01704E  C07E  F073         	movff	sqrt@grs+3,??_sqrt+3
 54997  017052  90D8               	bcf	status,0,c
 54998  017054  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 54999  017056  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 55000  017058  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 55001  01705A  3370               	rrcf	??_sqrt& (0+255),f,b
 55002  01705C  C070  F07B         	movff	??_sqrt,sqrt@grs
 55003  017060  C071  F07C         	movff	??_sqrt+1,sqrt@grs+1
 55004  017064  C072  F07D         	movff	??_sqrt+2,sqrt@grs+2
 55005  017068  C073  F07E         	movff	??_sqrt+3,sqrt@grs+3
 55006                           
 55007                           ; BSR set to: 0
 55008  01706C  90D8               	bcf	status,0,c
 55009  01706E  3776               	rlcf	sqrt@tfrac& (0+255),f,b
 55010  017070  3777               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
 55011  017072  3778               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
 55012  017074  3779               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
 55013                           
 55014                           ; BSR set to: 0
 55015  017076  2B75               	incf	sqrt@i& (0+255),f,b
 55016  017078                     i2l3001:
 55017                           
 55018                           ; BSR set to: 0
 55019                           
 55020                           ; BSR set to: 0
 55021  017078  0E18               	movlw	24
 55022  01707A  6575               	cpfsgt	sqrt@i& (0+255),b
 55023  01707C  D7AB               	goto	i2l3002
 55024                           
 55025                           ; BSR set to: 0
 55026                           
 55027                           ; BSR set to: 0
 55028  01707E  C085  F070         	movff	sqrt@frac,??_sqrt
 55029  017082  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 55030  017086  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 55031  01708A  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 55032  01708E  90D8               	bcf	status,0,c
 55033  017090  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 55034  017092  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 55035  017094  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 55036  017096  3370               	rrcf	??_sqrt& (0+255),f,b
 55037  017098  C070  F085         	movff	??_sqrt,sqrt@frac
 55038  01709C  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 55039  0170A0  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 55040  0170A4  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 55041                           
 55042                           ; BSR set to: 0
 55043  0170A8  0E01               	movlw	1
 55044  0170AA  1585               	andwf	sqrt@frac& (0+255),w,b
 55045  0170AC  6F7B               	movwf	sqrt@grs& (0+255),b
 55046  0170AE  0E00               	movlw	0
 55047  0170B0  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 55048  0170B2  6F7C               	movwf	(sqrt@grs+1)& (0+255),b
 55049  0170B4  0E00               	movlw	0
 55050  0170B6  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 55051  0170B8  6F7D               	movwf	(sqrt@grs+2)& (0+255),b
 55052  0170BA  0E00               	movlw	0
 55053  0170BC  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 55054  0170BE  6F7E               	movwf	(sqrt@grs+3)& (0+255),b
 55055                           
 55056                           ; BSR set to: 0
 55057  0170C0  C085  F070         	movff	sqrt@frac,??_sqrt
 55058  0170C4  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 55059  0170C8  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 55060  0170CC  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 55061  0170D0  90D8               	bcf	status,0,c
 55062  0170D2  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 55063  0170D4  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 55064  0170D6  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 55065  0170D8  3370               	rrcf	??_sqrt& (0+255),f,b
 55066  0170DA  C070  F085         	movff	??_sqrt,sqrt@frac
 55067  0170DE  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 55068  0170E2  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 55069  0170E6  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 55070  0170EA  517B               	movf	sqrt@grs& (0+255),w,b
 55071  0170EC  2785               	addwf	sqrt@frac& (0+255),f,b
 55072  0170EE  517C               	movf	(sqrt@grs+1)& (0+255),w,b
 55073  0170F0  2386               	addwfc	(sqrt@frac+1)& (0+255),f,b
 55074  0170F2  517D               	movf	(sqrt@grs+2)& (0+255),w,b
 55075  0170F4  2387               	addwfc	(sqrt@frac+2)& (0+255),f,b
 55076  0170F6  517E               	movf	(sqrt@grs+3)& (0+255),w,b
 55077  0170F8  2388               	addwfc	(sqrt@frac+3)& (0+255),f,b
 55078                           
 55079                           ; BSR set to: 0
 55080  0170FA  A188               	btfss	(sqrt@frac+3)& (0+255),0,b
 55081  0170FC  D017               	goto	i2l3006
 55082                           
 55083                           ; BSR set to: 0
 55084  0170FE  C085  F070         	movff	sqrt@frac,??_sqrt
 55085  017102  C086  F071         	movff	sqrt@frac+1,??_sqrt+1
 55086  017106  C087  F072         	movff	sqrt@frac+2,??_sqrt+2
 55087  01710A  C088  F073         	movff	sqrt@frac+3,??_sqrt+3
 55088  01710E  90D8               	bcf	status,0,c
 55089  017110  3373               	rrcf	(??_sqrt+3)& (0+255),f,b
 55090  017112  3372               	rrcf	(??_sqrt+2)& (0+255),f,b
 55091  017114  3371               	rrcf	(??_sqrt+1)& (0+255),f,b
 55092  017116  3370               	rrcf	??_sqrt& (0+255),f,b
 55093  017118  C070  F085         	movff	??_sqrt,sqrt@frac
 55094  01711C  C071  F086         	movff	??_sqrt+1,sqrt@frac+1
 55095  017120  C072  F087         	movff	??_sqrt+2,sqrt@frac+2
 55096  017124  C073  F088         	movff	??_sqrt+3,sqrt@frac+3
 55097  017128  4B7F               	infsnz	sqrt@exp& (0+255),f,b
 55098  01712A  2B80               	incf	(sqrt@exp+1)& (0+255),f,b
 55099  01712C                     i2l3006:
 55100                           
 55101                           ; BSR set to: 0
 55102                           
 55103                           ; BSR set to: 0
 55104  01712C  0EFF               	movlw	255
 55105  01712E  1585               	andwf	sqrt@frac& (0+255),w,b
 55106  017130  6F81               	movwf	sqrt@root& (0+255),b
 55107  017132  0EFF               	movlw	255
 55108  017134  1586               	andwf	(sqrt@frac+1)& (0+255),w,b
 55109  017136  6F82               	movwf	(sqrt@root+1)& (0+255),b
 55110  017138  0E7F               	movlw	127
 55111  01713A  1587               	andwf	(sqrt@frac+2)& (0+255),w,b
 55112  01713C  6F83               	movwf	(sqrt@root+2)& (0+255),b
 55113  01713E  0E00               	movlw	0
 55114  017140  1588               	andwf	(sqrt@frac+3)& (0+255),w,b
 55115  017142  6F84               	movwf	(sqrt@root+3)& (0+255),b
 55116                           
 55117                           ; BSR set to: 0
 55118  017144  C07F  F07A         	movff	sqrt@exp,sqrt@p
 55119                           
 55120                           ; BSR set to: 0
 55121  017148  B17A               	btfsc	sqrt@p& (0+255),0,b
 55122                           
 55123                           ; BSR set to: 0
 55124  01714A  8F83               	bsf	(sqrt@root+2)& (0+255),7,b
 55125                           
 55126                           ; BSR set to: 0
 55127                           
 55128                           ; BSR set to: 0
 55129  01714C  90D8               	bcf	status,0,c
 55130  01714E  317A               	rrcf	sqrt@p& (0+255),w,b
 55131  017150  6F84               	movwf	(sqrt@root+3)& (0+255),b
 55132                           
 55133                           ; BSR set to: 0
 55134  017152  9F84               	bcf	(sqrt@root+3)& (0+255),7,b
 55135                           
 55136                           ; BSR set to: 0
 55137  017154  C081  F06C         	movff	sqrt@root,?_sqrt
 55138  017158  C082  F06D         	movff	sqrt@root+1,?_sqrt+1
 55139  01715C  C083  F06E         	movff	sqrt@root+2,?_sqrt+2
 55140  017160  C084  F06F         	movff	sqrt@root+3,?_sqrt+3
 55141  017164  0012               	return	
 55142  017166                     __end_of_sqrt:
 55143                           	opt stack 0
 55144                           tosu	equ	0xFFF
 55145                           tosh	equ	0xFFE
 55146                           tosl	equ	0xFFD
 55147                           pclatu	equ	0xFFB
 55148                           pclath	equ	0xFFA
 55149                           tblptru	equ	0xFF8
 55150                           tblptrh	equ	0xFF7
 55151                           tblptrl	equ	0xFF6
 55152                           tablat	equ	0xFF5
 55153                           prodh	equ	0xFF4
 55154                           prodl	equ	0xFF3
 55155                           intcon	equ	0xFF2
 55156                           indf0	equ	0xFEF
 55157                           postinc0	equ	0xFEE
 55158                           fsr0h	equ	0xFEA
 55159                           fsr0l	equ	0xFE9
 55160                           wreg	equ	0xFE8
 55161                           indf1	equ	0xFE7
 55162                           postdec1	equ	0xFE5
 55163                           plusw1	equ	0xFE3
 55164                           fsr1h	equ	0xFE2
 55165                           fsr1l	equ	0xFE1
 55166                           bsr	equ	0xFE0
 55167                           indf2	equ	0xFDF
 55168                           postinc2	equ	0xFDE
 55169                           postdec2	equ	0xFDD
 55170                           plusw2	equ	0xFDB
 55171                           fsr2h	equ	0xFDA
 55172                           fsr2l	equ	0xFD9
 55173                           status	equ	0xFD8
 55174                           
 55175 ;; *************** function _atan *****************
 55176 ;; Defined at:
 55177 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 55178 ;; Parameters:    Size  Location     Type
 55179 ;;  f               4   28[BANK0 ] unsigned char 
 55180 ;; Auto vars:     Size  Location     Type
 55181 ;;  val             4   45[BANK0 ] unsigned char 
 55182 ;;  val_squared     4   41[BANK0 ] unsigned char 
 55183 ;;  x               4   36[BANK0 ] unsigned char 
 55184 ;;  y               4   32[BANK0 ] unsigned char 
 55185 ;;  recip           1   40[BANK0 ] unsigned char 
 55186 ;; Return value:  Size  Location     Type
 55187 ;;                  4   28[BANK0 ] unsigned char 
 55188 ;; Registers used:
 55189 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 55190 ;; Tracked objects:
 55191 ;;		On entry : 0/0
 55192 ;;		On exit  : 0/0
 55193 ;;		Unchanged: 0/0
 55194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 55195 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55196 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55198 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55199 ;;Total ram usage:       21 bytes
 55200 ;; Hardware stack levels used:    1
 55201 ;; Hardware stack levels required when called:    2
 55202 ;; This function calls:
 55203 ;;		_eval_poly
 55204 ;;		_fabs
 55205 ;;		i2___fladd
 55206 ;;		i2___fldiv
 55207 ;;		i2___flge
 55208 ;;		i2___flmul
 55209 ;;		i2___flneg
 55210 ;; This function is called by:
 55211 ;;		_asin
 55212 ;; This function uses a non-reentrant model
 55213 ;;
 55214                           
 55215                           	psect	text181
 55216  01859A                     __ptext181:
 55217                           	opt stack 0
 55218  01859A                     _atan:
 55219                           	opt stack 3
 55220                           
 55221                           ;incstack = 0
 55222  01859A  C07C  F030         	movff	atan@f,fabs@d
 55223  01859E  C07D  F031         	movff	atan@f+1,fabs@d+1
 55224  0185A2  C07E  F032         	movff	atan@f+2,fabs@d+2
 55225  0185A6  C07F  F033         	movff	atan@f+3,fabs@d+3
 55226  0185AA  EC75  F0DB         	call	_fabs	;wreg free
 55227  0185AE  C030  F08D         	movff	?_fabs,atan@val
 55228  0185B2  C031  F08E         	movff	?_fabs+1,atan@val+1
 55229  0185B6  C032  F08F         	movff	?_fabs+2,atan@val+2
 55230  0185BA  C033  F090         	movff	?_fabs+3,atan@val+3
 55231  0185BE  0100               	movlb	0	; () banked
 55232  0185C0  518D               	movf	atan@val& (0+255),w,b
 55233  0185C2  118E               	iorwf	(atan@val+1)& (0+255),w,b
 55234  0185C4  118F               	iorwf	(atan@val+2)& (0+255),w,b
 55235  0185C6  1190               	iorwf	(atan@val+3)& (0+255),w,b
 55236  0185C8  A4D8               	btfss	status,2,c
 55237  0185CA  D009               	goto	i2l2442
 55238                           
 55239                           ; BSR set to: 0
 55240  0185CC  0E00               	movlw	0
 55241  0185CE  6F7C               	movwf	?_atan& (0+255),b
 55242  0185D0  0E00               	movlw	0
 55243  0185D2  6F7D               	movwf	(?_atan+1)& (0+255),b
 55244  0185D4  0E00               	movlw	0
 55245  0185D6  6F7E               	movwf	(?_atan+2)& (0+255),b
 55246  0185D8  0E00               	movlw	0
 55247  0185DA  6F7F               	movwf	(?_atan+3)& (0+255),b
 55248                           
 55249                           ; BSR set to: 0
 55250  0185DC  0012               	return	
 55251  0185DE                     i2l2442:
 55252                           
 55253                           ; BSR set to: 0
 55254                           
 55255                           ; BSR set to: 0
 55256  0185DE  0E00               	movlw	0
 55257  0185E0  6E34               	movwf	i2___flge@ff1,c
 55258  0185E2  0E00               	movlw	0
 55259  0185E4  6E35               	movwf	i2___flge@ff1+1,c
 55260  0185E6  0E80               	movlw	128
 55261  0185E8  6E36               	movwf	i2___flge@ff1+2,c
 55262  0185EA  0E3F               	movlw	63
 55263  0185EC  6E37               	movwf	i2___flge@ff1+3,c
 55264  0185EE  C08D  F038         	movff	atan@val,i2___flge@ff2
 55265  0185F2  C08E  F039         	movff	atan@val+1,i2___flge@ff2+1
 55266  0185F6  C08F  F03A         	movff	atan@val+2,i2___flge@ff2+2
 55267  0185FA  C090  F03B         	movff	atan@val+3,i2___flge@ff2+3
 55268  0185FE  EC5F  F0C9         	call	i2___flge	;wreg free
 55269  018602  B0D8               	btfsc	status,0,c
 55270  018604  D002               	goto	i2u2132_40
 55271  018606  0E01               	movlw	1
 55272  018608  D001               	goto	i2u2133_40
 55273  01860A                     i2u2132_40:
 55274  01860A  0E00               	movlw	0
 55275  01860C                     i2u2133_40:
 55276  01860C  0100               	movlb	0	; () banked
 55277  01860E  6F88               	movwf	atan@recip& (0+255),b
 55278  018610  5188               	movf	atan@recip& (0+255),w,b
 55279  018612  B4D8               	btfsc	status,2,c
 55280  018614  D01A               	goto	i2l2444
 55281                           
 55282                           ; BSR set to: 0
 55283  018616  0E00               	movlw	0
 55284  018618  6E13               	movwf	i2___fldiv@b,c
 55285  01861A  0E00               	movlw	0
 55286  01861C  6E14               	movwf	i2___fldiv@b+1,c
 55287  01861E  0E80               	movlw	128
 55288  018620  6E15               	movwf	i2___fldiv@b+2,c
 55289  018622  0E3F               	movlw	63
 55290  018624  6E16               	movwf	i2___fldiv@b+3,c
 55291  018626  C08D  F017         	movff	atan@val,i2___fldiv@a
 55292  01862A  C08E  F018         	movff	atan@val+1,i2___fldiv@a+1
 55293  01862E  C08F  F019         	movff	atan@val+2,i2___fldiv@a+2
 55294  018632  C090  F01A         	movff	atan@val+3,i2___fldiv@a+3
 55295  018636  EC0E  F0BA         	call	i2___fldiv	;wreg free
 55296  01863A  C013  F08D         	movff	?i2___fldiv,atan@val
 55297  01863E  C014  F08E         	movff	?i2___fldiv+1,atan@val+1
 55298  018642  C015  F08F         	movff	?i2___fldiv+2,atan@val+2
 55299  018646  C016  F090         	movff	?i2___fldiv+3,atan@val+3
 55300  01864A                     i2l2444:
 55301  01864A  C08D  F030         	movff	atan@val,i2___flmul@b
 55302  01864E  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 55303  018652  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 55304  018656  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 55305  01865A  C08D  F034         	movff	atan@val,i2___flmul@a
 55306  01865E  C08E  F035         	movff	atan@val+1,i2___flmul@a+1
 55307  018662  C08F  F036         	movff	atan@val+2,i2___flmul@a+2
 55308  018666  C090  F037         	movff	atan@val+3,i2___flmul@a+3
 55309  01866A  EC05  F0AE         	call	i2___flmul	;wreg free
 55310  01866E  C030  F089         	movff	?i2___flmul,atan@val_squared
 55311  018672  C031  F08A         	movff	?i2___flmul+1,atan@val_squared+1
 55312  018676  C032  F08B         	movff	?i2___flmul+2,atan@val_squared+2
 55313  01867A  C033  F08C         	movff	?i2___flmul+3,atan@val_squared+3
 55314  01867E  C089  F06C         	movff	atan@val_squared,eval_poly@x
 55315  018682  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 55316  018686  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 55317  01868A  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 55318  01868E  0EC7               	movlw	low atan@coeff_b
 55319  018690  0100               	movlb	0	; () banked
 55320  018692  6F70               	movwf	eval_poly@d& (0+255),b
 55321  018694  0ED1               	movlw	high atan@coeff_b
 55322  018696  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 55323  018698  0E00               	movlw	0
 55324  01869A  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 55325  01869C  0E04               	movlw	4
 55326  01869E  6F72               	movwf	eval_poly@n& (0+255),b
 55327  0186A0  ECFC  F0CA         	call	_eval_poly	;wreg free
 55328  0186A4  C06C  F080         	movff	?_eval_poly,atan@y
 55329  0186A8  C06D  F081         	movff	?_eval_poly+1,atan@y+1
 55330  0186AC  C06E  F082         	movff	?_eval_poly+2,atan@y+2
 55331  0186B0  C06F  F083         	movff	?_eval_poly+3,atan@y+3
 55332  0186B4  C089  F06C         	movff	atan@val_squared,eval_poly@x
 55333  0186B8  C08A  F06D         	movff	atan@val_squared+1,eval_poly@x+1
 55334  0186BC  C08B  F06E         	movff	atan@val_squared+2,eval_poly@x+2
 55335  0186C0  C08C  F06F         	movff	atan@val_squared+3,eval_poly@x+3
 55336  0186C4  0E9B               	movlw	low atan@coeff_a
 55337  0186C6  0100               	movlb	0	; () banked
 55338  0186C8  6F70               	movwf	eval_poly@d& (0+255),b
 55339  0186CA  0ED1               	movlw	high atan@coeff_a
 55340  0186CC  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 55341  0186CE  0E00               	movlw	0
 55342  0186D0  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 55343  0186D2  0E05               	movlw	5
 55344  0186D4  6F72               	movwf	eval_poly@n& (0+255),b
 55345  0186D6  ECFC  F0CA         	call	_eval_poly	;wreg free
 55346  0186DA  C06C  F084         	movff	?_eval_poly,atan@x
 55347  0186DE  C06D  F085         	movff	?_eval_poly+1,atan@x+1
 55348  0186E2  C06E  F086         	movff	?_eval_poly+2,atan@x+2
 55349  0186E6  C06F  F087         	movff	?_eval_poly+3,atan@x+3
 55350  0186EA  C08D  F030         	movff	atan@val,i2___flmul@b
 55351  0186EE  C08E  F031         	movff	atan@val+1,i2___flmul@b+1
 55352  0186F2  C08F  F032         	movff	atan@val+2,i2___flmul@b+2
 55353  0186F6  C090  F033         	movff	atan@val+3,i2___flmul@b+3
 55354  0186FA  C080  F017         	movff	atan@y,i2___fldiv@a
 55355  0186FE  C081  F018         	movff	atan@y+1,i2___fldiv@a+1
 55356  018702  C082  F019         	movff	atan@y+2,i2___fldiv@a+2
 55357  018706  C083  F01A         	movff	atan@y+3,i2___fldiv@a+3
 55358  01870A  C084  F013         	movff	atan@x,i2___fldiv@b
 55359  01870E  C085  F014         	movff	atan@x+1,i2___fldiv@b+1
 55360  018712  C086  F015         	movff	atan@x+2,i2___fldiv@b+2
 55361  018716  C087  F016         	movff	atan@x+3,i2___fldiv@b+3
 55362  01871A  EC0E  F0BA         	call	i2___fldiv	;wreg free
 55363  01871E  C013  F034         	movff	?i2___fldiv,i2___flmul@a
 55364  018722  C014  F035         	movff	?i2___fldiv+1,i2___flmul@a+1
 55365  018726  C015  F036         	movff	?i2___fldiv+2,i2___flmul@a+2
 55366  01872A  C016  F037         	movff	?i2___fldiv+3,i2___flmul@a+3
 55367  01872E  EC05  F0AE         	call	i2___flmul	;wreg free
 55368  018732  C030  F08D         	movff	?i2___flmul,atan@val
 55369  018736  C031  F08E         	movff	?i2___flmul+1,atan@val+1
 55370  01873A  C032  F08F         	movff	?i2___flmul+2,atan@val+2
 55371  01873E  C033  F090         	movff	?i2___flmul+3,atan@val+3
 55372  018742  0100               	movlb	0	; () banked
 55373  018744  5188               	movf	atan@recip& (0+255),w,b
 55374  018746  B4D8               	btfsc	status,2,c
 55375  018748  D024               	goto	i2l2445
 55376                           
 55377                           ; BSR set to: 0
 55378  01874A  C08D  F02C         	movff	atan@val,i2___flneg@f1
 55379  01874E  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 55380  018752  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 55381  018756  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 55382  01875A  EC15  F0DD         	call	i2___flneg	;wreg free
 55383  01875E  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 55384  018762  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 55385  018766  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 55386  01876A  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 55387  01876E  0EDB               	movlw	219
 55388  018770  6E5A               	movwf	i2___fladd@a,c
 55389  018772  0E0F               	movlw	15
 55390  018774  6E5B               	movwf	i2___fladd@a+1,c
 55391  018776  0EC9               	movlw	201
 55392  018778  6E5C               	movwf	i2___fladd@a+2,c
 55393  01877A  0E3F               	movlw	63
 55394  01877C  6E5D               	movwf	i2___fladd@a+3,c
 55395  01877E  EC4C  F0B1         	call	i2___fladd	;wreg free
 55396  018782  C056  F08D         	movff	?i2___fladd,atan@val
 55397  018786  C057  F08E         	movff	?i2___fladd+1,atan@val+1
 55398  01878A  C058  F08F         	movff	?i2___fladd+2,atan@val+2
 55399  01878E  C059  F090         	movff	?i2___fladd+3,atan@val+3
 55400  018792                     i2l2445:
 55401  018792  0100               	movlb	0	; () banked
 55402  018794  BF7F               	btfsc	(atan@f+3)& (0+255),7,b
 55403  018796  D009               	goto	i2l2447
 55404                           
 55405                           ; BSR set to: 0
 55406  018798  C08D  F07C         	movff	atan@val,?_atan
 55407  01879C  C08E  F07D         	movff	atan@val+1,?_atan+1
 55408  0187A0  C08F  F07E         	movff	atan@val+2,?_atan+2
 55409  0187A4  C090  F07F         	movff	atan@val+3,?_atan+3
 55410  0187A8  0012               	return	
 55411  0187AA                     i2l2447:
 55412                           
 55413                           ; BSR set to: 0
 55414                           
 55415                           ; BSR set to: 0
 55416  0187AA  C08D  F02C         	movff	atan@val,i2___flneg@f1
 55417  0187AE  C08E  F02D         	movff	atan@val+1,i2___flneg@f1+1
 55418  0187B2  C08F  F02E         	movff	atan@val+2,i2___flneg@f1+2
 55419  0187B6  C090  F02F         	movff	atan@val+3,i2___flneg@f1+3
 55420  0187BA  EC15  F0DD         	call	i2___flneg	;wreg free
 55421  0187BE  C02C  F07C         	movff	?i2___flneg,?_atan
 55422  0187C2  C02D  F07D         	movff	?i2___flneg+1,?_atan+1
 55423  0187C6  C02E  F07E         	movff	?i2___flneg+2,?_atan+2
 55424  0187CA  C02F  F07F         	movff	?i2___flneg+3,?_atan+3
 55425  0187CE  0012               	return	
 55426  0187D0                     __end_of_atan:
 55427                           	opt stack 0
 55428                           tosu	equ	0xFFF
 55429                           tosh	equ	0xFFE
 55430                           tosl	equ	0xFFD
 55431                           pclatu	equ	0xFFB
 55432                           pclath	equ	0xFFA
 55433                           tblptru	equ	0xFF8
 55434                           tblptrh	equ	0xFF7
 55435                           tblptrl	equ	0xFF6
 55436                           tablat	equ	0xFF5
 55437                           prodh	equ	0xFF4
 55438                           prodl	equ	0xFF3
 55439                           intcon	equ	0xFF2
 55440                           indf0	equ	0xFEF
 55441                           postinc0	equ	0xFEE
 55442                           fsr0h	equ	0xFEA
 55443                           fsr0l	equ	0xFE9
 55444                           wreg	equ	0xFE8
 55445                           indf1	equ	0xFE7
 55446                           postdec1	equ	0xFE5
 55447                           plusw1	equ	0xFE3
 55448                           fsr1h	equ	0xFE2
 55449                           fsr1l	equ	0xFE1
 55450                           bsr	equ	0xFE0
 55451                           indf2	equ	0xFDF
 55452                           postinc2	equ	0xFDE
 55453                           postdec2	equ	0xFDD
 55454                           plusw2	equ	0xFDB
 55455                           fsr2h	equ	0xFDA
 55456                           fsr2l	equ	0xFD9
 55457                           status	equ	0xFD8
 55458                           
 55459 ;; *************** function _fabs *****************
 55460 ;; Defined at:
 55461 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 55462 ;; Parameters:    Size  Location     Type
 55463 ;;  d               4   47[COMRAM] unsigned char 
 55464 ;; Auto vars:     Size  Location     Type
 55465 ;;		None
 55466 ;; Return value:  Size  Location     Type
 55467 ;;                  4   47[COMRAM] unsigned char 
 55468 ;; Registers used:
 55469 ;;		wreg, status,2, status,0, cstack
 55470 ;; Tracked objects:
 55471 ;;		On entry : 0/0
 55472 ;;		On exit  : 0/0
 55473 ;;		Unchanged: 0/0
 55474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 55475 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55478 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55479 ;;Total ram usage:        4 bytes
 55480 ;; Hardware stack levels used:    1
 55481 ;; Hardware stack levels required when called:    1
 55482 ;; This function calls:
 55483 ;;		i2___flneg
 55484 ;; This function is called by:
 55485 ;;		_asin
 55486 ;;		_atan
 55487 ;; This function uses a non-reentrant model
 55488 ;;
 55489                           
 55490                           	psect	text182
 55491  01B6EA                     __ptext182:
 55492                           	opt stack 0
 55493  01B6EA                     _fabs:
 55494                           	opt stack 4
 55495                           
 55496                           ;incstack = 0
 55497  01B6EA  AE33               	btfss	fabs@d+3,7,c
 55498  01B6EC  D013               	goto	i2l2539
 55499  01B6EE  C030  F02C         	movff	fabs@d,i2___flneg@f1
 55500  01B6F2  C031  F02D         	movff	fabs@d+1,i2___flneg@f1+1
 55501  01B6F6  C032  F02E         	movff	fabs@d+2,i2___flneg@f1+2
 55502  01B6FA  C033  F02F         	movff	fabs@d+3,i2___flneg@f1+3
 55503  01B6FE  EC15  F0DD         	call	i2___flneg	;wreg free
 55504  01B702  C02C  F030         	movff	?i2___flneg,?_fabs
 55505  01B706  C02D  F031         	movff	?i2___flneg+1,?_fabs+1
 55506  01B70A  C02E  F032         	movff	?i2___flneg+2,?_fabs+2
 55507  01B70E  C02F  F033         	movff	?i2___flneg+3,?_fabs+3
 55508  01B712  0012               	return	
 55509  01B714                     i2l2539:
 55510  01B714  C030  F030         	movff	fabs@d,?_fabs
 55511  01B718  C031  F031         	movff	fabs@d+1,?_fabs+1
 55512  01B71C  C032  F032         	movff	fabs@d+2,?_fabs+2
 55513  01B720  C033  F033         	movff	fabs@d+3,?_fabs+3
 55514  01B724  0012               	return		;funcret
 55515  01B726                     __end_of_fabs:
 55516                           	opt stack 0
 55517                           tosu	equ	0xFFF
 55518                           tosh	equ	0xFFE
 55519                           tosl	equ	0xFFD
 55520                           pclatu	equ	0xFFB
 55521                           pclath	equ	0xFFA
 55522                           tblptru	equ	0xFF8
 55523                           tblptrh	equ	0xFF7
 55524                           tblptrl	equ	0xFF6
 55525                           tablat	equ	0xFF5
 55526                           prodh	equ	0xFF4
 55527                           prodl	equ	0xFF3
 55528                           intcon	equ	0xFF2
 55529                           indf0	equ	0xFEF
 55530                           postinc0	equ	0xFEE
 55531                           fsr0h	equ	0xFEA
 55532                           fsr0l	equ	0xFE9
 55533                           wreg	equ	0xFE8
 55534                           indf1	equ	0xFE7
 55535                           postdec1	equ	0xFE5
 55536                           plusw1	equ	0xFE3
 55537                           fsr1h	equ	0xFE2
 55538                           fsr1l	equ	0xFE1
 55539                           bsr	equ	0xFE0
 55540                           indf2	equ	0xFDF
 55541                           postinc2	equ	0xFDE
 55542                           postdec2	equ	0xFDD
 55543                           plusw2	equ	0xFDB
 55544                           fsr2h	equ	0xFDA
 55545                           fsr2l	equ	0xFD9
 55546                           status	equ	0xFD8
 55547                           
 55548 ;; *************** function _currentMeasuredToPeak *****************
 55549 ;; Defined at:
 55550 ;;		line 143 in file "main.c"
 55551 ;; Parameters:    Size  Location     Type
 55552 ;;  Measured        4   57[BANK0 ] unsigned char 
 55553 ;;  Angle           4   61[BANK0 ] unsigned char 
 55554 ;; Auto vars:     Size  Location     Type
 55555 ;;  Peak            4   65[BANK0 ] unsigned char 
 55556 ;; Return value:  Size  Location     Type
 55557 ;;                  4   57[BANK0 ] unsigned char 
 55558 ;; Registers used:
 55559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 55560 ;; Tracked objects:
 55561 ;;		On entry : 0/0
 55562 ;;		On exit  : 0/0
 55563 ;;		Unchanged: 0/0
 55564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 55565 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55566 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55568 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55569 ;;Total ram usage:       12 bytes
 55570 ;; Hardware stack levels used:    1
 55571 ;; Hardware stack levels required when called:    3
 55572 ;; This function calls:
 55573 ;;		_sin
 55574 ;;		i2___fldiv
 55575 ;; This function is called by:
 55576 ;;		_ADC_PostProcessingCallback
 55577 ;; This function uses a non-reentrant model
 55578 ;;
 55579                           
 55580                           	psect	text183
 55581  01A55A                     __ptext183:
 55582                           	opt stack 0
 55583  01A55A                     _currentMeasuredToPeak:
 55584                           	opt stack 5
 55585                           
 55586                           ;main.c: 146: double Peak = 0.0;
 55587                           
 55588                           ;incstack = 0
 55589  01A55A  0E00               	movlw	0
 55590  01A55C  0100               	movlb	0	; () banked
 55591  01A55E  6FA1               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 55592  01A560  0E00               	movlw	0
 55593  01A562  6FA2               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 55594  01A564  0E00               	movlw	0
 55595  01A566  6FA3               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 55596  01A568  0E00               	movlw	0
 55597  01A56A  6FA4               	movwf	(currentMeasuredToPeak@Peak+3)& (0+255),b
 55598                           
 55599                           ; BSR set to: 0
 55600                           ;main.c: 149: Peak = sin(Angle);
 55601  01A56C  C09D  F088         	movff	currentMeasuredToPeak@Angle,sin@f
 55602  01A570  C09E  F089         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 55603  01A574  C09F  F08A         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 55604  01A578  C0A0  F08B         	movff	currentMeasuredToPeak@Angle+3,sin@f+3
 55605  01A57C  EC6D  F0B4         	call	_sin	;wreg free
 55606  01A580  C088  F0A1         	movff	?_sin,currentMeasuredToPeak@Peak
 55607  01A584  C089  F0A2         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 55608  01A588  C08A  F0A3         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 55609  01A58C  C08B  F0A4         	movff	?_sin+3,currentMeasuredToPeak@Peak+3
 55610                           
 55611                           ;main.c: 150: Peak = Measured / Peak;
 55612  01A590  C099  F013         	movff	currentMeasuredToPeak@Measured,i2___fldiv@b
 55613  01A594  C09A  F014         	movff	currentMeasuredToPeak@Measured+1,i2___fldiv@b+1
 55614  01A598  C09B  F015         	movff	currentMeasuredToPeak@Measured+2,i2___fldiv@b+2
 55615  01A59C  C09C  F016         	movff	currentMeasuredToPeak@Measured+3,i2___fldiv@b+3
 55616  01A5A0  C0A1  F017         	movff	currentMeasuredToPeak@Peak,i2___fldiv@a
 55617  01A5A4  C0A2  F018         	movff	currentMeasuredToPeak@Peak+1,i2___fldiv@a+1
 55618  01A5A8  C0A3  F019         	movff	currentMeasuredToPeak@Peak+2,i2___fldiv@a+2
 55619  01A5AC  C0A4  F01A         	movff	currentMeasuredToPeak@Peak+3,i2___fldiv@a+3
 55620  01A5B0  EC0E  F0BA         	call	i2___fldiv	;wreg free
 55621  01A5B4  C013  F0A1         	movff	?i2___fldiv,currentMeasuredToPeak@Peak
 55622  01A5B8  C014  F0A2         	movff	?i2___fldiv+1,currentMeasuredToPeak@Peak+1
 55623  01A5BC  C015  F0A3         	movff	?i2___fldiv+2,currentMeasuredToPeak@Peak+2
 55624  01A5C0  C016  F0A4         	movff	?i2___fldiv+3,currentMeasuredToPeak@Peak+3
 55625                           
 55626                           ;main.c: 151: return Peak;
 55627  01A5C4  C0A1  F099         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 55628  01A5C8  C0A2  F09A         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 55629  01A5CC  C0A3  F09B         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 55630  01A5D0  C0A4  F09C         	movff	currentMeasuredToPeak@Peak+3,?_currentMeasuredToPeak+3
 55631  01A5D4  0012               	return	
 55632  01A5D6                     __end_of_currentMeasuredToPeak:
 55633                           	opt stack 0
 55634                           tosu	equ	0xFFF
 55635                           tosh	equ	0xFFE
 55636                           tosl	equ	0xFFD
 55637                           pclatu	equ	0xFFB
 55638                           pclath	equ	0xFFA
 55639                           tblptru	equ	0xFF8
 55640                           tblptrh	equ	0xFF7
 55641                           tblptrl	equ	0xFF6
 55642                           tablat	equ	0xFF5
 55643                           prodh	equ	0xFF4
 55644                           prodl	equ	0xFF3
 55645                           intcon	equ	0xFF2
 55646                           indf0	equ	0xFEF
 55647                           postinc0	equ	0xFEE
 55648                           fsr0h	equ	0xFEA
 55649                           fsr0l	equ	0xFE9
 55650                           wreg	equ	0xFE8
 55651                           indf1	equ	0xFE7
 55652                           postdec1	equ	0xFE5
 55653                           plusw1	equ	0xFE3
 55654                           fsr1h	equ	0xFE2
 55655                           fsr1l	equ	0xFE1
 55656                           bsr	equ	0xFE0
 55657                           indf2	equ	0xFDF
 55658                           postinc2	equ	0xFDE
 55659                           postdec2	equ	0xFDD
 55660                           plusw2	equ	0xFDB
 55661                           fsr2h	equ	0xFDA
 55662                           fsr2l	equ	0xFD9
 55663                           status	equ	0xFD8
 55664                           
 55665 ;; *************** function _sin *****************
 55666 ;; Defined at:
 55667 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 55668 ;; Parameters:    Size  Location     Type
 55669 ;;  f               4   40[BANK0 ] unsigned char 
 55670 ;; Auto vars:     Size  Location     Type
 55671 ;;  x2              4   52[BANK0 ] unsigned char 
 55672 ;;  y               4   44[BANK0 ] unsigned char 
 55673 ;;  sgn             1   56[BANK0 ] unsigned char 
 55674 ;; Return value:  Size  Location     Type
 55675 ;;                  4   40[BANK0 ] unsigned char 
 55676 ;; Registers used:
 55677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 55678 ;; Tracked objects:
 55679 ;;		On entry : 0/0
 55680 ;;		On exit  : 0/0
 55681 ;;		Unchanged: 0/0
 55682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 55683 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55684 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55686 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55687 ;;Total ram usage:       17 bytes
 55688 ;; Hardware stack levels used:    1
 55689 ;; Hardware stack levels required when called:    2
 55690 ;; This function calls:
 55691 ;;		_eval_poly
 55692 ;;		_floor
 55693 ;;		i2___fladd
 55694 ;;		i2___fldiv
 55695 ;;		i2___flge
 55696 ;;		i2___flmul
 55697 ;;		i2___flneg
 55698 ;;		i2___flsub
 55699 ;; This function is called by:
 55700 ;;		_peakToRMS
 55701 ;;		_currentMeasuredToPeak
 55702 ;; This function uses a non-reentrant model
 55703 ;;
 55704                           
 55705                           	psect	text184
 55706  0168DA                     __ptext184:
 55707                           	opt stack 0
 55708  0168DA                     _sin:
 55709                           	opt stack 5
 55710                           
 55711                           ;incstack = 0
 55712  0168DA  0E00               	movlw	0
 55713  0168DC  0100               	movlb	0	; () banked
 55714  0168DE  6F98               	movwf	sin@sgn& (0+255),b
 55715                           
 55716                           ; BSR set to: 0
 55717  0168E0  AF8B               	btfss	(sin@f+3)& (0+255),7,b
 55718  0168E2  D015               	goto	i2l2863
 55719                           
 55720                           ; BSR set to: 0
 55721  0168E4  C088  F02C         	movff	sin@f,i2___flneg@f1
 55722  0168E8  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 55723  0168EC  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 55724  0168F0  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 55725  0168F4  EC15  F0DD         	call	i2___flneg	;wreg free
 55726  0168F8  C02C  F088         	movff	?i2___flneg,sin@f
 55727  0168FC  C02D  F089         	movff	?i2___flneg+1,sin@f+1
 55728  016900  C02E  F08A         	movff	?i2___flneg+2,sin@f+2
 55729  016904  C02F  F08B         	movff	?i2___flneg+3,sin@f+3
 55730  016908  0E01               	movlw	1
 55731  01690A  0100               	movlb	0	; () banked
 55732  01690C  6F98               	movwf	sin@sgn& (0+255),b
 55733  01690E                     i2l2863:
 55734                           
 55735                           ; BSR set to: 0
 55736                           
 55737                           ; BSR set to: 0
 55738  01690E  C088  F030         	movff	sin@f,i2___flmul@b
 55739  016912  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 55740  016916  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 55741  01691A  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 55742  01691E  0E83               	movlw	131
 55743  016920  6E34               	movwf	i2___flmul@a,c
 55744  016922  0EF9               	movlw	249
 55745  016924  6E35               	movwf	i2___flmul@a+1,c
 55746  016926  0E22               	movlw	34
 55747  016928  6E36               	movwf	i2___flmul@a+2,c
 55748  01692A  0E3E               	movlw	62
 55749  01692C  6E37               	movwf	i2___flmul@a+3,c
 55750  01692E  EC05  F0AE         	call	i2___flmul	;wreg free
 55751  016932  C030  F088         	movff	?i2___flmul,sin@f
 55752  016936  C031  F089         	movff	?i2___flmul+1,sin@f+1
 55753  01693A  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 55754  01693E  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 55755  016942  C088  F080         	movff	sin@f,i2___flsub@b
 55756  016946  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 55757  01694A  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 55758  01694E  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 55759  016952  C088  F076         	movff	sin@f,floor@x
 55760  016956  C089  F077         	movff	sin@f+1,floor@x+1
 55761  01695A  C08A  F078         	movff	sin@f+2,floor@x+2
 55762  01695E  C08B  F079         	movff	sin@f+3,floor@x+3
 55763  016962  ECEF  F0C9         	call	_floor	;wreg free
 55764  016966  C076  F084         	movff	?_floor,i2___flsub@a
 55765  01696A  C077  F085         	movff	?_floor+1,i2___flsub@a+1
 55766  01696E  C078  F086         	movff	?_floor+2,i2___flsub@a+2
 55767  016972  C079  F087         	movff	?_floor+3,i2___flsub@a+3
 55768  016976  EC55  F0D9         	call	i2___flsub	;wreg free
 55769  01697A  C080  F088         	movff	?i2___flsub,sin@f
 55770  01697E  C081  F089         	movff	?i2___flsub+1,sin@f+1
 55771  016982  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 55772  016986  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 55773  01698A  C088  F030         	movff	sin@f,i2___flmul@b
 55774  01698E  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 55775  016992  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 55776  016996  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 55777  01699A  0E00               	movlw	0
 55778  01699C  6E34               	movwf	i2___flmul@a,c
 55779  01699E  0E00               	movlw	0
 55780  0169A0  6E35               	movwf	i2___flmul@a+1,c
 55781  0169A2  0E80               	movlw	128
 55782  0169A4  6E36               	movwf	i2___flmul@a+2,c
 55783  0169A6  0E40               	movlw	64
 55784  0169A8  6E37               	movwf	i2___flmul@a+3,c
 55785  0169AA  EC05  F0AE         	call	i2___flmul	;wreg free
 55786  0169AE  C030  F088         	movff	?i2___flmul,sin@f
 55787  0169B2  C031  F089         	movff	?i2___flmul+1,sin@f+1
 55788  0169B6  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 55789  0169BA  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 55790  0169BE  0E00               	movlw	0
 55791  0169C0  6E34               	movwf	i2___flge@ff1,c
 55792  0169C2  0E00               	movlw	0
 55793  0169C4  6E35               	movwf	i2___flge@ff1+1,c
 55794  0169C6  0E00               	movlw	0
 55795  0169C8  6E36               	movwf	i2___flge@ff1+2,c
 55796  0169CA  0E40               	movlw	64
 55797  0169CC  6E37               	movwf	i2___flge@ff1+3,c
 55798  0169CE  C088  F038         	movff	sin@f,i2___flge@ff2
 55799  0169D2  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 55800  0169D6  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 55801  0169DA  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 55802  0169DE  EC5F  F0C9         	call	i2___flge	;wreg free
 55803  0169E2  B0D8               	btfsc	status,0,c
 55804  0169E4  D023               	goto	i2l2864
 55805  0169E6  C088  F080         	movff	sin@f,i2___flsub@b
 55806  0169EA  C089  F081         	movff	sin@f+1,i2___flsub@b+1
 55807  0169EE  C08A  F082         	movff	sin@f+2,i2___flsub@b+2
 55808  0169F2  C08B  F083         	movff	sin@f+3,i2___flsub@b+3
 55809  0169F6  0E00               	movlw	0
 55810  0169F8  0100               	movlb	0	; () banked
 55811  0169FA  6F84               	movwf	i2___flsub@a& (0+255),b
 55812  0169FC  0E00               	movlw	0
 55813  0169FE  6F85               	movwf	(i2___flsub@a+1)& (0+255),b
 55814  016A00  0E00               	movlw	0
 55815  016A02  6F86               	movwf	(i2___flsub@a+2)& (0+255),b
 55816  016A04  0E40               	movlw	64
 55817  016A06  6F87               	movwf	(i2___flsub@a+3)& (0+255),b
 55818  016A08  EC55  F0D9         	call	i2___flsub	;wreg free
 55819  016A0C  C080  F088         	movff	?i2___flsub,sin@f
 55820  016A10  C081  F089         	movff	?i2___flsub+1,sin@f+1
 55821  016A14  C082  F08A         	movff	?i2___flsub+2,sin@f+2
 55822  016A18  C083  F08B         	movff	?i2___flsub+3,sin@f+3
 55823  016A1C  0100               	movlb	0	; () banked
 55824  016A1E  5198               	movf	sin@sgn& (0+255),w,b
 55825  016A20  A4D8               	btfss	status,2,c
 55826  016A22  D002               	goto	i2u2215_40
 55827  016A24  0E01               	movlw	1
 55828  016A26  D001               	goto	i2u2216_40
 55829  016A28                     i2u2215_40:
 55830  016A28  0E00               	movlw	0
 55831  016A2A                     i2u2216_40:
 55832  016A2A  6F98               	movwf	sin@sgn& (0+255),b
 55833  016A2C                     i2l2864:
 55834                           
 55835                           ; BSR set to: 0
 55836  016A2C  0E00               	movlw	0
 55837  016A2E  6E34               	movwf	i2___flge@ff1,c
 55838  016A30  0E00               	movlw	0
 55839  016A32  6E35               	movwf	i2___flge@ff1+1,c
 55840  016A34  0E80               	movlw	128
 55841  016A36  6E36               	movwf	i2___flge@ff1+2,c
 55842  016A38  0E3F               	movlw	63
 55843  016A3A  6E37               	movwf	i2___flge@ff1+3,c
 55844  016A3C  C088  F038         	movff	sin@f,i2___flge@ff2
 55845  016A40  C089  F039         	movff	sin@f+1,i2___flge@ff2+1
 55846  016A44  C08A  F03A         	movff	sin@f+2,i2___flge@ff2+2
 55847  016A48  C08B  F03B         	movff	sin@f+3,i2___flge@ff2+3
 55848  016A4C  EC5F  F0C9         	call	i2___flge	;wreg free
 55849  016A50  B0D8               	btfsc	status,0,c
 55850  016A52  D024               	goto	i2l2865
 55851  016A54  C088  F02C         	movff	sin@f,i2___flneg@f1
 55852  016A58  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 55853  016A5C  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 55854  016A60  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 55855  016A64  EC15  F0DD         	call	i2___flneg	;wreg free
 55856  016A68  C02C  F056         	movff	?i2___flneg,i2___fladd@b
 55857  016A6C  C02D  F057         	movff	?i2___flneg+1,i2___fladd@b+1
 55858  016A70  C02E  F058         	movff	?i2___flneg+2,i2___fladd@b+2
 55859  016A74  C02F  F059         	movff	?i2___flneg+3,i2___fladd@b+3
 55860  016A78  0E00               	movlw	0
 55861  016A7A  6E5A               	movwf	i2___fladd@a,c
 55862  016A7C  0E00               	movlw	0
 55863  016A7E  6E5B               	movwf	i2___fladd@a+1,c
 55864  016A80  0E00               	movlw	0
 55865  016A82  6E5C               	movwf	i2___fladd@a+2,c
 55866  016A84  0E40               	movlw	64
 55867  016A86  6E5D               	movwf	i2___fladd@a+3,c
 55868  016A88  EC4C  F0B1         	call	i2___fladd	;wreg free
 55869  016A8C  C056  F088         	movff	?i2___fladd,sin@f
 55870  016A90  C057  F089         	movff	?i2___fladd+1,sin@f+1
 55871  016A94  C058  F08A         	movff	?i2___fladd+2,sin@f+2
 55872  016A98  C059  F08B         	movff	?i2___fladd+3,sin@f+3
 55873  016A9C                     i2l2865:
 55874  016A9C  C088  F030         	movff	sin@f,i2___flmul@b
 55875  016AA0  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 55876  016AA4  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 55877  016AA8  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 55878  016AAC  C088  F034         	movff	sin@f,i2___flmul@a
 55879  016AB0  C089  F035         	movff	sin@f+1,i2___flmul@a+1
 55880  016AB4  C08A  F036         	movff	sin@f+2,i2___flmul@a+2
 55881  016AB8  C08B  F037         	movff	sin@f+3,i2___flmul@a+3
 55882  016ABC  EC05  F0AE         	call	i2___flmul	;wreg free
 55883  016AC0  C030  F094         	movff	?i2___flmul,sin@x2
 55884  016AC4  C031  F095         	movff	?i2___flmul+1,sin@x2+1
 55885  016AC8  C032  F096         	movff	?i2___flmul+2,sin@x2+2
 55886  016ACC  C033  F097         	movff	?i2___flmul+3,sin@x2+3
 55887  016AD0  C094  F06C         	movff	sin@x2,eval_poly@x
 55888  016AD4  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 55889  016AD8  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 55890  016ADC  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 55891  016AE0  0EDB               	movlw	low sin@coeff_b
 55892  016AE2  0100               	movlb	0	; () banked
 55893  016AE4  6F70               	movwf	eval_poly@d& (0+255),b
 55894  016AE6  0ED1               	movlw	high sin@coeff_b
 55895  016AE8  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 55896  016AEA  0E00               	movlw	0
 55897  016AEC  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 55898  016AEE  0E03               	movlw	3
 55899  016AF0  6F72               	movwf	eval_poly@n& (0+255),b
 55900  016AF2  ECFC  F0CA         	call	_eval_poly	;wreg free
 55901  016AF6  C06C  F08C         	movff	?_eval_poly,sin@y
 55902  016AFA  C06D  F08D         	movff	?_eval_poly+1,sin@y+1
 55903  016AFE  C06E  F08E         	movff	?_eval_poly+2,sin@y+2
 55904  016B02  C06F  F08F         	movff	?_eval_poly+3,sin@y+3
 55905  016B06  C08C  F017         	movff	sin@y,i2___fldiv@a
 55906  016B0A  C08D  F018         	movff	sin@y+1,i2___fldiv@a+1
 55907  016B0E  C08E  F019         	movff	sin@y+2,i2___fldiv@a+2
 55908  016B12  C08F  F01A         	movff	sin@y+3,i2___fldiv@a+3
 55909  016B16  0E00               	movlw	0
 55910  016B18  0100               	movlb	0	; () banked
 55911  016B1A  6F73               	movwf	(eval_poly@n+1)& (0+255),b
 55912  016B1C  0E04               	movlw	4
 55913  016B1E  6F72               	movwf	eval_poly@n& (0+255),b
 55914  016B20  0EB3               	movlw	low sin@coeff_a
 55915  016B22  6F70               	movwf	eval_poly@d& (0+255),b
 55916  016B24  0ED1               	movlw	high sin@coeff_a
 55917  016B26  6F71               	movwf	(eval_poly@d+1)& (0+255),b
 55918  016B28  C094  F06C         	movff	sin@x2,eval_poly@x
 55919  016B2C  C095  F06D         	movff	sin@x2+1,eval_poly@x+1
 55920  016B30  C096  F06E         	movff	sin@x2+2,eval_poly@x+2
 55921  016B34  C097  F06F         	movff	sin@x2+3,eval_poly@x+3
 55922  016B38  ECFC  F0CA         	call	_eval_poly	;wreg free
 55923  016B3C  C06C  F013         	movff	?_eval_poly,i2___fldiv@b
 55924  016B40  C06D  F014         	movff	?_eval_poly+1,i2___fldiv@b+1
 55925  016B44  C06E  F015         	movff	?_eval_poly+2,i2___fldiv@b+2
 55926  016B48  C06F  F016         	movff	?_eval_poly+3,i2___fldiv@b+3
 55927  016B4C  EC0E  F0BA         	call	i2___fldiv	;wreg free
 55928  016B50  C013  F090         	movff	?i2___fldiv,_sin$5958
 55929  016B54  C014  F091         	movff	?i2___fldiv+1,_sin$5958+1
 55930  016B58  C015  F092         	movff	?i2___fldiv+2,_sin$5958+2
 55931  016B5C  C016  F093         	movff	?i2___fldiv+3,_sin$5958+3
 55932  016B60  C088  F030         	movff	sin@f,i2___flmul@b
 55933  016B64  C089  F031         	movff	sin@f+1,i2___flmul@b+1
 55934  016B68  C08A  F032         	movff	sin@f+2,i2___flmul@b+2
 55935  016B6C  C08B  F033         	movff	sin@f+3,i2___flmul@b+3
 55936  016B70  C090  F034         	movff	_sin$5958,i2___flmul@a
 55937  016B74  C091  F035         	movff	_sin$5958+1,i2___flmul@a+1
 55938  016B78  C092  F036         	movff	_sin$5958+2,i2___flmul@a+2
 55939  016B7C  C093  F037         	movff	_sin$5958+3,i2___flmul@a+3
 55940  016B80  EC05  F0AE         	call	i2___flmul	;wreg free
 55941  016B84  C030  F088         	movff	?i2___flmul,sin@f
 55942  016B88  C031  F089         	movff	?i2___flmul+1,sin@f+1
 55943  016B8C  C032  F08A         	movff	?i2___flmul+2,sin@f+2
 55944  016B90  C033  F08B         	movff	?i2___flmul+3,sin@f+3
 55945  016B94  0100               	movlb	0	; () banked
 55946  016B96  5198               	movf	sin@sgn& (0+255),w,b
 55947  016B98  B4D8               	btfsc	status,2,c
 55948  016B9A  D013               	goto	i2l2866
 55949                           
 55950                           ; BSR set to: 0
 55951  016B9C  C088  F02C         	movff	sin@f,i2___flneg@f1
 55952  016BA0  C089  F02D         	movff	sin@f+1,i2___flneg@f1+1
 55953  016BA4  C08A  F02E         	movff	sin@f+2,i2___flneg@f1+2
 55954  016BA8  C08B  F02F         	movff	sin@f+3,i2___flneg@f1+3
 55955  016BAC  EC15  F0DD         	call	i2___flneg	;wreg free
 55956  016BB0  C02C  F088         	movff	?i2___flneg,?_sin
 55957  016BB4  C02D  F089         	movff	?i2___flneg+1,?_sin+1
 55958  016BB8  C02E  F08A         	movff	?i2___flneg+2,?_sin+2
 55959  016BBC  C02F  F08B         	movff	?i2___flneg+3,?_sin+3
 55960  016BC0  0012               	return	
 55961  016BC2                     i2l2866:
 55962                           
 55963                           ; BSR set to: 0
 55964  016BC2  C088  F088         	movff	sin@f,?_sin
 55965  016BC6  C089  F089         	movff	sin@f+1,?_sin+1
 55966  016BCA  C08A  F08A         	movff	sin@f+2,?_sin+2
 55967  016BCE  C08B  F08B         	movff	sin@f+3,?_sin+3
 55968  016BD2  0012               	return		;funcret
 55969  016BD4                     __end_of_sin:
 55970                           	opt stack 0
 55971                           tosu	equ	0xFFF
 55972                           tosh	equ	0xFFE
 55973                           tosl	equ	0xFFD
 55974                           pclatu	equ	0xFFB
 55975                           pclath	equ	0xFFA
 55976                           tblptru	equ	0xFF8
 55977                           tblptrh	equ	0xFF7
 55978                           tblptrl	equ	0xFF6
 55979                           tablat	equ	0xFF5
 55980                           prodh	equ	0xFF4
 55981                           prodl	equ	0xFF3
 55982                           intcon	equ	0xFF2
 55983                           indf0	equ	0xFEF
 55984                           postinc0	equ	0xFEE
 55985                           fsr0h	equ	0xFEA
 55986                           fsr0l	equ	0xFE9
 55987                           wreg	equ	0xFE8
 55988                           indf1	equ	0xFE7
 55989                           postdec1	equ	0xFE5
 55990                           plusw1	equ	0xFE3
 55991                           fsr1h	equ	0xFE2
 55992                           fsr1l	equ	0xFE1
 55993                           bsr	equ	0xFE0
 55994                           indf2	equ	0xFDF
 55995                           postinc2	equ	0xFDE
 55996                           postdec2	equ	0xFDD
 55997                           plusw2	equ	0xFDB
 55998                           fsr2h	equ	0xFDA
 55999                           fsr2l	equ	0xFD9
 56000                           status	equ	0xFD8
 56001                           
 56002 ;; *************** function i2___flsub *****************
 56003 ;; Defined at:
 56004 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 56005 ;; Parameters:    Size  Location     Type
 56006 ;;  b               4   32[BANK0 ] unsigned char 
 56007 ;;  a               4   36[BANK0 ] unsigned char 
 56008 ;; Auto vars:     Size  Location     Type
 56009 ;;		None
 56010 ;; Return value:  Size  Location     Type
 56011 ;;                  4   32[BANK0 ] unsigned char 
 56012 ;; Registers used:
 56013 ;;		wreg, status,2, status,0, cstack
 56014 ;; Tracked objects:
 56015 ;;		On entry : 0/0
 56016 ;;		On exit  : 0/0
 56017 ;;		Unchanged: 0/0
 56018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 56019 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56022 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56023 ;;Total ram usage:        8 bytes
 56024 ;; Hardware stack levels used:    1
 56025 ;; Hardware stack levels required when called:    1
 56026 ;; This function calls:
 56027 ;;		i2___fladd
 56028 ;; This function is called by:
 56029 ;;		_sin
 56030 ;;		i2__doprnt
 56031 ;; This function uses a non-reentrant model
 56032 ;;
 56033                           
 56034                           	psect	text185
 56035  01B2AA                     __ptext185:
 56036                           	opt stack 0
 56037  01B2AA                     i2___flsub:
 56038                           	opt stack 6
 56039                           
 56040                           ;incstack = 0
 56041  01B2AA  0E00               	movlw	0
 56042  01B2AC  0100               	movlb	0	; () banked
 56043  01B2AE  1B84               	xorwf	i2___flsub@a& (0+255),f,b
 56044  01B2B0  0E00               	movlw	0
 56045  01B2B2  1B85               	xorwf	(i2___flsub@a+1)& (0+255),f,b
 56046  01B2B4  0E00               	movlw	0
 56047  01B2B6  1B86               	xorwf	(i2___flsub@a+2)& (0+255),f,b
 56048  01B2B8  0E80               	movlw	128
 56049  01B2BA  1B87               	xorwf	(i2___flsub@a+3)& (0+255),f,b
 56050                           
 56051                           ; BSR set to: 0
 56052  01B2BC  C080  F056         	movff	i2___flsub@b,i2___fladd@b
 56053  01B2C0  C081  F057         	movff	i2___flsub@b+1,i2___fladd@b+1
 56054  01B2C4  C082  F058         	movff	i2___flsub@b+2,i2___fladd@b+2
 56055  01B2C8  C083  F059         	movff	i2___flsub@b+3,i2___fladd@b+3
 56056  01B2CC  C084  F05A         	movff	i2___flsub@a,i2___fladd@a
 56057  01B2D0  C085  F05B         	movff	i2___flsub@a+1,i2___fladd@a+1
 56058  01B2D4  C086  F05C         	movff	i2___flsub@a+2,i2___fladd@a+2
 56059  01B2D8  C087  F05D         	movff	i2___flsub@a+3,i2___fladd@a+3
 56060  01B2DC  EC4C  F0B1         	call	i2___fladd	;wreg free
 56061  01B2E0  C056  F080         	movff	?i2___fladd,?i2___flsub
 56062  01B2E4  C057  F081         	movff	?i2___fladd+1,?i2___flsub+1
 56063  01B2E8  C058  F082         	movff	?i2___fladd+2,?i2___flsub+2
 56064  01B2EC  C059  F083         	movff	?i2___fladd+3,?i2___flsub+3
 56065  01B2F0  0012               	return	
 56066  01B2F2                     __end_ofi2___flsub:
 56067                           	opt stack 0
 56068                           tosu	equ	0xFFF
 56069                           tosh	equ	0xFFE
 56070                           tosl	equ	0xFFD
 56071                           pclatu	equ	0xFFB
 56072                           pclath	equ	0xFFA
 56073                           tblptru	equ	0xFF8
 56074                           tblptrh	equ	0xFF7
 56075                           tblptrl	equ	0xFF6
 56076                           tablat	equ	0xFF5
 56077                           prodh	equ	0xFF4
 56078                           prodl	equ	0xFF3
 56079                           intcon	equ	0xFF2
 56080                           indf0	equ	0xFEF
 56081                           postinc0	equ	0xFEE
 56082                           fsr0h	equ	0xFEA
 56083                           fsr0l	equ	0xFE9
 56084                           wreg	equ	0xFE8
 56085                           indf1	equ	0xFE7
 56086                           postdec1	equ	0xFE5
 56087                           plusw1	equ	0xFE3
 56088                           fsr1h	equ	0xFE2
 56089                           fsr1l	equ	0xFE1
 56090                           bsr	equ	0xFE0
 56091                           indf2	equ	0xFDF
 56092                           postinc2	equ	0xFDE
 56093                           postdec2	equ	0xFDD
 56094                           plusw2	equ	0xFDB
 56095                           fsr2h	equ	0xFDA
 56096                           fsr2l	equ	0xFD9
 56097                           status	equ	0xFD8
 56098                           
 56099 ;; *************** function i2___flneg *****************
 56100 ;; Defined at:
 56101 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 56102 ;; Parameters:    Size  Location     Type
 56103 ;;  f1              4   43[COMRAM] unsigned char 
 56104 ;; Auto vars:     Size  Location     Type
 56105 ;;		None
 56106 ;; Return value:  Size  Location     Type
 56107 ;;                  4   43[COMRAM] unsigned char 
 56108 ;; Registers used:
 56109 ;;		wreg, status,2, status,0
 56110 ;; Tracked objects:
 56111 ;;		On entry : 0/0
 56112 ;;		On exit  : 0/0
 56113 ;;		Unchanged: 0/0
 56114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 56115 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56118 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56119 ;;Total ram usage:        4 bytes
 56120 ;; Hardware stack levels used:    1
 56121 ;; This function calls:
 56122 ;;		Nothing
 56123 ;; This function is called by:
 56124 ;;		_peakToRMS
 56125 ;;		_ADC_PostProcessingCallback
 56126 ;;		_acos
 56127 ;;		_asin
 56128 ;;		_atan
 56129 ;;		_fabs
 56130 ;;		_sin
 56131 ;;		i2__doprnt
 56132 ;; This function uses a non-reentrant model
 56133 ;;
 56134                           
 56135                           	psect	text186
 56136  01BA2A                     __ptext186:
 56137                           	opt stack 0
 56138  01BA2A                     i2___flneg:
 56139                           	opt stack 7
 56140                           
 56141                           ;incstack = 0
 56142  01BA2A  502C               	movf	i2___flneg@f1,w,c
 56143  01BA2C  102D               	iorwf	i2___flneg@f1+1,w,c
 56144  01BA2E  102E               	iorwf	i2___flneg@f1+2,w,c
 56145  01BA30  102F               	iorwf	i2___flneg@f1+3,w,c
 56146  01BA32  B4D8               	btfsc	status,2,c
 56147  01BA34  D008               	goto	i2l2567
 56148  01BA36  0E00               	movlw	0
 56149  01BA38  1A2C               	xorwf	i2___flneg@f1,f,c
 56150  01BA3A  0E00               	movlw	0
 56151  01BA3C  1A2D               	xorwf	i2___flneg@f1+1,f,c
 56152  01BA3E  0E00               	movlw	0
 56153  01BA40  1A2E               	xorwf	i2___flneg@f1+2,f,c
 56154  01BA42  0E80               	movlw	128
 56155  01BA44  1A2F               	xorwf	i2___flneg@f1+3,f,c
 56156  01BA46                     i2l2567:
 56157  01BA46  C02C  F02C         	movff	i2___flneg@f1,?i2___flneg
 56158  01BA4A  C02D  F02D         	movff	i2___flneg@f1+1,?i2___flneg+1
 56159  01BA4E  C02E  F02E         	movff	i2___flneg@f1+2,?i2___flneg+2
 56160  01BA52  C02F  F02F         	movff	i2___flneg@f1+3,?i2___flneg+3
 56161  01BA56  0012               	return	
 56162  01BA58                     __end_ofi2___flneg:
 56163                           	opt stack 0
 56164                           tosu	equ	0xFFF
 56165                           tosh	equ	0xFFE
 56166                           tosl	equ	0xFFD
 56167                           pclatu	equ	0xFFB
 56168                           pclath	equ	0xFFA
 56169                           tblptru	equ	0xFF8
 56170                           tblptrh	equ	0xFF7
 56171                           tblptrl	equ	0xFF6
 56172                           tablat	equ	0xFF5
 56173                           prodh	equ	0xFF4
 56174                           prodl	equ	0xFF3
 56175                           intcon	equ	0xFF2
 56176                           indf0	equ	0xFEF
 56177                           postinc0	equ	0xFEE
 56178                           fsr0h	equ	0xFEA
 56179                           fsr0l	equ	0xFE9
 56180                           wreg	equ	0xFE8
 56181                           indf1	equ	0xFE7
 56182                           postdec1	equ	0xFE5
 56183                           plusw1	equ	0xFE3
 56184                           fsr1h	equ	0xFE2
 56185                           fsr1l	equ	0xFE1
 56186                           bsr	equ	0xFE0
 56187                           indf2	equ	0xFDF
 56188                           postinc2	equ	0xFDE
 56189                           postdec2	equ	0xFDD
 56190                           plusw2	equ	0xFDB
 56191                           fsr2h	equ	0xFDA
 56192                           fsr2l	equ	0xFD9
 56193                           status	equ	0xFD8
 56194                           
 56195 ;; *************** function i2___fldiv *****************
 56196 ;; Defined at:
 56197 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 56198 ;; Parameters:    Size  Location     Type
 56199 ;;  b               4   18[COMRAM] unsigned char 
 56200 ;;  a               4   22[COMRAM] unsigned char 
 56201 ;; Auto vars:     Size  Location     Type
 56202 ;;  __fldiv         4   37[COMRAM] unsigned long 
 56203 ;;  __fldiv         4   31[COMRAM] unsigned long 
 56204 ;;  __fldiv         2   35[COMRAM] int 
 56205 ;;  __fldiv         1   42[COMRAM] unsigned char 
 56206 ;;  __fldiv         1   41[COMRAM] unsigned char 
 56207 ;;  __fldiv         1   30[COMRAM] unsigned char 
 56208 ;; Return value:  Size  Location     Type
 56209 ;;                  4   18[COMRAM] unsigned char 
 56210 ;; Registers used:
 56211 ;;		wreg, status,2, status,0
 56212 ;; Tracked objects:
 56213 ;;		On entry : 0/0
 56214 ;;		On exit  : 0/0
 56215 ;;		Unchanged: 0/0
 56216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 56217 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56218 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56219 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56220 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56221 ;;Total ram usage:       25 bytes
 56222 ;; Hardware stack levels used:    1
 56223 ;; This function calls:
 56224 ;;		Nothing
 56225 ;; This function is called by:
 56226 ;;		_peakToRMS
 56227 ;;		_currentMeasuredToPeak
 56228 ;;		_ADC_PostProcessingCallback
 56229 ;;		_asin
 56230 ;;		_atan
 56231 ;;		_sin
 56232 ;; This function uses a non-reentrant model
 56233 ;;
 56234                           
 56235                           	psect	text187
 56236  01741C                     __ptext187:
 56237                           	opt stack 0
 56238  01741C                     i2___fldiv:
 56239                           	opt stack 8
 56240                           
 56241                           ;incstack = 0
 56242  01741C  5016               	movf	i2___fldiv@b+3,w,c
 56243  01741E  0B80               	andlw	128
 56244  017420  6E1F               	movwf	i2___fldiv@sign,c
 56245  017422  5016               	movf	i2___fldiv@b+3,w,c
 56246  017424  2416               	addwf	i2___fldiv@b+3,w,c
 56247  017426  6E2A               	movwf	i2___fldiv@bexp,c
 56248  017428  BE15               	btfsc	i2___fldiv@b+2,7,c
 56249  01742A  802A               	bsf	i2___fldiv@bexp,0,c
 56250  01742C  502A               	movf	i2___fldiv@bexp,w,c
 56251  01742E  B4D8               	btfsc	status,2,c
 56252  017430  D00D               	goto	i2l2928
 56253  017432  282A               	incf	i2___fldiv@bexp,w,c
 56254  017434  A4D8               	btfss	status,2,c
 56255  017436  D008               	goto	i2l2929
 56256  017438  0E00               	movlw	0
 56257  01743A  6E13               	movwf	i2___fldiv@b,c
 56258  01743C  0E00               	movlw	0
 56259  01743E  6E14               	movwf	i2___fldiv@b+1,c
 56260  017440  0E00               	movlw	0
 56261  017442  6E15               	movwf	i2___fldiv@b+2,c
 56262  017444  0E00               	movlw	0
 56263  017446  6E16               	movwf	i2___fldiv@b+3,c
 56264  017448                     i2l2929:
 56265  017448  8E15               	bsf	i2___fldiv@b+2,7,c
 56266  01744A  D006               	goto	L27
 56267  01744C                     i2l2928:
 56268  01744C  0E00               	movlw	0
 56269  01744E  6E13               	movwf	i2___fldiv@b,c
 56270  017450  0E00               	movlw	0
 56271  017452  6E14               	movwf	i2___fldiv@b+1,c
 56272  017454  0E00               	movlw	0
 56273  017456  6E15               	movwf	i2___fldiv@b+2,c
 56274  017458                     L27:
 56275  017458  0E00               	movlw	0
 56276  01745A  6E16               	movwf	i2___fldiv@b+3,c
 56277  01745C  501A               	movf	i2___fldiv@a+3,w,c
 56278  01745E  0B80               	andlw	128
 56279  017460  1A1F               	xorwf	i2___fldiv@sign,f,c
 56280  017462  501A               	movf	i2___fldiv@a+3,w,c
 56281  017464  241A               	addwf	i2___fldiv@a+3,w,c
 56282  017466  6E2B               	movwf	i2___fldiv@aexp,c
 56283  017468  BE19               	btfsc	i2___fldiv@a+2,7,c
 56284  01746A  802B               	bsf	i2___fldiv@aexp,0,c
 56285  01746C  502B               	movf	i2___fldiv@aexp,w,c
 56286  01746E  B4D8               	btfsc	status,2,c
 56287  017470  D00D               	goto	i2l2932
 56288  017472  282B               	incf	i2___fldiv@aexp,w,c
 56289  017474  A4D8               	btfss	status,2,c
 56290  017476  D008               	goto	i2l2933
 56291  017478  0E00               	movlw	0
 56292  01747A  6E17               	movwf	i2___fldiv@a,c
 56293  01747C  0E00               	movlw	0
 56294  01747E  6E18               	movwf	i2___fldiv@a+1,c
 56295  017480  0E00               	movlw	0
 56296  017482  6E19               	movwf	i2___fldiv@a+2,c
 56297  017484  0E00               	movlw	0
 56298  017486  6E1A               	movwf	i2___fldiv@a+3,c
 56299  017488                     i2l2933:
 56300  017488  8E19               	bsf	i2___fldiv@a+2,7,c
 56301  01748A  D006               	goto	L28
 56302  01748C                     i2l2932:
 56303  01748C  0E00               	movlw	0
 56304  01748E  6E17               	movwf	i2___fldiv@a,c
 56305  017490  0E00               	movlw	0
 56306  017492  6E18               	movwf	i2___fldiv@a+1,c
 56307  017494  0E00               	movlw	0
 56308  017496  6E19               	movwf	i2___fldiv@a+2,c
 56309  017498                     L28:
 56310  017498  0E00               	movlw	0
 56311  01749A  6E1A               	movwf	i2___fldiv@a+3,c
 56312  01749C  5017               	movf	i2___fldiv@a,w,c
 56313  01749E  1018               	iorwf	i2___fldiv@a+1,w,c
 56314  0174A0  1019               	iorwf	i2___fldiv@a+2,w,c
 56315  0174A2  101A               	iorwf	i2___fldiv@a+3,w,c
 56316  0174A4  A4D8               	btfss	status,2,c
 56317  0174A6  D015               	goto	i2l2935
 56318  0174A8  0E00               	movlw	0
 56319  0174AA  6E13               	movwf	i2___fldiv@b,c
 56320  0174AC  0E00               	movlw	0
 56321  0174AE  6E14               	movwf	i2___fldiv@b+1,c
 56322  0174B0  0E00               	movlw	0
 56323  0174B2  6E15               	movwf	i2___fldiv@b+2,c
 56324  0174B4  0E00               	movlw	0
 56325  0174B6  6E16               	movwf	i2___fldiv@b+3,c
 56326  0174B8  0E80               	movlw	128
 56327  0174BA  1215               	iorwf	i2___fldiv@b+2,f,c
 56328  0174BC  0E7F               	movlw	127
 56329  0174BE  1216               	iorwf	i2___fldiv@b+3,f,c
 56330  0174C0  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 56331  0174C4  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 56332  0174C8  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 56333  0174CC  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 56334  0174D0  0012               	return	
 56335  0174D2                     i2l2935:
 56336  0174D2  502A               	movf	i2___fldiv@bexp,w,c
 56337  0174D4  A4D8               	btfss	status,2,c
 56338  0174D6  D011               	goto	i2l2937
 56339  0174D8  0E00               	movlw	0
 56340  0174DA  6E13               	movwf	i2___fldiv@b,c
 56341  0174DC  0E00               	movlw	0
 56342  0174DE  6E14               	movwf	i2___fldiv@b+1,c
 56343  0174E0  0E00               	movlw	0
 56344  0174E2  6E15               	movwf	i2___fldiv@b+2,c
 56345  0174E4  0E00               	movlw	0
 56346  0174E6  6E16               	movwf	i2___fldiv@b+3,c
 56347  0174E8  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 56348  0174EC  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 56349  0174F0  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 56350  0174F4  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 56351  0174F8  0012               	return	
 56352  0174FA                     i2l2937:
 56353  0174FA  502B               	movf	i2___fldiv@aexp,w,c
 56354  0174FC  6E1B               	movwf	??i2___fldiv& (0+255),c
 56355  0174FE  6A1C               	clrf	(??i2___fldiv+1)& (0+255),c
 56356  017500  1E1B               	comf	??i2___fldiv,f,c
 56357  017502  1E1C               	comf	??i2___fldiv+1,f,c
 56358  017504  4A1B               	infsnz	??i2___fldiv,f,c
 56359  017506  2A1C               	incf	??i2___fldiv+1,f,c
 56360  017508  502A               	movf	i2___fldiv@bexp,w,c
 56361  01750A  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 56362  01750C  6A1E               	clrf	(??i2___fldiv+3)& (0+255),c
 56363  01750E  501B               	movf	??i2___fldiv,w,c
 56364  017510  261D               	addwf	??i2___fldiv+2,f,c
 56365  017512  501C               	movf	??i2___fldiv+1,w,c
 56366  017514  221E               	addwfc	??i2___fldiv+3,f,c
 56367  017516  0E7F               	movlw	127
 56368  017518  241D               	addwf	??i2___fldiv+2,w,c
 56369  01751A  6E24               	movwf	i2___fldiv@new_exp,c
 56370  01751C  0E00               	movlw	0
 56371  01751E  201E               	addwfc	??i2___fldiv+3,w,c
 56372  017520  6E25               	movwf	i2___fldiv@new_exp+1,c
 56373  017522  C013  F020         	movff	i2___fldiv@b,i2___fldiv@rem
 56374  017526  C014  F021         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 56375  01752A  C015  F022         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 56376  01752E  C016  F023         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 56377  017532  0E00               	movlw	0
 56378  017534  6E13               	movwf	i2___fldiv@b,c
 56379  017536  0E00               	movlw	0
 56380  017538  6E14               	movwf	i2___fldiv@b+1,c
 56381  01753A  0E00               	movlw	0
 56382  01753C  6E15               	movwf	i2___fldiv@b+2,c
 56383  01753E  0E00               	movlw	0
 56384  017540  6E16               	movwf	i2___fldiv@b+3,c
 56385  017542  0E00               	movlw	0
 56386  017544  6E26               	movwf	i2___fldiv@grs,c
 56387  017546  0E00               	movlw	0
 56388  017548  6E27               	movwf	i2___fldiv@grs+1,c
 56389  01754A  0E00               	movlw	0
 56390  01754C  6E28               	movwf	i2___fldiv@grs+2,c
 56391  01754E  0E00               	movlw	0
 56392  017550  6E29               	movwf	i2___fldiv@grs+3,c
 56393  017552  0E00               	movlw	0
 56394  017554  6E2B               	movwf	i2___fldiv@aexp,c
 56395  017556  D028               	goto	i2l2938
 56396  017558  502B               	movf	i2___fldiv@aexp,w,c
 56397  01755A  B4D8               	btfsc	status,2,c
 56398  01755C  D011               	goto	i2l2940
 56399  01755E  90D8               	bcf	status,0,c
 56400  017560  3620               	rlcf	i2___fldiv@rem,f,c
 56401  017562  3621               	rlcf	i2___fldiv@rem+1,f,c
 56402  017564  3622               	rlcf	i2___fldiv@rem+2,f,c
 56403  017566  3623               	rlcf	i2___fldiv@rem+3,f,c
 56404  017568  90D8               	bcf	status,0,c
 56405  01756A  3613               	rlcf	i2___fldiv@b,f,c
 56406  01756C  3614               	rlcf	i2___fldiv@b+1,f,c
 56407  01756E  3615               	rlcf	i2___fldiv@b+2,f,c
 56408  017570  3616               	rlcf	i2___fldiv@b+3,f,c
 56409  017572  BE29               	btfsc	i2___fldiv@grs+3,7,c
 56410  017574  8013               	bsf	i2___fldiv@b,0,c
 56411  017576  90D8               	bcf	status,0,c
 56412  017578  3626               	rlcf	i2___fldiv@grs,f,c
 56413  01757A  3627               	rlcf	i2___fldiv@grs+1,f,c
 56414  01757C  3628               	rlcf	i2___fldiv@grs+2,f,c
 56415  01757E  3629               	rlcf	i2___fldiv@grs+3,f,c
 56416  017580                     i2l2940:
 56417  017580  5017               	movf	i2___fldiv@a,w,c
 56418  017582  5C20               	subwf	i2___fldiv@rem,w,c
 56419  017584  5018               	movf	i2___fldiv@a+1,w,c
 56420  017586  5821               	subwfb	i2___fldiv@rem+1,w,c
 56421  017588  5019               	movf	i2___fldiv@a+2,w,c
 56422  01758A  5822               	subwfb	i2___fldiv@rem+2,w,c
 56423  01758C  501A               	movf	i2___fldiv@a+3,w,c
 56424  01758E  5823               	subwfb	i2___fldiv@rem+3,w,c
 56425  017590  A0D8               	btfss	status,0,c
 56426  017592  D009               	goto	i2l2942
 56427  017594  8C29               	bsf	i2___fldiv@grs+3,6,c
 56428  017596  5017               	movf	i2___fldiv@a,w,c
 56429  017598  5E20               	subwf	i2___fldiv@rem,f,c
 56430  01759A  5018               	movf	i2___fldiv@a+1,w,c
 56431  01759C  5A21               	subwfb	i2___fldiv@rem+1,f,c
 56432  01759E  5019               	movf	i2___fldiv@a+2,w,c
 56433  0175A0  5A22               	subwfb	i2___fldiv@rem+2,f,c
 56434  0175A2  501A               	movf	i2___fldiv@a+3,w,c
 56435  0175A4  5A23               	subwfb	i2___fldiv@rem+3,f,c
 56436  0175A6                     i2l2942:
 56437  0175A6  2A2B               	incf	i2___fldiv@aexp,f,c
 56438  0175A8                     i2l2938:
 56439  0175A8  0E19               	movlw	25
 56440  0175AA  642B               	cpfsgt	i2___fldiv@aexp,c
 56441  0175AC  D7D5               	goto	i2l2939
 56442  0175AE  5020               	movf	i2___fldiv@rem,w,c
 56443  0175B0  1021               	iorwf	i2___fldiv@rem+1,w,c
 56444  0175B2  1022               	iorwf	i2___fldiv@rem+2,w,c
 56445  0175B4  1023               	iorwf	i2___fldiv@rem+3,w,c
 56446  0175B6  B4D8               	btfsc	status,2,c
 56447  0175B8  D011               	goto	i2l2945
 56448  0175BA  8026               	bsf	i2___fldiv@grs,0,c
 56449  0175BC  D00F               	goto	i2l2945
 56450  0175BE  90D8               	bcf	status,0,c
 56451  0175C0  3613               	rlcf	i2___fldiv@b,f,c
 56452  0175C2  3614               	rlcf	i2___fldiv@b+1,f,c
 56453  0175C4  3615               	rlcf	i2___fldiv@b+2,f,c
 56454  0175C6  3616               	rlcf	i2___fldiv@b+3,f,c
 56455  0175C8  BE29               	btfsc	i2___fldiv@grs+3,7,c
 56456  0175CA  8013               	bsf	i2___fldiv@b,0,c
 56457  0175CC  90D8               	bcf	status,0,c
 56458  0175CE  3626               	rlcf	i2___fldiv@grs,f,c
 56459  0175D0  3627               	rlcf	i2___fldiv@grs+1,f,c
 56460  0175D2  3628               	rlcf	i2___fldiv@grs+2,f,c
 56461  0175D4  3629               	rlcf	i2___fldiv@grs+3,f,c
 56462  0175D6  0624               	decf	i2___fldiv@new_exp,f,c
 56463  0175D8  A0D8               	btfss	status,0,c
 56464  0175DA  0625               	decf	i2___fldiv@new_exp+1,f,c
 56465  0175DC                     i2l2945:
 56466  0175DC  AE15               	btfss	i2___fldiv@b+2,7,c
 56467  0175DE  D7EF               	goto	i2l2946
 56468  0175E0  0E00               	movlw	0
 56469  0175E2  6E2B               	movwf	i2___fldiv@aexp,c
 56470  0175E4  AE29               	btfss	i2___fldiv@grs+3,7,c
 56471  0175E6  D016               	goto	i2l2952
 56472  0175E8  0EFF               	movlw	255
 56473  0175EA  1426               	andwf	i2___fldiv@grs,w,c
 56474  0175EC  6E1B               	movwf	??i2___fldiv& (0+255),c
 56475  0175EE  0EFF               	movlw	255
 56476  0175F0  1427               	andwf	i2___fldiv@grs+1,w,c
 56477  0175F2  6E1C               	movwf	(??i2___fldiv+1)& (0+255),c
 56478  0175F4  0EFF               	movlw	255
 56479  0175F6  1428               	andwf	i2___fldiv@grs+2,w,c
 56480  0175F8  6E1D               	movwf	(??i2___fldiv+2)& (0+255),c
 56481  0175FA  0E7F               	movlw	127
 56482  0175FC  1429               	andwf	i2___fldiv@grs+3,w,c
 56483  0175FE  6E1E               	movwf	(??i2___fldiv+3)& (0+255),c
 56484  017600  501B               	movf	??i2___fldiv,w,c
 56485  017602  101C               	iorwf	??i2___fldiv+1,w,c
 56486  017604  101D               	iorwf	??i2___fldiv+2,w,c
 56487  017606  101E               	iorwf	??i2___fldiv+3,w,c
 56488  017608  A4D8               	btfss	status,2,c
 56489  01760A  D002               	goto	i2u1130_40
 56490  01760C  A013               	btfss	i2___fldiv@b,0,c
 56491  01760E  D002               	goto	i2l2952
 56492  017610                     i2u1130_40:
 56493  017610  0E01               	movlw	1
 56494  017612  6E2B               	movwf	i2___fldiv@aexp,c
 56495  017614                     i2l2952:
 56496  017614  502B               	movf	i2___fldiv@aexp,w,c
 56497  017616  B4D8               	btfsc	status,2,c
 56498  017618  D01F               	goto	i2l2954
 56499  01761A  0E01               	movlw	1
 56500  01761C  2613               	addwf	i2___fldiv@b,f,c
 56501  01761E  0E00               	movlw	0
 56502  017620  2214               	addwfc	i2___fldiv@b+1,f,c
 56503  017622  2215               	addwfc	i2___fldiv@b+2,f,c
 56504  017624  2216               	addwfc	i2___fldiv@b+3,f,c
 56505  017626  A016               	btfss	i2___fldiv@b+3,0,c
 56506  017628  D017               	goto	i2l2954
 56507  01762A  C013  F01B         	movff	i2___fldiv@b,??i2___fldiv
 56508  01762E  C014  F01C         	movff	i2___fldiv@b+1,??i2___fldiv+1
 56509  017632  C015  F01D         	movff	i2___fldiv@b+2,??i2___fldiv+2
 56510  017636  C016  F01E         	movff	i2___fldiv@b+3,??i2___fldiv+3
 56511  01763A  341E               	rlcf	??i2___fldiv+3,w,c
 56512  01763C  321E               	rrcf	??i2___fldiv+3,f,c
 56513  01763E  321D               	rrcf	??i2___fldiv+2,f,c
 56514  017640  321C               	rrcf	??i2___fldiv+1,f,c
 56515  017642  321B               	rrcf	??i2___fldiv,f,c
 56516  017644  C01B  F013         	movff	??i2___fldiv,i2___fldiv@b
 56517  017648  C01C  F014         	movff	??i2___fldiv+1,i2___fldiv@b+1
 56518  01764C  C01D  F015         	movff	??i2___fldiv+2,i2___fldiv@b+2
 56519  017650  C01E  F016         	movff	??i2___fldiv+3,i2___fldiv@b+3
 56520  017654  4A24               	infsnz	i2___fldiv@new_exp,f,c
 56521  017656  2A25               	incf	i2___fldiv@new_exp+1,f,c
 56522  017658                     i2l2954:
 56523  017658  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 56524  01765A  D010               	goto	i2l2955
 56525  01765C  5025               	movf	i2___fldiv@new_exp+1,w,c
 56526  01765E  E103               	bnz	i2u1133_40
 56527  017660  2824               	incf	i2___fldiv@new_exp,w,c
 56528  017662  A0D8               	btfss	status,0,c
 56529  017664  D00B               	goto	i2l2955
 56530  017666                     i2u1133_40:
 56531  017666  0E00               	movlw	0
 56532  017668  6E25               	movwf	i2___fldiv@new_exp+1,c
 56533  01766A  6824               	setf	i2___fldiv@new_exp,c
 56534  01766C  0E00               	movlw	0
 56535  01766E  6E13               	movwf	i2___fldiv@b,c
 56536  017670  0E00               	movlw	0
 56537  017672  6E14               	movwf	i2___fldiv@b+1,c
 56538  017674  0E00               	movlw	0
 56539  017676  6E15               	movwf	i2___fldiv@b+2,c
 56540  017678  0E00               	movlw	0
 56541  01767A  6E16               	movwf	i2___fldiv@b+3,c
 56542  01767C                     i2l2955:
 56543  01767C  BE25               	btfsc	i2___fldiv@new_exp+1,7,c
 56544  01767E  D005               	goto	i2u1134_40
 56545  017680  5025               	movf	i2___fldiv@new_exp+1,w,c
 56546  017682  E111               	bnz	i2l10579
 56547  017684  0424               	decf	i2___fldiv@new_exp,w,c
 56548  017686  B0D8               	btfsc	status,0,c
 56549  017688  D00E               	goto	i2l2956
 56550  01768A                     i2u1134_40:
 56551  01768A  0E00               	movlw	0
 56552  01768C  6E25               	movwf	i2___fldiv@new_exp+1,c
 56553  01768E  0E00               	movlw	0
 56554  017690  6E24               	movwf	i2___fldiv@new_exp,c
 56555  017692  0E00               	movlw	0
 56556  017694  6E13               	movwf	i2___fldiv@b,c
 56557  017696  0E00               	movlw	0
 56558  017698  6E14               	movwf	i2___fldiv@b+1,c
 56559  01769A  0E00               	movlw	0
 56560  01769C  6E15               	movwf	i2___fldiv@b+2,c
 56561  01769E  0E00               	movlw	0
 56562  0176A0  6E16               	movwf	i2___fldiv@b+3,c
 56563  0176A2  0E00               	movlw	0
 56564  0176A4  6E1F               	movwf	i2___fldiv@sign,c
 56565  0176A6                     i2l2956:
 56566  0176A6                     i2l10579:
 56567  0176A6  C024  F02A         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 56568  0176AA  A02A               	btfss	i2___fldiv@bexp,0,c
 56569  0176AC  D002               	goto	i2l2957
 56570  0176AE  8E15               	bsf	i2___fldiv@b+2,7,c
 56571  0176B0  D001               	goto	i2l2958
 56572  0176B2                     i2l2957:
 56573  0176B2  9E15               	bcf	i2___fldiv@b+2,7,c
 56574  0176B4                     i2l2958:
 56575  0176B4  90D8               	bcf	status,0,c
 56576  0176B6  302A               	rrcf	i2___fldiv@bexp,w,c
 56577  0176B8  6E16               	movwf	i2___fldiv@b+3,c
 56578  0176BA  501F               	movf	i2___fldiv@sign,w,c
 56579  0176BC  1216               	iorwf	i2___fldiv@b+3,f,c
 56580  0176BE  C013  F013         	movff	i2___fldiv@b,?i2___fldiv
 56581  0176C2  C014  F014         	movff	i2___fldiv@b+1,?i2___fldiv+1
 56582  0176C6  C015  F015         	movff	i2___fldiv@b+2,?i2___fldiv+2
 56583  0176CA  C016  F016         	movff	i2___fldiv@b+3,?i2___fldiv+3
 56584  0176CE  0012               	return	
 56585  0176D0                     __end_ofi2___fldiv:
 56586                           	opt stack 0
 56587                           tosu	equ	0xFFF
 56588                           tosh	equ	0xFFE
 56589                           tosl	equ	0xFFD
 56590                           pclatu	equ	0xFFB
 56591                           pclath	equ	0xFFA
 56592                           tblptru	equ	0xFF8
 56593                           tblptrh	equ	0xFF7
 56594                           tblptrl	equ	0xFF6
 56595                           tablat	equ	0xFF5
 56596                           prodh	equ	0xFF4
 56597                           prodl	equ	0xFF3
 56598                           intcon	equ	0xFF2
 56599                           indf0	equ	0xFEF
 56600                           postinc0	equ	0xFEE
 56601                           fsr0h	equ	0xFEA
 56602                           fsr0l	equ	0xFE9
 56603                           wreg	equ	0xFE8
 56604                           indf1	equ	0xFE7
 56605                           postdec1	equ	0xFE5
 56606                           plusw1	equ	0xFE3
 56607                           fsr1h	equ	0xFE2
 56608                           fsr1l	equ	0xFE1
 56609                           bsr	equ	0xFE0
 56610                           indf2	equ	0xFDF
 56611                           postinc2	equ	0xFDE
 56612                           postdec2	equ	0xFDD
 56613                           plusw2	equ	0xFDB
 56614                           fsr2h	equ	0xFDA
 56615                           fsr2l	equ	0xFD9
 56616                           status	equ	0xFD8
 56617                           
 56618 ;; *************** function _floor *****************
 56619 ;; Defined at:
 56620 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 56621 ;; Parameters:    Size  Location     Type
 56622 ;;  x               4   22[BANK0 ] unsigned char 
 56623 ;; Auto vars:     Size  Location     Type
 56624 ;;  i               4   26[BANK0 ] unsigned char 
 56625 ;;  expon           2   30[BANK0 ] int 
 56626 ;; Return value:  Size  Location     Type
 56627 ;;                  4   22[BANK0 ] int 
 56628 ;; Registers used:
 56629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 56630 ;; Tracked objects:
 56631 ;;		On entry : 0/0
 56632 ;;		On exit  : 0/0
 56633 ;;		Unchanged: 0/0
 56634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 56635 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56636 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56638 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56639 ;;Total ram usage:       10 bytes
 56640 ;; Hardware stack levels used:    1
 56641 ;; Hardware stack levels required when called:    1
 56642 ;; This function calls:
 56643 ;;		_frexp
 56644 ;;		i2___fladd
 56645 ;;		i2___flge
 56646 ;;		i2___fltol
 56647 ;;		i2___xxtofl
 56648 ;; This function is called by:
 56649 ;;		_sin
 56650 ;; This function uses a non-reentrant model
 56651 ;;
 56652                           
 56653                           	psect	text188
 56654  0193DE                     __ptext188:
 56655                           	opt stack 0
 56656  0193DE                     _floor:
 56657                           	opt stack 5
 56658                           
 56659                           ;incstack = 0
 56660  0193DE  C076  F001         	movff	floor@x,frexp@value
 56661  0193E2  C077  F002         	movff	floor@x+1,frexp@value+1
 56662  0193E6  C078  F003         	movff	floor@x+2,frexp@value+2
 56663  0193EA  C079  F004         	movff	floor@x+3,frexp@value+3
 56664  0193EE  0E7E               	movlw	low floor@expon
 56665  0193F0  6E05               	movwf	frexp@eptr,c
 56666  0193F2  0E00               	movlw	high floor@expon
 56667  0193F4  6E06               	movwf	frexp@eptr+1,c
 56668  0193F6  EC65  F0D3         	call	_frexp	;wreg free
 56669  0193FA  0100               	movlb	0	; () banked
 56670  0193FC  AF7F               	btfss	(floor@expon+1)& (0+255),7,b
 56671  0193FE  D014               	goto	i2l3092
 56672                           
 56673                           ; BSR set to: 0
 56674  019400  AF79               	btfss	(floor@x+3)& (0+255),7,b
 56675  019402  D009               	goto	i2l3093
 56676                           
 56677                           ; BSR set to: 0
 56678  019404  0E00               	movlw	0
 56679  019406  6F76               	movwf	?_floor& (0+255),b
 56680  019408  0E00               	movlw	0
 56681  01940A  6F77               	movwf	(?_floor+1)& (0+255),b
 56682  01940C  0E80               	movlw	128
 56683  01940E  6F78               	movwf	(?_floor+2)& (0+255),b
 56684  019410  0EBF               	movlw	191
 56685  019412  6F79               	movwf	(?_floor+3)& (0+255),b
 56686                           
 56687                           ; BSR set to: 0
 56688  019414  0012               	return	
 56689  019416                     i2l3093:
 56690                           
 56691                           ; BSR set to: 0
 56692                           
 56693                           ; BSR set to: 0
 56694  019416  0E00               	movlw	0
 56695  019418  6F76               	movwf	?_floor& (0+255),b
 56696  01941A  0E00               	movlw	0
 56697  01941C  6F77               	movwf	(?_floor+1)& (0+255),b
 56698  01941E  0E00               	movlw	0
 56699  019420  6F78               	movwf	(?_floor+2)& (0+255),b
 56700  019422  0E00               	movlw	0
 56701  019424  6F79               	movwf	(?_floor+3)& (0+255),b
 56702                           
 56703                           ; BSR set to: 0
 56704  019426  0012               	return	
 56705  019428                     i2l3092:
 56706                           
 56707                           ; BSR set to: 0
 56708                           
 56709                           ; BSR set to: 0
 56710  019428  517F               	movf	(floor@expon+1)& (0+255),w,b
 56711  01942A  E104               	bnz	i2u2186_40
 56712  01942C  0E1D               	movlw	29
 56713  01942E  5D7E               	subwf	floor@expon& (0+255),w,b
 56714  019430  A0D8               	btfss	status,0,c
 56715  019432  D009               	goto	i2l3095
 56716  019434                     i2u2186_40:
 56717                           
 56718                           ; BSR set to: 0
 56719  019434  C076  F076         	movff	floor@x,?_floor
 56720  019438  C077  F077         	movff	floor@x+1,?_floor+1
 56721  01943C  C078  F078         	movff	floor@x+2,?_floor+2
 56722  019440  C079  F079         	movff	floor@x+3,?_floor+3
 56723  019444  0012               	return	
 56724  019446                     i2l3095:
 56725                           
 56726                           ; BSR set to: 0
 56727                           
 56728                           ; BSR set to: 0
 56729  019446  C076  F06C         	movff	floor@x,i2___fltol@f1
 56730  01944A  C077  F06D         	movff	floor@x+1,i2___fltol@f1+1
 56731  01944E  C078  F06E         	movff	floor@x+2,i2___fltol@f1+2
 56732  019452  C079  F06F         	movff	floor@x+3,i2___fltol@f1+3
 56733  019456  EC6E  F0CC         	call	i2___fltol	;wreg free
 56734  01945A  C06C  F005         	movff	?i2___fltol,i2___xxtofl@val
 56735  01945E  C06D  F006         	movff	?i2___fltol+1,i2___xxtofl@val+1
 56736  019462  C06E  F007         	movff	?i2___fltol+2,i2___xxtofl@val+2
 56737  019466  C06F  F008         	movff	?i2___fltol+3,i2___xxtofl@val+3
 56738  01946A  0E01               	movlw	1
 56739  01946C  EC92  F0C4         	call	i2___xxtofl
 56740  019470  C005  F07A         	movff	?i2___xxtofl,floor@i
 56741  019474  C006  F07B         	movff	?i2___xxtofl+1,floor@i+1
 56742  019478  C007  F07C         	movff	?i2___xxtofl+2,floor@i+2
 56743  01947C  C008  F07D         	movff	?i2___xxtofl+3,floor@i+3
 56744  019480  C076  F034         	movff	floor@x,i2___flge@ff1
 56745  019484  C077  F035         	movff	floor@x+1,i2___flge@ff1+1
 56746  019488  C078  F036         	movff	floor@x+2,i2___flge@ff1+2
 56747  01948C  C079  F037         	movff	floor@x+3,i2___flge@ff1+3
 56748  019490  C07A  F038         	movff	floor@i,i2___flge@ff2
 56749  019494  C07B  F039         	movff	floor@i+1,i2___flge@ff2+1
 56750  019498  C07C  F03A         	movff	floor@i+2,i2___flge@ff2+2
 56751  01949C  C07D  F03B         	movff	floor@i+3,i2___flge@ff2+3
 56752  0194A0  EC5F  F0C9         	call	i2___flge	;wreg free
 56753  0194A4  B0D8               	btfsc	status,0,c
 56754  0194A6  D01B               	goto	i2l3096
 56755  0194A8  C07A  F056         	movff	floor@i,i2___fladd@b
 56756  0194AC  C07B  F057         	movff	floor@i+1,i2___fladd@b+1
 56757  0194B0  C07C  F058         	movff	floor@i+2,i2___fladd@b+2
 56758  0194B4  C07D  F059         	movff	floor@i+3,i2___fladd@b+3
 56759  0194B8  0E00               	movlw	0
 56760  0194BA  6E5A               	movwf	i2___fladd@a,c
 56761  0194BC  0E00               	movlw	0
 56762  0194BE  6E5B               	movwf	i2___fladd@a+1,c
 56763  0194C0  0E80               	movlw	128
 56764  0194C2  6E5C               	movwf	i2___fladd@a+2,c
 56765  0194C4  0EBF               	movlw	191
 56766  0194C6  6E5D               	movwf	i2___fladd@a+3,c
 56767  0194C8  EC4C  F0B1         	call	i2___fladd	;wreg free
 56768  0194CC  C056  F076         	movff	?i2___fladd,?_floor
 56769  0194D0  C057  F077         	movff	?i2___fladd+1,?_floor+1
 56770  0194D4  C058  F078         	movff	?i2___fladd+2,?_floor+2
 56771  0194D8  C059  F079         	movff	?i2___fladd+3,?_floor+3
 56772  0194DC  0012               	return	
 56773  0194DE                     i2l3096:
 56774  0194DE  C07A  F076         	movff	floor@i,?_floor
 56775  0194E2  C07B  F077         	movff	floor@i+1,?_floor+1
 56776  0194E6  C07C  F078         	movff	floor@i+2,?_floor+2
 56777  0194EA  C07D  F079         	movff	floor@i+3,?_floor+3
 56778  0194EE  0012               	return		;funcret
 56779  0194F0                     __end_of_floor:
 56780                           	opt stack 0
 56781                           tosu	equ	0xFFF
 56782                           tosh	equ	0xFFE
 56783                           tosl	equ	0xFFD
 56784                           pclatu	equ	0xFFB
 56785                           pclath	equ	0xFFA
 56786                           tblptru	equ	0xFF8
 56787                           tblptrh	equ	0xFF7
 56788                           tblptrl	equ	0xFF6
 56789                           tablat	equ	0xFF5
 56790                           prodh	equ	0xFF4
 56791                           prodl	equ	0xFF3
 56792                           intcon	equ	0xFF2
 56793                           indf0	equ	0xFEF
 56794                           postinc0	equ	0xFEE
 56795                           fsr0h	equ	0xFEA
 56796                           fsr0l	equ	0xFE9
 56797                           wreg	equ	0xFE8
 56798                           indf1	equ	0xFE7
 56799                           postdec1	equ	0xFE5
 56800                           plusw1	equ	0xFE3
 56801                           fsr1h	equ	0xFE2
 56802                           fsr1l	equ	0xFE1
 56803                           bsr	equ	0xFE0
 56804                           indf2	equ	0xFDF
 56805                           postinc2	equ	0xFDE
 56806                           postdec2	equ	0xFDD
 56807                           plusw2	equ	0xFDB
 56808                           fsr2h	equ	0xFDA
 56809                           fsr2l	equ	0xFD9
 56810                           status	equ	0xFD8
 56811                           
 56812 ;; *************** function i2___xxtofl *****************
 56813 ;; Defined at:
 56814 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 56815 ;; Parameters:    Size  Location     Type
 56816 ;;  sign            1    wreg     unsigned char 
 56817 ;;  val             4    4[COMRAM] long 
 56818 ;; Auto vars:     Size  Location     Type
 56819 ;;  sign            1   12[COMRAM] unsigned char 
 56820 ;;  __xxtofl        4   14[COMRAM] unsigned long 
 56821 ;;  __xxtofl        1   13[COMRAM] unsigned char 
 56822 ;; Return value:  Size  Location     Type
 56823 ;;                  4    4[COMRAM] unsigned char 
 56824 ;; Registers used:
 56825 ;;		wreg, status,2, status,0
 56826 ;; Tracked objects:
 56827 ;;		On entry : 0/0
 56828 ;;		On exit  : 0/0
 56829 ;;		Unchanged: 0/0
 56830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 56831 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56832 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56833 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56834 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56835 ;;Total ram usage:       14 bytes
 56836 ;; Hardware stack levels used:    1
 56837 ;; This function calls:
 56838 ;;		Nothing
 56839 ;; This function is called by:
 56840 ;;		_ADC_PostProcessingCallback
 56841 ;;		_floor
 56842 ;;		i2__doprnt
 56843 ;; This function uses a non-reentrant model
 56844 ;;
 56845                           
 56846                           	psect	text189
 56847  018924                     __ptext189:
 56848                           	opt stack 0
 56849  018924                     i2___xxtofl:
 56850                           	opt stack 7
 56851                           
 56852                           ;incstack = 0
 56853                           ;i2___xxtofl@sign stored from wreg
 56854  018924  6E0D               	movwf	i2___xxtofl@sign,c
 56855  018926  500D               	movf	i2___xxtofl@sign,w,c
 56856  018928  A4D8               	btfss	status,2,c
 56857  01892A  AE08               	btfss	i2___xxtofl@val+3,7,c
 56858  01892C  D01A               	goto	i2l3071
 56859  01892E  C005  F009         	movff	i2___xxtofl@val,??i2___xxtofl
 56860  018932  C006  F00A         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 56861  018936  C007  F00B         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 56862  01893A  C008  F00C         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 56863  01893E  1E09               	comf	??i2___xxtofl,f,c
 56864  018940  1E0A               	comf	??i2___xxtofl+1,f,c
 56865  018942  1E0B               	comf	??i2___xxtofl+2,f,c
 56866  018944  1E0C               	comf	??i2___xxtofl+3,f,c
 56867  018946  2A09               	incf	??i2___xxtofl,f,c
 56868  018948  0E00               	movlw	0
 56869  01894A  220A               	addwfc	??i2___xxtofl+1,f,c
 56870  01894C  220B               	addwfc	??i2___xxtofl+2,f,c
 56871  01894E  220C               	addwfc	??i2___xxtofl+3,f,c
 56872  018950  C009  F00F         	movff	??i2___xxtofl,i2___xxtofl@arg
 56873  018954  C00A  F010         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 56874  018958  C00B  F011         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 56875  01895C  C00C  F012         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 56876  018960  D008               	goto	i2l3072
 56877  018962                     i2l3071:
 56878  018962  C005  F00F         	movff	i2___xxtofl@val,i2___xxtofl@arg
 56879  018966  C006  F010         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 56880  01896A  C007  F011         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 56881  01896E  C008  F012         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 56882  018972                     i2l3072:
 56883  018972  5005               	movf	i2___xxtofl@val,w,c
 56884  018974  1006               	iorwf	i2___xxtofl@val+1,w,c
 56885  018976  1007               	iorwf	i2___xxtofl@val+2,w,c
 56886  018978  1008               	iorwf	i2___xxtofl@val+3,w,c
 56887  01897A  A4D8               	btfss	status,2,c
 56888  01897C  D009               	goto	i2l3073
 56889  01897E  0E00               	movlw	0
 56890  018980  6E05               	movwf	?i2___xxtofl,c
 56891  018982  0E00               	movlw	0
 56892  018984  6E06               	movwf	?i2___xxtofl+1,c
 56893  018986  0E00               	movlw	0
 56894  018988  6E07               	movwf	?i2___xxtofl+2,c
 56895  01898A  0E00               	movlw	0
 56896  01898C  6E08               	movwf	?i2___xxtofl+3,c
 56897  01898E  0012               	return	
 56898  018990                     i2l3073:
 56899  018990  0E96               	movlw	150
 56900  018992  6E0E               	movwf	i2___xxtofl@exp,c
 56901  018994  D006               	goto	i2l3075
 56902  018996  2A0E               	incf	i2___xxtofl@exp,f,c
 56903  018998  90D8               	bcf	status,0,c
 56904  01899A  3212               	rrcf	i2___xxtofl@arg+3,f,c
 56905  01899C  3211               	rrcf	i2___xxtofl@arg+2,f,c
 56906  01899E  3210               	rrcf	i2___xxtofl@arg+1,f,c
 56907  0189A0  320F               	rrcf	i2___xxtofl@arg,f,c
 56908  0189A2                     i2l3075:
 56909  0189A2  0E00               	movlw	0
 56910  0189A4  140F               	andwf	i2___xxtofl@arg,w,c
 56911  0189A6  6E09               	movwf	??i2___xxtofl& (0+255),c
 56912  0189A8  0E00               	movlw	0
 56913  0189AA  1410               	andwf	i2___xxtofl@arg+1,w,c
 56914  0189AC  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 56915  0189AE  0E00               	movlw	0
 56916  0189B0  1411               	andwf	i2___xxtofl@arg+2,w,c
 56917  0189B2  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 56918  0189B4  0EFE               	movlw	254
 56919  0189B6  1412               	andwf	i2___xxtofl@arg+3,w,c
 56920  0189B8  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 56921  0189BA  5009               	movf	??i2___xxtofl,w,c
 56922  0189BC  100A               	iorwf	??i2___xxtofl+1,w,c
 56923  0189BE  100B               	iorwf	??i2___xxtofl+2,w,c
 56924  0189C0  100C               	iorwf	??i2___xxtofl+3,w,c
 56925  0189C2  B4D8               	btfsc	status,2,c
 56926  0189C4  D00D               	goto	i2l3078
 56927  0189C6  D7E7               	goto	i2l3076
 56928  0189C8  2A0E               	incf	i2___xxtofl@exp,f,c
 56929  0189CA  0E01               	movlw	1
 56930  0189CC  260F               	addwf	i2___xxtofl@arg,f,c
 56931  0189CE  0E00               	movlw	0
 56932  0189D0  2210               	addwfc	i2___xxtofl@arg+1,f,c
 56933  0189D2  2211               	addwfc	i2___xxtofl@arg+2,f,c
 56934  0189D4  2212               	addwfc	i2___xxtofl@arg+3,f,c
 56935  0189D6  90D8               	bcf	status,0,c
 56936  0189D8  3212               	rrcf	i2___xxtofl@arg+3,f,c
 56937  0189DA  3211               	rrcf	i2___xxtofl@arg+2,f,c
 56938  0189DC  3210               	rrcf	i2___xxtofl@arg+1,f,c
 56939  0189DE  320F               	rrcf	i2___xxtofl@arg,f,c
 56940  0189E0                     i2l3078:
 56941  0189E0  0E00               	movlw	0
 56942  0189E2  140F               	andwf	i2___xxtofl@arg,w,c
 56943  0189E4  6E09               	movwf	??i2___xxtofl& (0+255),c
 56944  0189E6  0E00               	movlw	0
 56945  0189E8  1410               	andwf	i2___xxtofl@arg+1,w,c
 56946  0189EA  6E0A               	movwf	(??i2___xxtofl+1)& (0+255),c
 56947  0189EC  0E00               	movlw	0
 56948  0189EE  1411               	andwf	i2___xxtofl@arg+2,w,c
 56949  0189F0  6E0B               	movwf	(??i2___xxtofl+2)& (0+255),c
 56950  0189F2  0EFF               	movlw	255
 56951  0189F4  1412               	andwf	i2___xxtofl@arg+3,w,c
 56952  0189F6  6E0C               	movwf	(??i2___xxtofl+3)& (0+255),c
 56953  0189F8  5009               	movf	??i2___xxtofl,w,c
 56954  0189FA  100A               	iorwf	??i2___xxtofl+1,w,c
 56955  0189FC  100B               	iorwf	??i2___xxtofl+2,w,c
 56956  0189FE  100C               	iorwf	??i2___xxtofl+3,w,c
 56957  018A00  B4D8               	btfsc	status,2,c
 56958  018A02  D007               	goto	i2l3081
 56959  018A04  D7E1               	goto	i2l3079
 56960  018A06  060E               	decf	i2___xxtofl@exp,f,c
 56961  018A08  90D8               	bcf	status,0,c
 56962  018A0A  360F               	rlcf	i2___xxtofl@arg,f,c
 56963  018A0C  3610               	rlcf	i2___xxtofl@arg+1,f,c
 56964  018A0E  3611               	rlcf	i2___xxtofl@arg+2,f,c
 56965  018A10  3612               	rlcf	i2___xxtofl@arg+3,f,c
 56966  018A12                     i2l3081:
 56967  018A12  BE11               	btfsc	i2___xxtofl@arg+2,7,c
 56968  018A14  D003               	goto	i2u2164_40
 56969  018A16  0E02               	movlw	2
 56970  018A18  600E               	cpfslt	i2___xxtofl@exp,c
 56971  018A1A  D7F5               	goto	i2l3082
 56972  018A1C                     i2u2164_40:
 56973  018A1C  B00E               	btfsc	i2___xxtofl@exp,0,c
 56974  018A1E  D008               	goto	i2l3086
 56975  018A20  0EFF               	movlw	255
 56976  018A22  160F               	andwf	i2___xxtofl@arg,f,c
 56977  018A24  0EFF               	movlw	255
 56978  018A26  1610               	andwf	i2___xxtofl@arg+1,f,c
 56979  018A28  0E7F               	movlw	127
 56980  018A2A  1611               	andwf	i2___xxtofl@arg+2,f,c
 56981  018A2C  0EFF               	movlw	255
 56982  018A2E  1612               	andwf	i2___xxtofl@arg+3,f,c
 56983  018A30                     i2l3086:
 56984  018A30  90D8               	bcf	status,0,c
 56985  018A32  320E               	rrcf	i2___xxtofl@exp,f,c
 56986  018A34  C00E  F009         	movff	i2___xxtofl@exp,??i2___xxtofl
 56987  018A38  6A0A               	clrf	(??i2___xxtofl+1)& (0+255),c
 56988  018A3A  6A0B               	clrf	(??i2___xxtofl+2)& (0+255),c
 56989  018A3C  6A0C               	clrf	(??i2___xxtofl+3)& (0+255),c
 56990  018A3E  C009  F00C         	movff	??i2___xxtofl,??i2___xxtofl+3
 56991  018A42  6A0B               	clrf	??i2___xxtofl+2,c
 56992  018A44  6A0A               	clrf	??i2___xxtofl+1,c
 56993  018A46  6A09               	clrf	??i2___xxtofl,c
 56994  018A48  5009               	movf	??i2___xxtofl,w,c
 56995  018A4A  120F               	iorwf	i2___xxtofl@arg,f,c
 56996  018A4C  500A               	movf	??i2___xxtofl+1,w,c
 56997  018A4E  1210               	iorwf	i2___xxtofl@arg+1,f,c
 56998  018A50  500B               	movf	??i2___xxtofl+2,w,c
 56999  018A52  1211               	iorwf	i2___xxtofl@arg+2,f,c
 57000  018A54  500C               	movf	??i2___xxtofl+3,w,c
 57001  018A56  1212               	iorwf	i2___xxtofl@arg+3,f,c
 57002  018A58  500D               	movf	i2___xxtofl@sign,w,c
 57003  018A5A  A4D8               	btfss	status,2,c
 57004  018A5C  AE08               	btfss	i2___xxtofl@val+3,7,c
 57005  018A5E  D001               	goto	i2l3087
 57006  018A60  8E12               	bsf	i2___xxtofl@arg+3,7,c
 57007  018A62                     i2l3087:
 57008  018A62  C00F  F005         	movff	i2___xxtofl@arg,?i2___xxtofl
 57009  018A66  C010  F006         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 57010  018A6A  C011  F007         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 57011  018A6E  C012  F008         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 57012  018A72  0012               	return	
 57013  018A74                     __end_ofi2___xxtofl:
 57014                           	opt stack 0
 57015                           tosu	equ	0xFFF
 57016                           tosh	equ	0xFFE
 57017                           tosl	equ	0xFFD
 57018                           pclatu	equ	0xFFB
 57019                           pclath	equ	0xFFA
 57020                           tblptru	equ	0xFF8
 57021                           tblptrh	equ	0xFF7
 57022                           tblptrl	equ	0xFF6
 57023                           tablat	equ	0xFF5
 57024                           prodh	equ	0xFF4
 57025                           prodl	equ	0xFF3
 57026                           intcon	equ	0xFF2
 57027                           indf0	equ	0xFEF
 57028                           postinc0	equ	0xFEE
 57029                           fsr0h	equ	0xFEA
 57030                           fsr0l	equ	0xFE9
 57031                           wreg	equ	0xFE8
 57032                           indf1	equ	0xFE7
 57033                           postdec1	equ	0xFE5
 57034                           plusw1	equ	0xFE3
 57035                           fsr1h	equ	0xFE2
 57036                           fsr1l	equ	0xFE1
 57037                           bsr	equ	0xFE0
 57038                           indf2	equ	0xFDF
 57039                           postinc2	equ	0xFDE
 57040                           postdec2	equ	0xFDD
 57041                           plusw2	equ	0xFDB
 57042                           fsr2h	equ	0xFDA
 57043                           fsr2l	equ	0xFD9
 57044                           status	equ	0xFD8
 57045                           
 57046 ;; *************** function i2___fltol *****************
 57047 ;; Defined at:
 57048 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 57049 ;; Parameters:    Size  Location     Type
 57050 ;;  f1              4   12[BANK0 ] unsigned char 
 57051 ;; Auto vars:     Size  Location     Type
 57052 ;;  __fltol         1   21[BANK0 ] unsigned char 
 57053 ;;  __fltol         1   20[BANK0 ] unsigned char 
 57054 ;; Return value:  Size  Location     Type
 57055 ;;                  4   12[BANK0 ] long 
 57056 ;; Registers used:
 57057 ;;		wreg, status,2, status,0
 57058 ;; Tracked objects:
 57059 ;;		On entry : 0/0
 57060 ;;		On exit  : 0/0
 57061 ;;		Unchanged: 0/0
 57062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 57063 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57064 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57065 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57066 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57067 ;;Total ram usage:       10 bytes
 57068 ;; Hardware stack levels used:    1
 57069 ;; This function calls:
 57070 ;;		Nothing
 57071 ;; This function is called by:
 57072 ;;		_ADC_PostProcessingCallback
 57073 ;;		_floor
 57074 ;;		i2__doprnt
 57075 ;; This function uses a non-reentrant model
 57076 ;;
 57077                           
 57078                           	psect	text190
 57079  0198DC                     __ptext190:
 57080                           	opt stack 0
 57081  0198DC                     i2___fltol:
 57082                           	opt stack 7
 57083                           
 57084                           ;incstack = 0
 57085  0198DC  0100               	movlb	0	; () banked
 57086  0198DE  356E               	rlcf	(i2___fltol@f1+2)& (0+255),w,b
 57087  0198E0  356F               	rlcf	(i2___fltol@f1+3)& (0+255),w,b
 57088  0198E2  6F75               	movwf	i2___fltol@exp1& (0+255),b
 57089  0198E4  5175               	movf	i2___fltol@exp1& (0+255),w,b
 57090  0198E6  A4D8               	btfss	status,2,c
 57091  0198E8  D009               	goto	i2l2590
 57092                           
 57093                           ; BSR set to: 0
 57094  0198EA  0E00               	movlw	0
 57095  0198EC  6F6C               	movwf	?i2___fltol& (0+255),b
 57096  0198EE  0E00               	movlw	0
 57097  0198F0  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 57098  0198F2  0E00               	movlw	0
 57099  0198F4  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 57100  0198F6  0E00               	movlw	0
 57101  0198F8  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 57102                           
 57103                           ; BSR set to: 0
 57104  0198FA  0012               	return	
 57105  0198FC                     i2l2590:
 57106                           
 57107                           ; BSR set to: 0
 57108                           
 57109                           ; BSR set to: 0
 57110  0198FC  C06C  F070         	movff	i2___fltol@f1,??i2___fltol
 57111  019900  C06D  F071         	movff	i2___fltol@f1+1,??i2___fltol+1
 57112  019904  C06E  F072         	movff	i2___fltol@f1+2,??i2___fltol+2
 57113  019908  C06F  F073         	movff	i2___fltol@f1+3,??i2___fltol+3
 57114  01990C  0E20               	movlw	32
 57115  01990E  D005               	goto	i2u2152_40
 57116  019910                     i2u2152_45:
 57117  019910  90D8               	bcf	status,0,c
 57118  019912  3373               	rrcf	(??i2___fltol+3)& (0+255),f,b
 57119  019914  3372               	rrcf	(??i2___fltol+2)& (0+255),f,b
 57120  019916  3371               	rrcf	(??i2___fltol+1)& (0+255),f,b
 57121  019918  3370               	rrcf	??i2___fltol& (0+255),f,b
 57122  01991A                     i2u2152_40:
 57123  01991A  2EE8               	decfsz	wreg,f,c
 57124  01991C  D7F9               	goto	i2u2152_45
 57125  01991E  5170               	movf	??i2___fltol& (0+255),w,b
 57126  019920  6F74               	movwf	i2___fltol@sign1& (0+255),b
 57127                           
 57128                           ; BSR set to: 0
 57129  019922  8F6E               	bsf	(i2___fltol@f1+2)& (0+255),7,b
 57130                           
 57131                           ; BSR set to: 0
 57132  019924  0EFF               	movlw	255
 57133  019926  176C               	andwf	i2___fltol@f1& (0+255),f,b
 57134  019928  0EFF               	movlw	255
 57135  01992A  176D               	andwf	(i2___fltol@f1+1)& (0+255),f,b
 57136  01992C  0EFF               	movlw	255
 57137  01992E  176E               	andwf	(i2___fltol@f1+2)& (0+255),f,b
 57138  019930  0E00               	movlw	0
 57139  019932  176F               	andwf	(i2___fltol@f1+3)& (0+255),f,b
 57140                           
 57141                           ; BSR set to: 0
 57142  019934  0E96               	movlw	150
 57143  019936  5F75               	subwf	i2___fltol@exp1& (0+255),f,b
 57144                           
 57145                           ; BSR set to: 0
 57146  019938  AF75               	btfss	i2___fltol@exp1& (0+255),7,b
 57147  01993A  D016               	goto	i2l2592
 57148                           
 57149                           ; BSR set to: 0
 57150  01993C  5175               	movf	i2___fltol@exp1& (0+255),w,b
 57151  01993E  0A80               	xorlw	128
 57152  019940  0F97               	addlw	151
 57153  019942  B0D8               	btfsc	status,0,c
 57154  019944  D009               	goto	i2l2593
 57155                           
 57156                           ; BSR set to: 0
 57157  019946  0E00               	movlw	0
 57158  019948  6F6C               	movwf	?i2___fltol& (0+255),b
 57159  01994A  0E00               	movlw	0
 57160  01994C  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 57161  01994E  0E00               	movlw	0
 57162  019950  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 57163  019952  0E00               	movlw	0
 57164  019954  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 57165                           
 57166                           ; BSR set to: 0
 57167  019956  0012               	return	
 57168  019958                     i2l2593:
 57169                           
 57170                           ; BSR set to: 0
 57171                           
 57172                           ; BSR set to: 0
 57173                           
 57174                           ; BSR set to: 0
 57175  019958  90D8               	bcf	status,0,c
 57176  01995A  336F               	rrcf	(i2___fltol@f1+3)& (0+255),f,b
 57177  01995C  336E               	rrcf	(i2___fltol@f1+2)& (0+255),f,b
 57178  01995E  336D               	rrcf	(i2___fltol@f1+1)& (0+255),f,b
 57179  019960  336C               	rrcf	i2___fltol@f1& (0+255),f,b
 57180                           
 57181                           ; BSR set to: 0
 57182  019962  3F75               	incfsz	i2___fltol@exp1& (0+255),f,b
 57183  019964  D7F9               	goto	i2l2593
 57184                           
 57185                           ; BSR set to: 0
 57186  019966  D015               	goto	i2u2156_40
 57187  019968                     i2l2592:
 57188                           
 57189                           ; BSR set to: 0
 57190                           
 57191                           ; BSR set to: 0
 57192  019968  0E1F               	movlw	31
 57193  01996A  6575               	cpfsgt	i2___fltol@exp1& (0+255),b
 57194  01996C  D00F               	goto	i2l2598
 57195                           
 57196                           ; BSR set to: 0
 57197  01996E  0E00               	movlw	0
 57198  019970  6F6C               	movwf	?i2___fltol& (0+255),b
 57199  019972  0E00               	movlw	0
 57200  019974  6F6D               	movwf	(?i2___fltol+1)& (0+255),b
 57201  019976  0E00               	movlw	0
 57202  019978  6F6E               	movwf	(?i2___fltol+2)& (0+255),b
 57203  01997A  0E00               	movlw	0
 57204  01997C  6F6F               	movwf	(?i2___fltol+3)& (0+255),b
 57205                           
 57206                           ; BSR set to: 0
 57207  01997E  0012               	return	
 57208  019980                     
 57209                           ; BSR set to: 0
 57210                           
 57211                           ; BSR set to: 0
 57212  019980  90D8               	bcf	status,0,c
 57213  019982  376C               	rlcf	i2___fltol@f1& (0+255),f,b
 57214  019984  376D               	rlcf	(i2___fltol@f1+1)& (0+255),f,b
 57215  019986  376E               	rlcf	(i2___fltol@f1+2)& (0+255),f,b
 57216  019988  376F               	rlcf	(i2___fltol@f1+3)& (0+255),f,b
 57217  01998A  0775               	decf	i2___fltol@exp1& (0+255),f,b
 57218  01998C                     i2l2598:
 57219                           
 57220                           ; BSR set to: 0
 57221                           
 57222                           ; BSR set to: 0
 57223  01998C  5175               	movf	i2___fltol@exp1& (0+255),w,b
 57224  01998E  A4D8               	btfss	status,2,c
 57225  019990  D7F7               	goto	i2l2599
 57226  019992                     i2u2156_40:
 57227                           
 57228                           ; BSR set to: 0
 57229                           
 57230                           ; BSR set to: 0
 57231                           
 57232                           ; BSR set to: 0
 57233  019992  5174               	movf	i2___fltol@sign1& (0+255),w,b
 57234  019994  B4D8               	btfsc	status,2,c
 57235  019996  D008               	goto	i2l2601
 57236                           
 57237                           ; BSR set to: 0
 57238  019998  1F6F               	comf	(i2___fltol@f1+3)& (0+255),f,b
 57239  01999A  1F6E               	comf	(i2___fltol@f1+2)& (0+255),f,b
 57240  01999C  1F6D               	comf	(i2___fltol@f1+1)& (0+255),f,b
 57241  01999E  6D6C               	negf	i2___fltol@f1& (0+255),b
 57242  0199A0  0E00               	movlw	0
 57243  0199A2  236D               	addwfc	(i2___fltol@f1+1)& (0+255),f,b
 57244  0199A4  236E               	addwfc	(i2___fltol@f1+2)& (0+255),f,b
 57245  0199A6  236F               	addwfc	(i2___fltol@f1+3)& (0+255),f,b
 57246  0199A8                     i2l2601:
 57247                           
 57248                           ; BSR set to: 0
 57249                           
 57250                           ; BSR set to: 0
 57251  0199A8  C06C  F06C         	movff	i2___fltol@f1,?i2___fltol
 57252  0199AC  C06D  F06D         	movff	i2___fltol@f1+1,?i2___fltol+1
 57253  0199B0  C06E  F06E         	movff	i2___fltol@f1+2,?i2___fltol+2
 57254  0199B4  C06F  F06F         	movff	i2___fltol@f1+3,?i2___fltol+3
 57255  0199B8  0012               	return	
 57256  0199BA                     __end_ofi2___fltol:
 57257                           	opt stack 0
 57258                           tosu	equ	0xFFF
 57259                           tosh	equ	0xFFE
 57260                           tosl	equ	0xFFD
 57261                           pclatu	equ	0xFFB
 57262                           pclath	equ	0xFFA
 57263                           tblptru	equ	0xFF8
 57264                           tblptrh	equ	0xFF7
 57265                           tblptrl	equ	0xFF6
 57266                           tablat	equ	0xFF5
 57267                           prodh	equ	0xFF4
 57268                           prodl	equ	0xFF3
 57269                           intcon	equ	0xFF2
 57270                           indf0	equ	0xFEF
 57271                           postinc0	equ	0xFEE
 57272                           fsr0h	equ	0xFEA
 57273                           fsr0l	equ	0xFE9
 57274                           wreg	equ	0xFE8
 57275                           indf1	equ	0xFE7
 57276                           postdec1	equ	0xFE5
 57277                           plusw1	equ	0xFE3
 57278                           fsr1h	equ	0xFE2
 57279                           fsr1l	equ	0xFE1
 57280                           bsr	equ	0xFE0
 57281                           indf2	equ	0xFDF
 57282                           postinc2	equ	0xFDE
 57283                           postdec2	equ	0xFDD
 57284                           plusw2	equ	0xFDB
 57285                           fsr2h	equ	0xFDA
 57286                           fsr2l	equ	0xFD9
 57287                           status	equ	0xFD8
 57288                           
 57289 ;; *************** function i2___flge *****************
 57290 ;; Defined at:
 57291 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 57292 ;; Parameters:    Size  Location     Type
 57293 ;;  ff1             4   51[COMRAM] long 
 57294 ;;  ff2             4   55[COMRAM] long 
 57295 ;; Auto vars:     Size  Location     Type
 57296 ;;		None
 57297 ;; Return value:  Size  Location     Type
 57298 ;;		None               void
 57299 ;; Registers used:
 57300 ;;		wreg, status,2, status,0
 57301 ;; Tracked objects:
 57302 ;;		On entry : 0/0
 57303 ;;		On exit  : 0/0
 57304 ;;		Unchanged: 0/0
 57305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 57306 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57308 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57309 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57310 ;;Total ram usage:       12 bytes
 57311 ;; Hardware stack levels used:    1
 57312 ;; This function calls:
 57313 ;;		Nothing
 57314 ;; This function is called by:
 57315 ;;		_ADC_PostProcessingCallback
 57316 ;;		_writeEnergyToEEPROMCallback
 57317 ;;		_asin
 57318 ;;		_atan
 57319 ;;		_sin
 57320 ;;		_floor
 57321 ;;		i2__doprnt
 57322 ;; This function uses a non-reentrant model
 57323 ;;
 57324                           
 57325                           	psect	text191
 57326  0192BE                     __ptext191:
 57327                           	opt stack 0
 57328  0192BE                     i2___flge:
 57329                           	opt stack 7
 57330                           
 57331                           ; BSR set to: 0
 57332                           ;incstack = 0
 57333  0192BE  0E00               	movlw	0
 57334  0192C0  1434               	andwf	i2___flge@ff1,w,c
 57335  0192C2  6E3C               	movwf	??i2___flge& (0+255),c
 57336  0192C4  0E00               	movlw	0
 57337  0192C6  1435               	andwf	i2___flge@ff1+1,w,c
 57338  0192C8  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 57339  0192CA  0E80               	movlw	128
 57340  0192CC  1436               	andwf	i2___flge@ff1+2,w,c
 57341  0192CE  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 57342  0192D0  0E7F               	movlw	127
 57343  0192D2  1437               	andwf	i2___flge@ff1+3,w,c
 57344  0192D4  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 57345  0192D6  503C               	movf	??i2___flge,w,c
 57346  0192D8  103D               	iorwf	??i2___flge+1,w,c
 57347  0192DA  103E               	iorwf	??i2___flge+2,w,c
 57348  0192DC  103F               	iorwf	??i2___flge+3,w,c
 57349  0192DE  A4D8               	btfss	status,2,c
 57350  0192E0  D008               	goto	i2l2560
 57351  0192E2  0E00               	movlw	0
 57352  0192E4  6E34               	movwf	i2___flge@ff1,c
 57353  0192E6  0E00               	movlw	0
 57354  0192E8  6E35               	movwf	i2___flge@ff1+1,c
 57355  0192EA  0E00               	movlw	0
 57356  0192EC  6E36               	movwf	i2___flge@ff1+2,c
 57357  0192EE  0E00               	movlw	0
 57358  0192F0  6E37               	movwf	i2___flge@ff1+3,c
 57359  0192F2                     i2l2560:
 57360  0192F2  0E00               	movlw	0
 57361  0192F4  1438               	andwf	i2___flge@ff2,w,c
 57362  0192F6  6E3C               	movwf	??i2___flge& (0+255),c
 57363  0192F8  0E00               	movlw	0
 57364  0192FA  1439               	andwf	i2___flge@ff2+1,w,c
 57365  0192FC  6E3D               	movwf	(??i2___flge+1)& (0+255),c
 57366  0192FE  0E80               	movlw	128
 57367  019300  143A               	andwf	i2___flge@ff2+2,w,c
 57368  019302  6E3E               	movwf	(??i2___flge+2)& (0+255),c
 57369  019304  0E7F               	movlw	127
 57370  019306  143B               	andwf	i2___flge@ff2+3,w,c
 57371  019308  6E3F               	movwf	(??i2___flge+3)& (0+255),c
 57372  01930A  503C               	movf	??i2___flge,w,c
 57373  01930C  103D               	iorwf	??i2___flge+1,w,c
 57374  01930E  103E               	iorwf	??i2___flge+2,w,c
 57375  019310  103F               	iorwf	??i2___flge+3,w,c
 57376  019312  A4D8               	btfss	status,2,c
 57377  019314  D008               	goto	i2l2561
 57378  019316  0E00               	movlw	0
 57379  019318  6E38               	movwf	i2___flge@ff2,c
 57380  01931A  0E00               	movlw	0
 57381  01931C  6E39               	movwf	i2___flge@ff2+1,c
 57382  01931E  0E00               	movlw	0
 57383  019320  6E3A               	movwf	i2___flge@ff2+2,c
 57384  019322  0E00               	movlw	0
 57385  019324  6E3B               	movwf	i2___flge@ff2+3,c
 57386  019326                     i2l2561:
 57387  019326  AE37               	btfss	i2___flge@ff1+3,7,c
 57388  019328  D01D               	goto	i2l2562
 57389  01932A  C034  F03C         	movff	i2___flge@ff1,??i2___flge
 57390  01932E  C035  F03D         	movff	i2___flge@ff1+1,??i2___flge+1
 57391  019332  C036  F03E         	movff	i2___flge@ff1+2,??i2___flge+2
 57392  019336  C037  F03F         	movff	i2___flge@ff1+3,??i2___flge+3
 57393  01933A  1E3C               	comf	??i2___flge,f,c
 57394  01933C  1E3D               	comf	??i2___flge+1,f,c
 57395  01933E  1E3E               	comf	??i2___flge+2,f,c
 57396  019340  1E3F               	comf	??i2___flge+3,f,c
 57397  019342  2A3C               	incf	??i2___flge,f,c
 57398  019344  0E00               	movlw	0
 57399  019346  223D               	addwfc	??i2___flge+1,f,c
 57400  019348  223E               	addwfc	??i2___flge+2,f,c
 57401  01934A  223F               	addwfc	??i2___flge+3,f,c
 57402  01934C  0E00               	movlw	0
 57403  01934E  243C               	addwf	??i2___flge,w,c
 57404  019350  6E34               	movwf	i2___flge@ff1,c
 57405  019352  0E00               	movlw	0
 57406  019354  203D               	addwfc	??i2___flge+1,w,c
 57407  019356  6E35               	movwf	i2___flge@ff1+1,c
 57408  019358  0E00               	movlw	0
 57409  01935A  203E               	addwfc	??i2___flge+2,w,c
 57410  01935C  6E36               	movwf	i2___flge@ff1+2,c
 57411  01935E  0E80               	movlw	128
 57412  019360  203F               	addwfc	??i2___flge+3,w,c
 57413  019362  6E37               	movwf	i2___flge@ff1+3,c
 57414  019364                     i2l2562:
 57415  019364  AE3B               	btfss	i2___flge@ff2+3,7,c
 57416  019366  D01D               	goto	i2l2563
 57417  019368  C038  F03C         	movff	i2___flge@ff2,??i2___flge
 57418  01936C  C039  F03D         	movff	i2___flge@ff2+1,??i2___flge+1
 57419  019370  C03A  F03E         	movff	i2___flge@ff2+2,??i2___flge+2
 57420  019374  C03B  F03F         	movff	i2___flge@ff2+3,??i2___flge+3
 57421  019378  1E3C               	comf	??i2___flge,f,c
 57422  01937A  1E3D               	comf	??i2___flge+1,f,c
 57423  01937C  1E3E               	comf	??i2___flge+2,f,c
 57424  01937E  1E3F               	comf	??i2___flge+3,f,c
 57425  019380  2A3C               	incf	??i2___flge,f,c
 57426  019382  0E00               	movlw	0
 57427  019384  223D               	addwfc	??i2___flge+1,f,c
 57428  019386  223E               	addwfc	??i2___flge+2,f,c
 57429  019388  223F               	addwfc	??i2___flge+3,f,c
 57430  01938A  0E00               	movlw	0
 57431  01938C  243C               	addwf	??i2___flge,w,c
 57432  01938E  6E38               	movwf	i2___flge@ff2,c
 57433  019390  0E00               	movlw	0
 57434  019392  203D               	addwfc	??i2___flge+1,w,c
 57435  019394  6E39               	movwf	i2___flge@ff2+1,c
 57436  019396  0E00               	movlw	0
 57437  019398  203E               	addwfc	??i2___flge+2,w,c
 57438  01939A  6E3A               	movwf	i2___flge@ff2+2,c
 57439  01939C  0E80               	movlw	128
 57440  01939E  203F               	addwfc	??i2___flge+3,w,c
 57441  0193A0  6E3B               	movwf	i2___flge@ff2+3,c
 57442  0193A2                     i2l2563:
 57443  0193A2  0E00               	movlw	0
 57444  0193A4  1A34               	xorwf	i2___flge@ff1,f,c
 57445  0193A6  0E00               	movlw	0
 57446  0193A8  1A35               	xorwf	i2___flge@ff1+1,f,c
 57447  0193AA  0E00               	movlw	0
 57448  0193AC  1A36               	xorwf	i2___flge@ff1+2,f,c
 57449  0193AE  0E80               	movlw	128
 57450  0193B0  1A37               	xorwf	i2___flge@ff1+3,f,c
 57451  0193B2  0E00               	movlw	0
 57452  0193B4  1A38               	xorwf	i2___flge@ff2,f,c
 57453  0193B6  0E00               	movlw	0
 57454  0193B8  1A39               	xorwf	i2___flge@ff2+1,f,c
 57455  0193BA  0E00               	movlw	0
 57456  0193BC  1A3A               	xorwf	i2___flge@ff2+2,f,c
 57457  0193BE  0E80               	movlw	128
 57458  0193C0  1A3B               	xorwf	i2___flge@ff2+3,f,c
 57459  0193C2  5038               	movf	i2___flge@ff2,w,c
 57460  0193C4  5C34               	subwf	i2___flge@ff1,w,c
 57461  0193C6  5039               	movf	i2___flge@ff2+1,w,c
 57462  0193C8  5835               	subwfb	i2___flge@ff1+1,w,c
 57463  0193CA  503A               	movf	i2___flge@ff2+2,w,c
 57464  0193CC  5836               	subwfb	i2___flge@ff1+2,w,c
 57465  0193CE  503B               	movf	i2___flge@ff2+3,w,c
 57466  0193D0  5837               	subwfb	i2___flge@ff1+3,w,c
 57467  0193D2  B0D8               	btfsc	status,0,c
 57468  0193D4  D002               	goto	i2l14863
 57469  0193D6  90D8               	bcf	status,0,c
 57470  0193D8  0012               	return	
 57471  0193DA                     i2l14863:
 57472  0193DA  80D8               	bsf	status,0,c
 57473  0193DC  0012               	return	
 57474  0193DE                     __end_ofi2___flge:
 57475                           	opt stack 0
 57476                           tosu	equ	0xFFF
 57477                           tosh	equ	0xFFE
 57478                           tosl	equ	0xFFD
 57479                           pclatu	equ	0xFFB
 57480                           pclath	equ	0xFFA
 57481                           tblptru	equ	0xFF8
 57482                           tblptrh	equ	0xFF7
 57483                           tblptrl	equ	0xFF6
 57484                           tablat	equ	0xFF5
 57485                           prodh	equ	0xFF4
 57486                           prodl	equ	0xFF3
 57487                           intcon	equ	0xFF2
 57488                           indf0	equ	0xFEF
 57489                           postinc0	equ	0xFEE
 57490                           fsr0h	equ	0xFEA
 57491                           fsr0l	equ	0xFE9
 57492                           wreg	equ	0xFE8
 57493                           indf1	equ	0xFE7
 57494                           postdec1	equ	0xFE5
 57495                           plusw1	equ	0xFE3
 57496                           fsr1h	equ	0xFE2
 57497                           fsr1l	equ	0xFE1
 57498                           bsr	equ	0xFE0
 57499                           indf2	equ	0xFDF
 57500                           postinc2	equ	0xFDE
 57501                           postdec2	equ	0xFDD
 57502                           plusw2	equ	0xFDB
 57503                           fsr2h	equ	0xFDA
 57504                           fsr2l	equ	0xFD9
 57505                           status	equ	0xFD8
 57506                           
 57507 ;; *************** function _frexp *****************
 57508 ;; Defined at:
 57509 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 57510 ;; Parameters:    Size  Location     Type
 57511 ;;  value           4    0[COMRAM] long 
 57512 ;;  eptr            2    4[COMRAM] PTR int 
 57513 ;;		 -> floor@expon(2), 
 57514 ;; Auto vars:     Size  Location     Type
 57515 ;;		None
 57516 ;; Return value:  Size  Location     Type
 57517 ;;                  4    0[COMRAM] PTR int 
 57518 ;; Registers used:
 57519 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 57520 ;; Tracked objects:
 57521 ;;		On entry : 0/0
 57522 ;;		On exit  : 0/0
 57523 ;;		Unchanged: 0/0
 57524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 57525 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57527 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57528 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57529 ;;Total ram usage:        8 bytes
 57530 ;; Hardware stack levels used:    1
 57531 ;; This function calls:
 57532 ;;		Nothing
 57533 ;; This function is called by:
 57534 ;;		_floor
 57535 ;; This function uses a non-reentrant model
 57536 ;;
 57537                           
 57538                           	psect	text192
 57539  01A6CA                     __ptext192:
 57540                           	opt stack 0
 57541  01A6CA                     _frexp:
 57542                           	opt stack 5
 57543                           
 57544                           ;incstack = 0
 57545  01A6CA  5001               	movf	frexp@value,w,c
 57546  01A6CC  1002               	iorwf	frexp@value+1,w,c
 57547  01A6CE  1003               	iorwf	frexp@value+2,w,c
 57548  01A6D0  1004               	iorwf	frexp@value+3,w,c
 57549  01A6D2  A4D8               	btfss	status,2,c
 57550  01A6D4  D009               	goto	i2l3101
 57551  01A6D6  C005  FFD9         	movff	frexp@eptr,fsr2l
 57552  01A6DA  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 57553  01A6DE  0E00               	movlw	0
 57554  01A6E0  6EDE               	movwf	postinc2,c
 57555  01A6E2  0E00               	movlw	0
 57556  01A6E4  6EDD               	movwf	postdec2,c
 57557                           
 57558                           ;	Return value of _frexp is never used
 57559  01A6E6  0012               	return	
 57560  01A6E8                     i2l3101:
 57561  01A6E8  5004               	movf	frexp@value+3,w,c
 57562  01A6EA  0B7F               	andlw	127
 57563  01A6EC  6E07               	movwf	??_frexp& (0+255),c
 57564  01A6EE  6A08               	clrf	(??_frexp+1)& (0+255),c
 57565  01A6F0  90D8               	bcf	status,0,c
 57566  01A6F2  3607               	rlcf	??_frexp,f,c
 57567  01A6F4  3608               	rlcf	??_frexp+1,f,c
 57568  01A6F6  C005  FFD9         	movff	frexp@eptr,fsr2l
 57569  01A6FA  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 57570  01A6FE  C007  FFDE         	movff	??_frexp,postinc2
 57571  01A702  C008  FFDD         	movff	??_frexp+1,postdec2
 57572  01A706  AE03               	btfss	frexp@value+2,7,c
 57573  01A708  D003               	goto	i2u1283_40
 57574  01A70A  6A07               	clrf	??_frexp& (0+255),c
 57575  01A70C  2A07               	incf	??_frexp& (0+255),f,c
 57576  01A70E  D001               	goto	i2u1283_48
 57577  01A710                     i2u1283_40:
 57578  01A710  6A07               	clrf	??_frexp& (0+255),c
 57579  01A712                     i2u1283_48:
 57580  01A712  5007               	movf	??_frexp,w,c
 57581  01A714  C005  FFD9         	movff	frexp@eptr,fsr2l
 57582  01A718  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 57583  01A71C  12DE               	iorwf	postinc2,f,c
 57584  01A71E  0E00               	movlw	0
 57585  01A720  12DD               	iorwf	postdec2,f,c
 57586  01A722  C005  FFD9         	movff	frexp@eptr,fsr2l
 57587  01A726  C006  FFDA         	movff	frexp@eptr+1,fsr2h
 57588  01A72A  0E82               	movlw	130
 57589  01A72C  26DE               	addwf	postinc2,f,c
 57590  01A72E  0EFF               	movlw	255
 57591  01A730  22DD               	addwfc	postdec2,f,c
 57592  01A732  8004               	bsf	frexp@value+3,0,c
 57593  01A734  8204               	bsf	frexp@value+3,1,c
 57594  01A736  8404               	bsf	frexp@value+3,2,c
 57595  01A738  8604               	bsf	frexp@value+3,3,c
 57596  01A73A  8804               	bsf	frexp@value+3,4,c
 57597  01A73C  8A04               	bsf	frexp@value+3,5,c
 57598  01A73E  9C04               	bcf	frexp@value+3,6,c
 57599  01A740  9E03               	bcf	frexp@value+2,7,c
 57600  01A742  0012               	return	
 57601  01A744                     __end_of_frexp:
 57602                           	opt stack 0
 57603                           tosu	equ	0xFFF
 57604                           tosh	equ	0xFFE
 57605                           tosl	equ	0xFFD
 57606                           pclatu	equ	0xFFB
 57607                           pclath	equ	0xFFA
 57608                           tblptru	equ	0xFF8
 57609                           tblptrh	equ	0xFF7
 57610                           tblptrl	equ	0xFF6
 57611                           tablat	equ	0xFF5
 57612                           prodh	equ	0xFF4
 57613                           prodl	equ	0xFF3
 57614                           intcon	equ	0xFF2
 57615                           indf0	equ	0xFEF
 57616                           postinc0	equ	0xFEE
 57617                           fsr0h	equ	0xFEA
 57618                           fsr0l	equ	0xFE9
 57619                           wreg	equ	0xFE8
 57620                           indf1	equ	0xFE7
 57621                           postdec1	equ	0xFE5
 57622                           plusw1	equ	0xFE3
 57623                           fsr1h	equ	0xFE2
 57624                           fsr1l	equ	0xFE1
 57625                           bsr	equ	0xFE0
 57626                           indf2	equ	0xFDF
 57627                           postinc2	equ	0xFDE
 57628                           postdec2	equ	0xFDD
 57629                           plusw2	equ	0xFDB
 57630                           fsr2h	equ	0xFDA
 57631                           fsr2l	equ	0xFD9
 57632                           status	equ	0xFD8
 57633                           
 57634 ;; *************** function _eval_poly *****************
 57635 ;; Defined at:
 57636 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 57637 ;; Parameters:    Size  Location     Type
 57638 ;;  x               4   12[BANK0 ] PTR int 
 57639 ;;  d               2   16[BANK0 ] PTR const 
 57640 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
 57641 ;;  n               2   18[BANK0 ] int 
 57642 ;; Auto vars:     Size  Location     Type
 57643 ;;  res             4   24[BANK0 ] int 
 57644 ;; Return value:  Size  Location     Type
 57645 ;;                  4   12[BANK0 ] int 
 57646 ;; Registers used:
 57647 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 57648 ;; Tracked objects:
 57649 ;;		On entry : 0/0
 57650 ;;		On exit  : 0/0
 57651 ;;		Unchanged: 0/0
 57652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 57653 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57654 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57655 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57656 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57657 ;;Total ram usage:       16 bytes
 57658 ;; Hardware stack levels used:    1
 57659 ;; Hardware stack levels required when called:    1
 57660 ;; This function calls:
 57661 ;;		i2___fladd
 57662 ;;		i2___flmul
 57663 ;; This function is called by:
 57664 ;;		_atan
 57665 ;;		_sin
 57666 ;; This function uses a non-reentrant model
 57667 ;;
 57668                           
 57669                           	psect	text193
 57670  0195F8                     __ptext193:
 57671                           	opt stack 0
 57672  0195F8                     _eval_poly:
 57673                           	opt stack 5
 57674                           
 57675                           ;incstack = 0
 57676  0195F8  C072  F074         	movff	eval_poly@n,??_eval_poly
 57677  0195FC  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 57678  019600  0100               	movlb	0	; () banked
 57679  019602  90D8               	bcf	status,0,c
 57680  019604  3774               	rlcf	??_eval_poly& (0+255),f,b
 57681  019606  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 57682  019608  90D8               	bcf	status,0,c
 57683  01960A  3774               	rlcf	??_eval_poly& (0+255),f,b
 57684  01960C  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 57685  01960E  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 57686  019612  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 57687  019616  5174               	movf	??_eval_poly& (0+255),w,b
 57688  019618  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 57689  01961A  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 57690  01961C  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 57691  01961E  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 57692  019622  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 57693  019626                     	if	0	;tblptru may be non-zero
 57694  019626                     	endif
 57695  019626                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 57696  019626  0E00               	movlw	low (__mediumconst shr (0+16))
 57697  019628  6EF8               	movwf	tblptru,c
 57698  01962A                     	endif
 57699  01962A  0009               	tblrd		*+
 57700  01962C  CFF5 F078          	movff	tablat,eval_poly@res
 57701  019630  0009               	tblrd		*+
 57702  019632  CFF5 F079          	movff	tablat,eval_poly@res+1
 57703  019636  0009               	tblrd		*+
 57704  019638  CFF5 F07A          	movff	tablat,eval_poly@res+2
 57705  01963C  000A               	tblrd		*-
 57706  01963E  CFF5 F07B          	movff	tablat,eval_poly@res+3
 57707  019642  D04C               	goto	i2l2533
 57708  019644                     
 57709                           ; BSR set to: 0
 57710                           
 57711                           ; BSR set to: 0
 57712  019644  C078  F034         	movff	eval_poly@res,i2___flmul@a
 57713  019648  C079  F035         	movff	eval_poly@res+1,i2___flmul@a+1
 57714  01964C  C07A  F036         	movff	eval_poly@res+2,i2___flmul@a+2
 57715  019650  C07B  F037         	movff	eval_poly@res+3,i2___flmul@a+3
 57716  019654  C06C  F030         	movff	eval_poly@x,i2___flmul@b
 57717  019658  C06D  F031         	movff	eval_poly@x+1,i2___flmul@b+1
 57718  01965C  C06E  F032         	movff	eval_poly@x+2,i2___flmul@b+2
 57719  019660  C06F  F033         	movff	eval_poly@x+3,i2___flmul@b+3
 57720  019664  EC05  F0AE         	call	i2___flmul	;wreg free
 57721  019668  C030  F056         	movff	?i2___flmul,i2___fladd@b
 57722  01966C  C031  F057         	movff	?i2___flmul+1,i2___fladd@b+1
 57723  019670  C032  F058         	movff	?i2___flmul+2,i2___fladd@b+2
 57724  019674  C033  F059         	movff	?i2___flmul+3,i2___fladd@b+3
 57725  019678  0100               	movlb	0	; () banked
 57726  01967A  0772               	decf	eval_poly@n& (0+255),f,b
 57727  01967C  A0D8               	btfss	status,0,c
 57728  01967E  0773               	decf	(eval_poly@n+1)& (0+255),f,b
 57729  019680  C072  F074         	movff	eval_poly@n,??_eval_poly
 57730  019684  C073  F075         	movff	eval_poly@n+1,??_eval_poly+1
 57731  019688  90D8               	bcf	status,0,c
 57732  01968A  3774               	rlcf	??_eval_poly& (0+255),f,b
 57733  01968C  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 57734  01968E  90D8               	bcf	status,0,c
 57735  019690  3774               	rlcf	??_eval_poly& (0+255),f,b
 57736  019692  3775               	rlcf	(??_eval_poly+1)& (0+255),f,b
 57737  019694  C070  F076         	movff	eval_poly@d,??_eval_poly+2
 57738  019698  C071  F077         	movff	eval_poly@d+1,??_eval_poly+3
 57739  01969C  5174               	movf	??_eval_poly& (0+255),w,b
 57740  01969E  2776               	addwf	(??_eval_poly+2)& (0+255),f,b
 57741  0196A0  5175               	movf	(??_eval_poly+1)& (0+255),w,b
 57742  0196A2  2377               	addwfc	(??_eval_poly+3)& (0+255),f,b
 57743  0196A4  C076  FFF6         	movff	??_eval_poly+2,tblptrl
 57744  0196A8  C077  FFF7         	movff	??_eval_poly+3,tblptrh
 57745  0196AC                     	if	0	;tblptru may be non-zero
 57746  0196AC                     	endif
 57747  0196AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 57748  0196AC  0E00               	movlw	low (__mediumconst shr (0+16))
 57749  0196AE  6EF8               	movwf	tblptru,c
 57750  0196B0                     	endif
 57751  0196B0  0009               	tblrd		*+
 57752  0196B2  CFF5 F05A          	movff	tablat,i2___fladd@a
 57753  0196B6  0009               	tblrd		*+
 57754  0196B8  CFF5 F05B          	movff	tablat,i2___fladd@a+1
 57755  0196BC  0009               	tblrd		*+
 57756  0196BE  CFF5 F05C          	movff	tablat,i2___fladd@a+2
 57757  0196C2  000A               	tblrd		*-
 57758  0196C4  CFF5 F05D          	movff	tablat,i2___fladd@a+3
 57759  0196C8  EC4C  F0B1         	call	i2___fladd	;wreg free
 57760  0196CC  C056  F078         	movff	?i2___fladd,eval_poly@res
 57761  0196D0  C057  F079         	movff	?i2___fladd+1,eval_poly@res+1
 57762  0196D4  C058  F07A         	movff	?i2___fladd+2,eval_poly@res+2
 57763  0196D8  C059  F07B         	movff	?i2___fladd+3,eval_poly@res+3
 57764  0196DC                     i2l2533:
 57765  0196DC  0100               	movlb	0	; () banked
 57766  0196DE  5172               	movf	eval_poly@n& (0+255),w,b
 57767  0196E0  1173               	iorwf	(eval_poly@n+1)& (0+255),w,b
 57768  0196E2  A4D8               	btfss	status,2,c
 57769  0196E4  D7AF               	goto	i2l2534
 57770                           
 57771                           ; BSR set to: 0
 57772  0196E6  C078  F06C         	movff	eval_poly@res,?_eval_poly
 57773  0196EA  C079  F06D         	movff	eval_poly@res+1,?_eval_poly+1
 57774  0196EE  C07A  F06E         	movff	eval_poly@res+2,?_eval_poly+2
 57775  0196F2  C07B  F06F         	movff	eval_poly@res+3,?_eval_poly+3
 57776                           
 57777                           ; BSR set to: 0
 57778  0196F6  0012               	return		;funcret
 57779  0196F8                     __end_of_eval_poly:
 57780                           	opt stack 0
 57781                           tosu	equ	0xFFF
 57782                           tosh	equ	0xFFE
 57783                           tosl	equ	0xFFD
 57784                           pclatu	equ	0xFFB
 57785                           pclath	equ	0xFFA
 57786                           tblptru	equ	0xFF8
 57787                           tblptrh	equ	0xFF7
 57788                           tblptrl	equ	0xFF6
 57789                           tablat	equ	0xFF5
 57790                           prodh	equ	0xFF4
 57791                           prodl	equ	0xFF3
 57792                           intcon	equ	0xFF2
 57793                           indf0	equ	0xFEF
 57794                           postinc0	equ	0xFEE
 57795                           fsr0h	equ	0xFEA
 57796                           fsr0l	equ	0xFE9
 57797                           wreg	equ	0xFE8
 57798                           indf1	equ	0xFE7
 57799                           postdec1	equ	0xFE5
 57800                           plusw1	equ	0xFE3
 57801                           fsr1h	equ	0xFE2
 57802                           fsr1l	equ	0xFE1
 57803                           bsr	equ	0xFE0
 57804                           indf2	equ	0xFDF
 57805                           postinc2	equ	0xFDE
 57806                           postdec2	equ	0xFDD
 57807                           plusw2	equ	0xFDB
 57808                           fsr2h	equ	0xFDA
 57809                           fsr2l	equ	0xFD9
 57810                           status	equ	0xFD8
 57811                           
 57812 ;; *************** function i2___flmul *****************
 57813 ;; Defined at:
 57814 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 57815 ;; Parameters:    Size  Location     Type
 57816 ;;  b               4   47[COMRAM] int 
 57817 ;;  a               4   51[COMRAM] int 
 57818 ;; Auto vars:     Size  Location     Type
 57819 ;;  __flmul         4   66[COMRAM] struct .
 57820 ;;  __flmul         4   61[COMRAM] unsigned long 
 57821 ;;  __flmul         2   70[COMRAM] struct .
 57822 ;;  __flmul         1   65[COMRAM] unsigned char 
 57823 ;;  __flmul         1   60[COMRAM] unsigned char 
 57824 ;;  __flmul         1   59[COMRAM] unsigned char 
 57825 ;; Return value:  Size  Location     Type
 57826 ;;                  4   47[COMRAM] unsigned char 
 57827 ;; Registers used:
 57828 ;;		wreg, status,2, status,0, prodl, prodh
 57829 ;; Tracked objects:
 57830 ;;		On entry : 0/0
 57831 ;;		On exit  : 0/0
 57832 ;;		Unchanged: 0/0
 57833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 57834 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57835 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57836 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57837 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 57838 ;;Total ram usage:       25 bytes
 57839 ;; Hardware stack levels used:    1
 57840 ;; This function calls:
 57841 ;;		Nothing
 57842 ;; This function is called by:
 57843 ;;		_peakToRMS
 57844 ;;		_ADC_PostProcessingCallback
 57845 ;;		_asin
 57846 ;;		_atan
 57847 ;;		_eval_poly
 57848 ;;		_sin
 57849 ;;		i2_fround
 57850 ;;		i2_scale
 57851 ;;		i2__doprnt
 57852 ;; This function uses a non-reentrant model
 57853 ;;
 57854                           
 57855                           	psect	text194
 57856  015C0A                     __ptext194:
 57857                           	opt stack 0
 57858  015C0A                     i2___flmul:
 57859                           	opt stack 6
 57860                           
 57861                           ; BSR set to: 0
 57862                           ;incstack = 0
 57863  015C0A  5033               	movf	i2___flmul@b+3,w,c
 57864  015C0C  0B80               	andlw	128
 57865  015C0E  6E3C               	movwf	i2___flmul@sign,c
 57866  015C10  5033               	movf	i2___flmul@b+3,w,c
 57867  015C12  2433               	addwf	i2___flmul@b+3,w,c
 57868  015C14  6E42               	movwf	i2___flmul@bexp,c
 57869  015C16  BE32               	btfsc	i2___flmul@b+2,7,c
 57870  015C18  8042               	bsf	i2___flmul@bexp,0,c
 57871  015C1A  5042               	movf	i2___flmul@bexp,w,c
 57872  015C1C  B4D8               	btfsc	status,2,c
 57873  015C1E  D00D               	goto	i2l2962
 57874  015C20  2842               	incf	i2___flmul@bexp,w,c
 57875  015C22  A4D8               	btfss	status,2,c
 57876  015C24  D008               	goto	i2l2963
 57877  015C26  0E00               	movlw	0
 57878  015C28  6E30               	movwf	i2___flmul@b,c
 57879  015C2A  0E00               	movlw	0
 57880  015C2C  6E31               	movwf	i2___flmul@b+1,c
 57881  015C2E  0E00               	movlw	0
 57882  015C30  6E32               	movwf	i2___flmul@b+2,c
 57883  015C32  0E00               	movlw	0
 57884  015C34  6E33               	movwf	i2___flmul@b+3,c
 57885  015C36                     i2l2963:
 57886  015C36  8E32               	bsf	i2___flmul@b+2,7,c
 57887  015C38  D008               	goto	i2l2964
 57888  015C3A                     i2l2962:
 57889  015C3A  0E00               	movlw	0
 57890  015C3C  6E30               	movwf	i2___flmul@b,c
 57891  015C3E  0E00               	movlw	0
 57892  015C40  6E31               	movwf	i2___flmul@b+1,c
 57893  015C42  0E00               	movlw	0
 57894  015C44  6E32               	movwf	i2___flmul@b+2,c
 57895  015C46  0E00               	movlw	0
 57896  015C48  6E33               	movwf	i2___flmul@b+3,c
 57897  015C4A                     i2l2964:
 57898  015C4A  5037               	movf	i2___flmul@a+3,w,c
 57899  015C4C  0B80               	andlw	128
 57900  015C4E  1A3C               	xorwf	i2___flmul@sign,f,c
 57901  015C50  5037               	movf	i2___flmul@a+3,w,c
 57902  015C52  2437               	addwf	i2___flmul@a+3,w,c
 57903  015C54  6E3D               	movwf	i2___flmul@aexp,c
 57904  015C56  BE36               	btfsc	i2___flmul@a+2,7,c
 57905  015C58  803D               	bsf	i2___flmul@aexp,0,c
 57906  015C5A  503D               	movf	i2___flmul@aexp,w,c
 57907  015C5C  B4D8               	btfsc	status,2,c
 57908  015C5E  D00D               	goto	i2l2966
 57909  015C60  283D               	incf	i2___flmul@aexp,w,c
 57910  015C62  A4D8               	btfss	status,2,c
 57911  015C64  D008               	goto	i2l2967
 57912  015C66  0E00               	movlw	0
 57913  015C68  6E34               	movwf	i2___flmul@a,c
 57914  015C6A  0E00               	movlw	0
 57915  015C6C  6E35               	movwf	i2___flmul@a+1,c
 57916  015C6E  0E00               	movlw	0
 57917  015C70  6E36               	movwf	i2___flmul@a+2,c
 57918  015C72  0E00               	movlw	0
 57919  015C74  6E37               	movwf	i2___flmul@a+3,c
 57920  015C76                     i2l2967:
 57921  015C76  8E36               	bsf	i2___flmul@a+2,7,c
 57922  015C78  D008               	goto	i2l2968
 57923  015C7A                     i2l2966:
 57924  015C7A  0E00               	movlw	0
 57925  015C7C  6E34               	movwf	i2___flmul@a,c
 57926  015C7E  0E00               	movlw	0
 57927  015C80  6E35               	movwf	i2___flmul@a+1,c
 57928  015C82  0E00               	movlw	0
 57929  015C84  6E36               	movwf	i2___flmul@a+2,c
 57930  015C86  0E00               	movlw	0
 57931  015C88  6E37               	movwf	i2___flmul@a+3,c
 57932  015C8A                     i2l2968:
 57933  015C8A  503D               	movf	i2___flmul@aexp,w,c
 57934  015C8C  B4D8               	btfsc	status,2,c
 57935  015C8E  D003               	goto	i2u1917_40
 57936  015C90  5042               	movf	i2___flmul@bexp,w,c
 57937  015C92  A4D8               	btfss	status,2,c
 57938  015C94  D009               	goto	i2l2969
 57939  015C96                     i2u1917_40:
 57940  015C96  0E00               	movlw	0
 57941  015C98  6E30               	movwf	?i2___flmul,c
 57942  015C9A  0E00               	movlw	0
 57943  015C9C  6E31               	movwf	?i2___flmul+1,c
 57944  015C9E  0E00               	movlw	0
 57945  015CA0  6E32               	movwf	?i2___flmul+2,c
 57946  015CA2  0E00               	movlw	0
 57947  015CA4  6E33               	movwf	?i2___flmul+3,c
 57948  015CA6  0012               	return	
 57949  015CA8                     i2l2969:
 57950  015CA8  5036               	movf	i2___flmul@a+2,w,c
 57951  015CAA  0230               	mulwf	i2___flmul@b,c
 57952  015CAC  CFF3 F047          	movff	prodl,i2___flmul@temp
 57953  015CB0  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 57954  015CB4  5047               	movf	i2___flmul@temp,w,c
 57955  015CB6  6E3E               	movwf	i2___flmul@grs,c
 57956  015CB8  6A3F               	clrf	i2___flmul@grs+1,c
 57957  015CBA  6A40               	clrf	i2___flmul@grs+2,c
 57958  015CBC  6A41               	clrf	i2___flmul@grs+3,c
 57959  015CBE  5048               	movf	i2___flmul@temp+1,w,c
 57960  015CC0  6E43               	movwf	i2___flmul@prod,c
 57961  015CC2  6A44               	clrf	i2___flmul@prod+1,c
 57962  015CC4  6A45               	clrf	i2___flmul@prod+2,c
 57963  015CC6  6A46               	clrf	i2___flmul@prod+3,c
 57964  015CC8  5035               	movf	i2___flmul@a+1,w,c
 57965  015CCA  0231               	mulwf	i2___flmul@b+1,c
 57966  015CCC  CFF3 F047          	movff	prodl,i2___flmul@temp
 57967  015CD0  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 57968  015CD4  5047               	movf	i2___flmul@temp,w,c
 57969  015CD6  263E               	addwf	i2___flmul@grs,f,c
 57970  015CD8  0E00               	movlw	0
 57971  015CDA  223F               	addwfc	i2___flmul@grs+1,f,c
 57972  015CDC  2240               	addwfc	i2___flmul@grs+2,f,c
 57973  015CDE  2241               	addwfc	i2___flmul@grs+3,f,c
 57974  015CE0  5048               	movf	i2___flmul@temp+1,w,c
 57975  015CE2  2643               	addwf	i2___flmul@prod,f,c
 57976  015CE4  0E00               	movlw	0
 57977  015CE6  2244               	addwfc	i2___flmul@prod+1,f,c
 57978  015CE8  2245               	addwfc	i2___flmul@prod+2,f,c
 57979  015CEA  2246               	addwfc	i2___flmul@prod+3,f,c
 57980  015CEC  5034               	movf	i2___flmul@a,w,c
 57981  015CEE  0232               	mulwf	i2___flmul@b+2,c
 57982  015CF0  CFF3 F047          	movff	prodl,i2___flmul@temp
 57983  015CF4  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 57984  015CF8  5047               	movf	i2___flmul@temp,w,c
 57985  015CFA  263E               	addwf	i2___flmul@grs,f,c
 57986  015CFC  0E00               	movlw	0
 57987  015CFE  223F               	addwfc	i2___flmul@grs+1,f,c
 57988  015D00  2240               	addwfc	i2___flmul@grs+2,f,c
 57989  015D02  2241               	addwfc	i2___flmul@grs+3,f,c
 57990  015D04  5048               	movf	i2___flmul@temp+1,w,c
 57991  015D06  2643               	addwf	i2___flmul@prod,f,c
 57992  015D08  0E00               	movlw	0
 57993  015D0A  2244               	addwfc	i2___flmul@prod+1,f,c
 57994  015D0C  2245               	addwfc	i2___flmul@prod+2,f,c
 57995  015D0E  2246               	addwfc	i2___flmul@prod+3,f,c
 57996  015D10  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 57997  015D14  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 57998  015D18  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 57999  015D1C  6A3E               	clrf	i2___flmul@grs,c
 58000  015D1E  5034               	movf	i2___flmul@a,w,c
 58001  015D20  0231               	mulwf	i2___flmul@b+1,c
 58002  015D22  CFF3 F047          	movff	prodl,i2___flmul@temp
 58003  015D26  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 58004  015D2A  5047               	movf	i2___flmul@temp,w,c
 58005  015D2C  263E               	addwf	i2___flmul@grs,f,c
 58006  015D2E  5048               	movf	i2___flmul@temp+1,w,c
 58007  015D30  223F               	addwfc	i2___flmul@grs+1,f,c
 58008  015D32  0E00               	movlw	0
 58009  015D34  2240               	addwfc	i2___flmul@grs+2,f,c
 58010  015D36  0E00               	movlw	0
 58011  015D38  2241               	addwfc	i2___flmul@grs+3,f,c
 58012  015D3A  5035               	movf	i2___flmul@a+1,w,c
 58013  015D3C  0230               	mulwf	i2___flmul@b,c
 58014  015D3E  CFF3 F047          	movff	prodl,i2___flmul@temp
 58015  015D42  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 58016  015D46  5047               	movf	i2___flmul@temp,w,c
 58017  015D48  263E               	addwf	i2___flmul@grs,f,c
 58018  015D4A  5048               	movf	i2___flmul@temp+1,w,c
 58019  015D4C  223F               	addwfc	i2___flmul@grs+1,f,c
 58020  015D4E  0E00               	movlw	0
 58021  015D50  2240               	addwfc	i2___flmul@grs+2,f,c
 58022  015D52  0E00               	movlw	0
 58023  015D54  2241               	addwfc	i2___flmul@grs+3,f,c
 58024  015D56  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 58025  015D5A  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 58026  015D5E  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 58027  015D62  6A3E               	clrf	i2___flmul@grs,c
 58028  015D64  5034               	movf	i2___flmul@a,w,c
 58029  015D66  0230               	mulwf	i2___flmul@b,c
 58030  015D68  CFF3 F047          	movff	prodl,i2___flmul@temp
 58031  015D6C  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 58032  015D70  5047               	movf	i2___flmul@temp,w,c
 58033  015D72  263E               	addwf	i2___flmul@grs,f,c
 58034  015D74  5048               	movf	i2___flmul@temp+1,w,c
 58035  015D76  223F               	addwfc	i2___flmul@grs+1,f,c
 58036  015D78  0E00               	movlw	0
 58037  015D7A  2240               	addwfc	i2___flmul@grs+2,f,c
 58038  015D7C  0E00               	movlw	0
 58039  015D7E  2241               	addwfc	i2___flmul@grs+3,f,c
 58040  015D80  5036               	movf	i2___flmul@a+2,w,c
 58041  015D82  0231               	mulwf	i2___flmul@b+1,c
 58042  015D84  CFF3 F047          	movff	prodl,i2___flmul@temp
 58043  015D88  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 58044  015D8C  5047               	movf	i2___flmul@temp,w,c
 58045  015D8E  2643               	addwf	i2___flmul@prod,f,c
 58046  015D90  5048               	movf	i2___flmul@temp+1,w,c
 58047  015D92  2244               	addwfc	i2___flmul@prod+1,f,c
 58048  015D94  0E00               	movlw	0
 58049  015D96  2245               	addwfc	i2___flmul@prod+2,f,c
 58050  015D98  0E00               	movlw	0
 58051  015D9A  2246               	addwfc	i2___flmul@prod+3,f,c
 58052  015D9C  5035               	movf	i2___flmul@a+1,w,c
 58053  015D9E  0232               	mulwf	i2___flmul@b+2,c
 58054  015DA0  CFF3 F047          	movff	prodl,i2___flmul@temp
 58055  015DA4  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 58056  015DA8  5047               	movf	i2___flmul@temp,w,c
 58057  015DAA  2643               	addwf	i2___flmul@prod,f,c
 58058  015DAC  5048               	movf	i2___flmul@temp+1,w,c
 58059  015DAE  2244               	addwfc	i2___flmul@prod+1,f,c
 58060  015DB0  0E00               	movlw	0
 58061  015DB2  2245               	addwfc	i2___flmul@prod+2,f,c
 58062  015DB4  0E00               	movlw	0
 58063  015DB6  2246               	addwfc	i2___flmul@prod+3,f,c
 58064  015DB8  5036               	movf	i2___flmul@a+2,w,c
 58065  015DBA  0232               	mulwf	i2___flmul@b+2,c
 58066  015DBC  CFF3 F047          	movff	prodl,i2___flmul@temp
 58067  015DC0  CFF4 F048          	movff	prodh,i2___flmul@temp+1
 58068  015DC4  5047               	movf	i2___flmul@temp,w,c
 58069  015DC6  6E38               	movwf	??i2___flmul& (0+255),c
 58070  015DC8  5048               	movf	i2___flmul@temp+1,w,c
 58071  015DCA  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 58072  015DCC  6A3A               	clrf	(??i2___flmul+2)& (0+255),c
 58073  015DCE  6A3B               	clrf	(??i2___flmul+3)& (0+255),c
 58074  015DD0  C03A  F03B         	movff	??i2___flmul+2,??i2___flmul+3
 58075  015DD4  C039  F03A         	movff	??i2___flmul+1,??i2___flmul+2
 58076  015DD8  C038  F039         	movff	??i2___flmul,??i2___flmul+1
 58077  015DDC  6A38               	clrf	??i2___flmul,c
 58078  015DDE  5038               	movf	??i2___flmul,w,c
 58079  015DE0  2643               	addwf	i2___flmul@prod,f,c
 58080  015DE2  5039               	movf	??i2___flmul+1,w,c
 58081  015DE4  2244               	addwfc	i2___flmul@prod+1,f,c
 58082  015DE6  503A               	movf	??i2___flmul+2,w,c
 58083  015DE8  2245               	addwfc	i2___flmul@prod+2,f,c
 58084  015DEA  503B               	movf	??i2___flmul+3,w,c
 58085  015DEC  2246               	addwfc	i2___flmul@prod+3,f,c
 58086  015DEE  C03E  F038         	movff	i2___flmul@grs,??i2___flmul
 58087  015DF2  C03F  F039         	movff	i2___flmul@grs+1,??i2___flmul+1
 58088  015DF6  C040  F03A         	movff	i2___flmul@grs+2,??i2___flmul+2
 58089  015DFA  C041  F03B         	movff	i2___flmul@grs+3,??i2___flmul+3
 58090  015DFE  0E19               	movlw	25
 58091  015E00  D005               	goto	i2u1918_40
 58092  015E02                     i2u1918_45:
 58093  015E02  90D8               	bcf	status,0,c
 58094  015E04  323B               	rrcf	??i2___flmul+3,f,c
 58095  015E06  323A               	rrcf	??i2___flmul+2,f,c
 58096  015E08  3239               	rrcf	??i2___flmul+1,f,c
 58097  015E0A  3238               	rrcf	??i2___flmul,f,c
 58098  015E0C                     i2u1918_40:
 58099  015E0C  2EE8               	decfsz	wreg,f,c
 58100  015E0E  D7F9               	goto	i2u1918_45
 58101  015E10  5038               	movf	??i2___flmul,w,c
 58102  015E12  2643               	addwf	i2___flmul@prod,f,c
 58103  015E14  5039               	movf	??i2___flmul+1,w,c
 58104  015E16  2244               	addwfc	i2___flmul@prod+1,f,c
 58105  015E18  503A               	movf	??i2___flmul+2,w,c
 58106  015E1A  2245               	addwfc	i2___flmul@prod+2,f,c
 58107  015E1C  503B               	movf	??i2___flmul+3,w,c
 58108  015E1E  2246               	addwfc	i2___flmul@prod+3,f,c
 58109  015E20  C040  F041         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 58110  015E24  C03F  F040         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 58111  015E28  C03E  F03F         	movff	i2___flmul@grs,i2___flmul@grs+1
 58112  015E2C  6A3E               	clrf	i2___flmul@grs,c
 58113  015E2E  503D               	movf	i2___flmul@aexp,w,c
 58114  015E30  C042  F038         	movff	i2___flmul@bexp,??i2___flmul
 58115  015E34  6A39               	clrf	(??i2___flmul+1)& (0+255),c
 58116  015E36  2638               	addwf	??i2___flmul,f,c
 58117  015E38  0E00               	movlw	0
 58118  015E3A  2239               	addwfc	??i2___flmul+1,f,c
 58119  015E3C  0E82               	movlw	130
 58120  015E3E  2438               	addwf	??i2___flmul,w,c
 58121  015E40  6E47               	movwf	i2___flmul@temp,c
 58122  015E42  0EFF               	movlw	255
 58123  015E44  2039               	addwfc	??i2___flmul+1,w,c
 58124  015E46  6E48               	movwf	i2___flmul@temp+1,c
 58125  015E48  D00F               	goto	i2l2973
 58126  015E4A  90D8               	bcf	status,0,c
 58127  015E4C  3643               	rlcf	i2___flmul@prod,f,c
 58128  015E4E  3644               	rlcf	i2___flmul@prod+1,f,c
 58129  015E50  3645               	rlcf	i2___flmul@prod+2,f,c
 58130  015E52  3646               	rlcf	i2___flmul@prod+3,f,c
 58131  015E54  BE41               	btfsc	i2___flmul@grs+3,7,c
 58132  015E56  8043               	bsf	i2___flmul@prod,0,c
 58133  015E58  90D8               	bcf	status,0,c
 58134  015E5A  363E               	rlcf	i2___flmul@grs,f,c
 58135  015E5C  363F               	rlcf	i2___flmul@grs+1,f,c
 58136  015E5E  3640               	rlcf	i2___flmul@grs+2,f,c
 58137  015E60  3641               	rlcf	i2___flmul@grs+3,f,c
 58138  015E62  0647               	decf	i2___flmul@temp,f,c
 58139  015E64  A0D8               	btfss	status,0,c
 58140  015E66  0648               	decf	i2___flmul@temp+1,f,c
 58141  015E68                     i2l2973:
 58142  015E68  AE45               	btfss	i2___flmul@prod+2,7,c
 58143  015E6A  D7EF               	goto	i2l2974
 58144  015E6C  0E00               	movlw	0
 58145  015E6E  6E3D               	movwf	i2___flmul@aexp,c
 58146  015E70  AE41               	btfss	i2___flmul@grs+3,7,c
 58147  015E72  D016               	goto	i2l2980
 58148  015E74  0EFF               	movlw	255
 58149  015E76  143E               	andwf	i2___flmul@grs,w,c
 58150  015E78  6E38               	movwf	??i2___flmul& (0+255),c
 58151  015E7A  0EFF               	movlw	255
 58152  015E7C  143F               	andwf	i2___flmul@grs+1,w,c
 58153  015E7E  6E39               	movwf	(??i2___flmul+1)& (0+255),c
 58154  015E80  0EFF               	movlw	255
 58155  015E82  1440               	andwf	i2___flmul@grs+2,w,c
 58156  015E84  6E3A               	movwf	(??i2___flmul+2)& (0+255),c
 58157  015E86  0E7F               	movlw	127
 58158  015E88  1441               	andwf	i2___flmul@grs+3,w,c
 58159  015E8A  6E3B               	movwf	(??i2___flmul+3)& (0+255),c
 58160  015E8C  5038               	movf	??i2___flmul,w,c
 58161  015E8E  1039               	iorwf	??i2___flmul+1,w,c
 58162  015E90  103A               	iorwf	??i2___flmul+2,w,c
 58163  015E92  103B               	iorwf	??i2___flmul+3,w,c
 58164  015E94  A4D8               	btfss	status,2,c
 58165  015E96  D002               	goto	i2u1923_40
 58166  015E98  A043               	btfss	i2___flmul@prod,0,c
 58167  015E9A  D002               	goto	i2l2980
 58168  015E9C                     i2u1923_40:
 58169  015E9C  0E01               	movlw	1
 58170  015E9E  6E3D               	movwf	i2___flmul@aexp,c
 58171  015EA0                     i2l2980:
 58172  015EA0  503D               	movf	i2___flmul@aexp,w,c
 58173  015EA2  B4D8               	btfsc	status,2,c
 58174  015EA4  D01F               	goto	i2l2982
 58175  015EA6  0E01               	movlw	1
 58176  015EA8  2643               	addwf	i2___flmul@prod,f,c
 58177  015EAA  0E00               	movlw	0
 58178  015EAC  2244               	addwfc	i2___flmul@prod+1,f,c
 58179  015EAE  2245               	addwfc	i2___flmul@prod+2,f,c
 58180  015EB0  2246               	addwfc	i2___flmul@prod+3,f,c
 58181  015EB2  A046               	btfss	i2___flmul@prod+3,0,c
 58182  015EB4  D017               	goto	i2l2982
 58183  015EB6  C043  F038         	movff	i2___flmul@prod,??i2___flmul
 58184  015EBA  C044  F039         	movff	i2___flmul@prod+1,??i2___flmul+1
 58185  015EBE  C045  F03A         	movff	i2___flmul@prod+2,??i2___flmul+2
 58186  015EC2  C046  F03B         	movff	i2___flmul@prod+3,??i2___flmul+3
 58187  015EC6  343B               	rlcf	??i2___flmul+3,w,c
 58188  015EC8  323B               	rrcf	??i2___flmul+3,f,c
 58189  015ECA  323A               	rrcf	??i2___flmul+2,f,c
 58190  015ECC  3239               	rrcf	??i2___flmul+1,f,c
 58191  015ECE  3238               	rrcf	??i2___flmul,f,c
 58192  015ED0  C038  F043         	movff	??i2___flmul,i2___flmul@prod
 58193  015ED4  C039  F044         	movff	??i2___flmul+1,i2___flmul@prod+1
 58194  015ED8  C03A  F045         	movff	??i2___flmul+2,i2___flmul@prod+2
 58195  015EDC  C03B  F046         	movff	??i2___flmul+3,i2___flmul@prod+3
 58196  015EE0  4A47               	infsnz	i2___flmul@temp,f,c
 58197  015EE2  2A48               	incf	i2___flmul@temp+1,f,c
 58198  015EE4                     i2l2982:
 58199  015EE4  BE48               	btfsc	i2___flmul@temp+1,7,c
 58200  015EE6  D00D               	goto	i2l2983
 58201  015EE8  5048               	movf	i2___flmul@temp+1,w,c
 58202  015EEA  E103               	bnz	i2u1926_40
 58203  015EEC  2847               	incf	i2___flmul@temp,w,c
 58204  015EEE  A0D8               	btfss	status,0,c
 58205  015EF0  D008               	goto	i2l2983
 58206  015EF2                     i2u1926_40:
 58207  015EF2  0E00               	movlw	0
 58208  015EF4  6E43               	movwf	i2___flmul@prod,c
 58209  015EF6  0E00               	movlw	0
 58210  015EF8  6E44               	movwf	i2___flmul@prod+1,c
 58211  015EFA  0E80               	movlw	128
 58212  015EFC  6E45               	movwf	i2___flmul@prod+2,c
 58213  015EFE  0E7F               	movlw	127
 58214  015F00  D020               	goto	L29
 58215  015F02                     i2l2983:
 58216  015F02  BE48               	btfsc	i2___flmul@temp+1,7,c
 58217  015F04  D005               	goto	i2u1927_40
 58218  015F06  5048               	movf	i2___flmul@temp+1,w,c
 58219  015F08  E10E               	bnz	i2l2985
 58220  015F0A  0447               	decf	i2___flmul@temp,w,c
 58221  015F0C  B0D8               	btfsc	status,0,c
 58222  015F0E  D00B               	goto	i2l2985
 58223  015F10                     i2u1927_40:
 58224  015F10  0E00               	movlw	0
 58225  015F12  6E43               	movwf	i2___flmul@prod,c
 58226  015F14  0E00               	movlw	0
 58227  015F16  6E44               	movwf	i2___flmul@prod+1,c
 58228  015F18  0E00               	movlw	0
 58229  015F1A  6E45               	movwf	i2___flmul@prod+2,c
 58230  015F1C  0E00               	movlw	0
 58231  015F1E  6E46               	movwf	i2___flmul@prod+3,c
 58232  015F20  0E00               	movlw	0
 58233  015F22  6E3C               	movwf	i2___flmul@sign,c
 58234  015F24  D00F               	goto	i2l2986
 58235  015F26                     i2l2985:
 58236  015F26  C047  F042         	movff	i2___flmul@temp,i2___flmul@bexp
 58237  015F2A  0EFF               	movlw	255
 58238  015F2C  1643               	andwf	i2___flmul@prod,f,c
 58239  015F2E  0EFF               	movlw	255
 58240  015F30  1644               	andwf	i2___flmul@prod+1,f,c
 58241  015F32  0E7F               	movlw	127
 58242  015F34  1645               	andwf	i2___flmul@prod+2,f,c
 58243  015F36  0E00               	movlw	0
 58244  015F38  1646               	andwf	i2___flmul@prod+3,f,c
 58245  015F3A  B042               	btfsc	i2___flmul@bexp,0,c
 58246  015F3C  8E45               	bsf	i2___flmul@prod+2,7,c
 58247  015F3E  90D8               	bcf	status,0,c
 58248  015F40  3042               	rrcf	i2___flmul@bexp,w,c
 58249  015F42                     L29:
 58250  015F42  6E46               	movwf	i2___flmul@prod+3,c
 58251  015F44                     i2l2986:
 58252  015F44  503C               	movf	i2___flmul@sign,w,c
 58253  015F46  1246               	iorwf	i2___flmul@prod+3,f,c
 58254  015F48  C043  F030         	movff	i2___flmul@prod,?i2___flmul
 58255  015F4C  C044  F031         	movff	i2___flmul@prod+1,?i2___flmul+1
 58256  015F50  C045  F032         	movff	i2___flmul@prod+2,?i2___flmul+2
 58257  015F54  C046  F033         	movff	i2___flmul@prod+3,?i2___flmul+3
 58258  015F58  0012               	return	
 58259  015F5A                     __end_ofi2___flmul:
 58260                           	opt stack 0
 58261                           tosu	equ	0xFFF
 58262                           tosh	equ	0xFFE
 58263                           tosl	equ	0xFFD
 58264                           pclatu	equ	0xFFB
 58265                           pclath	equ	0xFFA
 58266                           tblptru	equ	0xFF8
 58267                           tblptrh	equ	0xFF7
 58268                           tblptrl	equ	0xFF6
 58269                           tablat	equ	0xFF5
 58270                           prodh	equ	0xFF4
 58271                           prodl	equ	0xFF3
 58272                           intcon	equ	0xFF2
 58273                           indf0	equ	0xFEF
 58274                           postinc0	equ	0xFEE
 58275                           fsr0h	equ	0xFEA
 58276                           fsr0l	equ	0xFE9
 58277                           wreg	equ	0xFE8
 58278                           indf1	equ	0xFE7
 58279                           postdec1	equ	0xFE5
 58280                           plusw1	equ	0xFE3
 58281                           fsr1h	equ	0xFE2
 58282                           fsr1l	equ	0xFE1
 58283                           bsr	equ	0xFE0
 58284                           indf2	equ	0xFDF
 58285                           postinc2	equ	0xFDE
 58286                           postdec2	equ	0xFDD
 58287                           plusw2	equ	0xFDB
 58288                           fsr2h	equ	0xFDA
 58289                           fsr2l	equ	0xFD9
 58290                           status	equ	0xFD8
 58291                           
 58292 ;; *************** function i2___fladd *****************
 58293 ;; Defined at:
 58294 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 58295 ;; Parameters:    Size  Location     Type
 58296 ;;  b               4   85[COMRAM] unsigned char 
 58297 ;;  a               4   89[COMRAM] unsigned char 
 58298 ;; Auto vars:     Size  Location     Type
 58299 ;;  __fladd         1   11[BANK0 ] unsigned char 
 58300 ;;  __fladd         1   10[BANK0 ] unsigned char 
 58301 ;;  __fladd         1    9[BANK0 ] unsigned char 
 58302 ;;  __fladd         1    8[BANK0 ] unsigned char 
 58303 ;; Return value:  Size  Location     Type
 58304 ;;                  4   85[COMRAM] unsigned char 
 58305 ;; Registers used:
 58306 ;;		wreg, status,2, status,0
 58307 ;; Tracked objects:
 58308 ;;		On entry : 0/0
 58309 ;;		On exit  : 0/0
 58310 ;;		Unchanged: 0/0
 58311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 58312 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58313 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58314 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58315 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 58316 ;;Total ram usage:       20 bytes
 58317 ;; Hardware stack levels used:    1
 58318 ;; This function calls:
 58319 ;;		Nothing
 58320 ;; This function is called by:
 58321 ;;		_peakToRMS
 58322 ;;		_ADC_PostProcessingCallback
 58323 ;;		_acos
 58324 ;;		_asin
 58325 ;;		_atan
 58326 ;;		_eval_poly
 58327 ;;		_sin
 58328 ;;		_floor
 58329 ;;		i2__doprnt
 58330 ;;		i2___flsub
 58331 ;; This function uses a non-reentrant model
 58332 ;;
 58333                           
 58334                           	psect	text195
 58335  016298                     __ptext195:
 58336                           	opt stack 0
 58337  016298                     i2___fladd:
 58338                           	opt stack 6
 58339                           
 58340                           ;incstack = 0
 58341  016298  5059               	movf	i2___fladd@b+3,w,c
 58342  01629A  0B80               	andlw	128
 58343  01629C  0100               	movlb	0	; () banked
 58344  01629E  6F68               	movwf	i2___fladd@signs& (0+255),b
 58345  0162A0  5059               	movf	i2___fladd@b+3,w,c
 58346  0162A2  2459               	addwf	i2___fladd@b+3,w,c
 58347  0162A4  6F6A               	movwf	i2___fladd@bexp& (0+255),b
 58348                           
 58349                           ; BSR set to: 0
 58350  0162A6  BE58               	btfsc	i2___fladd@b+2,7,c
 58351                           
 58352                           ; BSR set to: 0
 58353  0162A8  816A               	bsf	i2___fladd@bexp& (0+255),0,b
 58354                           
 58355                           ; BSR set to: 0
 58356                           
 58357                           ; BSR set to: 0
 58358  0162AA  516A               	movf	i2___fladd@bexp& (0+255),w,b
 58359  0162AC  B4D8               	btfsc	status,2,c
 58360  0162AE  D00D               	goto	i2l2871
 58361                           
 58362                           ; BSR set to: 0
 58363  0162B0  296A               	incf	i2___fladd@bexp& (0+255),w,b
 58364  0162B2  A4D8               	btfss	status,2,c
 58365  0162B4  D008               	goto	i2l2872
 58366                           
 58367                           ; BSR set to: 0
 58368  0162B6  0E00               	movlw	0
 58369  0162B8  6E56               	movwf	i2___fladd@b,c
 58370  0162BA  0E00               	movlw	0
 58371  0162BC  6E57               	movwf	i2___fladd@b+1,c
 58372  0162BE  0E00               	movlw	0
 58373  0162C0  6E58               	movwf	i2___fladd@b+2,c
 58374  0162C2  0E00               	movlw	0
 58375  0162C4  6E59               	movwf	i2___fladd@b+3,c
 58376  0162C6                     i2l2872:
 58377                           
 58378                           ; BSR set to: 0
 58379                           
 58380                           ; BSR set to: 0
 58381  0162C6  8E58               	bsf	i2___fladd@b+2,7,c
 58382  0162C8  D006               	goto	L30
 58383  0162CA                     i2l2871:
 58384                           
 58385                           ; BSR set to: 0
 58386                           
 58387                           ; BSR set to: 0
 58388  0162CA  0E00               	movlw	0
 58389  0162CC  6E56               	movwf	i2___fladd@b,c
 58390  0162CE  0E00               	movlw	0
 58391  0162D0  6E57               	movwf	i2___fladd@b+1,c
 58392  0162D2  0E00               	movlw	0
 58393  0162D4  6E58               	movwf	i2___fladd@b+2,c
 58394  0162D6                     L30:
 58395  0162D6  0E00               	movlw	0
 58396  0162D8  6E59               	movwf	i2___fladd@b+3,c
 58397                           
 58398                           ; BSR set to: 0
 58399                           
 58400                           ; BSR set to: 0
 58401  0162DA  505D               	movf	i2___fladd@a+3,w,c
 58402  0162DC  0B80               	andlw	128
 58403  0162DE  6F69               	movwf	i2___fladd@aexp& (0+255),b
 58404                           
 58405                           ; BSR set to: 0
 58406  0162E0  5168               	movf	i2___fladd@signs& (0+255),w,b
 58407  0162E2  1969               	xorwf	i2___fladd@aexp& (0+255),w,b
 58408  0162E4  A4D8               	btfss	status,2,c
 58409                           
 58410                           ; BSR set to: 0
 58411  0162E6  8D68               	bsf	i2___fladd@signs& (0+255),6,b
 58412                           
 58413                           ; BSR set to: 0
 58414                           
 58415                           ; BSR set to: 0
 58416  0162E8  505D               	movf	i2___fladd@a+3,w,c
 58417  0162EA  245D               	addwf	i2___fladd@a+3,w,c
 58418  0162EC  6F69               	movwf	i2___fladd@aexp& (0+255),b
 58419                           
 58420                           ; BSR set to: 0
 58421  0162EE  BE5C               	btfsc	i2___fladd@a+2,7,c
 58422                           
 58423                           ; BSR set to: 0
 58424  0162F0  8169               	bsf	i2___fladd@aexp& (0+255),0,b
 58425                           
 58426                           ; BSR set to: 0
 58427                           
 58428                           ; BSR set to: 0
 58429  0162F2  5169               	movf	i2___fladd@aexp& (0+255),w,b
 58430  0162F4  B4D8               	btfsc	status,2,c
 58431  0162F6  D00D               	goto	i2l2876
 58432                           
 58433                           ; BSR set to: 0
 58434  0162F8  2969               	incf	i2___fladd@aexp& (0+255),w,b
 58435  0162FA  A4D8               	btfss	status,2,c
 58436  0162FC  D008               	goto	i2l2877
 58437                           
 58438                           ; BSR set to: 0
 58439  0162FE  0E00               	movlw	0
 58440  016300  6E5A               	movwf	i2___fladd@a,c
 58441  016302  0E00               	movlw	0
 58442  016304  6E5B               	movwf	i2___fladd@a+1,c
 58443  016306  0E00               	movlw	0
 58444  016308  6E5C               	movwf	i2___fladd@a+2,c
 58445  01630A  0E00               	movlw	0
 58446  01630C  6E5D               	movwf	i2___fladd@a+3,c
 58447  01630E                     i2l2877:
 58448                           
 58449                           ; BSR set to: 0
 58450                           
 58451                           ; BSR set to: 0
 58452  01630E  8E5C               	bsf	i2___fladd@a+2,7,c
 58453  016310  D006               	goto	L31
 58454  016312                     i2l2876:
 58455                           
 58456                           ; BSR set to: 0
 58457                           
 58458                           ; BSR set to: 0
 58459  016312  0E00               	movlw	0
 58460  016314  6E5A               	movwf	i2___fladd@a,c
 58461  016316  0E00               	movlw	0
 58462  016318  6E5B               	movwf	i2___fladd@a+1,c
 58463  01631A  0E00               	movlw	0
 58464  01631C  6E5C               	movwf	i2___fladd@a+2,c
 58465  01631E                     L31:
 58466  01631E  0E00               	movlw	0
 58467  016320  6E5D               	movwf	i2___fladd@a+3,c
 58468                           
 58469                           ; BSR set to: 0
 58470                           
 58471                           ; BSR set to: 0
 58472  016322  516A               	movf	i2___fladd@bexp& (0+255),w,b
 58473  016324  5D69               	subwf	i2___fladd@aexp& (0+255),w,b
 58474  016326  B0D8               	btfsc	status,0,c
 58475  016328  D022               	goto	i2l2879
 58476                           
 58477                           ; BSR set to: 0
 58478  01632A  AD68               	btfss	i2___fladd@signs& (0+255),6,b
 58479  01632C  D002               	goto	i2l2880
 58480                           
 58481                           ; BSR set to: 0
 58482  01632E  0E80               	movlw	128
 58483  016330  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 58484  016332                     i2l2880:
 58485                           
 58486                           ; BSR set to: 0
 58487                           
 58488                           ; BSR set to: 0
 58489  016332  C06A  F06B         	movff	i2___fladd@bexp,i2___fladd@grs
 58490                           
 58491                           ; BSR set to: 0
 58492  016336  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 58493                           
 58494                           ; BSR set to: 0
 58495  01633A  C06B  F069         	movff	i2___fladd@grs,i2___fladd@aexp
 58496                           
 58497                           ; BSR set to: 0
 58498  01633E  C056  F06B         	movff	i2___fladd@b,i2___fladd@grs
 58499                           
 58500                           ; BSR set to: 0
 58501  016342  C05A  F056         	movff	i2___fladd@a,i2___fladd@b
 58502                           
 58503                           ; BSR set to: 0
 58504  016346  C06B  F05A         	movff	i2___fladd@grs,i2___fladd@a
 58505                           
 58506                           ; BSR set to: 0
 58507  01634A  C057  F06B         	movff	i2___fladd@b+1,i2___fladd@grs
 58508                           
 58509                           ; BSR set to: 0
 58510  01634E  C05B  F057         	movff	i2___fladd@a+1,i2___fladd@b+1
 58511                           
 58512                           ; BSR set to: 0
 58513  016352  C06B  F05B         	movff	i2___fladd@grs,i2___fladd@a+1
 58514                           
 58515                           ; BSR set to: 0
 58516  016356  C058  F06B         	movff	i2___fladd@b+2,i2___fladd@grs
 58517                           
 58518                           ; BSR set to: 0
 58519  01635A  C05C  F058         	movff	i2___fladd@a+2,i2___fladd@b+2
 58520                           
 58521                           ; BSR set to: 0
 58522  01635E  C06B  F05C         	movff	i2___fladd@grs,i2___fladd@a+2
 58523                           
 58524                           ; BSR set to: 0
 58525  016362  C059  F06B         	movff	i2___fladd@b+3,i2___fladd@grs
 58526                           
 58527                           ; BSR set to: 0
 58528  016366  C05D  F059         	movff	i2___fladd@a+3,i2___fladd@b+3
 58529                           
 58530                           ; BSR set to: 0
 58531  01636A  C06B  F05D         	movff	i2___fladd@grs,i2___fladd@a+3
 58532  01636E                     i2l2879:
 58533                           
 58534                           ; BSR set to: 0
 58535                           
 58536                           ; BSR set to: 0
 58537  01636E  0E00               	movlw	0
 58538  016370  6F6B               	movwf	i2___fladd@grs& (0+255),b
 58539                           
 58540                           ; BSR set to: 0
 58541  016372  516A               	movf	i2___fladd@bexp& (0+255),w,b
 58542  016374  6F60               	movwf	??i2___fladd& (0+255),b
 58543  016376  6B61               	clrf	(??i2___fladd+1)& (0+255),b
 58544  016378  1F60               	comf	??i2___fladd& (0+255),f,b
 58545  01637A  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 58546  01637C  4B60               	infsnz	??i2___fladd& (0+255),f,b
 58547  01637E  2B61               	incf	(??i2___fladd+1)& (0+255),f,b
 58548  016380  5169               	movf	i2___fladd@aexp& (0+255),w,b
 58549  016382  6F62               	movwf	(??i2___fladd+2)& (0+255),b
 58550  016384  6B63               	clrf	(??i2___fladd+3)& (0+255),b
 58551  016386  5160               	movf	??i2___fladd& (0+255),w,b
 58552  016388  2762               	addwf	(??i2___fladd+2)& (0+255),f,b
 58553  01638A  5161               	movf	(??i2___fladd+1)& (0+255),w,b
 58554  01638C  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 58555  01638E  BF63               	btfsc	(??i2___fladd+3)& (0+255),7,b
 58556  016390  D02C               	goto	i2l2883
 58557  016392  5163               	movf	(??i2___fladd+3)& (0+255),w,b
 58558  016394  E104               	bnz	i2u1880_40
 58559  016396  0E1A               	movlw	26
 58560  016398  5D62               	subwf	(??i2___fladd+2)& (0+255),w,b
 58561  01639A  A0D8               	btfss	status,0,c
 58562  01639C  D026               	goto	i2l2883
 58563  01639E                     i2u1880_40:
 58564                           
 58565                           ; BSR set to: 0
 58566  01639E  5056               	movf	i2___fladd@b,w,c
 58567  0163A0  1057               	iorwf	i2___fladd@b+1,w,c
 58568  0163A2  1058               	iorwf	i2___fladd@b+2,w,c
 58569  0163A4  1059               	iorwf	i2___fladd@b+3,w,c
 58570  0163A6  B4D8               	btfsc	status,2,c
 58571  0163A8  D002               	goto	i2u1881_40
 58572  0163AA  0E01               	movlw	1
 58573  0163AC  D001               	goto	i2u1882_40
 58574  0163AE                     i2u1881_40:
 58575  0163AE  0E00               	movlw	0
 58576  0163B0                     i2u1882_40:
 58577  0163B0  6F6B               	movwf	i2___fladd@grs& (0+255),b
 58578                           
 58579                           ; BSR set to: 0
 58580  0163B2  0E00               	movlw	0
 58581  0163B4  6E56               	movwf	i2___fladd@b,c
 58582  0163B6  0E00               	movlw	0
 58583  0163B8  6E57               	movwf	i2___fladd@b+1,c
 58584  0163BA  0E00               	movlw	0
 58585  0163BC  6E58               	movwf	i2___fladd@b+2,c
 58586  0163BE  0E00               	movlw	0
 58587  0163C0  6E59               	movwf	i2___fladd@b+3,c
 58588                           
 58589                           ; BSR set to: 0
 58590  0163C2  C069  F06A         	movff	i2___fladd@aexp,i2___fladd@bexp
 58591  0163C6  D015               	goto	i2u1885_40
 58592  0163C8                     i2l2884:
 58593                           
 58594                           ; BSR set to: 0
 58595  0163C8  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 58596  0163CA  D005               	goto	i2l2885
 58597                           
 58598                           ; BSR set to: 0
 58599  0163CC  90D8               	bcf	status,0,c
 58600  0163CE  316B               	rrcf	i2___fladd@grs& (0+255),w,b
 58601  0163D0  0901               	iorlw	1
 58602  0163D2  6F6B               	movwf	i2___fladd@grs& (0+255),b
 58603  0163D4  D002               	goto	i2l2886
 58604  0163D6                     i2l2885:
 58605                           
 58606                           ; BSR set to: 0
 58607                           
 58608                           ; BSR set to: 0
 58609  0163D6  90D8               	bcf	status,0,c
 58610  0163D8  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 58611  0163DA                     i2l2886:
 58612                           
 58613                           ; BSR set to: 0
 58614                           
 58615                           ; BSR set to: 0
 58616  0163DA  B056               	btfsc	i2___fladd@b,0,c
 58617                           
 58618                           ; BSR set to: 0
 58619  0163DC  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 58620                           
 58621                           ; BSR set to: 0
 58622                           
 58623                           ; BSR set to: 0
 58624  0163DE  3459               	rlcf	i2___fladd@b+3,w,c
 58625  0163E0  3259               	rrcf	i2___fladd@b+3,f,c
 58626  0163E2  3258               	rrcf	i2___fladd@b+2,f,c
 58627  0163E4  3257               	rrcf	i2___fladd@b+1,f,c
 58628  0163E6  3256               	rrcf	i2___fladd@b,f,c
 58629                           
 58630                           ; BSR set to: 0
 58631  0163E8  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 58632  0163EA                     i2l2883:
 58633                           
 58634                           ; BSR set to: 0
 58635  0163EA  5169               	movf	i2___fladd@aexp& (0+255),w,b
 58636  0163EC  5D6A               	subwf	i2___fladd@bexp& (0+255),w,b
 58637  0163EE  A0D8               	btfss	status,0,c
 58638  0163F0  D7EB               	goto	i2l2884
 58639  0163F2                     i2u1885_40:
 58640                           
 58641                           ; BSR set to: 0
 58642                           
 58643                           ; BSR set to: 0
 58644  0163F2  BD68               	btfsc	i2___fladd@signs& (0+255),6,b
 58645  0163F4  D029               	goto	i2l2889
 58646                           
 58647                           ; BSR set to: 0
 58648  0163F6  516A               	movf	i2___fladd@bexp& (0+255),w,b
 58649  0163F8  A4D8               	btfss	status,2,c
 58650  0163FA  D009               	goto	i2l2890
 58651                           
 58652                           ; BSR set to: 0
 58653  0163FC  0E00               	movlw	0
 58654  0163FE  6E56               	movwf	?i2___fladd,c
 58655  016400  0E00               	movlw	0
 58656  016402  6E57               	movwf	?i2___fladd+1,c
 58657  016404  0E00               	movlw	0
 58658  016406  6E58               	movwf	?i2___fladd+2,c
 58659  016408  0E00               	movlw	0
 58660  01640A  6E59               	movwf	?i2___fladd+3,c
 58661                           
 58662                           ; BSR set to: 0
 58663  01640C  0012               	return	
 58664  01640E                     i2l2890:
 58665                           
 58666                           ; BSR set to: 0
 58667                           
 58668                           ; BSR set to: 0
 58669  01640E  505A               	movf	i2___fladd@a,w,c
 58670  016410  2656               	addwf	i2___fladd@b,f,c
 58671  016412  505B               	movf	i2___fladd@a+1,w,c
 58672  016414  2257               	addwfc	i2___fladd@b+1,f,c
 58673  016416  505C               	movf	i2___fladd@a+2,w,c
 58674  016418  2258               	addwfc	i2___fladd@b+2,f,c
 58675  01641A  505D               	movf	i2___fladd@a+3,w,c
 58676  01641C  2259               	addwfc	i2___fladd@b+3,f,c
 58677                           
 58678                           ; BSR set to: 0
 58679  01641E  A059               	btfss	i2___fladd@b+3,0,c
 58680  016420  D083               	goto	i2u1898_40
 58681                           
 58682                           ; BSR set to: 0
 58683  016422  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 58684  016424  D006               	goto	i2l2893
 58685                           
 58686                           ; BSR set to: 0
 58687  016426  90D8               	bcf	status,0,c
 58688  016428  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 58689  01642A  516B               	movf	i2___fladd@grs& (0+255),w,b
 58690  01642C  0901               	iorlw	1
 58691  01642E  6F6B               	movwf	i2___fladd@grs& (0+255),b
 58692  016430  D002               	goto	i2l2894
 58693  016432                     i2l2893:
 58694                           
 58695                           ; BSR set to: 0
 58696                           
 58697                           ; BSR set to: 0
 58698  016432  90D8               	bcf	status,0,c
 58699  016434  336B               	rrcf	i2___fladd@grs& (0+255),f,b
 58700  016436                     i2l2894:
 58701                           
 58702                           ; BSR set to: 0
 58703                           
 58704                           ; BSR set to: 0
 58705  016436  B056               	btfsc	i2___fladd@b,0,c
 58706                           
 58707                           ; BSR set to: 0
 58708  016438  8F6B               	bsf	i2___fladd@grs& (0+255),7,b
 58709                           
 58710                           ; BSR set to: 0
 58711                           
 58712                           ; BSR set to: 0
 58713  01643A  3459               	rlcf	i2___fladd@b+3,w,c
 58714  01643C  3259               	rrcf	i2___fladd@b+3,f,c
 58715  01643E  3258               	rrcf	i2___fladd@b+2,f,c
 58716  016440  3257               	rrcf	i2___fladd@b+1,f,c
 58717  016442  3256               	rrcf	i2___fladd@b,f,c
 58718                           
 58719                           ; BSR set to: 0
 58720  016444  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 58721                           
 58722                           ; BSR set to: 0
 58723  016446  D070               	goto	i2u1898_40
 58724  016448                     i2l2889:
 58725                           
 58726                           ; BSR set to: 0
 58727                           
 58728                           ; BSR set to: 0
 58729  016448  505A               	movf	i2___fladd@a,w,c
 58730  01644A  5C56               	subwf	i2___fladd@b,w,c
 58731  01644C  505B               	movf	i2___fladd@a+1,w,c
 58732  01644E  5857               	subwfb	i2___fladd@b+1,w,c
 58733  016450  505C               	movf	i2___fladd@a+2,w,c
 58734  016452  5858               	subwfb	i2___fladd@b+2,w,c
 58735  016454  5059               	movf	i2___fladd@b+3,w,c
 58736  016456  0A80               	xorlw	128
 58737  016458  6F60               	movwf	??i2___fladd& (0+255),b
 58738  01645A  505D               	movf	i2___fladd@a+3,w,c
 58739  01645C  0A80               	xorlw	128
 58740  01645E  5960               	subwfb	??i2___fladd& (0+255),w,b
 58741  016460  B0D8               	btfsc	status,0,c
 58742  016462  D036               	goto	i2l2897
 58743                           
 58744                           ; BSR set to: 0
 58745  016464  C056  F060         	movff	i2___fladd@b,??i2___fladd
 58746  016468  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 58747  01646C  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 58748  016470  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 58749  016474  1F60               	comf	??i2___fladd& (0+255),f,b
 58750  016476  1F61               	comf	(??i2___fladd+1)& (0+255),f,b
 58751  016478  1F62               	comf	(??i2___fladd+2)& (0+255),f,b
 58752  01647A  1F63               	comf	(??i2___fladd+3)& (0+255),f,b
 58753  01647C  2B60               	incf	??i2___fladd& (0+255),f,b
 58754  01647E  0E00               	movlw	0
 58755  016480  2361               	addwfc	(??i2___fladd+1)& (0+255),f,b
 58756  016482  2362               	addwfc	(??i2___fladd+2)& (0+255),f,b
 58757  016484  2363               	addwfc	(??i2___fladd+3)& (0+255),f,b
 58758  016486  505A               	movf	i2___fladd@a,w,c
 58759  016488  2560               	addwf	??i2___fladd& (0+255),w,b
 58760  01648A  6F64               	movwf	(??i2___fladd+4)& (0+255),b
 58761  01648C  505B               	movf	i2___fladd@a+1,w,c
 58762  01648E  2161               	addwfc	(??i2___fladd+1)& (0+255),w,b
 58763  016490  6F65               	movwf	(??i2___fladd+5)& (0+255),b
 58764  016492  505C               	movf	i2___fladd@a+2,w,c
 58765  016494  2162               	addwfc	(??i2___fladd+2)& (0+255),w,b
 58766  016496  6F66               	movwf	(??i2___fladd+6)& (0+255),b
 58767  016498  505D               	movf	i2___fladd@a+3,w,c
 58768  01649A  2163               	addwfc	(??i2___fladd+3)& (0+255),w,b
 58769  01649C  6F67               	movwf	(??i2___fladd+7)& (0+255),b
 58770  01649E  0EFF               	movlw	255
 58771  0164A0  2564               	addwf	(??i2___fladd+4)& (0+255),w,b
 58772  0164A2  6E56               	movwf	i2___fladd@b,c
 58773  0164A4  0EFF               	movlw	255
 58774  0164A6  2165               	addwfc	(??i2___fladd+5)& (0+255),w,b
 58775  0164A8  6E57               	movwf	i2___fladd@b+1,c
 58776  0164AA  0EFF               	movlw	255
 58777  0164AC  2166               	addwfc	(??i2___fladd+6)& (0+255),w,b
 58778  0164AE  6E58               	movwf	i2___fladd@b+2,c
 58779  0164B0  0EFF               	movlw	255
 58780  0164B2  2167               	addwfc	(??i2___fladd+7)& (0+255),w,b
 58781  0164B4  6E59               	movwf	i2___fladd@b+3,c
 58782  0164B6  0E80               	movlw	128
 58783  0164B8  1B68               	xorwf	i2___fladd@signs& (0+255),f,b
 58784                           
 58785                           ; BSR set to: 0
 58786  0164BA  6D6B               	negf	i2___fladd@grs& (0+255),b
 58787                           
 58788                           ; BSR set to: 0
 58789  0164BC  516B               	movf	i2___fladd@grs& (0+255),w,b
 58790  0164BE  A4D8               	btfss	status,2,c
 58791  0164C0  D00F               	goto	i2l2899
 58792                           
 58793                           ; BSR set to: 0
 58794  0164C2  0E01               	movlw	1
 58795  0164C4  2656               	addwf	i2___fladd@b,f,c
 58796  0164C6  0E00               	movlw	0
 58797  0164C8  2257               	addwfc	i2___fladd@b+1,f,c
 58798  0164CA  2258               	addwfc	i2___fladd@b+2,f,c
 58799  0164CC  2259               	addwfc	i2___fladd@b+3,f,c
 58800                           
 58801                           ; BSR set to: 0
 58802  0164CE  D008               	goto	i2l2899
 58803  0164D0                     i2l2897:
 58804                           
 58805                           ; BSR set to: 0
 58806                           
 58807                           ; BSR set to: 0
 58808  0164D0  505A               	movf	i2___fladd@a,w,c
 58809  0164D2  5E56               	subwf	i2___fladd@b,f,c
 58810  0164D4  505B               	movf	i2___fladd@a+1,w,c
 58811  0164D6  5A57               	subwfb	i2___fladd@b+1,f,c
 58812  0164D8  505C               	movf	i2___fladd@a+2,w,c
 58813  0164DA  5A58               	subwfb	i2___fladd@b+2,f,c
 58814  0164DC  505D               	movf	i2___fladd@a+3,w,c
 58815  0164DE  5A59               	subwfb	i2___fladd@b+3,f,c
 58816  0164E0                     i2l2899:
 58817                           
 58818                           ; BSR set to: 0
 58819  0164E0  5056               	movf	i2___fladd@b,w,c
 58820  0164E2  1057               	iorwf	i2___fladd@b+1,w,c
 58821  0164E4  1058               	iorwf	i2___fladd@b+2,w,c
 58822  0164E6  1059               	iorwf	i2___fladd@b+3,w,c
 58823  0164E8  A4D8               	btfss	status,2,c
 58824  0164EA  D01C               	goto	i2l2906
 58825                           
 58826                           ; BSR set to: 0
 58827  0164EC  516B               	movf	i2___fladd@grs& (0+255),w,b
 58828  0164EE  A4D8               	btfss	status,2,c
 58829  0164F0  D019               	goto	i2l2906
 58830                           
 58831                           ; BSR set to: 0
 58832  0164F2  0E00               	movlw	0
 58833  0164F4  6E56               	movwf	?i2___fladd,c
 58834  0164F6  0E00               	movlw	0
 58835  0164F8  6E57               	movwf	?i2___fladd+1,c
 58836  0164FA  0E00               	movlw	0
 58837  0164FC  6E58               	movwf	?i2___fladd+2,c
 58838  0164FE  0E00               	movlw	0
 58839  016500  6E59               	movwf	?i2___fladd+3,c
 58840                           
 58841                           ; BSR set to: 0
 58842  016502  0012               	return	
 58843  016504                     
 58844                           ; BSR set to: 0
 58845                           
 58846                           ; BSR set to: 0
 58847  016504  90D8               	bcf	status,0,c
 58848  016506  3656               	rlcf	i2___fladd@b,f,c
 58849  016508  3657               	rlcf	i2___fladd@b+1,f,c
 58850  01650A  3658               	rlcf	i2___fladd@b+2,f,c
 58851  01650C  3659               	rlcf	i2___fladd@b+3,f,c
 58852                           
 58853                           ; BSR set to: 0
 58854  01650E  BF6B               	btfsc	i2___fladd@grs& (0+255),7,b
 58855                           
 58856                           ; BSR set to: 0
 58857  016510  8056               	bsf	i2___fladd@b,0,c
 58858                           
 58859                           ; BSR set to: 0
 58860                           
 58861                           ; BSR set to: 0
 58862  016512  A16B               	btfss	i2___fladd@grs& (0+255),0,b
 58863  016514  D002               	goto	i2l2904
 58864                           
 58865                           ; BSR set to: 0
 58866  016516  80D8               	bsf	status,0,c
 58867  016518  D001               	goto	L32
 58868  01651A                     i2l2904:
 58869                           
 58870                           ; BSR set to: 0
 58871                           
 58872                           ; BSR set to: 0
 58873  01651A  90D8               	bcf	status,0,c
 58874  01651C                     L32:
 58875  01651C  376B               	rlcf	i2___fladd@grs& (0+255),f,b
 58876                           
 58877                           ; BSR set to: 0
 58878                           
 58879                           ; BSR set to: 0
 58880  01651E  516A               	movf	i2___fladd@bexp& (0+255),w,b
 58881  016520  A4D8               	btfss	status,2,c
 58882                           
 58883                           ; BSR set to: 0
 58884  016522  076A               	decf	i2___fladd@bexp& (0+255),f,b
 58885  016524                     i2l2906:
 58886                           
 58887                           ; BSR set to: 0
 58888                           
 58889                           ; BSR set to: 0
 58890                           
 58891                           ; BSR set to: 0
 58892  016524  AE58               	btfss	i2___fladd@b+2,7,c
 58893  016526  D7EE               	goto	i2l2902
 58894  016528                     i2u1898_40:
 58895                           
 58896                           ; BSR set to: 0
 58897                           
 58898                           ; BSR set to: 0
 58899                           
 58900                           ; BSR set to: 0
 58901  016528  0E00               	movlw	0
 58902  01652A  6F69               	movwf	i2___fladd@aexp& (0+255),b
 58903                           
 58904                           ; BSR set to: 0
 58905  01652C  AF6B               	btfss	i2___fladd@grs& (0+255),7,b
 58906  01652E  D00A               	goto	i2l2911
 58907                           
 58908                           ; BSR set to: 0
 58909  016530  C06B  F060         	movff	i2___fladd@grs,??i2___fladd
 58910  016534  0E7F               	movlw	127
 58911  016536  1760               	andwf	??i2___fladd& (0+255),f,b
 58912  016538  A4D8               	btfss	status,2,c
 58913  01653A  D002               	goto	i2u1901_40
 58914                           
 58915                           ; BSR set to: 0
 58916                           
 58917                           ; BSR set to: 0
 58918  01653C  A056               	btfss	i2___fladd@b,0,c
 58919  01653E  D002               	goto	i2l2911
 58920  016540                     i2u1901_40:
 58921                           
 58922                           ; BSR set to: 0
 58923  016540  0E01               	movlw	1
 58924  016542  6F69               	movwf	i2___fladd@aexp& (0+255),b
 58925  016544                     i2l2911:
 58926                           
 58927                           ; BSR set to: 0
 58928                           
 58929                           ; BSR set to: 0
 58930                           
 58931                           ; BSR set to: 0
 58932  016544  5169               	movf	i2___fladd@aexp& (0+255),w,b
 58933  016546  B4D8               	btfsc	status,2,c
 58934  016548  D020               	goto	i2l2914
 58935                           
 58936                           ; BSR set to: 0
 58937  01654A  0E01               	movlw	1
 58938  01654C  2656               	addwf	i2___fladd@b,f,c
 58939  01654E  0E00               	movlw	0
 58940  016550  2257               	addwfc	i2___fladd@b+1,f,c
 58941  016552  2258               	addwfc	i2___fladd@b+2,f,c
 58942  016554  2259               	addwfc	i2___fladd@b+3,f,c
 58943                           
 58944                           ; BSR set to: 0
 58945  016556  A059               	btfss	i2___fladd@b+3,0,c
 58946  016558  D018               	goto	i2l2914
 58947                           
 58948                           ; BSR set to: 0
 58949  01655A  C056  F060         	movff	i2___fladd@b,??i2___fladd
 58950  01655E  C057  F061         	movff	i2___fladd@b+1,??i2___fladd+1
 58951  016562  C058  F062         	movff	i2___fladd@b+2,??i2___fladd+2
 58952  016566  C059  F063         	movff	i2___fladd@b+3,??i2___fladd+3
 58953  01656A  3563               	rlcf	(??i2___fladd+3)& (0+255),w,b
 58954  01656C  3363               	rrcf	(??i2___fladd+3)& (0+255),f,b
 58955  01656E  3362               	rrcf	(??i2___fladd+2)& (0+255),f,b
 58956  016570  3361               	rrcf	(??i2___fladd+1)& (0+255),f,b
 58957  016572  3360               	rrcf	??i2___fladd& (0+255),f,b
 58958  016574  C060  F056         	movff	??i2___fladd,i2___fladd@b
 58959  016578  C061  F057         	movff	??i2___fladd+1,i2___fladd@b+1
 58960  01657C  C062  F058         	movff	??i2___fladd+2,i2___fladd@b+2
 58961  016580  C063  F059         	movff	??i2___fladd+3,i2___fladd@b+3
 58962  016584  296A               	incf	i2___fladd@bexp& (0+255),w,b
 58963  016586  A4D8               	btfss	status,2,c
 58964                           
 58965                           ; BSR set to: 0
 58966  016588  2B6A               	incf	i2___fladd@bexp& (0+255),f,b
 58967  01658A                     i2l2914:
 58968                           
 58969                           ; BSR set to: 0
 58970                           
 58971                           ; BSR set to: 0
 58972                           
 58973                           ; BSR set to: 0
 58974                           
 58975                           ; BSR set to: 0
 58976  01658A  296A               	incf	i2___fladd@bexp& (0+255),w,b
 58977  01658C  B4D8               	btfsc	status,2,c
 58978  01658E  D003               	goto	i2u1906_40
 58979                           
 58980                           ; BSR set to: 0
 58981  016590  516A               	movf	i2___fladd@bexp& (0+255),w,b
 58982  016592  A4D8               	btfss	status,2,c
 58983  016594  D00D               	goto	i2l2918
 58984  016596                     i2u1906_40:
 58985                           
 58986                           ; BSR set to: 0
 58987                           
 58988                           ; BSR set to: 0
 58989  016596  0E00               	movlw	0
 58990  016598  6E56               	movwf	i2___fladd@b,c
 58991  01659A  0E00               	movlw	0
 58992  01659C  6E57               	movwf	i2___fladd@b+1,c
 58993  01659E  0E00               	movlw	0
 58994  0165A0  6E58               	movwf	i2___fladd@b+2,c
 58995  0165A2  0E00               	movlw	0
 58996  0165A4  6E59               	movwf	i2___fladd@b+3,c
 58997  0165A6  516A               	movf	i2___fladd@bexp& (0+255),w,b
 58998  0165A8  A4D8               	btfss	status,2,c
 58999  0165AA  D002               	goto	i2l2918
 59000                           
 59001                           ; BSR set to: 0
 59002  0165AC  0E00               	movlw	0
 59003  0165AE  6F68               	movwf	i2___fladd@signs& (0+255),b
 59004  0165B0                     i2l2918:
 59005                           
 59006                           ; BSR set to: 0
 59007                           
 59008                           ; BSR set to: 0
 59009                           
 59010                           ; BSR set to: 0
 59011  0165B0  A16A               	btfss	i2___fladd@bexp& (0+255),0,b
 59012  0165B2  D002               	goto	i2l2919
 59013                           
 59014                           ; BSR set to: 0
 59015  0165B4  8E58               	bsf	i2___fladd@b+2,7,c
 59016  0165B6  D001               	goto	i2l2920
 59017  0165B8                     i2l2919:
 59018                           
 59019                           ; BSR set to: 0
 59020                           
 59021                           ; BSR set to: 0
 59022  0165B8  9E58               	bcf	i2___fladd@b+2,7,c
 59023  0165BA                     i2l2920:
 59024                           
 59025                           ; BSR set to: 0
 59026                           
 59027                           ; BSR set to: 0
 59028  0165BA  90D8               	bcf	status,0,c
 59029  0165BC  316A               	rrcf	i2___fladd@bexp& (0+255),w,b
 59030  0165BE  6E59               	movwf	i2___fladd@b+3,c
 59031                           
 59032                           ; BSR set to: 0
 59033  0165C0  BF68               	btfsc	i2___fladd@signs& (0+255),7,b
 59034                           
 59035                           ; BSR set to: 0
 59036  0165C2  8E59               	bsf	i2___fladd@b+3,7,c
 59037                           
 59038                           ; BSR set to: 0
 59039                           
 59040                           ; BSR set to: 0
 59041  0165C4  C056  F056         	movff	i2___fladd@b,?i2___fladd
 59042  0165C8  C057  F057         	movff	i2___fladd@b+1,?i2___fladd+1
 59043  0165CC  C058  F058         	movff	i2___fladd@b+2,?i2___fladd+2
 59044  0165D0  C059  F059         	movff	i2___fladd@b+3,?i2___fladd+3
 59045  0165D4  0012               	return	
 59046  0165D6                     __end_ofi2___fladd:
 59047                           	opt stack 0
 59048                           tosu	equ	0xFFF
 59049                           tosh	equ	0xFFE
 59050                           tosl	equ	0xFFD
 59051                           pclatu	equ	0xFFB
 59052                           pclath	equ	0xFFA
 59053                           tblptru	equ	0xFF8
 59054                           tblptrh	equ	0xFF7
 59055                           tblptrl	equ	0xFF6
 59056                           tablat	equ	0xFF5
 59057                           prodh	equ	0xFF4
 59058                           prodl	equ	0xFF3
 59059                           intcon	equ	0xFF2
 59060                           indf0	equ	0xFEF
 59061                           postinc0	equ	0xFEE
 59062                           fsr0h	equ	0xFEA
 59063                           fsr0l	equ	0xFE9
 59064                           wreg	equ	0xFE8
 59065                           indf1	equ	0xFE7
 59066                           postdec1	equ	0xFE5
 59067                           plusw1	equ	0xFE3
 59068                           fsr1h	equ	0xFE2
 59069                           fsr1l	equ	0xFE1
 59070                           bsr	equ	0xFE0
 59071                           indf2	equ	0xFDF
 59072                           postinc2	equ	0xFDE
 59073                           postdec2	equ	0xFDD
 59074                           plusw2	equ	0xFDB
 59075                           fsr2h	equ	0xFDA
 59076                           fsr2l	equ	0xFD9
 59077                           status	equ	0xFD8
 59078                           
 59079 ;; *************** function _abs *****************
 59080 ;; Defined at:
 59081 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
 59082 ;; Parameters:    Size  Location     Type
 59083 ;;  a               2   22[BANK0 ] int 
 59084 ;; Auto vars:     Size  Location     Type
 59085 ;;		None
 59086 ;; Return value:  Size  Location     Type
 59087 ;;                  2   22[BANK0 ] int 
 59088 ;; Registers used:
 59089 ;;		wreg, status,2, status,0
 59090 ;; Tracked objects:
 59091 ;;		On entry : 0/0
 59092 ;;		On exit  : 0/0
 59093 ;;		Unchanged: 0/0
 59094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 59095 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59097 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59098 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59099 ;;Total ram usage:        4 bytes
 59100 ;; Hardware stack levels used:    1
 59101 ;; This function calls:
 59102 ;;		Nothing
 59103 ;; This function is called by:
 59104 ;;		_ADC_PostProcessingCallback
 59105 ;; This function uses a non-reentrant model
 59106 ;;
 59107                           
 59108                           	psect	text196
 59109  01BA58                     __ptext196:
 59110                           	opt stack 0
 59111  01BA58                     _abs:
 59112                           	opt stack 8
 59113                           
 59114                           ; BSR set to: 0
 59115                           ;incstack = 0
 59116  01BA58  0100               	movlb	0	; () banked
 59117  01BA5A  AF77               	btfss	(abs@a+1)& (0+255),7,b
 59118  01BA5C  D00D               	goto	i2l2325
 59119                           
 59120                           ; BSR set to: 0
 59121  01BA5E  C076  F078         	movff	abs@a,??_abs
 59122  01BA62  C077  F079         	movff	abs@a+1,??_abs+1
 59123  01BA66  1F78               	comf	??_abs& (0+255),f,b
 59124  01BA68  1F79               	comf	(??_abs+1)& (0+255),f,b
 59125  01BA6A  4B78               	infsnz	??_abs& (0+255),f,b
 59126  01BA6C  2B79               	incf	(??_abs+1)& (0+255),f,b
 59127  01BA6E  C078  F076         	movff	??_abs,?_abs
 59128  01BA72  C079  F077         	movff	??_abs+1,?_abs+1
 59129  01BA76  0012               	return	
 59130  01BA78                     i2l2325:
 59131                           
 59132                           ; BSR set to: 0
 59133  01BA78  C076  F076         	movff	abs@a,?_abs
 59134  01BA7C  C077  F077         	movff	abs@a+1,?_abs+1
 59135                           
 59136                           ; BSR set to: 0
 59137  01BA80  0012               	return		;funcret
 59138  01BA82                     __end_of_abs:
 59139                           	opt stack 0
 59140                           tosu	equ	0xFFF
 59141                           tosh	equ	0xFFE
 59142                           tosl	equ	0xFFD
 59143                           pclatu	equ	0xFFB
 59144                           pclath	equ	0xFFA
 59145                           tblptru	equ	0xFF8
 59146                           tblptrh	equ	0xFF7
 59147                           tblptrl	equ	0xFF6
 59148                           tablat	equ	0xFF5
 59149                           prodh	equ	0xFF4
 59150                           prodl	equ	0xFF3
 59151                           intcon	equ	0xFF2
 59152                           indf0	equ	0xFEF
 59153                           postinc0	equ	0xFEE
 59154                           fsr0h	equ	0xFEA
 59155                           fsr0l	equ	0xFE9
 59156                           wreg	equ	0xFE8
 59157                           indf1	equ	0xFE7
 59158                           postdec1	equ	0xFE5
 59159                           plusw1	equ	0xFE3
 59160                           fsr1h	equ	0xFE2
 59161                           fsr1l	equ	0xFE1
 59162                           bsr	equ	0xFE0
 59163                           indf2	equ	0xFDF
 59164                           postinc2	equ	0xFDE
 59165                           postdec2	equ	0xFDD
 59166                           plusw2	equ	0xFDB
 59167                           fsr2h	equ	0xFDA
 59168                           fsr2l	equ	0xFD9
 59169                           status	equ	0xFD8
 59170                           
 59171 ;; *************** function _ADCC_StopConversion *****************
 59172 ;; Defined at:
 59173 ;;		line 165 in file "mcc_generated_files/adcc.c"
 59174 ;; Parameters:    Size  Location     Type
 59175 ;;		None
 59176 ;; Auto vars:     Size  Location     Type
 59177 ;;		None
 59178 ;; Return value:  Size  Location     Type
 59179 ;;                  1    wreg      void 
 59180 ;; Registers used:
 59181 ;;		None
 59182 ;; Tracked objects:
 59183 ;;		On entry : 0/0
 59184 ;;		On exit  : 0/0
 59185 ;;		Unchanged: 0/0
 59186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 59187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59191 ;;Total ram usage:        0 bytes
 59192 ;; Hardware stack levels used:    1
 59193 ;; This function calls:
 59194 ;;		Nothing
 59195 ;; This function is called by:
 59196 ;;		_ADC_PostProcessingCallback
 59197 ;; This function uses a non-reentrant model
 59198 ;;
 59199                           
 59200                           	psect	text197
 59201  01C022                     __ptext197:
 59202                           	opt stack 0
 59203  01C022                     _ADCC_StopConversion:
 59204                           	opt stack 8
 59205                           
 59206                           ;adcc.c: 168: ADCON0bits.ADGO = 0;
 59207                           
 59208                           ; BSR set to: 0
 59209                           ;incstack = 0
 59210  01C022  9060               	bcf	3936,0,c	;volatile
 59211  01C024  0012               	return		;funcret
 59212  01C026                     __end_of_ADCC_StopConversion:
 59213                           	opt stack 0
 59214                           tosu	equ	0xFFF
 59215                           tosh	equ	0xFFE
 59216                           tosl	equ	0xFFD
 59217                           pclatu	equ	0xFFB
 59218                           pclath	equ	0xFFA
 59219                           tblptru	equ	0xFF8
 59220                           tblptrh	equ	0xFF7
 59221                           tblptrl	equ	0xFF6
 59222                           tablat	equ	0xFF5
 59223                           prodh	equ	0xFF4
 59224                           prodl	equ	0xFF3
 59225                           intcon	equ	0xFF2
 59226                           indf0	equ	0xFEF
 59227                           postinc0	equ	0xFEE
 59228                           fsr0h	equ	0xFEA
 59229                           fsr0l	equ	0xFE9
 59230                           wreg	equ	0xFE8
 59231                           indf1	equ	0xFE7
 59232                           postdec1	equ	0xFE5
 59233                           plusw1	equ	0xFE3
 59234                           fsr1h	equ	0xFE2
 59235                           fsr1l	equ	0xFE1
 59236                           bsr	equ	0xFE0
 59237                           indf2	equ	0xFDF
 59238                           postinc2	equ	0xFDE
 59239                           postdec2	equ	0xFDD
 59240                           plusw2	equ	0xFDB
 59241                           fsr2h	equ	0xFDA
 59242                           fsr2l	equ	0xFD9
 59243                           status	equ	0xFD8
 59244                           
 59245 ;; *************** function _ADCC_HasAccumulatorOverflowed *****************
 59246 ;; Defined at:
 59247 ;;		line 219 in file "mcc_generated_files/adcc.c"
 59248 ;; Parameters:    Size  Location     Type
 59249 ;;		None
 59250 ;; Auto vars:     Size  Location     Type
 59251 ;;		None
 59252 ;; Return value:  Size  Location     Type
 59253 ;;                  1    wreg      unsigned char 
 59254 ;; Registers used:
 59255 ;;		wreg
 59256 ;; Tracked objects:
 59257 ;;		On entry : 0/0
 59258 ;;		On exit  : 0/0
 59259 ;;		Unchanged: 0/0
 59260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 59261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59265 ;;Total ram usage:        0 bytes
 59266 ;; Hardware stack levels used:    1
 59267 ;; This function calls:
 59268 ;;		Nothing
 59269 ;; This function is called by:
 59270 ;;		_ADC_PostProcessingCallback
 59271 ;; This function uses a non-reentrant model
 59272 ;;
 59273                           
 59274                           	psect	text198
 59275  01BFBC                     __ptext198:
 59276                           	opt stack 0
 59277  01BFBC                     _ADCC_HasAccumulatorOverflowed:
 59278                           	opt stack 8
 59279                           
 59280                           ;adcc.c: 222: return ADSTATbits.ADAOV;
 59281                           
 59282                           ;incstack = 0
 59283  01BFBC  AE65               	btfss	3941,7,c	;volatile
 59284  01BFBE  D002               	goto	i2u1421_40
 59285  01BFC0  0E01               	movlw	1
 59286  01BFC2  0012               	return	
 59287  01BFC4                     i2u1421_40:
 59288  01BFC4  0E00               	movlw	0
 59289  01BFC6  0012               	return	
 59290  01BFC8                     __end_of_ADCC_HasAccumulatorOverflowed:
 59291                           	opt stack 0
 59292                           tosu	equ	0xFFF
 59293                           tosh	equ	0xFFE
 59294                           tosl	equ	0xFFD
 59295                           pclatu	equ	0xFFB
 59296                           pclath	equ	0xFFA
 59297                           tblptru	equ	0xFF8
 59298                           tblptrh	equ	0xFF7
 59299                           tblptrl	equ	0xFF6
 59300                           tablat	equ	0xFF5
 59301                           prodh	equ	0xFF4
 59302                           prodl	equ	0xFF3
 59303                           intcon	equ	0xFF2
 59304                           indf0	equ	0xFEF
 59305                           postinc0	equ	0xFEE
 59306                           fsr0h	equ	0xFEA
 59307                           fsr0l	equ	0xFE9
 59308                           wreg	equ	0xFE8
 59309                           indf1	equ	0xFE7
 59310                           postdec1	equ	0xFE5
 59311                           plusw1	equ	0xFE3
 59312                           fsr1h	equ	0xFE2
 59313                           fsr1l	equ	0xFE1
 59314                           bsr	equ	0xFE0
 59315                           indf2	equ	0xFDF
 59316                           postinc2	equ	0xFDE
 59317                           postdec2	equ	0xFDD
 59318                           plusw2	equ	0xFDB
 59319                           fsr2h	equ	0xFDA
 59320                           fsr2l	equ	0xFD9
 59321                           status	equ	0xFD8
 59322                           
 59323 ;; *************** function _ADCC_GetFilterValue *****************
 59324 ;; Defined at:
 59325 ;;		line 225 in file "mcc_generated_files/adcc.c"
 59326 ;; Parameters:    Size  Location     Type
 59327 ;;		None
 59328 ;; Auto vars:     Size  Location     Type
 59329 ;;		None
 59330 ;; Return value:  Size  Location     Type
 59331 ;;                  2    0[COMRAM] unsigned int 
 59332 ;; Registers used:
 59333 ;;		wreg, status,2, status,0
 59334 ;; Tracked objects:
 59335 ;;		On entry : 0/0
 59336 ;;		On exit  : 0/0
 59337 ;;		Unchanged: 0/0
 59338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 59339 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59341 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59342 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59343 ;;Total ram usage:        4 bytes
 59344 ;; Hardware stack levels used:    1
 59345 ;; This function calls:
 59346 ;;		Nothing
 59347 ;; This function is called by:
 59348 ;;		_ADC_PostProcessingCallback
 59349 ;; This function uses a non-reentrant model
 59350 ;;
 59351                           
 59352                           	psect	text199
 59353  01BE7A                     __ptext199:
 59354                           	opt stack 0
 59355  01BE7A                     _ADCC_GetFilterValue:
 59356                           	opt stack 8
 59357                           
 59358                           ;adcc.c: 228: return ((uint16_t)((ADFLTRH << 8) + ADFLTRL));
 59359                           
 59360                           ;incstack = 0
 59361  01BE7A  5073               	movf	3955,w,c	;volatile
 59362  01BE7C  6E04               	movwf	(??_ADCC_GetFilterValue+1)& (0+255),c
 59363  01BE7E  6A03               	clrf	??_ADCC_GetFilterValue& (0+255),c
 59364  01BE80  5072               	movf	3954,w,c	;volatile
 59365  01BE82  2403               	addwf	??_ADCC_GetFilterValue,w,c
 59366  01BE84  6E01               	movwf	?_ADCC_GetFilterValue,c
 59367  01BE86  0E00               	movlw	0
 59368  01BE88  2004               	addwfc	??_ADCC_GetFilterValue+1,w,c
 59369  01BE8A  6E02               	movwf	?_ADCC_GetFilterValue+1,c
 59370  01BE8C  0012               	return	
 59371  01BE8E                     __end_of_ADCC_GetFilterValue:
 59372                           	opt stack 0
 59373                           tosu	equ	0xFFF
 59374                           tosh	equ	0xFFE
 59375                           tosl	equ	0xFFD
 59376                           pclatu	equ	0xFFB
 59377                           pclath	equ	0xFFA
 59378                           tblptru	equ	0xFF8
 59379                           tblptrh	equ	0xFF7
 59380                           tblptrl	equ	0xFF6
 59381                           tablat	equ	0xFF5
 59382                           prodh	equ	0xFF4
 59383                           prodl	equ	0xFF3
 59384                           intcon	equ	0xFF2
 59385                           indf0	equ	0xFEF
 59386                           postinc0	equ	0xFEE
 59387                           fsr0h	equ	0xFEA
 59388                           fsr0l	equ	0xFE9
 59389                           wreg	equ	0xFE8
 59390                           indf1	equ	0xFE7
 59391                           postdec1	equ	0xFE5
 59392                           plusw1	equ	0xFE3
 59393                           fsr1h	equ	0xFE2
 59394                           fsr1l	equ	0xFE1
 59395                           bsr	equ	0xFE0
 59396                           indf2	equ	0xFDF
 59397                           postinc2	equ	0xFDE
 59398                           postdec2	equ	0xFDD
 59399                           plusw2	equ	0xFDB
 59400                           fsr2h	equ	0xFDA
 59401                           fsr2l	equ	0xFD9
 59402                           status	equ	0xFD8
 59403                           
 59404 ;; *************** function _ADCC_GetCurrentCountofConversions *****************
 59405 ;; Defined at:
 59406 ;;		line 201 in file "mcc_generated_files/adcc.c"
 59407 ;; Parameters:    Size  Location     Type
 59408 ;;		None
 59409 ;; Auto vars:     Size  Location     Type
 59410 ;;		None
 59411 ;; Return value:  Size  Location     Type
 59412 ;;                  1    wreg      unsigned char 
 59413 ;; Registers used:
 59414 ;;		wreg, status,2
 59415 ;; Tracked objects:
 59416 ;;		On entry : 0/0
 59417 ;;		On exit  : 0/0
 59418 ;;		Unchanged: 0/0
 59419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 59420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59424 ;;Total ram usage:        0 bytes
 59425 ;; Hardware stack levels used:    1
 59426 ;; This function calls:
 59427 ;;		Nothing
 59428 ;; This function is called by:
 59429 ;;		_ADC_PostProcessingCallback
 59430 ;; This function uses a non-reentrant model
 59431 ;;
 59432                           
 59433                           	psect	text200
 59434  01C026                     __ptext200:
 59435                           	opt stack 0
 59436  01C026                     _ADCC_GetCurrentCountofConversions:
 59437                           	opt stack 8
 59438                           
 59439                           ;adcc.c: 204: return ADCNT;
 59440                           
 59441                           ;incstack = 0
 59442  01C026  5067               	movf	3943,w,c	;volatile
 59443  01C028  0012               	return	
 59444  01C02A                     __end_of_ADCC_GetCurrentCountofConversions:
 59445                           	opt stack 0
 59446                           tosu	equ	0xFFF
 59447                           tosh	equ	0xFFE
 59448                           tosl	equ	0xFFD
 59449                           pclatu	equ	0xFFB
 59450                           pclath	equ	0xFFA
 59451                           tblptru	equ	0xFF8
 59452                           tblptrh	equ	0xFF7
 59453                           tblptrl	equ	0xFF6
 59454                           tablat	equ	0xFF5
 59455                           prodh	equ	0xFF4
 59456                           prodl	equ	0xFF3
 59457                           intcon	equ	0xFF2
 59458                           indf0	equ	0xFEF
 59459                           postinc0	equ	0xFEE
 59460                           fsr0h	equ	0xFEA
 59461                           fsr0l	equ	0xFE9
 59462                           wreg	equ	0xFE8
 59463                           indf1	equ	0xFE7
 59464                           postdec1	equ	0xFE5
 59465                           plusw1	equ	0xFE3
 59466                           fsr1h	equ	0xFE2
 59467                           fsr1l	equ	0xFE1
 59468                           bsr	equ	0xFE0
 59469                           indf2	equ	0xFDF
 59470                           postinc2	equ	0xFDE
 59471                           postdec2	equ	0xFDD
 59472                           plusw2	equ	0xFDB
 59473                           fsr2h	equ	0xFDA
 59474                           fsr2l	equ	0xFD9
 59475                           status	equ	0xFD8
 59476                           
 59477 ;; *************** function _ADCC_GetConversionResult *****************
 59478 ;; Defined at:
 59479 ;;		line 133 in file "mcc_generated_files/adcc.c"
 59480 ;; Parameters:    Size  Location     Type
 59481 ;;		None
 59482 ;; Auto vars:     Size  Location     Type
 59483 ;;		None
 59484 ;; Return value:  Size  Location     Type
 59485 ;;                  2    0[COMRAM] unsigned int 
 59486 ;; Registers used:
 59487 ;;		wreg, status,2, status,0
 59488 ;; Tracked objects:
 59489 ;;		On entry : 0/0
 59490 ;;		On exit  : 0/0
 59491 ;;		Unchanged: 0/0
 59492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 59493 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59495 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59496 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 59497 ;;Total ram usage:        4 bytes
 59498 ;; Hardware stack levels used:    1
 59499 ;; This function calls:
 59500 ;;		Nothing
 59501 ;; This function is called by:
 59502 ;;		_ADC_PostProcessingCallback
 59503 ;; This function uses a non-reentrant model
 59504 ;;
 59505                           
 59506                           	psect	text201
 59507  01BE8E                     __ptext201:
 59508                           	opt stack 0
 59509  01BE8E                     _ADCC_GetConversionResult:
 59510                           	opt stack 8
 59511                           
 59512                           ;adcc.c: 136: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 59513                           
 59514                           ;incstack = 0
 59515  01BE8E  5064               	movf	3940,w,c	;volatile
 59516  01BE90  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 59517  01BE92  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 59518  01BE94  5063               	movf	3939,w,c	;volatile
 59519  01BE96  2403               	addwf	??_ADCC_GetConversionResult,w,c
 59520  01BE98  6E01               	movwf	?_ADCC_GetConversionResult,c
 59521  01BE9A  0E00               	movlw	0
 59522  01BE9C  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 59523  01BE9E  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 59524  01BEA0  0012               	return	
 59525  01BEA2                     __end_of_ADCC_GetConversionResult:
 59526                           	opt stack 0
 59527                           tosu	equ	0xFFF
 59528                           tosh	equ	0xFFE
 59529                           tosl	equ	0xFFD
 59530                           pclatu	equ	0xFFB
 59531                           pclath	equ	0xFFA
 59532                           tblptru	equ	0xFF8
 59533                           tblptrh	equ	0xFF7
 59534                           tblptrl	equ	0xFF6
 59535                           tablat	equ	0xFF5
 59536                           prodh	equ	0xFF4
 59537                           prodl	equ	0xFF3
 59538                           intcon	equ	0xFF2
 59539                           indf0	equ	0xFEF
 59540                           postinc0	equ	0xFEE
 59541                           fsr0h	equ	0xFEA
 59542                           fsr0l	equ	0xFE9
 59543                           wreg	equ	0xFE8
 59544                           indf1	equ	0xFE7
 59545                           postdec1	equ	0xFE5
 59546                           plusw1	equ	0xFE3
 59547                           fsr1h	equ	0xFE2
 59548                           fsr1l	equ	0xFE1
 59549                           bsr	equ	0xFE0
 59550                           indf2	equ	0xFDF
 59551                           postinc2	equ	0xFDE
 59552                           postdec2	equ	0xFDD
 59553                           plusw2	equ	0xFDB
 59554                           fsr2h	equ	0xFDA
 59555                           fsr2l	equ	0xFD9
 59556                           status	equ	0xFD8
 59557                           tosu	equ	0xFFF
 59558                           tosh	equ	0xFFE
 59559                           tosl	equ	0xFFD
 59560                           pclatu	equ	0xFFB
 59561                           pclath	equ	0xFFA
 59562                           tblptru	equ	0xFF8
 59563                           tblptrh	equ	0xFF7
 59564                           tblptrl	equ	0xFF6
 59565                           tablat	equ	0xFF5
 59566                           prodh	equ	0xFF4
 59567                           prodl	equ	0xFF3
 59568                           intcon	equ	0xFF2
 59569                           indf0	equ	0xFEF
 59570                           postinc0	equ	0xFEE
 59571                           fsr0h	equ	0xFEA
 59572                           fsr0l	equ	0xFE9
 59573                           wreg	equ	0xFE8
 59574                           indf1	equ	0xFE7
 59575                           postdec1	equ	0xFE5
 59576                           plusw1	equ	0xFE3
 59577                           fsr1h	equ	0xFE2
 59578                           fsr1l	equ	0xFE1
 59579                           bsr	equ	0xFE0
 59580                           indf2	equ	0xFDF
 59581                           postinc2	equ	0xFDE
 59582                           postdec2	equ	0xFDD
 59583                           plusw2	equ	0xFDB
 59584                           fsr2h	equ	0xFDA
 59585                           fsr2l	equ	0xFD9
 59586                           status	equ	0xFD8
 59587                           
 59588                           	psect	text202
 59589  000000                     __ptext202:
 59590                           	opt stack 0
 59591                           tosu	equ	0xFFF
 59592                           tosh	equ	0xFFE
 59593                           tosl	equ	0xFFD
 59594                           pclatu	equ	0xFFB
 59595                           pclath	equ	0xFFA
 59596                           tblptru	equ	0xFF8
 59597                           tblptrh	equ	0xFF7
 59598                           tblptrl	equ	0xFF6
 59599                           tablat	equ	0xFF5
 59600                           prodh	equ	0xFF4
 59601                           prodl	equ	0xFF3
 59602                           intcon	equ	0xFF2
 59603                           indf0	equ	0xFEF
 59604                           postinc0	equ	0xFEE
 59605                           fsr0h	equ	0xFEA
 59606                           fsr0l	equ	0xFE9
 59607                           wreg	equ	0xFE8
 59608                           indf1	equ	0xFE7
 59609                           postdec1	equ	0xFE5
 59610                           plusw1	equ	0xFE3
 59611                           fsr1h	equ	0xFE2
 59612                           fsr1l	equ	0xFE1
 59613                           bsr	equ	0xFE0
 59614                           indf2	equ	0xFDF
 59615                           postinc2	equ	0xFDE
 59616                           postdec2	equ	0xFDD
 59617                           plusw2	equ	0xFDB
 59618                           fsr2h	equ	0xFDA
 59619                           fsr2l	equ	0xFD9
 59620                           status	equ	0xFD8
 59621                           
 59622                           	psect	rparam
 59623  0000                     tosu	equ	0xFFF
 59624                           tosh	equ	0xFFE
 59625                           tosl	equ	0xFFD
 59626                           pclatu	equ	0xFFB
 59627                           pclath	equ	0xFFA
 59628                           tblptru	equ	0xFF8
 59629                           tblptrh	equ	0xFF7
 59630                           tblptrl	equ	0xFF6
 59631                           tablat	equ	0xFF5
 59632                           prodh	equ	0xFF4
 59633                           prodl	equ	0xFF3
 59634                           intcon	equ	0xFF2
 59635                           indf0	equ	0xFEF
 59636                           postinc0	equ	0xFEE
 59637                           fsr0h	equ	0xFEA
 59638                           fsr0l	equ	0xFE9
 59639                           wreg	equ	0xFE8
 59640                           indf1	equ	0xFE7
 59641                           postdec1	equ	0xFE5
 59642                           plusw1	equ	0xFE3
 59643                           fsr1h	equ	0xFE2
 59644                           fsr1l	equ	0xFE1
 59645                           bsr	equ	0xFE0
 59646                           indf2	equ	0xFDF
 59647                           postinc2	equ	0xFDE
 59648                           postdec2	equ	0xFDD
 59649                           plusw2	equ	0xFDB
 59650                           fsr2h	equ	0xFDA
 59651                           fsr2l	equ	0xFD9
 59652                           status	equ	0xFD8
 59653                           
 59654                           	psect	temp
 59655  00005F                     btemp:
 59656                           	opt stack 0
 59657  00005F                     	ds	1
 59658  0000                     int$flags	set	btemp
 59659  0000                     wtemp6	set	btemp+1
 59660                           tosu	equ	0xFFF
 59661                           tosh	equ	0xFFE
 59662                           tosl	equ	0xFFD
 59663                           pclatu	equ	0xFFB
 59664                           pclath	equ	0xFFA
 59665                           tblptru	equ	0xFF8
 59666                           tblptrh	equ	0xFF7
 59667                           tblptrl	equ	0xFF6
 59668                           tablat	equ	0xFF5
 59669                           prodh	equ	0xFF4
 59670                           prodl	equ	0xFF3
 59671                           intcon	equ	0xFF2
 59672                           indf0	equ	0xFEF
 59673                           postinc0	equ	0xFEE
 59674                           fsr0h	equ	0xFEA
 59675                           fsr0l	equ	0xFE9
 59676                           wreg	equ	0xFE8
 59677                           indf1	equ	0xFE7
 59678                           postdec1	equ	0xFE5
 59679                           plusw1	equ	0xFE3
 59680                           fsr1h	equ	0xFE2
 59681                           fsr1l	equ	0xFE1
 59682                           bsr	equ	0xFE0
 59683                           indf2	equ	0xFDF
 59684                           postinc2	equ	0xFDE
 59685                           postdec2	equ	0xFDD
 59686                           plusw2	equ	0xFDB
 59687                           fsr2h	equ	0xFDA
 59688                           fsr2l	equ	0xFD9
 59689                           status	equ	0xFD8


Data Sizes:
    Strings     11796
    Constant    1038
    Data        61
    BSS         517
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    144     156
    BANK1           256     96     177
    BANK2           256    145     255
    BANK3           256      7     256
    BANK4           256     68     196
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK2[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E17311 size(2) Largest target is 0
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK2[2]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_141(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), NULL(NULL[0]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), NULL(NULL[0]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), NULL(NULL[0]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_141(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), NULL(NULL[0]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_28(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK4[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK4[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_141(CODE[25]), line(BANK3[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_141(CODE[25]), line(BANK3[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_211(CODE[10]), STR_210(CODE[11]), STR_209(CODE[11]), STR_208(CODE[15]), 
		 -> STR_207(CODE[11]), STR_206(CODE[10]), STR_205(CODE[11]), STR_204(CODE[10]), 
		 -> STR_203(CODE[10]), STR_202(CODE[10]), STR_191(CODE[10]), STR_190(CODE[13]), 
		 -> STR_189(CODE[12]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[13]), STR_14(CODE[2]), STR_13(CODE[14]), STR_12(CODE[6]), 
		 -> STR_11(CODE[14]), STR_10(CODE[20]), STR_9(CODE[16]), STR_8(CODE[10]), 
		 -> STR_7(CODE[16]), OLED_updateCallback@rev_id_str(BANK2[5]), STR_6(CODE[13]), OLED_updateCallback@dev_id_str(BANK2[16]), 
		 -> STR_5(CODE[11]), STR_4(CODE[14]), STR_3(CODE[10]), STR_2(CODE[15]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_updateCallback@dev_id_str(BANK2[16]), OLED_RAM_Buffer(BANK3[68]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_updateCallback@dev_id_str(BANK2[16]), OLED_RAM_Buffer(BANK3[68]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_183(CODE[11]), STR_176(CODE[5]), STR_174(CODE[9]), STR_172(CODE[29]), 
		 -> STR_170(CODE[34]), STR_168(CODE[33]), STR_166(CODE[29]), STR_164(CODE[17]), 
		 -> STR_162(CODE[17]), STR_160(CODE[14]), STR_158(CODE[19]), STR_156(CODE[20]), 
		 -> STR_154(CODE[11]), STR_152(CODE[17]), STR_150(CODE[14]), STR_148(CODE[16]), 
		 -> STR_139(CODE[13]), STR_135(CODE[17]), STR_132(CODE[14]), STR_130(CODE[12]), 
		 -> STR_128(CODE[16]), STR_126(CODE[17]), STR_121(CODE[15]), STR_119(CODE[13]), 
		 -> STR_117(CODE[16]), STR_115(CODE[15]), STR_113(CODE[21]), STR_111(CODE[21]), 
		 -> STR_109(CODE[26]), STR_107(CODE[14]), STR_105(CODE[13]), STR_103(CODE[18]), 
		 -> STR_101(CODE[15]), STR_99(CODE[16]), STR_97(CODE[18]), STR_91(CODE[13]), 
		 -> STR_89(CODE[17]), STR_77(CODE[12]), STR_74(CODE[10]), STR_72(CODE[13]), 
		 -> STR_70(CODE[11]), STR_67(CODE[4]), STR_66(CODE[6]), STR_64(CODE[16]), 
		 -> STR_61(CODE[6]), STR_58(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[2]), STR_55(CODE[3]), STR_54(CODE[3]), STR_53(CODE[3]), 
		 -> STR_52(CODE[3]), STR_51(CODE[3]), STR_50(CODE[3]), STR_49(CODE[3]), 
		 -> STR_48(CODE[3]), STR_47(CODE[3]), STR_46(CODE[2]), STR_45(CODE[3]), 
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[3]), STR_41(CODE[3]), 
		 -> STR_40(CODE[3]), STR_39(CODE[3]), STR_38(CODE[3]), STR_37(CODE[3]), 
		 -> STR_36(CODE[2]), STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK4[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK4[15]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK3[17]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 3086
		 -> STR_188(CODE[13]), STR_187(CODE[31]), STR_186(CODE[26]), STR_185(CODE[28]), 
		 -> STR_184(CODE[426]), STR_182(CODE[30]), STR_181(CODE[46]), STR_180(CODE[39]), 
		 -> STR_179(CODE[62]), STR_178(CODE[55]), STR_177(CODE[470]), STR_175(CODE[3086]), 
		 -> STR_173(CODE[492]), STR_171(CODE[748]), STR_169(CODE[720]), STR_167(CODE[974]), 
		 -> STR_165(CODE[54]), STR_163(CODE[54]), STR_161(CODE[45]), STR_159(CODE[51]), 
		 -> STR_157(CODE[52]), STR_155(CODE[46]), STR_153(CODE[51]), STR_151(CODE[53]), 
		 -> STR_149(CODE[58]), STR_147(CODE[71]), STR_146(CODE[63]), STR_145(CODE[37]), 
		 -> STR_144(CODE[46]), STR_143(CODE[102]), STR_142(CODE[86]), STR_140(CODE[25]), 
		 -> STR_138(CODE[42]), STR_137(CODE[53]), STR_136(CODE[31]), STR_134(CODE[29]), 
		 -> STR_133(CODE[28]), STR_131(CODE[42]), STR_129(CODE[41]), STR_127(CODE[34]), 
		 -> STR_125(CODE[53]), STR_124(CODE[52]), STR_123(CODE[105]), STR_122(CODE[105]), 
		 -> STR_120(CODE[59]), STR_118(CODE[73]), STR_116(CODE[56]), STR_114(CODE[34]), 
		 -> STR_112(CODE[34]), STR_110(CODE[32]), STR_108(CODE[37]), STR_106(CODE[58]), 
		 -> STR_104(CODE[36]), STR_102(CODE[36]), STR_100(CODE[37]), STR_98(CODE[34]), 
		 -> STR_96(CODE[38]), STR_95(CODE[60]), STR_94(CODE[32]), STR_93(CODE[23]), 
		 -> STR_92(CODE[65]), STR_90(CODE[23]), STR_88(CODE[27]), STR_87(CODE[48]), 
		 -> STR_86(CODE[15]), STR_85(CODE[13]), STR_84(CODE[12]), STR_83(CODE[11]), 
		 -> STR_82(CODE[10]), STR_81(CODE[11]), STR_80(CODE[24]), STR_79(CODE[46]), 
		 -> STR_78(CODE[25]), STR_76(CODE[54]), STR_75(CODE[64]), STR_73(CODE[59]), 
		 -> STR_71(CODE[85]), STR_69(CODE[47]), STR_68(CODE[17]), STR_65(CODE[52]), 
		 -> STR_63(CODE[4]), STR_62(CODE[5]), STR_60(CODE[4]), STR_59(CODE[5]), 
		 -> STR_57(CODE[3]), terminal_textAttributes@output_buff(BANK4[15]), STR_27(CODE[4]), STR_26(CODE[4]), 
		 -> STR_25(CODE[4]), STR_24(CODE[4]), STR_23(CODE[5]), STR_22(CODE[3]), 
		 -> STR_21(CODE[372]), STR_20(CODE[4]), STR_19(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_sprintf(COMRAM[2]), ?_printf(BANK2[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> i2_putch(), putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK3[17]), NULL(NULL[0]), 

    memmove@d1	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK4[3]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), printf@ap(BANK3[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(COMRAM[2]), ?_printf(BANK2[2]), ftoa@buf(BANK3[17]), STR_214(CODE[7]), 
		 -> _doprnt@c(BANK2[1]), STR_201(CODE[16]), STR_200(CODE[22]), STR_199(CODE[21]), 
		 -> STR_198(CODE[27]), STR_197(CODE[41]), STR_196(CODE[32]), STR_195(CODE[19]), 
		 -> STR_194(CODE[16]), STR_193(CODE[15]), STR_192(CODE[16]), STR_191(CODE[10]), 
		 -> STR_190(CODE[13]), STR_189(CODE[12]), TRIAC_Firing_Angle(BANK0[4]), NULL(NULL[0]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 3086
		 -> STR_216(CODE[11]), STR_188(CODE[13]), STR_187(CODE[31]), STR_186(CODE[26]), 
		 -> STR_185(CODE[28]), STR_184(CODE[426]), STR_182(CODE[30]), STR_181(CODE[46]), 
		 -> STR_180(CODE[39]), STR_179(CODE[62]), STR_178(CODE[55]), STR_177(CODE[470]), 
		 -> STR_175(CODE[3086]), STR_173(CODE[492]), STR_171(CODE[748]), STR_169(CODE[720]), 
		 -> STR_167(CODE[974]), STR_165(CODE[54]), STR_163(CODE[54]), STR_161(CODE[45]), 
		 -> STR_159(CODE[51]), STR_157(CODE[52]), STR_155(CODE[46]), STR_153(CODE[51]), 
		 -> STR_151(CODE[53]), STR_149(CODE[58]), STR_147(CODE[71]), STR_146(CODE[63]), 
		 -> STR_145(CODE[37]), STR_144(CODE[46]), STR_143(CODE[102]), STR_142(CODE[86]), 
		 -> STR_140(CODE[25]), STR_138(CODE[42]), STR_137(CODE[53]), STR_136(CODE[31]), 
		 -> STR_134(CODE[29]), STR_133(CODE[28]), STR_131(CODE[42]), STR_129(CODE[41]), 
		 -> STR_127(CODE[34]), STR_125(CODE[53]), STR_124(CODE[52]), STR_123(CODE[105]), 
		 -> STR_122(CODE[105]), STR_120(CODE[59]), STR_118(CODE[73]), STR_116(CODE[56]), 
		 -> STR_114(CODE[34]), STR_112(CODE[34]), STR_110(CODE[32]), STR_108(CODE[37]), 
		 -> STR_106(CODE[58]), STR_104(CODE[36]), STR_102(CODE[36]), STR_100(CODE[37]), 
		 -> STR_98(CODE[34]), STR_96(CODE[38]), STR_95(CODE[60]), STR_94(CODE[32]), 
		 -> STR_93(CODE[23]), STR_92(CODE[65]), STR_90(CODE[23]), STR_88(CODE[27]), 
		 -> STR_87(CODE[48]), STR_86(CODE[15]), STR_85(CODE[13]), STR_84(CODE[12]), 
		 -> STR_83(CODE[11]), STR_82(CODE[10]), STR_81(CODE[11]), STR_80(CODE[24]), 
		 -> STR_79(CODE[46]), STR_78(CODE[25]), STR_76(CODE[54]), STR_75(CODE[64]), 
		 -> STR_73(CODE[59]), STR_71(CODE[85]), STR_69(CODE[47]), STR_68(CODE[17]), 
		 -> STR_65(CODE[52]), STR_63(CODE[4]), STR_62(CODE[5]), STR_60(CODE[4]), 
		 -> STR_59(CODE[5]), STR_57(CODE[3]), terminal_textAttributes@output_buff(BANK4[15]), STR_27(CODE[4]), 
		 -> STR_26(CODE[4]), STR_25(CODE[4]), STR_24(CODE[4]), STR_23(CODE[5]), 
		 -> STR_22(CODE[3]), STR_21(CODE[372]), STR_20(CODE[4]), STR_19(CODE[5]), 
		 -> STR_1(CODE[4]), 

    S4340__prbuf$func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> putch(), Absolute function(), 

    S4340__prbuf$ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK3[17]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK3[17]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 6
		 -> sprintf@pb(COMRAM[5]), printf@pb(BANK3[5]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), OLED_updateCallback(), 

    TMR2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), OLED_updateCallback(), Absolute function(), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK3[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> OLED_WriteInteger@s(COMRAM[20]), 

    OLED_WriteString@s	PTR unsigned char  size(2) Largest target is 68
		 -> ftoa@buf(BANK3[17]), STR_213(CODE[1]), STR_212(CODE[1]), OLED_WriteInteger@s(COMRAM[20]), 
		 -> OLED_RAM_Buffer(BANK3[68]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), 

    OLED_PutChar@input_base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    getCauseOfResetStringSmall@strings	PTR unsigned char [9] size(2) Largest target is 15
		 -> STR_210(CODE[11]), STR_209(CODE[11]), STR_208(CODE[15]), STR_207(CODE[11]), 
		 -> STR_206(CODE[10]), STR_205(CODE[11]), STR_204(CODE[10]), STR_203(CODE[10]), 
		 -> STR_202(CODE[10]), 

    getCauseOfResetString@strings	PTR unsigned char [9] size(2) Largest target is 41
		 -> STR_200(CODE[22]), STR_199(CODE[21]), STR_198(CODE[27]), STR_197(CODE[41]), 
		 -> STR_196(CODE[32]), STR_195(CODE[19]), STR_194(CODE[16]), STR_193(CODE[15]), 
		 -> STR_192(CODE[16]), 

    getDeviceIDString@strings	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_191(CODE[10]), STR_190(CODE[13]), STR_189(CODE[12]), 

    getDeviceIDString@F17550	PTR const unsigned char [3] size(2) Largest target is 13
		 -> STR_191(CODE[10]), STR_190(CODE[13]), STR_189(CODE[12]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), NULL(NULL[0]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_201(CODE[16]), STR_200(CODE[22]), STR_199(CODE[21]), STR_198(CODE[27]), 
		 -> STR_197(CODE[41]), STR_196(CODE[32]), STR_195(CODE[19]), STR_194(CODE[16]), 
		 -> STR_193(CODE[15]), STR_192(CODE[16]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK3[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK4[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK4[15]), 

    sp__getDeviceIDString	PTR inline unsigned char  size(2) Largest target is 13
		 -> STR_191(CODE[10]), STR_190(CODE[13]), STR_189(CODE[12]), 

    sp__getCauseOfResetStringSmall	PTR inline unsigned char  size(2) Largest target is 15
		 -> STR_211(CODE[10]), STR_210(CODE[11]), STR_209(CODE[11]), STR_208(CODE[15]), 
		 -> STR_207(CODE[11]), STR_206(CODE[10]), STR_205(CODE[11]), STR_204(CODE[10]), 
		 -> STR_203(CODE[10]), STR_202(CODE[10]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 68
		 -> OLED_updateCallback@dev_id_str(BANK2[16]), OLED_RAM_Buffer(BANK3[68]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK2[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK2[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK2[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK2[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK2[2]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E17311 size(2) Largest target is 1
		 -> OLED_I2C_Status(BANK1[1]), 

    F17426.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK2[2]), 

    I2C1_MasterWrite@pflag	PTR enum E17311 size(2) Largest target is 1
		 -> OLED_I2C_Status(BANK1[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_Command@data_array(BANK2[2]), 

    F17421.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK2[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK2[2]), 
		 -> NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK2[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK2[2]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    S2542$pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK2[2]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK2[2]), 

    S2554$pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK2[2]), 

    p_i2c1_current.pTrFlag	PTR enum E17311 size(2) Largest target is 9
		 -> OLED_PutChar@data_array(BANK2[9]), OLED_Data@data_array(COMRAM[2]), OLED_I2C_Status(BANK1[1]), OLED_Command@data_array(BANK2[2]), 

    S2554$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK2[5]), I2C1_MasterWrite@trBlock(BANK2[5]), 

    p_i2c1_current	PTR volatile struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), NULL(NULL[0]), 

    S2565$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    S2565$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK2[5]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> writeEnergyToEEPROMCallback(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> writeEnergyToEEPROMCallback(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOffTimeCallback(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOffTimeCallback(), INT0_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOnTimeCallback(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> dimmingOnTimeCallback(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_PostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_PostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    _TMR4_CallBack->_writeEnergyToEEPROMCallback
    _writeEnergyToEEPROMCallback->i2___flge
    i2_readDoubleFromEEPROM->i2_DATAEE_ReadByte
    _dimmingOffTimeCallback->_TMR5_WriteTimer
    _I2C1_ISR->_I2C1_Stop
    _HLVD_ISR->i2_writeDoubleToEEPROM
    i2_writeDoubleToEEPROM->i2_DATAEE_WriteByte
    i2__doprnt->i2___fladd
    i2_scale->i2___flmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___flmul
    i2___awdiv->i2___awmod
    i2___llmod->i2___lldiv
    _ADC_PostProcessingCallback->i2___fladd
    _peakToRMS->i2___fladd
    _acos->i2___fladd
    _asin->i2___fladd
    _sqrt->i2___fladd
    _atan->i2___fladd
    _fabs->i2___flneg
    _sin->i2___fladd
    i2___flsub->i2___fladd
    i2___flneg->i2___fldiv
    i2___fldiv->i2___xxtofl
    _floor->i2___fladd
    i2___xxtofl->_ADCC_GetConversionResult
    i2___xxtofl->_ADCC_GetFilterValue
    i2___fltol->i2___fladd
    i2___flge->_fabs
    _eval_poly->i2___fladd
    i2___flmul->i2___flneg
    i2___fladd->i2_fround
    _abs->i2___fladd

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2__doprnt
    i2__doprnt->i2___flsub
    _ADCC_ThresholdISR->_ADC_PostProcessingCallback
    _ADC_PostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_atan
    _sqrt->i2___fladd
    _atan->_eval_poly
    _currentMeasuredToPeak->_sin
    _sin->i2___flsub
    i2___flsub->_floor
    _floor->i2___fltol
    i2___fltol->i2___fladd
    _eval_poly->i2___fladd
    _abs->i2___fltol

Critical Paths under _main in BANK1

    _ringBufferLUT->_getDeviceIDString
    _strstr->_strncmp
    _strncmp->_strlen
    _getUserID->_FLASH_ReadWord
    _atoi->___wmul
    ___fldiv->___xxtofl
    _OLED_updateCallback->_getDeviceIDString
    _strcpy->_getDeviceIDString
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_getDeviceID
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _OLED_UpdateFromRAMBuffer->_OLED_YX
    _OLED_PutChar->_I2C1_MasterWrite
    _printf->_getDeviceIDString
    __doprnt->___fltol
    _scale->___awdiv
    _putch->_EUSART2_Write
    _fround->___awdiv
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___flsub->___xxtofl
    ___fladd->___awdiv
    ___fladd->___xxtofl
    ___flneg->___xxtofl
    _saveSRAMMaxToEEPROM->_writeDoubleToEEPROM
    _writeDoubleToEEPROM->_DATAEE_WriteByte
    _recoverSRAMMaxFromEEPROM->_readDoubleFromEEPROM
    _readDoubleFromEEPROM->_DATAEE_ReadByte
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _OLED_Command->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback
    _TMR2_CallBack->i1_OLED_updateCallback
    i1_strcpy->i1_getDeviceIDString
    i1_getMinorRevisionID->i1_FLASH_ReadWord
    i1_getMajorRevisionID->i1_FLASH_ReadWord
    i1_getDeviceIDString->i1_getDeviceID
    i1_getDeviceID->i1_FLASH_ReadWord
    i1_FLASH_ReadWord->i1_FLASH_ReadByte
    i1_OLED_UpdateFromRAMBuffer->i1_OLED_Clear
    i1_OLED_YX->i1_OLED_Command
    i1_OLED_Command->i1_I2C1_MasterWrite
    i1_OLED_WriteString->i1_OLED_PutChar
    i1_OLED_Clear->i1_OLED_PutChar
    i1_OLED_PutChar->i1_I2C1_MasterWrite
    i1_I2C1_MasterWrite->i1_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _terminal_setCursorHome->_printf
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    ___fldiv->___fladd
    _strcpy->_getDeviceIDString
    _OLED_UpdateFromRAMBuffer->_OLED_Clear
    _OLED_YX->_OLED_Command
    _OLED_WriteString->_OLED_PutChar
    _OLED_Clear->_OLED_PutChar
    _terminal_clearTerminal->_printf
    _printf->__doprnt
    __doprnt->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___fldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->___flneg
    _OLED_Init->_OLED_Command

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _terminal_setCursorHome->_printf
    _ringBufferLUT->_printf
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _terminal_clearTerminal->_printf

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_terminal_ringBufferPull
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  851386
                                             66 BANK4      2     2      0
       _ADCC_SetADTIInterruptHandler
           _INT0_SetInterruptHandler
                         _OLED_Clear
                          _OLED_Init
                _OLED_updateCallback
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
           _TMR4_SetInterruptHandler
           _TMR5_SetInterruptHandler
                     _TMR5_StopTimer
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
                    _getCauseOfReset
           _recoverSRAMMaxFromEEPROM
                _saveSRAMMaxToEEPROM
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
                    _updateErrorLEDs
 ---------------------------------------------------------------------------------
 (1) _updateErrorLEDs                                      0     0      0       0
                        _getADCError
                       _getCOMMError
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   95584
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  502414
                                             57 BANK4      9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       41    39      2  501392
                                             16 BANK4     41    39      2
                _OLED_updateCallback
                     _TMR5_StopTimer
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                             ___wmul
                           ___xxtofl
                               _atoi
                     _clearADCErrors
                    _clearCOMMErrors
                        _getADCError
                       _getCOMMError
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                          _getUserID
                             _printf
               _readDoubleFromEEPROM
                             _strcmp
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0  122077
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2  122077
                                            143 BANK2      2     0      2
                                              0 BANK4     16    16      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             79 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             79 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   95584
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                              0 BANK2      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             85 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             79 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             79 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    8413
                                             79 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2     884
                                             90 BANK1      2     0      2
                                              0 BANK2      6     6      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                                3     1      2      62
                                             79 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _getCOMMError                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getADCError                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clearCOMMErrors                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clearADCErrors                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1991
                                             85 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    3755
                                             24 BANK2     25    17      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OLED_updateCallback                                 21    21      0   18141
                                             21 BANK2     21    21      0
           _OLED_UpdateFromRAMBuffer
         _getCauseOfResetStringSmall
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4    3889
                                              6 BANK2      6     2      4
         _getCauseOfResetStringSmall (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0     819
                                             90 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0     819
                                             90 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   10     8      2     319
                                             92 BANK1      4     2      2
                                              0 BANK2      6     6      0
                        _getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2     785
                                             90 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4     785
                                             83 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     363
                                             79 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (4) _getCauseOfResetStringSmall                           3     1      2      62
                                             79 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (4) _OLED_UpdateFromRAMBuffer                             0     0      0   11004
                         _OLED_Clear
                   _OLED_WriteString
                            _OLED_YX
 ---------------------------------------------------------------------------------
 (5) _OLED_YX                                              3     2      1    3146
                                             95 BANK1      1     0      1
                                              4 BANK2      2     2      0
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (5) _OLED_WriteString                                     2     0      2    4330
                                             17 BANK2      2     0      2
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (5) _OLED_Clear                                           4     4      0    3528
                                             17 BANK2      4     4      0
                       _OLED_PutChar
 ---------------------------------------------------------------------------------
 (6) _OLED_PutChar                                        17    17      0    3392
                                              0 BANK2     17    17      0
                   _I2C1_MasterWrite
                            _memmove
 ---------------------------------------------------------------------------------
 (7) _memmove                                             12     6      6     791
                                             79 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             79 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   95584
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              17     7     10   95584
                                            133 BANK2     10     0     10
                                              0 BANK3      7     7      0
                            __doprnt
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                          _getUserID (ARG)
 ---------------------------------------------------------------------------------
 (4) __doprnt                                             43    37      6   78494
                                             91 BANK2     42    36      6
                   Absolute function *
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch *
                              _scale
 ---------------------------------------------------------------------------------
 (5) _scale                                                9     5      4   13229
                                             74 BANK2      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                             80 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART2_Write                                        1     1      0      62
                                             79 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                             79 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (5) _fround                                              13     9      4   12950
                                             74 BANK2     13     9      4
                            ___awdiv
                            ___awmod
                            ___fladd (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8302
                                             49 BANK2     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2053
                                             79 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2245
                                             85 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __tdiv_to_l_                                         15     9      6     634
                                             79 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (5) __div_to_l_                                          14     6      8     634
                                             79 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    1206
                                             79 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1468
                                             79 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     952
                                             92 BANK1      1     1      0
                                              0 BANK2      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     961
                                             79 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1118
                                             93 BANK1      2     2      0
                                             83 BANK2      8     4      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6535
                                             24 BANK2      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    5930
                                              4 BANK2     20    12      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1202
                                              0 BANK2      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (22) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _saveSRAMMaxToEEPROM                                  0     0      0    6705
                             ___flge
                _writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (3) _writeDoubleToEEPROM                                 12     6      6    3279
                                             83 BANK1     12     6      6
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte                                     4     1      3     307
                                             79 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    3426
                                             79 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _recoverSRAMMaxFromEEPROM                             0     0      0    1612
               _readDoubleFromEEPROM
 ---------------------------------------------------------------------------------
 (3) _readDoubleFromEEPROM                                10     6      4    1612
                                             81 BANK1     10     6      4
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     152
                                             79 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _getCauseOfReset                                      1     1      0      55
                                             79 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1719
                    _ADCC_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
                    _HLVD_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             82 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             79 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             79 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     211
                                             82 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             3     0      3     211
                                             79 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     211
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             3     0      3     211
                                             79 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             3     0      3     211
                                             79 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HLVD_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3     211
                                             79 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             79 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             79 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         3     0      3     211
                                             79 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            0     0      0    2490
                       _OLED_Command
 ---------------------------------------------------------------------------------
 (6) _OLED_Command                                         4     4      0    2490
                                              0 BANK2      4     4      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterWrite                                     7     0      7    2327
                                             88 BANK1      7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterWriteTRBBuild                             9     2      7     546
                                             79 BANK1      9     2      7
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterTRBInsert                                 6     2      4     546
                                             79 BANK1      6     2      4
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (9) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManagerLow                      21    21      0    8843
                                             58 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR2_ISR
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR7_ISR                                            0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (12) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_ClearAccumulator
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (13) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADCC_ClearAccumulator                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (12) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR2_ISR                                            0     0      0    8581
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (12) _TMR2_CallBack                                       0     0      0    8581
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
              i1_OLED_updateCallback *
 ---------------------------------------------------------------------------------
 (13) i1_OLED_updateCallback                              21    21      0    8581
                                             37 BANK1     21    21      0
         i1_OLED_UpdateFromRAMBuffer
       i1_getCauseOfResetStringSmall
                      i1_getDeviceID
                i1_getDeviceIDString
               i1_getMajorRevisionID
               i1_getMinorRevisionID
                           i1_strcpy
 ---------------------------------------------------------------------------------
 (14) i1_strcpy                                            6     2      4    1579
                                             23 BANK1      6     2      4
       i1_getCauseOfResetStringSmall (ARG)
                      i1_getDeviceID (ARG)
                i1_getDeviceIDString (ARG)
 ---------------------------------------------------------------------------------
 (14) i1_getMinorRevisionID                                2     2      0     364
                                             11 BANK1      2     2      0
                   i1_FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (14) i1_getMajorRevisionID                                5     5      0     364
                                             11 BANK1      5     5      0
                   i1_FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (14) i1_getDeviceIDString                                10     8      2     162
                                             13 BANK1     10     8      2
                      i1_getDeviceID (ARG)
 ---------------------------------------------------------------------------------
 (14) i1_getDeviceID                                       2     0      2     330
                                             11 BANK1      2     0      2
                   i1_FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (15) i1_FLASH_ReadWord                                    7     3      4     330
                                              4 BANK1      7     3      4
                   i1_FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (16) i1_FLASH_ReadByte                                    4     0      4     163
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (14) i1_getCauseOfResetStringSmall                        3     1      2      62
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (14) i1_OLED_UpdateFromRAMBuffer                          0     0      0    5500
                       i1_OLED_Clear
                 i1_OLED_WriteString
                          i1_OLED_YX
 ---------------------------------------------------------------------------------
 (15) i1_OLED_YX                                           3     2      1    1415
                                             20 BANK1      3     2      1
                     i1_OLED_Command
 ---------------------------------------------------------------------------------
 (16) i1_OLED_Command                                      4     4      0    1147
                                             16 BANK1      4     4      0
                 i1_I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (15) i1_OLED_WriteString                                  2     0      2    2077
                                             33 BANK1      2     0      2
                     i1_OLED_PutChar
 ---------------------------------------------------------------------------------
 (15) i1_OLED_Clear                                        4     4      0    2008
                                             33 BANK1      4     4      0
                     i1_OLED_PutChar
 ---------------------------------------------------------------------------------
 (16) i1_OLED_PutChar                                     17    17      0    1872
                                             16 BANK1     17    17      0
                 i1_I2C1_MasterWrite
                          i1_memmove
 ---------------------------------------------------------------------------------
 (17) i1_memmove                                          12     6      6     626
                                              0 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (17) i1_I2C1_MasterWrite                                  7     0      7    1017
                                              9 BANK1      7     0      7
             i1_I2C1_MasterTRBInsert
         i1_I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (18) i1_I2C1_MasterWriteTRBBuild                          9     2      7     326
                                              0 BANK1      9     2      7
 ---------------------------------------------------------------------------------
 (18) i1_I2C1_MasterTRBInsert                              6     2      4     256
                                              0 BANK1      6     2      4
 i1_I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (19) i1_I2C1_WaitForLastPacketToComplete                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (22) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _INTERRUPT_InterruptManagerHigh                     18    18      0  210689
                                            126 BANK0     18    18      0
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART2_Receive_ISR *
                           _HLVD_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _INT0_ISR
                           _TMR4_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (21) _TMR5_ISR                                            0     0      0     316
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
              _dimmingOnTimeCallback *
 ---------------------------------------------------------------------------------
 (22) _dimmingOnTimeCallback                               0     0      0       0
                   i2_TMR5_StopTimer
 ---------------------------------------------------------------------------------
 (23) i2_TMR5_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (22) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _TMR4_ISR                                            0     0      0    2144
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (22) _TMR4_CallBack                                       0     0      0    2144
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
        _writeEnergyToEEPROMCallback *
 ---------------------------------------------------------------------------------
 (23) _writeEnergyToEEPROMCallback                         4     4      0    2144
                                             63 COMRAM     4     4      0
                           i2___flge
             i2_readDoubleFromEEPROM
              i2_writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (24) i2_readDoubleFromEEPROM                             10     6      4     252
                                              2 COMRAM    10     6      4
                  i2_DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (25) i2_DATAEE_ReadByte                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (23) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _INT0_ISR                                            0     0      0     316
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (22) _INT0_CallBack                                       0     0      0     316
                   Absolute function *
       _INT0_DefaultInterruptHandler *
             _dimmingOffTimeCallback *
 ---------------------------------------------------------------------------------
 (23) _dimmingOffTimeCallback                              0     0      0     316
                    _TMR5_StartTimer
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (22) _TMR5_WriteTimer                                     2     0      2     316
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (24) _TMR5_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (23) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C1_ISR                                            2     2      0      31
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (22) _I2C1_Stop                                           3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (22) _I2C1_FunctionComplete                               0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _HLVD_ISR                                            0     0      0     402
              i2_writeDoubleToEEPROM
 ---------------------------------------------------------------------------------
 (24) i2_writeDoubleToEEPROM                              12     6      6     402
                                              4 COMRAM    12     6      6
                 i2_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (25) i2_DATAEE_WriteByte                                  4     1      3     141
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (21) _EUSART2_Receive_ISR                                 0     0      0   53853
                           i2_printf
 ---------------------------------------------------------------------------------
 (22) i2_printf                                            9     7      2   53853
                                             82 BANK0      9     7      2
                          i2__doprnt
 ---------------------------------------------------------------------------------
 (23) i2__doprnt                                          43    37      6   53469
                                             40 BANK0     42    36      6
                   Absolute function *
                          i2___awdiv
                          i2___fladd
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
                          i2___fltol
                          i2___lldiv
                          i2___llmod
                           i2___wmul
                         i2___xxtofl
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch *
                            i2_scale
 ---------------------------------------------------------------------------------
 (24) i2_scale                                             9     5      4    7749
                                             72 COMRAM     9     5      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (24) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (25) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (24) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (24) i2_fround                                           13     9      4    7470
                                             72 COMRAM    13     9      4
                          i2___awdiv
                          i2___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (25) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (25) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (24) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (24) i2__div_to_l_                                       14     6      8     524
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (24) i2___wmul                                            6     2      4     436
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (24) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (24) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (21) _ADCC_ThresholdISR                                   0     0      0  153627
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
         _ADC_PostProcessingCallback *
 ---------------------------------------------------------------------------------
 (22) _ADC_PostProcessingCallback                         21    21      0  153627
                                            105 BANK0     21    21      0
           _ADCC_GetConversionResult
  _ADCC_GetCurrentCountofConversions
                _ADCC_GetFilterValue
      _ADCC_HasAccumulatorOverflowed
                _ADCC_StopConversion
                                _abs
              _currentMeasuredToPeak
                          _peakToRMS
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (23) _peakToRMS                                          24    16      8   98612
                                             81 BANK0     24    16      8
                               _acos
                                _sin
                               _sqrt
                          i2___fladd
                          i2___fldiv
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (24) _acos                                                8     4      4   46781
                                             73 BANK0      8     4      4
                               _asin
                          i2___fladd
                          i2___flneg
 ---------------------------------------------------------------------------------
 (25) _asin                                               24    20      4   41537
                                             49 BANK0     24    20      4
                               _atan
                               _fabs
                               _sqrt
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (24) _sqrt                                               29    25      4    1033
                                             12 BANK0     29    25      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
 ---------------------------------------------------------------------------------
 (26) _atan                                               21    17      4   25621
                                             28 BANK0     21    17      4
                          _eval_poly
                               _fabs
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
 ---------------------------------------------------------------------------------
 (26) _fabs                                                4     0      4     988
                                             47 COMRAM     4     0      4
                          i2___flneg
 ---------------------------------------------------------------------------------
 (23) _currentMeasuredToPeak                              12     4      8   39684
                                             57 BANK0     12     4      8
                                _sin
                          i2___fldiv
 ---------------------------------------------------------------------------------
 (24) _sin                                                17    13      4   37484
                                             40 BANK0     17    13      4
                          _eval_poly
                              _floor
                          i2___fladd
                          i2___fldiv
                           i2___flge
                          i2___flmul
                          i2___flneg
                          i2___flsub
 ---------------------------------------------------------------------------------
 (24) i2___flsub                                           8     0      8    4649
                                             32 BANK0      8     0      8
                              _floor (ARG)
                          i2___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (24) i2___flneg                                           4     0      4     625
                                             43 COMRAM     4     0      4
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (23) i2___fldiv                                          25    17      8    1887
                                             18 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (25) _floor                                              10     6      4    8091
                                             22 BANK0     10     6      4
                              _frexp
                          i2___fladd
                           i2___flge
                          i2___fltol
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (24) i2___xxtofl                                         14    10      4     861
                                              4 COMRAM    14    10      4
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
 ---------------------------------------------------------------------------------
 (24) i2___fltol                                          10     6      4     582
                                             12 BANK0     10     6      4
                          i2___fladd (ARG)
                          i2___flmul (ARG)
                         i2___xxtofl (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (24) i2___flge                                           12     4      8    1456
                                             51 COMRAM    12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (26) _frexp                                               8     2      6     360
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (25) _eval_poly                                          16     8      8   10620
                                             12 BANK0     16     8      8
                          i2___fladd
                          i2___fldiv (ARG)
                          i2___flmul
 ---------------------------------------------------------------------------------
 (25) i2___flmul                                          25    17      8    4912
                                             47 COMRAM    25    17      8
           _ADCC_GetConversionResult (ARG)
                _ADCC_GetFilterValue (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___fldiv (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (25) i2___fladd                                          20    12      8    4374
                                             85 COMRAM     8     0      8
                                              0 BANK0     12    12      0
           _ADCC_GetConversionResult (ARG)
                          i2___fldiv (ARG)
                          i2___flmul (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (23) _abs                                                 4     2      2     294
                                             22 BANK0      4     2      2
                          i2___fladd (ARG)
                          i2___fltol (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (23) _ADCC_StopConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (23) _ADCC_HasAccumulatorOverflowed                       0     0      0       0
 ---------------------------------------------------------------------------------
 (23) _ADCC_GetFilterValue                                 4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (23) _ADCC_GetCurrentCountofConversions                   0     0      0       0
 ---------------------------------------------------------------------------------
 (23) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (22) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (22) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADTIInterruptHandler
   _INT0_SetInterruptHandler
   _OLED_Clear
     _OLED_PutChar
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
           _I2C1_WaitForLastPacketToComplete
         _I2C1_MasterWriteTRBBuild
       _memmove
   _OLED_Init
     _OLED_Command
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
           _I2C1_WaitForLastPacketToComplete
         _I2C1_MasterWriteTRBBuild
   _OLED_updateCallback
     _OLED_UpdateFromRAMBuffer
       _OLED_Clear
         _OLED_PutChar
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           _memmove
       _OLED_WriteString
         _OLED_PutChar
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           _memmove
       _OLED_YX
         _OLED_Command
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
     _getCauseOfResetStringSmall
     _getDeviceID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getDeviceIDString
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
     _getMajorRevisionID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _getMinorRevisionID
       _FLASH_ReadWord
         _FLASH_ReadByte
     _strcpy
       _getCauseOfResetStringSmall (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _FVR_Initialize
     _HLVD_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _TMR4_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _TMR5_StopTimer
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _getCauseOfReset
   _recoverSRAMMaxFromEEPROM
     _readDoubleFromEEPROM
       _DATAEE_ReadByte
   _saveSRAMMaxToEEPROM
     ___flge
     _writeDoubleToEEPROM
       _DATAEE_WriteByte
   _terminal_clearTerminal
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg *
           ___xxtofl (ARG)
         ___flsub *
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _OLED_updateCallback
         _OLED_UpdateFromRAMBuffer
           _OLED_Clear
             _OLED_PutChar
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                   _I2C1_WaitForLastPacketToComplete
                 _I2C1_MasterWriteTRBBuild
               _memmove
           _OLED_WriteString
             _OLED_PutChar
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                   _I2C1_WaitForLastPacketToComplete
                 _I2C1_MasterWriteTRBBuild
               _memmove
           _OLED_YX
             _OLED_Command
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                   _I2C1_WaitForLastPacketToComplete
                 _I2C1_MasterWriteTRBBuild
         _getCauseOfResetStringSmall
         _getDeviceID
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID
           _FLASH_ReadWord
             _FLASH_ReadByte
         _strcpy
           _getCauseOfResetStringSmall (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
       _TMR5_StopTimer
       ___fladd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fladd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___xxtofl (ARG)
       ___wmul
       ___xxtofl
       _atoi
         ___wmul
         _isdigit
       _clearADCErrors
       _clearCOMMErrors
       _getADCError
       _getCOMMError
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         __doprnt
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg *
             ___xxtofl (ARG)
           ___flsub *
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _readDoubleFromEEPROM
         _DATAEE_ReadByte
       _strcmp
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg *
               ___xxtofl (ARG)
             ___flsub *
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
       _terminal_textAttributes
         _printf
           __doprnt
             Absolute function(Fake) *
             ___awdiv *
               ___awmod (ARG)
             ___fladd *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge *
             ___flmul *
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg *
               ___xxtofl (ARG)
             ___flsub *
               ___fladd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol *
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             ___lldiv *
             ___llmod *
               ___lldiv (ARG)
             ___wmul *
             ___xxtofl *
             __div_to_l_ *
             __tdiv_to_l_ *
             _fround *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isdigit *
             _putch *
               _EUSART2_Write
             _scale *
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             __doprnt
               Absolute function(Fake) *
               ___awdiv *
                 ___awmod (ARG)
               ___fladd *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge *
               ___flmul *
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg *
                 ___xxtofl (ARG)
               ___flsub *
                 ___fladd
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fltol *
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___fldiv (ARG)
                       ___fladd (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___flneg (ARG)
                           ___xxtofl (ARG)
                         ___xxtofl (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
               ___lldiv *
               ___llmod *
                 ___lldiv (ARG)
               ___wmul *
               ___xxtofl *
               __div_to_l_ *
               __tdiv_to_l_ *
               _fround *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               _isdigit *
               _putch *
                 _EUSART2_Write
               _scale *
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___fladd (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___flneg (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _getDeviceID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
           _strcat
           _strncpy
       _writeDoubleToEEPROM
         _DATAEE_WriteByte
     _strlen
   _terminal_setCursorHome
     _printf
       __doprnt
         Absolute function(Fake) *
         ___awdiv *
           ___awmod (ARG)
         ___fladd *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge *
         ___flmul *
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flneg *
           ___xxtofl (ARG)
         ___flsub *
           ___fladd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol *
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         ___lldiv *
         ___llmod *
           ___lldiv (ARG)
         ___wmul *
         ___xxtofl *
         __div_to_l_ *
         __tdiv_to_l_ *
         _fround *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___fladd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         _isdigit *
         _putch *
           _EUSART2_Write
         _scale *
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         __doprnt
           Absolute function(Fake) *
           ___awdiv *
             ___awmod (ARG)
           ___fladd *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge *
           ___flmul *
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flneg *
             ___xxtofl (ARG)
           ___flsub *
             ___fladd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol *
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___flneg (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
           ___lldiv *
           ___llmod *
             ___lldiv (ARG)
           ___wmul *
           ___xxtofl *
           __div_to_l_ *
           __tdiv_to_l_ *
           _fround *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___fladd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isdigit *
           _putch *
             _EUSART2_Write
           _scale *
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fladd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___flneg (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flneg (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flneg (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
       _strcat
       _strncpy
   _updateErrorLEDs
     _getADCError
     _getCOMMError

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       i1_OLED_updateCallback *
         i1_OLED_UpdateFromRAMBuffer
           i1_OLED_Clear
             i1_OLED_PutChar
               i1_I2C1_MasterWrite
                 i1_I2C1_MasterTRBInsert
                   i1_I2C1_WaitForLastPacketToComplete
                 i1_I2C1_MasterWriteTRBBuild
               i1_memmove
           i1_OLED_WriteString
             i1_OLED_PutChar
               i1_I2C1_MasterWrite
                 i1_I2C1_MasterTRBInsert
                   i1_I2C1_WaitForLastPacketToComplete
                 i1_I2C1_MasterWriteTRBBuild
               i1_memmove
           i1_OLED_YX
             i1_OLED_Command
               i1_I2C1_MasterWrite
                 i1_I2C1_MasterTRBInsert
                   i1_I2C1_WaitForLastPacketToComplete
                 i1_I2C1_MasterWriteTRBBuild
         i1_getCauseOfResetStringSmall
         i1_getDeviceID
           i1_FLASH_ReadWord
             i1_FLASH_ReadByte
         i1_getDeviceIDString
           i1_getDeviceID (ARG)
             i1_FLASH_ReadWord
               i1_FLASH_ReadByte
         i1_getMajorRevisionID
           i1_FLASH_ReadWord
             i1_FLASH_ReadByte
         i1_getMinorRevisionID
           i1_FLASH_ReadWord
             i1_FLASH_ReadByte
         i1_strcpy
           i1_getCauseOfResetStringSmall (ARG)
           i1_getDeviceID (ARG)
             i1_FLASH_ReadWord
               i1_FLASH_ReadByte
           i1_getDeviceIDString (ARG)
             i1_getDeviceID (ARG)
               i1_FLASH_ReadWord
                 i1_FLASH_ReadByte
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_ClearAccumulator
       _ADCC_DischargeSampleCapacitor
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADC_PostProcessingCallback *
       _ADCC_GetConversionResult
       _ADCC_GetCurrentCountofConversions
       _ADCC_GetFilterValue
       _ADCC_HasAccumulatorOverflowed
       _ADCC_StopConversion
       _abs
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fltol (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___fladd
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               _fabs
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fldiv
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _fabs
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             _sqrt
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sin
           _eval_poly
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
           _floor
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___fldiv
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flge
             _fabs (ARG)
               i2___flneg
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flsub
             _floor (ARG)
               _frexp
               i2___fladd
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flge
                 _fabs (ARG)
                   i2___flneg
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___fltol
                 i2___fladd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___flmul
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___flneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___fldiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___xxtofl (ARG)
                             _ADCC_GetConversionResult (ARG)
                             _ADCC_GetFilterValue (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___xxtofl
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___fladd (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         _sqrt
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2___fladd
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___fldiv
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
       i2___fladd
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___fldiv
         _ADCC_GetConversionResult (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flge
         _fabs (ARG)
           i2___flneg
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___flmul
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___flneg
         _ADCC_GetConversionResult (ARG)
         i2___fldiv (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
       i2___fltol
         i2___fladd (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___xxtofl (ARG)
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
       i2___xxtofl
         _ADCC_GetConversionResult (ARG)
         _ADCC_GetFilterValue (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2__doprnt
         Absolute function(Fake) *
         i2___awdiv *
           i2___awmod (ARG)
         i2___fladd *
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flge *
           _fabs (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___flmul *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___flneg (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flneg *
           _ADCC_GetConversionResult (ARG)
           i2___fldiv (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___flsub *
           _floor (ARG)
             _frexp
             i2___fladd
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___flge
               _fabs (ARG)
                 i2___flneg
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___fltol
               i2___fladd (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___flmul
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___flneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___fldiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___xxtofl (ARG)
                           _ADCC_GetConversionResult (ARG)
                           _ADCC_GetFilterValue (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
               i2___flmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___flmul
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___flneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___fldiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___xxtofl (ARG)
                         _ADCC_GetConversionResult (ARG)
                         _ADCC_GetFilterValue (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
             i2___xxtofl
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
         i2___fltol *
           i2___fladd (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flmul (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___flmul
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___flneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___fldiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___xxtofl (ARG)
                       _ADCC_GetConversionResult (ARG)
                       _ADCC_GetFilterValue (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
           i2___flmul (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
           i2___xxtofl (ARG)
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___flmul
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___flneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___fldiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___xxtofl (ARG)
                     _ADCC_GetConversionResult (ARG)
                     _ADCC_GetFilterValue (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2___lldiv *
         i2___llmod *
           i2___lldiv (ARG)
         i2___wmul *
         i2___xxtofl *
           _ADCC_GetConversionResult (ARG)
           _ADCC_GetFilterValue (ARG)
         i2__div_to_l_ *
         i2__tdiv_to_l_ *
         i2_fround *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
         i2_isdigit *
         i2_putch *
           i2_EUSART2_Write
         i2_scale *
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___flmul
             _ADCC_GetConversionResult (ARG)
             _ADCC_GetFilterValue (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___fldiv (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___flneg (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
             i2___xxtofl (ARG)
               _ADCC_GetConversionResult (ARG)
               _ADCC_GetFilterValue (ARG)
   _HLVD_ISR *
     i2_writeDoubleToEEPROM
       i2_DATAEE_WriteByte
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _INT0_ISR *
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _dimmingOffTimeCallback *
         _TMR5_StartTimer
         _TMR5_WriteTimer
   _TMR4_ISR *
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
       _writeEnergyToEEPROMCallback *
         i2___flge
           _fabs (ARG)
             i2___flneg
               _ADCC_GetConversionResult (ARG)
               i2___fldiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___xxtofl (ARG)
                   _ADCC_GetConversionResult (ARG)
                   _ADCC_GetFilterValue (ARG)
               i2___xxtofl (ARG)
                 _ADCC_GetConversionResult (ARG)
                 _ADCC_GetFilterValue (ARG)
         i2_readDoubleFromEEPROM
           i2_DATAEE_ReadByte
         i2_writeDoubleToEEPROM
           i2_DATAEE_WriteByte
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _dimmingOnTimeCallback *
       i2_TMR5_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100     44      C4      14       76.6%
BITBANK3           100      0       0      11        0.0%
BANK3              100      7     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     91      FF      10       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     60      B1       7       69.1%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     90      9C       5       97.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     46E       8        0.0%
DATA                 0      0     46E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Nov 13 15:32:36 2018

               ringBufferLUT@max_voltage_print 04A3                       getDeviceIDString@strings 0200  
                        ??_OLED_updateCallback 0160               __end_of_TMR2_SetInterruptHandler BF6A  
                              i1OLED_Clear@col 0123                                   ___fldiv@aexp 0230  
                                 ___fldiv@bexp 022F                   __end_of_readDoubleFromEEPROM ADE4  
             __end_of_TMR5_SetInterruptHandler BF4E                                i1OLED_Clear@row 0121  
                ??_writeEnergyToEEPROMCallback 0040                                i1OLED_YX@Column 0114  
                                 ___fldiv@sign 0224                    __size_ofi2_DATAEE_WriteByte 003A  
                                  __CFG_CP$OFF 000000                                             l67 BD7E  
                                 ___awdiv@sign 015A                         __end_of_FVR_Initialize BFF8  
                                           bsr 000FE0             __end_ofi1_I2C1_MasterWriteTRBBuild B37E  
                   i1_I2C1_MasterWriteTRBBuild B338                            ___wmul@multiplicand 0151  
                       ?_terminal_printNewline 0001                              ??_TMR5_WriteTimer 0003  
               __end_of_heartbeatTimerCallback B482                                    __CFG_LVP$ON 000000  
                          _saveSRAMMaxToEEPROM 7E92                                            l430 B1DA  
                                          l440 AF1E                                            l432 B208  
                                          l441 AF1C                                            l436 AEE4  
                                          l437 AEDC                                            l429 B1E2  
                                          l439 AEF8                                            l843 B5A8  
                                          _PR2 000FBC                                            _PR4 000FB6  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                  i2___fladd@a 005A                                    i2___fladd@b 0056  
                   ??_INT0_SetInterruptHandler 0152                                            _Ipk 0178  
                                          _Vpk 02B9                                            _abs BA58  
                                  i2___fldiv@a 0017                                    i2___fldiv@b 0013  
                    __end_of_getDeviceIDString ABD8                                            _sin 68DA  
                   currentMeasuredToPeak@Angle 009D                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 0154                                   __CFG_IDLOC0$ 000000  
                                   i2___xxtofl 8924                                   __CFG_IDLOC1$ 000001  
                                 __CFG_IDLOC2$ 000002                                   __CFG_IDLOC3$ 000003  
                                 __CFG_IDLOC4$ 000004                                   __CFG_IDLOC5$ 000005  
                                 __CFG_IDLOC6$ 000006                                   __CFG_IDLOC7$ 000007  
                              _TMR2_Initialize B9CA                                            prod 000FF3  
                         ??i1_OLED_WriteString 0123                                            tosl 000FFD  
                                          wreg 000FE8                        ?i2_readDoubleFromEEPROM 0003  
                                  i2___flmul@a 0034                                    i2___flmul@b 0030  
               __size_ofi1_OLED_updateCallback 0284                                  _INT0_CallBack BC4A  
                                  i2___flsub@a 0084                                    i2___flsub@b 0080  
                __end_ofi1_OLED_updateCallback 7E92                                   ___flmul@aexp 023E  
                                 ___flmul@bexp 0243                       __end_of_OLED_WriteString ACE8  
                             OLED_Command@temp 0200                                   ___flmul@sign 023D  
                                 ___flmul@temp 0248                                   ___flmul@prod 0244  
                                 __CFG_ZCD$OFF 000000                               __end_of_I2C1_ISR 8350  
                                 ___fltol@exp1 015E                                           ?_abs 0076  
                                         l2100 1710                                           l1117 AFB2  
                                         l2101 1786                                           l2102 1758  
                                         l1135 A042                                           l2111 17FE  
                                         l1136 A02E                                           l2200 2310  
                                         l2201 233A                                           l2113 194E  
                                         l2105 17A2                                           l1138 A04E  
                                         l2210 250E                                           l2130 19A0  
                                         l2122 195C                                           l2114 1922  
                                         l2106 179A                                           l2211 253C  
                                         l2203 2366                                           l2131 19B0  
                                         l2123 1960                                           l2115 18C6  
                                         l1411 7BC4                                           l2220 2690  
                                         l2204 236A                                           l2124 1C16  
                                         l2140 1A5E                                           l2132 19AA  
                                         l1412 7986                                           l3020 B086  
                                         l2213 260A                                           l2141 1A88  
                                         l3021 B07C                                           l1501 561C  
                                         l2214 259C                                           l2206 23B8  
                                         l2150 1B9A                                           l1414 79F0  
                                         l1510 5736                                           l1502 5574  
                                         l2223 26E0                                           l2151 2614  
                                         l2215 25D8                                           l2207 23E2  
                                         l2119 1BA0                                           l2135 1A02  
                                         l2127 1964                                           l1415 7A98  
                                         l1511 565E                                           l1503 5646  
                                         l1431 98CA                                           l1344 7EF8  
                                         l2240 2826                                           l2232 27C8  
                                         l2224 2714                                           l2216 2602  
                                         l2208 2590                                           l2160 1EE2  
                                         l2152 1C2C                                           l2144 1A9C  
                                         l2136 1A18                                           l1416 7AFC  
                                         l3040 AC48                                           l1512 576C  
                                         l1520 571E                                           l1504 558C  
                                         l1345 7F5E                                           l2233 2770  
                                         l2209 2444                                           l2153 1C8A  
                                         l2145 1B00                                           l2129 1968  
                                         l3041 AC42                                           l3121 A2AC  
                                         l3017 B06C                                           l1521 585C  
                                         l1513 5676                                           l1505 55A4  
                                         l1346 7FC4                                           l2090 4D6A  
                                         l2242 2848                                           l2226 27B2  
                                         l2218 26AA                                           l2146 1B50  
                                         l3034 B19E                                           l3026 AE42  
                                         l3122 A23A                                           l3018 B066  
                                         l3050 AA32                                           l1530 582C  
                                         l1522 5784                                           l1514 568E  
                                         l1506 55BC                                           l1347 802A  
                                         l2083 6D56                                           l2243 2850  
                                         l2227 272E                                           l2219 265E  
                                         l2163 1E7A                                           l2155 1CFA  
                                         l2139 1A22                                           l3035 B194  
                                         l1419 7B60                                           l3027 AE38  
                                         l3123 A2A4                                           l3051 AA22  
                                         l1523 5892                                           l1531 5844  
                                         l1515 56A6                                           l1507 55D4  
                                         l1348 8090                                           l2500 A2EE  
                                         l2252 2940                                           l2244 2874  
                                         l2180 2066                                           l2156 1D7C  
                                         l2148 1B64                                           l3116 B77C  
                                         l1524 579C                                           l1516 56BE  
                                         l1508 55EC                                           l2093 4E3A  
                                         l2253 296A                                           l2245 287C  
                                         l2237 27E4                                           l2181 20A4  
                                         l2173 1FCC                                           l2149 1B88  
                                         l1525 57B4                                           l1517 56D6  
                                         l1509 5604                                           l1701 0612  
                                         l2502 A30C                                           l2086 6E48  
                                         l2094 4FCE                                           l2270 2AE4  
                                         l2262 2A42                                           l2246 2974  
                                         l2182 20CE                                           l2174 1FE6  
                                         l2158 1DAE                                           l3062 A216  
                                         l1526 57CC                                           l1518 56EE  
                                         l3071 8812                                           l2503 A304  
                                         l2271 2BB2                                           l2239 2804  
                                         l2191 21B4                                           l2159 1DFA  
                                         l3063 A1A6                                           l3047 A9E6  
                                         l1527 57E4                                           l1519 5706  
                                         l1711 07B6                                           l1703 0666  
                                         l3072 8822                                           l2520 A812  
                                         l2512 A7CE                                           l2096 509E  
                                         l2272 2BDC                                           l2248 28D0  
                                         l3064 A1E2                                           l3048 AA16  
                                         l1528 57FC                                           l1472 8A94  
                                         l2601 97E0                                           l3081 88C2  
                                         l3073 8840                                           l2521 A820  
                                         l2513 A7DA                                           l2089 4E6C  
                                         l2249 28FA                                           l2185 2156  
                                         l2177 203A                                           l2169 1F5A  
                                         l1529 5814                                           l1721 09F0  
                                         l1713 080A                                           l1705 06BA  
                                         l3082 88B6                                           l2506 A32C  
                                         l2266 2B5E                                           l2258 29B8  
                                         l2194 21D0                                           l2186 20E8  
                                         l1810 ABA0                                           l1730 0B44  
                                         l1474 8AD0                                           l3075 8852  
                                         l2507 A336                                           l2515 A7F0  
                                         l2267 2A60                                           l2259 29E2  
                                         l2195 229A                                           l2187 2124  
                                         l2179 20D6                                           l1731 0B20  
                                         l1715 085E                                           l1707 070E  
                                         l1475 8AB4                ??_ADCC_DischargeSampleCapacitor 0100  
                                         l1820 ADF4                                           l3076 8846  
                                         l2508 A344                                           l2516 A7E8  
                                         l2196 22C8                                           l2188 214E  
                                         l1740 0C24                                           l1724 0A38  
                                         l2269 2B76                                           l1805 ABAA  
                                         l1717 08B2                                           l1709 0762  
                                         l1661 00AA                                           l1477 8B22  
                                         l1830 AE1C                                           l1822 ADFC  
                                         l3086 88E0                                           l3078 8890  
                                         l2550 9028                                           l2198 2342  
                                         l1806 AB8C                                           l1742 0E98  
                                         l1734 0BDA                                           l1726 0A86  
                                         l1478 8AEA                                           l3087 8912  
                                         l3079 8878                                           l2543 8F6A  
                                         l2519 A808                                           l2199 22D4  
                                         l1911 9C40                                           l1751 0EEC  
                                         l1743 0C5E                                           l1735 0B8E  
                                         l1719 0936                                           l1671 023E  
                                         l1663 00FC                                           l1824 AE04  
                                         l2560 91D2                                           l2480 99C2  
                                         l1728 0AD8                                           l1680 0352  
                                         l2561 9206                                           l2545 8F88  
                                         l1809 AB96                                           l2481 99BC  
                                         l1761 1140                                           l1753 0F40  
                                         l1745 0D12                                           l1737 0BB6  
                                         l1681 0368                                           l1673 02E8  
                                         l1665 016C                                           l1826 AE0C  
                                         l1818 ADEC                                           l2562 9244  
                                         l2546 8FCA                                           l2650 8D78  
                                         l1930 ACBE                                           l1682 037E  
                                         l1674 0296                                           l2563 9282  
                                         l2555 905C                                           l2547 8FFA  
                                         l2651 8DA0                                           l2715 BCAA  
                                         l1915 9CBE                                           l1931 AC92  
                                         l2483 9A04                                           l1763 11C0  
                                         l1755 0FC0                                           l1691 0522  
                                         l1683 0394                                           l1659 006C  
                                         l1828 AE14                                           l2556 9050  
                                         l2660 8DF4                                           l1844 B960  
                                         l1772 1494                                           l1748 0E8A  
                                         l1692 04FE                                           l1684 03AA  
                                         l2549 9038                                           l2653 8DDC  
                                         l1837 B930                                           l1781 157E  
                                         l1765 1240                                           l1757 1040  
                                         l1693 04C4                                           l1685 03C0  
                                         l1669 01D4                                           l2902 61C6  
                                         l2590 971C                                           l2654 8DCC  
                                         l2486 9A54                                           l1694 04DA  
                                         l1678 041E                                           l1686 03D6  
                         _ADCC_StartConversion BFA2                                           l1855 AED4  
                                         l2567 B988                                           l2911 6206  
                                         l2647 8D12                                           l1927 B440  
                                         l2487 9A16                                           l1775 14E2  
                                         l1767 13F6                                           l1759 10C0  
                                         l1679 03FA                                           l2920 627C  
                                         l2904 61DC                                           l2592 9796  
                                         l2760 A3C0                                           l2832 9EE6  
                                         l1960 BE62                                           l1784 164A  
                                         l2593 9782                                           l2649 8D3E  
                                         l2833 9EB0                                           l2489 9A88  
                                         l1953 B86C                                           l1769 1446  
                                         l1697 056A                                           l1689 0466  
                                         l1858 ADA2                                           l2914 624C  
                                         l2906 61E6                                           l2770 A7A6  
                                         l1778 1530                                           l1859 ADD2  
                                         l2755 A37E                                           l2659 8E00  
                                         l2499 A2DE                                           l1699 05BE  
                                         l2756 A372                                           l2940 72CC  
                                         l2932 71D8                                           l2765 A76A  
                                         l2933 71D4                                           l2918 6272  
                                         l2598 97C0                                           l2766 A75A  
                                         l2942 72F2                                           l2919 627A  
                                         l2871 5F8C                                           l2599 97B0  
                                         l2759 A3B2                                           l2935 721E  
                                         l1888 A9A6                                           l2880 5FF4  
                                         l2872 5F88                                           l2952 7360  
                                         l2928 7198                                           l2769 A796  
                                         l2945 7328                                           l2937 7246  
                                         l2929 7194                                           l2890 60D0  
                                         l2962 58EA                                           l2954 73A4  
                                         l2946 730A                                           l2938 72F4  
                                         l2883 60AC                                           l2963 58E6  
                                         l2955 73C8                                           l2939 72A4  
                                         l2884 608A                                           l2876 5FD4  
                                         l2980 5B50                                           l2964 58FA  
                                         l2956 73F2                                           l2893 60F4  
                                         l2885 6098                                           l2877 5FD0  
                                         l2973 5B18                                           l2957 73FE  
                                         l2894 60F8                                           l2886 609C  
                                         l2982 5B94                                           l2974 5AFA  
                                         l2966 592A                                           l2958 7400  
                                         l2879 6030                                           l2983 5BB2  
                                         l2967 5926                                           l2968 593A  
                                         l2897 6192                                           l2889 610A  
                                         l2985 5BD6                                           l2969 5958  
                                         l2986 5BF4                                           l2899 61A2  
                                         ?_sin 0088                          __size_ofi2__div_to_l_ 0128  
                                         STR_1 FFC8                                           STR_2 FDAA  
                                         STR_3 FF78                                           STR_4 FE0D  
                                         STR_5 FF3B                                           STR_6 FE83  
                                         STR_7 FD30                                           STR_8 FF82  
                                         STR_9 FD40                                __end_of_OLED_YX B540  
                                  ?_OLED_Clear 0001                                           _LATA 000F79  
                                         _LATB 000F7A                                           _LATC 000F7B  
                                         _LATD 000F7C                                           _LATE 000F7D  
                                         _LATF 000F7E                                           _LATG 000F7F  
                                         _LATH 000F80                                           _T2PR 000FBC  
                                         _T4PR 000FB6                                           _T6PR 000FB0  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         _PLLR 007230                                           _TMR2 000FBB  
                                         _TMR4 000FB5                                           _TMR6 000FAF  
                          _writeDoubleToEEPROM AE86                                           _WPUA 000E91  
                                         _WPUB 000E99                                           _WPUC 000EA1  
                                         _WPUD 000EA6                                           _WPUE 000EAE  
                                         _WPUF 000EB3                                           _WPUG 000EBB  
                                         _WPUH 000EC0                          ??_EUSART2_Receive_ISR 005E  
                      ?i1_I2C1_MasterTRBInsert 0100                                   __CFG_WRT0$ON 000000  
                                 __CFG_WRT1$ON 000000                                   i2___flge@ff1 0034  
                                 i2___flge@ff2 0038                                   __CFG_WRT2$ON 000000  
                                 __CFG_WRT3$ON 000000                                   __CFG_WRT4$ON 000000  
                                 __CFG_WRT5$ON 000000                                           _Irms 0174  
                                 __CFG_WRT6$ON 000000                                   __CFG_WRT7$ON 000000  
                                __CFG_FCMEN$ON 000000                                  _EUSART2_Write AED6  
              ??_ADCC_HasAccumulatorOverflowed 0001                  i1getMinorRevisionID@REVID_RAW 010B  
                                 __CFG_WRTB$ON 000000                                           _Vrms 02B1  
                                 __CFG_WRTC$ON 000000                                           abs@a 0076  
                                         _acos A89A                                           _fabs B6EA  
               ringBufferLUT@max_current_print 049B                                           _atan 859A  
                                         _asin 65D6                                           _atoi 99BA  
                                         _main 97F2                           ?_saveSRAMMaxToEEPROM 0001  
                   i1getDeviceIDString@strings 0111                                    i2__doprnt@c 00B1  
                                         _line 0384                                    i2__doprnt@f 008A  
                       OLED_Command@data_array 0202                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                         ??_I2C1_MasterTRBInsert 0153  
                                         btemp 005F                 __size_of_ADCC_ClearAccumulator 0006  
                                         _sqrt 6E9E                                   i2___flneg@f1 002C  
                              _OLED_RAM_Buffer 0340                  __end_of_ADCC_ClearAccumulator C006  
                                __CFG_BOREN$ON 000000                                           sin@f 0088  
                                         sin@y 008C                                           prodh 000FF4  
                                         prodl 000FF3                                           start 010A  
                              _timer5ReloadVal 0195                                   i2___fltol@f1 006C  
                               _clearADCErrors BC6E                                ___fldiv@new_exp 0229  
                              __end_ofi2_scale 5550                   __end_of_EUSART2_Transmit_ISR B83C  
                              __end_ofi2_putch BFF0                     ??_TMR4_SetInterruptHandler 0152  
                                 ___param_bank 000000                     ??_TMR7_SetInterruptHandler 0152  
                      __end_of_updateErrorLEDs BE20                          _dimmingOnTimeCallback BFB0  
               I2C1_MasterWriteTRBBuild@length 0153              i2readDoubleFromEEPROM@output_data 0007  
              readDoubleFromEEPROM@output_data 0155                           __size_of_getADCError 0034  
                     __size_ofi2_EUSART2_Write 004C                                          ??_abs 0078  
                           __size_of_OLED_Init 009A                      __size_of_DATAEE_WriteByte 003E  
                              _timer7ReloadVal 0197                                          ??_sin 005E  
                         ?_writeDoubleToEEPROM 0153                             __size_ofi1_OLED_YX 003C  
                                   _i2c1_state 01A1                               __end_of_INT0_ISR BFE6  
                              ?_FVR_Initialize 0001                           getUserID@inputUserID 0204  
                             __end_of_HLVD_ISR B7D0                 __size_of_OSCILLATOR_Initialize 001C  
                    I2C1_MasterTRBInsert@count 0154                  __end_of_OSCILLATOR_Initialize BD84  
                     ?_terminal_textAttributes 028F                              ??_TMR7_WriteTimer 0102  
                    I2C1_MasterTRBInsert@pflag 0151                                          l24105 1A22  
                                        l24115 1A9C                                          l24215 1F5E  
                                        l24247 2066                                          l18015 9A50  
                                        l14923 A04E                                          l24259 20E8  
                                        l24195 1E48                                          l24187 1DFA  
                                        l17403 A23A                                          l25147 0286  
                                        l14917 A02E                                          l24293 22D4  
                                        l25157 02D6                                          l24391 2774  
                                        l18143 73F2                                          l24377 2732  
                                        l14859 92BA                                          l16901 B43A  
                                        l25373 0CC2                                          l25357 0C4E  
                                        ?_acos 00A9                                          l25375 0D12  
                                        l25367 0C8C                                          l24497 2BCE  
                                        l24489 2B5E                                          l16915 AA22  
                                        ?_fabs 0030                                          l25671 8A84  
                                        l25681 8AAA                                          l16891 B420  
                                        l17773 AEA0                                          l16885 B40C  
                                        l25893 ABC4                                          l25895 ABCE  
                                ___fltol@sign1 015D                                          ?_atan 007C  
                                        ?_asin 0091                                          _ADACQ 000F5C  
                                        _ADCAP 000F5D                                          _ADACT 000F56  
                                        ?_atoi 0155                                __end_of___fladd 6298  
                                        ?_main 0001                                          _ADCLK 000F57  
                                        _ADCNT 000F67                                          _ADPCH 000F5F  
                              __end_of___fldiv 741C                                          _ADREF 000F58  
                              __end_of___awdiv A34E                              __end_of_I2C1_Stop B502  
                              __end_of___flneg B99A                                          _ADPRE 000F5E  
                                        STR_10 FBDA                                          STR_11 FDFF  
                                        STR_20 FFBC                                          STR_12 FFA8  
                                        STR_13 FDF1                                          STR_21 ECEF  
                                        STR_14 FB29                                          STR_30 FFD0  
                                        STR_31 FFE2                                          STR_23 FFB3  
                                        STR_15 FE90                                          STR_16 FB29  
                                        STR_32 FF80                                          STR_24 FFBC  
                                        STR_40 FFDB                                          STR_17 FB29  
                                        STR_33 FFF1                                          STR_41 FFE1  
                                        STR_18 FB29                                          STR_42 FF7F  
                                        STR_34 FFF9                                          STR_50 FFDE  
                                        STR_26 FFC0                                          STR_35 FFCD  
                                        STR_43 FFEA                                          STR_51 FFE4  
                                        STR_27 FFC4                                          STR_19 FFB3  
                                        STR_60 FFBC                                          STR_36 FFFB  
                                        STR_28 FFF6                                          STR_44 FFF0  
                                        STR_52 FFE7                                __end_of___awmod A82A  
                                        STR_29 FFCD                                          STR_45 FFF0  
                                        STR_53 FFED                                          STR_37 FFCC  
                                        STR_61 FFA2                                          STR_46 FFFB  
                                        STR_62 FFB3                                          STR_54 FFF3  
                                        STR_38 FFCF                                          STR_70 FF1A  
                                        STR_47 FEA6                                          STR_55 FFF3  
                                        STR_63 FFBC                                          STR_39 FFD5  
                                        STR_71 EFF1                                          STR_56 FFFD  
                                        STR_48 FFD2                                          STR_72 FE42  
                                        STR_64 FD00                                          STR_80 FB2B  
                                        _ADRPT 000F66                                          STR_57 E780  
                                        STR_49 FFD8                                          STR_81 FF0F  
                                        STR_65 F4DE                                          STR_73 F210  
                                        STR_58 FEDD                                          STR_66 FF9C  
                                        STR_74 FF6E                                          STR_82 FF64  
                                        STR_90 FB5A                                          STR_59 FFB3  
                                        STR_67 FFB8                                          STR_83 FF04  
                                        STR_91 FE5C                                          STR_75 F117  
                                        STR_84 FEA9                                          STR_68 FC49  
                                        STR_76 F39F                                          STR_92 F0D6  
                                        STR_77 FEB5                                          STR_85 FE28  
                                        STR_93 FB43                                          STR_69 F5DC  
                                        STR_86 FD6E                                          STR_78 FAE0  
                                        STR_94 F965                                          STR_79 F60B  
                                        STR_87 F5AC                                          STR_95 F1D4  
                                        STR_88 FAAB                                          STR_96 F7BD  
                              __end_of___flmul 5C0A                                          STR_89 FCAF  
                                        STR_97 FC26                                          STR_98 F8BC  
                                        STR_99 FCE0                                __end_of___flsub B262  
                              __end_of___fltol 97F2                                __end_of___lldiv A3D2  
                                        ?_sqrt 006C                                ___awdiv@divisor 0157  
                                        u20070 A9D6                                          u20150 9CEE  
                              __end_of___llmod A7B8                                          u20090 9C3C  
                                        _T2CON 000FBD                                          u23100 735C  
                                        u22125 B5B8                                          u22221 AB82  
                                        u22126 B5BA                                          u22240 AC6A  
                                        u23130 73B2                                          u22235 B626  
                                        u21700 B43A                                          u23140 73D6  
                                        u22190 B1C8                                          u22270 A26C  
                                        u22247 AC60                                          _T5CLK 000FC6  
                                        _T4CON 000FB7                                          u22700 ADD2  
                  ?_ADC_PostProcessingCallback 0001                                          _T2HLT 000FBE  
                                        u22197 B1BE                                          _T5CON 000FC3  
                                        u22810 B868                                          u22730 AE7A  
                                        u18100 60B4                                          u34020 1E48  
                                        u22830 BE5E                                          _T7CLK 000F33  
                                        _T6CON 000FB1                                          u18050 6060  
                                        u18060 6070                                          u34060 1F9C  
                                        u22860 A22E                                          _T4HLT 000FB8  
                                        u18310 6258                                          u18230 61EA  
                                        u18070 6072                                          u26310 97C8  
                               __CFG_DEBUG$OFF 000000                                          u34128 2024  
                                        u36000 013A                                          _T7CON 000F30  
                                        u34218 219E                                          u18260 6202  
                                        u18420 5946                                          u34180 2164  
                                        u34148 208E                                          u33700 188C  
                                        u26270 973C                                          u18510 5BA2  
                                        u18430 5ABC                                          u34318 23A2  
                                        u34270 2350                                          u34238 2282  
                                        u33710 18AE                                          u18520 5BC0  
                                        u34280 2360                                          u34338 24F6  
                                        u34178 210E                                          u33730 18FE  
                                        u33650 17C4                                          u36050 02D6  
                                        u26275 9730                                          u18435 5AB2  
                                        u34268 22FA                                          u33900 1BD0  
                                        u33740 1944                                          u33660 17EC  
                                        u27500 ACE0                                          _T6HLT 000FB2  
                                        u33717 18A4                                          u18630 A7F4  
                                        u19520 8E06                                          u18480 5B4C  
                                        u34608 28BA                                          u34368 25C2  
                                        u33680 1848                                          u33648 1742  
                                        u19441 8CF6                                          u33737 18F4  
                                        u33657 17BA                     _ADCC_ADTI_InterruptHandler 02D4  
                                        u18570 A310                                          u34650 297C  
                                        u33770 19DE                                          u33690 1884  
               __end_ofi2_readDoubleFromEEPROM B05C                                          u33907 1BC6  
                                        u33747 193A                                          u33667 17E2  
                                        u27507 ACD6                                          u34740 2BEE  
                                        u33780 19E4                                          u19461 8D22  
                                        u34750 2C1E                                          u34718 2A2C  
                                        u34638 292A                                          u33870 1AF6  
                                        u33838 1A48                                          u33687 183E  
                                        u34760 2C2A                                          u34680 29F2  
                                        u33880 1B3A                                          u33777 19D4  
                                        u33697 187A                                          u34738 2B9C  
                                        u27490 ACB4                                          u33980 1DC0  
                                        u33868 1AC2                                          _T2TMR 000FBB  
                                        u34757 2C14                                          u33877 1AEC  
                                        u33869 1AF8                                          u27485 B52A  
                                        u19590 9062                                          u34678 29A2  
                                        u33990 1E0C                                          u36470 0C8C  
                                        u33887 1B30                                          u37247 9806  
                                        u19760 A382                                          u36480 0CB4  
                                        u27497 ACAA                                          u36490 0CC2  
                                        _T2RST 000FC0                                          u19790 A770  
                                        u19870 88CC                                          i1l271 007C  
                                        i1l273 009C                                          u36930 8AAA  
                                        i1l451 B836                                          i1l275 00A8  
                                        i1l452 B832                                          _T4TMR 000FB5  
                                        i1l277 00B2                                          i2l250 9546  
                                        _T4RST 000FBA                                          i2l260 9596  
                                        i2l252 9552                                          i2l262 95A2  
                                        i2l254 955E                                          i2l440 B13A  
                                        i2l264 95AC                                          i2l256 956A  
                                        i2l441 B138                                          i2l258 9576  
                                        i2l436 B100                                          _T6TMR 000FAF  
                                        i2l437 B0F8                                          i2l462 9E12  
                                        i1l694 BB38                                          i2l439 B114  
                                        i2l464 9E62                                          i2l457 9DCA  
                                        i2l458 9DEC                                          _T6RST 000FB4  
                                        i2l459 9E0E                                          i2l843 B74E  
                                        i2l768 BD96                                ___awdiv@counter 0159  
                                        _OSCEN 000E47                       _OLED_UpdateFromRAMBuffer A5D6  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                                        _TMR7H 000F2F                                          _TMR7L 000F2E  
                                 i2__div_to_l_ 9074                                __end_of__doprnt 2C34  
                                        _TRISA 000F81                                          _TRISB 000F82  
                               ?_INT0_CallBack 0001                                          _TRISC 000F83  
                                        _TRISD 000F84                                          _TRISE 000F85  
                                        _TRISF 000F86                                          _TRISG 000F87  
                                        _TRISH 000F88                             __end_ofsin@coeff_a D1C7  
                           __end_ofsin@coeff_b D1EB                   __end_of_I2C1_BusCollisionISR C00C  
                              _TMR4_Initialize B99A                                     i1memmove@d 0108  
                                   i1memmove@n 0104                                     i1memmove@s 010A  
                                        _Imeas 02B5                                  __CFG_PWRTE$ON 000000  
                                i2___fladd@grs 006B              __size_of_TMR6_SetInterruptHandler 000E  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                            ??_I2C1_Initialize 014F                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                      ?_TMR6_SetInterruptHandler 014F  
                               __CFG_EBTR6$OFF 000000                                 __CFG_EBTR7$OFF 000000  
                 __size_ofi1_getDeviceIDString 0060                               __end_of_TMR2_ISR BB6C  
                             __end_of_TMR4_ISR BBB8                                  __CFG_WRTD$OFF 000000  
                             __end_of_TMR5_ISR B8D8                               __end_of_TMR6_ISR BAD2  
                             __end_of_TMR7_ISR B8A4                  OLED_updateCallback@dev_id_str 0215  
                              _DATAEE_ReadByte BDBA                                 __CFG_EBTRB$OFF 000000  
                                   i2isdigit@c 0003                               ??i1_OLED_Command 0110  
                    ??_terminal_ringBufferPull 04B9                                __end_of_dpowers CE6D  
                                        acos@x 00A9                                          fabs@d 0030  
                                   i2scale@scl 0051                                          _floor 93DE  
        i2writeDoubleToEEPROM@starting_address 0009            writeDoubleToEEPROM@starting_address 0157  
                                        _frexp A6CA                                          _errno 02DD  
                                 i2__doprnt@ap 008C                                   i2__doprnt@cp 0099  
                        ?_ADCC_StartConversion 0001                                   i2__doprnt@pb 0088  
                                        _scale 4BFC                                __end_of_isdigit BCB2  
                                        atan@f 007C                                __end_of_memmove 9F18  
                                        atan@x 0084                                          atan@y 0080  
               __end_ofi1_I2C1_MasterTRBInsert A10A                                  i2___fldiv@grs 0026  
                           __CFG_MCLRE$EXTMCLR 000000                                  i2___fldiv@rem 0020  
                                        asin@x 0091                                          asin@y 00A1  
                                        atoi@a 015A                                          atoi@s 0155  
         __end_ofi1_getCauseOfResetStringSmall BA2A          __size_ofi1_getCauseOfResetStringSmall 0030  
                 i1_getCauseOfResetStringSmall B9FA                                          _putch BE66  
                       __size_ofi1_getDeviceID 0020                                 __pbitbssCOMRAM 02F0  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                             __end_ofi2___flge 93DE                                          sin@x2 0094  
                                        tablat 000FF5          __end_of_max_POS3P3_ADC_Result_address CE95  
                _max_POS3P3_ADC_Result_address CE93                               __end_ofi2___wmul BBDE  
                        ??_saveSRAMMaxToEEPROM 015F                                          plusw1 000FE3  
                                        plusw2 000FDB                                 ??_EUSART2_Read 014F  
                             ??i1_OLED_PutChar 0110                   __size_of_ADCC_GetFilterValue 0014  
                                        sqrt@a 006C                                          sqrt@i 0075  
                                        sqrt@p 007A                                          status 000FD8  
                       __end_of_clearADCErrors BC90                                          wtemp6 0060  
                  getCauseOfResetStringSmall@r 0151                   __end_ofi1_getMajorRevisionID B672  
                                i2___flmul@grs 003E                                __end_of_strncmp A2C8  
                              __end_of_strncpy AA44                               __end_ofi2_fround 797E  
               ?_INTERRUPT_InterruptManagerLow 0001                    ringBufferLUT@max_temp_print 04AB  
                           __size_ofi2___fladd 033E                             __size_ofi2___fldiv 02B4  
                           __size_ofi2___awdiv 0084                             __size_ofi2___flneg 002E  
                           __size_ofi2___awmod 0070                              getUserID@IDOffset 0205  
                           __size_ofi2___flmul 0350                             __size_ofi2___flsub 0048  
                           __size_ofi2___fltol 00DE                             __size_ofi2___lldiv 0082  
                           __size_ofi2___llmod 0066                               __end_ofi2_printf B6EA  
              I2C1_MasterWriteTRBBuild@address 0154              i1I2C1_MasterWriteTRBBuild@address 0105  
                     __size_of_HLVD_Initialize 0010                 ??_TMR6_DefaultInterruptHandler 0100  
                             __end_ofi1_strcpy B2AA                   ??_getCauseOfResetStringSmall 0151  
        __end_of_EUSART2_SetTxInterruptHandler BF86         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler BF78                                _TMR5_Initialize B140  
                               __CFG_CSWEN$OFF 000000                             __size_ofi2__doprnt 1504  
                              __initialization 9A92                             OLED_Command@length 0201  
                        I2C1_MasterWrite@pdata 0158                              i2___lldiv@divisor 0005  
                        I2C1_MasterWrite@pflag 015D                                   __end_of_acos A908  
                                 __end_of_fabs B726                                   __end_of_atan 87D0  
                                 __end_of_asin 68DA                                   __end_of_atoi 9A92  
                                 __end_of_main 98DC                  _OLED_updateCallback$intlevel0 7984  
                            i2___lldiv@counter 000D                               _max_Irms_address CE97  
                                 __end_of_sqrt 7166                                     i2printf@ap 00B4  
                                   i2printf@pb 00B6             __end_ofi1_OLED_UpdateFromRAMBuffer A6CA  
                   i1_OLED_UpdateFromRAMBuffer A650                             __size_ofi1_memmove 00AE  
                        ??_writeDoubleToEEPROM 0159                          __end_of_ringBufferLUT 170C  
                               __CFG_SCANE$OFF 000000                          _max_POS3P3_ADC_Result 029D  
                      FLASH_ReadByte@flashAddr 014F                        __end_of_TMR2_Initialize B9FA  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                             __end_of_OledFont D19B                            __size_of_OLED_Clear 0040  
                                       ??_acos 005E                                         ??_fabs 0034  
                                  _i2c1_object 0169                                         ??_atan 005E  
                                       ??_asin 005E                                         ??_atoi 0157  
                     _TMR2_SetInterruptHandler BF5C                                         ??_main 04C2  
             __end_of_recoverSRAMMaxFromEEPROM 8CE4                                     i1strcpy@cp 011B  
                            ?i1_FLASH_ReadByte 0100                       _TMR5_SetInterruptHandler BF40  
                                   i1strcpy@to 0117                                         ??_sqrt 0070  
                            ?i1_FLASH_ReadWord 0104                                  __activetblptr 000003  
                      __size_of_FLASH_ReadByte 001A                        __size_of_FLASH_ReadWord 0042  
                   __size_of_getDeviceIDString 0060                           __size_of__tdiv_to_l_ 0134  
                             i1OLED_PutChar@ch 0120                                    ?i2___xxtofl 0005  
                           ??i1_FLASH_ReadByte 0104                         getUserID@initialOffset 0200  
                           ??i1_FLASH_ReadWord 0108                                      ??_OLED_YX 0204  
                              _TMR6_Initialize B8D8                             _TRIAC_Firing_Angle 00F7  
                    i1FLASH_ReadByte@flashAddr 0100                                         _ADACCH 000F71  
                                       _ADACCL 000F70                     __end_of_EUSART2_Initialize AB12  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 01A4                                         ?_floor 0076  
                                       _ADERRH 000F6F                                         _ADERRL 000F6E  
                                       ?_frexp 0001                               ___llmod@dividend 0200  
                                       _ADLTHH 000F6B                                         ?_scale 024A  
                                       STR_100 F808                                         _ADLTHL 000F6A  
                                       STR_101 FD7D                                         STR_110 F985  
                                       STR_102 F876                                         STR_103 FC14  
                                       STR_111 FBB1                                         STR_112 F8DE  
                                       STR_104 F852                                         STR_120 F24B  
                                       STR_200 FB71                                         STR_201 FCC0  
                                       STR_105 FE4F                                         STR_121 FD9B  
                                       STR_113 FB9C                                         STR_130 FEC1  
                                       STR_114 F900                                         STR_106 F2C0  
                                       STR_122 EE63                                         _ADRESH 000F64  
                                       STR_210 FEE3                                         STR_202 FF5A  
                                       STR_211 FF5A                                         STR_107 FDB9  
                                       STR_115 FD8C                                         STR_131 F6F0  
                                       STR_123 EECC                                         STR_203 FF50  
                                       STR_132 FDC7                                         STR_140 FAF9  
                                       STR_108 F7E3                                         STR_124 F4AA  
                                       STR_116 F2FA                                         STR_204 FF46  
                                       STR_117 FD10                                         STR_141 FB12  
                                       STR_109 FAC6                                         STR_133 FA74  
                                       STR_125 F40B                                         STR_205 FEEE  
                                       STR_214 FF95                                         STR_150 FDD5  
                                       STR_126 FC8D                                         STR_134 FA01  
                                       STR_118 F046                                         STR_142 EF9B  
                                       _ADRESL 000F63                                         STR_206 FEFA  
                                       STR_119 FE76                                         STR_135 FC5A  
                                       STR_215 FC38                                         STR_127 F89A  
                                       STR_151 F475                                         STR_143 EF35  
                                       STR_207 FEF9                                         STR_216 FECD  
                                       STR_160 FDE3                                         STR_128 FD20  
                                       STR_152 FC7C                                         STR_136 F9A5  
                                       STR_144 F667                                         STR_208 FD50  
                                       STR_145 F82D                                         STR_129 F76D  
                                       STR_161 F6C3                                         STR_153 F546  
                                       STR_137 F440                                         STR_209 FED8  
                                       STR_154 FF25                                         STR_162 FC6B  
                                       STR_170 F922                                         STR_138 F71A  
                                       STR_146 F157                                         STR_139 FE69  
                                       STR_155 F695                                         STR_163 F3D5  
                                       STR_147 F08F                                         STR_171 E1C7  
                                       STR_148 FCF0                                         STR_164 FC9E  
                                       STR_156 FBC6                                         STR_172 FA3B  
                                       STR_180 F796                                         STR_181 F639  
                                       STR_157 F512                                         STR_165 F369  
                                       STR_149 F286                                         STR_173 E783  
                                       STR_174 FF8C                                         STR_158 FC01  
                                       STR_166 FA1E                                         STR_182 F9E3  
                                       STR_190 FE1B                                         STR_183 FF30  
                                       STR_159 F579                                         STR_167 DDF9  
                                       STR_175 D1EB                                         STR_191 FF5A  
                                       STR_176 FFAE                                         STR_168 F944  
                                       STR_184 EB45                                         STR_192 FCC0  
                                       STR_185 FA58                                         STR_177 E96F  
                                       STR_169 E4B3                                         STR_193 FD5F  
                                       STR_186 F5F1                                         STR_178 F332  
                                       STR_194 FCD0                                         STR_187 F9C4  
                                       STR_179 F196                                         STR_195 FBEE  
                                       STR_188 FE35                                         STR_196 F74D  
                                       STR_197 F744                                         STR_189 FE9D  
                                       STR_198 FA90                                         STR_199 FB87  
                                       _ADSTAT 000F65                                         _ADUTHH 000F6D  
                             ___awdiv@dividend 0155                                         _ADUTHL 000F6C  
                 __end_of_Total_Energy_address CE9B                                         _ANSELA 000E92  
                                       ?_putch 0001                                         _ANSELB 000E9A  
                                       _ANSELD 000EA7                                         _ANSELE 000EAF  
                                       _ANSELF 000EB4                                         _ANSELG 000EBC  
                         _readDoubleFromEEPROM AD92                              __end_of_OLED_Init A1A4  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _T7GATE 000F32                                         _RC2REG 000EF1  
                                       _T7GCON 000F31                                         _RC2STA 000EF5  
                                       i1l1117 B000                                         i1l1135 A0E4  
                                       i1l1136 A0D0                                         i1l1138 A0F0  
                                       i1l1411 7E48                                         i1l1412 7C10  
                                       i1l1414 7C7C                                         i1l1415 7D22  
                                       i1l1416 7D84                                         _ODCONA 000E90  
                                       i1l3034 B276                                         _ODCONB 000E98  
                                       i1l3035 B26C                                         i1l1419 7DE6  
                                       _ODCONC 000EA0                                         _RC6PPS 000E68  
                                       i1l1356 B47E                                         _ODCOND 000EA5  
                                       _ODCONE 000EAD                                         _ODCONF 000EB2  
                                       _ODCONG 000EBA                                         _ODCONH 000EBF  
                                       i1l1810 AC00                                         _RC7PPS 000E69  
                                       i2l1100 82F0                                         i2l1101 82F4  
                                       i1l1805 AC0A                                         i1l1806 ABEC  
                                       i2l1111 B4FC                                         i2l1103 82FC  
                                       i1l1911 9D0A                                         i1l1809 ABF6  
                                       i2l1106 BE02                                         i1l1930 AD16  
                                       i1l1915 9D84                                         i1l1931 ACEA  
                __size_ofi1_getMinorRevisionID 0026                                         i2l2100 2C38  
                                       i1l1844 BA20                                         i2l2101 2CAE  
                                       i2l2102 2C80                                         i2l1070 8194  
                                       i2l2111 2D26                                         i2l1071 819C  
                                       i1l1927 B4C0                                         i2l3000 6FCE  
                                       i2l2200 381A                                         i2l1064 8308  
                                       i2l1072 81AA                                         i1l2832 9F94  
                                       i2l3001 7078                                         i2l2201 3844  
                                       i2l2113 2E6A                                         i2l2105 2CCA  
                                       i2l1081 8248                                         i2l1065 8132  
                                       i1l2833 9F5E                                         i2l3002 6FD4  
                                       i2l2210 3A16                                         i2l2130 2EBC  
                                       i2l2122 2E78                                         i2l2114 2E3E  
                                       i2l2106 2CC2                                         i2l1090 8298  
                                       i2l1074 81C6                                         i2l3003 701A  
                                       i2l2211 3A44                                         i2l2203 3870  
                                       i2l2131 2ECC                                         i2l2123 2E7C  
                                       i2l2115 2DEC                                         i2l1091 8290  
                                       i2l1067 817C                                         i2l3004 7042  
                                       i2l2220 3B98                                         i2l2204 3874  
                                       i2l2124 3132                                         i2l2140 2F7A  
                                       i2l2132 2EC6                                         i2l1076 81CE  
                                       i2l1068 818C                                         i2l3101 A6E8  
                                       i2l2213 3B12                                         i2l2141 2FA4  
                                       i2l1085 825A                                         i2l1077 81DC  
                                       i2l3006 712C                                         i2l2214 3AA4  
                                       i2l2206 38C2                                         i2l2150 30B6  
                                       i2l1094 82AA                                         i2l2223 3BE8  
                                       i2l2151 3B1C                                         i2l2215 3AE0  
                                       i2l2207 38EC                                         i2l2119 30BC  
                                       i2l2135 2F1E                                         i2l2127 2E80  
                                       i2l1095 82BA                                         i2l1087 8262  
                                       i2l1079 820E                                         i2l1360 4BA8  
                                       i2l2240 3D2E                                         i2l2232 3CD0  
                                       i2l2224 3C1C                                         i2l2216 3B0A  
                                       i2l2208 3A98                                         i2l2160 33EE  
                                       i2l2152 3148                                         i2l2144 2FB8  
                                       i2l2136 2F34                                         i2l1088 8272  
                                       i1l1888 AA76                                         i2l1361 4144  
                                       i2l2233 3C78                                         i2l2209 394E  
                                       i2l2153 31A6                                         i2l2145 301C  
                                       i2l2129 2E84                                         i2l1097 82C2  
                                       i2l1362 41C8                                         i2l2090 5224  
                                       i2l2242 3D50                                         i2l2226 3CBA  
                                       i2l2218 3BB2                                         i2l2146 306C  
                                       i2l1098 82CA                                         i2l1371 42D8  
                                       i2l2083 7842                                         i2l2243 3D58  
                                       i2l2227 3C36                                         i2l2219 3B66  
                                       i2l2163 3386                                         i2l2155 3212  
                                       i2l2139 2F3E                                         i2l1099 82EA  
                                       i2l1380 4632                                         i2l1372 4390  
                                       i2l2500 A3F6                                         i2l2252 3E48  
                                       i2l2244 3D7C                                         i2l2180 3572  
                                       i2l2156 3290                                         i2l2148 3080  
                                       i2l2325 BA78                                         i2l2093 52E4  
                                       i2l2253 3E72                                         i2l2245 3D84  
                                       i2l2237 3CEC                                         i2l2181 35B0  
                                       i2l2173 34D8                                         i2l2149 30A4  
                                       i2l1366 4BDA                                         i2l1390 4B98  
                                       i2l1382 48DC                                         i2l2502 A414  
                                       i2l2086 792A                                         i2l2094 5460  
                                       i2l2270 3FEA                                         i2l2262 3F4A  
                                       i2l2246 3E7C                                         i2l2182 35DA  
                                       i2l2174 34F2                                         i2l2158 32BE  
                                       i2l3071 8962                                         i2l2423 6630  
                                       i2l1375 4396                                         i2l1367 41CE  
                                       i2l2503 A40C                                         i2l2271 40B6  
                                       i2l2239 3D0C                                         i2l2191 36C0  
                                       i2l2159 330A                                         i2l3072 8972  
                                       i2l1376 4708                                         i2l1368 42D2  
                                       i2l2520 A882                                         i2l2512 A83E  
                                       i2l2096 5520                                         i2l2272 40E0  
                                       i2l2248 3DD8                                         i2l2601 99A8  
                                       i2l3081 8A12                                         i2l3073 8990  
                                       i2l2425 6758                                         i2l1393 4BA0  
                                       i2l1385 48E0                                         i2l1377 45DA  
                                       i2l2521 A890                                         i2l2513 A84A  
                                       i2l2089 5314                                         i2l2249 3E02  
                                       i2l2185 3662                                         i2l2177 3546  
                                       i2l2169 3466                                         i2l3082 8A06  
                                       i2l2442 85DE                                         i2l2426 6838  
                                       i2l1394 4BEA                                         i2l1386 49BC  
                                       i2l1378 44F2                                         i2l2506 A434  
                                       i2l2266 4062                                         i2l2258 3EC0  
                                       i2l2194 36DC                                         i2l2186 35F4  
                                       i2l3075 89A2                                         i2l2507 A43E  
                                       i2l2515 A860                                         i2l2267 3F68  
                                       i2l2259 3EEA                                         i2l2195 37A4  
                                       i2l2187 3630                                         i2l2179 35E2  
                                       i2l3076 8996                                         i2l3092 9428  
                                       i2l2444 864A                                         i2l2508 A44C  
                                       i2l2516 A858                                         i2l2196 37D2  
                                       i2l2188 365A                                         i2l2533 96DC  
                                       i2l3093 9416                                         i2l2445 8792  
                                       i2l1389 49C0                                         i2l2269 407A  
                                       i2l2534 9644                                         i2l3086 8A30  
                                       i2l3078 89E0                                         i2l2550 9150  
                                       i2l2198 384C                                         i2l3087 8A62  
                                       i2l3079 89C8                                         i2l3095 9446  
                                       i2l2447 87AA                                         i2l2543 9092  
                                       i2l2519 A878                                         i2l2199 37DE  
                                       i2l2560 92F2                                         i2l3096 94DE  
                                       i2l2561 9326                                         i2l2545 90B0  
                                       i2l2562 9364                                         i2l2546 90F2  
                                       i2l2650 8EAA                    i1I2C1_MasterTRBInsert@count 0105  
                                       i2l2563 93A2                                         i2l2539 B714  
                                       i2l2555 9184                                         i2l2547 9122  
                                       i2l2651 8ED2                                         i2l2715 BD44  
                                       i2l2556 9178                                         i2l2660 8F26  
                                       i2l2549 9160                                         i2l2653 8F0E  
                                       i2l2902 6504                                         i2l2590 98FC  
                                       i2l2654 8EFE                                         i2l2911 6544  
                                       i2l2567 BA46                                         i2l2647 8E44  
                                       i2l1855 B0F2                                         i2l2920 65BA  
                                       i2l2904 651A                                         i2l2592 9968  
                                       i2l2760 A548                                         i2l2593 9958  
                                       i2l2649 8E70                                         i2l2914 658A  
                                       i2l2906 6524                                         i2l2770 AB66  
                                       i2l1858 B01C                                         i2l2755 A506  
                                       i2l2659 8F32                                         i2l2499 A3E6  
                                       i2l1859 B04A                                         i2l2940 7580  
                                       i2l2932 748C                                         i2l2756 A4FA  
                                       i2l2933 7488                                         i2l2765 AB30  
                                       i2l2918 65B0                                         i2l2598 998C  
                                       i2l2942 75A6                                         i2l2766 AB24  
                                       i2l2919 65B8                                         i2l2871 62CA  
                                       i2l2599 9980                                         i2l2935 74D2  
                                       i2l2863 690E                                         i2l2759 A53A  
                                       i2l2880 6332                                         i2l2872 62C6  
                                       i2l2952 7614                                         i2l2928 744C  
                                       i2l2864 6A2C                                         i2l2945 75DC  
                                       i2l2937 74FA                                         i2l2929 7448  
                                       i2l2865 6A9C                                         i2l2769 AB58  
                                       i2l2890 640E                                         i2l2962 5C3A  
                                       i2l2954 7658                                         i2l2946 75BE  
                                       i2l2938 75A8                                         i2l2866 6BC2  
                                       i2l2883 63EA                                         i2l2963 5C36  
                                       i2l2955 767C                                         i2l2939 7558  
                                       i2l2884 63C8                                         i2l2876 6312  
                                       i2l2980 5EA0                                         i2l2964 5C4A  
                                       i2l2956 76A6                                         i2l2893 6432  
                                       i2l2885 63D6                                         i2l2877 630E  
                                       i2l2973 5E68                                         i2l2957 76B2  
                                       i2l2894 6436                                         i2l2886 63DA  
                                       i2l2982 5EE4                                         i2l2974 5E4A  
                                       i2l2966 5C7A                                         i2l2958 76B4  
                                       i2l2879 636E                                         i2l2983 5F02  
                                       i2l2967 5C76                                         i2l2968 5C8A  
                                       i2l2897 64D0                                         i2l2889 6448  
                                       i2l2985 5F26                                         i2l2969 5CA8  
                                       i2l2993 6EE0                                         i2l2986 5F44  
                                       i2l2899 64E0                                         i2l2995 6EF0  
                                       _RG7PPS 000E89                                         i2l2996 6F0A  
                                       i2l2998 6F44                                         i2l2999 6F70  
                            __end_ofi1_OLED_YX B6AE                                         _TABLAT 000FF5  
                                i2putch@txData 0002                                         _FVRCON 000EC4  
                  i1I2C1_MasterTRBInsert@pflag 0102                                      ??i2_scale 004D  
                      TMR7_WriteTimer@timerVal 0100                          __size_of_getCOMMError 0016  
                                       _SBOREN 00725F                    ?_getCauseOfResetStringSmall 014F  
                ?i1_getCauseOfResetStringSmall 0100                                         _OSCFRQ 000E49  
                                ?_OLED_Command 0001                                         _NVMDAT 000F76  
                                    ??i2_putch 0002                                         _RX2PPS 000E11  
                                       _TX2REG 000EF2                                         _TX2STA 000EF6  
                              ?_clearADCErrors 0001                               __end_of___xxtofl 8924  
        __end_of_ADCC_DischargeSampleCapacitor C000         __size_of_ADCC_DischargeSampleCapacitor 0008  
                _ADCC_DischargeSampleCapacitor BFF8                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                              ?_I2C1_MasterWrite 0158  
                              _clearCOMMErrors BF16                                    i1memmove@d1 0100  
                                  i1memmove@s1 0102                                 i2___fladd@aexp 0069  
                               i2___fladd@bexp 006A                                  ?_OLED_PutChar 0001  
                       ?_dimmingOnTimeCallback 0001          __end_of_ADCC_HasAccumulatorOverflowed BFC8  
       __size_of_ADCC_HasAccumulatorOverflowed 000C                  _ADCC_HasAccumulatorOverflowed BFBC  
                               __CFG_XINST$OFF 000000                                   __doprnt$5591 0267  
                              _TMR7_Initialize AF24                             ??_I2C1_MasterWrite 015F  
                             __end_of__powers_ CE11                                   i2_scale$5961 004D  
                               _p_i2c1_current 018F                __end_of_terminal_ringBufferPull 8BAE  
                                       ___flge 919C                               ?_updateErrorLEDs 0001  
                            _ADCC_ThresholdISR BAD2                                      ??___fladd 020C  
                                       ___wmul BA82                                      ??___fldiv 0220  
                                    ??___awdiv 0159                                      ??___flneg 015D  
                               __CFG_STVREN$ON 000000                                      ??___awmod 0153  
                                    ??___flmul 0239                                      ??___flsub 015D  
                                    ??___fltol 0257                                      ??___lldiv 0157  
                                i1_getDeviceID BCD2                                      ??___llmod 015C  
                                ?i1_OLED_Clear 0001                     ??_I2C1_MasterWriteTRBBuild 0156  
                                    ??__doprnt 0261                             ?_ADCC_ThresholdISR 0001  
     writeEnergyToEEPROMCallback@current_value 0040                        __end_of_TMR4_Initialize B9CA  
                     ??_terminal_setCursorHome 0160                                  i2__doprnt@idx 0098  
                                       _fround 6BD4                                  i2__doprnt@len 009B  
                                    ?_I2C1_ISR 0001                                  i2__doprnt@exp 009D  
                                i2__doprnt@val 00A7                                         clear_0 9B18  
                                       clear_1 9B24                                         clear_2 9B30  
                                       clear_3 9B3C                                         clear_4 9B4C  
                         _eusart2RxStringReady 07D8                               ___awdiv@quotient 015B  
                               i2___fldiv@aexp 002B                                 i2___fldiv@bexp 002A  
                              ___awmod@divisor 0151                             i1OLED_Command@temp 0112  
                               i2___fldiv@sign 001F                                   __doprnt@flag 0280  
                              ___awmod@counter 0153                                         _printf B540  
                                 __doprnt@fval 0276                                ??_INT0_CallBack 0003  
                                 __doprnt@prec 0282                                         _strcat B05C  
                                       _strchr B760                        __end_of_DATAEE_ReadByte BDD4  
                                       _strcmp AE36                                         _strcpy B18A  
                                       _strlen AC38                  OLED_updateCallback@rev_id_str 0225  
                               i2___awdiv@sign 000C                                         _strstr A1A4  
                                       floor@i 007A                                         floor@x 0076  
                 getCauseOfResetString@strings 03E7                               _background_color 019A  
                              _TMR5_StartTimer C01E                                _ADCC_Initialize A908  
                            ??i2_EUSART2_Write 0001           __end_of_TMR4_DefaultInterruptHandler C034  
        __size_of_TMR4_DefaultInterruptHandler 0002                   _TMR4_DefaultInterruptHandler C032  
                               _PMD_Initialize BD4C                        FLASH_ReadWord@flashAddr 0153  
                            __end_ofi2___fladd 65D6                                      ??_isdigit 014F  
                                    ??_memmove 0155                              __end_ofi2___fldiv 76D0  
                            __end_ofi2___awdiv A456                              __end_ofi2___flneg BA58  
                            __end_ofi2___awmod A89A                              __end_ofi2___flmul 5F5A  
                            __end_ofi2___flsub B2F2                              __end_ofi2___fltol 99BA  
                      ??i2_writeDoubleToEEPROM 000B                              __end_ofi2___lldiv A55A  
                                       sin@sgn 0098                            ??_ADCC_ThresholdISR 005E  
                            __end_ofi2___llmod AB78                                   __mediumconst CDDC  
                                 _getCOMMError BE50                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                          _ADCC_StopConversion C022                           _EUSART2_Transmit_ISR B806  
                            __end_ofi2__doprnt 4138                         ??_ADCC_StartConversion 0100  
                               i2___awmod@sign 0006                                ??_EUSART2_Write 014F  
     TMR2_SetInterruptHandler@InterruptHandler 014F       TMR4_SetInterruptHandler@InterruptHandler 014F  
     INT0_SetInterruptHandler@InterruptHandler 014F       TMR5_SetInterruptHandler@InterruptHandler 014F  
     TMR7_SetInterruptHandler@InterruptHandler 014F   ADCC_SetADTIInterruptHandler@InterruptHandler 014F  
     TMR6_SetInterruptHandler@InterruptHandler 014F                                 peakToRMS@Angle 00B5  
                I2C1_MasterWriteTRBBuild@pdata 0151                          ?_readDoubleFromEEPROM 0151  
                               i2___flmul@aexp 003D                                 i2___flmul@bexp 0042  
                                    ??_strncmp 015B                                      ??_strncpy 0155  
      terminal_textAttributes@background_color 028F                                 i2___flmul@sign 003C  
                               i2___flmul@temp 0047                              __end_ofi1_memmove 9FC6  
                               i2___flmul@prod 0043                  __size_of_INTERRUPT_Initialize 001E  
                              _eusart2RxBuffer 0300                                     ___flge@ff1 014F  
                                   ___flge@ff2 0153                                 ??_OLED_Command 015F  
                      __end_of_TMR5_Initialize B18A                                   ___xxtofl@arg 0159  
                            __end_ofi2_isdigit BD4C                                   ___xxtofl@exp 0158  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00DE  
                            _SYSTEM_Initialize B5BC                                   ___xxtofl@val 014F  
         __end_of_TMR7_DefaultInterruptHandler C02C          __size_of_TMR7_DefaultInterruptHandler 0002  
                 _TMR7_DefaultInterruptHandler C02A                                _eusart2TxBuffer 0400  
              i1OLED_updateCallback@dev_id_str 0125                                     __accesstop 0060  
                    i1FLASH_ReadWord@flashAddr 0104                        __end_of__initialization 9B54  
                               i2___fltol@exp1 0075                                      ?_INT0_ISR 0001  
                                   ___flneg@f1 0200                          __end_of_TMR2_CallBack BC26  
                  __size_ofi1_I2C1_MasterWrite 004E                                      ?_HLVD_ISR 0001  
                           ?_SYSTEM_Initialize 0001                      __size_ofi2_TMR5_StopTimer 0004  
                                 eval_poly@res 0078                                  ___rparam_used 000001  
    __end_of_ADCC_GetCurrentCountofConversions C02A     __size_of_ADCC_GetCurrentCountofConversions 0004  
          ??_ADCC_GetCurrentCountofConversions 0001             ?_ADCC_GetCurrentCountofConversions 0001  
            _ADCC_GetCurrentCountofConversions C026                                     ___fltol@f1 0253  
                              _TMR5_WriteTimer BD84                                 ??_OLED_PutChar 0200  
                               _i2c1_trb_count 01A0                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                             i2__tdiv_to_l_@cntr 000E  
                    __end_of_ADCC_ThresholdISR BAFA                              i2___llmod@counter 0016  
                         ?_ADCC_StopConversion 0001                             i2__tdiv_to_l_@quot 000A  
            terminal_ringBufferPull@charNumber 04BC                            __size_ofi2___xxtofl 0150  
                        _I2C1_FunctionComplete BDEE                           _I2C1_BusCollisionISR C006  
                   __end_of_getMajorRevisionID B636                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                        ??_terminal_printNewline 0160  
                        __end_of_TMR4_CallBack BC4A                         I2C1_MasterWrite@length 015A  
                               ?i1_getDeviceID 010B                                   __pidataBANK0 C011  
                                 __pidataBANK1 C00C                                   __pidataBANK2 BEC6  
                                 __pidataBANK3 BBDE                            ??_SYSTEM_Initialize 0154  
                                    ?_TMR2_ISR 0001                                      ?_TMR4_ISR 0001  
                                    ?_TMR5_ISR 0001                                 ??i1_OLED_Clear 0121  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                             _DATAEE_WriteByte B57E                                  __end_of_floor 94F0  
                                __end_of_frexp A744                                  __end_of_scale 50D0  
               ?_EUSART2_SetTxInterruptHandler 014F                                  __end_of_putch BE7A  
                            ??_HLVD_Initialize 014F                                     ??_I2C1_ISR 0004  
                     ??_terminal_clearTerminal 0160                               ?_TMR2_Initialize 0001  
                      __end_of_TMR6_Initialize B90A                       __size_of_getCauseOfReset 0052  
                  ?i1_I2C1_MasterWriteTRBBuild 0100                         __end_of_PMD_Initialize BD68  
                        _getCauseOfResetString B90A                                      ?i2___flge 0034  
                         __end_of_EUSART2_Read B21A                                      ?i2___wmul 0001  
                                i2__tdiv_to_l_ 8E18                    __size_of_EXT_INT_Initialize 001E  
                                   __div_to_l_ 8F4A                           i1_getMajorRevisionID B636  
                           __size_of_getUserID 0052                                      ?i2_fround 0049  
                        ?_EUSART2_Transmit_ISR 0001                    __size_of_getMinorRevisionID 0026  
                ?_TMR4_DefaultInterruptHandler 0001                                      ?i2_printf 00B2  
                                    ?i1_strcpy 0117                    ADCC_StartConversion@channel 0100  
                            ?_OLED_WriteString 0211                                     __doprnt@ap 025F  
                                   __doprnt@cp 026C                                     __doprnt@pb 025B  
                              __div_to_l_@exp1 015C                                        ??_floor 005E  
                              __div_to_l_@cntr 015B                                        ??_frexp 0007  
                                      ??_scale 015D                      __end_of_SYSTEM_Initialize B5FA  
                              __div_to_l_@quot 0157                                        ??_putch 0150  
                                 peakToRMS@RMS 00C5                             i2___lldiv@quotient 0009  
                      __end_of_clearCOMMErrors BF24                                   ??_OLED_Clear 015F  
                           ??_OLED_WriteString 015F                                  _eusart2RxHead 00F4  
                                _eusart2TxHead 01A6                                     __pbssBANK0 00F0  
                                   __pbssBANK1 0160                                     __pbssBANK2 0291  
                                   __pbssBANK3 0300                                     __pbssBANK4 0400  
                                _eusart2RxTail 01A3                                  _eusart2TxTail 01A5  
                           __size_of_eval_poly 0100                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0004                        __end_of_TMR7_Initialize AF72  
                           __size_of_peakToRMS 024A                          _INT0_InterruptHandler 02CB  
                                   ??_INT0_ISR 0003                                     ??_HLVD_ISR 0011  
            __size_of_recoverSRAMMaxFromEEPROM 0136                      ?_recoverSRAMMaxFromEEPROM 0001  
                ?_TMR7_DefaultInterruptHandler 0001                    __end_of_OLED_updateCallback 7C0E  
                        _TMR4_InterruptHandler 02C8                                  __div_to_l_@f1 014F  
                                __div_to_l_@f2 0153                          EUSART2_Read@readValue 014F  
                              _TMR7_WriteTimer BB20                          ??_ADCC_StopConversion 0001  
                        ?_I2C1_BusCollisionISR 0001                               ??_FVR_Initialize 014F  
                   __end_ofi2_DATAEE_WriteByte B760                                  _error_handler 0160  
                          i1_getDeviceIDString ABD8                          ringBufferLUT@arg_buff 0494  
                               _peakToRMS$5946 00C1                                 _peakToRMS$5947 00B9  
                               _peakToRMS$5948 00BD                                    _Irms_offset 01AC  
                                      ?___flge 014F                 ?_ADCC_DischargeSampleCapacitor 0001  
            terminal_ringBufferPull@index_3378 04BE                     ??_OLED_UpdateFromRAMBuffer 0160  
                                      ?___wmul 014F                          _currentMeasuredToPeak A55A  
                      __end_of_TMR5_StartTimer C022                                __CFG_PPS1WAY$ON 000000  
             __end_of_TMR6_SetInterruptHandler BF40                                     ??_TMR2_ISR 013A  
                                   ??_TMR4_ISR 0044                        __end_of_ADCC_Initialize A972  
                                   ??_TMR5_ISR 0003                                     ??_TMR6_ISR 0101  
                                   ??_TMR7_ISR 0102                  i1getMajorRevisionID@REVID_RAW 010E  
                              _I2C1_Initialize B7D0                 ?_ADCC_HasAccumulatorOverflowed 0001  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                 ringBufferLUT@max_Power_print 049F                           _Total_Energy_address CE99  
                                      ?_fround 024A                                        _ADPREVH 000F62  
                                      _ADPREVL 000F61           __end_of_ADCC_SetADTIInterruptHandler BFA2  
        __size_of_ADCC_SetADTIInterruptHandler 000E                   _ADCC_SetADTIInterruptHandler BF94  
                             ?_TMR4_Initialize 0001                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                __size_of_terminal_setCursorHome 0010  
                                      ?_printf 0285                                ?_PMD_Initialize 0001  
                          _ADCC_GetFilterValue BE7A              getCauseOfResetStringSmall@strings 03D5  
                               ?i2__tdiv_to_l_ 0001                                     ??i2___flge 003C  
                           __end_of_OLED_Clear B442                                        ?_strcat 014F  
                                      ?_strchr 014F                                        ?_strcmp 014F  
                                      ?_strcpy 0206                                        ?_strlen 014F  
                               _FLASH_ReadByte BDA0            ringBufferLUT@max_voltage_print_3734 04AF  
          ringBufferLUT@max_voltage_print_3728 04A7                                        ?_strstr 0200  
                             ?_DATAEE_ReadByte 014F                                     ??i2___wmul 0005  
                               _FLASH_ReadWord B37E                          ?i1_getMajorRevisionID 0001  
                                      u2250_41 8E54                                        u2248_41 8E28  
                                      i1l15363 A0F0                                        i1l15357 A0D0  
                                      i1l17045 B4A0                                        i1l17055 B4BA  
                                      i1l17039 B48C                                        _INT0PPS 000DF0  
                                      i2l12101 B0C0                                        i2l10579 76A6  
                                      i1l25897 AC24                                        i1l25899 AC2E  
                                      i2l25051 4062                                        i2l25059 40D2  
                                      i2l14863 93DA                                        i2l24821 35F4  
                                      i2l24809 3572                                        i2l24667 2F3E  
                                      i2l24757 3358                                        i2l24749 330A  
                                      i2l24677 2FB8                                        i2l24855 37DE  
                                      i2l24953 3C7C                                        i2l24777 346A  
                                      i2l24939 3C3A                                        i2l19531 817C  
            i2writeDoubleToEEPROM@input_double 0005                writeDoubleToEEPROM@input_double 0153  
                                    ?___xxtofl 014F                                        _SP2BRGH 000EF4  
                                   ??i2_fround 004D                                        _SP2BRGL 000EF3  
                                      _OLED_YX B502                    __size_ofi1_OLED_WriteString 0058  
                                      _OSCCON1 000E43                                        _OSCCON3 000E45  
                  __end_of_EUSART2_Receive_ISR 9E6A                                      _I2C1_Stop B4C2  
                         ?i1_getDeviceIDString 010D                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                   ??i2_printf 005E                                        _NVMADRH 000F75  
                                      _NVMADRL 000F74                                        _OSCTUNE 000E48  
                                      _NVMCON2 000F78                                     ??i1_strcpy 011B  
              i1OLED_updateCallback@rev_id_str 0135                         ??_readDoubleFromEEPROM 0155  
                                      _SSP1ADD 000F92                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE                                        _SSP1BUF 000F91  
          __end_of_max_Temp_ADC_Result_address CE91                    _max_Temp_ADC_Result_address CE8F  
                        i1_OLED_updateCallback 7C0E                       _acquisitionTimerCallback BEB4  
                     __end_of_max_Irms_address CE99                                   i1OLED_YX@Row 0116  
                      __end_of_TMR5_WriteTimer BDA0               __size_of_terminal_textAttributes 0368  
                                      i2_scale 50D0                               ?_TMR5_Initialize 0001  
                I2C1_MasterTRBInsert@ptrb_list 014F                           DATAEE_WriteByte@bAdd 014F  
                         ?_ADCC_GetFilterValue 0001                                        i2_putch BFE6  
              i1I2C1_MasterWriteTRBBuild@pdata 0102              __size_of_INT0_SetInterruptHandler 000E  
                        i2DATAEE_ReadByte@bAdd 0001                      ?_INT0_SetInterruptHandler 014F  
                              i2___fladd@signs 0068           __end_of_terminal_textAttributesReset BEB4  
        __size_of_terminal_textAttributesReset 0012                   _terminal_textAttributesReset BEA2  
                       ?_I2C1_FunctionComplete 0001                                  ??_getADCError 014F  
                            __end_of__npowers_ CE45                                        __Hparam 0000  
                __size_of_I2C1_MasterTRBInsert 00A2            __end_of_writeEnergyToEEPROMCallback A4D8  
                  _writeEnergyToEEPROMCallback A456                       i1OLED_PutChar@data_array 0114  
                   __size_of_ADCC_ThresholdISR 0028                                ??i1_getDeviceID 010D  
           __end_of_max_FVR_ADC_Result_address CE8F                     _max_FVR_ADC_Result_address CE8D  
                                   _scale$5590 024E                                        __Lparam 0000  
                            __end_of_getUserID AD92                          _ADCC_ClearAccumulator C000  
                   ??_TMR2_SetInterruptHandler 0152                 i1I2C1_MasterWriteTRBBuild@ptrb 0100  
                   ??_TMR5_SetInterruptHandler 0152                             _p_i2c1_trb_current 0191  
                     ??_dimmingOffTimeCallback 0003                                __size_of___flge 0122  
                                      ___fladd 5F5A                                        ___fldiv 7166  
                                      ___awdiv A2C8                                        ___flneg B96A  
                                      ___awmod A7B8                                        ___flmul 58B8  
                                      ___flsub B21A                                 i2__doprnt$5962 0094  
                                      ___fltol 96F8                                        ___lldiv A34E  
                              __size_of___wmul 0028                                        ___llmod A744  
                  ?i1_OLED_UpdateFromRAMBuffer 0001                         __end_of_FLASH_ReadByte BDBA  
                                      __doprnt 170C                         ?_getCauseOfResetString 014F  
                       __end_of_FLASH_ReadWord B3C0                                        __pcinit 9A92  
                            __end_of_eval_poly 96F8                                __size_of_fround 02CA  
                             ?_TMR6_Initialize 0001                                        __ramtop 0E00  
              __size_of_terminal_clearTerminal 0010                           __end_of_OLED_Command A9DC  
                                      __ptext0 97F2               i2readDoubleFromEEPROM@byte_index 000B  
               readDoubleFromEEPROM@byte_index 0159                                        __ptext1 BE08  
                                      __ptext2 BED6                                        __ptext3 8A74  
                                      __ptext4 0000                                        __ptext5 BEA2  
                                      __ptext6 5550                                        __ptext7 A9DC  
                                      __ptext8 B05C                                        __ptext9 BEE6  
                            __end_of_peakToRMS 859A                                __size_of_printf 003E  
                currentMeasuredToPeak@Measured 0099                     ringBufferLUT@angle_degrees 0497  
                ?_ADCC_SetADTIInterruptHandler 014F                        __size_of_TMR5_StopTimer 0004  
                              __size_of_strcat 004C                                __size_of_strchr 0038  
                              __size_of_strcmp 0050                                __size_of_strcpy 0048  
                              __size_of_strlen 0058                                  i2_fround$5960 004D  
                                i2_fround$5959 0051                              __end_of_hexpowers CE8D  
                       getCauseOfResetString@r 0151                                    ?__div_to_l_ 014F  
                              __size_of_strstr 0094                                        _dpowers CE45  
                        _OSCILLATOR_Initialize BD68                         ??_EUSART2_Transmit_ISR 0100  
                                    _T2CONbits 000FBD                                   __size_of_abs 002A  
                                 i2fround@prec 0055                                        _isdigit BC90  
                              atan@val_squared 0089                                 i2__doprnt@flag 00AD  
                                 __size_of_sin 02FA                                   ??i2___xxtofl 0009  
                                      _memmove 9E6A                                     ??___xxtofl 0153  
                               i2__doprnt@fval 00A3                               ___awmod@dividend 014F  
                               i2__doprnt@prec 00AF                                      _T4CONbits 000FB7  
                        ??i1_getDeviceIDString 010F                           __end_of_OLED_PutChar 9CF4  
                     ??_PIN_MANAGER_Initialize 014F              __size_of_TMR4_SetInterruptHandler 000E  
                                    _T2HLTbits 000FBE                                        atan@val 008D  
                                    _T5CONbits 000FC3                              ??_getCauseOfReset 014F  
            __size_of_TMR7_SetInterruptHandler 000E                      ?_TMR4_SetInterruptHandler 014F  
                                   ?_I2C1_Stop 0001                      ?_TMR7_SetInterruptHandler 014F  
                                    _T6CONbits 000FB1                                        asin@sgn 0095  
                                    _T4HLTbits 000FB8                    __end_of_saveSRAMMaxToEEPROM 80F8  
                                    _T7CONbits 000F30                        ringBufferLUT@percentage 04B5  
                                    _T6HLTbits 000FB2                               ??_clearADCErrors 014F  
                   __size_of_SYSTEM_Initialize 003E                           I2C1_ISR@pi2c_buf_ptr 018D  
                                __doprnt@width 027E                          i2EUSART2_Write@txData 0001  
                                      _strncmp A238                                 __pintcode_body 94F0  
                                      _strncpy A9DC                           end_of_initialization 9B54  
                      __end_of_TMR7_WriteTimer BB46                                        ftoa@buf 03C4  
                         __end_ofi1_OLED_Clear B4C2                               ?_clearCOMMErrors 0001  
                                    _T2RSTbits 000FC0                 ??_TMR4_DefaultInterruptHandler 0001  
                      getDeviceIDString@F17550 02EE                         _terminal_setCursorHome BED6  
                        ??_ADCC_GetFilterValue 0003                                      _PCON0bits 000FD7  
                                    _T4RSTbits 000FBA                               ?_TMR7_Initialize 0001  
                    __size_ofi1_FLASH_ReadByte 001A                           _max_POS12_ADC_Result 0299  
                    __size_ofi1_FLASH_ReadWord 0042                        ??_dimmingOnTimeCallback 0001  
                                      int_func 94F0                                      i1u2150_20 9DB4  
                                    i1u2142_20 AAA6                                      i1u2231_25 B662  
                                    i1u2144_20 9D06                                      i1u2232_21 ABE2  
                          i2___wmul@multiplier 0001                                      _T6RSTbits 000FB4  
                                    i1u2191_25 B698                                      i1u2265_20 B2A0  
                                    i1u2265_27 B296                                      i1u2194_20 B4BA  
                                    i1u2196_20 AD0C                                      i1u2196_27 AD02  
                                    i1u2197_20 AD38                                      i1u2197_27 AD2E  
                                    i2u1130_40 7610                                      i1u1596_20 B44E  
                                    i2u1133_40 7666                                      i1u1597_28 B452  
                                    i2u1134_40 768A                                      i2u2202_40 A418  
                               i2___xxtofl@arg 000F                                      i2u2132_40 860A  
                                    _OLED_Init A10A                               i2_TMR5_StopTimer C01A  
                                    i2u1421_40 BFC4                                      i2u2133_40 860C  
                                    i1u3718_28 0086                                      i2u2215_40 6A28  
                               i2___xxtofl@exp 000E                                      i2u2152_40 991A  
                                    i2u2216_40 6A2A                                      i2u2208_40 A864  
                                    i2u2152_45 9910                                 i2___xxtofl@val 0005  
                                    i1u3682_28 BABE                                      i2u1283_40 A710  
                                    i1u3675_28 BC12                                      i2u1339_45 B75C  
                                    i2u1339_46 B75E                                      i2u1283_48 A712  
                                    i2u2156_40 9992                                      i2u2164_40 8A1C  
                                    i2u2260_40 A50A                                      i1u3685_20 BB5C  
                                    i1u3684_28 B890                                      i2u2263_40 AB34  
                                    i2u2247_40 918A                                      i2u2440_40 41C0  
                                    i2u2256_40 8F38                         ??_I2C1_BusCollisionISR 0001  
                                    i2u2186_40 9434                                      i2u2450_40 48D4  
                                    i2u2443_40 42CA                                      i2u1387_40 B04A  
                                    i2u2452_40 49B4                                      i2u1901_40 6540  
                                    i2u2445_40 4388                                      i2u2454_40 4B90  
                                    i2u3502_40 3012                                      i2u3501_48 2FDE  
                                    i2u3501_49 3014                                      i2u3502_47 3008  
                                    i2u3503_40 3056                                      i2u3503_47 304C  
                                    i2u3521_40 34A8                                      i2u3513_40 32D0  
                                    i2u3505_40 30EC                                      i2u3505_47 30E2  
                                    i2u1906_40 6596                                      i2u3514_40 331C  
                                    i2u1923_40 5E9C                                      i1_OLED_YX B672  
                                    i2u1917_40 5C96                                      i2u3533_40 3670  
                                    i2u3532_48 361A                                      i2u3517_40 3358  
                                    i2u1926_40 5EF2                                      i2u1918_40 5E0C  
                                    i2u3542_40 385A                                      i2u3541_48 3804  
                                    i2u1918_45 5E02                                      i2u1927_40 5F10  
                                    i2u3543_40 386A                                      i2u1880_40 639E  
                                    i2u3551_48 3ACA                                      i2u3527_48 3530  
                                    i2u3480_40 2CEC                        __end_of_I2C1_Initialize B806  
                                    i2u3480_47 2CE2                                      i2u1881_40 63AE  
                                    i2u3536_48 36AA                                      i2u3481_40 2D14  
                                    i2u3481_47 2D0A                                      i2u1882_40 63B0  
                                    i2u3529_48 359A                                ___lldiv@divisor 0153  
                                    i2u3546_48 38AC                                      i2u3538_48 378C  
                                    i2u3483_40 2D6E                                      i2u3483_47 2D64  
                                    i2u3580_40 3E84                                      i2u3492_40 2EFA  
                                    i2u3484_40 2DAA                                      i2u3492_47 2EF0  
                                    i2u3484_47 2DA0                                      i2u1885_40 63F2  
                                    i2u3548_48 39FE                                      i2u3493_40 2F00  
                                    i2u3485_40 2DB2                    __end_of_writeDoubleToEEPROM AED6  
                                    i2u3590_40 4122                                      i2u3486_40 2DD4  
                                    i2u3709_48 9580                                      i2u3590_47 4118  
                                    i2u3486_47 2DCA                                      i2u3591_40 412E  
                                    i2u3583_40 3EFA                                      i2u3582_48 3EAA  
                                    i2u3575_48 3DC2                                      i2u3488_40 2E22  
                                    i2u3479_48 2C6A                                      i2u3488_47 2E18  
                                    i2u3680_48 BAE6                                      i2u3489_40 2E60  
                                    i2u3489_47 2E56                                      i2u1898_40 6528  
                                    i2u3593_48 BC5A                                      i2u3586_48 3F34  
                                    i2u3578_48 3E32                                      i2u3498_48 2F64  
                                    i2u3595_48 BC36                                      i2u3676_40 BBA8  
                                    i2u3589_40 40F2                                      i2u3588_48 40A0  
                                    i2u3678_48 B8C4                                      i2u3689_40 9E02  
                              ___lldiv@counter 015B                             _EUSART2_Initialize AAAC  
                ?_terminal_textAttributesReset 0001                         ?_currentMeasuredToPeak 0099  
                  getDeviceIDString@inputDevID 015C                                i2_EUSART2_Write B0F4  
                                ??_getDeviceID 015C                                        printf@f 0285  
                     ??_heartbeatTimerCallback 0100                             __end_ofi2___xxtofl 8A74  
               ??_TMR7_DefaultInterruptHandler 0100                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 0048  
                             ?_TMR5_StartTimer 0001                   __end_ofi1_getMinorRevisionID BB92  
                             ?_ADCC_Initialize 0001                                        sqrt@grs 007B  
                                      sqrt@exp 007F                                 __tdiv_to_l_@f1 014F  
                               __tdiv_to_l_@f2 0152                                ??i2__tdiv_to_l_ 0007  
                                 _HLVDCON0bits 000EC2                                        strcmp@r 0154  
                        __CFG_WDTCPS$WDTCPS_11 000000                                ?_FLASH_ReadByte 014F  
                          ?_EUSART2_Initialize 0001                            __end_of_getADCError B870  
                                      strlen@s 014F                   terminal_ringBufferPull@index 04C0  
                                ??__tdiv_to_l_ 0155                                ?_FLASH_ReadWord 0153  
                       ??i1_getMajorRevisionID 010B                       _TMR6_SetInterruptHandler BF32  
                    __size_of_I2C1_MasterWrite 004E                              __size_of_I2C1_ISR 0258  
                        _TMR5_InterruptHandler 02CE                       ?_terminal_ringBufferPull 0001  
                                  ___fladd@grs 0217                           __CFG_WDTCCS$LFINTOSC 000000  
                                ___xxtofl@sign 0157                         ?i1_OLED_updateCallback 0001  
               __size_ofi2_writeDoubleToEEPROM 004C                  __end_ofi2_writeDoubleToEEPROM B0F4  
                                  ___fldiv@grs 022B                                    ___fldiv@rem 0225  
                              i2___fltol@sign1 0074                                      i2___fladd 6298  
                                    i2___fldiv 741C                                      i2___awdiv A3D2  
                                    i2___flneg BA2A                                      i2___awmod A82A  
                             __CFG_FEXTOSC$ECH 000000                                      i2___flmul 5C0A  
                                    i2___flsub B2AA                                      i2___fltol 98DC  
                                    i2___lldiv A4D8                                      i2___llmod AB12  
                     __end_of_DATAEE_WriteByte B5BC                  i1getCauseOfResetStringSmall@r 0102  
            I2C1_ISR@i2c_10bit_address_restart 019E                               ?_TMR5_WriteTimer 0001  
                         ??_EUSART2_Initialize 0152                                      i2__doprnt 2C34  
                       _terminal_clearTerminal BEF6                       i1OLED_PutChar@input_base 011D  
                      TMR5_WriteTimer@timerVal 0001                         __size_of_ringBufferLUT 170C  
                            OLED_WriteString@s 0211                                    ___flmul@grs 023F  
                                 _EUSART2_Read B1D2                             i2___llmod@dividend 000E  
                                    i1_memmove 9F18                                     ?_OLED_Init 0001  
                              _HLVD_Initialize BF06                             i2___awdiv@dividend 0007  
                       ?_ADCC_ClearAccumulator 0001                                     ?i1_OLED_YX 0114  
                                    i2_isdigit BD2E                        I2C1_MasterWrite@address 015B  
                            __size_of_INT0_ISR 000A                            __size_of__div_to_l_ 012A  
                      __size_ofi1_OLED_Command 0068                i1I2C1_MasterTRBInsert@ptrb_list 0100  
                            __size_of_HLVD_ISR 0038                             _max_FVR_ADC_Result 0291  
              __size_of_dimmingOffTimeCallback 0018                                      _Avg_Power 0170  
                 __end_of_INTERRUPT_Initialize BD10                       ??i2_readDoubleFromEEPROM 0007  
         __end_of_TMR2_DefaultInterruptHandler C030          __size_of_TMR2_DefaultInterruptHandler 0002  
                 _TMR2_DefaultInterruptHandler C02E                        __size_ofi1_OLED_PutChar 00C6  
               ??_ADCC_DefaultInterruptHandler 0001                 __size_of_terminal_printNewline 0010  
                               __end_of___flge 92BE           __end_of_INT0_DefaultInterruptHandler C036  
        __size_of_INT0_DefaultInterruptHandler 0002                   _INT0_DefaultInterruptHandler C034  
                __end_of_terminal_printNewline BEF6                                 __end_of___wmul BAAA  
                      I2C1_MasterWrite@trBlock 02E4                       I2C1_Stop@completion_code 0003  
                            __size_of_TMR2_ISR 0026                              __size_of_TMR4_ISR 0026  
                            __size_of_TMR5_ISR 0034                              __size_of_TMR6_ISR 0028  
                            __size_of_TMR7_ISR 0034                      i1I2C1_MasterWrite@address 010C  
                       ?_OSCILLATOR_Initialize 0001                                  __pbitbssBANK0 07D8  
                          __end_of_getDeviceID BCD2                                 __end_of_fround 6E9E  
            __size_of_ADCC_GetConversionResult 0014                      ?_ADCC_GetConversionResult 0001  
                                   floor@expon 007E                       __size_of_updateErrorLEDs 0018  
                             i2___wmul@product 0005                                 __end_of_printf B57E  
                     ??i1_I2C1_MasterTRBInsert 0104                          __end_of_INT0_CallBack BC6E  
                           _getMajorRevisionID B5FA                                 __end_of_strcat B0A8  
                               __end_of_strchr B798                                 __end_of_strcmp AE86  
                               __end_of_strcpy B1D2                                 __end_of_strlen AC90  
                               __end_of_strstr A238                              __size_ofi2___flge 0120  
                          start_initialization 9A92                                     eval_poly@d 0070  
                                   eval_poly@n 0072                                     eval_poly@x 006C  
                           i2___awdiv@quotient 000D                              __size_ofi2___wmul 0026  
                                  ??_I2C1_Stop 0001           __end_of_TMR5_DefaultInterruptHandler C032  
        __size_of_TMR5_DefaultInterruptHandler 0002                   _TMR5_DefaultInterruptHandler C030  
              __size_of_PIN_MANAGER_Initialize 00CC                            __end_of__tdiv_to_l_ 8E18  
                                  __end_of_abs BA82                                    __end_of_sin 6BD4  
                                    i2printf@f 00B2                        _terminal_textAttributes 5550  
                                   ?i2___fladd 0056  EUSART2_SetRxInterruptHandler@interruptHandler 014F  
EUSART2_SetTxInterruptHandler@interruptHandler 014F                                     ?i2___fldiv 0013  
                            __size_ofi2_fround 02AE                                     ?i2___awdiv 0007  
                                   ?i2___flneg 002C                                     ?i2___awmod 0001  
                                   ?i2___flmul 0030                                     ?i2___flsub 0080  
                                   ?i2___fltol 006C                                     ?i2___lldiv 0001  
                                   ?i2___llmod 000E                  __size_of_ADCC_StartConversion 000E  
            __size_of_I2C1_MasterWriteTRBBuild 0046                            ?_getMajorRevisionID 0001  
                                  putch@txData 0150                      ?_I2C1_MasterWriteTRBBuild 014F  
                            __size_ofi2_printf 003C                     __end_ofi1_I2C1_MasterWrite B00E  
                            __size_ofi1_strcpy 0048                          __end_of_EUSART2_Write AF24  
                             ?_TMR7_WriteTimer 0100                                     ?i2__doprnt 0088  
                                   frexp@value 0001             terminal_textAttributes@output_buff 0481  
                      __end_ofi2_EUSART2_Write B140                                ___llmod@divisor 0204  
                                   ?i1_memmove 0100                                ___llmod@counter 015C  
                          DATAEE_ReadByte@bAdd 014F                           i1OLED_PutChar@length 011F  
                                   ?i2_isdigit 0001                               ?_I2C1_Initialize 0001  
                               _FVR_ADC_Result 01A7                               __CFG_LPBOREN$OFF 000000  
                                  _getADCError B83C                      __size_of_OLED_WriteString 0058  
                                     ??___flge 0157                          __size_of_OLED_Command 006A  
                             ??_PMD_Initialize 014F                                       ??___wmul 0153  
              __size_of_heartbeatTimerCallback 0040                           ??_getMajorRevisionID 015A  
                                   OLED_YX@Row 0205                                    __doprnt@idx 026B  
                                  __doprnt@len 026E                                    __doprnt@exp 0270  
                                  __doprnt@val 027A                                    __pdataBANK0 00F7  
                                  __pdataBANK1 01AC                                    __pdataBANK2 02EE  
                                  __pdataBANK3 03D5                                       ??_fround 015D  
                                _ringBufferLUT 0000                     __end_of_EXT_INT_Initialize BD2E  
               ??_terminal_textAttributesReset 0160                  ?_TMR2_DefaultInterruptHandler 0001  
                                 i1strcpy@from 0119                          __size_of_OLED_PutChar 00CA  
                ?_INT0_DefaultInterruptHandler 0001                                       ??_printf 0160  
            getCauseOfReset@return_reset_cause 014F         i2readDoubleFromEEPROM@starting_address 0003  
         readDoubleFromEEPROM@starting_address 0151                              _POS3P3_ADC_Result 0184  
                               _TMR5_StopTimer C016                                       ??_strcat 0153  
                   ??_acquisitionTimerCallback 0101                                       ??_strchr 0153  
                                     ??_strcmp 0153                                       ??_strcpy 0160  
                                     ??_strlen 0151                                  peakToRMS@Peak 00B1  
                 I2C1_MasterWriteTRBBuild@ptrb 014F                     __end_of_getMinorRevisionID BB20  
                                     ??_strstr 015E                                      ___fladd@a 0208  
                                    ___fladd@b 0204                                      _Vpk_const 02F4  
                                   fround@prec 0256                                 _eusart2RxCount 01A2  
                                ?i2__div_to_l_ 0001                             i2_DATAEE_WriteByte B726  
                                    ___fldiv@a 021C                                      ___fldiv@b 0218  
                       __size_of_TMR2_CallBack 0024                   ??_ADC_PostProcessingCallback 005E  
                                    _acos$5954 00AD                          TMR4_ISR@CountCallBack 0193  
                                    ___flmul@a 0235                                      ___flmul@b 0231  
                                    ___flsub@a 021C                                      ___flsub@b 0218  
             __end_of_INT0_SetInterruptHandler BF78                                       ?_OLED_YX 015F  
                        __size_ofi1_OLED_Clear 0040                                  __pcstackBANK0 0060  
                                __pcstackBANK1 0100                                  __pcstackBANK2 0200  
                                __pcstackBANK3 03F9                                  __pcstackBANK4 0480  
                     __size_of_TMR2_Initialize 0030                         _dimmingOffTimeCallback BE38  
                                _i2c1_tr_queue 02E9                              __size_of___xxtofl 0154  
                                 _isdigit$4697 0150                  ?_TMR5_DefaultInterruptHandler 0001  
                      __end_of_HLVD_Initialize BF16                            ?i2_DATAEE_WriteByte 0001  
                          EUSART2_Write@txData 014F                         __size_of_TMR4_CallBack 0024  
                                 _load_on_time 02A9                           i1_getMinorRevisionID BB6C  
                  __end_of_ADCC_StopConversion C026                                       ?i2_scale 0049  
              ??_EUSART2_SetRxInterruptHandler 0152                               i1_FLASH_ReadByte BDD4  
                      ??_I2C1_FunctionComplete 0001                                       ?i2_putch 0001  
                                    _asin$5955 00A5                                      _asin$5956 009D  
                                    _asin$5957 0099                                      __doprnt@c 0284  
                             i1_FLASH_ReadWord B3C0                                      __doprnt@f 025D  
                                 _OLED_Command A972                                     sin@coeff_a D1B3  
                                   sin@coeff_b D1DB                                    ??_OLED_Init 015F  
                        _TMR6_InterruptHandler 0188                                      __pnvBANK2 02FE  
                                  ??i1_OLED_YX 0115                    getMinorRevisionID@REVID_RAW 015A  
                       _PIN_MANAGER_Initialize 9B5E                                   _OLED_PutChar 9C2A  
                      ??_getCauseOfResetString 0151                                      __pintcode 0008  
                                  _getDeviceID BCB2                                  __pmediumconst CDDC  
                                     ?___fladd 0204               __end_of_TMR4_SetInterruptHandler BF5C  
                                     ?___fldiv 0218            __size_of_ADC_PostProcessingCallback 0AC4  
                                     ?___awdiv 0155                           ??i2_DATAEE_WriteByte 0004  
                                    __ptext101 B870                                      __ptext110 B442  
                                    __ptext102 C02A                                       ?___flneg 0200  
                                    __ptext111 BB46                                      __ptext103 BEB4  
                                    __ptext200 C026                                      __ptext120 B3C0  
                                    __ptext112 BC02                                      __ptext104 BFA2  
                                    __ptext201 BE8E                                      __ptext121 BDD4  
                                    __ptext113 C02E                                      __ptext105 BFF8  
                                    __ptext202 0000                                      __ptext130 AFC0  
                                    __ptext122 B9FA                                      __ptext114 7C0E  
                                    __ptext106 C000                                      __ptext131 B338  
                                    __ptext123 A650                                      __ptext115 B262  
                                    __ptext107 BB20                                      __ptext140 BB92  
                                    __ptext132 A068                                      __ptext124 B672  
                                    __ptext116 BB6C                                      __ptext108 BAAA  
                                    __ptext141 BC26                                      __ptext133 BFD2  
                                    __ptext125 AA44                                      __ptext117 B636  
                                    __ptext109 C02C                                      __ptext150 BD84  
                                    __ptext142 C032                                      __ptext134 B806  
                                    __ptext126 ACE8                                      __ptext118 ABD8  
                                    __ptext151 C01E                                      __ptext143 A456  
                                    __ptext127 B482                                      __ptext119 BCD2  
                                    __ptext160 B6AE                                      __ptext152 80F8  
                                    __ptext144 B00E                                      __ptext136 B8A4  
                                    __ptext128 9CF4                                      __ptext161 2C34  
                                    __ptext153 B4C2                                      __ptext145 BE20  
                                    __ptext137 C030                                      __ptext129 9F18  
                                    __ptext170 9074                                      __ptext162 50D0  
                                    __ptext154 BDEE                                      __ptext146 BFDC  
                                    __ptext138 BFB0                                      __ptext171 BBB8  
                                    __ptext163 BFE6                                      __ptext155 C006  
                                    __ptext147 BC4A                                      __ptext139 C01A  
                                    __ptext180 6E9E                                      __ptext172 AB12  
                                    __ptext164 B0F4                                      __ptext156 B798  
                                    __ptext148 C034                                      __ptext181 859A  
                                    __ptext173 A4D8                                      __ptext165 BD2E  
                                    __ptext157 B0A8                                      __ptext149 BE38  
                                    __ptext190 98DC                                      __ptext182 B6EA  
                                    __ptext174 BAD2                                      __ptext166 76D0  
                                    __ptext158 B726                                      __ptext191 92BE  
                                    __ptext183 A55A                                      __ptext175 C036  
                                    __ptext167 A82A                                      __ptext159 9DBA  
                                    __ptext192 A6CA                                      __ptext184 68DA  
                                    __ptext176 4138                                      __ptext168 A3D2  
                                    __ptext193 95F8                                      __ptext185 B2AA  
                                    __ptext177 8350                                      __ptext169 8E18  
                                    __ptext194 5C0A                                      __ptext186 BA2A  
                                    __ptext178 A89A                                      __ptext195 6298  
                                    __ptext187 741C                                      __ptext179 65D6  
                                     ?___awmod 014F                                      __ptext196 BA58  
                                    __ptext188 93DE                                      __ptext197 C022  
                                    __ptext189 8924                                      __ptext198 BFBC  
                                    __ptext199 BE7A                                       ?___flmul 0231  
                                     ?___flsub 0218                                       ?___fltol 0253  
             __end_of_TMR7_SetInterruptHandler BF32                                       ?___lldiv 014F  
                                     ?___llmod 0200                                      __npowers_ CE11  
                 __size_of_OLED_updateCallback 0290                                _getCauseOfReset ADE4  
                               ?_ringBufferLUT 0490                __size_ofi2_readDoubleFromEEPROM 004E  
                                    _getUserID AD40                         __end_of_TMR5_StopTimer C01A  
            _EUSART2_TxDefaultInterruptHandler 02DA                                       ?__doprnt 025B  
                       OLED_PutChar@data_array 0204                                   i1_OLED_Clear B482  
                                  __pintcodelo 0018                                       _I2C1_ISR 80F8  
                                  __tdiv_to_l_ 8CE4                               _I2C1_MasterWrite AF72  
                               ??i2__div_to_l_ 0009                     __end_ofi1_OLED_WriteString AD40  
                                 ??__div_to_l_ 0157                               _POS12_ADC_Result 0180  
                                     _BAUD2CON 000EF7                       __end_ofi2_TMR5_StopTimer C01E  
         __size_of_writeEnergyToEEPROMCallback 0082                   __end_of_I2C1_MasterTRBInsert A068  
                                     ?_isdigit 0001                                       ?_memmove 014F  
                                  _dev_on_time 02AD                __size_ofi1_I2C1_MasterTRBInsert 00A2  
                                    _eval_poly 95F8                      ??_terminal_textAttributes 0160  
                i2DATAEE_WriteByte@GIEBitValue 0004                                      _max_Power 02A1  
                                    _attribute 019C                                      _peakToRMS 8350  
                             __CFG_WDTE$NSLEEP 000000                       __size_of_TMR4_Initialize 0030  
                      ?_terminal_setCursorHome 0001                                      _hexpowers CE6D  
            __size_of_OLED_UpdateFromRAMBuffer 007A                         _heartbeatTimerCallback B442  
                               _dimming_period 02FC                      ?_OLED_UpdateFromRAMBuffer 0001  
                                  ??i2___fladd 0060                                    ??i2___fldiv 001B  
                                  ??i2___awdiv 000B                                    ??i2___flneg 0030  
                                  ??i2___awmod 0005                                    ??i2___flmul 0038  
                               __size_of_floor 0112                                    ??i2___flsub 005E  
                                  ??i2___fltol 0070                                 __size_of_frexp 007A  
                            ??_updateErrorLEDs 014F                                    ??i2___lldiv 0009  
                                     _T2CLKCON 000FBF                                 __size_of_scale 04D4  
                                  ??i2___llmod 0016                       __size_of_DATAEE_ReadByte 001A  
                                     ?_strncmp 0155                                       ?_strncpy 014F  
                                     _T4CLKCON 000FB9                  __size_of_readDoubleFromEEPROM 0052  
                     _recoverSRAMMaxFromEEPROM 8BAE                                 __size_of_putch 0014  
                        ?i1_getMinorRevisionID 0001                           _INTERRUPT_Initialize BCF2  
                                     _T6CLKCON 000FB3                                    ??i2__doprnt 008E  
       terminal_textAttributes@input_attribute 0290     __end_ofi1_I2C1_WaitForLastPacketToComplete BFDC  
  __size_ofi1_I2C1_WaitForLastPacketToComplete 000A       __end_of_I2C1_WaitForLastPacketToComplete BFD2  
    __size_of_I2C1_WaitForLastPacketToComplete 000A            ?i1_I2C1_WaitForLastPacketToComplete 0001  
            ?_I2C1_WaitForLastPacketToComplete 0001             ??_I2C1_WaitForLastPacketToComplete 014F  
         ??i1_I2C1_WaitForLastPacketToComplete 0100             i1_I2C1_WaitForLastPacketToComplete BFD2  
             _I2C1_WaitForLastPacketToComplete BFC8                         I2C1_MasterRead@trBlock 02DF  
                                     _HLVDCON0 000EC2                                       _HLVDCON1 000EC3  
                 __size_of_EUSART2_Receive_ISR 00B0                                       _INT0_ISR BFDC  
                               ___wmul@product 0153                      currentMeasuredToPeak@Peak 00A1  
                             i2__doprnt@tmpval 009F                               ?i2_EUSART2_Write 0001  
                                     _HLVD_ISR B798                                       _LATFbits 000F7E  
                                     _LATGbits 000F7F                                    ??i1_memmove 0106  
                      ??_currentMeasuredToPeak 005E                                    strncpy@from 0151  
                                    atan@recip 0088                                       _IPR0bits 000E1F  
                                _TMR2_CallBack BC02                                       _IPR1bits 000E20  
                                     _IPR2bits 000E21                                       _PIE0bits 000E29  
                                     _IPR3bits 000E22                                       _PIE1bits 000E2A  
                                     _PIE2bits 000E2B                                    strncpy@size 0153  
                                     _IPR5bits 000E24                                       _PIE3bits 000E2C  
               __size_of_dimmingOnTimeCallback 000C                                       _PIE5bits 000E2E  
                               i1_OLED_Command AA44                                    ??i2_isdigit 0001  
                __end_of_dimmingOnTimeCallback BFBC                            _max_Temp_ADC_Result 0295  
                                     _PIR0bits 000E33                                       _PIR1bits 000E34  
                           __end_of__div_to_l_ 9074                               ??_FLASH_ReadByte 0153  
                                     _PIR2bits 000E35                                       _PIR3bits 000E36  
                                     _PIR5bits 000E38                                       _PIR8bits 000E3B  
                             ??_FLASH_ReadWord 0157                     ??_TMR6_SetInterruptHandler 0152  
                     __size_of_TMR5_Initialize 004A                              i2___fldiv@new_exp 0024  
                        __end_ofi1_getDeviceID BCF2                                       _SSP1CON1 000F95  
                                     _SSP1CON3 000F97                                 i1_OLED_PutChar 9CF4  
               ??i1_getCauseOfResetStringSmall 0102                                       _TMR2_ISR BB46  
                                     _TMR4_ISR BB92                                  _TMR4_CallBack BC26  
                                     _TMR5_ISR B8A4                                       _TMR6_ISR BAAA  
                                     _TMR7_ISR B870                                       _SSP1STAT 000F94  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0005  
                                   ?_getUserID 015A                                ?_TMR5_StopTimer 0001  
                  __end_ofi1_getDeviceIDString AC38                                     _ADCON0bits 000F60  
                                   _ADCON1bits 000F59                                     _ADCON2bits 000F5A  
                                     i2___flge 92BE                                     _ADCON3bits 000F5B  
                            ___wmul@multiplier 014F                                       i2___wmul BBB8  
                      ??i1_OLED_updateCallback 0125                        __size_of_FVR_Initialize 0008  
                                   ?_eval_poly 006C                 __end_of_terminal_setCursorHome BEE6  
               ??_TMR2_DefaultInterruptHandler 0100              __size_of_TMR2_SetInterruptHandler 000E  
                                ?_getCOMMError 0001                              i2___awdiv@divisor 0009  
                                     i2_fround 76D0                 ??_INT0_DefaultInterruptHandler 0001  
            __size_of_TMR5_SetInterruptHandler 000E                      ?_TMR2_SetInterruptHandler 014F  
                                   ?_peakToRMS 00B1                i2writeDoubleToEEPROM@byte_index 000F  
                writeDoubleToEEPROM@byte_index 015D                              i2___awdiv@counter 000B  
                  __end_of_ADCC_GetFilterValue BE8E                      ?_TMR5_SetInterruptHandler 014F  
                __size_of_EUSART2_Transmit_ISR 0036            __size_of_getCauseOfResetStringSmall 0030  
                        DATAEE_WriteByte@bData 0151                                       i2_printf B6AE  
                          __end_ofatan@coeff_a D1B3                            __end_ofatan@coeff_b D1DB  
                                     i1_strcpy B262                               __size_of_OLED_YX 003E  
                     __size_of_TMR6_Initialize 0032                        ?_terminal_clearTerminal 0001  
                     i1OLED_Command@data_array 0110                              _max_Power_address CE95  
                       i2_readDoubleFromEEPROM B00E                                      copy_data0 9AA6  
                                    copy_data1 9AC6                                      copy_data2 9AE6  
                                    copy_data3 9B06                               ?_HLVD_Initialize 0001  
                        ?_INTERRUPT_Initialize 0001               i1I2C1_MasterWriteTRBBuild@length 0104  
                          _current_adc_channel 0199                       _INT0_SetInterruptHandler BF6A  
                            i2_DATAEE_ReadByte BE20                             i2___awmod@dividend 0001  
                            ?_DATAEE_WriteByte 014F                        ??_ADCC_ClearAccumulator 0100  
                       __end_ofi1_OLED_Command AAAC                              ??_TMR2_Initialize 0152  
                           ?i2_DATAEE_ReadByte 0001               __size_of_terminal_ringBufferPull 013A  
                             __size_ofi2_scale 0480                                       _OledFont CE9B  
               ??_TMR5_DefaultInterruptHandler 0001                   __size_of_saveSRAMMaxToEEPROM 0266  
                               ?_TMR2_CallBack 0001                             ??_DATAEE_WriteByte 0152  
                                 _next_channel 01B0                               __size_ofi2_putch 000A  
                                    frexp@eptr 0005                         i1_I2C1_MasterTRBInsert A068  
                      __end_of_getCauseOfReset AE36                __end_of_terminal_textAttributes 58B8  
              i2writeDoubleToEEPROM@input_data 000B                  writeDoubleToEEPROM@input_data 0159  
                                   _ADSTATbits 000F65  ADC_PostProcessingCallback@current_adc_channel 00D5  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult BEA2  
         __end_of_max_POS12_ADC_Result_address CE93                   _max_POS12_ADC_Result_address CE91  
                      __CFG_RSTOSC$EXTOSC_4PLL 000000          __end_of_EUSART2_SetRxInterruptHandler BF94  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler BF86  
                       OLED_PutChar@input_base 020D                       __size_of_clearCOMMErrors 000E  
                       __end_ofi1_OLED_PutChar 9DBA                               _OLED_WriteString AC90  
                __size_of_I2C1_BusCollisionISR 0006                                       __Lrparam 0000  
                          ??i2_DATAEE_ReadByte 0003                                ??_ringBufferLUT 0492  
                     __size_of_TMR7_Initialize 004E                                 ?_TMR4_CallBack 0001  
                       I2C1_ISR@i2c_bytes_left 019F                               _foreground_color 019B  
                      ??_OSCILLATOR_Initialize 014F                                      memmove@d1 014F  
                                    memmove@s1 0151                               __size_of___fladd 033E  
                             __size_of___fldiv 02B6                               __size_of___awdiv 0086  
                             __size_of___flneg 0030                               __size_of___awmod 0072  
                             __size_of___flmul 0352                               __size_of___flsub 0048  
                             __size_of___fltol 00FA                          i2___wmul@multiplicand 0003  
                             __size_of___lldiv 0084                               __size_of___llmod 0074  
                 __size_of_writeDoubleToEEPROM 0050                                    _load_enable 02F0  
             __end_of_acquisitionTimerCallback BEC6               __end_of_I2C1_MasterWriteTRBBuild B338  
                             __size_of__doprnt 1528                                    _fround$5588 0252  
                                  _fround$5589 024E                          __end_ofi2__tdiv_to_l_ 8F4A  
                 ??i1_I2C1_MasterWriteTRBBuild 0107                       _TMR4_SetInterruptHandler BF4E  
           __end_of_ADC_PostProcessingCallback 4BFC                     _ADC_PostProcessingCallback 4138  
                              _putch$intlevel0 BE6C                       _TMR7_SetInterruptHandler BF24  
                        _TMR7_InterruptHandler 02D1                             _ADC_Result_Scaling 02BD  
                __size_ofi1_getMajorRevisionID 003C                                 ??_getCOMMError 014F  
      terminal_textAttributes@foreground_color 0480                                       ___xxtofl 87D0  
                     __size_of_TMR5_StartTimer 0004                       __size_of_ADCC_Initialize 006A  
                                   strcat@from 0151                ??_INTERRUPT_InterruptManagerLow 013A  
               __end_of_terminal_clearTerminal BF06                               __size_of_isdigit 0022  
                    __end_of_max_Power_address CE97                               __size_of_memmove 00AE  
                          I2C1_ISR@i2c_address 00F5                      __end_ofi2_DATAEE_ReadByte BE38  
                                     __ptext10 A1A4                                       __ptext11 A238  
                                     __ptext20 BC6E                                       __ptext12 AC38  
                                     __ptext21 99BA                                       __ptext13 B760  
                                     __ptext30 B37E                                       __ptext22 7166  
                                     __ptext14 AE36                                       __ptext31 BDA0  
                                     __ptext23 C016                                       __ptext15 AD40  
                                     __ptext40 BEF6                                       __ptext32 B93A  
                                     __ptext24 797E                                       __ptext16 B90A  
                                     __ptext41 B540                                       __ptext33 A5D6  
                                     __ptext25 B18A                                       __ptext17 BE50  
                                     __ptext50 A2C8                                       __ptext42 170C  
                                     __ptext34 B502                                       __ptext26 BAFA  
                                     __ptext18 B83C                                       __ptext51 8CE4  
                                     __ptext43 4BFC                                       __ptext35 AC90  
                                     __ptext27 B5FA                                       __ptext19 BF16  
                                     __ptext60 B96A                                       __ptext52 8F4A  
                                     __ptext44 BE66                                       __ptext36 B402  
                                     __ptext28 AB78                                       __ptext61 7E92  
                                     __ptext53 87D0                                       __ptext45 AED6  
                                     __ptext37 9C2A                                       __ptext29 BCB2  
                                     __ptext70 AF24                                       __ptext62 AE86  
                                     __ptext54 BA82                                       __ptext46 BC90  
                                     __ptext38 9E6A                                       __ptext71 BF24  
                                     __ptext63 B57E                                       __ptext55 A744  
                                     __ptext47 6BD4                                       __ptext39 B1D2  
                                     __ptext80 BD4C                                       __ptext72 B8D8  
                                     __ptext64 919C                                       __ptext56 A34E  
                                     __ptext48 58B8                                       __ptext81 9B5E  
                                     __ptext73 BF32                                       __ptext65 8BAE  
                                     __ptext57 96F8                                       __ptext49 A7B8  
                                     __ptext90 BF78                                       __ptext82 BD68  
                                     __ptext74 B140                                       __ptext66 AD92  
                                     __ptext58 B21A                                       __ptext91 BF86  
                                     __ptext83 BCF2                                       __ptext75 BF40  
                                     __ptext67 BDBA                                       __ptext59 5F5A  
                                     __ptext92 A908                                       __ptext84 B7D0  
                                     __ptext76 B99A                                       __ptext68 ADE4  
                                     __ptext93 BF94                                       __ptext85 BF06  
                                     __ptext77 BF4E                                       __ptext69 B5BC  
                                     __ptext94 A10A                                       __ptext86 BFF0  
                                     __ptext78 B9CA                                       __ptext95 A972  
                                     __ptext87 BD10                                       __ptext79 BF5C  
                                     __ptext96 AF72                                       __ptext88 BF6A  
                                     __ptext97 B2F2                                       __ptext89 AAAC  
                                     __ptext98 9FC6                                       __ptext99 BFC8  
                       ??i1_getMinorRevisionID 010B                                   _SSP1CON1bits 000F95  
                                 _SSP1CON2bits 000F96                                       _sin$5958 0090  
                                     __powers_ CDDD                            ringBufferLUT@userID 04B7  
                              _Temp_ADC_Offset 02F8                          i2_writeDoubleToEEPROM B0A8  
                  DATAEE_WriteByte@GIEBitValue 0152                               __size_of_strncmp 0090  
                             __size_of_strncpy 0068                    __size_of_EUSART2_Initialize 0066  
                                   strcpy@from 0208                                       _max_Irms 02A5  
                              _Temp_ADC_Result 017C                                 i2_isdigit$4697 0002  
                                __size_of_acos 006E                                  __size_of_fabs 003C  
                              ?i1_OLED_Command 0001                              ??_TMR4_Initialize 0152  
                                __size_of_atan 0236                                  __size_of_asin 0304  
                                __size_of_atoi 00D8                                  __size_of_main 00EA  
                                   _T5GCONbits 000FC4                                  __size_of_sqrt 02C8  
                                OLED_Clear@col 0213                  i1getDeviceIDString@inputDevID 010D  
                         __end_ofi2__div_to_l_ 919C                                     strncmp@len 0159  
                                OLED_Clear@row 0211                                i2__doprnt@width 00AB  
                            ??_DATAEE_ReadByte 0151                                  OLED_YX@Column 015F  
                         __CFG_WDTCWS$WDTCWS_7 000000                             OLED_PutChar@length 020F  
                                   _T7GCONbits 000F31                             __CFG_BORV$VBOR_190 000000  
                         _I2C1_MasterTRBInsert 9FC6                                   ?_getADCError 0001  
                      __size_of_clearADCErrors 0022                       __size_of_TMR5_WriteTimer 001C  
                               OLED_PutChar@ch 0210                                ?i1_OLED_PutChar 0001  
              _ADC_PostProcessingCallback$5950 00DA                _ADC_PostProcessingCallback$5951 00C9  
              _ADC_PostProcessingCallback$5952 00CD                _ADC_PostProcessingCallback$5953 00D1  
              _ADC_PostProcessingCallback$5949 00D6                           i1OLED_Command@length 0113  
          __size_ofi1_I2C1_MasterWriteTRBBuild 0046                                     _RC2STAbits 000EF5  
                           i1_I2C1_MasterWrite AFC0                   __end_of_ADCC_StartConversion BFB0  
                                     int$flags 005F                                       atoi@sign 0159  
                                  ??_getUserID 015C                            i1OLED_WriteString@s 0121  
                               __doprnt@tmpval 0272                       __end_ofi1_FLASH_ReadByte BDEE  
                                  atan@coeff_a D19B                                    atan@coeff_b D1C7  
                     __end_ofi1_FLASH_ReadWord B402                              ??_TMR5_Initialize 0152  
                          ?i1_I2C1_MasterWrite 0109                          _terminal_printNewline BEE6  
                            i2___awmod@divisor 0003                        ?_dimmingOffTimeCallback 0001  
                            i2___awmod@counter 0005                                     _INTCONbits 000FF2  
                                  ??_eval_poly 0074                                    _NVMCON1bits 000F77  
                                  ??_peakToRMS 005E                                     _FVRCONbits 000EC4  
                                     isdigit@c 0151                         ??_INTERRUPT_Initialize 014F  
                              _OLED_I2C_Status 01AB                                       memmove@d 0157  
                                     memmove@n 0153                                       memmove@s 0159  
                                     scale@scl 0252                                      sqrt@tfrac 0076  
                           _EXT_INT_Initialize BD10           __end_of_TMR6_DefaultInterruptHandler C02E  
        __size_of_TMR6_DefaultInterruptHandler 0002                   _TMR6_DefaultInterruptHandler C02C  
                          _OLED_updateCallback 797E           __end_of_ADCC_DefaultInterruptHandler C038  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler C036  
                                     intlevel1 0000                                       intlevel2 0000  
                                   _OLED_Clear B402                               __tdiv_to_l_@exp1 015D  
                             __tdiv_to_l_@cntr 015C                                     _OLED_Frame 019D  
                              ??_TMR2_CallBack 013A                             _getMinorRevisionID BAFA  
           __end_of_getCauseOfResetStringSmall B96A                     _getCauseOfResetStringSmall B93A  
                             __tdiv_to_l_@quot 0158                                i2___xxtofl@sign 000D  
                                    strchr@chr 0151                                      strchr@ptr 014F  
                           ringBufferLUT@index 04B3                           ??i1_I2C1_MasterWrite 0110  
                             ___lldiv@dividend 014F                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 0152                       __end_of_I2C1_MasterWrite AFC0  
                            __CFG_CLKOUTEN$OFF 000000                 __size_of_I2C1_FunctionComplete 001A  
                          ?_EXT_INT_Initialize 0001                  __end_of_I2C1_FunctionComplete BE08  
                        ?_I2C1_MasterTRBInsert 014F                                    _reset_cause 02FE  
                                    strncmp@s1 0155                                      strncmp@s2 0157  
                             ?_getCauseOfReset 0001                                _AVSS_ADC_Result 02C1  
                              ??_TMR4_CallBack 0044                            ?_getMinorRevisionID 0001  
                                    strncpy@cp 0155                                      strncpy@to 014F  
                       __size_of_INT0_CallBack 0024                       __size_of_TMR7_WriteTimer 0026  
                 ?_writeEnergyToEEPROMCallback 0001                                   ?_getDeviceID 015A  
                                     printf@ap 03F9                                       printf@pb 03FB  
                         ?_OLED_updateCallback 0001                 __size_of_getCauseOfResetString 0030  
                __end_of_getCauseOfResetString B93A                    __size_of_getMajorRevisionID 003C  
                     _ADCC_GetConversionResult BE8E                 ?_EUSART2_SetRxInterruptHandler 014F  
             __end_of_OLED_UpdateFromRAMBuffer A650                   ??i1_OLED_UpdateFromRAMBuffer 0125  
                            ??_clearCOMMErrors 014F                       __size_of_I2C1_Initialize 0036  
                                 ?__tdiv_to_l_ 014F                 __end_of_dimmingOffTimeCallback BE50  
                       __size_of_EUSART2_Write 004E                            _EUSART2_Receive_ISR 9DBA  
                              _updateErrorLEDs BE08                                       sqrt@frac 0085  
       __end_of_INTERRUPT_InterruptManagerHigh 95F8        __size_of_INTERRUPT_InterruptManagerHigh 95F0  
               _INTERRUPT_InterruptManagerHigh 0008                                       sqrt@sign 0074  
                  getMajorRevisionID@REVID_RAW 015D                                       sqrt@root 0081  
                            ??_TMR7_Initialize 0152                                 _FVR_Initialize BFF0  
                         ??_EXT_INT_Initialize 0152                     ??_recoverSRAMMaxFromEEPROM 015B  
                                     strcat@cp 0153                                       strcat@to 014F  
                                   _SSP1DATPPS 000E1A                        ?_heartbeatTimerCallback 0001  
                                     strcmp@s1 014F                                       strcmp@s2 0151  
                                   _SSP1CLKPPS 000E19                              ringBufferLUT@line 0490  
                             ___lldiv@quotient 0157                          TMR2_ISR@CountCallBack 018B  
                      i2DATAEE_WriteByte@bData 0003                              ?i2_TMR5_StopTimer 0001  
                                     strcpy@cp 020A                                       strlen@cp 0153  
                                     strcpy@to 0206                           ??_getMinorRevisionID 015A  
                     _I2C1_MasterWriteTRBBuild B2F2                              _getDeviceIDString AB78  
                           ??i2_TMR5_StopTimer 0001                                       strstr@s1 0200  
                                     strstr@s2 0202                                   _Total_Energy 00F0  
                   __size_ofi2_DATAEE_ReadByte 0018                         ?i2_writeDoubleToEEPROM 0005  
                                   _TX2STAbits 000EF6                                  ___fladd@signs 0214  
                           ?_getDeviceIDString 015C          __end_of_INTERRUPT_InterruptManagerLow 010A  
       __size_of_INTERRUPT_InterruptManagerLow 00F2                  _INTERRUPT_InterruptManagerLow 0018  
                            ??_TMR5_StartTimer 0001                 ??_ADCC_SetADTIInterruptHandler 0152  
               __end_of_PIN_MANAGER_Initialize 9C2A                              ??_ADCC_Initialize 0152  
                       i2DATAEE_WriteByte@bAdd 0001                              i2__div_to_l_@exp1 000E  
                            i2__div_to_l_@cntr 000D                        _terminal_ringBufferPull 8A74  
                ?_TMR6_DefaultInterruptHandler 0001                             i1_OLED_WriteString ACE8  
              ??_EUSART2_SetTxInterruptHandler 0152                              i2__div_to_l_@quot 0009  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 0012  
                                 ___fladd@aexp 0215                                   ___fladd@bexp 0216  
                           __size_of_I2C1_Stop 0040                  ?_ADCC_DefaultInterruptHandler 0001  
                    ?_acquisitionTimerCallback 0001                       i1I2C1_MasterWrite@length 010B  
                        _TMR2_InterruptHandler 02C5                            ??_getDeviceIDString 015E  
          __size_ofi1_OLED_UpdateFromRAMBuffer 007A                        i1I2C1_MasterWrite@pdata 0109  
                      i1I2C1_MasterWrite@pflag 010E              _EUSART2_RxDefaultInterruptHandler 02D7  
               __size_of_currentMeasuredToPeak 007C                           __end_of_getCOMMError BE66  
                             ??_TMR5_StopTimer 014F                            ?i1_OLED_WriteString 0121  
                __end_of_currentMeasuredToPeak A5D6                   __size_of_ADCC_StopConversion 0004  
