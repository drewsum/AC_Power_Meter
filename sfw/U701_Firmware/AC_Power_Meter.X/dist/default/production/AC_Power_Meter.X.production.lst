

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Oct 27 19:48:02 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   102                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   103  0000                     
   104                           ; Version 1.45 (B)
   105                           ; Generated 30/01/2018 GMT
   106                           ; 
   107                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   108                           ; All rights reserved.
   109                           ; 
   110                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   111                           ; 
   112                           ; Redistribution and use in source and binary forms, with or without modification, are
   113                           ; permitted provided that the following conditions are met:
   114                           ; 
   115                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   116                           ;        conditions and the following disclaimer.
   117                           ; 
   118                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   119                           ;        of conditions and the following disclaimer in the documentation and/or other
   120                           ;        materials provided with the distribution.
   121                           ; 
   122                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   123                           ;        software without specific prior written permission.
   124                           ; 
   125                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   126                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   127                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   128                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   129                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   130                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   131                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   132                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   133                           ; 
   134                           ; 
   135                           ; Code-generator required, PIC18LF67K40 Definitions
   136                           ; 
   137                           ; SFR Addresses
   138  0000                     
   139                           	psect	mediumconst
   140  00FBB6                     __pmediumconst:
   141                           	opt stack 0
   142  00FBB6  00                 	db	0
   143  00FBB7                     _dpowers:
   144                           	opt stack 0
   145  00FBB7  0001               	dw	1
   146  00FBB9  0000               	dw	0
   147  00FBBB  000A               	dw	10
   148  00FBBD  0000               	dw	0
   149  00FBBF  0064               	dw	100
   150  00FBC1  0000               	dw	0
   151  00FBC3  03E8               	dw	1000
   152  00FBC5  0000               	dw	0
   153  00FBC7  2710               	dw	10000
   154  00FBC9  0000               	dw	0
   155  00FBCB  86A0               	dw	34464
   156  00FBCD  0001               	dw	1
   157  00FBCF  4240               	dw	16960
   158  00FBD1  000F               	dw	15
   159  00FBD3  9680               	dw	38528
   160  00FBD5  0098               	dw	152
   161  00FBD7  E100               	dw	57600
   162  00FBD9  05F5               	dw	1525
   163  00FBDB  CA00               	dw	51712
   164  00FBDD  3B9A               	dw	15258
   165  00FBDF                     __end_of_dpowers:
   166                           	opt stack 0
   167  00FBDF                     __powers_:
   168                           	opt stack 0
   169  00FBDF  00                 	db	0
   170  00FBE0  80                 	db	128
   171  00FBE1  3F                 	db	63
   172  00FBE2  00                 	db	0
   173  00FBE3  20                 	db	32
   174  00FBE4  41                 	db	65
   175  00FBE5  00                 	db	0
   176  00FBE6  C8                 	db	200
   177  00FBE7  42                 	db	66
   178  00FBE8  00                 	db	0
   179  00FBE9  7A                 	db	122
   180  00FBEA  44                 	db	68
   181  00FBEB  40                 	db	64
   182  00FBEC  1C                 	db	28
   183  00FBED  46                 	db	70
   184  00FBEE  50                 	db	80
   185  00FBEF  C3                 	db	195
   186  00FBF0  47                 	db	71
   187  00FBF1  24                 	db	36
   188  00FBF2  74                 	db	116
   189  00FBF3  49                 	db	73
   190  00FBF4  97                 	db	151
   191  00FBF5  18                 	db	24
   192  00FBF6  4B                 	db	75
   193  00FBF7  BC                 	db	188
   194  00FBF8  BE                 	db	190
   195  00FBF9  4C                 	db	76
   196  00FBFA  6B                 	db	107
   197  00FBFB  6E                 	db	110
   198  00FBFC  4E                 	db	78
   199  00FBFD  03                 	db	3
   200  00FBFE  15                 	db	21
   201  00FBFF  50                 	db	80
   202  00FC00  79                 	db	121
   203  00FC01  AD                 	db	173
   204  00FC02  60                 	db	96
   205  00FC03  F3                 	db	243
   206  00FC04  49                 	db	73
   207  00FC05  71                 	db	113
   208  00FC06                     __end_of__powers_:
   209                           	opt stack 0
   210  00FC06                     __npowers_:
   211                           	opt stack 0
   212  00FC06  00                 	db	0
   213  00FC07  80                 	db	128
   214  00FC08  3F                 	db	63
   215  00FC09  CD                 	db	205
   216  00FC0A  CC                 	db	204
   217  00FC0B  3D                 	db	61
   218  00FC0C  D7                 	db	215
   219  00FC0D  23                 	db	35
   220  00FC0E  3C                 	db	60
   221  00FC0F  12                 	db	18
   222  00FC10  83                 	db	131
   223  00FC11  3A                 	db	58
   224  00FC12  B7                 	db	183
   225  00FC13  D1                 	db	209
   226  00FC14  38                 	db	56
   227  00FC15  C6                 	db	198
   228  00FC16  27                 	db	39
   229  00FC17  37                 	db	55
   230  00FC18  38                 	db	56
   231  00FC19  86                 	db	134
   232  00FC1A  35                 	db	53
   233  00FC1B  C0                 	db	192
   234  00FC1C  D6                 	db	214
   235  00FC1D  33                 	db	51
   236  00FC1E  CC                 	db	204
   237  00FC1F  2B                 	db	43
   238  00FC20  32                 	db	50
   239  00FC21  70                 	db	112
   240  00FC22  89                 	db	137
   241  00FC23  30                 	db	48
   242  00FC24  E7                 	db	231
   243  00FC25  DB                 	db	219
   244  00FC26  2E                 	db	46
   245  00FC27  E5                 	db	229
   246  00FC28  3C                 	db	60
   247  00FC29  1E                 	db	30
   248  00FC2A  42                 	db	66
   249  00FC2B  A2                 	db	162
   250  00FC2C  0D                 	db	13
   251  00FC2D                     __end_of__npowers_:
   252                           	opt stack 0
   253  0000                     _RC2REG	set	3825
   254  0000                     _RC2STAbits	set	3829
   255  0000                     _TX2REG	set	3826
   256  0000                     _TX2STAbits	set	3830
   257  0000                     _SP2BRGH	set	3828
   258  0000                     _SP2BRGL	set	3827
   259  0000                     _TX2STA	set	3830
   260  0000                     _RC2STA	set	3829
   261  0000                     _BAUD2CON	set	3831
   262  0000                     _PIR5bits	set	3640
   263  0000                     _PIE5bits	set	3630
   264  0000                     _PIR1bits	set	3636
   265  0000                     _PIE1bits	set	3626
   266  0000                     _PIR3bits	set	3638
   267  0000                     _PIE3bits	set	3628
   268  0000                     _IPR5bits	set	3620
   269  0000                     _IPR1bits	set	3616
   270  0000                     _IPR3bits	set	3618
   271  0000                     _RX2PPS	set	3601
   272  0000                     _RG7PPS	set	3721
   273  0000                     _SLRCONH	set	3774
   274  0000                     _SLRCONG	set	3769
   275  0000                     _SLRCONF	set	3761
   276  0000                     _SLRCONE	set	3756
   277  0000                     _SLRCOND	set	3748
   278  0000                     _SLRCONC	set	3743
   279  0000                     _SLRCONB	set	3735
   280  0000                     _SLRCONA	set	3727
   281  0000                     _ODCOND	set	3749
   282  0000                     _ODCONC	set	3744
   283  0000                     _ODCONH	set	3775
   284  0000                     _ODCONB	set	3736
   285  0000                     _ODCONG	set	3770
   286  0000                     _ODCONA	set	3728
   287  0000                     _ODCONF	set	3762
   288  0000                     _ODCONE	set	3757
   289  0000                     _WPUH	set	3776
   290  0000                     _WPUC	set	3745
   291  0000                     _WPUA	set	3729
   292  0000                     _WPUG	set	3771
   293  0000                     _WPUB	set	3737
   294  0000                     _WPUE	set	3758
   295  0000                     _WPUF	set	3763
   296  0000                     _WPUD	set	3750
   297  0000                     _ANSELA	set	3730
   298  0000                     _ANSELF	set	3764
   299  0000                     _ANSELG	set	3772
   300  0000                     _ANSELE	set	3759
   301  0000                     _ANSELB	set	3738
   302  0000                     _ANSELD	set	3751
   303  0000                     _PMD5	set	3665
   304  0000                     _PMD4	set	3664
   305  0000                     _PMD3	set	3663
   306  0000                     _PMD2	set	3662
   307  0000                     _PMD1	set	3661
   308  0000                     _PMD0	set	3660
   309  0000                     _OSCTUNE	set	3656
   310  0000                     _OSCFRQ	set	3657
   311  0000                     _OSCEN	set	3655
   312  0000                     _OSCCON3	set	3653
   313  0000                     _OSCCON1	set	3651
   314  0000                     _PLLR	set	29232
   315  0000                     _T7GCONbits	set	3889
   316  0000                     _T7CONbits	set	3888
   317  0000                     _T7CON	set	3888
   318  0000                     _TMR7L	set	3886
   319  0000                     _TMR7H	set	3887
   320  0000                     _T7CLK	set	3891
   321  0000                     _T7GATE	set	3890
   322  0000                     _T7GCON	set	3889
   323  0000                     _ADCON1bits	set	3929
   324  0000                     _ADCON2bits	set	3930
   325  0000                     _ADPRE	set	3934
   326  0000                     _ADCON3bits	set	3931
   327  0000                     _ADACQ	set	3932
   328  0000                     _ADCLK	set	3927
   329  0000                     _ADACT	set	3926
   330  0000                     _ADREF	set	3928
   331  0000                     _ADCON3	set	3931
   332  0000                     _ADCON2	set	3930
   333  0000                     _ADCON1	set	3929
   334  0000                     _ADCAP	set	3933
   335  0000                     _ADPCH	set	3935
   336  0000                     _ADERRL	set	3950
   337  0000                     _ADERRH	set	3951
   338  0000                     _ADPREVL	set	3937
   339  0000                     _ADPREVH	set	3938
   340  0000                     _ADFLTRL	set	3954
   341  0000                     _ADFLTRH	set	3955
   342  0000                     _ADSTATbits	set	3941
   343  0000                     _ADACCL	set	3952
   344  0000                     _ADACCH	set	3953
   345  0000                     _ADCNT	set	3943
   346  0000                     _ADRESL	set	3939
   347  0000                     _ADRESH	set	3940
   348  0000                     _ADCON0bits	set	3936
   349  0000                     _ADCON0	set	3936
   350  0000                     _ADSTAT	set	3941
   351  0000                     _ADRPT	set	3942
   352  0000                     _ADSTPTH	set	3945
   353  0000                     _ADSTPTL	set	3944
   354  0000                     _ADUTHH	set	3949
   355  0000                     _ADUTHL	set	3948
   356  0000                     _ADLTHH	set	3947
   357  0000                     _ADLTHL	set	3946
   358  0000                     _LATFbits	set	3966
   359  0000                     _PR6	set	4016
   360  0000                     _TMR6	set	4015
   361  0000                     _T6CONbits	set	4017
   362  0000                     _T6RSTbits	set	4020
   363  0000                     _T6HLTbits	set	4018
   364  0000                     _T6CON	set	4017
   365  0000                     _T6TMR	set	4015
   366  0000                     _T6PR	set	4016
   367  0000                     _T6RST	set	4020
   368  0000                     _T6HLT	set	4018
   369  0000                     _T6CLKCON	set	4019
   370  0000                     _INTCONbits	set	4082
   371  0000                     _TRISD	set	3972
   372  0000                     _TRISC	set	3971
   373  0000                     _TRISH	set	3976
   374  0000                     _TRISB	set	3970
   375  0000                     _TRISG	set	3975
   376  0000                     _TRISA	set	3969
   377  0000                     _TRISF	set	3974
   378  0000                     _TRISE	set	3973
   379  0000                     _LATH	set	3968
   380  0000                     _LATC	set	3963
   381  0000                     _LATG	set	3967
   382  0000                     _LATB	set	3962
   383  0000                     _LATF	set	3966
   384  0000                     _LATA	set	3961
   385  0000                     _LATD	set	3964
   386  0000                     _LATE	set	3965
   387  00FC2D  20                 	db	32
   388  00FC2E  20                 	db	32
   389  00FC2F  20                 	db	32
   390  00FC30  20                 	db	32
   391  00FC31  42                 	db	66	;'B'
   392  00FC32  6F                 	db	111	;'o'
   393  00FC33  6F                 	db	111	;'o'
   394  00FC34  74                 	db	116	;'t'
   395  00FC35  20                 	db	32
   396  00FC36  63                 	db	99	;'c'
   397  00FC37  6F                 	db	111	;'o'
   398  00FC38  6D                 	db	109	;'m'
   399  00FC39  70                 	db	112	;'p'
   400  00FC3A  6C                 	db	108	;'l'
   401  00FC3B  65                 	db	101	;'e'
   402  00FC3C  74                 	db	116	;'t'
   403  00FC3D  65                 	db	101	;'e'
   404  00FC3E  0A                 	db	10
   405  00FC3F  0D                 	db	13
   406  00FC40  20                 	db	32
   407  00FC41  20                 	db	32
   408  00FC42  20                 	db	32
   409  00FC43  20                 	db	32
   410  00FC44  50                 	db	80	;'P'
   411  00FC45  49                 	db	73	;'I'
   412  00FC46  43                 	db	67	;'C'
   413  00FC47  31                 	db	49	;'1'
   414  00FC48  38                 	db	56	;'8'
   415  00FC49  46                 	db	70	;'F'
   416  00FC4A  36                 	db	54	;'6'
   417  00FC4B  37                 	db	55	;'7'
   418  00FC4C  4B                 	db	75	;'K'
   419  00FC4D  34                 	db	52	;'4'
   420  00FC4E  30                 	db	48	;'0'
   421  00FC4F  20                 	db	32
   422  00FC50  6D                 	db	109	;'m'
   423  00FC51  54                 	db	84	;'T'
   424  00FC52  6F                 	db	111	;'o'
   425  00FC53  75                 	db	117	;'u'
   426  00FC54  63                 	db	99	;'c'
   427  00FC55  68                 	db	104	;'h'
   428  00FC56  20                 	db	32
   429  00FC57  54                 	db	84	;'T'
   430  00FC58  65                 	db	101	;'e'
   431  00FC59  73                 	db	115	;'s'
   432  00FC5A  74                 	db	116	;'t'
   433  00FC5B  20                 	db	32
   434  00FC5C  42                 	db	66	;'B'
   435  00FC5D  6F                 	db	111	;'o'
   436  00FC5E  61                 	db	97	;'a'
   437  00FC5F  72                 	db	114	;'r'
   438  00FC60  64                 	db	100	;'d'
   439  00FC61  0A                 	db	10
   440  00FC62  0D                 	db	13
   441  00FC63  20                 	db	32
   442  00FC64  20                 	db	32
   443  00FC65  20                 	db	32
   444  00FC66  20                 	db	32
   445  00FC67  45                 	db	69	;'E'
   446  00FC68  76                 	db	118	;'v'
   447  00FC69  61                 	db	97	;'a'
   448  00FC6A  6C                 	db	108	;'l'
   449  00FC6B  75                 	db	117	;'u'
   450  00FC6C  61                 	db	97	;'a'
   451  00FC6D  74                 	db	116	;'t'
   452  00FC6E  65                 	db	101	;'e'
   453  00FC6F  73                 	db	115	;'s'
   454  00FC70  20                 	db	32
   455  00FC71  74                 	db	116	;'t'
   456  00FC72  68                 	db	104	;'h'
   457  00FC73  65                 	db	101	;'e'
   458  00FC74  20                 	db	32
   459  00FC75  6D                 	db	109	;'m'
   460  00FC76  54                 	db	84	;'T'
   461  00FC77  6F                 	db	111	;'o'
   462  00FC78  75                 	db	117	;'u'
   463  00FC79  63                 	db	99	;'c'
   464  00FC7A  68                 	db	104	;'h'
   465  00FC7B  20                 	db	32
   466  00FC7C  63                 	db	99	;'c'
   467  00FC7D  61                 	db	97	;'a'
   468  00FC7E  70                 	db	112	;'p'
   469  00FC7F  61                 	db	97	;'a'
   470  00FC80  63                 	db	99	;'c'
   471  00FC81  69                 	db	105	;'i'
   472  00FC82  74                 	db	116	;'t'
   473  00FC83  69                 	db	105	;'i'
   474  00FC84  76                 	db	118	;'v'
   475  00FC85  65                 	db	101	;'e'
   476  00FC86  20                 	db	32
   477  00FC87  74                 	db	116	;'t'
   478  00FC88  6F                 	db	111	;'o'
   479  00FC89  75                 	db	117	;'u'
   480  00FC8A  63                 	db	99	;'c'
   481  00FC8B  68                 	db	104	;'h'
   482  00FC8C  20                 	db	32
   483  00FC8D  6C                 	db	108	;'l'
   484  00FC8E  69                 	db	105	;'i'
   485  00FC8F  62                 	db	98	;'b'
   486  00FC90  72                 	db	114	;'r'
   487  00FC91  61                 	db	97	;'a'
   488  00FC92  72                 	db	114	;'r'
   489  00FC93  79                 	db	121	;'y'
   490  00FC94  20                 	db	32
   491  00FC95  64                 	db	100	;'d'
   492  00FC96  69                 	db	105	;'i'
   493  00FC97  73                 	db	115	;'s'
   494  00FC98  74                 	db	116	;'t'
   495  00FC99  72                 	db	114	;'r'
   496  00FC9A  69                 	db	105	;'i'
   497  00FC9B  62                 	db	98	;'b'
   498  00FC9C  75                 	db	117	;'u'
   499  00FC9D  74                 	db	116	;'t'
   500  00FC9E  65                 	db	101	;'e'
   501  00FC9F  64                 	db	100	;'d'
   502  00FCA0  20                 	db	32
   503  00FCA1  62                 	db	98	;'b'
   504  00FCA2  79                 	db	121	;'y'
   505  00FCA3  20                 	db	32
   506  00FCA4  4D                 	db	77	;'M'
   507  00FCA5  69                 	db	105	;'i'
   508  00FCA6  63                 	db	99	;'c'
   509  00FCA7  72                 	db	114	;'r'
   510  00FCA8  6F                 	db	111	;'o'
   511  00FCA9  63                 	db	99	;'c'
   512  00FCAA  68                 	db	104	;'h'
   513  00FCAB  69                 	db	105	;'i'
   514  00FCAC  70                 	db	112	;'p'
   515  00FCAD  0A                 	db	10
   516  00FCAE  0D                 	db	13
   517  00FCAF  20                 	db	32
   518  00FCB0  20                 	db	32
   519  00FCB1  20                 	db	32
   520  00FCB2  20                 	db	32
   521  00FCB3  53                 	db	83	;'S'
   522  00FCB4  65                 	db	101	;'e'
   523  00FCB5  74                 	db	116	;'t'
   524  00FCB6  73                 	db	115	;'s'
   525  00FCB7  20                 	db	32
   526  00FCB8  74                 	db	116	;'t'
   527  00FCB9  68                 	db	104	;'h'
   528  00FCBA  65                 	db	101	;'e'
   529  00FCBB  20                 	db	32
   530  00FCBC  73                 	db	115	;'s'
   531  00FCBD  74                 	db	116	;'t'
   532  00FCBE  61                 	db	97	;'a'
   533  00FCBF  74                 	db	116	;'t'
   534  00FCC0  65                 	db	101	;'e'
   535  00FCC1  20                 	db	32
   536  00FCC2  6F                 	db	111	;'o'
   537  00FCC3  66                 	db	102	;'f'
   538  00FCC4  20                 	db	32
   539  00FCC5  66                 	db	102	;'f'
   540  00FCC6  69                 	db	105	;'i'
   541  00FCC7  76                 	db	118	;'v'
   542  00FCC8  65                 	db	101	;'e'
   543  00FCC9  20                 	db	32
   544  00FCCA  4C                 	db	76	;'L'
   545  00FCCB  45                 	db	69	;'E'
   546  00FCCC  44                 	db	68	;'D'
   547  00FCCD  73                 	db	115	;'s'
   548  00FCCE  20                 	db	32
   549  00FCCF  62                 	db	98	;'b'
   550  00FCD0  61                 	db	97	;'a'
   551  00FCD1  73                 	db	115	;'s'
   552  00FCD2  65                 	db	101	;'e'
   553  00FCD3  64                 	db	100	;'d'
   554  00FCD4  20                 	db	32
   555  00FCD5  6F                 	db	111	;'o'
   556  00FCD6  6E                 	db	110	;'n'
   557  00FCD7  20                 	db	32
   558  00FCD8  6D                 	db	109	;'m'
   559  00FCD9  54                 	db	84	;'T'
   560  00FCDA  6F                 	db	111	;'o'
   561  00FCDB  75                 	db	117	;'u'
   562  00FCDC  63                 	db	99	;'c'
   563  00FCDD  68                 	db	104	;'h'
   564  00FCDE  20                 	db	32
   565  00FCDF  63                 	db	99	;'c'
   566  00FCE0  61                 	db	97	;'a'
   567  00FCE1  70                 	db	112	;'p'
   568  00FCE2  61                 	db	97	;'a'
   569  00FCE3  63                 	db	99	;'c'
   570  00FCE4  69                 	db	105	;'i'
   571  00FCE5  74                 	db	116	;'t'
   572  00FCE6  69                 	db	105	;'i'
   573  00FCE7  76                 	db	118	;'v'
   574  00FCE8  65                 	db	101	;'e'
   575  00FCE9  20                 	db	32
   576  00FCEA  70                 	db	112	;'p'
   577  00FCEB  75                 	db	117	;'u'
   578  00FCEC  73                 	db	115	;'s'
   579  00FCED  68                 	db	104	;'h'
   580  00FCEE  62                 	db	98	;'b'
   581  00FCEF  75                 	db	117	;'u'
   582  00FCF0  74                 	db	116	;'t'
   583  00FCF1  74                 	db	116	;'t'
   584  00FCF2  6F                 	db	111	;'o'
   585  00FCF3  6E                 	db	110	;'n'
   586  00FCF4  73                 	db	115	;'s'
   587  00FCF5  0A                 	db	10
   588  00FCF6  0D                 	db	13
   589  00FCF7  20                 	db	32
   590  00FCF8  20                 	db	32
   591  00FCF9  20                 	db	32
   592  00FCFA  20                 	db	32
   593  00FCFB  42                 	db	66	;'B'
   594  00FCFC  61                 	db	97	;'a'
   595  00FCFD  75                 	db	117	;'u'
   596  00FCFE  64                 	db	100	;'d'
   597  00FCFF  20                 	db	32
   598  00FD00  72                 	db	114	;'r'
   599  00FD01  61                 	db	97	;'a'
   600  00FD02  74                 	db	116	;'t'
   601  00FD03  65                 	db	101	;'e'
   602  00FD04  3A                 	db	58	;':'
   603  00FD05  20                 	db	32
   604  00FD06  31                 	db	49	;'1'
   605  00FD07  31                 	db	49	;'1'
   606  00FD08  35                 	db	53	;'5'
   607  00FD09  32                 	db	50	;'2'
   608  00FD0A  30                 	db	48	;'0'
   609  00FD0B  30                 	db	48	;'0'
   610  00FD0C  20                 	db	32
   611  00FD0D  62                 	db	98	;'b'
   612  00FD0E  70                 	db	112	;'p'
   613  00FD0F  73                 	db	115	;'s'
   614  00FD10  0A                 	db	10
   615  00FD11  0D                 	db	13
   616  00FD12  20                 	db	32
   617  00FD13  20                 	db	32
   618  00FD14  20                 	db	32
   619  00FD15  20                 	db	32
   620  00FD16  4E                 	db	78	;'N'
   621  00FD17  6F                 	db	111	;'o'
   622  00FD18  20                 	db	32
   623  00FD19  70                 	db	112	;'p'
   624  00FD1A  61                 	db	97	;'a'
   625  00FD1B  72                 	db	114	;'r'
   626  00FD1C  69                 	db	105	;'i'
   627  00FD1D  74                 	db	116	;'t'
   628  00FD1E  79                 	db	121	;'y'
   629  00FD1F  2C                 	db	44
   630  00FD20  20                 	db	32
   631  00FD21  38                 	db	56	;'8'
   632  00FD22  20                 	db	32
   633  00FD23  62                 	db	98	;'b'
   634  00FD24  69                 	db	105	;'i'
   635  00FD25  74                 	db	116	;'t'
   636  00FD26  73                 	db	115	;'s'
   637  00FD27  2C                 	db	44
   638  00FD28  20                 	db	32
   639  00FD29  6E                 	db	110	;'n'
   640  00FD2A  6F                 	db	111	;'o'
   641  00FD2B  20                 	db	32
   642  00FD2C  66                 	db	102	;'f'
   643  00FD2D  6C                 	db	108	;'l'
   644  00FD2E  6F                 	db	111	;'o'
   645  00FD2F  77                 	db	119	;'w'
   646  00FD30  20                 	db	32
   647  00FD31  63                 	db	99	;'c'
   648  00FD32  6F                 	db	111	;'o'
   649  00FD33  6E                 	db	110	;'n'
   650  00FD34  74                 	db	116	;'t'
   651  00FD35  72                 	db	114	;'r'
   652  00FD36  6F                 	db	111	;'o'
   653  00FD37  6C                 	db	108	;'l'
   654  00FD38  2C                 	db	44
   655  00FD39  20                 	db	32
   656  00FD3A  31                 	db	49	;'1'
   657  00FD3B  20                 	db	32
   658  00FD3C  73                 	db	115	;'s'
   659  00FD3D  74                 	db	116	;'t'
   660  00FD3E  6F                 	db	111	;'o'
   661  00FD3F  70                 	db	112	;'p'
   662  00FD40  20                 	db	32
   663  00FD41  62                 	db	98	;'b'
   664  00FD42  69                 	db	105	;'i'
   665  00FD43  74                 	db	116	;'t'
   666  00FD44  0A                 	db	10
   667  00FD45  0D                 	db	13
   668  00FD46  20                 	db	32
   669  00FD47  20                 	db	32
   670  00FD48  20                 	db	32
   671  00FD49  20                 	db	32
   672  00FD4A  43                 	db	67	;'C'
   673  00FD4B  6F                 	db	111	;'o'
   674  00FD4C  6D                 	db	109	;'m'
   675  00FD4D  6D                 	db	109	;'m'
   676  00FD4E  61                 	db	97	;'a'
   677  00FD4F  6E                 	db	110	;'n'
   678  00FD50  64                 	db	100	;'d'
   679  00FD51  73                 	db	115	;'s'
   680  00FD52  20                 	db	32
   681  00FD53  61                 	db	97	;'a'
   682  00FD54  72                 	db	114	;'r'
   683  00FD55  65                 	db	101	;'e'
   684  00FD56  20                 	db	32
   685  00FD57  63                 	db	99	;'c'
   686  00FD58  61                 	db	97	;'a'
   687  00FD59  73                 	db	115	;'s'
   688  00FD5A  65                 	db	101	;'e'
   689  00FD5B  20                 	db	32
   690  00FD5C  73                 	db	115	;'s'
   691  00FD5D  65                 	db	101	;'e'
   692  00FD5E  6E                 	db	110	;'n'
   693  00FD5F  73                 	db	115	;'s'
   694  00FD60  69                 	db	105	;'i'
   695  00FD61  74                 	db	116	;'t'
   696  00FD62  69                 	db	105	;'i'
   697  00FD63  76                 	db	118	;'v'
   698  00FD64  65                 	db	101	;'e'
   699  00FD65  0A                 	db	10
   700  00FD66  0D                 	db	13
   701  00FD67  20                 	db	32
   702  00FD68  20                 	db	32
   703  00FD69  20                 	db	32
   704  00FD6A  20                 	db	32
   705  00FD6B  45                 	db	69	;'E'
   706  00FD6C  6E                 	db	110	;'n'
   707  00FD6D  74                 	db	116	;'t'
   708  00FD6E  65                 	db	101	;'e'
   709  00FD6F  72                 	db	114	;'r'
   710  00FD70  20                 	db	32
   711  00FD71  61                 	db	97	;'a'
   712  00FD72  20                 	db	32
   713  00FD73  63                 	db	99	;'c'
   714  00FD74  6F                 	db	111	;'o'
   715  00FD75  6D                 	db	109	;'m'
   716  00FD76  6D                 	db	109	;'m'
   717  00FD77  61                 	db	97	;'a'
   718  00FD78  6E                 	db	110	;'n'
   719  00FD79  64                 	db	100	;'d'
   720  00FD7A  2C                 	db	44
   721  00FD7B  20                 	db	32
   722  00FD7C  6F                 	db	111	;'o'
   723  00FD7D  72                 	db	114	;'r'
   724  00FD7E  20                 	db	32
   725  00FD7F  65                 	db	101	;'e'
   726  00FD80  6E                 	db	110	;'n'
   727  00FD81  74                 	db	116	;'t'
   728  00FD82  65                 	db	101	;'e'
   729  00FD83  72                 	db	114	;'r'
   730  00FD84  20                 	db	32
   731  00FD85  48                 	db	72	;'H'
   732  00FD86  65                 	db	101	;'e'
   733  00FD87  6C                 	db	108	;'l'
   734  00FD88  70                 	db	112	;'p'
   735  00FD89  20                 	db	32
   736  00FD8A  66                 	db	102	;'f'
   737  00FD8B  6F                 	db	111	;'o'
   738  00FD8C  72                 	db	114	;'r'
   739  00FD8D  20                 	db	32
   740  00FD8E  6C                 	db	108	;'l'
   741  00FD8F  69                 	db	105	;'i'
   742  00FD90  73                 	db	115	;'s'
   743  00FD91  74                 	db	116	;'t'
   744  00FD92  20                 	db	32
   745  00FD93  6F                 	db	111	;'o'
   746  00FD94  66                 	db	102	;'f'
   747  00FD95  20                 	db	32
   748  00FD96  63                 	db	99	;'c'
   749  00FD97  6F                 	db	111	;'o'
   750  00FD98  6D                 	db	109	;'m'
   751  00FD99  6D                 	db	109	;'m'
   752  00FD9A  61                 	db	97	;'a'
   753  00FD9B  6E                 	db	110	;'n'
   754  00FD9C  64                 	db	100	;'d'
   755  00FD9D  73                 	db	115	;'s'
   756  00FD9E  0A                 	db	10
   757  00FD9F  0D                 	db	13
   758  00FDA0  00                 	db	0
   759  00FDA1                     STR_63:
   760  00FDA1  4C                 	db	76	;'L'
   761  00FDA2  69                 	db	105	;'i'
   762  00FDA3  73                 	db	115	;'s'
   763  00FDA4  74                 	db	116	;'t'
   764  00FDA5  20                 	db	32
   765  00FDA6  6F                 	db	111	;'o'
   766  00FDA7  66                 	db	102	;'f'
   767  00FDA8  20                 	db	32
   768  00FDA9  73                 	db	115	;'s'
   769  00FDAA  75                 	db	117	;'u'
   770  00FDAB  70                 	db	112	;'p'
   771  00FDAC  70                 	db	112	;'p'
   772  00FDAD  6F                 	db	111	;'o'
   773  00FDAE  72                 	db	114	;'r'
   774  00FDAF  74                 	db	116	;'t'
   775  00FDB0  65                 	db	101	;'e'
   776  00FDB1  64                 	db	100	;'d'
   777  00FDB2  20                 	db	32
   778  00FDB3  63                 	db	99	;'c'
   779  00FDB4  6F                 	db	111	;'o'
   780  00FDB5  6D                 	db	109	;'m'
   781  00FDB6  6D                 	db	109	;'m'
   782  00FDB7  61                 	db	97	;'a'
   783  00FDB8  6E                 	db	110	;'n'
   784  00FDB9  64                 	db	100	;'d'
   785  00FDBA  73                 	db	115	;'s'
   786  00FDBB  3A                 	db	58	;':'
   787  00FDBC  0A                 	db	10
   788  00FDBD  0D                 	db	13
   789  00FDBE  20                 	db	32
   790  00FDBF  20                 	db	32
   791  00FDC0  20                 	db	32
   792  00FDC1  52                 	db	82	;'R'
   793  00FDC2  65                 	db	101	;'e'
   794  00FDC3  73                 	db	115	;'s'
   795  00FDC4  65                 	db	101	;'e'
   796  00FDC5  74                 	db	116	;'t'
   797  00FDC6  3A                 	db	58	;':'
   798  00FDC7  20                 	db	32
   799  00FDC8  43                 	db	67	;'C'
   800  00FDC9  6C                 	db	108	;'l'
   801  00FDCA  65                 	db	101	;'e'
   802  00FDCB  61                 	db	97	;'a'
   803  00FDCC  72                 	db	114	;'r'
   804  00FDCD  73                 	db	115	;'s'
   805  00FDCE  20                 	db	32
   806  00FDCF  74                 	db	116	;'t'
   807  00FDD0  68                 	db	104	;'h'
   808  00FDD1  65                 	db	101	;'e'
   809  00FDD2  20                 	db	32
   810  00FDD3  74                 	db	116	;'t'
   811  00FDD4  65                 	db	101	;'e'
   812  00FDD5  72                 	db	114	;'r'
   813  00FDD6  6D                 	db	109	;'m'
   814  00FDD7  69                 	db	105	;'i'
   815  00FDD8  6E                 	db	110	;'n'
   816  00FDD9  61                 	db	97	;'a'
   817  00FDDA  6C                 	db	108	;'l'
   818  00FDDB  20                 	db	32
   819  00FDDC  61                 	db	97	;'a'
   820  00FDDD  6E                 	db	110	;'n'
   821  00FDDE  64                 	db	100	;'d'
   822  00FDDF  20                 	db	32
   823  00FDE0  72                 	db	114	;'r'
   824  00FDE1  65                 	db	101	;'e'
   825  00FDE2  73                 	db	115	;'s'
   826  00FDE3  65                 	db	101	;'e'
   827  00FDE4  74                 	db	116	;'t'
   828  00FDE5  73                 	db	115	;'s'
   829  00FDE6  20                 	db	32
   830  00FDE7  74                 	db	116	;'t'
   831  00FDE8  68                 	db	104	;'h'
   832  00FDE9  65                 	db	101	;'e'
   833  00FDEA  20                 	db	32
   834  00FDEB  6D                 	db	109	;'m'
   835  00FDEC  69                 	db	105	;'i'
   836  00FDED  63                 	db	99	;'c'
   837  00FDEE  72                 	db	114	;'r'
   838  00FDEF  6F                 	db	111	;'o'
   839  00FDF0  0A                 	db	10
   840  00FDF1  0D                 	db	13
   841  00FDF2  20                 	db	32
   842  00FDF3  20                 	db	32
   843  00FDF4  20                 	db	32
   844  00FDF5  43                 	db	67	;'C'
   845  00FDF6  6C                 	db	108	;'l'
   846  00FDF7  65                 	db	101	;'e'
   847  00FDF8  61                 	db	97	;'a'
   848  00FDF9  72                 	db	114	;'r'
   849  00FDFA  3A                 	db	58	;':'
   850  00FDFB  20                 	db	32
   851  00FDFC  43                 	db	67	;'C'
   852  00FDFD  6C                 	db	108	;'l'
   853  00FDFE  65                 	db	101	;'e'
   854  00FDFF  61                 	db	97	;'a'
   855  00FE00  72                 	db	114	;'r'
   856  00FE01  73                 	db	115	;'s'
   857  00FE02  20                 	db	32
   858  00FE03  74                 	db	116	;'t'
   859  00FE04  68                 	db	104	;'h'
   860  00FE05  65                 	db	101	;'e'
   861  00FE06  20                 	db	32
   862  00FE07  74                 	db	116	;'t'
   863  00FE08  65                 	db	101	;'e'
   864  00FE09  72                 	db	114	;'r'
   865  00FE0A  6D                 	db	109	;'m'
   866  00FE0B  69                 	db	105	;'i'
   867  00FE0C  6E                 	db	110	;'n'
   868  00FE0D  61                 	db	97	;'a'
   869  00FE0E  6C                 	db	108	;'l'
   870  00FE0F  20                 	db	32
   871  00FE10  62                 	db	98	;'b'
   872  00FE11  75                 	db	117	;'u'
   873  00FE12  74                 	db	116	;'t'
   874  00FE13  20                 	db	32
   875  00FE14  64                 	db	100	;'d'
   876  00FE15  6F                 	db	111	;'o'
   877  00FE16  65                 	db	101	;'e'
   878  00FE17  73                 	db	115	;'s'
   879  00FE18  6E                 	db	110	;'n'
   880  00FE19  27                 	db	39
   881  00FE1A  74                 	db	116	;'t'
   882  00FE1B  20                 	db	32
   883  00FE1C  72                 	db	114	;'r'
   884  00FE1D  65                 	db	101	;'e'
   885  00FE1E  73                 	db	115	;'s'
   886  00FE1F  65                 	db	101	;'e'
   887  00FE20  74                 	db	116	;'t'
   888  00FE21  20                 	db	32
   889  00FE22  74                 	db	116	;'t'
   890  00FE23  68                 	db	104	;'h'
   891  00FE24  65                 	db	101	;'e'
   892  00FE25  20                 	db	32
   893  00FE26  6D                 	db	109	;'m'
   894  00FE27  69                 	db	105	;'i'
   895  00FE28  63                 	db	99	;'c'
   896  00FE29  72                 	db	114	;'r'
   897  00FE2A  6F                 	db	111	;'o'
   898  00FE2B  0A                 	db	10
   899  00FE2C  0D                 	db	13
   900  00FE2D  20                 	db	32
   901  00FE2E  20                 	db	32
   902  00FE2F  20                 	db	32
   903  00FE30  2A                 	db	42
   904  00FE31  49                 	db	73	;'I'
   905  00FE32  44                 	db	68	;'D'
   906  00FE33  4E                 	db	78	;'N'
   907  00FE34  3F                 	db	63	;'?'
   908  00FE35  3A                 	db	58	;':'
   909  00FE36  20                 	db	32
   910  00FE37  52                 	db	82	;'R'
   911  00FE38  65                 	db	101	;'e'
   912  00FE39  74                 	db	116	;'t'
   913  00FE3A  75                 	db	117	;'u'
   914  00FE3B  72                 	db	114	;'r'
   915  00FE3C  6E                 	db	110	;'n'
   916  00FE3D  73                 	db	115	;'s'
   917  00FE3E  20                 	db	32
   918  00FE3F  64                 	db	100	;'d'
   919  00FE40  65                 	db	101	;'e'
   920  00FE41  76                 	db	118	;'v'
   921  00FE42  69                 	db	105	;'i'
   922  00FE43  63                 	db	99	;'c'
   923  00FE44  65                 	db	101	;'e'
   924  00FE45  20                 	db	32
   925  00FE46  69                 	db	105	;'i'
   926  00FE47  64                 	db	100	;'d'
   927  00FE48  65                 	db	101	;'e'
   928  00FE49  6E                 	db	110	;'n'
   929  00FE4A  74                 	db	116	;'t'
   930  00FE4B  69                 	db	105	;'i'
   931  00FE4C  66                 	db	102	;'f'
   932  00FE4D  69                 	db	105	;'i'
   933  00FE4E  63                 	db	99	;'c'
   934  00FE4F  61                 	db	97	;'a'
   935  00FE50  74                 	db	116	;'t'
   936  00FE51  69                 	db	105	;'i'
   937  00FE52  6F                 	db	111	;'o'
   938  00FE53  6E                 	db	110	;'n'
   939  00FE54  0A                 	db	10
   940  00FE55  0D                 	db	13
   941  00FE56  20                 	db	32
   942  00FE57  20                 	db	32
   943  00FE58  20                 	db	32
   944  00FE59  4D                 	db	77	;'M'
   945  00FE5A  65                 	db	101	;'e'
   946  00FE5B  61                 	db	97	;'a'
   947  00FE5C  73                 	db	115	;'s'
   948  00FE5D  75                 	db	117	;'u'
   949  00FE5E  72                 	db	114	;'r'
   950  00FE5F  65                 	db	101	;'e'
   951  00FE60  20                 	db	32
   952  00FE61  50                 	db	80	;'P'
   953  00FE62  4F                 	db	79	;'O'
   954  00FE63  53                 	db	83	;'S'
   955  00FE64  33                 	db	51	;'3'
   956  00FE65  50                 	db	80	;'P'
   957  00FE66  33                 	db	51	;'3'
   958  00FE67  3F                 	db	63	;'?'
   959  00FE68  3A                 	db	58	;':'
   960  00FE69  20                 	db	32
   961  00FE6A  52                 	db	82	;'R'
   962  00FE6B  65                 	db	101	;'e'
   963  00FE6C  74                 	db	116	;'t'
   964  00FE6D  75                 	db	117	;'u'
   965  00FE6E  72                 	db	114	;'r'
   966  00FE6F  6E                 	db	110	;'n'
   967  00FE70  73                 	db	115	;'s'
   968  00FE71  20                 	db	32
   969  00FE72  2B                 	db	43
   970  00FE73  33                 	db	51	;'3'
   971  00FE74  2E                 	db	46
   972  00FE75  33                 	db	51	;'3'
   973  00FE76  56                 	db	86	;'V'
   974  00FE77  20                 	db	32
   975  00FE78  41                 	db	65	;'A'
   976  00FE79  44                 	db	68	;'D'
   977  00FE7A  43                 	db	67	;'C'
   978  00FE7B  20                 	db	32
   979  00FE7C  43                 	db	67	;'C'
   980  00FE7D  6F                 	db	111	;'o'
   981  00FE7E  6E                 	db	110	;'n'
   982  00FE7F  76                 	db	118	;'v'
   983  00FE80  65                 	db	101	;'e'
   984  00FE81  72                 	db	114	;'r'
   985  00FE82  73                 	db	115	;'s'
   986  00FE83  69                 	db	105	;'i'
   987  00FE84  6F                 	db	111	;'o'
   988  00FE85  6E                 	db	110	;'n'
   989  00FE86  20                 	db	32
   990  00FE87  69                 	db	105	;'i'
   991  00FE88  6E                 	db	110	;'n'
   992  00FE89  20                 	db	32
   993  00FE8A  76                 	db	118	;'v'
   994  00FE8B  6F                 	db	111	;'o'
   995  00FE8C  6C                 	db	108	;'l'
   996  00FE8D  74                 	db	116	;'t'
   997  00FE8E  73                 	db	115	;'s'
   998  00FE8F  0A                 	db	10
   999  00FE90  0D                 	db	13
  1000  00FE91  20                 	db	32
  1001  00FE92  20                 	db	32
  1002  00FE93  20                 	db	32
  1003  00FE94  4D                 	db	77	;'M'
  1004  00FE95  65                 	db	101	;'e'
  1005  00FE96  61                 	db	97	;'a'
  1006  00FE97  73                 	db	115	;'s'
  1007  00FE98  75                 	db	117	;'u'
  1008  00FE99  72                 	db	114	;'r'
  1009  00FE9A  65                 	db	101	;'e'
  1010  00FE9B  20                 	db	32
  1011  00FE9C  50                 	db	80	;'P'
  1012  00FE9D  4F                 	db	79	;'O'
  1013  00FE9E  53                 	db	83	;'S'
  1014  00FE9F  31                 	db	49	;'1'
  1015  00FEA0  32                 	db	50	;'2'
  1016  00FEA1  3F                 	db	63	;'?'
  1017  00FEA2  3A                 	db	58	;':'
  1018  00FEA3  20                 	db	32
  1019  00FEA4  52                 	db	82	;'R'
  1020  00FEA5  65                 	db	101	;'e'
  1021  00FEA6  74                 	db	116	;'t'
  1022  00FEA7  75                 	db	117	;'u'
  1023  00FEA8  72                 	db	114	;'r'
  1024  00FEA9  6E                 	db	110	;'n'
  1025  00FEAA  73                 	db	115	;'s'
  1026  00FEAB  20                 	db	32
  1027  00FEAC  2B                 	db	43
  1028  00FEAD  31                 	db	49	;'1'
  1029  00FEAE  32                 	db	50	;'2'
  1030  00FEAF  56                 	db	86	;'V'
  1031  00FEB0  20                 	db	32
  1032  00FEB1  41                 	db	65	;'A'
  1033  00FEB2  44                 	db	68	;'D'
  1034  00FEB3  43                 	db	67	;'C'
  1035  00FEB4  20                 	db	32
  1036  00FEB5  43                 	db	67	;'C'
  1037  00FEB6  6F                 	db	111	;'o'
  1038  00FEB7  6E                 	db	110	;'n'
  1039  00FEB8  76                 	db	118	;'v'
  1040  00FEB9  65                 	db	101	;'e'
  1041  00FEBA  72                 	db	114	;'r'
  1042  00FEBB  73                 	db	115	;'s'
  1043  00FEBC  69                 	db	105	;'i'
  1044  00FEBD  6F                 	db	111	;'o'
  1045  00FEBE  6E                 	db	110	;'n'
  1046  00FEBF  20                 	db	32
  1047  00FEC0  69                 	db	105	;'i'
  1048  00FEC1  6E                 	db	110	;'n'
  1049  00FEC2  20                 	db	32
  1050  00FEC3  76                 	db	118	;'v'
  1051  00FEC4  6F                 	db	111	;'o'
  1052  00FEC5  6C                 	db	108	;'l'
  1053  00FEC6  74                 	db	116	;'t'
  1054  00FEC7  73                 	db	115	;'s'
  1055  00FEC8  0A                 	db	10
  1056  00FEC9  0D                 	db	13
  1057  00FECA  20                 	db	32
  1058  00FECB  20                 	db	32
  1059  00FECC  20                 	db	32
  1060  00FECD  48                 	db	72	;'H'
  1061  00FECE  65                 	db	101	;'e'
  1062  00FECF  6C                 	db	108	;'l'
  1063  00FED0  70                 	db	112	;'p'
  1064  00FED1  3A                 	db	58	;':'
  1065  00FED2  20                 	db	32
  1066  00FED3  54                 	db	84	;'T'
  1067  00FED4  68                 	db	104	;'h'
  1068  00FED5  69                 	db	105	;'i'
  1069  00FED6  73                 	db	115	;'s'
  1070  00FED7  20                 	db	32
  1071  00FED8  6D                 	db	109	;'m'
  1072  00FED9  65                 	db	101	;'e'
  1073  00FEDA  73                 	db	115	;'s'
  1074  00FEDB  73                 	db	115	;'s'
  1075  00FEDC  61                 	db	97	;'a'
  1076  00FEDD  67                 	db	103	;'g'
  1077  00FEDE  65                 	db	101	;'e'
  1078  00FEDF  2C                 	db	44
  1079  00FEE0  20                 	db	32
  1080  00FEE1  6C                 	db	108	;'l'
  1081  00FEE2  69                 	db	105	;'i'
  1082  00FEE3  73                 	db	115	;'s'
  1083  00FEE4  74                 	db	116	;'t'
  1084  00FEE5  73                 	db	115	;'s'
  1085  00FEE6  20                 	db	32
  1086  00FEE7  63                 	db	99	;'c'
  1087  00FEE8  6F                 	db	111	;'o'
  1088  00FEE9  6D                 	db	109	;'m'
  1089  00FEEA  6D                 	db	109	;'m'
  1090  00FEEB  61                 	db	97	;'a'
  1091  00FEEC  6E                 	db	110	;'n'
  1092  00FEED  64                 	db	100	;'d'
  1093  00FEEE  73                 	db	115	;'s'
  1094  00FEEF  0A                 	db	10
  1095  00FEF0  0D                 	db	13
  1096  00FEF1  00                 	db	0
  1097  00FEF2                     STR_51:
  1098  00FEF2  4D                 	db	77	;'M'
  1099  00FEF3  61                 	db	97	;'a'
  1100  00FEF4  72                 	db	114	;'r'
  1101  00FEF5  71                 	db	113	;'q'
  1102  00FEF6  75                 	db	117	;'u'
  1103  00FEF7  65                 	db	101	;'e'
  1104  00FEF8  74                 	db	116	;'t'
  1105  00FEF9  74                 	db	116	;'t'
  1106  00FEFA  65                 	db	101	;'e'
  1107  00FEFB  20                 	db	32
  1108  00FEFC  55                 	db	85	;'U'
  1109  00FEFD  6E                 	db	110	;'n'
  1110  00FEFE  69                 	db	105	;'i'
  1111  00FEFF  76                 	db	118	;'v'
  1112  00FF00  65                 	db	101	;'e'
  1113  00FF01  72                 	db	114	;'r'
  1114  00FF02  73                 	db	115	;'s'
  1115  00FF03  69                 	db	105	;'i'
  1116  00FF04  74                 	db	116	;'t'
  1117  00FF05  79                 	db	121	;'y'
  1118  00FF06  20                 	db	32
  1119  00FF07  45                 	db	69	;'E'
  1120  00FF08  4C                 	db	76	;'L'
  1121  00FF09  45                 	db	69	;'E'
  1122  00FF0A  4E                 	db	78	;'N'
  1123  00FF0B  20                 	db	32
  1124  00FF0C  33                 	db	51	;'3'
  1125  00FF0D  30                 	db	48	;'0'
  1126  00FF0E  33                 	db	51	;'3'
  1127  00FF0F  35                 	db	53	;'5'
  1128  00FF10  20                 	db	32
  1129  00FF11  46                 	db	70	;'F'
  1130  00FF12  69                 	db	105	;'i'
  1131  00FF13  6E                 	db	110	;'n'
  1132  00FF14  61                 	db	97	;'a'
  1133  00FF15  6C                 	db	108	;'l'
  1134  00FF16  20                 	db	32
  1135  00FF17  50                 	db	80	;'P'
  1136  00FF18  72                 	db	114	;'r'
  1137  00FF19  6F                 	db	111	;'o'
  1138  00FF1A  6A                 	db	106	;'j'
  1139  00FF1B  65                 	db	101	;'e'
  1140  00FF1C  63                 	db	99	;'c'
  1141  00FF1D  74                 	db	116	;'t'
  1142  00FF1E  0A                 	db	10
  1143  00FF1F  0D                 	db	13
  1144  00FF20  00                 	db	0
  1145  00FF21                     STR_55:
  1146  00FF21  2B                 	db	43
  1147  00FF22  33                 	db	51	;'3'
  1148  00FF23  2E                 	db	46
  1149  00FF24  33                 	db	51	;'3'
  1150  00FF25  56                 	db	86	;'V'
  1151  00FF26  20                 	db	32
  1152  00FF27  72                 	db	114	;'r'
  1153  00FF28  61                 	db	97	;'a'
  1154  00FF29  69                 	db	105	;'i'
  1155  00FF2A  6C                 	db	108	;'l'
  1156  00FF2B  20                 	db	32
  1157  00FF2C  6D                 	db	109	;'m'
  1158  00FF2D  65                 	db	101	;'e'
  1159  00FF2E  61                 	db	97	;'a'
  1160  00FF2F  73                 	db	115	;'s'
  1161  00FF30  75                 	db	117	;'u'
  1162  00FF31  72                 	db	114	;'r'
  1163  00FF32  65                 	db	101	;'e'
  1164  00FF33  64                 	db	100	;'d'
  1165  00FF34  20                 	db	32
  1166  00FF35  61                 	db	97	;'a'
  1167  00FF36  73                 	db	115	;'s'
  1168  00FF37  20                 	db	32
  1169  00FF38  2B                 	db	43
  1170  00FF39  25                 	db	37
  1171  00FF3A  66                 	db	102	;'f'
  1172  00FF3B  20                 	db	32
  1173  00FF3C  56                 	db	86	;'V'
  1174  00FF3D  6F                 	db	111	;'o'
  1175  00FF3E  6C                 	db	108	;'l'
  1176  00FF3F  74                 	db	116	;'t'
  1177  00FF40  73                 	db	115	;'s'
  1178  00FF41  0A                 	db	10
  1179  00FF42  0D                 	db	13
  1180  00FF43  00                 	db	0
  1181  00FF44                     STR_59:
  1182  00FF44  2B                 	db	43
  1183  00FF45  31                 	db	49	;'1'
  1184  00FF46  32                 	db	50	;'2'
  1185  00FF47  56                 	db	86	;'V'
  1186  00FF48  20                 	db	32
  1187  00FF49  72                 	db	114	;'r'
  1188  00FF4A  61                 	db	97	;'a'
  1189  00FF4B  69                 	db	105	;'i'
  1190  00FF4C  6C                 	db	108	;'l'
  1191  00FF4D  20                 	db	32
  1192  00FF4E  6D                 	db	109	;'m'
  1193  00FF4F  65                 	db	101	;'e'
  1194  00FF50  61                 	db	97	;'a'
  1195  00FF51  73                 	db	115	;'s'
  1196  00FF52  75                 	db	117	;'u'
  1197  00FF53  72                 	db	114	;'r'
  1198  00FF54  65                 	db	101	;'e'
  1199  00FF55  64                 	db	100	;'d'
  1200  00FF56  20                 	db	32
  1201  00FF57  61                 	db	97	;'a'
  1202  00FF58  73                 	db	115	;'s'
  1203  00FF59  20                 	db	32
  1204  00FF5A  2B                 	db	43
  1205  00FF5B  25                 	db	37
  1206  00FF5C  66                 	db	102	;'f'
  1207  00FF5D  20                 	db	32
  1208  00FF5E  56                 	db	86	;'V'
  1209  00FF5F  6F                 	db	111	;'o'
  1210  00FF60  6C                 	db	108	;'l'
  1211  00FF61  74                 	db	116	;'t'
  1212  00FF62  73                 	db	115	;'s'
  1213  00FF63  0A                 	db	10
  1214  00FF64  0D                 	db	13
  1215  00FF65  00                 	db	0
  1216  00FF66                     STR_50:
  1217  00FF66  41                 	db	65	;'A'
  1218  00FF67  43                 	db	67	;'C'
  1219  00FF68  20                 	db	32
  1220  00FF69  50                 	db	80	;'P'
  1221  00FF6A  6F                 	db	111	;'o'
  1222  00FF6B  77                 	db	119	;'w'
  1223  00FF6C  65                 	db	101	;'e'
  1224  00FF6D  72                 	db	114	;'r'
  1225  00FF6E  20                 	db	32
  1226  00FF6F  4D                 	db	77	;'M'
  1227  00FF70  65                 	db	101	;'e'
  1228  00FF71  74                 	db	116	;'t'
  1229  00FF72  65                 	db	101	;'e'
  1230  00FF73  72                 	db	114	;'r'
  1231  00FF74  0A                 	db	10
  1232  00FF75  0D                 	db	13
  1233  00FF76  00                 	db	0
  1234  00FF77                     STR_53:
  1235  00FF77  4D                 	db	77	;'M'
  1236  00FF78  65                 	db	101	;'e'
  1237  00FF79  61                 	db	97	;'a'
  1238  00FF7A  73                 	db	115	;'s'
  1239  00FF7B  75                 	db	117	;'u'
  1240  00FF7C  72                 	db	114	;'r'
  1241  00FF7D  65                 	db	101	;'e'
  1242  00FF7E  20                 	db	32
  1243  00FF7F  50                 	db	80	;'P'
  1244  00FF80  4F                 	db	79	;'O'
  1245  00FF81  53                 	db	83	;'S'
  1246  00FF82  33                 	db	51	;'3'
  1247  00FF83  50                 	db	80	;'P'
  1248  00FF84  33                 	db	51	;'3'
  1249  00FF85  3F                 	db	63	;'?'
  1250  00FF86  00                 	db	0
  1251  00FF87                     STR_57:
  1252  00FF87  4D                 	db	77	;'M'
  1253  00FF88  65                 	db	101	;'e'
  1254  00FF89  61                 	db	97	;'a'
  1255  00FF8A  73                 	db	115	;'s'
  1256  00FF8B  75                 	db	117	;'u'
  1257  00FF8C  72                 	db	114	;'r'
  1258  00FF8D  65                 	db	101	;'e'
  1259  00FF8E  20                 	db	32
  1260  00FF8F  50                 	db	80	;'P'
  1261  00FF90  4F                 	db	79	;'O'
  1262  00FF91  53                 	db	83	;'S'
  1263  00FF92  31                 	db	49	;'1'
  1264  00FF93  32                 	db	50	;'2'
  1265  00FF94  3F                 	db	63	;'?'
  1266  00FF95  00                 	db	0
  1267  00FF96                     STR_47:
  1268  00FF96  2A                 	db	42
  1269  00FF97  49                 	db	73	;'I'
  1270  00FF98  44                 	db	68	;'D'
  1271  00FF99  4E                 	db	78	;'N'
  1272  00FF9A  3F                 	db	63	;'?'
  1273  00FF9B  00                 	db	0
  1274  00FF9C                     STR_44:
  1275  00FF9C  43                 	db	67	;'C'
  1276  00FF9D  6C                 	db	108	;'l'
  1277  00FF9E  65                 	db	101	;'e'
  1278  00FF9F  61                 	db	97	;'a'
  1279  00FFA0  72                 	db	114	;'r'
  1280  00FFA1  00                 	db	0
  1281  00FFA2                     STR_41:
  1282  00FFA2  52                 	db	82	;'R'
  1283  00FFA3  65                 	db	101	;'e'
  1284  00FFA4  73                 	db	115	;'s'
  1285  00FFA5  65                 	db	101	;'e'
  1286  00FFA6  74                 	db	116	;'t'
  1287  00FFA7  00                 	db	0
  1288  00FFA8                     STR_61:
  1289  00FFA8  48                 	db	72	;'H'
  1290  00FFA9  65                 	db	101	;'e'
  1291  00FFAA  6C                 	db	108	;'l'
  1292  00FFAB  70                 	db	112	;'p'
  1293  00FFAC  00                 	db	0
  1294  00FFAD                     STR_2:
  1295  00FFAD  1B                 	db	27
  1296  00FFAE  5B                 	db	91	;'['
  1297  00FFAF  32                 	db	50	;'2'
  1298  00FFB0  4A                 	db	74	;'J'
  1299  00FFB1  00                 	db	0
  1300  00FFB2                     STR_48:
  1301  00FFB2  49                 	db	73	;'I'
  1302  00FFB3  44                 	db	68	;'D'
  1303  00FFB4  4E                 	db	78	;'N'
  1304  00FFB5  00                 	db	0
  1305  00FFB6                     STR_3:
  1306  00FFB6  1B                 	db	27
  1307  00FFB7  5B                 	db	91	;'['
  1308  00FFB8  48                 	db	72	;'H'
  1309  00FFB9  00                 	db	0
  1310  00FFBA  1B                 	db	27
  1311  00FFBB  5B                 	db	91	;'['
  1312  00FFBC  73                 	db	115	;'s'
  1313  00FFBD  00                 	db	0
  1314  00FFBE  1B                 	db	27
  1315  00FFBF  5B                 	db	91	;'['
  1316  00FFC0  75                 	db	117	;'u'
  1317  00FFC1  00                 	db	0
  1318  00FFC2                     STR_1:
  1319  00FFC2  1B                 	db	27
  1320  00FFC3  5B                 	db	91	;'['
  1321  00FFC4  4B                 	db	75	;'K'
  1322  00FFC5  00                 	db	0
  1323  00FFC6                     STR_20:
  1324  00FFC6  33                 	db	51	;'3'
  1325  00FFC7  30                 	db	48	;'0'
  1326  00FFC8  00                 	db	0
  1327  00FFC9                     STR_30:
  1328  00FFC9  34                 	db	52	;'4'
  1329  00FFCA  30                 	db	48	;'0'
  1330  00FFCB  00                 	db	0
  1331  00FFCC                     STR_21:
  1332  00FFCC  33                 	db	51	;'3'
  1333  00FFCD  31                 	db	49	;'1'
  1334  00FFCE  00                 	db	0
  1335  00FFCF                     STR_31:
  1336  00FFCF  34                 	db	52	;'4'
  1337  00FFD0  31                 	db	49	;'1'
  1338  00FFD1  00                 	db	0
  1339  00FFD2                     STR_22:
  1340  00FFD2  33                 	db	51	;'3'
  1341  00FFD3  32                 	db	50	;'2'
  1342  00FFD4  00                 	db	0
  1343  00FFD5                     STR_32:
  1344  00FFD5  34                 	db	52	;'4'
  1345  00FFD6  32                 	db	50	;'2'
  1346  00FFD7  00                 	db	0
  1347  00FFD8                     STR_23:
  1348  00FFD8  33                 	db	51	;'3'
  1349  00FFD9  33                 	db	51	;'3'
  1350  00FFDA  00                 	db	0
  1351  00FFDB                     STR_33:
  1352  00FFDB  34                 	db	52	;'4'
  1353  00FFDC  33                 	db	51	;'3'
  1354  00FFDD  00                 	db	0
  1355  00FFDE                     STR_24:
  1356  00FFDE  33                 	db	51	;'3'
  1357  00FFDF  34                 	db	52	;'4'
  1358  00FFE0  00                 	db	0
  1359  00FFE1                     STR_34:
  1360  00FFE1  34                 	db	52	;'4'
  1361  00FFE2  34                 	db	52	;'4'
  1362  00FFE3  00                 	db	0
  1363  00FFE4                     STR_25:
  1364  00FFE4  33                 	db	51	;'3'
  1365  00FFE5  35                 	db	53	;'5'
  1366  00FFE6  00                 	db	0
  1367  00FFE7                     STR_35:
  1368  00FFE7  34                 	db	52	;'4'
  1369  00FFE8  35                 	db	53	;'5'
  1370  00FFE9  00                 	db	0
  1371  00FFEA                     STR_26:
  1372  00FFEA  33                 	db	51	;'3'
  1373  00FFEB  36                 	db	54	;'6'
  1374  00FFEC  00                 	db	0
  1375  00FFED                     STR_36:
  1376  00FFED  34                 	db	52	;'4'
  1377  00FFEE  36                 	db	54	;'6'
  1378  00FFEF  00                 	db	0
  1379  00FFF0                     STR_27:
  1380  00FFF0  33                 	db	51	;'3'
  1381  00FFF1  37                 	db	55	;'7'
  1382  00FFF2  00                 	db	0
  1383  00FFF3                     STR_37:
  1384  00FFF3  34                 	db	52	;'4'
  1385  00FFF4  37                 	db	55	;'7'
  1386  00FFF5  00                 	db	0
  1387  00FFF6                     STR_11:
  1388  00FFF6  1B                 	db	27
  1389  00FFF7  5B                 	db	91	;'['
  1390  00FFF8  00                 	db	0
  1391  00FFF9                     STR_17:
  1392  00FFF9  38                 	db	56	;'8'
  1393  00FFFA  00                 	db	0
  1394  00FFFB                     STR_19:
  1395  00FFFB  3B                 	db	59	;';'
  1396  00FFFC  00                 	db	0
  1397  00FFFD                     STR_39:
  1398  00FFFD  6D                 	db	109	;'m'
  1399  00FFFE  00                 	db	0
  1400  0000                     
  1401                           ; #config settings
  1402  00FFFF  00                 	db	0	; dummy byte at the end
  1403  0000                     
  1404                           	psect	cinit
  1405  013C14                     __pcinit:
  1406                           	opt stack 0
  1407  013C14                     start_initialization:
  1408                           	opt stack 0
  1409  013C14                     __initialization:
  1410                           	opt stack 0
  1411                           
  1412                           ; Clear objects allocated to BANK1 (193 bytes)
  1413  013C14  EE01  F000         	lfsr	0,__pbssBANK1
  1414  013C18  0EC1               	movlw	193
  1415  013C1A                     clear_0:
  1416  013C1A  6AEE               	clrf	postinc0,c
  1417  013C1C  06E8               	decf	wreg,f,c
  1418  013C1E  E1FD               	bnz	clear_0
  1419                           
  1420                           ; Clear objects allocated to BITBANK0 (1 bytes)
  1421  013C20  0100               	movlb	0
  1422  013C22  6BD6               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  1423                           
  1424                           ; Clear objects allocated to BANK0 (31 bytes)
  1425  013C24  EE00  F0B7         	lfsr	0,__pbssBANK0
  1426  013C28  0E1F               	movlw	31
  1427  013C2A                     clear_1:
  1428  013C2A  6AEE               	clrf	postinc0,c
  1429  013C2C  06E8               	decf	wreg,f,c
  1430  013C2E  E1FD               	bnz	clear_1
  1431  013C30                     end_of_initialization:
  1432                           	opt stack 0
  1433  013C30                     __end_of__initialization:
  1434                           	opt stack 0
  1435  013C30  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1436  013C32  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1437  013C34  0100               	movlb	0
  1438  013C36  EF75  F09A         	goto	_main	;jump to C main() function
  1439                           postinc0	equ	0xFEE
  1440                           wreg	equ	0xFE8
  1441                           
  1442                           	psect	bitbssBANK0
  1443  0006B0                     __pbitbssBANK0:
  1444                           	opt stack 0
  1445  0006B0                     _eusart2RxStringReady:
  1446                           	opt stack 0
  1447  0006B0                     	ds	1
  1448                           postinc0	equ	0xFEE
  1449                           wreg	equ	0xFE8
  1450                           
  1451                           	psect	bssBANK0
  1452  0000B7                     __pbssBANK0:
  1453                           	opt stack 0
  1454  0000B7                     _TMR7_InterruptHandler:
  1455                           	opt stack 0
  1456  0000B7                     	ds	3
  1457  0000BA                     _ADCC_ADI_InterruptHandler:
  1458                           	opt stack 0
  1459  0000BA                     	ds	3
  1460  0000BD                     _POS12_ADC_Result:
  1461                           	opt stack 0
  1462  0000BD                     	ds	3
  1463  0000C0                     _POS3P3_ADC_Result:
  1464                           	opt stack 0
  1465  0000C0                     	ds	3
  1466  0000C3                     _TMR6_InterruptHandler:
  1467                           	opt stack 0
  1468  0000C3                     	ds	3
  1469  0000C6                     _EUSART2_RxDefaultInterruptHandler:
  1470                           	opt stack 0
  1471  0000C6                     	ds	3
  1472  0000C9                     _EUSART2_TxDefaultInterruptHandler:
  1473                           	opt stack 0
  1474  0000C9                     	ds	3
  1475  0000CC                     _timer7ReloadVal:
  1476                           	opt stack 0
  1477  0000CC                     	ds	2
  1478  0000CE                     _background_color:
  1479                           	opt stack 0
  1480  0000CE                     	ds	1
  1481  0000CF                     _foreground_color:
  1482                           	opt stack 0
  1483  0000CF                     	ds	1
  1484  0000D0                     _attribute:
  1485                           	opt stack 0
  1486  0000D0                     	ds	1
  1487  0000D1                     _eusart2RxCount:
  1488                           	opt stack 0
  1489  0000D1                     	ds	1
  1490  0000D2                     _eusart2RxTail:
  1491                           	opt stack 0
  1492  0000D2                     	ds	1
  1493  0000D3                     _eusart2TxBufferRemaining:
  1494                           	opt stack 0
  1495  0000D3                     	ds	1
  1496  0000D4                     _eusart2TxTail:
  1497                           	opt stack 0
  1498  0000D4                     	ds	1
  1499  0000D5                     _eusart2TxHead:
  1500                           	opt stack 0
  1501  0000D5                     	ds	1
  1502                           postinc0	equ	0xFEE
  1503                           wreg	equ	0xFE8
  1504                           
  1505                           	psect	bssBANK1
  1506  000100                     __pbssBANK1:
  1507                           	opt stack 0
  1508  000100                     _eusart2RxBuffer:
  1509                           	opt stack 0
  1510  000100                     	ds	64
  1511  000140                     _eusart2TxBuffer:
  1512                           	opt stack 0
  1513  000140                     	ds	64
  1514  000180                     _eusart2RxHead:
  1515                           	opt stack 0
  1516  000180                     	ds	1
  1517  000181                     _line:
  1518                           	opt stack 0
  1519  000181                     	ds	64
  1520                           postinc0	equ	0xFEE
  1521                           wreg	equ	0xFE8
  1522                           
  1523                           	psect	cstackBANK2
  1524  000200                     __pcstackBANK2:
  1525                           	opt stack 0
  1526  000200                     terminal_textAttributes@foreground_color:
  1527                           	opt stack 0
  1528                           
  1529                           ; 1 bytes @ 0x0
  1530  000200                     	ds	1
  1531  000201                     terminal_textAttributes@output_buff:
  1532                           	opt stack 0
  1533                           
  1534                           ; 15 bytes @ 0x1
  1535  000201                     	ds	15
  1536  000210                     terminal_ringBufferPull@charNumber:
  1537                           	opt stack 0
  1538                           
  1539                           ; 2 bytes @ 0x10
  1540  000210                     	ds	2
  1541  000212                     terminal_ringBufferPull@index_1170:
  1542                           	opt stack 0
  1543                           
  1544                           ; 2 bytes @ 0x12
  1545  000212                     	ds	2
  1546  000214                     terminal_ringBufferPull@index:
  1547                           	opt stack 0
  1548                           
  1549                           ; 2 bytes @ 0x14
  1550  000214                     	ds	2
  1551                           postinc0	equ	0xFEE
  1552                           wreg	equ	0xFE8
  1553                           
  1554                           	psect	cstackBANK1
  1555  0001C1                     __pcstackBANK1:
  1556                           	opt stack 0
  1557  0001C1                     ??___fttol:
  1558  0001C1                     ?___ftadd:
  1559                           	opt stack 0
  1560  0001C1                     ___ftadd@f1:
  1561                           	opt stack 0
  1562                           
  1563                           ; 3 bytes @ 0x0
  1564  0001C1                     	ds	3
  1565  0001C4                     ___ftadd@f2:
  1566                           	opt stack 0
  1567                           
  1568                           ; 3 bytes @ 0x3
  1569  0001C4                     	ds	2
  1570  0001C6                     ___fttol@sign1:
  1571                           	opt stack 0
  1572                           
  1573                           ; 1 bytes @ 0x5
  1574  0001C6                     	ds	1
  1575  0001C7                     ??___ftadd:
  1576  0001C7                     ___fttol@lval:
  1577                           	opt stack 0
  1578                           
  1579                           ; 4 bytes @ 0x6
  1580  0001C7                     	ds	3
  1581  0001CA                     ___ftadd@sign:
  1582                           	opt stack 0
  1583                           
  1584                           ; 1 bytes @ 0x9
  1585  0001CA                     	ds	1
  1586  0001CB                     ___ftadd@exp2:
  1587                           	opt stack 0
  1588  0001CB                     ___fttol@exp1:
  1589                           	opt stack 0
  1590                           
  1591                           ; 1 bytes @ 0xA
  1592  0001CB                     	ds	1
  1593  0001CC                     ___ftadd@exp1:
  1594                           	opt stack 0
  1595                           
  1596                           ; 1 bytes @ 0xB
  1597  0001CC                     	ds	1
  1598  0001CD                     ?___ftsub:
  1599                           	opt stack 0
  1600  0001CD                     ___ftsub@f1:
  1601                           	opt stack 0
  1602                           
  1603                           ; 3 bytes @ 0xC
  1604  0001CD                     	ds	3
  1605  0001D0                     ___ftsub@f2:
  1606                           	opt stack 0
  1607                           
  1608                           ; 3 bytes @ 0xF
  1609  0001D0                     	ds	3
  1610  0001D3                     ?_printf:
  1611                           	opt stack 0
  1612  0001D3                     printf@f:
  1613                           	opt stack 0
  1614                           
  1615                           ; 2 bytes @ 0x12
  1616  0001D3                     	ds	5
  1617  0001D8                     ??_printf:
  1618                           
  1619                           ; 1 bytes @ 0x17
  1620  0001D8                     	ds	6
  1621  0001DE                     _printf$2556:
  1622                           	opt stack 0
  1623                           
  1624                           ; 3 bytes @ 0x1D
  1625  0001DE                     	ds	3
  1626  0001E1                     printf@ap:
  1627                           	opt stack 0
  1628                           
  1629                           ; 2 bytes @ 0x20
  1630  0001E1                     	ds	2
  1631  0001E3                     printf@flag:
  1632                           	opt stack 0
  1633                           
  1634                           ; 2 bytes @ 0x22
  1635  0001E3                     	ds	2
  1636  0001E5                     printf@prec:
  1637                           	opt stack 0
  1638                           
  1639                           ; 2 bytes @ 0x24
  1640  0001E5                     	ds	2
  1641  0001E7                     printf@val:
  1642                           	opt stack 0
  1643                           
  1644                           ; 4 bytes @ 0x26
  1645  0001E7                     	ds	4
  1646  0001EB                     printf@exp:
  1647                           	opt stack 0
  1648                           
  1649                           ; 2 bytes @ 0x2A
  1650  0001EB                     	ds	2
  1651  0001ED                     printf@tmpval:
  1652                           	opt stack 0
  1653                           
  1654                           ; 4 bytes @ 0x2C
  1655  0001ED                     	ds	4
  1656  0001F1                     printf@fval:
  1657                           	opt stack 0
  1658                           
  1659                           ; 3 bytes @ 0x30
  1660  0001F1                     	ds	3
  1661  0001F4                     printf@c:
  1662                           	opt stack 0
  1663                           
  1664                           ; 1 bytes @ 0x33
  1665  0001F4                     	ds	1
  1666  0001F5                     terminal_textAttributes@background_color:
  1667                           	opt stack 0
  1668                           
  1669                           ; 1 bytes @ 0x34
  1670  0001F5                     	ds	1
  1671  0001F6                     terminal_textAttributes@input_attribute:
  1672                           	opt stack 0
  1673                           
  1674                           ; 1 bytes @ 0x35
  1675  0001F6                     	ds	1
  1676  0001F7                     ringBufferLUT@line:
  1677                           	opt stack 0
  1678                           
  1679                           ; 2 bytes @ 0x36
  1680  0001F7                     	ds	2
  1681  0001F9                     ??_terminal_ringBufferPull:
  1682                           
  1683                           ; 1 bytes @ 0x38
  1684  0001F9                     	ds	3
  1685  0001FC                     ??_main:
  1686                           
  1687                           ; 1 bytes @ 0x3B
  1688  0001FC                     	ds	2
  1689                           postinc0	equ	0xFEE
  1690                           wreg	equ	0xFE8
  1691                           
  1692                           	psect	cstackBANK0
  1693  000060                     __pcstackBANK0:
  1694                           	opt stack 0
  1695  000060                     ??_INTERRUPT_InterruptManagerHigh:
  1696                           
  1697                           ; 1 bytes @ 0x0
  1698  000060                     	ds	18
  1699  000072                     ??_heartbeatTimerCallback:
  1700  000072                     ADCC_StartConversion@channel:
  1701                           	opt stack 0
  1702  000072                     TMR7_WriteTimer@timerVal:
  1703                           	opt stack 0
  1704                           
  1705                           ; 2 bytes @ 0x12
  1706  000072                     	ds	1
  1707  000073                     
  1708                           ; 1 bytes @ 0x13
  1709  000073                     	ds	1
  1710  000074                     ??_INTERRUPT_InterruptManagerLow:
  1711  000074                     
  1712                           ; 1 bytes @ 0x14
  1713  000074                     	ds	21
  1714  000089                     ?_strlen:
  1715                           	opt stack 0
  1716  000089                     ?_strcmp:
  1717                           	opt stack 0
  1718  000089                     ?___awmod:
  1719                           	opt stack 0
  1720  000089                     ?___ftpack:
  1721                           	opt stack 0
  1722  000089                     ?___ftneg:
  1723                           	opt stack 0
  1724  000089                     ?__tdiv_to_l_:
  1725                           	opt stack 0
  1726  000089                     ?__div_to_l_:
  1727                           	opt stack 0
  1728  000089                     ?___lldiv:
  1729                           	opt stack 0
  1730  000089                     ?___llmod:
  1731                           	opt stack 0
  1732  000089                     EUSART2_Read@readValue:
  1733                           	opt stack 0
  1734  000089                     EUSART2_Write@txData:
  1735                           	opt stack 0
  1736  000089                     ___awmod@dividend:
  1737                           	opt stack 0
  1738  000089                     strcat@to:
  1739                           	opt stack 0
  1740  000089                     strcmp@s1:
  1741                           	opt stack 0
  1742  000089                     strlen@s:
  1743                           	opt stack 0
  1744  000089                     strncpy@to:
  1745                           	opt stack 0
  1746  000089                     TMR6_SetInterruptHandler@InterruptHandler:
  1747                           	opt stack 0
  1748  000089                     EUSART2_SetTxInterruptHandler@interruptHandler:
  1749                           	opt stack 0
  1750  000089                     EUSART2_SetRxInterruptHandler@interruptHandler:
  1751                           	opt stack 0
  1752  000089                     ADCC_SetADIInterruptHandler@InterruptHandler:
  1753                           	opt stack 0
  1754  000089                     TMR7_SetInterruptHandler@InterruptHandler:
  1755                           	opt stack 0
  1756  000089                     __div_to_l_@f1:
  1757                           	opt stack 0
  1758  000089                     ___ftpack@arg:
  1759                           	opt stack 0
  1760  000089                     __tdiv_to_l_@f1:
  1761                           	opt stack 0
  1762  000089                     ___ftge@ff1:
  1763                           	opt stack 0
  1764  000089                     ___ftneg@f1:
  1765                           	opt stack 0
  1766  000089                     ___lldiv@dividend:
  1767                           	opt stack 0
  1768  000089                     ___llmod@dividend:
  1769                           	opt stack 0
  1770                           
  1771                           ; 4 bytes @ 0x29
  1772  000089                     	ds	1
  1773  00008A                     putch@txData:
  1774                           	opt stack 0
  1775                           
  1776                           ; 1 bytes @ 0x2A
  1777  00008A                     	ds	1
  1778  00008B                     ??_strlen:
  1779  00008B                     ___awmod@divisor:
  1780                           	opt stack 0
  1781  00008B                     strcat@from:
  1782                           	opt stack 0
  1783  00008B                     strcmp@s2:
  1784                           	opt stack 0
  1785  00008B                     strncpy@from:
  1786                           	opt stack 0
  1787                           
  1788                           ; 2 bytes @ 0x2B
  1789  00008B                     	ds	1
  1790  00008C                     ??_TMR7_Initialize:
  1791  00008C                     ___ftpack@exp:
  1792                           	opt stack 0
  1793  00008C                     __div_to_l_@f2:
  1794                           	opt stack 0
  1795  00008C                     __tdiv_to_l_@f2:
  1796                           	opt stack 0
  1797  00008C                     ___ftge@ff2:
  1798                           	opt stack 0
  1799                           
  1800                           ; 3 bytes @ 0x2C
  1801  00008C                     	ds	1
  1802  00008D                     ??_strcmp:
  1803  00008D                     ___awmod@counter:
  1804                           	opt stack 0
  1805  00008D                     ___ftpack@sign:
  1806                           	opt stack 0
  1807  00008D                     strcat@cp:
  1808                           	opt stack 0
  1809  00008D                     strlen@cp:
  1810                           	opt stack 0
  1811  00008D                     strncpy@size:
  1812                           	opt stack 0
  1813  00008D                     ___lldiv@divisor:
  1814                           	opt stack 0
  1815  00008D                     ___llmod@divisor:
  1816                           	opt stack 0
  1817                           
  1818                           ; 4 bytes @ 0x2D
  1819  00008D                     	ds	1
  1820  00008E                     ??___ftpack:
  1821  00008E                     ___awmod@sign:
  1822                           	opt stack 0
  1823  00008E                     strcmp@r:
  1824                           	opt stack 0
  1825                           
  1826                           ; 1 bytes @ 0x2E
  1827  00008E                     	ds	1
  1828  00008F                     ??__tdiv_to_l_:
  1829  00008F                     ??___ftge:
  1830  00008F                     ?___awdiv:
  1831                           	opt stack 0
  1832  00008F                     ___awdiv@dividend:
  1833                           	opt stack 0
  1834  00008F                     strncpy@cp:
  1835                           	opt stack 0
  1836  00008F                     __div_to_l_@quot:
  1837                           	opt stack 0
  1838                           
  1839                           ; 4 bytes @ 0x2F
  1840  00008F                     	ds	2
  1841  000091                     ?___lltoft:
  1842                           	opt stack 0
  1843  000091                     ___llmod@counter:
  1844                           	opt stack 0
  1845  000091                     ___awdiv@divisor:
  1846                           	opt stack 0
  1847  000091                     ___lldiv@quotient:
  1848                           	opt stack 0
  1849  000091                     ___lltoft@c:
  1850                           	opt stack 0
  1851                           
  1852                           ; 4 bytes @ 0x31
  1853  000091                     	ds	1
  1854  000092                     __tdiv_to_l_@quot:
  1855                           	opt stack 0
  1856                           
  1857                           ; 4 bytes @ 0x32
  1858  000092                     	ds	1
  1859  000093                     ___awdiv@counter:
  1860                           	opt stack 0
  1861  000093                     __div_to_l_@cntr:
  1862                           	opt stack 0
  1863                           
  1864                           ; 1 bytes @ 0x33
  1865  000093                     	ds	1
  1866  000094                     ___awdiv@sign:
  1867                           	opt stack 0
  1868  000094                     __div_to_l_@exp1:
  1869                           	opt stack 0
  1870                           
  1871                           ; 1 bytes @ 0x34
  1872  000094                     	ds	1
  1873  000095                     ??___lltoft:
  1874  000095                     ___lldiv@counter:
  1875                           	opt stack 0
  1876  000095                     ___awdiv@quotient:
  1877                           	opt stack 0
  1878                           
  1879                           ; 2 bytes @ 0x35
  1880  000095                     	ds	1
  1881  000096                     __tdiv_to_l_@cntr:
  1882                           	opt stack 0
  1883                           
  1884                           ; 1 bytes @ 0x36
  1885  000096                     	ds	1
  1886  000097                     ?___wmul:
  1887                           	opt stack 0
  1888  000097                     __tdiv_to_l_@exp1:
  1889                           	opt stack 0
  1890  000097                     ___wmul@multiplier:
  1891                           	opt stack 0
  1892                           
  1893                           ; 2 bytes @ 0x37
  1894  000097                     	ds	2
  1895  000099                     ___lltoft@exp:
  1896                           	opt stack 0
  1897  000099                     ___wmul@multiplicand:
  1898                           	opt stack 0
  1899                           
  1900                           ; 2 bytes @ 0x39
  1901  000099                     	ds	2
  1902  00009B                     ___wmul@product:
  1903                           	opt stack 0
  1904                           
  1905                           ; 2 bytes @ 0x3B
  1906  00009B                     	ds	2
  1907  00009D                     ?___ftmul:
  1908                           	opt stack 0
  1909  00009D                     ___ftmul@f1:
  1910                           	opt stack 0
  1911                           
  1912                           ; 3 bytes @ 0x3D
  1913  00009D                     	ds	3
  1914  0000A0                     ___ftmul@f2:
  1915                           	opt stack 0
  1916                           
  1917                           ; 3 bytes @ 0x40
  1918  0000A0                     	ds	3
  1919  0000A3                     ??___ftmul:
  1920                           
  1921                           ; 1 bytes @ 0x43
  1922  0000A3                     	ds	3
  1923  0000A6                     ___ftmul@exp:
  1924                           	opt stack 0
  1925                           
  1926                           ; 1 bytes @ 0x46
  1927  0000A6                     	ds	1
  1928  0000A7                     ___ftmul@f3_as_product:
  1929                           	opt stack 0
  1930                           
  1931                           ; 3 bytes @ 0x47
  1932  0000A7                     	ds	3
  1933  0000AA                     ___ftmul@cntr:
  1934                           	opt stack 0
  1935                           
  1936                           ; 1 bytes @ 0x4A
  1937  0000AA                     	ds	1
  1938  0000AB                     ___ftmul@sign:
  1939                           	opt stack 0
  1940                           
  1941                           ; 1 bytes @ 0x4B
  1942  0000AB                     	ds	1
  1943  0000AC                     ?_fround:
  1944                           	opt stack 0
  1945  0000AC                     ?_scale:
  1946                           	opt stack 0
  1947                           
  1948                           ; 3 bytes @ 0x4C
  1949  0000AC                     	ds	3
  1950  0000AF                     _fround$2554:
  1951                           	opt stack 0
  1952  0000AF                     _scale$2555:
  1953                           	opt stack 0
  1954                           
  1955                           ; 3 bytes @ 0x4F
  1956  0000AF                     	ds	3
  1957  0000B2                     scale@scl:
  1958                           	opt stack 0
  1959  0000B2                     _fround$2553:
  1960                           	opt stack 0
  1961                           
  1962                           ; 3 bytes @ 0x52
  1963  0000B2                     	ds	1
  1964  0000B3                     ?___fttol:
  1965                           	opt stack 0
  1966  0000B3                     ___fttol@f1:
  1967                           	opt stack 0
  1968                           
  1969                           ; 3 bytes @ 0x53
  1970  0000B3                     	ds	2
  1971  0000B5                     fround@prec:
  1972                           	opt stack 0
  1973                           
  1974                           ; 1 bytes @ 0x55
  1975  0000B5                     	ds	1
  1976  0000B6                     
  1977                           ; 1 bytes @ 0x56
  1978  0000B6                     	ds	1
  1979  0000B7                     postinc0	equ	0xFEE
  1980                           wreg	equ	0xFE8
  1981                           
  1982                           ; 1 bytes @ 0x57
  1983                           
  1984                           	psect	cstackCOMRAM
  1985  000001                     __pcstackCOMRAM:
  1986                           	opt stack 0
  1987  000001                     ?_ADCC_GetConversionResult:
  1988                           	opt stack 0
  1989  000001                     ?i2___awmod:
  1990                           	opt stack 0
  1991  000001                     ?i2___ftpack:
  1992                           	opt stack 0
  1993  000001                     ?i2___ftneg:
  1994                           	opt stack 0
  1995  000001                     ?i2__div_to_l_:
  1996                           	opt stack 0
  1997  000001                     ?i2__tdiv_to_l_:
  1998                           	opt stack 0
  1999  000001                     ?i2___lldiv:
  2000                           	opt stack 0
  2001  000001                     ?i2___llmod:
  2002                           	opt stack 0
  2003  000001                     i2EUSART2_Write@txData:
  2004                           	opt stack 0
  2005  000001                     i2___awmod@dividend:
  2006                           	opt stack 0
  2007  000001                     i2__div_to_l_@f1:
  2008                           	opt stack 0
  2009  000001                     i2___ftpack@arg:
  2010                           	opt stack 0
  2011  000001                     i2__tdiv_to_l_@f1:
  2012                           	opt stack 0
  2013  000001                     i2___ftge@ff1:
  2014                           	opt stack 0
  2015  000001                     i2___ftneg@f1:
  2016                           	opt stack 0
  2017  000001                     i2___lldiv@dividend:
  2018                           	opt stack 0
  2019  000001                     i2___llmod@dividend:
  2020                           	opt stack 0
  2021                           
  2022                           ; 4 bytes @ 0x0
  2023  000001                     	ds	1
  2024  000002                     i2putch@txData:
  2025                           	opt stack 0
  2026                           
  2027                           ; 1 bytes @ 0x1
  2028  000002                     	ds	1
  2029  000003                     ??_ADCC_GetConversionResult:
  2030  000003                     i2___awmod@divisor:
  2031                           	opt stack 0
  2032                           
  2033                           ; 2 bytes @ 0x2
  2034  000003                     	ds	1
  2035  000004                     i2___ftpack@exp:
  2036                           	opt stack 0
  2037  000004                     i2__div_to_l_@f2:
  2038                           	opt stack 0
  2039  000004                     i2__tdiv_to_l_@f2:
  2040                           	opt stack 0
  2041  000004                     i2___ftge@ff2:
  2042                           	opt stack 0
  2043                           
  2044                           ; 3 bytes @ 0x3
  2045  000004                     	ds	1
  2046  000005                     i2___awmod@counter:
  2047                           	opt stack 0
  2048  000005                     i2___ftpack@sign:
  2049                           	opt stack 0
  2050  000005                     i2___lldiv@divisor:
  2051                           	opt stack 0
  2052  000005                     i2___llmod@divisor:
  2053                           	opt stack 0
  2054                           
  2055                           ; 4 bytes @ 0x4
  2056  000005                     	ds	1
  2057  000006                     ??i2___ftpack:
  2058  000006                     i2___awmod@sign:
  2059                           	opt stack 0
  2060                           
  2061                           ; 1 bytes @ 0x5
  2062  000006                     	ds	1
  2063  000007                     ??i2__tdiv_to_l_:
  2064  000007                     ??i2___ftge:
  2065  000007                     ?i2___awdiv:
  2066                           	opt stack 0
  2067  000007                     i2___awdiv@dividend:
  2068                           	opt stack 0
  2069  000007                     i2__div_to_l_@quot:
  2070                           	opt stack 0
  2071                           
  2072                           ; 4 bytes @ 0x6
  2073  000007                     	ds	2
  2074  000009                     ?___lwtoft:
  2075                           	opt stack 0
  2076  000009                     ?i2___lltoft:
  2077                           	opt stack 0
  2078  000009                     i2___llmod@counter:
  2079                           	opt stack 0
  2080  000009                     ___lwtoft@c:
  2081                           	opt stack 0
  2082  000009                     i2___awdiv@divisor:
  2083                           	opt stack 0
  2084  000009                     i2___lldiv@quotient:
  2085                           	opt stack 0
  2086  000009                     i2___lltoft@c:
  2087                           	opt stack 0
  2088                           
  2089                           ; 4 bytes @ 0x8
  2090  000009                     	ds	1
  2091  00000A                     i2__tdiv_to_l_@quot:
  2092                           	opt stack 0
  2093                           
  2094                           ; 4 bytes @ 0x9
  2095  00000A                     	ds	1
  2096  00000B                     i2___awdiv@counter:
  2097                           	opt stack 0
  2098  00000B                     i2__div_to_l_@cntr:
  2099                           	opt stack 0
  2100                           
  2101                           ; 1 bytes @ 0xA
  2102  00000B                     	ds	1
  2103  00000C                     i2___awdiv@sign:
  2104                           	opt stack 0
  2105  00000C                     i2__div_to_l_@exp1:
  2106                           	opt stack 0
  2107                           
  2108                           ; 1 bytes @ 0xB
  2109  00000C                     	ds	1
  2110  00000D                     ??i2___lltoft:
  2111  00000D                     i2___lldiv@counter:
  2112                           	opt stack 0
  2113  00000D                     i2___awdiv@quotient:
  2114                           	opt stack 0
  2115                           
  2116                           ; 2 bytes @ 0xC
  2117  00000D                     	ds	1
  2118  00000E                     i2__tdiv_to_l_@cntr:
  2119                           	opt stack 0
  2120                           
  2121                           ; 1 bytes @ 0xD
  2122  00000E                     	ds	1
  2123  00000F                     ?i2___wmul:
  2124                           	opt stack 0
  2125  00000F                     i2__tdiv_to_l_@exp1:
  2126                           	opt stack 0
  2127  00000F                     i2___wmul@multiplier:
  2128                           	opt stack 0
  2129                           
  2130                           ; 2 bytes @ 0xE
  2131  00000F                     	ds	2
  2132  000011                     i2___lltoft@exp:
  2133                           	opt stack 0
  2134  000011                     i2___wmul@multiplicand:
  2135                           	opt stack 0
  2136                           
  2137                           ; 2 bytes @ 0x10
  2138  000011                     	ds	2
  2139  000013                     i2___wmul@product:
  2140                           	opt stack 0
  2141                           
  2142                           ; 2 bytes @ 0x12
  2143  000013                     	ds	2
  2144  000015                     ?i2___ftmul:
  2145                           	opt stack 0
  2146  000015                     i2___ftmul@f1:
  2147                           	opt stack 0
  2148                           
  2149                           ; 3 bytes @ 0x14
  2150  000015                     	ds	3
  2151  000018                     i2___ftmul@f2:
  2152                           	opt stack 0
  2153                           
  2154                           ; 3 bytes @ 0x17
  2155  000018                     	ds	3
  2156  00001B                     ??i2___ftmul:
  2157                           
  2158                           ; 1 bytes @ 0x1A
  2159  00001B                     	ds	3
  2160  00001E                     i2___ftmul@exp:
  2161                           	opt stack 0
  2162                           
  2163                           ; 1 bytes @ 0x1D
  2164  00001E                     	ds	1
  2165  00001F                     i2___ftmul@f3_as_product:
  2166                           	opt stack 0
  2167                           
  2168                           ; 3 bytes @ 0x1E
  2169  00001F                     	ds	3
  2170  000022                     i2___ftmul@cntr:
  2171                           	opt stack 0
  2172                           
  2173                           ; 1 bytes @ 0x21
  2174  000022                     	ds	1
  2175  000023                     i2___ftmul@sign:
  2176                           	opt stack 0
  2177                           
  2178                           ; 1 bytes @ 0x22
  2179  000023                     	ds	1
  2180  000024                     ?i2_fround:
  2181                           	opt stack 0
  2182  000024                     ?i2_scale:
  2183                           	opt stack 0
  2184  000024                     ?i2___fttol:
  2185                           	opt stack 0
  2186  000024                     ADCCallback@currentADCChannel:
  2187                           	opt stack 0
  2188  000024                     i2___fttol@f1:
  2189                           	opt stack 0
  2190                           
  2191                           ; 3 bytes @ 0x23
  2192  000024                     	ds	1
  2193  000025                     
  2194                           ; 1 bytes @ 0x24
  2195  000025                     	ds	2
  2196  000027                     i2_fround$2714:
  2197                           	opt stack 0
  2198  000027                     i2_scale$2715:
  2199                           	opt stack 0
  2200                           
  2201                           ; 3 bytes @ 0x26
  2202  000027                     	ds	1
  2203  000028                     ??i2___fttol:
  2204                           
  2205                           ; 1 bytes @ 0x27
  2206  000028                     	ds	2
  2207  00002A                     i2scale@scl:
  2208                           	opt stack 0
  2209  00002A                     i2_fround$2713:
  2210                           	opt stack 0
  2211                           
  2212                           ; 3 bytes @ 0x29
  2213  00002A                     	ds	3
  2214  00002D                     i2fround@prec:
  2215                           	opt stack 0
  2216  00002D                     i2___fttol@sign1:
  2217                           	opt stack 0
  2218                           
  2219                           ; 1 bytes @ 0x2C
  2220  00002D                     	ds	1
  2221  00002E                     ?i2___ftadd:
  2222                           	opt stack 0
  2223  00002E                     i2___ftadd@f1:
  2224                           	opt stack 0
  2225  00002E                     i2___fttol@lval:
  2226                           	opt stack 0
  2227                           
  2228                           ; 4 bytes @ 0x2D
  2229  00002E                     	ds	3
  2230  000031                     i2___ftadd@f2:
  2231                           	opt stack 0
  2232                           
  2233                           ; 3 bytes @ 0x30
  2234  000031                     	ds	1
  2235  000032                     i2___fttol@exp1:
  2236                           	opt stack 0
  2237                           
  2238                           ; 1 bytes @ 0x31
  2239  000032                     	ds	2
  2240  000034                     ??i2___ftadd:
  2241                           
  2242                           ; 1 bytes @ 0x33
  2243  000034                     	ds	3
  2244  000037                     i2___ftadd@sign:
  2245                           	opt stack 0
  2246                           
  2247                           ; 1 bytes @ 0x36
  2248  000037                     	ds	1
  2249  000038                     i2___ftadd@exp2:
  2250                           	opt stack 0
  2251                           
  2252                           ; 1 bytes @ 0x37
  2253  000038                     	ds	1
  2254  000039                     i2___ftadd@exp1:
  2255                           	opt stack 0
  2256                           
  2257                           ; 1 bytes @ 0x38
  2258  000039                     	ds	1
  2259  00003A                     ?i2___ftsub:
  2260                           	opt stack 0
  2261  00003A                     i2___ftsub@f1:
  2262                           	opt stack 0
  2263                           
  2264                           ; 3 bytes @ 0x39
  2265  00003A                     	ds	3
  2266  00003D                     i2___ftsub@f2:
  2267                           	opt stack 0
  2268                           
  2269                           ; 3 bytes @ 0x3C
  2270  00003D                     	ds	3
  2271  000040                     ?i2_printf:
  2272                           	opt stack 0
  2273  000040                     i2printf@f:
  2274                           	opt stack 0
  2275                           
  2276                           ; 2 bytes @ 0x3F
  2277  000040                     	ds	2
  2278  000042                     ??i2_printf:
  2279                           
  2280                           ; 1 bytes @ 0x41
  2281  000042                     	ds	6
  2282  000048                     i2_printf$2716:
  2283                           	opt stack 0
  2284                           
  2285                           ; 3 bytes @ 0x47
  2286  000048                     	ds	3
  2287  00004B                     i2printf@ap:
  2288                           	opt stack 0
  2289                           
  2290                           ; 2 bytes @ 0x4A
  2291  00004B                     	ds	2
  2292  00004D                     i2printf@flag:
  2293                           	opt stack 0
  2294                           
  2295                           ; 2 bytes @ 0x4C
  2296  00004D                     	ds	2
  2297  00004F                     i2printf@prec:
  2298                           	opt stack 0
  2299                           
  2300                           ; 2 bytes @ 0x4E
  2301  00004F                     	ds	2
  2302  000051                     i2printf@val:
  2303                           	opt stack 0
  2304                           
  2305                           ; 4 bytes @ 0x50
  2306  000051                     	ds	4
  2307  000055                     i2printf@exp:
  2308                           	opt stack 0
  2309                           
  2310                           ; 2 bytes @ 0x54
  2311  000055                     	ds	2
  2312  000057                     i2printf@tmpval:
  2313                           	opt stack 0
  2314                           
  2315                           ; 4 bytes @ 0x56
  2316  000057                     	ds	4
  2317  00005B                     i2printf@fval:
  2318                           	opt stack 0
  2319                           
  2320                           ; 3 bytes @ 0x5A
  2321  00005B                     	ds	3
  2322  00005E                     i2printf@c:
  2323                           	opt stack 0
  2324                           
  2325                           ; 1 bytes @ 0x5D
  2326  00005E                     	ds	1
  2327  00005F                     postinc0	equ	0xFEE
  2328                           wreg	equ	0xFE8
  2329                           
  2330                           ; 1 bytes @ 0x5E
  2331 ;;
  2332 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2333 ;;
  2334 ;; *************** function _main *****************
  2335 ;; Defined at:
  2336 ;;		line 119 in file "main.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;		None
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;		None
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      void 
  2343 ;; Registers used:
  2344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2352 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2353 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2354 ;;Total ram usage:        2 bytes
  2355 ;; Hardware stack levels required when called:   18
  2356 ;; This function calls:
  2357 ;;		_ADCC_SetADIInterruptHandler
  2358 ;;		_SYSTEM_Initialize
  2359 ;;		_TMR6_SetInterruptHandler
  2360 ;;		_TMR7_SetInterruptHandler
  2361 ;;		_terminal_clearTerminal
  2362 ;;		_terminal_ringBufferPull
  2363 ;;		_terminal_setCursorHome
  2364 ;;		_terminal_textAttributesReset
  2365 ;; This function is called by:
  2366 ;;		Startup code after reset
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text0
  2371  0134EA                     __ptext0:
  2372                           	opt stack 0
  2373  0134EA                     _main:
  2374                           	opt stack 13
  2375                           
  2376                           ;main.c: 124: _delay((unsigned long)((250)*(64000000/4000.0)));
  2377                           
  2378                           ;incstack = 0
  2379  0134EA  0E15               	movlw	21
  2380  0134EC  0101               	movlb	1	; () banked
  2381  0134EE  6FFD               	movwf	(??_main+1)& (0+255),b
  2382  0134F0  0E4B               	movlw	75
  2383  0134F2  6FFC               	movwf	??_main& (0+255),b
  2384  0134F4  0EBE               	movlw	190
  2385  0134F6                     u10417:
  2386  0134F6  2EE8               	decfsz	wreg,f,c
  2387  0134F8  D7FE               	bra	u10417
  2388  0134FA  2FFC               	decfsz	??_main& (0+255),f,b
  2389  0134FC  D7FC               	bra	u10417
  2390  0134FE  2FFD               	decfsz	(??_main+1)& (0+255),f,b
  2391  013500  D7FA               	bra	u10417
  2392  013502  F000               	nop	
  2393                           
  2394                           ;main.c: 127: SYSTEM_Initialize();
  2395  013504  EC7A  F09E         	call	_SYSTEM_Initialize	;wreg free
  2396                           
  2397                           ;main.c: 130: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  2398  013508  0E38               	movlw	low _heartbeatTimerCallback
  2399  01350A  0100               	movlb	0	; () banked
  2400  01350C  6F89               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  2401  01350E  0E3D               	movlw	high _heartbeatTimerCallback
  2402  013510  6F8A               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2403  013512  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  2404  013514  6F8B               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  2405  013516  EC02  F09F         	call	_TMR6_SetInterruptHandler	;wreg free
  2406                           
  2407                           ;main.c: 133: ADCC_SetADIInterruptHandler(ADCCallback);
  2408  01351A  0EDA               	movlw	low _ADCCallback
  2409  01351C  0100               	movlb	0	; () banked
  2410  01351E  6F89               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  2411  013520  0E31               	movlw	high _ADCCallback
  2412  013522  6F8A               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  2413  013524  0E01               	movlw	low (_ADCCallback shr (0+16))
  2414  013526  6F8B               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  2415  013528  EC17  F09F         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2416                           
  2417                           ;main.c: 136: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  2418  01352C  0E16               	movlw	low _acquisitionTimerCallback
  2419  01352E  0100               	movlb	0	; () banked
  2420  013530  6F89               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  2421  013532  0E3D               	movlw	high _acquisitionTimerCallback
  2422  013534  6F8A               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2423  013536  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  2424  013538  6F8B               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  2425  01353A  ECFB  F09E         	call	_TMR7_SetInterruptHandler	;wreg free
  2426                           
  2427                           ;main.c: 139: (INTCONbits.GIEH = 1);
  2428  01353E  8EF2               	bsf	intcon,7,c	;volatile
  2429                           
  2430                           ;main.c: 142: (INTCONbits.GIEL = 1);
  2431  013540  8CF2               	bsf	intcon,6,c	;volatile
  2432                           
  2433                           ;main.c: 146: terminal_clearTerminal();
  2434  013542  ECE4  F09E         	call	_terminal_clearTerminal	;wreg free
  2435                           
  2436                           ;main.c: 147: terminal_setCursorHome();
  2437  013546  ECDC  F09E         	call	_terminal_setCursorHome	;wreg free
  2438                           
  2439                           ;main.c: 148: terminal_textAttributesReset();
  2440  01354A  ECD3  F09E         	call	_terminal_textAttributesReset	;wreg free
  2441  01354E                     
  2442                           ;main.c: 152: {
  2443                           ;main.c: 155: if (eusart2RxStringReady) {
  2444  01354E  0100               	movlb	0	; () banked
  2445  013550  A1D6               	btfss	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  2446  013552  D7FD               	goto	l468
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;main.c: 157: terminal_ringBufferPull();
  2450  013554  ECB1  F091         	call	_terminal_ringBufferPull	;wreg free
  2451  013558  D7FA               	goto	l468
  2452  01355A                     __end_of_main:
  2453                           	opt stack 0
  2454                           intcon	equ	0xFF2
  2455                           postinc0	equ	0xFEE
  2456                           wreg	equ	0xFE8
  2457                           
  2458 ;; *************** function _terminal_setCursorHome *****************
  2459 ;; Defined at:
  2460 ;;		line 85 in file "ring_buffer_interface.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2478 ;;Total ram usage:        0 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:   14
  2481 ;; This function calls:
  2482 ;;		_printf
  2483 ;; This function is called by:
  2484 ;;		_main
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text1
  2489  013DB8                     __ptext1:
  2490                           	opt stack 0
  2491  013DB8                     _terminal_setCursorHome:
  2492                           	opt stack 16
  2493                           
  2494                           ;ring_buffer_interface.c: 86: printf("\033[H");
  2495                           
  2496                           ;incstack = 0
  2497  013DB8  0EB6               	movlw	low STR_3
  2498  013DBA  0101               	movlb	1	; () banked
  2499  013DBC  6FD3               	movwf	printf@f& (0+255),b
  2500  013DBE  0EFF               	movlw	high STR_3
  2501  013DC0  6FD4               	movwf	(printf@f+1)& (0+255),b
  2502  013DC2  EC00  F080         	call	_printf	;wreg free
  2503  013DC6  0012               	return		;funcret
  2504  013DC8                     __end_of_terminal_setCursorHome:
  2505                           	opt stack 0
  2506                           intcon	equ	0xFF2
  2507                           postinc0	equ	0xFEE
  2508                           wreg	equ	0xFE8
  2509                           
  2510 ;; *************** function _terminal_ringBufferPull *****************
  2511 ;; Defined at:
  2512 ;;		line 12 in file "ring_buffer_interface.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  index           2   18[BANK2 ] int 
  2517 ;;  index           2   20[BANK2 ] int 
  2518 ;;  charNumber      2   16[BANK2 ] int 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  1    wreg      void 
  2521 ;; Registers used:
  2522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2529 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0
  2530 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2531 ;;      Totals:         0       0       3       6       0       0       0       0       0       0       0       0       
      +0       0       0
  2532 ;;Total ram usage:        9 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:   17
  2535 ;; This function calls:
  2536 ;;		_EUSART2_Read
  2537 ;;		_ringBufferLUT
  2538 ;;		_strlen
  2539 ;; This function is called by:
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text2
  2545  012362                     __ptext2:
  2546                           	opt stack 0
  2547  012362                     _terminal_ringBufferPull:
  2548                           	opt stack 13
  2549                           
  2550                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  2551                           
  2552                           ;incstack = 0
  2553  012362  C0D1  F210         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  2554  012366  0102               	movlb	2	; () banked
  2555  012368  6B11               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  2556                           
  2557                           ; BSR set to: 2
  2558                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  2559  01236A  0E00               	movlw	0
  2560  01236C  6F15               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  2561  01236E  0E00               	movlw	0
  2562  012370  6F14               	movwf	terminal_ringBufferPull@index& (0+255),b
  2563  012372                     l8289:
  2564                           
  2565                           ; BSR set to: 2
  2566  012372  BF15               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  2567  012374  D006               	goto	l507
  2568  012376  5115               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  2569  012378  E10F               	bnz	l8299
  2570  01237A  0E40               	movlw	64
  2571  01237C  5D14               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  2572  01237E  B0D8               	btfsc	status,0,c
  2573  012380  D00B               	goto	u10240
  2574  012382                     l507:
  2575                           
  2576                           ; BSR set to: 2
  2577                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  2578                           
  2579                           ; BSR set to: 2
  2580  012382  0E81               	movlw	low _line
  2581  012384  2514               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  2582  012386  6ED9               	movwf	fsr2l,c
  2583  012388  0E01               	movlw	high _line
  2584  01238A  2115               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  2585  01238C  6EDA               	movwf	fsr2h,c
  2586  01238E  0E00               	movlw	0
  2587  012390  6EDF               	movwf	indf2,c
  2588                           
  2589                           ; BSR set to: 2
  2590  012392  4B14               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  2591  012394  2B15               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  2592  012396  D7ED               	goto	l8289
  2593  012398                     u10240:
  2594  012398                     l8299:
  2595                           
  2596                           ; BSR set to: 2
  2597                           ;ring_buffer_interface.c: 21: }
  2598                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  2599  012398  0E00               	movlw	0
  2600  01239A  6F13               	movwf	(terminal_ringBufferPull@index_1170+1)& (0+255),b
  2601  01239C  0E00               	movlw	0
  2602  01239E  6F12               	movwf	terminal_ringBufferPull@index_1170& (0+255),b
  2603  0123A0  D00F               	goto	l509
  2604  0123A2                     
  2605                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  2606                           
  2607                           ; BSR set to: 2
  2608  0123A2  ECFE  F09C         	call	_EUSART2_Read	;wreg free
  2609  0123A6  0101               	movlb	1	; () banked
  2610  0123A8  6FF9               	movwf	??_terminal_ringBufferPull& (0+255),b
  2611  0123AA  0E81               	movlw	low _line
  2612  0123AC  0102               	movlb	2	; () banked
  2613  0123AE  2512               	addwf	terminal_ringBufferPull@index_1170& (0+255),w,b
  2614  0123B0  6ED9               	movwf	fsr2l,c
  2615  0123B2  0E01               	movlw	high _line
  2616  0123B4  2113               	addwfc	(terminal_ringBufferPull@index_1170+1)& (0+255),w,b
  2617  0123B6  6EDA               	movwf	fsr2h,c
  2618  0123B8  C1F9  FFDF         	movff	??_terminal_ringBufferPull,indf2
  2619                           
  2620                           ; BSR set to: 2
  2621  0123BC  4B12               	infsnz	terminal_ringBufferPull@index_1170& (0+255),f,b
  2622  0123BE  2B13               	incf	(terminal_ringBufferPull@index_1170+1)& (0+255),f,b
  2623  0123C0                     l509:
  2624                           
  2625                           ; BSR set to: 2
  2626                           
  2627                           ; BSR set to: 2
  2628  0123C0  5110               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  2629  0123C2  5D12               	subwf	terminal_ringBufferPull@index_1170& (0+255),w,b
  2630  0123C4  5113               	movf	(terminal_ringBufferPull@index_1170+1)& (0+255),w,b
  2631  0123C6  0A80               	xorlw	128
  2632  0123C8  0101               	movlb	1	; () banked
  2633  0123CA  6FF9               	movwf	??_terminal_ringBufferPull& (0+255),b
  2634  0123CC  0102               	movlb	2	; () banked
  2635  0123CE  5111               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  2636  0123D0  0A80               	xorlw	128
  2637  0123D2  0101               	movlb	1	; () banked
  2638  0123D4  59F9               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  2639  0123D6  A0D8               	btfss	status,0,c
  2640  0123D8  D7E4               	goto	l510
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;ring_buffer_interface.c: 28: }
  2644                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  2645  0123DA  C180  F0D2         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  2646                           
  2647                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  2648                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  2649  0123DE  D01C               	goto	l512
  2650  0123E0                     
  2651                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  2652                           
  2653                           ; BSR set to: 1
  2654  0123E0  0EFF               	movlw	255
  2655  0123E2  0101               	movlb	1	; () banked
  2656  0123E4  6FF9               	movwf	??_terminal_ringBufferPull& (0+255),b
  2657  0123E6  0EFF               	movlw	255
  2658  0123E8  6FFA               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  2659  0123EA  0E81               	movlw	low _line
  2660  0123EC  0100               	movlb	0	; () banked
  2661  0123EE  6F89               	movwf	strlen@s& (0+255),b
  2662  0123F0  0E01               	movlw	high _line
  2663  0123F2  6F8A               	movwf	(strlen@s+1)& (0+255),b
  2664  0123F4  EC61  F09D         	call	_strlen	;wreg free
  2665  0123F8  0101               	movlb	1	; () banked
  2666  0123FA  51F9               	movf	??_terminal_ringBufferPull& (0+255),w,b
  2667  0123FC  0100               	movlb	0	; () banked
  2668  0123FE  2789               	addwf	?_strlen& (0+255),f,b
  2669  012400  0101               	movlb	1	; () banked
  2670  012402  51FA               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  2671  012404  0100               	movlb	0	; () banked
  2672  012406  238A               	addwfc	(?_strlen+1)& (0+255),f,b
  2673  012408  0E81               	movlw	low _line
  2674  01240A  2589               	addwf	?_strlen& (0+255),w,b
  2675  01240C  6ED9               	movwf	fsr2l,c
  2676  01240E  0E01               	movlw	high _line
  2677  012410  218A               	addwfc	(?_strlen+1)& (0+255),w,b
  2678  012412  6EDA               	movwf	fsr2h,c
  2679  012414  0E00               	movlw	0
  2680  012416  6EDF               	movwf	indf2,c
  2681  012418                     l512:
  2682  012418  0EFF               	movlw	255
  2683  01241A  0101               	movlb	1	; () banked
  2684  01241C  6FF9               	movwf	??_terminal_ringBufferPull& (0+255),b
  2685  01241E  0EFF               	movlw	255
  2686  012420  6FFA               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  2687  012422  0E81               	movlw	low _line
  2688  012424  0100               	movlb	0	; () banked
  2689  012426  6F89               	movwf	strlen@s& (0+255),b
  2690  012428  0E01               	movlw	high _line
  2691  01242A  6F8A               	movwf	(strlen@s+1)& (0+255),b
  2692  01242C  EC61  F09D         	call	_strlen	;wreg free
  2693  012430  0101               	movlb	1	; () banked
  2694  012432  51F9               	movf	??_terminal_ringBufferPull& (0+255),w,b
  2695  012434  0100               	movlb	0	; () banked
  2696  012436  2789               	addwf	?_strlen& (0+255),f,b
  2697  012438  0101               	movlb	1	; () banked
  2698  01243A  51FA               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  2699  01243C  0100               	movlb	0	; () banked
  2700  01243E  238A               	addwfc	(?_strlen+1)& (0+255),f,b
  2701  012440  0E81               	movlw	low _line
  2702  012442  2589               	addwf	?_strlen& (0+255),w,b
  2703  012444  6ED9               	movwf	fsr2l,c
  2704  012446  0E01               	movlw	high _line
  2705  012448  218A               	addwfc	(?_strlen+1)& (0+255),w,b
  2706  01244A  6EDA               	movwf	fsr2h,c
  2707  01244C  0E0A               	movlw	10
  2708  01244E  18DE               	xorwf	postinc2,w,c
  2709  012450  B4D8               	btfsc	status,2,c
  2710  012452  D7C6               	goto	l513
  2711                           
  2712                           ; BSR set to: 0
  2713  012454  0EFF               	movlw	255
  2714  012456  0101               	movlb	1	; () banked
  2715  012458  6FF9               	movwf	??_terminal_ringBufferPull& (0+255),b
  2716  01245A  0EFF               	movlw	255
  2717  01245C  6FFA               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  2718  01245E  0E81               	movlw	low _line
  2719  012460  0100               	movlb	0	; () banked
  2720  012462  6F89               	movwf	strlen@s& (0+255),b
  2721  012464  0E01               	movlw	high _line
  2722  012466  6F8A               	movwf	(strlen@s+1)& (0+255),b
  2723  012468  EC61  F09D         	call	_strlen	;wreg free
  2724  01246C  0101               	movlb	1	; () banked
  2725  01246E  51F9               	movf	??_terminal_ringBufferPull& (0+255),w,b
  2726  012470  0100               	movlb	0	; () banked
  2727  012472  2789               	addwf	?_strlen& (0+255),f,b
  2728  012474  0101               	movlb	1	; () banked
  2729  012476  51FA               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  2730  012478  0100               	movlb	0	; () banked
  2731  01247A  238A               	addwfc	(?_strlen+1)& (0+255),f,b
  2732  01247C  0E81               	movlw	low _line
  2733  01247E  2589               	addwf	?_strlen& (0+255),w,b
  2734  012480  6ED9               	movwf	fsr2l,c
  2735  012482  0E01               	movlw	high _line
  2736  012484  218A               	addwfc	(?_strlen+1)& (0+255),w,b
  2737  012486  6EDA               	movwf	fsr2h,c
  2738  012488  0E0D               	movlw	13
  2739  01248A  18DE               	xorwf	postinc2,w,c
  2740  01248C  B4D8               	btfsc	status,2,c
  2741  01248E  D7A8               	goto	l513
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;ring_buffer_interface.c: 40: }
  2745                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  2746  012490  91D6               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  2750  012492  0E81               	movlw	low _line
  2751  012494  0101               	movlb	1	; () banked
  2752  012496  6FF7               	movwf	ringBufferLUT@line& (0+255),b
  2753  012498  0E01               	movlw	high _line
  2754  01249A  6FF8               	movwf	(ringBufferLUT@line+1)& (0+255),b
  2755  01249C  ECE3  F08E         	call	_ringBufferLUT	;wreg free
  2756  0124A0  0012               	return		;funcret
  2757  0124A2                     __end_of_terminal_ringBufferPull:
  2758                           	opt stack 0
  2759                           intcon	equ	0xFF2
  2760                           postinc0	equ	0xFEE
  2761                           wreg	equ	0xFE8
  2762                           indf2	equ	0xFDF
  2763                           postinc2	equ	0xFDE
  2764                           fsr2h	equ	0xFDA
  2765                           fsr2l	equ	0xFD9
  2766                           status	equ	0xFD8
  2767                           
  2768 ;; *************** function _strlen *****************
  2769 ;; Defined at:
  2770 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  s               2   41[BANK0 ] PTR const unsigned char 
  2773 ;;		 -> line(64), 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  cp              2   45[BANK0 ] PTR const unsigned char 
  2776 ;;		 -> line(64), 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  2   41[BANK0 ] unsigned int 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2786 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2787 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2788 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2789 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2790 ;;Total ram usage:        6 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:   10
  2793 ;; This function calls:
  2794 ;;		Nothing
  2795 ;; This function is called by:
  2796 ;;		_terminal_ringBufferPull
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text3
  2801  013AC2                     __ptext3:
  2802                           	opt stack 0
  2803  013AC2                     _strlen:
  2804                           	opt stack 19
  2805                           
  2806                           ;incstack = 0
  2807  013AC2  C089  F08D         	movff	strlen@s,strlen@cp
  2808  013AC6  C08A  F08E         	movff	strlen@s+1,strlen@cp+1
  2809  013ACA  D003               	goto	l1531
  2810  013ACC  0100               	movlb	0	; () banked
  2811  013ACE  4B8D               	infsnz	strlen@cp& (0+255),f,b
  2812  013AD0  2B8E               	incf	(strlen@cp+1)& (0+255),f,b
  2813  013AD2                     l1531:
  2814                           
  2815                           ; BSR set to: 0
  2816  013AD2  C08D  FFD9         	movff	strlen@cp,fsr2l
  2817  013AD6  C08E  FFDA         	movff	strlen@cp+1,fsr2h
  2818  013ADA  50DF               	movf	indf2,w,c
  2819  013ADC  A4D8               	btfss	status,2,c
  2820  013ADE  D7F6               	goto	l1532
  2821  013AE0  C089  F08B         	movff	strlen@s,??_strlen
  2822  013AE4  C08A  F08C         	movff	strlen@s+1,??_strlen+1
  2823  013AE8  0100               	movlb	0	; () banked
  2824  013AEA  1F8B               	comf	??_strlen& (0+255),f,b
  2825  013AEC  1F8C               	comf	(??_strlen+1)& (0+255),f,b
  2826  013AEE  4B8B               	infsnz	??_strlen& (0+255),f,b
  2827  013AF0  2B8C               	incf	(??_strlen+1)& (0+255),f,b
  2828  013AF2  518D               	movf	strlen@cp& (0+255),w,b
  2829  013AF4  258B               	addwf	??_strlen& (0+255),w,b
  2830  013AF6  6F89               	movwf	?_strlen& (0+255),b
  2831  013AF8  518E               	movf	(strlen@cp+1)& (0+255),w,b
  2832  013AFA  218C               	addwfc	(??_strlen+1)& (0+255),w,b
  2833  013AFC  6F8A               	movwf	(?_strlen+1)& (0+255),b
  2834  013AFE  0012               	return	
  2835  013B00                     __end_of_strlen:
  2836                           	opt stack 0
  2837                           intcon	equ	0xFF2
  2838                           postinc0	equ	0xFEE
  2839                           wreg	equ	0xFE8
  2840                           indf2	equ	0xFDF
  2841                           postinc2	equ	0xFDE
  2842                           fsr2h	equ	0xFDA
  2843                           fsr2l	equ	0xFD9
  2844                           status	equ	0xFD8
  2845                           
  2846 ;; *************** function _ringBufferLUT *****************
  2847 ;; Defined at:
  2848 ;;		line 16 in file "ring_buffer_LUT.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  line            2   54[BANK1 ] PTR unsigned char 
  2851 ;;		 -> line(64), 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2863 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;Total ram usage:        2 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:   16
  2870 ;; This function calls:
  2871 ;;		_printf
  2872 ;;		_strcmp
  2873 ;;		_terminal_textAttributes
  2874 ;;		_terminal_textAttributesReset
  2875 ;; This function is called by:
  2876 ;;		_terminal_ringBufferPull
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text4
  2881  011DC6                     __ptext4:
  2882                           	opt stack 0
  2883  011DC6                     _ringBufferLUT:
  2884                           	opt stack 13
  2885                           
  2886                           ;ring_buffer_LUT.c: 22: if((0 == strcmp(line, "Reset"))) {
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;incstack = 0
  2890  011DC6  C1F7  F089         	movff	ringBufferLUT@line,strcmp@s1
  2891  011DCA  C1F8  F08A         	movff	ringBufferLUT@line+1,strcmp@s1+1
  2892  011DCE  0EA2               	movlw	low STR_41
  2893  011DD0  0100               	movlb	0	; () banked
  2894  011DD2  6F8B               	movwf	strcmp@s2& (0+255),b
  2895  011DD4  0EFF               	movlw	high STR_41
  2896  011DD6  6F8C               	movwf	(strcmp@s2+1)& (0+255),b
  2897  011DD8  EC42  F09C         	call	_strcmp	;wreg free
  2898  011DDC  0100               	movlb	0	; () banked
  2899  011DDE  5189               	movf	?_strcmp& (0+255),w,b
  2900  011DE0  118A               	iorwf	(?_strcmp+1)& (0+255),w,b
  2901  011DE2  A4D8               	btfss	status,2,c
  2902  011DE4  D010               	goto	l594
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;ring_buffer_LUT.c: 25: printf("\033[2J");
  2906  011DE6  0EAD               	movlw	low STR_2
  2907  011DE8  0101               	movlb	1	; () banked
  2908  011DEA  6FD3               	movwf	printf@f& (0+255),b
  2909  011DEC  0EFF               	movlw	high STR_2
  2910  011DEE  6FD4               	movwf	(printf@f+1)& (0+255),b
  2911  011DF0  EC00  F080         	call	_printf	;wreg free
  2912                           
  2913                           ;ring_buffer_LUT.c: 28: printf("\033[H");
  2914  011DF4  0EB6               	movlw	low STR_3
  2915  011DF6  0101               	movlb	1	; () banked
  2916  011DF8  6FD3               	movwf	printf@f& (0+255),b
  2917  011DFA  0EFF               	movlw	high STR_3
  2918  011DFC  6FD4               	movwf	(printf@f+1)& (0+255),b
  2919  011DFE  EC00  F080         	call	_printf	;wreg free
  2920  011E02  00FF               	reset		;# 
  2921                           
  2922                           ;ring_buffer_LUT.c: 33: }
  2923  011E04  0012               	return	
  2924  011E06                     l594:
  2925                           
  2926                           ;ring_buffer_LUT.c: 36: else if((0 == strcmp(line, "Clear"))) {
  2927  011E06  C1F7  F089         	movff	ringBufferLUT@line,strcmp@s1
  2928  011E0A  C1F8  F08A         	movff	ringBufferLUT@line+1,strcmp@s1+1
  2929  011E0E  0E9C               	movlw	low STR_44
  2930  011E10  0100               	movlb	0	; () banked
  2931  011E12  6F8B               	movwf	strcmp@s2& (0+255),b
  2932  011E14  0EFF               	movlw	high STR_44
  2933  011E16  6F8C               	movwf	(strcmp@s2+1)& (0+255),b
  2934  011E18  EC42  F09C         	call	_strcmp	;wreg free
  2935  011E1C  0100               	movlb	0	; () banked
  2936  011E1E  5189               	movf	?_strcmp& (0+255),w,b
  2937  011E20  118A               	iorwf	(?_strcmp+1)& (0+255),w,b
  2938  011E22  A4D8               	btfss	status,2,c
  2939  011E24  D00F               	goto	l596
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;ring_buffer_LUT.c: 39: printf("\033[2J");
  2943  011E26  0EAD               	movlw	low STR_2
  2944  011E28  0101               	movlb	1	; () banked
  2945  011E2A  6FD3               	movwf	printf@f& (0+255),b
  2946  011E2C  0EFF               	movlw	high STR_2
  2947  011E2E  6FD4               	movwf	(printf@f+1)& (0+255),b
  2948  011E30  EC00  F080         	call	_printf	;wreg free
  2949                           
  2950                           ;ring_buffer_LUT.c: 42: printf("\033[H");
  2951  011E34  0EB6               	movlw	low STR_3
  2952  011E36  0101               	movlb	1	; () banked
  2953  011E38  6FD3               	movwf	printf@f& (0+255),b
  2954  011E3A  0EFF               	movlw	high STR_3
  2955  011E3C  6FD4               	movwf	(printf@f+1)& (0+255),b
  2956  011E3E  EC00  F080         	call	_printf	;wreg free
  2957                           
  2958                           ;ring_buffer_LUT.c: 44: }
  2959  011E42  0012               	return	
  2960  011E44                     l596:
  2961                           
  2962                           ;ring_buffer_LUT.c: 47: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  2963  011E44  C1F7  F089         	movff	ringBufferLUT@line,strcmp@s1
  2964  011E48  C1F8  F08A         	movff	ringBufferLUT@line+1,strcmp@s1+1
  2965  011E4C  0E96               	movlw	low STR_47
  2966  011E4E  0100               	movlb	0	; () banked
  2967  011E50  6F8B               	movwf	strcmp@s2& (0+255),b
  2968  011E52  0EFF               	movlw	high STR_47
  2969  011E54  6F8C               	movwf	(strcmp@s2+1)& (0+255),b
  2970  011E56  EC42  F09C         	call	_strcmp	;wreg free
  2971  011E5A  0100               	movlb	0	; () banked
  2972  011E5C  5189               	movf	?_strcmp& (0+255),w,b
  2973  011E5E  118A               	iorwf	(?_strcmp+1)& (0+255),w,b
  2974  011E60  B4D8               	btfsc	status,2,c
  2975  011E62  D00F               	goto	u10130
  2976                           
  2977                           ; BSR set to: 0
  2978  011E64  C1F7  F089         	movff	ringBufferLUT@line,strcmp@s1
  2979  011E68  C1F8  F08A         	movff	ringBufferLUT@line+1,strcmp@s1+1
  2980  011E6C  0EB2               	movlw	low STR_48
  2981  011E6E  6F8B               	movwf	strcmp@s2& (0+255),b
  2982  011E70  0EFF               	movlw	high STR_48
  2983  011E72  6F8C               	movwf	(strcmp@s2+1)& (0+255),b
  2984  011E74  EC42  F09C         	call	_strcmp	;wreg free
  2985  011E78  0100               	movlb	0	; () banked
  2986  011E7A  5189               	movf	?_strcmp& (0+255),w,b
  2987  011E7C  118A               	iorwf	(?_strcmp+1)& (0+255),w,b
  2988  011E7E  A4D8               	btfss	status,2,c
  2989  011E80  D027               	goto	l598
  2990  011E82                     u10130:
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;ring_buffer_LUT.c: 50: printf("\n\r");
  2994                           
  2995                           ; BSR set to: 0
  2996  011E82  0E74               	movlw	low (STR_50+14)
  2997  011E84  0101               	movlb	1	; () banked
  2998  011E86  6FD3               	movwf	printf@f& (0+255),b
  2999  011E88  0EFF               	movlw	high (STR_50+14)
  3000  011E8A  6FD4               	movwf	(printf@f+1)& (0+255),b
  3001  011E8C  EC00  F080         	call	_printf	;wreg free
  3002                           
  3003                           ;ring_buffer_LUT.c: 52: terminal_textAttributes(GREEN, BLACK, NORMAL);
  3004  011E90  0E00               	movlw	0
  3005  011E92  0101               	movlb	1	; () banked
  3006  011E94  6FF5               	movwf	terminal_textAttributes@background_color& (0+255),b
  3007  011E96  0E00               	movlw	0
  3008  011E98  6FF6               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  3009  011E9A  0E02               	movlw	2
  3010  011E9C  ECAA  F08A         	call	_terminal_textAttributes
  3011                           
  3012                           ;ring_buffer_LUT.c: 54: printf("AC Power Meter\n\r");
  3013  011EA0  0E66               	movlw	low STR_50
  3014  011EA2  0101               	movlb	1	; () banked
  3015  011EA4  6FD3               	movwf	printf@f& (0+255),b
  3016  011EA6  0EFF               	movlw	high STR_50
  3017  011EA8  6FD4               	movwf	(printf@f+1)& (0+255),b
  3018  011EAA  EC00  F080         	call	_printf	;wreg free
  3019                           
  3020                           ;ring_buffer_LUT.c: 55: printf("Marquette University ELEN 3035 Final Project\n\r");
  3021  011EAE  0EF2               	movlw	low STR_51
  3022  011EB0  0101               	movlb	1	; () banked
  3023  011EB2  6FD3               	movwf	printf@f& (0+255),b
  3024  011EB4  0EFE               	movlw	high STR_51
  3025  011EB6  6FD4               	movwf	(printf@f+1)& (0+255),b
  3026  011EB8  EC00  F080         	call	_printf	;wreg free
  3027                           
  3028                           ;ring_buffer_LUT.c: 57: terminal_textAttributesReset();
  3029  011EBC  ECD3  F09E         	call	_terminal_textAttributesReset	;wreg free
  3030                           
  3031                           ;ring_buffer_LUT.c: 59: printf("\n\r");
  3032  011EC0  0E74               	movlw	low (STR_50+14)
  3033  011EC2  0101               	movlb	1	; () banked
  3034  011EC4  6FD3               	movwf	printf@f& (0+255),b
  3035  011EC6  0EFF               	movlw	high (STR_50+14)
  3036  011EC8  6FD4               	movwf	(printf@f+1)& (0+255),b
  3037  011ECA  EC00  F080         	call	_printf	;wreg free
  3038                           
  3039                           ;ring_buffer_LUT.c: 61: }
  3040  011ECE  0012               	return	
  3041  011ED0                     l598:
  3042                           
  3043                           ;ring_buffer_LUT.c: 64: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  3044  011ED0  C1F7  F089         	movff	ringBufferLUT@line,strcmp@s1
  3045  011ED4  C1F8  F08A         	movff	ringBufferLUT@line+1,strcmp@s1+1
  3046  011ED8  0E77               	movlw	low STR_53
  3047  011EDA  0100               	movlb	0	; () banked
  3048  011EDC  6F8B               	movwf	strcmp@s2& (0+255),b
  3049  011EDE  0EFF               	movlw	high STR_53
  3050  011EE0  6F8C               	movwf	(strcmp@s2+1)& (0+255),b
  3051  011EE2  EC42  F09C         	call	_strcmp	;wreg free
  3052  011EE6  0100               	movlb	0	; () banked
  3053  011EE8  5189               	movf	?_strcmp& (0+255),w,b
  3054  011EEA  118A               	iorwf	(?_strcmp+1)& (0+255),w,b
  3055  011EEC  A4D8               	btfss	status,2,c
  3056  011EEE  D026               	goto	l602
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;ring_buffer_LUT.c: 67: printf("\n\r");
  3060  011EF0  0E74               	movlw	low (STR_50+14)
  3061  011EF2  0101               	movlb	1	; () banked
  3062  011EF4  6FD3               	movwf	printf@f& (0+255),b
  3063  011EF6  0EFF               	movlw	high (STR_50+14)
  3064  011EF8  6FD4               	movwf	(printf@f+1)& (0+255),b
  3065  011EFA  EC00  F080         	call	_printf	;wreg free
  3066                           
  3067                           ;ring_buffer_LUT.c: 69: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  3068  011EFE  0E00               	movlw	0
  3069  011F00  0101               	movlb	1	; () banked
  3070  011F02  6FF5               	movwf	terminal_textAttributes@background_color& (0+255),b
  3071  011F04  0E00               	movlw	0
  3072  011F06  6FF6               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  3073  011F08  0E03               	movlw	3
  3074  011F0A  ECAA  F08A         	call	_terminal_textAttributes
  3075                           
  3076                           ;ring_buffer_LUT.c: 70: printf("+3.3V rail measured as +%f Volts\n\r", POS3P3_ADC_Result
      +                          );
  3077  011F0E  0E21               	movlw	low STR_55
  3078  011F10  0101               	movlb	1	; () banked
  3079  011F12  6FD3               	movwf	printf@f& (0+255),b
  3080  011F14  0EFF               	movlw	high STR_55
  3081  011F16  6FD4               	movwf	(printf@f+1)& (0+255),b
  3082  011F18  C0C0  F1D5         	movff	_POS3P3_ADC_Result,?_printf+2
  3083  011F1C  C0C1  F1D6         	movff	_POS3P3_ADC_Result+1,?_printf+3
  3084  011F20  C0C2  F1D7         	movff	_POS3P3_ADC_Result+2,?_printf+4
  3085  011F24  EC00  F080         	call	_printf	;wreg free
  3086                           
  3087                           ;ring_buffer_LUT.c: 72: terminal_textAttributesReset();
  3088  011F28  ECD3  F09E         	call	_terminal_textAttributesReset	;wreg free
  3089                           
  3090                           ;ring_buffer_LUT.c: 74: printf("\n\r");
  3091  011F2C  0E74               	movlw	low (STR_50+14)
  3092  011F2E  0101               	movlb	1	; () banked
  3093  011F30  6FD3               	movwf	printf@f& (0+255),b
  3094  011F32  0EFF               	movlw	high (STR_50+14)
  3095  011F34  6FD4               	movwf	(printf@f+1)& (0+255),b
  3096  011F36  EC00  F080         	call	_printf	;wreg free
  3097                           
  3098                           ;ring_buffer_LUT.c: 77: }
  3099  011F3A  0012               	return	
  3100  011F3C                     l602:
  3101                           
  3102                           ;ring_buffer_LUT.c: 80: else if((0 == strcmp(line, "Measure POS12?"))) {
  3103  011F3C  C1F7  F089         	movff	ringBufferLUT@line,strcmp@s1
  3104  011F40  C1F8  F08A         	movff	ringBufferLUT@line+1,strcmp@s1+1
  3105  011F44  0E87               	movlw	low STR_57
  3106  011F46  0100               	movlb	0	; () banked
  3107  011F48  6F8B               	movwf	strcmp@s2& (0+255),b
  3108  011F4A  0EFF               	movlw	high STR_57
  3109  011F4C  6F8C               	movwf	(strcmp@s2+1)& (0+255),b
  3110  011F4E  EC42  F09C         	call	_strcmp	;wreg free
  3111  011F52  0100               	movlb	0	; () banked
  3112  011F54  5189               	movf	?_strcmp& (0+255),w,b
  3113  011F56  118A               	iorwf	(?_strcmp+1)& (0+255),w,b
  3114  011F58  A4D8               	btfss	status,2,c
  3115  011F5A  D026               	goto	l604
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;ring_buffer_LUT.c: 83: printf("\n\r");
  3119  011F5C  0E74               	movlw	low (STR_50+14)
  3120  011F5E  0101               	movlb	1	; () banked
  3121  011F60  6FD3               	movwf	printf@f& (0+255),b
  3122  011F62  0EFF               	movlw	high (STR_50+14)
  3123  011F64  6FD4               	movwf	(printf@f+1)& (0+255),b
  3124  011F66  EC00  F080         	call	_printf	;wreg free
  3125                           
  3126                           ;ring_buffer_LUT.c: 85: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  3127  011F6A  0E00               	movlw	0
  3128  011F6C  0101               	movlb	1	; () banked
  3129  011F6E  6FF5               	movwf	terminal_textAttributes@background_color& (0+255),b
  3130  011F70  0E00               	movlw	0
  3131  011F72  6FF6               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  3132  011F74  0E03               	movlw	3
  3133  011F76  ECAA  F08A         	call	_terminal_textAttributes
  3134                           
  3135                           ;ring_buffer_LUT.c: 86: printf("+12V rail measured as +%f Volts\n\r", POS12_ADC_Result);
  3136  011F7A  0E44               	movlw	low STR_59
  3137  011F7C  0101               	movlb	1	; () banked
  3138  011F7E  6FD3               	movwf	printf@f& (0+255),b
  3139  011F80  0EFF               	movlw	high STR_59
  3140  011F82  6FD4               	movwf	(printf@f+1)& (0+255),b
  3141  011F84  C0BD  F1D5         	movff	_POS12_ADC_Result,?_printf+2
  3142  011F88  C0BE  F1D6         	movff	_POS12_ADC_Result+1,?_printf+3
  3143  011F8C  C0BF  F1D7         	movff	_POS12_ADC_Result+2,?_printf+4
  3144  011F90  EC00  F080         	call	_printf	;wreg free
  3145                           
  3146                           ;ring_buffer_LUT.c: 88: terminal_textAttributesReset();
  3147  011F94  ECD3  F09E         	call	_terminal_textAttributesReset	;wreg free
  3148                           
  3149                           ;ring_buffer_LUT.c: 90: printf("\n\r");
  3150  011F98  0E74               	movlw	low (STR_50+14)
  3151  011F9A  0101               	movlb	1	; () banked
  3152  011F9C  6FD3               	movwf	printf@f& (0+255),b
  3153  011F9E  0EFF               	movlw	high (STR_50+14)
  3154  011FA0  6FD4               	movwf	(printf@f+1)& (0+255),b
  3155  011FA2  EC00  F080         	call	_printf	;wreg free
  3156                           
  3157                           ;ring_buffer_LUT.c: 93: }
  3158  011FA6  0012               	return	
  3159  011FA8                     l604:
  3160                           
  3161                           ;ring_buffer_LUT.c: 96: else if((0 == strcmp(line, "Help"))) {
  3162  011FA8  C1F7  F089         	movff	ringBufferLUT@line,strcmp@s1
  3163  011FAC  C1F8  F08A         	movff	ringBufferLUT@line+1,strcmp@s1+1
  3164  011FB0  0EA8               	movlw	low STR_61
  3165  011FB2  0100               	movlb	0	; () banked
  3166  011FB4  6F8B               	movwf	strcmp@s2& (0+255),b
  3167  011FB6  0EFF               	movlw	high STR_61
  3168  011FB8  6F8C               	movwf	(strcmp@s2+1)& (0+255),b
  3169  011FBA  EC42  F09C         	call	_strcmp	;wreg free
  3170  011FBE  0100               	movlb	0	; () banked
  3171  011FC0  5189               	movf	?_strcmp& (0+255),w,b
  3172  011FC2  118A               	iorwf	(?_strcmp+1)& (0+255),w,b
  3173  011FC4  A4D8               	btfss	status,2,c
  3174  011FC6  0012               	return	
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;ring_buffer_LUT.c: 99: printf("\n\r");
  3178  011FC8  0E74               	movlw	low (STR_50+14)
  3179  011FCA  0101               	movlb	1	; () banked
  3180  011FCC  6FD3               	movwf	printf@f& (0+255),b
  3181  011FCE  0EFF               	movlw	high (STR_50+14)
  3182  011FD0  6FD4               	movwf	(printf@f+1)& (0+255),b
  3183  011FD2  EC00  F080         	call	_printf	;wreg free
  3184                           
  3185                           ;ring_buffer_LUT.c: 101: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  3186  011FD6  0E00               	movlw	0
  3187  011FD8  0101               	movlb	1	; () banked
  3188  011FDA  6FF5               	movwf	terminal_textAttributes@background_color& (0+255),b
  3189  011FDC  0E00               	movlw	0
  3190  011FDE  6FF6               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  3191  011FE0  0E03               	movlw	3
  3192  011FE2  ECAA  F08A         	call	_terminal_textAttributes
  3193                           
  3194                           ;ring_buffer_LUT.c: 102: printf("List of supported commands:\n\r"
  3195                           ;ring_buffer_LUT.c: 103: "   Reset: Clears the terminal and resets the micro\n\r"
  3196                           ;ring_buffer_LUT.c: 104: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
  3197                           ;ring_buffer_LUT.c: 105: "   *IDN?: Returns device identification\n\r"
  3198                           ;ring_buffer_LUT.c: 106: "   Measure POS3P3?: Returns +3.3V ADC Conversion in volts\n\r"
  3199                           ;ring_buffer_LUT.c: 107: "   Measure POS12?: Returns +12V ADC Conversion in volts\n\r"
  3200                           ;ring_buffer_LUT.c: 108: "   Help: This message, lists commands\n\r");
  3201  011FE6  0EA1               	movlw	low STR_63
  3202  011FE8  0101               	movlb	1	; () banked
  3203  011FEA  6FD3               	movwf	printf@f& (0+255),b
  3204  011FEC  0EFD               	movlw	high STR_63
  3205  011FEE  6FD4               	movwf	(printf@f+1)& (0+255),b
  3206  011FF0  EC00  F080         	call	_printf	;wreg free
  3207                           
  3208                           ;ring_buffer_LUT.c: 111: terminal_textAttributesReset();
  3209  011FF4  ECD3  F09E         	call	_terminal_textAttributesReset	;wreg free
  3210                           
  3211                           ;ring_buffer_LUT.c: 113: printf("\n\r");
  3212  011FF8  0E74               	movlw	low (STR_50+14)
  3213  011FFA  0101               	movlb	1	; () banked
  3214  011FFC  6FD3               	movwf	printf@f& (0+255),b
  3215  011FFE  0EFF               	movlw	high (STR_50+14)
  3216  012000  6FD4               	movwf	(printf@f+1)& (0+255),b
  3217  012002  EC00  F080         	call	_printf	;wreg free
  3218  012006  0012               	return	
  3219  012008                     __end_of_ringBufferLUT:
  3220                           	opt stack 0
  3221                           intcon	equ	0xFF2
  3222                           postinc0	equ	0xFEE
  3223                           wreg	equ	0xFE8
  3224                           indf2	equ	0xFDF
  3225                           postinc2	equ	0xFDE
  3226                           fsr2h	equ	0xFDA
  3227                           fsr2l	equ	0xFD9
  3228                           status	equ	0xFD8
  3229                           
  3230 ;; *************** function _terminal_textAttributesReset *****************
  3231 ;; Defined at:
  3232 ;;		line 223 in file "ring_buffer_interface.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;		None
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;		None
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  1    wreg      void 
  3239 ;; Registers used:
  3240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3250 ;;Total ram usage:        0 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; Hardware stack levels required when called:   15
  3253 ;; This function calls:
  3254 ;;		_terminal_textAttributes
  3255 ;; This function is called by:
  3256 ;;		_main
  3257 ;;		_ringBufferLUT
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text5
  3262  013DA6                     __ptext5:
  3263                           	opt stack 0
  3264  013DA6                     _terminal_textAttributesReset:
  3265                           	opt stack 15
  3266                           
  3267                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
  3268                           
  3269                           ;incstack = 0
  3270  013DA6  0E00               	movlw	0
  3271  013DA8  0101               	movlb	1	; () banked
  3272  013DAA  6FF5               	movwf	terminal_textAttributes@background_color& (0+255),b
  3273  013DAC  0E00               	movlw	0
  3274  013DAE  6FF6               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  3275  013DB0  0E07               	movlw	7
  3276  013DB2  ECAA  F08A         	call	_terminal_textAttributes
  3277  013DB6  0012               	return		;funcret
  3278  013DB8                     __end_of_terminal_textAttributesReset:
  3279                           	opt stack 0
  3280                           intcon	equ	0xFF2
  3281                           postinc0	equ	0xFEE
  3282                           wreg	equ	0xFE8
  3283                           indf2	equ	0xFDF
  3284                           postinc2	equ	0xFDE
  3285                           fsr2h	equ	0xFDA
  3286                           fsr2l	equ	0xFD9
  3287                           status	equ	0xFD8
  3288                           
  3289 ;; *************** function _terminal_textAttributes *****************
  3290 ;; Defined at:
  3291 ;;		line 115 in file "ring_buffer_interface.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  foreground_c    1    wreg     enum E17808
  3294 ;;  background_c    1   52[BANK1 ] enum E17808
  3295 ;;  input_attrib    1   53[BANK1 ] enum E17800
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  foreground_c    1    0[BANK2 ] enum E17808
  3298 ;;  output_buff    15    1[BANK2 ] unsigned char [15]
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      void 
  3301 ;; Registers used:
  3302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3308 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3309 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0
  3310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3311 ;;      Totals:         0       0       2      16       0       0       0       0       0       0       0       0       
      +0       0       0
  3312 ;;Total ram usage:       18 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:   14
  3315 ;; This function calls:
  3316 ;;		_printf
  3317 ;;		_strcat
  3318 ;;		_strncpy
  3319 ;; This function is called by:
  3320 ;;		_terminal_textAttributesReset
  3321 ;;		_ringBufferLUT
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           	psect	text6
  3326  011554                     __ptext6:
  3327                           	opt stack 0
  3328  011554                     _terminal_textAttributes:
  3329                           	opt stack 15
  3330                           
  3331                           ;incstack = 0
  3332                           ;terminal_textAttributes@foreground_color stored from wreg
  3333  011554  0102               	movlb	2	; () banked
  3334  011556  6F00               	movwf	terminal_textAttributes@foreground_color& (0+255),b
  3335                           
  3336                           ;ring_buffer_interface.c: 119: char output_buff[15];
  3337                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
  3338  011558  0E01               	movlw	low terminal_textAttributes@output_buff
  3339  01155A  0100               	movlb	0	; () banked
  3340  01155C  6F89               	movwf	strncpy@to& (0+255),b
  3341  01155E  0E02               	movlw	high terminal_textAttributes@output_buff
  3342  011560  6F8A               	movwf	(strncpy@to+1)& (0+255),b
  3343  011562  0EF6               	movlw	low STR_11
  3344  011564  6F8B               	movwf	strncpy@from& (0+255),b
  3345  011566  0EFF               	movlw	high STR_11
  3346  011568  6F8C               	movwf	(strncpy@from+1)& (0+255),b
  3347  01156A  0E00               	movlw	0
  3348  01156C  6F8E               	movwf	(strncpy@size+1)& (0+255),b
  3349  01156E  0E0F               	movlw	15
  3350  011570  6F8D               	movwf	strncpy@size& (0+255),b
  3351  011572  ECE5  F09A         	call	_strncpy	;wreg free
  3352                           
  3353                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
  3354  011576  D054               	goto	l536
  3355  011578                     
  3356                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
  3357  011578  0E01               	movlw	low terminal_textAttributes@output_buff
  3358  01157A  0100               	movlb	0	; () banked
  3359  01157C  6F89               	movwf	strcat@to& (0+255),b
  3360  01157E  0E02               	movlw	high terminal_textAttributes@output_buff
  3361  011580  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3362  011582  0EC7               	movlw	low (STR_20+1)
  3363  011584  6F8B               	movwf	strcat@from& (0+255),b
  3364  011586  0EFF               	movlw	high (STR_20+1)
  3365  011588  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3366  01158A  EC91  F09C         	call	_strcat	;wreg free
  3367                           
  3368                           ;ring_buffer_interface.c: 127: break;
  3369  01158E  D05D               	goto	l538
  3370  011590                     
  3371                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
  3372  011590  0E01               	movlw	low terminal_textAttributes@output_buff
  3373  011592  0100               	movlb	0	; () banked
  3374  011594  6F89               	movwf	strcat@to& (0+255),b
  3375  011596  0E02               	movlw	high terminal_textAttributes@output_buff
  3376  011598  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3377  01159A  0ECD               	movlw	low (STR_21+1)
  3378  01159C  6F8B               	movwf	strcat@from& (0+255),b
  3379  01159E  0EFF               	movlw	high (STR_21+1)
  3380  0115A0  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3381  0115A2  EC91  F09C         	call	_strcat	;wreg free
  3382                           
  3383                           ;ring_buffer_interface.c: 130: break;
  3384  0115A6  D051               	goto	l538
  3385  0115A8                     
  3386                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
  3387  0115A8  0E01               	movlw	low terminal_textAttributes@output_buff
  3388  0115AA  0100               	movlb	0	; () banked
  3389  0115AC  6F89               	movwf	strcat@to& (0+255),b
  3390  0115AE  0E02               	movlw	high terminal_textAttributes@output_buff
  3391  0115B0  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3392  0115B2  0EDF               	movlw	low (STR_24+1)
  3393  0115B4  6F8B               	movwf	strcat@from& (0+255),b
  3394  0115B6  0EFF               	movlw	high (STR_24+1)
  3395  0115B8  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3396  0115BA  EC91  F09C         	call	_strcat	;wreg free
  3397                           
  3398                           ;ring_buffer_interface.c: 133: break;
  3399  0115BE  D045               	goto	l538
  3400  0115C0                     
  3401                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
  3402  0115C0  0E01               	movlw	low terminal_textAttributes@output_buff
  3403  0115C2  0100               	movlb	0	; () banked
  3404  0115C4  6F89               	movwf	strcat@to& (0+255),b
  3405  0115C6  0E02               	movlw	high terminal_textAttributes@output_buff
  3406  0115C8  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3407  0115CA  0EE5               	movlw	low (STR_25+1)
  3408  0115CC  6F8B               	movwf	strcat@from& (0+255),b
  3409  0115CE  0EFF               	movlw	high (STR_25+1)
  3410  0115D0  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3411  0115D2  EC91  F09C         	call	_strcat	;wreg free
  3412                           
  3413                           ;ring_buffer_interface.c: 136: break;
  3414  0115D6  D039               	goto	l538
  3415  0115D8                     
  3416                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
  3417  0115D8  0E01               	movlw	low terminal_textAttributes@output_buff
  3418  0115DA  0100               	movlb	0	; () banked
  3419  0115DC  6F89               	movwf	strcat@to& (0+255),b
  3420  0115DE  0E02               	movlw	high terminal_textAttributes@output_buff
  3421  0115E0  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3422  0115E2  0EF1               	movlw	low (STR_27+1)
  3423  0115E4  6F8B               	movwf	strcat@from& (0+255),b
  3424  0115E6  0EFF               	movlw	high (STR_27+1)
  3425  0115E8  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3426  0115EA  EC91  F09C         	call	_strcat	;wreg free
  3427                           
  3428                           ;ring_buffer_interface.c: 139: break;
  3429  0115EE  D02D               	goto	l538
  3430  0115F0                     
  3431                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
  3432  0115F0  0E01               	movlw	low terminal_textAttributes@output_buff
  3433  0115F2  0100               	movlb	0	; () banked
  3434  0115F4  6F89               	movwf	strcat@to& (0+255),b
  3435  0115F6  0E02               	movlw	high terminal_textAttributes@output_buff
  3436  0115F8  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3437  0115FA  0EF9               	movlw	low STR_17
  3438  0115FC  6F8B               	movwf	strcat@from& (0+255),b
  3439  0115FE  0EFF               	movlw	high STR_17
  3440  011600  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3441  011602  EC91  F09C         	call	_strcat	;wreg free
  3442                           
  3443                           ;ring_buffer_interface.c: 142: break;
  3444  011606  D021               	goto	l538
  3445  011608                     
  3446                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
  3447  011608  0E01               	movlw	low terminal_textAttributes@output_buff
  3448  01160A  0100               	movlb	0	; () banked
  3449  01160C  6F89               	movwf	strcat@to& (0+255),b
  3450  01160E  0E02               	movlw	high terminal_textAttributes@output_buff
  3451  011610  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3452  011612  0EC7               	movlw	low (STR_20+1)
  3453  011614  6F8B               	movwf	strcat@from& (0+255),b
  3454  011616  0EFF               	movlw	high (STR_20+1)
  3455  011618  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3456  01161A  EC91  F09C         	call	_strcat	;wreg free
  3457                           
  3458                           ;ring_buffer_interface.c: 147: }
  3459                           
  3460                           ;ring_buffer_interface.c: 146: break;
  3461  01161E  D015               	goto	l538
  3462  011620                     l536:
  3463  011620  0101               	movlb	1	; () banked
  3464  011622  51F6               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
  3465                           
  3466                           ; Switch size 1, requested type "space"
  3467                           ; Number of cases is 6, Range of values is 0 to 5
  3468                           ; switch strategies available:
  3469                           ; Name         Instructions Cycles
  3470                           ; simple_byte           19    10 (average)
  3471                           ;	Chosen strategy is simple_byte
  3472  011624  0A00               	xorlw	0	; case 0
  3473  011626  B4D8               	btfsc	status,2,c
  3474  011628  D7A7               	goto	l537
  3475  01162A  0A01               	xorlw	1	; case 1
  3476  01162C  B4D8               	btfsc	status,2,c
  3477  01162E  D7B0               	goto	l539
  3478  011630  0A03               	xorlw	3	; case 2
  3479  011632  B4D8               	btfsc	status,2,c
  3480  011634  D7B9               	goto	l540
  3481  011636  0A01               	xorlw	1	; case 3
  3482  011638  B4D8               	btfsc	status,2,c
  3483  01163A  D7C2               	goto	l541
  3484  01163C  0A07               	xorlw	7	; case 4
  3485  01163E  B4D8               	btfsc	status,2,c
  3486  011640  D7CB               	goto	l542
  3487  011642  0A01               	xorlw	1	; case 5
  3488  011644  B4D8               	btfsc	status,2,c
  3489  011646  D7D4               	goto	l543
  3490  011648  D7DF               	goto	l544
  3491  01164A                     l538:
  3492                           
  3493                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
  3494                           
  3495                           ; BSR set to: 1
  3496  01164A  0E01               	movlw	low terminal_textAttributes@output_buff
  3497  01164C  0100               	movlb	0	; () banked
  3498  01164E  6F89               	movwf	strcat@to& (0+255),b
  3499  011650  0E02               	movlw	high terminal_textAttributes@output_buff
  3500  011652  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3501  011654  0EFB               	movlw	low STR_19
  3502  011656  6F8B               	movwf	strcat@from& (0+255),b
  3503  011658  0EFF               	movlw	high STR_19
  3504  01165A  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3505  01165C  EC91  F09C         	call	_strcat	;wreg free
  3506                           
  3507                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
  3508  011660  D06C               	goto	l545
  3509  011662                     
  3510                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
  3511  011662  0E01               	movlw	low terminal_textAttributes@output_buff
  3512  011664  0100               	movlb	0	; () banked
  3513  011666  6F89               	movwf	strcat@to& (0+255),b
  3514  011668  0E02               	movlw	high terminal_textAttributes@output_buff
  3515  01166A  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3516  01166C  0EC6               	movlw	low STR_20
  3517  01166E  6F8B               	movwf	strcat@from& (0+255),b
  3518  011670  0EFF               	movlw	high STR_20
  3519  011672  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3520  011674  EC91  F09C         	call	_strcat	;wreg free
  3521                           
  3522                           ;ring_buffer_interface.c: 155: break;
  3523  011678  D07B               	goto	l547
  3524  01167A                     
  3525                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
  3526  01167A  0E01               	movlw	low terminal_textAttributes@output_buff
  3527  01167C  0100               	movlb	0	; () banked
  3528  01167E  6F89               	movwf	strcat@to& (0+255),b
  3529  011680  0E02               	movlw	high terminal_textAttributes@output_buff
  3530  011682  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3531  011684  0ECC               	movlw	low STR_21
  3532  011686  6F8B               	movwf	strcat@from& (0+255),b
  3533  011688  0EFF               	movlw	high STR_21
  3534  01168A  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3535  01168C  EC91  F09C         	call	_strcat	;wreg free
  3536                           
  3537                           ;ring_buffer_interface.c: 158: break;
  3538  011690  D06F               	goto	l547
  3539  011692                     
  3540                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
  3541  011692  0E01               	movlw	low terminal_textAttributes@output_buff
  3542  011694  0100               	movlb	0	; () banked
  3543  011696  6F89               	movwf	strcat@to& (0+255),b
  3544  011698  0E02               	movlw	high terminal_textAttributes@output_buff
  3545  01169A  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3546  01169C  0ED2               	movlw	low STR_22
  3547  01169E  6F8B               	movwf	strcat@from& (0+255),b
  3548  0116A0  0EFF               	movlw	high STR_22
  3549  0116A2  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3550  0116A4  EC91  F09C         	call	_strcat	;wreg free
  3551                           
  3552                           ;ring_buffer_interface.c: 161: break;
  3553  0116A8  D063               	goto	l547
  3554  0116AA                     
  3555                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
  3556  0116AA  0E01               	movlw	low terminal_textAttributes@output_buff
  3557  0116AC  0100               	movlb	0	; () banked
  3558  0116AE  6F89               	movwf	strcat@to& (0+255),b
  3559  0116B0  0E02               	movlw	high terminal_textAttributes@output_buff
  3560  0116B2  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3561  0116B4  0ED8               	movlw	low STR_23
  3562  0116B6  6F8B               	movwf	strcat@from& (0+255),b
  3563  0116B8  0EFF               	movlw	high STR_23
  3564  0116BA  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3565  0116BC  EC91  F09C         	call	_strcat	;wreg free
  3566                           
  3567                           ;ring_buffer_interface.c: 164: break;
  3568  0116C0  D057               	goto	l547
  3569  0116C2                     
  3570                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
  3571  0116C2  0E01               	movlw	low terminal_textAttributes@output_buff
  3572  0116C4  0100               	movlb	0	; () banked
  3573  0116C6  6F89               	movwf	strcat@to& (0+255),b
  3574  0116C8  0E02               	movlw	high terminal_textAttributes@output_buff
  3575  0116CA  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3576  0116CC  0EDE               	movlw	low STR_24
  3577  0116CE  6F8B               	movwf	strcat@from& (0+255),b
  3578  0116D0  0EFF               	movlw	high STR_24
  3579  0116D2  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3580  0116D4  EC91  F09C         	call	_strcat	;wreg free
  3581                           
  3582                           ;ring_buffer_interface.c: 167: break;
  3583  0116D8  D04B               	goto	l547
  3584  0116DA                     
  3585                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
  3586  0116DA  0E01               	movlw	low terminal_textAttributes@output_buff
  3587  0116DC  0100               	movlb	0	; () banked
  3588  0116DE  6F89               	movwf	strcat@to& (0+255),b
  3589  0116E0  0E02               	movlw	high terminal_textAttributes@output_buff
  3590  0116E2  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3591  0116E4  0EE4               	movlw	low STR_25
  3592  0116E6  6F8B               	movwf	strcat@from& (0+255),b
  3593  0116E8  0EFF               	movlw	high STR_25
  3594  0116EA  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3595  0116EC  EC91  F09C         	call	_strcat	;wreg free
  3596                           
  3597                           ;ring_buffer_interface.c: 170: break;
  3598  0116F0  D03F               	goto	l547
  3599  0116F2                     
  3600                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
  3601  0116F2  0E01               	movlw	low terminal_textAttributes@output_buff
  3602  0116F4  0100               	movlb	0	; () banked
  3603  0116F6  6F89               	movwf	strcat@to& (0+255),b
  3604  0116F8  0E02               	movlw	high terminal_textAttributes@output_buff
  3605  0116FA  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3606  0116FC  0EEA               	movlw	low STR_26
  3607  0116FE  6F8B               	movwf	strcat@from& (0+255),b
  3608  011700  0EFF               	movlw	high STR_26
  3609  011702  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3610  011704  EC91  F09C         	call	_strcat	;wreg free
  3611                           
  3612                           ;ring_buffer_interface.c: 173: break;
  3613  011708  D033               	goto	l547
  3614  01170A                     
  3615                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
  3616  01170A  0E01               	movlw	low terminal_textAttributes@output_buff
  3617  01170C  0100               	movlb	0	; () banked
  3618  01170E  6F89               	movwf	strcat@to& (0+255),b
  3619  011710  0E02               	movlw	high terminal_textAttributes@output_buff
  3620  011712  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3621  011714  0EF0               	movlw	low STR_27
  3622  011716  6F8B               	movwf	strcat@from& (0+255),b
  3623  011718  0EFF               	movlw	high STR_27
  3624  01171A  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3625  01171C  EC91  F09C         	call	_strcat	;wreg free
  3626                           
  3627                           ;ring_buffer_interface.c: 176: break;
  3628  011720  D027               	goto	l547
  3629  011722                     
  3630                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
  3631  011722  0E01               	movlw	low terminal_textAttributes@output_buff
  3632  011724  0100               	movlb	0	; () banked
  3633  011726  6F89               	movwf	strcat@to& (0+255),b
  3634  011728  0E02               	movlw	high terminal_textAttributes@output_buff
  3635  01172A  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3636  01172C  0EF0               	movlw	low STR_27
  3637  01172E  6F8B               	movwf	strcat@from& (0+255),b
  3638  011730  0EFF               	movlw	high STR_27
  3639  011732  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3640  011734  EC91  F09C         	call	_strcat	;wreg free
  3641                           
  3642                           ;ring_buffer_interface.c: 181: }
  3643                           
  3644                           ;ring_buffer_interface.c: 180: break;
  3645  011738  D01B               	goto	l547
  3646  01173A                     l545:
  3647  01173A  0102               	movlb	2	; () banked
  3648  01173C  5100               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
  3649                           
  3650                           ; Switch size 1, requested type "space"
  3651                           ; Number of cases is 8, Range of values is 0 to 7
  3652                           ; switch strategies available:
  3653                           ; Name         Instructions Cycles
  3654                           ; simple_byte           25    13 (average)
  3655                           ;	Chosen strategy is simple_byte
  3656  01173E  0A00               	xorlw	0	; case 0
  3657  011740  B4D8               	btfsc	status,2,c
  3658  011742  D78F               	goto	l546
  3659  011744  0A01               	xorlw	1	; case 1
  3660  011746  B4D8               	btfsc	status,2,c
  3661  011748  D798               	goto	l548
  3662  01174A  0A03               	xorlw	3	; case 2
  3663  01174C  B4D8               	btfsc	status,2,c
  3664  01174E  D7A1               	goto	l549
  3665  011750  0A01               	xorlw	1	; case 3
  3666  011752  B4D8               	btfsc	status,2,c
  3667  011754  D7AA               	goto	l550
  3668  011756  0A07               	xorlw	7	; case 4
  3669  011758  B4D8               	btfsc	status,2,c
  3670  01175A  D7B3               	goto	l551
  3671  01175C  0A01               	xorlw	1	; case 5
  3672  01175E  B4D8               	btfsc	status,2,c
  3673  011760  D7BC               	goto	l552
  3674  011762  0A03               	xorlw	3	; case 6
  3675  011764  B4D8               	btfsc	status,2,c
  3676  011766  D7C5               	goto	l553
  3677  011768  0A01               	xorlw	1	; case 7
  3678  01176A  B4D8               	btfsc	status,2,c
  3679  01176C  D7CE               	goto	l554
  3680  01176E  D7D9               	goto	l555
  3681  011770                     l547:
  3682                           
  3683                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
  3684                           
  3685                           ; BSR set to: 2
  3686  011770  0E01               	movlw	low terminal_textAttributes@output_buff
  3687  011772  0100               	movlb	0	; () banked
  3688  011774  6F89               	movwf	strcat@to& (0+255),b
  3689  011776  0E02               	movlw	high terminal_textAttributes@output_buff
  3690  011778  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3691  01177A  0EFB               	movlw	low STR_19
  3692  01177C  6F8B               	movwf	strcat@from& (0+255),b
  3693  01177E  0EFF               	movlw	high STR_19
  3694  011780  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3695  011782  EC91  F09C         	call	_strcat	;wreg free
  3696                           
  3697                           ;ring_buffer_interface.c: 185: switch (background_color) {
  3698  011786  D06C               	goto	l556
  3699  011788                     
  3700                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
  3701  011788  0E01               	movlw	low terminal_textAttributes@output_buff
  3702  01178A  0100               	movlb	0	; () banked
  3703  01178C  6F89               	movwf	strcat@to& (0+255),b
  3704  01178E  0E02               	movlw	high terminal_textAttributes@output_buff
  3705  011790  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3706  011792  0EC9               	movlw	low STR_30
  3707  011794  6F8B               	movwf	strcat@from& (0+255),b
  3708  011796  0EFF               	movlw	high STR_30
  3709  011798  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3710  01179A  EC91  F09C         	call	_strcat	;wreg free
  3711                           
  3712                           ;ring_buffer_interface.c: 189: break;
  3713  01179E  D07B               	goto	l558
  3714  0117A0                     
  3715                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
  3716  0117A0  0E01               	movlw	low terminal_textAttributes@output_buff
  3717  0117A2  0100               	movlb	0	; () banked
  3718  0117A4  6F89               	movwf	strcat@to& (0+255),b
  3719  0117A6  0E02               	movlw	high terminal_textAttributes@output_buff
  3720  0117A8  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3721  0117AA  0ECF               	movlw	low STR_31
  3722  0117AC  6F8B               	movwf	strcat@from& (0+255),b
  3723  0117AE  0EFF               	movlw	high STR_31
  3724  0117B0  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3725  0117B2  EC91  F09C         	call	_strcat	;wreg free
  3726                           
  3727                           ;ring_buffer_interface.c: 192: break;
  3728  0117B6  D06F               	goto	l558
  3729  0117B8                     
  3730                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
  3731  0117B8  0E01               	movlw	low terminal_textAttributes@output_buff
  3732  0117BA  0100               	movlb	0	; () banked
  3733  0117BC  6F89               	movwf	strcat@to& (0+255),b
  3734  0117BE  0E02               	movlw	high terminal_textAttributes@output_buff
  3735  0117C0  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3736  0117C2  0ED5               	movlw	low STR_32
  3737  0117C4  6F8B               	movwf	strcat@from& (0+255),b
  3738  0117C6  0EFF               	movlw	high STR_32
  3739  0117C8  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3740  0117CA  EC91  F09C         	call	_strcat	;wreg free
  3741                           
  3742                           ;ring_buffer_interface.c: 195: break;
  3743  0117CE  D063               	goto	l558
  3744  0117D0                     
  3745                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
  3746  0117D0  0E01               	movlw	low terminal_textAttributes@output_buff
  3747  0117D2  0100               	movlb	0	; () banked
  3748  0117D4  6F89               	movwf	strcat@to& (0+255),b
  3749  0117D6  0E02               	movlw	high terminal_textAttributes@output_buff
  3750  0117D8  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3751  0117DA  0EDB               	movlw	low STR_33
  3752  0117DC  6F8B               	movwf	strcat@from& (0+255),b
  3753  0117DE  0EFF               	movlw	high STR_33
  3754  0117E0  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3755  0117E2  EC91  F09C         	call	_strcat	;wreg free
  3756                           
  3757                           ;ring_buffer_interface.c: 198: break;
  3758  0117E6  D057               	goto	l558
  3759  0117E8                     
  3760                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
  3761  0117E8  0E01               	movlw	low terminal_textAttributes@output_buff
  3762  0117EA  0100               	movlb	0	; () banked
  3763  0117EC  6F89               	movwf	strcat@to& (0+255),b
  3764  0117EE  0E02               	movlw	high terminal_textAttributes@output_buff
  3765  0117F0  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3766  0117F2  0EE1               	movlw	low STR_34
  3767  0117F4  6F8B               	movwf	strcat@from& (0+255),b
  3768  0117F6  0EFF               	movlw	high STR_34
  3769  0117F8  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3770  0117FA  EC91  F09C         	call	_strcat	;wreg free
  3771                           
  3772                           ;ring_buffer_interface.c: 201: break;
  3773  0117FE  D04B               	goto	l558
  3774  011800                     
  3775                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
  3776  011800  0E01               	movlw	low terminal_textAttributes@output_buff
  3777  011802  0100               	movlb	0	; () banked
  3778  011804  6F89               	movwf	strcat@to& (0+255),b
  3779  011806  0E02               	movlw	high terminal_textAttributes@output_buff
  3780  011808  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3781  01180A  0EE7               	movlw	low STR_35
  3782  01180C  6F8B               	movwf	strcat@from& (0+255),b
  3783  01180E  0EFF               	movlw	high STR_35
  3784  011810  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3785  011812  EC91  F09C         	call	_strcat	;wreg free
  3786                           
  3787                           ;ring_buffer_interface.c: 204: break;
  3788  011816  D03F               	goto	l558
  3789  011818                     
  3790                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
  3791  011818  0E01               	movlw	low terminal_textAttributes@output_buff
  3792  01181A  0100               	movlb	0	; () banked
  3793  01181C  6F89               	movwf	strcat@to& (0+255),b
  3794  01181E  0E02               	movlw	high terminal_textAttributes@output_buff
  3795  011820  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3796  011822  0EED               	movlw	low STR_36
  3797  011824  6F8B               	movwf	strcat@from& (0+255),b
  3798  011826  0EFF               	movlw	high STR_36
  3799  011828  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3800  01182A  EC91  F09C         	call	_strcat	;wreg free
  3801                           
  3802                           ;ring_buffer_interface.c: 207: break;
  3803  01182E  D033               	goto	l558
  3804  011830                     
  3805                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
  3806  011830  0E01               	movlw	low terminal_textAttributes@output_buff
  3807  011832  0100               	movlb	0	; () banked
  3808  011834  6F89               	movwf	strcat@to& (0+255),b
  3809  011836  0E02               	movlw	high terminal_textAttributes@output_buff
  3810  011838  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3811  01183A  0EF3               	movlw	low STR_37
  3812  01183C  6F8B               	movwf	strcat@from& (0+255),b
  3813  01183E  0EFF               	movlw	high STR_37
  3814  011840  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3815  011842  EC91  F09C         	call	_strcat	;wreg free
  3816                           
  3817                           ;ring_buffer_interface.c: 210: break;
  3818  011846  D027               	goto	l558
  3819  011848                     
  3820                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
  3821  011848  0E01               	movlw	low terminal_textAttributes@output_buff
  3822  01184A  0100               	movlb	0	; () banked
  3823  01184C  6F89               	movwf	strcat@to& (0+255),b
  3824  01184E  0E02               	movlw	high terminal_textAttributes@output_buff
  3825  011850  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3826  011852  0EF3               	movlw	low STR_37
  3827  011854  6F8B               	movwf	strcat@from& (0+255),b
  3828  011856  0EFF               	movlw	high STR_37
  3829  011858  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3830  01185A  EC91  F09C         	call	_strcat	;wreg free
  3831                           
  3832                           ;ring_buffer_interface.c: 215: }
  3833                           
  3834                           ;ring_buffer_interface.c: 214: break;
  3835  01185E  D01B               	goto	l558
  3836  011860                     l556:
  3837  011860  0101               	movlb	1	; () banked
  3838  011862  51F5               	movf	terminal_textAttributes@background_color& (0+255),w,b
  3839                           
  3840                           ; Switch size 1, requested type "space"
  3841                           ; Number of cases is 8, Range of values is 0 to 7
  3842                           ; switch strategies available:
  3843                           ; Name         Instructions Cycles
  3844                           ; simple_byte           25    13 (average)
  3845                           ;	Chosen strategy is simple_byte
  3846  011864  0A00               	xorlw	0	; case 0
  3847  011866  B4D8               	btfsc	status,2,c
  3848  011868  D78F               	goto	l557
  3849  01186A  0A01               	xorlw	1	; case 1
  3850  01186C  B4D8               	btfsc	status,2,c
  3851  01186E  D798               	goto	l559
  3852  011870  0A03               	xorlw	3	; case 2
  3853  011872  B4D8               	btfsc	status,2,c
  3854  011874  D7A1               	goto	l560
  3855  011876  0A01               	xorlw	1	; case 3
  3856  011878  B4D8               	btfsc	status,2,c
  3857  01187A  D7AA               	goto	l561
  3858  01187C  0A07               	xorlw	7	; case 4
  3859  01187E  B4D8               	btfsc	status,2,c
  3860  011880  D7B3               	goto	l562
  3861  011882  0A01               	xorlw	1	; case 5
  3862  011884  B4D8               	btfsc	status,2,c
  3863  011886  D7BC               	goto	l563
  3864  011888  0A03               	xorlw	3	; case 6
  3865  01188A  B4D8               	btfsc	status,2,c
  3866  01188C  D7C5               	goto	l564
  3867  01188E  0A01               	xorlw	1	; case 7
  3868  011890  B4D8               	btfsc	status,2,c
  3869  011892  D7CE               	goto	l565
  3870  011894  D7D9               	goto	l566
  3871  011896                     l558:
  3872                           
  3873                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
  3874                           
  3875                           ; BSR set to: 1
  3876  011896  0E01               	movlw	low terminal_textAttributes@output_buff
  3877  011898  0100               	movlb	0	; () banked
  3878  01189A  6F89               	movwf	strcat@to& (0+255),b
  3879  01189C  0E02               	movlw	high terminal_textAttributes@output_buff
  3880  01189E  6F8A               	movwf	(strcat@to+1)& (0+255),b
  3881  0118A0  0EFD               	movlw	low STR_39
  3882  0118A2  6F8B               	movwf	strcat@from& (0+255),b
  3883  0118A4  0EFF               	movlw	high STR_39
  3884  0118A6  6F8C               	movwf	(strcat@from+1)& (0+255),b
  3885  0118A8  EC91  F09C         	call	_strcat	;wreg free
  3886                           
  3887                           ;ring_buffer_interface.c: 219: printf(output_buff);
  3888  0118AC  0E01               	movlw	low terminal_textAttributes@output_buff
  3889  0118AE  0101               	movlb	1	; () banked
  3890  0118B0  6FD3               	movwf	printf@f& (0+255),b
  3891  0118B2  0E02               	movlw	high terminal_textAttributes@output_buff
  3892  0118B4  6FD4               	movwf	(printf@f+1)& (0+255),b
  3893  0118B6  EC00  F080         	call	_printf	;wreg free
  3894  0118BA  0012               	return		;funcret
  3895  0118BC                     __end_of_terminal_textAttributes:
  3896                           	opt stack 0
  3897                           intcon	equ	0xFF2
  3898                           postinc0	equ	0xFEE
  3899                           wreg	equ	0xFE8
  3900                           indf2	equ	0xFDF
  3901                           postinc2	equ	0xFDE
  3902                           fsr2h	equ	0xFDA
  3903                           fsr2l	equ	0xFD9
  3904                           status	equ	0xFD8
  3905                           
  3906 ;; *************** function _strncpy *****************
  3907 ;; Defined at:
  3908 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;  to              2   41[BANK0 ] PTR unsigned char 
  3911 ;;		 -> terminal_textAttributes@output_buff(15), 
  3912 ;;  from            2   43[BANK0 ] PTR const unsigned char 
  3913 ;;		 -> STR_11(3), 
  3914 ;;  size            2   45[BANK0 ] unsigned int 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  cp              2   47[BANK0 ] PTR unsigned char 
  3917 ;;		 -> terminal_textAttributes@output_buff(15), 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  2   41[BANK0 ] PTR unsigned char 
  3920 ;; Registers used:
  3921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3927 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3928 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3930 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3931 ;;Total ram usage:        8 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:   10
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_terminal_textAttributes
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text7
  3942  0135CA                     __ptext7:
  3943                           	opt stack 0
  3944  0135CA                     _strncpy:
  3945                           	opt stack 18
  3946                           
  3947                           ;incstack = 0
  3948  0135CA  C089  F08F         	movff	strncpy@to,strncpy@cp
  3949  0135CE  C08A  F090         	movff	strncpy@to+1,strncpy@cp+1
  3950  0135D2  D018               	goto	l1539
  3951  0135D4  0100               	movlb	0	; () banked
  3952  0135D6  078D               	decf	strncpy@size& (0+255),f,b
  3953  0135D8  A0D8               	btfss	status,0,c
  3954  0135DA  078E               	decf	(strncpy@size+1)& (0+255),f,b
  3955                           
  3956                           ; BSR set to: 0
  3957  0135DC  C08B  FFF6         	movff	strncpy@from,tblptrl
  3958  0135E0  C08C  FFF7         	movff	strncpy@from+1,tblptrh
  3959  0135E4  4B8B               	infsnz	strncpy@from& (0+255),f,b
  3960  0135E6  2B8C               	incf	(strncpy@from+1)& (0+255),f,b
  3961  0135E8                     	if	0	;tblptru may be non-zero
  3962  0135E8                     	endif
  3963  0135E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3964  0135E8  0E00               	movlw	low (__mediumconst shr (0+16))
  3965  0135EA  6EF8               	movwf	tblptru,c
  3966  0135EC                     	endif
  3967  0135EC  C08F  FFD9         	movff	strncpy@cp,fsr2l
  3968  0135F0  C090  FFDA         	movff	strncpy@cp+1,fsr2h
  3969  0135F4  4B8F               	infsnz	strncpy@cp& (0+255),f,b
  3970  0135F6  2B90               	incf	(strncpy@cp+1)& (0+255),f,b
  3971  0135F8  0008               	tblrd		*
  3972  0135FA  CFF5 FFDF          	movff	tablat,indf2
  3973  0135FE  50DF               	movf	indf2,w,c
  3974  013600  B4D8               	btfsc	status,2,c
  3975  013602  D00E               	goto	l1541
  3976  013604                     l1539:
  3977                           
  3978                           ; BSR set to: 0
  3979                           
  3980                           ; BSR set to: 0
  3981  013604  0100               	movlb	0	; () banked
  3982  013606  518D               	movf	strncpy@size& (0+255),w,b
  3983  013608  118E               	iorwf	(strncpy@size+1)& (0+255),w,b
  3984  01360A  B4D8               	btfsc	status,2,c
  3985  01360C  D009               	goto	l1541
  3986  01360E  D7E2               	goto	l1538
  3987  013610                     l6417:
  3988                           
  3989                           ; BSR set to: 0
  3990  013610  C08F  FFD9         	movff	strncpy@cp,fsr2l
  3991  013614  C090  FFDA         	movff	strncpy@cp+1,fsr2h
  3992  013618  0E00               	movlw	0
  3993  01361A  6EDF               	movwf	indf2,c
  3994                           
  3995                           ; BSR set to: 0
  3996  01361C  4B8F               	infsnz	strncpy@cp& (0+255),f,b
  3997  01361E  2B90               	incf	(strncpy@cp+1)& (0+255),f,b
  3998  013620                     l1541:
  3999                           
  4000                           ; BSR set to: 0
  4001                           
  4002                           ; BSR set to: 0
  4003  013620  078D               	decf	strncpy@size& (0+255),f,b
  4004  013622  A0D8               	btfss	status,0,c
  4005  013624  078E               	decf	(strncpy@size+1)& (0+255),f,b
  4006  013626  298D               	incf	strncpy@size& (0+255),w,b
  4007  013628  E1F3               	bnz	l6417
  4008  01362A  298E               	incf	(strncpy@size+1)& (0+255),w,b
  4009  01362C  B4D8               	btfsc	status,2,c
  4010  01362E  0012               	return	
  4011  013630  D7EF               	goto	l1542
  4012  013632                     __end_of_strncpy:
  4013                           	opt stack 0
  4014                           tblptru	equ	0xFF8
  4015                           tblptrh	equ	0xFF7
  4016                           tblptrl	equ	0xFF6
  4017                           tablat	equ	0xFF5
  4018                           intcon	equ	0xFF2
  4019                           postinc0	equ	0xFEE
  4020                           wreg	equ	0xFE8
  4021                           indf2	equ	0xFDF
  4022                           postinc2	equ	0xFDE
  4023                           fsr2h	equ	0xFDA
  4024                           fsr2l	equ	0xFD9
  4025                           status	equ	0xFD8
  4026                           
  4027 ;; *************** function _strcat *****************
  4028 ;; Defined at:
  4029 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  to              2   41[BANK0 ] PTR unsigned char 
  4032 ;;		 -> terminal_textAttributes@output_buff(15), 
  4033 ;;  from            2   43[BANK0 ] PTR const unsigned char 
  4034 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
  4035 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
  4036 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
  4037 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
  4038 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
  4039 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  4040 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;  cp              2   45[BANK0 ] PTR unsigned char 
  4043 ;;		 -> terminal_textAttributes@output_buff(15), 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  2   41[BANK0 ] PTR unsigned char 
  4046 ;; Registers used:
  4047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4053 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4054 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4056 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4057 ;;Total ram usage:        6 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:   10
  4060 ;; This function calls:
  4061 ;;		Nothing
  4062 ;; This function is called by:
  4063 ;;		_terminal_textAttributes
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text8
  4068  013922                     __ptext8:
  4069                           	opt stack 0
  4070  013922                     _strcat:
  4071                           	opt stack 18
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;incstack = 0
  4075  013922  C089  F08D         	movff	strcat@to,strcat@cp
  4076  013926  C08A  F08E         	movff	strcat@to+1,strcat@cp+1
  4077  01392A  D003               	goto	l1514
  4078  01392C  0100               	movlb	0	; () banked
  4079  01392E  4B8D               	infsnz	strcat@cp& (0+255),f,b
  4080  013930  2B8E               	incf	(strcat@cp+1)& (0+255),f,b
  4081  013932                     l1514:
  4082                           
  4083                           ; BSR set to: 0
  4084  013932  C08D  FFD9         	movff	strcat@cp,fsr2l
  4085  013936  C08E  FFDA         	movff	strcat@cp+1,fsr2h
  4086  01393A  50DF               	movf	indf2,w,c
  4087  01393C  B4D8               	btfsc	status,2,c
  4088  01393E  D006               	goto	l1517
  4089  013940  D7F5               	goto	l1515
  4090  013942  0100               	movlb	0	; () banked
  4091  013944  4B8D               	infsnz	strcat@cp& (0+255),f,b
  4092  013946  2B8E               	incf	(strcat@cp+1)& (0+255),f,b
  4093  013948  4B8B               	infsnz	strcat@from& (0+255),f,b
  4094  01394A  2B8C               	incf	(strcat@from+1)& (0+255),f,b
  4095  01394C                     l1517:
  4096                           
  4097                           ; BSR set to: 0
  4098  01394C  C08B  FFF6         	movff	strcat@from,tblptrl
  4099  013950  C08C  FFF7         	movff	strcat@from+1,tblptrh
  4100  013954                     	if	0	;tblptru may be non-zero
  4101  013954                     	endif
  4102  013954                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4103  013954  0E00               	movlw	low (__mediumconst shr (0+16))
  4104  013956  6EF8               	movwf	tblptru,c
  4105  013958                     	endif
  4106  013958  C08D  FFD9         	movff	strcat@cp,fsr2l
  4107  01395C  C08E  FFDA         	movff	strcat@cp+1,fsr2h
  4108  013960  0008               	tblrd		*
  4109  013962  CFF5 FFDF          	movff	tablat,indf2
  4110  013966  50DF               	movf	indf2,w,c
  4111  013968  B4D8               	btfsc	status,2,c
  4112  01396A  0012               	return	
  4113  01396C  D7EA               	goto	l1518
  4114  01396E                     __end_of_strcat:
  4115                           	opt stack 0
  4116                           tblptru	equ	0xFF8
  4117                           tblptrh	equ	0xFF7
  4118                           tblptrl	equ	0xFF6
  4119                           tablat	equ	0xFF5
  4120                           intcon	equ	0xFF2
  4121                           postinc0	equ	0xFEE
  4122                           wreg	equ	0xFE8
  4123                           indf2	equ	0xFDF
  4124                           postinc2	equ	0xFDE
  4125                           fsr2h	equ	0xFDA
  4126                           fsr2l	equ	0xFD9
  4127                           status	equ	0xFD8
  4128                           
  4129 ;; *************** function _strcmp *****************
  4130 ;; Defined at:
  4131 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;  s1              2   41[BANK0 ] PTR const unsigned char 
  4134 ;;		 -> line(64), 
  4135 ;;  s2              2   43[BANK0 ] PTR const unsigned char 
  4136 ;;		 -> STR_61(5), STR_57(15), STR_53(16), STR_48(4), 
  4137 ;;		 -> STR_47(6), STR_44(6), STR_41(6), 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  r               1   46[BANK0 ] char 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  2   41[BANK0 ] int 
  4142 ;; Registers used:
  4143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4149 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4150 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4151 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4152 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4153 ;;Total ram usage:        6 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:   10
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_ringBufferLUT
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text9
  4164  013884                     __ptext9:
  4165                           	opt stack 0
  4166  013884                     _strcmp:
  4167                           	opt stack 18
  4168                           
  4169                           ;incstack = 0
  4170  013884  D005               	goto	l1523
  4171  013886  0100               	movlb	0	; () banked
  4172  013888  4B89               	infsnz	strcmp@s1& (0+255),f,b
  4173  01388A  2B8A               	incf	(strcmp@s1+1)& (0+255),f,b
  4174  01388C  4B8B               	infsnz	strcmp@s2& (0+255),f,b
  4175  01388E  2B8C               	incf	(strcmp@s2+1)& (0+255),f,b
  4176  013890                     l1523:
  4177                           
  4178                           ; BSR set to: 0
  4179  013890  C089  FFD9         	movff	strcmp@s1,fsr2l
  4180  013894  C08A  FFDA         	movff	strcmp@s1+1,fsr2h
  4181  013898  50DF               	movf	indf2,w,c
  4182  01389A  0100               	movlb	0	; () banked
  4183  01389C  6F8D               	movwf	??_strcmp& (0+255),b
  4184  01389E  C08B  FFF6         	movff	strcmp@s2,tblptrl
  4185  0138A2  C08C  FFF7         	movff	strcmp@s2+1,tblptrh
  4186  0138A6                     	if	0	;tblptru may be non-zero
  4187  0138A6                     	endif
  4188  0138A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4189  0138A6  0E00               	movlw	low (__mediumconst shr (0+16))
  4190  0138A8  6EF8               	movwf	tblptru,c
  4191  0138AA                     	endif
  4192  0138AA  0008               	tblrd		*
  4193  0138AC  50F5               	movf	tablat,w,c
  4194  0138AE  0800               	sublw	0
  4195  0138B0  258D               	addwf	??_strcmp& (0+255),w,b
  4196  0138B2  6F8E               	movwf	strcmp@r& (0+255),b
  4197  0138B4  518E               	movf	strcmp@r& (0+255),w,b
  4198  0138B6  A4D8               	btfss	status,2,c
  4199  0138B8  D007               	goto	u7770
  4200                           
  4201                           ; BSR set to: 0
  4202  0138BA  C089  FFD9         	movff	strcmp@s1,fsr2l
  4203  0138BE  C08A  FFDA         	movff	strcmp@s1+1,fsr2h
  4204  0138C2  50DF               	movf	indf2,w,c
  4205  0138C4  A4D8               	btfss	status,2,c
  4206  0138C6  D7DF               	goto	l1524
  4207  0138C8                     u7770:
  4208                           
  4209                           ; BSR set to: 0
  4210                           
  4211                           ; BSR set to: 0
  4212                           
  4213                           ; BSR set to: 0
  4214  0138C8  518E               	movf	strcmp@r& (0+255),w,b
  4215  0138CA  6F89               	movwf	?_strcmp& (0+255),b
  4216  0138CC  6B8A               	clrf	(?_strcmp+1)& (0+255),b
  4217  0138CE  BF89               	btfsc	?_strcmp& (0+255),7,b
  4218  0138D0  078A               	decf	(?_strcmp+1)& (0+255),f,b
  4219  0138D2  0012               	return	
  4220  0138D4                     __end_of_strcmp:
  4221                           	opt stack 0
  4222                           tblptru	equ	0xFF8
  4223                           tblptrh	equ	0xFF7
  4224                           tblptrl	equ	0xFF6
  4225                           tablat	equ	0xFF5
  4226                           intcon	equ	0xFF2
  4227                           postinc0	equ	0xFEE
  4228                           wreg	equ	0xFE8
  4229                           indf2	equ	0xFDF
  4230                           postinc2	equ	0xFDE
  4231                           fsr2h	equ	0xFDA
  4232                           fsr2l	equ	0xFD9
  4233                           status	equ	0xFD8
  4234                           
  4235 ;; *************** function _EUSART2_Read *****************
  4236 ;; Defined at:
  4237 ;;		line 130 in file "mcc_generated_files/eusart2.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  readValue       1   41[BANK0 ] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      unsigned char 
  4244 ;; Registers used:
  4245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4252 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4254 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4255 ;;Total ram usage:        1 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:   10
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_terminal_ringBufferPull
  4262 ;;		_getch
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text10
  4267  0139FC                     __ptext10:
  4268                           	opt stack 0
  4269  0139FC                     _EUSART2_Read:
  4270                           	opt stack 19
  4271                           
  4272                           ;eusart2.c: 132: uint8_t readValue = 0;
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;incstack = 0
  4276  0139FC  0E00               	movlw	0
  4277  0139FE  0100               	movlb	0	; () banked
  4278  013A00  6F89               	movwf	EUSART2_Read@readValue& (0+255),b
  4279                           
  4280                           ;eusart2.c: 134: while(0 == eusart2RxCount)
  4281  013A02  D001               	goto	l359
  4282  013A04                     l360:
  4283                           
  4284                           ; BSR set to: 0
  4285  013A04  0004               	clrwdt		;# 
  4286  013A06                     l359:
  4287  013A06  0100               	movlb	0	; () banked
  4288  013A08  51D1               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  4289  013A0A  B4D8               	btfsc	status,2,c
  4290  013A0C  D7FB               	goto	l360
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;eusart2.c: 137: }
  4294                           ;eusart2.c: 139: readValue = eusart2RxBuffer[eusart2RxTail++];
  4295                           
  4296                           ; BSR set to: 0
  4297  013A0E  51D2               	movf	_eusart2RxTail& (0+255),w,b	;volatile
  4298  013A10  0D01               	mullw	1
  4299  013A12  0E00               	movlw	low _eusart2RxBuffer
  4300  013A14  24F3               	addwf	prodl,w,c
  4301  013A16  6ED9               	movwf	fsr2l,c
  4302  013A18  0E01               	movlw	high _eusart2RxBuffer
  4303  013A1A  20F4               	addwfc	prodh,w,c
  4304  013A1C  6EDA               	movwf	fsr2h,c
  4305  013A1E  50DF               	movf	indf2,w,c
  4306  013A20  6F89               	movwf	EUSART2_Read@readValue& (0+255),b
  4307                           
  4308                           ; BSR set to: 0
  4309  013A22  2BD2               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;eusart2.c: 140: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  4313  013A24  0E3F               	movlw	63
  4314  013A26  65D2               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  4315  013A28  D002               	goto	l362
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;eusart2.c: 141: {
  4319                           ;eusart2.c: 142: eusart2RxTail = 0;
  4320  013A2A  0E00               	movlw	0
  4321  013A2C  6FD2               	movwf	_eusart2RxTail& (0+255),b	;volatile
  4322  013A2E                     l362:
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;eusart2.c: 143: }
  4326                           ;eusart2.c: 144: PIE3bits.RC2IE = 0;
  4327                           
  4328                           ; BSR set to: 0
  4329  013A2E  010E               	movlb	14	; () banked
  4330  013A30  9F2C               	bcf	44,7,b	;volatile
  4331                           
  4332                           ; BSR set to: 14
  4333                           ;eusart2.c: 145: eusart2RxCount--;
  4334  013A32  0100               	movlb	0	; () banked
  4335  013A34  07D1               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;eusart2.c: 146: PIE3bits.RC2IE = 1;
  4339  013A36  010E               	movlb	14	; () banked
  4340  013A38  8F2C               	bsf	44,7,b	;volatile
  4341                           
  4342                           ; BSR set to: 14
  4343                           ;eusart2.c: 148: return readValue;
  4344  013A3A  0100               	movlb	0	; () banked
  4345  013A3C  5189               	movf	EUSART2_Read@readValue& (0+255),w,b
  4346  013A3E  0012               	return	
  4347  013A40                     __end_of_EUSART2_Read:
  4348                           	opt stack 0
  4349                           tblptru	equ	0xFF8
  4350                           tblptrh	equ	0xFF7
  4351                           tblptrl	equ	0xFF6
  4352                           tablat	equ	0xFF5
  4353                           prodh	equ	0xFF4
  4354                           prodl	equ	0xFF3
  4355                           intcon	equ	0xFF2
  4356                           postinc0	equ	0xFEE
  4357                           wreg	equ	0xFE8
  4358                           indf2	equ	0xFDF
  4359                           postinc2	equ	0xFDE
  4360                           fsr2h	equ	0xFDA
  4361                           fsr2l	equ	0xFD9
  4362                           status	equ	0xFD8
  4363                           
  4364 ;; *************** function _terminal_clearTerminal *****************
  4365 ;; Defined at:
  4366 ;;		line 80 in file "ring_buffer_interface.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;		None
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;		None
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      void 
  4373 ;; Registers used:
  4374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4384 ;;Total ram usage:        0 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; Hardware stack levels required when called:   14
  4387 ;; This function calls:
  4388 ;;		_printf
  4389 ;; This function is called by:
  4390 ;;		_main
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text11
  4395  013DC8                     __ptext11:
  4396                           	opt stack 0
  4397  013DC8                     _terminal_clearTerminal:
  4398                           	opt stack 16
  4399                           
  4400                           ;ring_buffer_interface.c: 81: printf("\033[2J");
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;incstack = 0
  4404  013DC8  0EAD               	movlw	low STR_2
  4405  013DCA  0101               	movlb	1	; () banked
  4406  013DCC  6FD3               	movwf	printf@f& (0+255),b
  4407  013DCE  0EFF               	movlw	high STR_2
  4408  013DD0  6FD4               	movwf	(printf@f+1)& (0+255),b
  4409  013DD2  EC00  F080         	call	_printf	;wreg free
  4410  013DD6  0012               	return		;funcret
  4411  013DD8                     __end_of_terminal_clearTerminal:
  4412                           	opt stack 0
  4413                           tblptru	equ	0xFF8
  4414                           tblptrh	equ	0xFF7
  4415                           tblptrl	equ	0xFF6
  4416                           tablat	equ	0xFF5
  4417                           prodh	equ	0xFF4
  4418                           prodl	equ	0xFF3
  4419                           intcon	equ	0xFF2
  4420                           postinc0	equ	0xFEE
  4421                           wreg	equ	0xFE8
  4422                           indf2	equ	0xFDF
  4423                           postinc2	equ	0xFDE
  4424                           fsr2h	equ	0xFDA
  4425                           fsr2l	equ	0xFD9
  4426                           status	equ	0xFD8
  4427                           
  4428 ;; *************** function _printf *****************
  4429 ;; Defined at:
  4430 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  f               2   18[BANK1 ] PTR const unsigned char 
  4433 ;;		 -> STR_64(3), STR_63(337), STR_62(3), STR_60(3), 
  4434 ;;		 -> STR_59(34), STR_58(3), STR_56(3), STR_55(35), 
  4435 ;;		 -> STR_54(3), STR_52(3), STR_51(47), STR_50(17), 
  4436 ;;		 -> STR_49(3), STR_46(4), STR_45(5), STR_43(4), 
  4437 ;;		 -> STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), 
  4438 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
  4439 ;;		 -> STR_5(3), STR_4(372), STR_3(4), STR_2(5), 
  4440 ;;		 -> STR_1(4), 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  tmpval          4   44[BANK1 ] struct .
  4443 ;;  val             4   38[BANK1 ] unsigned long 
  4444 ;;  fval            3   48[BANK1 ] unsigned long 
  4445 ;;  cp              3    0        PTR const unsigned char 
  4446 ;;  exp             2   42[BANK1 ] int 
  4447 ;;  prec            2   36[BANK1 ] int 
  4448 ;;  flag            2   34[BANK1 ] unsigned short 
  4449 ;;  ap              2   32[BANK1 ] PTR void [1]
  4450 ;;		 -> ?i2_printf(2), ?_printf(2), 
  4451 ;;  len             2    0        unsigned int 
  4452 ;;  width           2    0        int 
  4453 ;;  c               1   51[BANK1 ] char 
  4454 ;;  d               1    0        unsigned char 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  2   18[BANK1 ] int 
  4457 ;; Registers used:
  4458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4464 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4465 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4466 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4467 ;;      Totals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4468 ;;Total ram usage:       34 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:   13
  4471 ;; This function calls:
  4472 ;;		___awdiv
  4473 ;;		___ftadd
  4474 ;;		___ftge
  4475 ;;		___ftmul
  4476 ;;		___ftneg
  4477 ;;		___ftsub
  4478 ;;		___fttol
  4479 ;;		___lldiv
  4480 ;;		___llmod
  4481 ;;		___lltoft
  4482 ;;		___wmul
  4483 ;;		__div_to_l_
  4484 ;;		__tdiv_to_l_
  4485 ;;		_fround
  4486 ;;		_putch
  4487 ;;		_scale
  4488 ;; This function is called by:
  4489 ;;		_terminal_clearTerminal
  4490 ;;		_terminal_setCursorHome
  4491 ;;		_terminal_textAttributes
  4492 ;;		_ringBufferLUT
  4493 ;;		_terminal_printResetMessage
  4494 ;;		_terminal_clearLine
  4495 ;;		_terminal_saveCursor
  4496 ;;		_terminal_returnCursor
  4497 ;;		_terminal_printNewline
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text12
  4502  010000                     __ptext12:
  4503                           	opt stack 0
  4504  010000                     _printf:
  4505                           	opt stack 15
  4506                           
  4507                           ;doprnt.c: 466: va_list ap;
  4508                           ;doprnt.c: 499: signed char c;
  4509                           ;doprnt.c: 501: int width;
  4510                           ;doprnt.c: 504: int prec;
  4511                           ;doprnt.c: 508: unsigned short flag;
  4512                           ;doprnt.c: 515: char d;
  4513                           ;doprnt.c: 516: double fval;
  4514                           ;doprnt.c: 517: int exp;
  4515                           ;doprnt.c: 523: union {
  4516                           ;doprnt.c: 524: unsigned long vd;
  4517                           ;doprnt.c: 525: double integ;
  4518                           ;doprnt.c: 526: } tmpval;
  4519                           ;doprnt.c: 528: unsigned long val;
  4520                           ;doprnt.c: 529: unsigned len;
  4521                           ;doprnt.c: 530: const char * cp;
  4522                           ;doprnt.c: 533: *ap = __va_start();
  4523                           
  4524                           ;incstack = 0
  4525  010000  0ED5               	movlw	low (?_printf+2)
  4526  010002  0101               	movlb	1	; () banked
  4527  010004  6FE1               	movwf	printf@ap& (0+255),b
  4528  010006  0E01               	movlw	high (?_printf+2)
  4529  010008  6FE2               	movwf	(printf@ap+1)& (0+255),b
  4530                           
  4531                           ;doprnt.c: 536: while(c = *f++) {
  4532  01000A  D311               	goto	l926
  4533  01000C                     
  4534                           ; BSR set to: 1
  4535                           ;doprnt.c: 538: if(c != '%')
  4536                           
  4537                           ; BSR set to: 1
  4538  01000C  0E25               	movlw	37
  4539  01000E  19F4               	xorwf	printf@c& (0+255),w,b
  4540  010010  B4D8               	btfsc	status,2,c
  4541  010012  D004               	goto	l882
  4542                           
  4543                           ; BSR set to: 1
  4544                           ;doprnt.c: 540: {
  4545                           ;doprnt.c: 541: (putch(c) );
  4546  010014  51F4               	movf	printf@c& (0+255),w,b
  4547  010016  ECF4  F09E         	call	_putch
  4548                           
  4549                           ;doprnt.c: 542: continue;
  4550  01001A  D309               	goto	l926
  4551  01001C                     l882:
  4552                           
  4553                           ;doprnt.c: 543: }
  4554                           ;doprnt.c: 548: flag = 0;
  4555  01001C  0E00               	movlw	0
  4556  01001E  0101               	movlb	1	; () banked
  4557  010020  6FE4               	movwf	(printf@flag+1)& (0+255),b
  4558  010022  0E00               	movlw	0
  4559  010024  6FE3               	movwf	printf@flag& (0+255),b
  4560                           
  4561                           ;doprnt.c: 635: switch(c = *f++) {
  4562  010026  D006               	goto	l883
  4563  010028                     
  4564                           ; BSR set to: 1
  4565                           ;doprnt.c: 663: flag |= 0x400;
  4566                           
  4567                           ; BSR set to: 1
  4568  010028  85E4               	bsf	(printf@flag+1)& (0+255),2,b
  4569                           
  4570                           ;doprnt.c: 664: break;
  4571  01002A  D026               	goto	l887
  4572  01002C                     
  4573                           ; BSR set to: 1
  4574                           ;doprnt.c: 809: (putch(c) );
  4575                           
  4576                           ; BSR set to: 1
  4577  01002C  51F4               	movf	printf@c& (0+255),w,b
  4578  01002E  ECF4  F09E         	call	_putch
  4579                           
  4580                           ;doprnt.c: 810: continue;
  4581  010032  D2FD               	goto	l926
  4582  010034                     l883:
  4583  010034  0101               	movlb	1	; () banked
  4584  010036  51D3               	movf	printf@f& (0+255),w,b
  4585  010038  6FD8               	movwf	??_printf& (0+255),b
  4586  01003A  51D4               	movf	(printf@f+1)& (0+255),w,b
  4587  01003C  6FD9               	movwf	(??_printf+1)& (0+255),b
  4588  01003E  4BD3               	infsnz	printf@f& (0+255),f,b
  4589  010040  2BD4               	incf	(printf@f+1)& (0+255),f,b
  4590  010042  C1D8  FFF6         	movff	??_printf,tblptrl
  4591  010046  C1D9  FFF7         	movff	??_printf+1,tblptrh
  4592  01004A  0E00               	movlw	low (__mediumconst shr (0+16))
  4593  01004C  6EF8               	movwf	tblptru,c
  4594  01004E  0E0D               	movlw	(high __ramtop+-1)
  4595  010050  64F7               	cpfsgt	tblptrh,c
  4596  010052  D003               	bra	u9837
  4597  010054  0008               	tblrd		*
  4598  010056  50F5               	movf	tablat,w,c
  4599  010058  D005               	bra	u9830
  4600  01005A                     u9837:
  4601  01005A  CFF6 FFD9          	movff	tblptrl,fsr2l
  4602  01005E  CFF7 FFDA          	movff	tblptrh,fsr2h
  4603  010062  50DF               	movf	indf2,w,c
  4604  010064                     u9830:
  4605  010064  0101               	movlb	1	; () banked
  4606  010066  6FF4               	movwf	printf@c& (0+255),b
  4607  010068  51F4               	movf	printf@c& (0+255),w,b
  4608                           
  4609                           ; Switch size 1, requested type "space"
  4610                           ; Number of cases is 2, Range of values is 0 to 102
  4611                           ; switch strategies available:
  4612                           ; Name         Instructions Cycles
  4613                           ; simple_byte            7     4 (average)
  4614                           ;	Chosen strategy is simple_byte
  4615  01006A  0A00               	xorlw	0	; case 0
  4616  01006C  B4D8               	btfsc	status,2,c
  4617  01006E  0012               	return	
  4618  010070  0A66               	xorlw	102	; case 102
  4619  010072  B4D8               	btfsc	status,2,c
  4620  010074  D7D9               	goto	l886
  4621  010076  D7DA               	goto	l888
  4622  010078                     l887:
  4623                           
  4624                           ;doprnt.c: 825: if(flag & (0x700)) {
  4625                           
  4626                           ; BSR set to: 1
  4627  010078  0E07               	movlw	7
  4628  01007A  0101               	movlb	1	; () banked
  4629  01007C  15E4               	andwf	(printf@flag+1)& (0+255),w,b
  4630  01007E  B4D8               	btfsc	status,2,c
  4631  010080  D2C9               	goto	l889
  4632                           
  4633                           ; BSR set to: 1
  4634                           ;doprnt.c: 829: prec = 6;
  4635  010082  0E00               	movlw	0
  4636  010084  6FE6               	movwf	(printf@prec+1)& (0+255),b
  4637  010086  0E06               	movlw	6
  4638  010088  6FE5               	movwf	printf@prec& (0+255),b
  4639                           
  4640                           ; BSR set to: 1
  4641                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4642  01008A  C1E1  FFD9         	movff	printf@ap,fsr2l
  4643  01008E  C1E2  FFDA         	movff	printf@ap+1,fsr2h
  4644  010092  CFDE F1F1          	movff	postinc2,printf@fval
  4645  010096  CFDE F1F2          	movff	postinc2,printf@fval+1
  4646  01009A  CFDD F1F3          	movff	postdec2,printf@fval+2
  4647                           
  4648                           ; BSR set to: 1
  4649  01009E  0E03               	movlw	3
  4650  0100A0  27E1               	addwf	printf@ap& (0+255),f,b
  4651  0100A2  0E00               	movlw	0
  4652  0100A4  23E2               	addwfc	(printf@ap+1)& (0+255),f,b
  4653                           
  4654                           ; BSR set to: 1
  4655                           ;doprnt.c: 831: if(fval < 0.0) {
  4656  0100A6  AFF3               	btfss	(printf@fval+2)& (0+255),7,b
  4657  0100A8  D011               	goto	l890
  4658                           
  4659                           ; BSR set to: 1
  4660                           ;doprnt.c: 832: fval = -fval;
  4661  0100AA  C1F1  F089         	movff	printf@fval,___ftneg@f1
  4662  0100AE  C1F2  F08A         	movff	printf@fval+1,___ftneg@f1+1
  4663  0100B2  C1F3  F08B         	movff	printf@fval+2,___ftneg@f1+2
  4664  0100B6  EC1D  F09E         	call	___ftneg	;wreg free
  4665  0100BA  C089  F1F1         	movff	?___ftneg,printf@fval
  4666  0100BE  C08A  F1F2         	movff	?___ftneg+1,printf@fval+1
  4667  0100C2  C08B  F1F3         	movff	?___ftneg+2,printf@fval+2
  4668                           
  4669                           ;doprnt.c: 833: flag |= 0x03;
  4670  0100C6  0E03               	movlw	3
  4671  0100C8  0101               	movlb	1	; () banked
  4672  0100CA  13E3               	iorwf	printf@flag& (0+255),f,b
  4673  0100CC                     l890:
  4674                           
  4675                           ; BSR set to: 1
  4676                           ;doprnt.c: 834: }
  4677                           ;doprnt.c: 835: exp = 0;
  4678                           
  4679                           ; BSR set to: 1
  4680  0100CC  0E00               	movlw	0
  4681  0100CE  6FEC               	movwf	(printf@exp+1)& (0+255),b
  4682  0100D0  0E00               	movlw	0
  4683  0100D2  6FEB               	movwf	printf@exp& (0+255),b
  4684                           
  4685                           ; BSR set to: 1
  4686                           ;doprnt.c: 836: if( fval!=0) {
  4687  0100D4  51F1               	movf	printf@fval& (0+255),w,b
  4688  0100D6  11F2               	iorwf	(printf@fval+1)& (0+255),w,b
  4689  0100D8  11F3               	iorwf	(printf@fval+2)& (0+255),w,b
  4690  0100DA  B4D8               	btfsc	status,2,c
  4691  0100DC  D08C               	goto	l895
  4692                           
  4693                           ; BSR set to: 1
  4694                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  4695  0100DE  0E82               	movlw	130
  4696  0100E0  6FD8               	movwf	??_printf& (0+255),b
  4697  0100E2  0EFF               	movlw	255
  4698  0100E4  6FD9               	movwf	(??_printf+1)& (0+255),b
  4699  0100E6  C1F1  F1DA         	movff	printf@fval,??_printf+2
  4700  0100EA  C1F2  F1DB         	movff	printf@fval+1,??_printf+3
  4701  0100EE  C1F3  F1DC         	movff	printf@fval+2,??_printf+4
  4702  0100F2  C1F4  F1DD         	movff	printf@fval+3,??_printf+5
  4703  0100F6  0E10               	movlw	16
  4704  0100F8  D005               	goto	u9870
  4705  0100FA                     u9875:
  4706  0100FA  90D8               	bcf	status,0,c
  4707  0100FC  33DD               	rrcf	(??_printf+5)& (0+255),f,b
  4708  0100FE  33DC               	rrcf	(??_printf+4)& (0+255),f,b
  4709  010100  33DB               	rrcf	(??_printf+3)& (0+255),f,b
  4710  010102  33DA               	rrcf	(??_printf+2)& (0+255),f,b
  4711  010104                     u9870:
  4712  010104  2EE8               	decfsz	wreg,f,c
  4713  010106  D7F9               	goto	u9875
  4714  010108  51DA               	movf	(??_printf+2)& (0+255),w,b
  4715  01010A  25D8               	addwf	??_printf& (0+255),w,b
  4716  01010C  6FEB               	movwf	printf@exp& (0+255),b
  4717  01010E  0E00               	movlw	0
  4718  010110  21D9               	addwfc	(??_printf+1)& (0+255),w,b
  4719  010112  6FEC               	movwf	(printf@exp+1)& (0+255),b
  4720                           
  4721                           ; BSR set to: 1
  4722                           ;doprnt.c: 838: exp--;
  4723  010114  07EB               	decf	printf@exp& (0+255),f,b
  4724  010116  A0D8               	btfss	status,0,c
  4725  010118  07EC               	decf	(printf@exp+1)& (0+255),f,b
  4726                           
  4727                           ; BSR set to: 1
  4728                           ;doprnt.c: 839: exp *= 3;
  4729  01011A  C1EB  F097         	movff	printf@exp,___wmul@multiplier
  4730  01011E  C1EC  F098         	movff	printf@exp+1,___wmul@multiplier+1
  4731  010122  0E00               	movlw	0
  4732  010124  0100               	movlb	0	; () banked
  4733  010126  6F9A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4734  010128  0E03               	movlw	3
  4735  01012A  6F99               	movwf	___wmul@multiplicand& (0+255),b
  4736  01012C  ECCE  F09D         	call	___wmul	;wreg free
  4737  010130  C097  F1EB         	movff	?___wmul,printf@exp
  4738  010134  C098  F1EC         	movff	?___wmul+1,printf@exp+1
  4739                           
  4740                           ;doprnt.c: 840: exp /= 10;
  4741  010138  C1EB  F08F         	movff	printf@exp,___awdiv@dividend
  4742  01013C  C1EC  F090         	movff	printf@exp+1,___awdiv@dividend+1
  4743  010140  0E00               	movlw	0
  4744  010142  0100               	movlb	0	; () banked
  4745  010144  6F92               	movwf	(___awdiv@divisor+1)& (0+255),b
  4746  010146  0E0A               	movlw	10
  4747  010148  6F91               	movwf	___awdiv@divisor& (0+255),b
  4748  01014A  EC34  F099         	call	___awdiv	;wreg free
  4749  01014E  C08F  F1EB         	movff	?___awdiv,printf@exp
  4750  010152  C090  F1EC         	movff	?___awdiv+1,printf@exp+1
  4751                           
  4752                           ;doprnt.c: 841: if(exp < 0)
  4753  010156  0101               	movlb	1	; () banked
  4754  010158  AFEC               	btfss	(printf@exp+1)& (0+255),7,b
  4755  01015A  D003               	goto	l892
  4756                           
  4757                           ; BSR set to: 1
  4758                           ;doprnt.c: 842: exp--;
  4759  01015C  07EB               	decf	printf@exp& (0+255),f,b
  4760  01015E  A0D8               	btfss	status,0,c
  4761  010160  07EC               	decf	(printf@exp+1)& (0+255),f,b
  4762  010162                     l892:
  4763                           
  4764                           ; BSR set to: 1
  4765                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  4766                           
  4767                           ; BSR set to: 1
  4768  010162  51EB               	movf	printf@exp& (0+255),w,b
  4769  010164  0800               	sublw	0
  4770  010166  EC42  F086         	call	_scale
  4771  01016A  C0AC  F1ED         	movff	?_scale,printf@tmpval
  4772  01016E  C0AD  F1EE         	movff	?_scale+1,printf@tmpval+1
  4773  010172  C0AE  F1EF         	movff	?_scale+2,printf@tmpval+2
  4774                           
  4775                           ;doprnt.c: 847: tmpval.integ *= fval;
  4776  010176  C1ED  F09D         	movff	printf@tmpval,___ftmul@f1
  4777  01017A  C1EE  F09E         	movff	printf@tmpval+1,___ftmul@f1+1
  4778  01017E  C1EF  F09F         	movff	printf@tmpval+2,___ftmul@f1+2
  4779  010182  C1F1  F0A0         	movff	printf@fval,___ftmul@f2
  4780  010186  C1F2  F0A1         	movff	printf@fval+1,___ftmul@f2+1
  4781  01018A  C1F3  F0A2         	movff	printf@fval+2,___ftmul@f2+2
  4782  01018E  EC38  F095         	call	___ftmul	;wreg free
  4783  010192  C09D  F1ED         	movff	?___ftmul,printf@tmpval
  4784  010196  C09E  F1EE         	movff	?___ftmul+1,printf@tmpval+1
  4785  01019A  C09F  F1EF         	movff	?___ftmul+2,printf@tmpval+2
  4786                           
  4787                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  4788  01019E  C1ED  F089         	movff	printf@tmpval,___ftge@ff1
  4789  0101A2  C1EE  F08A         	movff	printf@tmpval+1,___ftge@ff1+1
  4790  0101A6  C1EF  F08B         	movff	printf@tmpval+2,___ftge@ff1+2
  4791  0101AA  0E00               	movlw	0
  4792  0101AC  0100               	movlb	0	; () banked
  4793  0101AE  6F8C               	movwf	___ftge@ff2& (0+255),b
  4794  0101B0  0E80               	movlw	128
  4795  0101B2  6F8D               	movwf	(___ftge@ff2+1)& (0+255),b
  4796  0101B4  0E3F               	movlw	63
  4797  0101B6  6F8E               	movwf	(___ftge@ff2+2)& (0+255),b
  4798  0101B8  EC5C  F098         	call	___ftge	;wreg free
  4799  0101BC  0100               	movlb	0	; () banked
  4800  0101BE  B0D8               	btfsc	status,0,c
  4801  0101C0  D005               	goto	l893
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;doprnt.c: 849: exp--;
  4805  0101C2  0101               	movlb	1	; () banked
  4806  0101C4  07EB               	decf	printf@exp& (0+255),f,b
  4807  0101C6  A0D8               	btfss	status,0,c
  4808  0101C8  07EC               	decf	(printf@exp+1)& (0+255),f,b
  4809  0101CA  D015               	goto	l895
  4810  0101CC                     l893:
  4811                           
  4812                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  4813                           
  4814                           ; BSR set to: 1
  4815  0101CC  C1ED  F089         	movff	printf@tmpval,___ftge@ff1
  4816  0101D0  C1EE  F08A         	movff	printf@tmpval+1,___ftge@ff1+1
  4817  0101D4  C1EF  F08B         	movff	printf@tmpval+2,___ftge@ff1+2
  4818  0101D8  0E00               	movlw	0
  4819  0101DA  0100               	movlb	0	; () banked
  4820  0101DC  6F8C               	movwf	___ftge@ff2& (0+255),b
  4821  0101DE  0E20               	movlw	32
  4822  0101E0  6F8D               	movwf	(___ftge@ff2+1)& (0+255),b
  4823  0101E2  0E41               	movlw	65
  4824  0101E4  6F8E               	movwf	(___ftge@ff2+2)& (0+255),b
  4825  0101E6  EC5C  F098         	call	___ftge	;wreg free
  4826  0101EA  0100               	movlb	0	; () banked
  4827  0101EC  A0D8               	btfss	status,0,c
  4828  0101EE  D003               	goto	l895
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;doprnt.c: 851: exp++;
  4832  0101F0  0101               	movlb	1	; () banked
  4833  0101F2  4BEB               	infsnz	printf@exp& (0+255),f,b
  4834  0101F4  2BEC               	incf	(printf@exp+1)& (0+255),f,b
  4835  0101F6                     l895:
  4836                           
  4837                           ;doprnt.c: 852: }
  4838                           ;doprnt.c: 1112: if(prec <= 12)
  4839                           
  4840                           ; BSR set to: 1
  4841                           
  4842                           ; BSR set to: 1
  4843                           
  4844                           ; BSR set to: 1
  4845  0101F6  0101               	movlb	1	; () banked
  4846  0101F8  BFE6               	btfsc	(printf@prec+1)& (0+255),7,b
  4847  0101FA  D006               	goto	u9910
  4848  0101FC  51E6               	movf	(printf@prec+1)& (0+255),w,b
  4849  0101FE  E11B               	bnz	l8067
  4850  010200  0E0D               	movlw	13
  4851  010202  5DE5               	subwf	printf@prec& (0+255),w,b
  4852  010204  B0D8               	btfsc	status,0,c
  4853  010206  D017               	goto	l896
  4854  010208                     u9910:
  4855                           
  4856                           ; BSR set to: 1
  4857                           ;doprnt.c: 1113: fval += fround(prec);
  4858  010208  C1F1  F1C1         	movff	printf@fval,___ftadd@f1
  4859  01020C  C1F2  F1C2         	movff	printf@fval+1,___ftadd@f1+1
  4860  010210  C1F3  F1C3         	movff	printf@fval+2,___ftadd@f1+2
  4861  010214  51E5               	movf	printf@prec& (0+255),w,b
  4862  010216  EC5E  F08C         	call	_fround
  4863  01021A  C0AC  F1C4         	movff	?_fround,___ftadd@f2
  4864  01021E  C0AD  F1C5         	movff	?_fround+1,___ftadd@f2+1
  4865  010222  C0AE  F1C6         	movff	?_fround+2,___ftadd@f2+2
  4866  010226  EC04  F090         	call	___ftadd	;wreg free
  4867  01022A  C1C1  F1F1         	movff	?___ftadd,printf@fval
  4868  01022E  C1C2  F1F2         	movff	?___ftadd+1,printf@fval+1
  4869  010232  C1C3  F1F3         	movff	?___ftadd+2,printf@fval+2
  4870  010236                     l896:
  4871  010236                     l8067:
  4872                           
  4873                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  4874  010236  0101               	movlb	1	; () banked
  4875  010238  BFEC               	btfsc	(printf@exp+1)& (0+255),7,b
  4876  01023A  D006               	goto	u9920
  4877  01023C  51EC               	movf	(printf@exp+1)& (0+255),w,b
  4878  01023E  E121               	bnz	l8075
  4879  010240  0E0A               	movlw	10
  4880  010242  5DEB               	subwf	printf@exp& (0+255),w,b
  4881  010244  B0D8               	btfsc	status,0,c
  4882  010246  D01D               	goto	u9950
  4883  010248                     u9920:
  4884                           
  4885                           ; BSR set to: 1
  4886  010248  51F1               	movf	printf@fval& (0+255),w,b
  4887  01024A  11F2               	iorwf	(printf@fval+1)& (0+255),w,b
  4888  01024C  11F3               	iorwf	(printf@fval+2)& (0+255),w,b
  4889  01024E  B4D8               	btfsc	status,2,c
  4890  010250  D059               	goto	l897
  4891                           
  4892                           ; BSR set to: 1
  4893  010252  C1F1  F0B3         	movff	printf@fval,___fttol@f1
  4894  010256  C1F2  F0B4         	movff	printf@fval+1,___fttol@f1+1
  4895  01025A  C1F3  F0B5         	movff	printf@fval+2,___fttol@f1+2
  4896  01025E  ECAD  F094         	call	___fttol	;wreg free
  4897  010262  0100               	movlb	0	; () banked
  4898  010264  51B3               	movf	?___fttol& (0+255),w,b
  4899  010266  11B4               	iorwf	(?___fttol+1)& (0+255),w,b
  4900  010268  11B5               	iorwf	(?___fttol+2)& (0+255),w,b
  4901  01026A  11B6               	iorwf	(?___fttol+3)& (0+255),w,b
  4902  01026C  A4D8               	btfss	status,2,c
  4903  01026E  D04A               	goto	l897
  4904                           
  4905                           ; BSR set to: 0
  4906  010270  0101               	movlb	1	; () banked
  4907  010272  BFEC               	btfsc	(printf@exp+1)& (0+255),7,b
  4908  010274  D047               	goto	l897
  4909  010276  51EC               	movf	(printf@exp+1)& (0+255),w,b
  4910  010278  E104               	bnz	l8075
  4911  01027A  0E02               	movlw	2
  4912  01027C  5DEB               	subwf	printf@exp& (0+255),w,b
  4913  01027E  A0D8               	btfss	status,0,c
  4914  010280  D041               	goto	l897
  4915  010282                     u9950:
  4916  010282                     l8075:
  4917                           
  4918                           ; BSR set to: 1
  4919                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  4920  010282  C1ED  F089         	movff	printf@tmpval,___ftge@ff1
  4921  010286  C1EE  F08A         	movff	printf@tmpval+1,___ftge@ff1+1
  4922  01028A  C1EF  F08B         	movff	printf@tmpval+2,___ftge@ff1+2
  4923  01028E  0E70               	movlw	112
  4924  010290  0100               	movlb	0	; () banked
  4925  010292  6F8C               	movwf	___ftge@ff2& (0+255),b
  4926  010294  0E89               	movlw	137
  4927  010296  6F8D               	movwf	(___ftge@ff2+1)& (0+255),b
  4928  010298  0E40               	movlw	64
  4929  01029A  6F8E               	movwf	(___ftge@ff2+2)& (0+255),b
  4930  01029C  EC5C  F098         	call	___ftge	;wreg free
  4931  0102A0  0100               	movlb	0	; () banked
  4932  0102A2  B0D8               	btfsc	status,0,c
  4933  0102A4  D003               	goto	l900
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  4937  0102A6  0101               	movlb	1	; () banked
  4938  0102A8  0EF7               	movlw	247
  4939  0102AA  D002               	goto	L1
  4940  0102AC                     l900:
  4941                           
  4942                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  4943                           
  4944                           ; BSR set to: 1
  4945  0102AC  0101               	movlb	1	; () banked
  4946  0102AE  0EF8               	movlw	248
  4947  0102B0                     L1:
  4948  0102B0  27EB               	addwf	printf@exp& (0+255),f,b
  4949  0102B2  0EFF               	movlw	255
  4950  0102B4  23EC               	addwfc	(printf@exp+1)& (0+255),f,b
  4951                           
  4952                           ; BSR set to: 1
  4953                           ;doprnt.c: 1124: }
  4954                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  4955                           
  4956                           ; BSR set to: 1
  4957  0102B6  51EB               	movf	printf@exp& (0+255),w,b
  4958  0102B8  EC42  F086         	call	_scale
  4959  0102BC  C0AC  F1ED         	movff	?_scale,printf@tmpval
  4960  0102C0  C0AD  F1EE         	movff	?_scale+1,printf@tmpval+1
  4961  0102C4  C0AE  F1EF         	movff	?_scale+2,printf@tmpval+2
  4962                           
  4963                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  4964  0102C8  C1F1  F089         	movff	printf@fval,__tdiv_to_l_@f1
  4965  0102CC  C1F2  F08A         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  4966  0102D0  C1F3  F08B         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  4967  0102D4  C1ED  F08C         	movff	printf@tmpval,__tdiv_to_l_@f2
  4968  0102D8  C1EE  F08D         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  4969  0102DC  C1EF  F08E         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  4970  0102E0  EC51  F092         	call	__tdiv_to_l_	;wreg free
  4971  0102E4  C089  F1E7         	movff	?__tdiv_to_l_,printf@val
  4972  0102E8  C08A  F1E8         	movff	?__tdiv_to_l_+1,printf@val+1
  4973  0102EC  C08B  F1E9         	movff	?__tdiv_to_l_+2,printf@val+2
  4974  0102F0  C08C  F1EA         	movff	?__tdiv_to_l_+3,printf@val+3
  4975                           
  4976                           ;doprnt.c: 1129: fval = 0.0;
  4977  0102F4  0E00               	movlw	0
  4978  0102F6  0101               	movlb	1	; () banked
  4979  0102F8  6FF1               	movwf	printf@fval& (0+255),b
  4980  0102FA  0E00               	movlw	0
  4981  0102FC  6FF2               	movwf	(printf@fval+1)& (0+255),b
  4982  0102FE  0E00               	movlw	0
  4983  010300  6FF3               	movwf	(printf@fval+2)& (0+255),b
  4984                           
  4985                           ;doprnt.c: 1130: } else {
  4986  010302  D033               	goto	l906
  4987  010304                     l897:
  4988                           
  4989                           ;doprnt.c: 1131: val = (unsigned long)fval;
  4990                           
  4991                           ; BSR set to: 1
  4992  010304  C1F1  F0B3         	movff	printf@fval,___fttol@f1
  4993  010308  C1F2  F0B4         	movff	printf@fval+1,___fttol@f1+1
  4994  01030C  C1F3  F0B5         	movff	printf@fval+2,___fttol@f1+2
  4995  010310  ECAD  F094         	call	___fttol	;wreg free
  4996  010314  C0B3  F1E7         	movff	?___fttol,printf@val
  4997  010318  C0B4  F1E8         	movff	?___fttol+1,printf@val+1
  4998  01031C  C0B5  F1E9         	movff	?___fttol+2,printf@val+2
  4999  010320  C0B6  F1EA         	movff	?___fttol+3,printf@val+3
  5000                           
  5001                           ;doprnt.c: 1132: fval -= (double)val;
  5002  010324  C1F1  F1CD         	movff	printf@fval,___ftsub@f1
  5003  010328  C1F2  F1CE         	movff	printf@fval+1,___ftsub@f1+1
  5004  01032C  C1F3  F1CF         	movff	printf@fval+2,___ftsub@f1+2
  5005  010330  C1E7  F091         	movff	printf@val,___lltoft@c
  5006  010334  C1E8  F092         	movff	printf@val+1,___lltoft@c+1
  5007  010338  C1E9  F093         	movff	printf@val+2,___lltoft@c+2
  5008  01033C  C1EA  F094         	movff	printf@val+3,___lltoft@c+3
  5009  010340  ECE5  F09B         	call	___lltoft	;wreg free
  5010  010344  C091  F1D0         	movff	?___lltoft,___ftsub@f2
  5011  010348  C092  F1D1         	movff	?___lltoft+1,___ftsub@f2+1
  5012  01034C  C093  F1D2         	movff	?___lltoft+2,___ftsub@f2+2
  5013  010350  EC20  F09D         	call	___ftsub	;wreg free
  5014  010354  C1CD  F1F1         	movff	?___ftsub,printf@fval
  5015  010358  C1CE  F1F2         	movff	?___ftsub+1,printf@fval+1
  5016  01035C  C1CF  F1F3         	movff	?___ftsub+2,printf@fval+2
  5017                           
  5018                           ;doprnt.c: 1133: exp = 0;
  5019  010360  0E00               	movlw	0
  5020  010362  0101               	movlb	1	; () banked
  5021  010364  6FEC               	movwf	(printf@exp+1)& (0+255),b
  5022  010366  0E00               	movlw	0
  5023  010368  6FEB               	movwf	printf@exp& (0+255),b
  5024  01036A                     l906:
  5025                           
  5026                           ; BSR set to: 1
  5027                           ;doprnt.c: 1134: }
  5028                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  5029                           
  5030                           ; BSR set to: 1
  5031  01036A  0E01               	movlw	1
  5032  01036C  6FF4               	movwf	printf@c& (0+255),b
  5033  01036E                     l8095:
  5034                           
  5035                           ; BSR set to: 1
  5036  01036E  0E0A               	movlw	10
  5037  010370  19F4               	xorwf	printf@c& (0+255),w,b
  5038  010372  B4D8               	btfsc	status,2,c
  5039  010374  D01B               	goto	u9990
  5040                           
  5041                           ; BSR set to: 1
  5042                           ;doprnt.c: 1137: if(val < dpowers[c])
  5043                           
  5044                           ; BSR set to: 1
  5045                           
  5046                           ; BSR set to: 1
  5047  010376  51F4               	movf	printf@c& (0+255),w,b
  5048  010378  0D04               	mullw	4
  5049  01037A  0EB7               	movlw	low _dpowers
  5050  01037C  24F3               	addwf	prodl,w,c
  5051  01037E  6EF6               	movwf	tblptrl,c
  5052  010380  0EFB               	movlw	high _dpowers
  5053  010382  20F4               	addwfc	prodh,w,c
  5054  010384  6EF7               	movwf	tblptrh,c
  5055  010386                     	if	1	;There are 3 active tblptr bytes
  5056  010386  6AF8               	clrf	tblptru,c
  5057  010388  0E00               	movlw	low (__mediumconst shr (0+16))
  5058  01038A  22F8               	addwfc	tblptru,f,c
  5059  01038C                     	endif
  5060  01038C  0009               	tblrd		*+
  5061  01038E  50F5               	movf	tablat,w,c
  5062  010390  5DE7               	subwf	printf@val& (0+255),w,b
  5063  010392  0009               	tblrd		*+
  5064  010394  50F5               	movf	tablat,w,c
  5065  010396  59E8               	subwfb	(printf@val+1)& (0+255),w,b
  5066  010398  0009               	tblrd		*+
  5067  01039A  50F5               	movf	tablat,w,c
  5068  01039C  59E9               	subwfb	(printf@val+2)& (0+255),w,b
  5069  01039E  0009               	tblrd		*+
  5070  0103A0  50F5               	movf	tablat,w,c
  5071  0103A2  59EA               	subwfb	(printf@val+3)& (0+255),w,b
  5072  0103A4  A0D8               	btfss	status,0,c
  5073  0103A6  D002               	goto	u9990
  5074                           
  5075                           ; BSR set to: 1
  5076                           
  5077                           ; BSR set to: 1
  5078                           
  5079                           ; BSR set to: 1
  5080                           ;doprnt.c: 1138: break;
  5081  0103A8  2BF4               	incf	printf@c& (0+255),f,b
  5082  0103AA  D7E1               	goto	l8095
  5083  0103AC                     u9990:
  5084                           
  5085                           ; BSR set to: 1
  5086                           ;doprnt.c: 1175: {
  5087                           ;doprnt.c: 1188: if(flag & 0x03)
  5088                           
  5089                           ; BSR set to: 1
  5090  0103AC  0E03               	movlw	3
  5091  0103AE  15E3               	andwf	printf@flag& (0+255),w,b
  5092  0103B0  6FD8               	movwf	??_printf& (0+255),b
  5093  0103B2  0E00               	movlw	0
  5094  0103B4  15E4               	andwf	(printf@flag+1)& (0+255),w,b
  5095  0103B6  6FD9               	movwf	(??_printf+1)& (0+255),b
  5096  0103B8  51D8               	movf	??_printf& (0+255),w,b
  5097  0103BA  11D9               	iorwf	(??_printf+1)& (0+255),w,b
  5098  0103BC  B4D8               	btfsc	status,2,c
  5099  0103BE  D04E               	goto	l911
  5100                           
  5101                           ; BSR set to: 1
  5102                           ;doprnt.c: 1190: (putch('-') );
  5103  0103C0  0E2D               	movlw	45
  5104  0103C2  ECF4  F09E         	call	_putch
  5105                           
  5106                           ;doprnt.c: 1195: }
  5107                           ;doprnt.c: 1196: while(c--) {
  5108  0103C6  D04A               	goto	l911
  5109  0103C8                     
  5110                           ;doprnt.c: 1200: {
  5111                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  5112  0103C8  C1E7  F089         	movff	printf@val,___lldiv@dividend
  5113  0103CC  C1E8  F08A         	movff	printf@val+1,___lldiv@dividend+1
  5114  0103D0  C1E9  F08B         	movff	printf@val+2,___lldiv@dividend+2
  5115  0103D4  C1EA  F08C         	movff	printf@val+3,___lldiv@dividend+3
  5116  0103D8  0101               	movlb	1	; () banked
  5117  0103DA  51F4               	movf	printf@c& (0+255),w,b
  5118  0103DC  0D04               	mullw	4
  5119  0103DE  0EB7               	movlw	low _dpowers
  5120  0103E0  24F3               	addwf	prodl,w,c
  5121  0103E2  6EF6               	movwf	tblptrl,c
  5122  0103E4  0EFB               	movlw	high _dpowers
  5123  0103E6  20F4               	addwfc	prodh,w,c
  5124  0103E8  6EF7               	movwf	tblptrh,c
  5125  0103EA                     	if	1	;There are 3 active tblptr bytes
  5126  0103EA  6AF8               	clrf	tblptru,c
  5127  0103EC  0E00               	movlw	low (__mediumconst shr (0+16))
  5128  0103EE  22F8               	addwfc	tblptru,f,c
  5129  0103F0                     	endif
  5130  0103F0  0009               	tblrd		*+
  5131  0103F2  CFF5 F08D          	movff	tablat,___lldiv@divisor
  5132  0103F6  0009               	tblrd		*+
  5133  0103F8  CFF5 F08E          	movff	tablat,___lldiv@divisor+1
  5134  0103FC  0009               	tblrd		*+
  5135  0103FE  CFF5 F08F          	movff	tablat,___lldiv@divisor+2
  5136  010402  000A               	tblrd		*-
  5137  010404  CFF5 F090          	movff	tablat,___lldiv@divisor+3
  5138  010408  EC77  F099         	call	___lldiv	;wreg free
  5139  01040C  C089  F1ED         	movff	?___lldiv,printf@tmpval
  5140  010410  C08A  F1EE         	movff	?___lldiv+1,printf@tmpval+1
  5141  010414  C08B  F1EF         	movff	?___lldiv+2,printf@tmpval+2
  5142  010418  C08C  F1F0         	movff	?___lldiv+3,printf@tmpval+3
  5143                           
  5144                           ;doprnt.c: 1202: tmpval.vd %= 10;
  5145  01041C  C1ED  F089         	movff	printf@tmpval,___llmod@dividend
  5146  010420  C1EE  F08A         	movff	printf@tmpval+1,___llmod@dividend+1
  5147  010424  C1EF  F08B         	movff	printf@tmpval+2,___llmod@dividend+2
  5148  010428  C1F0  F08C         	movff	printf@tmpval+3,___llmod@dividend+3
  5149  01042C  0E0A               	movlw	10
  5150  01042E  0100               	movlb	0	; () banked
  5151  010430  6F8D               	movwf	___llmod@divisor& (0+255),b
  5152  010432  0E00               	movlw	0
  5153  010434  6F8E               	movwf	(___llmod@divisor+1)& (0+255),b
  5154  010436  0E00               	movlw	0
  5155  010438  6F8F               	movwf	(___llmod@divisor+2)& (0+255),b
  5156  01043A  0E00               	movlw	0
  5157  01043C  6F90               	movwf	(___llmod@divisor+3)& (0+255),b
  5158  01043E  EC19  F09B         	call	___llmod	;wreg free
  5159  010442  C089  F1ED         	movff	?___llmod,printf@tmpval
  5160  010446  C08A  F1EE         	movff	?___llmod+1,printf@tmpval+1
  5161  01044A  C08B  F1EF         	movff	?___llmod+2,printf@tmpval+2
  5162  01044E  C08C  F1F0         	movff	?___llmod+3,printf@tmpval+3
  5163                           
  5164                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  5165  010452  0101               	movlb	1	; () banked
  5166  010454  51ED               	movf	printf@tmpval& (0+255),w,b
  5167  010456  0F30               	addlw	48
  5168  010458  ECF4  F09E         	call	_putch
  5169  01045C                     l911:
  5170  01045C  0101               	movlb	1	; () banked
  5171  01045E  07F4               	decf	printf@c& (0+255),f,b
  5172  010460  29F4               	incf	printf@c& (0+255),w,b
  5173  010462  B4D8               	btfsc	status,2,c
  5174  010464  D008               	goto	l914
  5175  010466  D7B0               	goto	l912
  5176  010468                     l8119:
  5177                           
  5178                           ; BSR set to: 1
  5179                           ;doprnt.c: 1208: (putch('0') );
  5180  010468  0E30               	movlw	48
  5181  01046A  ECF4  F09E         	call	_putch
  5182                           
  5183                           ;doprnt.c: 1209: exp--;
  5184  01046E  0101               	movlb	1	; () banked
  5185  010470  07EB               	decf	printf@exp& (0+255),f,b
  5186  010472  A0D8               	btfss	status,0,c
  5187  010474  07EC               	decf	(printf@exp+1)& (0+255),f,b
  5188  010476                     l914:
  5189                           
  5190                           ; BSR set to: 1
  5191                           
  5192                           ; BSR set to: 1
  5193  010476  BFEC               	btfsc	(printf@exp+1)& (0+255),7,b
  5194  010478  D005               	goto	u10020
  5195  01047A  51EC               	movf	(printf@exp+1)& (0+255),w,b
  5196  01047C  E1F5               	bnz	l8119
  5197  01047E  05EB               	decf	printf@exp& (0+255),w,b
  5198  010480  B0D8               	btfsc	status,0,c
  5199  010482  D7F2               	goto	l915
  5200  010484                     u10020:
  5201                           
  5202                           ; BSR set to: 1
  5203                           ;doprnt.c: 1210: }
  5204                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  5205                           
  5206                           ; BSR set to: 1
  5207  010484  BFE6               	btfsc	(printf@prec+1)& (0+255),7,b
  5208  010486  D009               	goto	l917
  5209  010488  51E6               	movf	(printf@prec+1)& (0+255),w,b
  5210  01048A  E104               	bnz	u10030
  5211  01048C  0E09               	movlw	9
  5212  01048E  5DE5               	subwf	printf@prec& (0+255),w,b
  5213  010490  A0D8               	btfss	status,0,c
  5214  010492  D003               	goto	l917
  5215  010494                     u10030:
  5216                           
  5217                           ; BSR set to: 1
  5218                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  5219  010494  0E08               	movlw	8
  5220  010496  6FF4               	movwf	printf@c& (0+255),b
  5221  010498  D002               	goto	l918
  5222  01049A                     l917:
  5223                           
  5224                           ; BSR set to: 1
  5225                           ;doprnt.c: 1213: else
  5226                           ;doprnt.c: 1214: c = prec;
  5227  01049A  C1E5  F1F4         	movff	printf@prec,printf@c
  5228  01049E                     l918:
  5229                           
  5230                           ; BSR set to: 1
  5231                           ;doprnt.c: 1215: prec -= c;
  5232                           
  5233                           ; BSR set to: 1
  5234  01049E  51F4               	movf	printf@c& (0+255),w,b
  5235  0104A0  5FE5               	subwf	printf@prec& (0+255),f,b
  5236  0104A2  0E00               	movlw	0
  5237  0104A4  BFF4               	btfsc	printf@c& (0+255),7,b
  5238  0104A6  0EFF               	movlw	255
  5239  0104A8  5BE6               	subwfb	(printf@prec+1)& (0+255),f,b
  5240                           
  5241                           ; BSR set to: 1
  5242                           ;doprnt.c: 1219: if(c)
  5243  0104AA  51F4               	movf	printf@c& (0+255),w,b
  5244  0104AC  B4D8               	btfsc	status,2,c
  5245  0104AE  D003               	goto	l919
  5246                           
  5247                           ; BSR set to: 1
  5248                           ;doprnt.c: 1221: (putch('.') );
  5249  0104B0  0E2E               	movlw	46
  5250  0104B2  ECF4  F09E         	call	_putch
  5251  0104B6                     l919:
  5252                           
  5253                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5254  0104B6  0101               	movlb	1	; () banked
  5255  0104B8  51F4               	movf	printf@c& (0+255),w,b
  5256  0104BA  EC42  F086         	call	_scale
  5257  0104BE  C0AC  F1DE         	movff	?_scale,_printf$2556
  5258  0104C2  C0AD  F1DF         	movff	?_scale+1,_printf$2556+1
  5259  0104C6  C0AE  F1E0         	movff	?_scale+2,_printf$2556+2
  5260                           
  5261                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5262  0104CA  C1F1  F0A0         	movff	printf@fval,___ftmul@f2
  5263  0104CE  C1F2  F0A1         	movff	printf@fval+1,___ftmul@f2+1
  5264  0104D2  C1F3  F0A2         	movff	printf@fval+2,___ftmul@f2+2
  5265  0104D6  C1DE  F09D         	movff	_printf$2556,___ftmul@f1
  5266  0104DA  C1DF  F09E         	movff	_printf$2556+1,___ftmul@f1+1
  5267  0104DE  C1E0  F09F         	movff	_printf$2556+2,___ftmul@f1+2
  5268  0104E2  EC38  F095         	call	___ftmul	;wreg free
  5269  0104E6  C09D  F0B3         	movff	?___ftmul,___fttol@f1
  5270  0104EA  C09E  F0B4         	movff	?___ftmul+1,___fttol@f1+1
  5271  0104EE  C09F  F0B5         	movff	?___ftmul+2,___fttol@f1+2
  5272  0104F2  ECAD  F094         	call	___fttol	;wreg free
  5273  0104F6  C0B3  F1E7         	movff	?___fttol,printf@val
  5274  0104FA  C0B4  F1E8         	movff	?___fttol+1,printf@val+1
  5275  0104FE  C0B5  F1E9         	movff	?___fttol+2,printf@val+2
  5276  010502  C0B6  F1EA         	movff	?___fttol+3,printf@val+3
  5277                           
  5278                           ;doprnt.c: 1228: while(c--) {
  5279  010506  D074               	goto	l920
  5280  010508                     
  5281                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  5282  010508  C1E7  F089         	movff	printf@val,___lldiv@dividend
  5283  01050C  C1E8  F08A         	movff	printf@val+1,___lldiv@dividend+1
  5284  010510  C1E9  F08B         	movff	printf@val+2,___lldiv@dividend+2
  5285  010514  C1EA  F08C         	movff	printf@val+3,___lldiv@dividend+3
  5286  010518  0101               	movlb	1	; () banked
  5287  01051A  51F4               	movf	printf@c& (0+255),w,b
  5288  01051C  0D04               	mullw	4
  5289  01051E  0EB7               	movlw	low _dpowers
  5290  010520  24F3               	addwf	prodl,w,c
  5291  010522  6EF6               	movwf	tblptrl,c
  5292  010524  0EFB               	movlw	high _dpowers
  5293  010526  20F4               	addwfc	prodh,w,c
  5294  010528  6EF7               	movwf	tblptrh,c
  5295  01052A                     	if	1	;There are 3 active tblptr bytes
  5296  01052A  6AF8               	clrf	tblptru,c
  5297  01052C  0E00               	movlw	low (__mediumconst shr (0+16))
  5298  01052E  22F8               	addwfc	tblptru,f,c
  5299  010530                     	endif
  5300  010530  0009               	tblrd		*+
  5301  010532  CFF5 F08D          	movff	tablat,___lldiv@divisor
  5302  010536  0009               	tblrd		*+
  5303  010538  CFF5 F08E          	movff	tablat,___lldiv@divisor+1
  5304  01053C  0009               	tblrd		*+
  5305  01053E  CFF5 F08F          	movff	tablat,___lldiv@divisor+2
  5306  010542  000A               	tblrd		*-
  5307  010544  CFF5 F090          	movff	tablat,___lldiv@divisor+3
  5308  010548  EC77  F099         	call	___lldiv	;wreg free
  5309  01054C  C089  F1ED         	movff	?___lldiv,printf@tmpval
  5310  010550  C08A  F1EE         	movff	?___lldiv+1,printf@tmpval+1
  5311  010554  C08B  F1EF         	movff	?___lldiv+2,printf@tmpval+2
  5312  010558  C08C  F1F0         	movff	?___lldiv+3,printf@tmpval+3
  5313                           
  5314                           ;doprnt.c: 1230: tmpval.vd %= 10;
  5315  01055C  C1ED  F089         	movff	printf@tmpval,___llmod@dividend
  5316  010560  C1EE  F08A         	movff	printf@tmpval+1,___llmod@dividend+1
  5317  010564  C1EF  F08B         	movff	printf@tmpval+2,___llmod@dividend+2
  5318  010568  C1F0  F08C         	movff	printf@tmpval+3,___llmod@dividend+3
  5319  01056C  0E0A               	movlw	10
  5320  01056E  0100               	movlb	0	; () banked
  5321  010570  6F8D               	movwf	___llmod@divisor& (0+255),b
  5322  010572  0E00               	movlw	0
  5323  010574  6F8E               	movwf	(___llmod@divisor+1)& (0+255),b
  5324  010576  0E00               	movlw	0
  5325  010578  6F8F               	movwf	(___llmod@divisor+2)& (0+255),b
  5326  01057A  0E00               	movlw	0
  5327  01057C  6F90               	movwf	(___llmod@divisor+3)& (0+255),b
  5328  01057E  EC19  F09B         	call	___llmod	;wreg free
  5329  010582  C089  F1ED         	movff	?___llmod,printf@tmpval
  5330  010586  C08A  F1EE         	movff	?___llmod+1,printf@tmpval+1
  5331  01058A  C08B  F1EF         	movff	?___llmod+2,printf@tmpval+2
  5332  01058E  C08C  F1F0         	movff	?___llmod+3,printf@tmpval+3
  5333                           
  5334                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  5335  010592  0101               	movlb	1	; () banked
  5336  010594  51ED               	movf	printf@tmpval& (0+255),w,b
  5337  010596  0F30               	addlw	48
  5338  010598  ECF4  F09E         	call	_putch
  5339                           
  5340                           ;doprnt.c: 1232: val %= dpowers[c];
  5341  01059C  C1E7  F089         	movff	printf@val,___llmod@dividend
  5342  0105A0  C1E8  F08A         	movff	printf@val+1,___llmod@dividend+1
  5343  0105A4  C1E9  F08B         	movff	printf@val+2,___llmod@dividend+2
  5344  0105A8  C1EA  F08C         	movff	printf@val+3,___llmod@dividend+3
  5345  0105AC  0101               	movlb	1	; () banked
  5346  0105AE  51F4               	movf	printf@c& (0+255),w,b
  5347  0105B0  0D04               	mullw	4
  5348  0105B2  0EB7               	movlw	low _dpowers
  5349  0105B4  24F3               	addwf	prodl,w,c
  5350  0105B6  6EF6               	movwf	tblptrl,c
  5351  0105B8  0EFB               	movlw	high _dpowers
  5352  0105BA  20F4               	addwfc	prodh,w,c
  5353  0105BC  6EF7               	movwf	tblptrh,c
  5354  0105BE                     	if	1	;There are 3 active tblptr bytes
  5355  0105BE  6AF8               	clrf	tblptru,c
  5356  0105C0  0E00               	movlw	low (__mediumconst shr (0+16))
  5357  0105C2  22F8               	addwfc	tblptru,f,c
  5358  0105C4                     	endif
  5359  0105C4  0009               	tblrd		*+
  5360  0105C6  CFF5 F08D          	movff	tablat,___llmod@divisor
  5361  0105CA  0009               	tblrd		*+
  5362  0105CC  CFF5 F08E          	movff	tablat,___llmod@divisor+1
  5363  0105D0  0009               	tblrd		*+
  5364  0105D2  CFF5 F08F          	movff	tablat,___llmod@divisor+2
  5365  0105D6  000A               	tblrd		*-
  5366  0105D8  CFF5 F090          	movff	tablat,___llmod@divisor+3
  5367  0105DC  EC19  F09B         	call	___llmod	;wreg free
  5368  0105E0  C089  F1E7         	movff	?___llmod,printf@val
  5369  0105E4  C08A  F1E8         	movff	?___llmod+1,printf@val+1
  5370  0105E8  C08B  F1E9         	movff	?___llmod+2,printf@val+2
  5371  0105EC  C08C  F1EA         	movff	?___llmod+3,printf@val+3
  5372  0105F0                     l920:
  5373  0105F0  0101               	movlb	1	; () banked
  5374  0105F2  07F4               	decf	printf@c& (0+255),f,b
  5375  0105F4  29F4               	incf	printf@c& (0+255),w,b
  5376  0105F6  B4D8               	btfsc	status,2,c
  5377  0105F8  D008               	goto	l923
  5378  0105FA  D786               	goto	l921
  5379  0105FC                     
  5380                           ; BSR set to: 1
  5381                           ;doprnt.c: 1236: (putch('0') );
  5382                           
  5383                           ; BSR set to: 1
  5384  0105FC  0E30               	movlw	48
  5385  0105FE  ECF4  F09E         	call	_putch
  5386                           
  5387                           ;doprnt.c: 1237: prec--;
  5388  010602  0101               	movlb	1	; () banked
  5389  010604  07E5               	decf	printf@prec& (0+255),f,b
  5390  010606  A0D8               	btfss	status,0,c
  5391  010608  07E6               	decf	(printf@prec+1)& (0+255),f,b
  5392  01060A                     l923:
  5393                           
  5394                           ; BSR set to: 1
  5395                           
  5396                           ; BSR set to: 1
  5397  01060A  51E5               	movf	printf@prec& (0+255),w,b
  5398  01060C  11E6               	iorwf	(printf@prec+1)& (0+255),w,b
  5399  01060E  B4D8               	btfsc	status,2,c
  5400  010610  D00E               	goto	l926
  5401  010612  D7F4               	goto	l924
  5402  010614                     l889:
  5403                           
  5404                           ; BSR set to: 1
  5405                           ;doprnt.c: 1246: }
  5406                           ;doprnt.c: 1422: {
  5407                           ;doprnt.c: 1438: if(flag & 0x03)
  5408                           
  5409                           ; BSR set to: 1
  5410  010614  0E03               	movlw	3
  5411  010616  15E3               	andwf	printf@flag& (0+255),w,b
  5412  010618  6FD8               	movwf	??_printf& (0+255),b
  5413  01061A  0E00               	movlw	0
  5414  01061C  15E4               	andwf	(printf@flag+1)& (0+255),w,b
  5415  01061E  6FD9               	movwf	(??_printf+1)& (0+255),b
  5416  010620  51D8               	movf	??_printf& (0+255),w,b
  5417  010622  11D9               	iorwf	(??_printf+1)& (0+255),w,b
  5418  010624  B4D8               	btfsc	status,2,c
  5419  010626  D003               	goto	l926
  5420                           
  5421                           ; BSR set to: 1
  5422                           ;doprnt.c: 1439: (putch('-') );
  5423  010628  0E2D               	movlw	45
  5424  01062A  ECF4  F09E         	call	_putch
  5425  01062E                     l926:
  5426  01062E  0101               	movlb	1	; () banked
  5427  010630  51D3               	movf	printf@f& (0+255),w,b
  5428  010632  6FD8               	movwf	??_printf& (0+255),b
  5429  010634  51D4               	movf	(printf@f+1)& (0+255),w,b
  5430  010636  6FD9               	movwf	(??_printf+1)& (0+255),b
  5431  010638  4BD3               	infsnz	printf@f& (0+255),f,b
  5432  01063A  2BD4               	incf	(printf@f+1)& (0+255),f,b
  5433  01063C  C1D8  FFF6         	movff	??_printf,tblptrl
  5434  010640  C1D9  FFF7         	movff	??_printf+1,tblptrh
  5435  010644  0E00               	movlw	low (__mediumconst shr (0+16))
  5436  010646  6EF8               	movwf	tblptru,c
  5437  010648  0E0D               	movlw	(high __ramtop+-1)
  5438  01064A  64F7               	cpfsgt	tblptrh,c
  5439  01064C  D003               	bra	u10087
  5440  01064E  0008               	tblrd		*
  5441  010650  50F5               	movf	tablat,w,c
  5442  010652  D005               	bra	u10080
  5443  010654                     u10087:
  5444  010654  CFF6 FFD9          	movff	tblptrl,fsr2l
  5445  010658  CFF7 FFDA          	movff	tblptrh,fsr2h
  5446  01065C  50DF               	movf	indf2,w,c
  5447  01065E                     u10080:
  5448  01065E  0101               	movlb	1	; () banked
  5449  010660  6FF4               	movwf	printf@c& (0+255),b
  5450  010662  51F4               	movf	printf@c& (0+255),w,b
  5451  010664  B4D8               	btfsc	status,2,c
  5452  010666  0012               	return	
  5453  010668  D4D1               	goto	l881
  5454  01066A                     __end_of_printf:
  5455                           	opt stack 0
  5456                           tblptru	equ	0xFF8
  5457                           tblptrh	equ	0xFF7
  5458                           tblptrl	equ	0xFF6
  5459                           tablat	equ	0xFF5
  5460                           prodh	equ	0xFF4
  5461                           prodl	equ	0xFF3
  5462                           intcon	equ	0xFF2
  5463                           postinc0	equ	0xFEE
  5464                           wreg	equ	0xFE8
  5465                           indf2	equ	0xFDF
  5466                           postinc2	equ	0xFDE
  5467                           postdec2	equ	0xFDD
  5468                           fsr2h	equ	0xFDA
  5469                           fsr2l	equ	0xFD9
  5470                           status	equ	0xFD8
  5471                           
  5472 ;; *************** function _scale *****************
  5473 ;; Defined at:
  5474 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;  scl             1    wreg     char 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;  scl             1   82[BANK0 ] char 
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  3   76[BANK0 ] char 
  5481 ;; Registers used:
  5482 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5488 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5489 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5491 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5492 ;;Total ram usage:        7 bytes
  5493 ;; Hardware stack levels used:    1
  5494 ;; Hardware stack levels required when called:   12
  5495 ;; This function calls:
  5496 ;;		___awdiv
  5497 ;;		___awmod
  5498 ;;		___ftmul
  5499 ;;		___wmul
  5500 ;; This function is called by:
  5501 ;;		_printf
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	text13
  5506  010C84                     __ptext13:
  5507                           	opt stack 0
  5508  010C84                     _scale:
  5509                           	opt stack 15
  5510                           
  5511                           ; BSR set to: 1
  5512                           ;incstack = 0
  5513                           ;scale@scl stored from wreg
  5514  010C84  0100               	movlb	0	; () banked
  5515  010C86  6FB2               	movwf	scale@scl& (0+255),b
  5516                           
  5517                           ;doprnt.c: 428: if(scl < 0) {
  5518  010C88  0100               	movlb	0	; () banked
  5519  010C8A  AFB2               	btfss	scale@scl& (0+255),7,b
  5520  010C8C  D11E               	goto	l870
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;doprnt.c: 429: scl = -scl;
  5524  010C8E  6DB2               	negf	scale@scl& (0+255),b
  5525                           
  5526                           ;doprnt.c: 430: if(scl>=110)
  5527  010C90  51B2               	movf	scale@scl& (0+255),w,b
  5528  010C92  0A80               	xorlw	128
  5529  010C94  0F12               	addlw	-238
  5530  010C96  A0D8               	btfss	status,0,c
  5531  010C98  D0A0               	goto	l871
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  5535  010C9A  0E00               	movlw	0
  5536  010C9C  6F9A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5537  010C9E  0E03               	movlw	3
  5538  010CA0  6F99               	movwf	___wmul@multiplicand& (0+255),b
  5539  010CA2  0E00               	movlw	0
  5540  010CA4  6F92               	movwf	(___awdiv@divisor+1)& (0+255),b
  5541  010CA6  0E0A               	movlw	10
  5542  010CA8  6F91               	movwf	___awdiv@divisor& (0+255),b
  5543  010CAA  0E00               	movlw	0
  5544  010CAC  6F8C               	movwf	(___awmod@divisor+1)& (0+255),b
  5545  010CAE  0E64               	movlw	100
  5546  010CB0  6F8B               	movwf	___awmod@divisor& (0+255),b
  5547  010CB2  51B2               	movf	scale@scl& (0+255),w,b
  5548  010CB4  6F89               	movwf	___awmod@dividend& (0+255),b
  5549  010CB6  6B8A               	clrf	(___awmod@dividend+1)& (0+255),b
  5550  010CB8  BF89               	btfsc	___awmod@dividend& (0+255),7,b
  5551  010CBA  078A               	decf	(___awmod@dividend+1)& (0+255),f,b
  5552  010CBC  EC3C  F09A         	call	___awmod	;wreg free
  5553  010CC0  C089  F08F         	movff	?___awmod,___awdiv@dividend
  5554  010CC4  C08A  F090         	movff	?___awmod+1,___awdiv@dividend+1
  5555  010CC8  EC34  F099         	call	___awdiv	;wreg free
  5556  010CCC  0E09               	movlw	9
  5557  010CCE  0100               	movlb	0	; () banked
  5558  010CD0  258F               	addwf	?___awdiv& (0+255),w,b
  5559  010CD2  6F97               	movwf	___wmul@multiplier& (0+255),b
  5560  010CD4  0E00               	movlw	0
  5561  010CD6  2190               	addwfc	(?___awdiv+1)& (0+255),w,b
  5562  010CD8  6F98               	movwf	(___wmul@multiplier+1)& (0+255),b
  5563  010CDA  ECCE  F09D         	call	___wmul	;wreg free
  5564  010CDE  0E06               	movlw	low __npowers_
  5565  010CE0  0100               	movlb	0	; () banked
  5566  010CE2  2597               	addwf	?___wmul& (0+255),w,b
  5567  010CE4  6EF6               	movwf	tblptrl,c
  5568  010CE6  0EFC               	movlw	high __npowers_
  5569  010CE8  2198               	addwfc	(?___wmul+1)& (0+255),w,b
  5570  010CEA  6EF7               	movwf	tblptrh,c
  5571  010CEC                     	if	1	;There are 3 active tblptr bytes
  5572  010CEC  6AF8               	clrf	tblptru,c
  5573  010CEE  0E00               	movlw	low (__mediumconst shr (0+16))
  5574  010CF0  22F8               	addwfc	tblptru,f,c
  5575  010CF2                     	endif
  5576  010CF2  0009               	tblrd		*+
  5577  010CF4  CFF5 F0A0          	movff	tablat,___ftmul@f2
  5578  010CF8  0009               	tblrd		*+
  5579  010CFA  CFF5 F0A1          	movff	tablat,___ftmul@f2+1
  5580  010CFE  000A               	tblrd		*-
  5581  010D00  CFF5 F0A2          	movff	tablat,___ftmul@f2+2
  5582  010D04  0E00               	movlw	0
  5583  010D06  6F92               	movwf	(___awdiv@divisor+1)& (0+255),b
  5584  010D08  0E64               	movlw	100
  5585  010D0A  6F91               	movwf	___awdiv@divisor& (0+255),b
  5586  010D0C  51B2               	movf	scale@scl& (0+255),w,b
  5587  010D0E  6F8F               	movwf	___awdiv@dividend& (0+255),b
  5588  010D10  6B90               	clrf	(___awdiv@dividend+1)& (0+255),b
  5589  010D12  BF8F               	btfsc	___awdiv@dividend& (0+255),7,b
  5590  010D14  0790               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5591  010D16  EC34  F099         	call	___awdiv	;wreg free
  5592  010D1A  0E12               	movlw	18
  5593  010D1C  0100               	movlb	0	; () banked
  5594  010D1E  258F               	addwf	?___awdiv& (0+255),w,b
  5595  010D20  6F97               	movwf	___wmul@multiplier& (0+255),b
  5596  010D22  0E00               	movlw	0
  5597  010D24  2190               	addwfc	(?___awdiv+1)& (0+255),w,b
  5598  010D26  6F98               	movwf	(___wmul@multiplier+1)& (0+255),b
  5599  010D28  0E00               	movlw	0
  5600  010D2A  6F9A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5601  010D2C  0E03               	movlw	3
  5602  010D2E  6F99               	movwf	___wmul@multiplicand& (0+255),b
  5603  010D30  ECCE  F09D         	call	___wmul	;wreg free
  5604  010D34  0E06               	movlw	low __npowers_
  5605  010D36  0100               	movlb	0	; () banked
  5606  010D38  2597               	addwf	?___wmul& (0+255),w,b
  5607  010D3A  6EF6               	movwf	tblptrl,c
  5608  010D3C  0EFC               	movlw	high __npowers_
  5609  010D3E  2198               	addwfc	(?___wmul+1)& (0+255),w,b
  5610  010D40  6EF7               	movwf	tblptrh,c
  5611  010D42                     	if	1	;There are 3 active tblptr bytes
  5612  010D42  6AF8               	clrf	tblptru,c
  5613  010D44  0E00               	movlw	low (__mediumconst shr (0+16))
  5614  010D46  22F8               	addwfc	tblptru,f,c
  5615  010D48                     	endif
  5616  010D48  0009               	tblrd		*+
  5617  010D4A  CFF5 F09D          	movff	tablat,___ftmul@f1
  5618  010D4E  0009               	tblrd		*+
  5619  010D50  CFF5 F09E          	movff	tablat,___ftmul@f1+1
  5620  010D54  000A               	tblrd		*-
  5621  010D56  CFF5 F09F          	movff	tablat,___ftmul@f1+2
  5622  010D5A  EC38  F095         	call	___ftmul	;wreg free
  5623  010D5E  C09D  F0AF         	movff	?___ftmul,_scale$2555
  5624  010D62  C09E  F0B0         	movff	?___ftmul+1,_scale$2555+1
  5625  010D66  C09F  F0B1         	movff	?___ftmul+2,_scale$2555+2
  5626                           
  5627                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  5628  010D6A  C0AF  F09D         	movff	_scale$2555,___ftmul@f1
  5629  010D6E  C0B0  F09E         	movff	_scale$2555+1,___ftmul@f1+1
  5630  010D72  C0B1  F09F         	movff	_scale$2555+2,___ftmul@f1+2
  5631  010D76  0E00               	movlw	0
  5632  010D78  0100               	movlb	0	; () banked
  5633  010D7A  6F9A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5634  010D7C  0E03               	movlw	3
  5635  010D7E  6F99               	movwf	___wmul@multiplicand& (0+255),b
  5636  010D80  0E00               	movlw	0
  5637  010D82  6F8C               	movwf	(___awmod@divisor+1)& (0+255),b
  5638  010D84  0E0A               	movlw	10
  5639  010D86  6F8B               	movwf	___awmod@divisor& (0+255),b
  5640  010D88  51B2               	movf	scale@scl& (0+255),w,b
  5641  010D8A  6F89               	movwf	___awmod@dividend& (0+255),b
  5642  010D8C  6B8A               	clrf	(___awmod@dividend+1)& (0+255),b
  5643  010D8E  BF89               	btfsc	___awmod@dividend& (0+255),7,b
  5644  010D90  078A               	decf	(___awmod@dividend+1)& (0+255),f,b
  5645  010D92  EC3C  F09A         	call	___awmod	;wreg free
  5646  010D96  C089  F097         	movff	?___awmod,___wmul@multiplier
  5647  010D9A  C08A  F098         	movff	?___awmod+1,___wmul@multiplier+1
  5648  010D9E  ECCE  F09D         	call	___wmul	;wreg free
  5649  010DA2  0E06               	movlw	low __npowers_
  5650  010DA4  0100               	movlb	0	; () banked
  5651  010DA6  2597               	addwf	?___wmul& (0+255),w,b
  5652  010DA8  6EF6               	movwf	tblptrl,c
  5653  010DAA  0EFC               	movlw	high __npowers_
  5654  010DAC  2198               	addwfc	(?___wmul+1)& (0+255),w,b
  5655  010DAE  6EF7               	movwf	tblptrh,c
  5656  010DB0                     	if	1	;There are 3 active tblptr bytes
  5657  010DB0  6AF8               	clrf	tblptru,c
  5658  010DB2  0E00               	movlw	low (__mediumconst shr (0+16))
  5659  010DB4  22F8               	addwfc	tblptru,f,c
  5660  010DB6                     	endif
  5661  010DB6  0009               	tblrd		*+
  5662  010DB8  CFF5 F0A0          	movff	tablat,___ftmul@f2
  5663  010DBC  0009               	tblrd		*+
  5664  010DBE  CFF5 F0A1          	movff	tablat,___ftmul@f2+1
  5665  010DC2  000A               	tblrd		*-
  5666  010DC4  CFF5 F0A2          	movff	tablat,___ftmul@f2+2
  5667  010DC8  EC38  F095         	call	___ftmul	;wreg free
  5668  010DCC  C09D  F0AC         	movff	?___ftmul,?_scale
  5669  010DD0  C09E  F0AD         	movff	?___ftmul+1,?_scale+1
  5670  010DD4  C09F  F0AE         	movff	?___ftmul+2,?_scale+2
  5671  010DD8  0012               	return	
  5672  010DDA                     l871:
  5673                           
  5674                           ;doprnt.c: 432: else if(scl > 10)
  5675  010DDA  0100               	movlb	0	; () banked
  5676  010DDC  51B2               	movf	scale@scl& (0+255),w,b
  5677  010DDE  0A80               	xorlw	128
  5678  010DE0  0F75               	addlw	-139
  5679  010DE2  A0D8               	btfss	status,0,c
  5680  010DE4  D05C               	goto	l874
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  5684  010DE6  0E00               	movlw	0
  5685  010DE8  6F92               	movwf	(___awdiv@divisor+1)& (0+255),b
  5686  010DEA  0E0A               	movlw	10
  5687  010DEC  6F91               	movwf	___awdiv@divisor& (0+255),b
  5688  010DEE  51B2               	movf	scale@scl& (0+255),w,b
  5689  010DF0  6F8F               	movwf	___awdiv@dividend& (0+255),b
  5690  010DF2  6B90               	clrf	(___awdiv@dividend+1)& (0+255),b
  5691  010DF4  BF8F               	btfsc	___awdiv@dividend& (0+255),7,b
  5692  010DF6  0790               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5693  010DF8  EC34  F099         	call	___awdiv	;wreg free
  5694  010DFC  0E09               	movlw	9
  5695  010DFE  0100               	movlb	0	; () banked
  5696  010E00  258F               	addwf	?___awdiv& (0+255),w,b
  5697  010E02  6F97               	movwf	___wmul@multiplier& (0+255),b
  5698  010E04  0E00               	movlw	0
  5699  010E06  2190               	addwfc	(?___awdiv+1)& (0+255),w,b
  5700  010E08  6F98               	movwf	(___wmul@multiplier+1)& (0+255),b
  5701  010E0A  0E00               	movlw	0
  5702  010E0C  6F9A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5703  010E0E  0E03               	movlw	3
  5704  010E10  6F99               	movwf	___wmul@multiplicand& (0+255),b
  5705  010E12  ECCE  F09D         	call	___wmul	;wreg free
  5706  010E16  0E06               	movlw	low __npowers_
  5707  010E18  0100               	movlb	0	; () banked
  5708  010E1A  2597               	addwf	?___wmul& (0+255),w,b
  5709  010E1C  6EF6               	movwf	tblptrl,c
  5710  010E1E  0EFC               	movlw	high __npowers_
  5711  010E20  2198               	addwfc	(?___wmul+1)& (0+255),w,b
  5712  010E22  6EF7               	movwf	tblptrh,c
  5713  010E24                     	if	1	;There are 3 active tblptr bytes
  5714  010E24  6AF8               	clrf	tblptru,c
  5715  010E26  0E00               	movlw	low (__mediumconst shr (0+16))
  5716  010E28  22F8               	addwfc	tblptru,f,c
  5717  010E2A                     	endif
  5718  010E2A  0009               	tblrd		*+
  5719  010E2C  CFF5 F09D          	movff	tablat,___ftmul@f1
  5720  010E30  0009               	tblrd		*+
  5721  010E32  CFF5 F09E          	movff	tablat,___ftmul@f1+1
  5722  010E36  000A               	tblrd		*-
  5723  010E38  CFF5 F09F          	movff	tablat,___ftmul@f1+2
  5724  010E3C  0E00               	movlw	0
  5725  010E3E  6F9A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5726  010E40  0E03               	movlw	3
  5727  010E42  6F99               	movwf	___wmul@multiplicand& (0+255),b
  5728  010E44  0E00               	movlw	0
  5729  010E46  6F8C               	movwf	(___awmod@divisor+1)& (0+255),b
  5730  010E48  0E0A               	movlw	10
  5731  010E4A  6F8B               	movwf	___awmod@divisor& (0+255),b
  5732  010E4C  51B2               	movf	scale@scl& (0+255),w,b
  5733  010E4E  6F89               	movwf	___awmod@dividend& (0+255),b
  5734  010E50  6B8A               	clrf	(___awmod@dividend+1)& (0+255),b
  5735  010E52  BF89               	btfsc	___awmod@dividend& (0+255),7,b
  5736  010E54  078A               	decf	(___awmod@dividend+1)& (0+255),f,b
  5737  010E56  EC3C  F09A         	call	___awmod	;wreg free
  5738  010E5A  C089  F097         	movff	?___awmod,___wmul@multiplier
  5739  010E5E  C08A  F098         	movff	?___awmod+1,___wmul@multiplier+1
  5740  010E62  ECCE  F09D         	call	___wmul	;wreg free
  5741  010E66  0E06               	movlw	low __npowers_
  5742  010E68  0100               	movlb	0	; () banked
  5743  010E6A  2597               	addwf	?___wmul& (0+255),w,b
  5744  010E6C  6EF6               	movwf	tblptrl,c
  5745  010E6E  0EFC               	movlw	high __npowers_
  5746  010E70  2198               	addwfc	(?___wmul+1)& (0+255),w,b
  5747  010E72  6EF7               	movwf	tblptrh,c
  5748  010E74                     	if	1	;There are 3 active tblptr bytes
  5749  010E74  6AF8               	clrf	tblptru,c
  5750  010E76  0E00               	movlw	low (__mediumconst shr (0+16))
  5751  010E78  22F8               	addwfc	tblptru,f,c
  5752  010E7A                     	endif
  5753  010E7A  0009               	tblrd		*+
  5754  010E7C  CFF5 F0A0          	movff	tablat,___ftmul@f2
  5755  010E80  0009               	tblrd		*+
  5756  010E82  CFF5 F0A1          	movff	tablat,___ftmul@f2+1
  5757  010E86  000A               	tblrd		*-
  5758  010E88  CFF5 F0A2          	movff	tablat,___ftmul@f2+2
  5759  010E8C  EC38  F095         	call	___ftmul	;wreg free
  5760  010E90  C09D  F0AC         	movff	?___ftmul,?_scale
  5761  010E94  C09E  F0AD         	movff	?___ftmul+1,?_scale+1
  5762  010E98  C09F  F0AE         	movff	?___ftmul+2,?_scale+2
  5763  010E9C  0012               	return	
  5764  010E9E                     l874:
  5765                           
  5766                           ;doprnt.c: 434: return _npowers_[scl];
  5767  010E9E  0100               	movlb	0	; () banked
  5768  010EA0  51B2               	movf	scale@scl& (0+255),w,b
  5769  010EA2  0D03               	mullw	3
  5770  010EA4  0E06               	movlw	low __npowers_
  5771  010EA6  24F3               	addwf	prodl,w,c
  5772  010EA8  6EF6               	movwf	tblptrl,c
  5773  010EAA  0EFC               	movlw	high __npowers_
  5774  010EAC  20F4               	addwfc	prodh,w,c
  5775  010EAE  6EF7               	movwf	tblptrh,c
  5776  010EB0                     	if	1	;There are 3 active tblptr bytes
  5777  010EB0  6AF8               	clrf	tblptru,c
  5778  010EB2  0E00               	movlw	low (__mediumconst shr (0+16))
  5779  010EB4  22F8               	addwfc	tblptru,f,c
  5780  010EB6                     	endif
  5781  010EB6  0009               	tblrd		*+
  5782  010EB8  CFF5 F0AC          	movff	tablat,?_scale
  5783  010EBC  0009               	tblrd		*+
  5784  010EBE  CFF5 F0AD          	movff	tablat,?_scale+1
  5785  010EC2  000A               	tblrd		*-
  5786  010EC4  CFF5 F0AE          	movff	tablat,?_scale+2
  5787                           
  5788                           ; BSR set to: 0
  5789  010EC8  0012               	return	
  5790  010ECA                     l870:
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;doprnt.c: 435: }
  5794                           ;doprnt.c: 436: if(scl>=110)
  5795                           
  5796                           ; BSR set to: 0
  5797  010ECA  51B2               	movf	scale@scl& (0+255),w,b
  5798  010ECC  0A80               	xorlw	128
  5799  010ECE  0F12               	addlw	-238
  5800  010ED0  A0D8               	btfss	status,0,c
  5801  010ED2  D0A0               	goto	l875
  5802                           
  5803                           ; BSR set to: 0
  5804                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5805  010ED4  0E00               	movlw	0
  5806  010ED6  6F9A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5807  010ED8  0E03               	movlw	3
  5808  010EDA  6F99               	movwf	___wmul@multiplicand& (0+255),b
  5809  010EDC  0E00               	movlw	0
  5810  010EDE  6F92               	movwf	(___awdiv@divisor+1)& (0+255),b
  5811  010EE0  0E0A               	movlw	10
  5812  010EE2  6F91               	movwf	___awdiv@divisor& (0+255),b
  5813  010EE4  0E00               	movlw	0
  5814  010EE6  6F8C               	movwf	(___awmod@divisor+1)& (0+255),b
  5815  010EE8  0E64               	movlw	100
  5816  010EEA  6F8B               	movwf	___awmod@divisor& (0+255),b
  5817  010EEC  51B2               	movf	scale@scl& (0+255),w,b
  5818  010EEE  6F89               	movwf	___awmod@dividend& (0+255),b
  5819  010EF0  6B8A               	clrf	(___awmod@dividend+1)& (0+255),b
  5820  010EF2  BF89               	btfsc	___awmod@dividend& (0+255),7,b
  5821  010EF4  078A               	decf	(___awmod@dividend+1)& (0+255),f,b
  5822  010EF6  EC3C  F09A         	call	___awmod	;wreg free
  5823  010EFA  C089  F08F         	movff	?___awmod,___awdiv@dividend
  5824  010EFE  C08A  F090         	movff	?___awmod+1,___awdiv@dividend+1
  5825  010F02  EC34  F099         	call	___awdiv	;wreg free
  5826  010F06  0E09               	movlw	9
  5827  010F08  0100               	movlb	0	; () banked
  5828  010F0A  258F               	addwf	?___awdiv& (0+255),w,b
  5829  010F0C  6F97               	movwf	___wmul@multiplier& (0+255),b
  5830  010F0E  0E00               	movlw	0
  5831  010F10  2190               	addwfc	(?___awdiv+1)& (0+255),w,b
  5832  010F12  6F98               	movwf	(___wmul@multiplier+1)& (0+255),b
  5833  010F14  ECCE  F09D         	call	___wmul	;wreg free
  5834  010F18  0EDF               	movlw	low __powers_
  5835  010F1A  0100               	movlb	0	; () banked
  5836  010F1C  2597               	addwf	?___wmul& (0+255),w,b
  5837  010F1E  6EF6               	movwf	tblptrl,c
  5838  010F20  0EFB               	movlw	high __powers_
  5839  010F22  2198               	addwfc	(?___wmul+1)& (0+255),w,b
  5840  010F24  6EF7               	movwf	tblptrh,c
  5841  010F26                     	if	1	;There are 3 active tblptr bytes
  5842  010F26  6AF8               	clrf	tblptru,c
  5843  010F28  0E00               	movlw	low (__mediumconst shr (0+16))
  5844  010F2A  22F8               	addwfc	tblptru,f,c
  5845  010F2C                     	endif
  5846  010F2C  0009               	tblrd		*+
  5847  010F2E  CFF5 F0A0          	movff	tablat,___ftmul@f2
  5848  010F32  0009               	tblrd		*+
  5849  010F34  CFF5 F0A1          	movff	tablat,___ftmul@f2+1
  5850  010F38  000A               	tblrd		*-
  5851  010F3A  CFF5 F0A2          	movff	tablat,___ftmul@f2+2
  5852  010F3E  0E00               	movlw	0
  5853  010F40  6F92               	movwf	(___awdiv@divisor+1)& (0+255),b
  5854  010F42  0E64               	movlw	100
  5855  010F44  6F91               	movwf	___awdiv@divisor& (0+255),b
  5856  010F46  51B2               	movf	scale@scl& (0+255),w,b
  5857  010F48  6F8F               	movwf	___awdiv@dividend& (0+255),b
  5858  010F4A  6B90               	clrf	(___awdiv@dividend+1)& (0+255),b
  5859  010F4C  BF8F               	btfsc	___awdiv@dividend& (0+255),7,b
  5860  010F4E  0790               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5861  010F50  EC34  F099         	call	___awdiv	;wreg free
  5862  010F54  0E12               	movlw	18
  5863  010F56  0100               	movlb	0	; () banked
  5864  010F58  258F               	addwf	?___awdiv& (0+255),w,b
  5865  010F5A  6F97               	movwf	___wmul@multiplier& (0+255),b
  5866  010F5C  0E00               	movlw	0
  5867  010F5E  2190               	addwfc	(?___awdiv+1)& (0+255),w,b
  5868  010F60  6F98               	movwf	(___wmul@multiplier+1)& (0+255),b
  5869  010F62  0E00               	movlw	0
  5870  010F64  6F9A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5871  010F66  0E03               	movlw	3
  5872  010F68  6F99               	movwf	___wmul@multiplicand& (0+255),b
  5873  010F6A  ECCE  F09D         	call	___wmul	;wreg free
  5874  010F6E  0EDF               	movlw	low __powers_
  5875  010F70  0100               	movlb	0	; () banked
  5876  010F72  2597               	addwf	?___wmul& (0+255),w,b
  5877  010F74  6EF6               	movwf	tblptrl,c
  5878  010F76  0EFB               	movlw	high __powers_
  5879  010F78  2198               	addwfc	(?___wmul+1)& (0+255),w,b
  5880  010F7A  6EF7               	movwf	tblptrh,c
  5881  010F7C                     	if	1	;There are 3 active tblptr bytes
  5882  010F7C  6AF8               	clrf	tblptru,c
  5883  010F7E  0E00               	movlw	low (__mediumconst shr (0+16))
  5884  010F80  22F8               	addwfc	tblptru,f,c
  5885  010F82                     	endif
  5886  010F82  0009               	tblrd		*+
  5887  010F84  CFF5 F09D          	movff	tablat,___ftmul@f1
  5888  010F88  0009               	tblrd		*+
  5889  010F8A  CFF5 F09E          	movff	tablat,___ftmul@f1+1
  5890  010F8E  000A               	tblrd		*-
  5891  010F90  CFF5 F09F          	movff	tablat,___ftmul@f1+2
  5892  010F94  EC38  F095         	call	___ftmul	;wreg free
  5893  010F98  C09D  F0AF         	movff	?___ftmul,_scale$2555
  5894  010F9C  C09E  F0B0         	movff	?___ftmul+1,_scale$2555+1
  5895  010FA0  C09F  F0B1         	movff	?___ftmul+2,_scale$2555+2
  5896                           
  5897                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  5898  010FA4  C0AF  F09D         	movff	_scale$2555,___ftmul@f1
  5899  010FA8  C0B0  F09E         	movff	_scale$2555+1,___ftmul@f1+1
  5900  010FAC  C0B1  F09F         	movff	_scale$2555+2,___ftmul@f1+2
  5901  010FB0  0E00               	movlw	0
  5902  010FB2  0100               	movlb	0	; () banked
  5903  010FB4  6F9A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5904  010FB6  0E03               	movlw	3
  5905  010FB8  6F99               	movwf	___wmul@multiplicand& (0+255),b
  5906  010FBA  0E00               	movlw	0
  5907  010FBC  6F8C               	movwf	(___awmod@divisor+1)& (0+255),b
  5908  010FBE  0E0A               	movlw	10
  5909  010FC0  6F8B               	movwf	___awmod@divisor& (0+255),b
  5910  010FC2  51B2               	movf	scale@scl& (0+255),w,b
  5911  010FC4  6F89               	movwf	___awmod@dividend& (0+255),b
  5912  010FC6  6B8A               	clrf	(___awmod@dividend+1)& (0+255),b
  5913  010FC8  BF89               	btfsc	___awmod@dividend& (0+255),7,b
  5914  010FCA  078A               	decf	(___awmod@dividend+1)& (0+255),f,b
  5915  010FCC  EC3C  F09A         	call	___awmod	;wreg free
  5916  010FD0  C089  F097         	movff	?___awmod,___wmul@multiplier
  5917  010FD4  C08A  F098         	movff	?___awmod+1,___wmul@multiplier+1
  5918  010FD8  ECCE  F09D         	call	___wmul	;wreg free
  5919  010FDC  0EDF               	movlw	low __powers_
  5920  010FDE  0100               	movlb	0	; () banked
  5921  010FE0  2597               	addwf	?___wmul& (0+255),w,b
  5922  010FE2  6EF6               	movwf	tblptrl,c
  5923  010FE4  0EFB               	movlw	high __powers_
  5924  010FE6  2198               	addwfc	(?___wmul+1)& (0+255),w,b
  5925  010FE8  6EF7               	movwf	tblptrh,c
  5926  010FEA                     	if	1	;There are 3 active tblptr bytes
  5927  010FEA  6AF8               	clrf	tblptru,c
  5928  010FEC  0E00               	movlw	low (__mediumconst shr (0+16))
  5929  010FEE  22F8               	addwfc	tblptru,f,c
  5930  010FF0                     	endif
  5931  010FF0  0009               	tblrd		*+
  5932  010FF2  CFF5 F0A0          	movff	tablat,___ftmul@f2
  5933  010FF6  0009               	tblrd		*+
  5934  010FF8  CFF5 F0A1          	movff	tablat,___ftmul@f2+1
  5935  010FFC  000A               	tblrd		*-
  5936  010FFE  CFF5 F0A2          	movff	tablat,___ftmul@f2+2
  5937  011002  EC38  F095         	call	___ftmul	;wreg free
  5938  011006  C09D  F0AC         	movff	?___ftmul,?_scale
  5939  01100A  C09E  F0AD         	movff	?___ftmul+1,?_scale+1
  5940  01100E  C09F  F0AE         	movff	?___ftmul+2,?_scale+2
  5941  011012  0012               	return	
  5942  011014                     l875:
  5943                           
  5944                           ;doprnt.c: 438: else if(scl > 10)
  5945  011014  0100               	movlb	0	; () banked
  5946  011016  51B2               	movf	scale@scl& (0+255),w,b
  5947  011018  0A80               	xorlw	128
  5948  01101A  0F75               	addlw	-139
  5949  01101C  A0D8               	btfss	status,0,c
  5950  01101E  D05C               	goto	l877
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  5954  011020  0E00               	movlw	0
  5955  011022  6F92               	movwf	(___awdiv@divisor+1)& (0+255),b
  5956  011024  0E0A               	movlw	10
  5957  011026  6F91               	movwf	___awdiv@divisor& (0+255),b
  5958  011028  51B2               	movf	scale@scl& (0+255),w,b
  5959  01102A  6F8F               	movwf	___awdiv@dividend& (0+255),b
  5960  01102C  6B90               	clrf	(___awdiv@dividend+1)& (0+255),b
  5961  01102E  BF8F               	btfsc	___awdiv@dividend& (0+255),7,b
  5962  011030  0790               	decf	(___awdiv@dividend+1)& (0+255),f,b
  5963  011032  EC34  F099         	call	___awdiv	;wreg free
  5964  011036  0E09               	movlw	9
  5965  011038  0100               	movlb	0	; () banked
  5966  01103A  258F               	addwf	?___awdiv& (0+255),w,b
  5967  01103C  6F97               	movwf	___wmul@multiplier& (0+255),b
  5968  01103E  0E00               	movlw	0
  5969  011040  2190               	addwfc	(?___awdiv+1)& (0+255),w,b
  5970  011042  6F98               	movwf	(___wmul@multiplier+1)& (0+255),b
  5971  011044  0E00               	movlw	0
  5972  011046  6F9A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5973  011048  0E03               	movlw	3
  5974  01104A  6F99               	movwf	___wmul@multiplicand& (0+255),b
  5975  01104C  ECCE  F09D         	call	___wmul	;wreg free
  5976  011050  0EDF               	movlw	low __powers_
  5977  011052  0100               	movlb	0	; () banked
  5978  011054  2597               	addwf	?___wmul& (0+255),w,b
  5979  011056  6EF6               	movwf	tblptrl,c
  5980  011058  0EFB               	movlw	high __powers_
  5981  01105A  2198               	addwfc	(?___wmul+1)& (0+255),w,b
  5982  01105C  6EF7               	movwf	tblptrh,c
  5983  01105E                     	if	1	;There are 3 active tblptr bytes
  5984  01105E  6AF8               	clrf	tblptru,c
  5985  011060  0E00               	movlw	low (__mediumconst shr (0+16))
  5986  011062  22F8               	addwfc	tblptru,f,c
  5987  011064                     	endif
  5988  011064  0009               	tblrd		*+
  5989  011066  CFF5 F09D          	movff	tablat,___ftmul@f1
  5990  01106A  0009               	tblrd		*+
  5991  01106C  CFF5 F09E          	movff	tablat,___ftmul@f1+1
  5992  011070  000A               	tblrd		*-
  5993  011072  CFF5 F09F          	movff	tablat,___ftmul@f1+2
  5994  011076  0E00               	movlw	0
  5995  011078  6F9A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5996  01107A  0E03               	movlw	3
  5997  01107C  6F99               	movwf	___wmul@multiplicand& (0+255),b
  5998  01107E  0E00               	movlw	0
  5999  011080  6F8C               	movwf	(___awmod@divisor+1)& (0+255),b
  6000  011082  0E0A               	movlw	10
  6001  011084  6F8B               	movwf	___awmod@divisor& (0+255),b
  6002  011086  51B2               	movf	scale@scl& (0+255),w,b
  6003  011088  6F89               	movwf	___awmod@dividend& (0+255),b
  6004  01108A  6B8A               	clrf	(___awmod@dividend+1)& (0+255),b
  6005  01108C  BF89               	btfsc	___awmod@dividend& (0+255),7,b
  6006  01108E  078A               	decf	(___awmod@dividend+1)& (0+255),f,b
  6007  011090  EC3C  F09A         	call	___awmod	;wreg free
  6008  011094  C089  F097         	movff	?___awmod,___wmul@multiplier
  6009  011098  C08A  F098         	movff	?___awmod+1,___wmul@multiplier+1
  6010  01109C  ECCE  F09D         	call	___wmul	;wreg free
  6011  0110A0  0EDF               	movlw	low __powers_
  6012  0110A2  0100               	movlb	0	; () banked
  6013  0110A4  2597               	addwf	?___wmul& (0+255),w,b
  6014  0110A6  6EF6               	movwf	tblptrl,c
  6015  0110A8  0EFB               	movlw	high __powers_
  6016  0110AA  2198               	addwfc	(?___wmul+1)& (0+255),w,b
  6017  0110AC  6EF7               	movwf	tblptrh,c
  6018  0110AE                     	if	1	;There are 3 active tblptr bytes
  6019  0110AE  6AF8               	clrf	tblptru,c
  6020  0110B0  0E00               	movlw	low (__mediumconst shr (0+16))
  6021  0110B2  22F8               	addwfc	tblptru,f,c
  6022  0110B4                     	endif
  6023  0110B4  0009               	tblrd		*+
  6024  0110B6  CFF5 F0A0          	movff	tablat,___ftmul@f2
  6025  0110BA  0009               	tblrd		*+
  6026  0110BC  CFF5 F0A1          	movff	tablat,___ftmul@f2+1
  6027  0110C0  000A               	tblrd		*-
  6028  0110C2  CFF5 F0A2          	movff	tablat,___ftmul@f2+2
  6029  0110C6  EC38  F095         	call	___ftmul	;wreg free
  6030  0110CA  C09D  F0AC         	movff	?___ftmul,?_scale
  6031  0110CE  C09E  F0AD         	movff	?___ftmul+1,?_scale+1
  6032  0110D2  C09F  F0AE         	movff	?___ftmul+2,?_scale+2
  6033  0110D6  0012               	return	
  6034  0110D8                     l877:
  6035                           
  6036                           ;doprnt.c: 440: return _powers_[scl];
  6037  0110D8  0100               	movlb	0	; () banked
  6038  0110DA  51B2               	movf	scale@scl& (0+255),w,b
  6039  0110DC  0D03               	mullw	3
  6040  0110DE  0EDF               	movlw	low __powers_
  6041  0110E0  24F3               	addwf	prodl,w,c
  6042  0110E2  6EF6               	movwf	tblptrl,c
  6043  0110E4  0EFB               	movlw	high __powers_
  6044  0110E6  20F4               	addwfc	prodh,w,c
  6045  0110E8  6EF7               	movwf	tblptrh,c
  6046  0110EA                     	if	1	;There are 3 active tblptr bytes
  6047  0110EA  6AF8               	clrf	tblptru,c
  6048  0110EC  0E00               	movlw	low (__mediumconst shr (0+16))
  6049  0110EE  22F8               	addwfc	tblptru,f,c
  6050  0110F0                     	endif
  6051  0110F0  0009               	tblrd		*+
  6052  0110F2  CFF5 F0AC          	movff	tablat,?_scale
  6053  0110F6  0009               	tblrd		*+
  6054  0110F8  CFF5 F0AD          	movff	tablat,?_scale+1
  6055  0110FC  000A               	tblrd		*-
  6056  0110FE  CFF5 F0AE          	movff	tablat,?_scale+2
  6057  011102  0012               	return	
  6058  011104                     __end_of_scale:
  6059                           	opt stack 0
  6060                           tblptru	equ	0xFF8
  6061                           tblptrh	equ	0xFF7
  6062                           tblptrl	equ	0xFF6
  6063                           tablat	equ	0xFF5
  6064                           prodh	equ	0xFF4
  6065                           prodl	equ	0xFF3
  6066                           intcon	equ	0xFF2
  6067                           postinc0	equ	0xFEE
  6068                           wreg	equ	0xFE8
  6069                           indf2	equ	0xFDF
  6070                           postinc2	equ	0xFDE
  6071                           postdec2	equ	0xFDD
  6072                           fsr2h	equ	0xFDA
  6073                           fsr2l	equ	0xFD9
  6074                           status	equ	0xFD8
  6075                           
  6076 ;; *************** function _putch *****************
  6077 ;; Defined at:
  6078 ;;		line 180 in file "mcc_generated_files/eusart2.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;  txData          1    wreg     unsigned char 
  6081 ;; Auto vars:     Size  Location     Type
  6082 ;;  txData          1   42[BANK0 ] unsigned char 
  6083 ;; Return value:  Size  Location     Type
  6084 ;;                  1    wreg      void 
  6085 ;; Registers used:
  6086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6087 ;; Tracked objects:
  6088 ;;		On entry : 0/0
  6089 ;;		On exit  : 0/0
  6090 ;;		Unchanged: 0/0
  6091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6093 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6095 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6096 ;;Total ram usage:        1 bytes
  6097 ;; Hardware stack levels used:    1
  6098 ;; Hardware stack levels required when called:   11
  6099 ;; This function calls:
  6100 ;;		_EUSART2_Write
  6101 ;; This function is called by:
  6102 ;;		_printf
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           	psect	text14
  6107  013DE8                     __ptext14:
  6108                           	opt stack 0
  6109  013DE8                     _putch:
  6110                           	opt stack 16
  6111                           
  6112                           ;incstack = 0
  6113                           ;putch@txData stored from wreg
  6114  013DE8  0100               	movlb	0	; () banked
  6115  013DEA  6F8A               	movwf	putch@txData& (0+255),b
  6116                           
  6117                           ;eusart2.c: 182: EUSART2_Write(txData);
  6118  013DEC  0100               	movlb	0	; () banked
  6119  013DEE  518A               	movf	putch@txData& (0+255),w,b
  6120  013DF0  ECB7  F09C         	call	_EUSART2_Write
  6121  013DF4  0012               	return		;funcret
  6122  013DF6                     __end_of_putch:
  6123                           	opt stack 0
  6124                           tblptru	equ	0xFF8
  6125                           tblptrh	equ	0xFF7
  6126                           tblptrl	equ	0xFF6
  6127                           tablat	equ	0xFF5
  6128                           prodh	equ	0xFF4
  6129                           prodl	equ	0xFF3
  6130                           intcon	equ	0xFF2
  6131                           postinc0	equ	0xFEE
  6132                           wreg	equ	0xFE8
  6133                           indf2	equ	0xFDF
  6134                           postinc2	equ	0xFDE
  6135                           postdec2	equ	0xFDD
  6136                           fsr2h	equ	0xFDA
  6137                           fsr2l	equ	0xFD9
  6138                           status	equ	0xFD8
  6139                           
  6140 ;; *************** function _EUSART2_Write *****************
  6141 ;; Defined at:
  6142 ;;		line 151 in file "mcc_generated_files/eusart2.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;  txData          1    wreg     unsigned char 
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;  txData          1   41[BANK0 ] unsigned char 
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  1    wreg      void 
  6149 ;; Registers used:
  6150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6157 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6159 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6160 ;;Total ram usage:        1 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:   10
  6163 ;; This function calls:
  6164 ;;		Nothing
  6165 ;; This function is called by:
  6166 ;;		_putch
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           	psect	text15
  6171  01396E                     __ptext15:
  6172                           	opt stack 0
  6173  01396E                     _EUSART2_Write:
  6174                           	opt stack 16
  6175                           
  6176                           ;incstack = 0
  6177                           ;EUSART2_Write@txData stored from wreg
  6178  01396E  0100               	movlb	0	; () banked
  6179  013970  6F89               	movwf	EUSART2_Write@txData& (0+255),b
  6180                           
  6181                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
  6182  013972  D001               	goto	l366
  6183  013974                     l367:
  6184                           
  6185                           ; BSR set to: 0
  6186  013974  0004               	clrwdt		;# 
  6187  013976                     l366:
  6188  013976  0100               	movlb	0	; () banked
  6189  013978  51D3               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
  6190  01397A  B4D8               	btfsc	status,2,c
  6191  01397C  D7FB               	goto	l367
  6192                           
  6193                           ; BSR set to: 0
  6194                           ;eusart2.c: 156: }
  6195                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
  6196  01397E  010E               	movlb	14	; () banked
  6197  013980  BD2C               	btfsc	44,6,b	;volatile
  6198  013982  D003               	goto	l369
  6199                           
  6200                           ; BSR set to: 14
  6201                           ;eusart2.c: 159: {
  6202                           ;eusart2.c: 160: TX2REG = txData;
  6203  013984  C089  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
  6204                           
  6205                           ;eusart2.c: 161: }
  6206  013988  D013               	goto	l370
  6207  01398A                     l369:
  6208                           
  6209                           ; BSR set to: 14
  6210                           ;eusart2.c: 162: else
  6211                           ;eusart2.c: 163: {
  6212                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
  6213  01398A  9D2C               	bcf	44,6,b	;volatile
  6214                           
  6215                           ; BSR set to: 14
  6216                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
  6217  01398C  0100               	movlb	0	; () banked
  6218  01398E  51D5               	movf	_eusart2TxHead& (0+255),w,b	;volatile
  6219  013990  0D01               	mullw	1
  6220  013992  0E40               	movlw	low _eusart2TxBuffer
  6221  013994  24F3               	addwf	prodl,w,c
  6222  013996  6ED9               	movwf	fsr2l,c
  6223  013998  0E01               	movlw	high _eusart2TxBuffer
  6224  01399A  20F4               	addwfc	prodh,w,c
  6225  01399C  6EDA               	movwf	fsr2h,c
  6226  01399E  C089  FFDF         	movff	EUSART2_Write@txData,indf2
  6227                           
  6228                           ; BSR set to: 0
  6229  0139A2  2BD5               	incf	_eusart2TxHead& (0+255),f,b	;volatile
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
  6233  0139A4  0E3F               	movlw	63
  6234  0139A6  65D5               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
  6235  0139A8  D002               	goto	l371
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;eusart2.c: 167: {
  6239                           ;eusart2.c: 168: eusart2TxHead = 0;
  6240  0139AA  0E00               	movlw	0
  6241  0139AC  6FD5               	movwf	_eusart2TxHead& (0+255),b	;volatile
  6242  0139AE                     l371:
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;eusart2.c: 169: }
  6246                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
  6247                           
  6248                           ; BSR set to: 0
  6249  0139AE  07D3               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
  6250  0139B0                     l370:
  6251                           
  6252                           ;eusart2.c: 171: }
  6253                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
  6254                           
  6255                           ; BSR set to: 0
  6256  0139B0  010E               	movlb	14	; () banked
  6257  0139B2  8D2C               	bsf	44,6,b	;volatile
  6258                           
  6259                           ; BSR set to: 14
  6260  0139B4  0012               	return		;funcret
  6261  0139B6                     __end_of_EUSART2_Write:
  6262                           	opt stack 0
  6263                           tblptru	equ	0xFF8
  6264                           tblptrh	equ	0xFF7
  6265                           tblptrl	equ	0xFF6
  6266                           tablat	equ	0xFF5
  6267                           prodh	equ	0xFF4
  6268                           prodl	equ	0xFF3
  6269                           intcon	equ	0xFF2
  6270                           postinc0	equ	0xFEE
  6271                           wreg	equ	0xFE8
  6272                           indf2	equ	0xFDF
  6273                           postinc2	equ	0xFDE
  6274                           postdec2	equ	0xFDD
  6275                           fsr2h	equ	0xFDA
  6276                           fsr2l	equ	0xFD9
  6277                           status	equ	0xFD8
  6278                           
  6279 ;; *************** function _fround *****************
  6280 ;; Defined at:
  6281 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;  prec            1    wreg     unsigned char 
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;  prec            1   85[BANK0 ] unsigned char 
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  3   76[BANK0 ] unsigned char 
  6288 ;; Registers used:
  6289 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/0
  6292 ;;		On exit  : 0/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6295 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6296 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6298 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6299 ;;Total ram usage:       10 bytes
  6300 ;; Hardware stack levels used:    1
  6301 ;; Hardware stack levels required when called:   12
  6302 ;; This function calls:
  6303 ;;		___awdiv
  6304 ;;		___awmod
  6305 ;;		___ftmul
  6306 ;;		___wmul
  6307 ;; This function is called by:
  6308 ;;		_printf
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           	psect	text16
  6313  0118BC                     __ptext16:
  6314                           	opt stack 0
  6315  0118BC                     _fround:
  6316                           	opt stack 15
  6317                           
  6318                           ; BSR set to: 14
  6319                           ;incstack = 0
  6320                           ;fround@prec stored from wreg
  6321  0118BC  0100               	movlb	0	; () banked
  6322  0118BE  6FB5               	movwf	fround@prec& (0+255),b
  6323                           
  6324                           ;doprnt.c: 413: if(prec>=110)
  6325  0118C0  0E6D               	movlw	109
  6326  0118C2  0100               	movlb	0	; () banked
  6327  0118C4  65B5               	cpfsgt	fround@prec& (0+255),b
  6328  0118C6  D0AF               	goto	l864
  6329                           
  6330                           ; BSR set to: 0
  6331                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6332  0118C8  0E00               	movlw	0
  6333  0118CA  6F9A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6334  0118CC  0E03               	movlw	3
  6335  0118CE  6F99               	movwf	___wmul@multiplicand& (0+255),b
  6336  0118D0  0E00               	movlw	0
  6337  0118D2  6F92               	movwf	(___awdiv@divisor+1)& (0+255),b
  6338  0118D4  0E0A               	movlw	10
  6339  0118D6  6F91               	movwf	___awdiv@divisor& (0+255),b
  6340  0118D8  0E00               	movlw	0
  6341  0118DA  6F8C               	movwf	(___awmod@divisor+1)& (0+255),b
  6342  0118DC  0E64               	movlw	100
  6343  0118DE  6F8B               	movwf	___awmod@divisor& (0+255),b
  6344  0118E0  C0B5  F089         	movff	fround@prec,___awmod@dividend
  6345  0118E4  6B8A               	clrf	(___awmod@dividend+1)& (0+255),b
  6346  0118E6  EC3C  F09A         	call	___awmod	;wreg free
  6347  0118EA  C089  F08F         	movff	?___awmod,___awdiv@dividend
  6348  0118EE  C08A  F090         	movff	?___awmod+1,___awdiv@dividend+1
  6349  0118F2  EC34  F099         	call	___awdiv	;wreg free
  6350  0118F6  0E09               	movlw	9
  6351  0118F8  0100               	movlb	0	; () banked
  6352  0118FA  258F               	addwf	?___awdiv& (0+255),w,b
  6353  0118FC  6F97               	movwf	___wmul@multiplier& (0+255),b
  6354  0118FE  0E00               	movlw	0
  6355  011900  2190               	addwfc	(?___awdiv+1)& (0+255),w,b
  6356  011902  6F98               	movwf	(___wmul@multiplier+1)& (0+255),b
  6357  011904  ECCE  F09D         	call	___wmul	;wreg free
  6358  011908  0E06               	movlw	low __npowers_
  6359  01190A  0100               	movlb	0	; () banked
  6360  01190C  2597               	addwf	?___wmul& (0+255),w,b
  6361  01190E  6EF6               	movwf	tblptrl,c
  6362  011910  0EFC               	movlw	high __npowers_
  6363  011912  2198               	addwfc	(?___wmul+1)& (0+255),w,b
  6364  011914  6EF7               	movwf	tblptrh,c
  6365  011916                     	if	1	;There are 3 active tblptr bytes
  6366  011916  6AF8               	clrf	tblptru,c
  6367  011918  0E00               	movlw	low (__mediumconst shr (0+16))
  6368  01191A  22F8               	addwfc	tblptru,f,c
  6369  01191C                     	endif
  6370  01191C  0009               	tblrd		*+
  6371  01191E  CFF5 F0A0          	movff	tablat,___ftmul@f2
  6372  011922  0009               	tblrd		*+
  6373  011924  CFF5 F0A1          	movff	tablat,___ftmul@f2+1
  6374  011928  000A               	tblrd		*-
  6375  01192A  CFF5 F0A2          	movff	tablat,___ftmul@f2+2
  6376  01192E  0E00               	movlw	0
  6377  011930  6F92               	movwf	(___awdiv@divisor+1)& (0+255),b
  6378  011932  0E64               	movlw	100
  6379  011934  6F91               	movwf	___awdiv@divisor& (0+255),b
  6380  011936  C0B5  F08F         	movff	fround@prec,___awdiv@dividend
  6381  01193A  6B90               	clrf	(___awdiv@dividend+1)& (0+255),b
  6382  01193C  EC34  F099         	call	___awdiv	;wreg free
  6383  011940  0E12               	movlw	18
  6384  011942  0100               	movlb	0	; () banked
  6385  011944  258F               	addwf	?___awdiv& (0+255),w,b
  6386  011946  6F97               	movwf	___wmul@multiplier& (0+255),b
  6387  011948  0E00               	movlw	0
  6388  01194A  2190               	addwfc	(?___awdiv+1)& (0+255),w,b
  6389  01194C  6F98               	movwf	(___wmul@multiplier+1)& (0+255),b
  6390  01194E  0E00               	movlw	0
  6391  011950  6F9A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6392  011952  0E03               	movlw	3
  6393  011954  6F99               	movwf	___wmul@multiplicand& (0+255),b
  6394  011956  ECCE  F09D         	call	___wmul	;wreg free
  6395  01195A  0E06               	movlw	low __npowers_
  6396  01195C  0100               	movlb	0	; () banked
  6397  01195E  2597               	addwf	?___wmul& (0+255),w,b
  6398  011960  6EF6               	movwf	tblptrl,c
  6399  011962  0EFC               	movlw	high __npowers_
  6400  011964  2198               	addwfc	(?___wmul+1)& (0+255),w,b
  6401  011966  6EF7               	movwf	tblptrh,c
  6402  011968                     	if	1	;There are 3 active tblptr bytes
  6403  011968  6AF8               	clrf	tblptru,c
  6404  01196A  0E00               	movlw	low (__mediumconst shr (0+16))
  6405  01196C  22F8               	addwfc	tblptru,f,c
  6406  01196E                     	endif
  6407  01196E  0009               	tblrd		*+
  6408  011970  CFF5 F09D          	movff	tablat,___ftmul@f1
  6409  011974  0009               	tblrd		*+
  6410  011976  CFF5 F09E          	movff	tablat,___ftmul@f1+1
  6411  01197A  000A               	tblrd		*-
  6412  01197C  CFF5 F09F          	movff	tablat,___ftmul@f1+2
  6413  011980  EC38  F095         	call	___ftmul	;wreg free
  6414  011984  C09D  F0B2         	movff	?___ftmul,_fround$2553
  6415  011988  C09E  F0B3         	movff	?___ftmul+1,_fround$2553+1
  6416  01198C  C09F  F0B4         	movff	?___ftmul+2,_fround$2553+2
  6417                           
  6418                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6419  011990  0E00               	movlw	0
  6420  011992  0100               	movlb	0	; () banked
  6421  011994  6F9A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6422  011996  0E03               	movlw	3
  6423  011998  6F99               	movwf	___wmul@multiplicand& (0+255),b
  6424  01199A  0E00               	movlw	0
  6425  01199C  6F8C               	movwf	(___awmod@divisor+1)& (0+255),b
  6426  01199E  0E0A               	movlw	10
  6427  0119A0  6F8B               	movwf	___awmod@divisor& (0+255),b
  6428  0119A2  C0B5  F089         	movff	fround@prec,___awmod@dividend
  6429  0119A6  6B8A               	clrf	(___awmod@dividend+1)& (0+255),b
  6430  0119A8  EC3C  F09A         	call	___awmod	;wreg free
  6431  0119AC  C089  F097         	movff	?___awmod,___wmul@multiplier
  6432  0119B0  C08A  F098         	movff	?___awmod+1,___wmul@multiplier+1
  6433  0119B4  ECCE  F09D         	call	___wmul	;wreg free
  6434  0119B8  0E06               	movlw	low __npowers_
  6435  0119BA  0100               	movlb	0	; () banked
  6436  0119BC  2597               	addwf	?___wmul& (0+255),w,b
  6437  0119BE  6EF6               	movwf	tblptrl,c
  6438  0119C0  0EFC               	movlw	high __npowers_
  6439  0119C2  2198               	addwfc	(?___wmul+1)& (0+255),w,b
  6440  0119C4  6EF7               	movwf	tblptrh,c
  6441  0119C6                     	if	1	;There are 3 active tblptr bytes
  6442  0119C6  6AF8               	clrf	tblptru,c
  6443  0119C8  0E00               	movlw	low (__mediumconst shr (0+16))
  6444  0119CA  22F8               	addwfc	tblptru,f,c
  6445  0119CC                     	endif
  6446  0119CC  0009               	tblrd		*+
  6447  0119CE  CFF5 F0A0          	movff	tablat,___ftmul@f2
  6448  0119D2  0009               	tblrd		*+
  6449  0119D4  CFF5 F0A1          	movff	tablat,___ftmul@f2+1
  6450  0119D8  000A               	tblrd		*-
  6451  0119DA  CFF5 F0A2          	movff	tablat,___ftmul@f2+2
  6452  0119DE  C0B2  F09D         	movff	_fround$2553,___ftmul@f1
  6453  0119E2  C0B3  F09E         	movff	_fround$2553+1,___ftmul@f1+1
  6454  0119E6  C0B4  F09F         	movff	_fround$2553+2,___ftmul@f1+2
  6455  0119EA  EC38  F095         	call	___ftmul	;wreg free
  6456  0119EE  C09D  F0AF         	movff	?___ftmul,_fround$2554
  6457  0119F2  C09E  F0B0         	movff	?___ftmul+1,_fround$2554+1
  6458  0119F6  C09F  F0B1         	movff	?___ftmul+2,_fround$2554+2
  6459                           
  6460                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  6461  0119FA  C0AF  F09D         	movff	_fround$2554,___ftmul@f1
  6462  0119FE  C0B0  F09E         	movff	_fround$2554+1,___ftmul@f1+1
  6463  011A02  C0B1  F09F         	movff	_fround$2554+2,___ftmul@f1+2
  6464  011A06  0E00               	movlw	0
  6465  011A08  0100               	movlb	0	; () banked
  6466  011A0A  6FA0               	movwf	___ftmul@f2& (0+255),b
  6467  011A0C  0E00               	movlw	0
  6468  011A0E  6FA1               	movwf	(___ftmul@f2+1)& (0+255),b
  6469  011A10  0E3F               	movlw	63
  6470  011A12  6FA2               	movwf	(___ftmul@f2+2)& (0+255),b
  6471  011A14  EC38  F095         	call	___ftmul	;wreg free
  6472  011A18  C09D  F0AC         	movff	?___ftmul,?_fround
  6473  011A1C  C09E  F0AD         	movff	?___ftmul+1,?_fround+1
  6474  011A20  C09F  F0AE         	movff	?___ftmul+2,?_fround+2
  6475  011A24  0012               	return	
  6476  011A26                     l864:
  6477                           
  6478                           ;doprnt.c: 415: else if(prec > 10)
  6479  011A26  0E0A               	movlw	10
  6480  011A28  0100               	movlb	0	; () banked
  6481  011A2A  65B5               	cpfsgt	fround@prec& (0+255),b
  6482  011A2C  D06D               	goto	l867
  6483                           
  6484                           ; BSR set to: 0
  6485                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6486  011A2E  0E00               	movlw	0
  6487  011A30  6F9A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6488  011A32  0E03               	movlw	3
  6489  011A34  6F99               	movwf	___wmul@multiplicand& (0+255),b
  6490  011A36  0E00               	movlw	0
  6491  011A38  6F8C               	movwf	(___awmod@divisor+1)& (0+255),b
  6492  011A3A  0E0A               	movlw	10
  6493  011A3C  6F8B               	movwf	___awmod@divisor& (0+255),b
  6494  011A3E  C0B5  F089         	movff	fround@prec,___awmod@dividend
  6495  011A42  6B8A               	clrf	(___awmod@dividend+1)& (0+255),b
  6496  011A44  EC3C  F09A         	call	___awmod	;wreg free
  6497  011A48  C089  F097         	movff	?___awmod,___wmul@multiplier
  6498  011A4C  C08A  F098         	movff	?___awmod+1,___wmul@multiplier+1
  6499  011A50  ECCE  F09D         	call	___wmul	;wreg free
  6500  011A54  0E06               	movlw	low __npowers_
  6501  011A56  0100               	movlb	0	; () banked
  6502  011A58  2597               	addwf	?___wmul& (0+255),w,b
  6503  011A5A  6EF6               	movwf	tblptrl,c
  6504  011A5C  0EFC               	movlw	high __npowers_
  6505  011A5E  2198               	addwfc	(?___wmul+1)& (0+255),w,b
  6506  011A60  6EF7               	movwf	tblptrh,c
  6507  011A62                     	if	1	;There are 3 active tblptr bytes
  6508  011A62  6AF8               	clrf	tblptru,c
  6509  011A64  0E00               	movlw	low (__mediumconst shr (0+16))
  6510  011A66  22F8               	addwfc	tblptru,f,c
  6511  011A68                     	endif
  6512  011A68  0009               	tblrd		*+
  6513  011A6A  CFF5 F0A0          	movff	tablat,___ftmul@f2
  6514  011A6E  0009               	tblrd		*+
  6515  011A70  CFF5 F0A1          	movff	tablat,___ftmul@f2+1
  6516  011A74  000A               	tblrd		*-
  6517  011A76  CFF5 F0A2          	movff	tablat,___ftmul@f2+2
  6518  011A7A  0E00               	movlw	0
  6519  011A7C  6F92               	movwf	(___awdiv@divisor+1)& (0+255),b
  6520  011A7E  0E0A               	movlw	10
  6521  011A80  6F91               	movwf	___awdiv@divisor& (0+255),b
  6522  011A82  C0B5  F08F         	movff	fround@prec,___awdiv@dividend
  6523  011A86  6B90               	clrf	(___awdiv@dividend+1)& (0+255),b
  6524  011A88  EC34  F099         	call	___awdiv	;wreg free
  6525  011A8C  0E09               	movlw	9
  6526  011A8E  0100               	movlb	0	; () banked
  6527  011A90  258F               	addwf	?___awdiv& (0+255),w,b
  6528  011A92  6F97               	movwf	___wmul@multiplier& (0+255),b
  6529  011A94  0E00               	movlw	0
  6530  011A96  2190               	addwfc	(?___awdiv+1)& (0+255),w,b
  6531  011A98  6F98               	movwf	(___wmul@multiplier+1)& (0+255),b
  6532  011A9A  0E00               	movlw	0
  6533  011A9C  6F9A               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6534  011A9E  0E03               	movlw	3
  6535  011AA0  6F99               	movwf	___wmul@multiplicand& (0+255),b
  6536  011AA2  ECCE  F09D         	call	___wmul	;wreg free
  6537  011AA6  0E06               	movlw	low __npowers_
  6538  011AA8  0100               	movlb	0	; () banked
  6539  011AAA  2597               	addwf	?___wmul& (0+255),w,b
  6540  011AAC  6EF6               	movwf	tblptrl,c
  6541  011AAE  0EFC               	movlw	high __npowers_
  6542  011AB0  2198               	addwfc	(?___wmul+1)& (0+255),w,b
  6543  011AB2  6EF7               	movwf	tblptrh,c
  6544  011AB4                     	if	1	;There are 3 active tblptr bytes
  6545  011AB4  6AF8               	clrf	tblptru,c
  6546  011AB6  0E00               	movlw	low (__mediumconst shr (0+16))
  6547  011AB8  22F8               	addwfc	tblptru,f,c
  6548  011ABA                     	endif
  6549  011ABA  0009               	tblrd		*+
  6550  011ABC  CFF5 F09D          	movff	tablat,___ftmul@f1
  6551  011AC0  0009               	tblrd		*+
  6552  011AC2  CFF5 F09E          	movff	tablat,___ftmul@f1+1
  6553  011AC6  000A               	tblrd		*-
  6554  011AC8  CFF5 F09F          	movff	tablat,___ftmul@f1+2
  6555  011ACC  EC38  F095         	call	___ftmul	;wreg free
  6556  011AD0  C09D  F0B2         	movff	?___ftmul,_fround$2553
  6557  011AD4  C09E  F0B3         	movff	?___ftmul+1,_fround$2553+1
  6558  011AD8  C09F  F0B4         	movff	?___ftmul+2,_fround$2553+2
  6559                           
  6560                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  6561  011ADC  C0B2  F09D         	movff	_fround$2553,___ftmul@f1
  6562  011AE0  C0B3  F09E         	movff	_fround$2553+1,___ftmul@f1+1
  6563  011AE4  C0B4  F09F         	movff	_fround$2553+2,___ftmul@f1+2
  6564  011AE8  0E00               	movlw	0
  6565  011AEA  0100               	movlb	0	; () banked
  6566  011AEC  6FA0               	movwf	___ftmul@f2& (0+255),b
  6567  011AEE  0E00               	movlw	0
  6568  011AF0  6FA1               	movwf	(___ftmul@f2+1)& (0+255),b
  6569  011AF2  0E3F               	movlw	63
  6570  011AF4  6FA2               	movwf	(___ftmul@f2+2)& (0+255),b
  6571  011AF6  EC38  F095         	call	___ftmul	;wreg free
  6572  011AFA  C09D  F0AC         	movff	?___ftmul,?_fround
  6573  011AFE  C09E  F0AD         	movff	?___ftmul+1,?_fround+1
  6574  011B02  C09F  F0AE         	movff	?___ftmul+2,?_fround+2
  6575  011B06  0012               	return	
  6576  011B08                     l867:
  6577                           
  6578                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  6579  011B08  0100               	movlb	0	; () banked
  6580  011B0A  51B5               	movf	fround@prec& (0+255),w,b
  6581  011B0C  0D03               	mullw	3
  6582  011B0E  0E06               	movlw	low __npowers_
  6583  011B10  24F3               	addwf	prodl,w,c
  6584  011B12  6EF6               	movwf	tblptrl,c
  6585  011B14  0EFC               	movlw	high __npowers_
  6586  011B16  20F4               	addwfc	prodh,w,c
  6587  011B18  6EF7               	movwf	tblptrh,c
  6588  011B1A                     	if	1	;There are 3 active tblptr bytes
  6589  011B1A  6AF8               	clrf	tblptru,c
  6590  011B1C  0E00               	movlw	low (__mediumconst shr (0+16))
  6591  011B1E  22F8               	addwfc	tblptru,f,c
  6592  011B20                     	endif
  6593  011B20  0009               	tblrd		*+
  6594  011B22  CFF5 F09D          	movff	tablat,___ftmul@f1
  6595  011B26  0009               	tblrd		*+
  6596  011B28  CFF5 F09E          	movff	tablat,___ftmul@f1+1
  6597  011B2C  000A               	tblrd		*-
  6598  011B2E  CFF5 F09F          	movff	tablat,___ftmul@f1+2
  6599  011B32  0E00               	movlw	0
  6600  011B34  6FA0               	movwf	___ftmul@f2& (0+255),b
  6601  011B36  0E00               	movlw	0
  6602  011B38  6FA1               	movwf	(___ftmul@f2+1)& (0+255),b
  6603  011B3A  0E3F               	movlw	63
  6604  011B3C  6FA2               	movwf	(___ftmul@f2+2)& (0+255),b
  6605  011B3E  EC38  F095         	call	___ftmul	;wreg free
  6606  011B42  C09D  F0AC         	movff	?___ftmul,?_fround
  6607  011B46  C09E  F0AD         	movff	?___ftmul+1,?_fround+1
  6608  011B4A  C09F  F0AE         	movff	?___ftmul+2,?_fround+2
  6609  011B4E  0012               	return	
  6610  011B50                     __end_of_fround:
  6611                           	opt stack 0
  6612                           tblptru	equ	0xFF8
  6613                           tblptrh	equ	0xFF7
  6614                           tblptrl	equ	0xFF6
  6615                           tablat	equ	0xFF5
  6616                           prodh	equ	0xFF4
  6617                           prodl	equ	0xFF3
  6618                           intcon	equ	0xFF2
  6619                           postinc0	equ	0xFEE
  6620                           wreg	equ	0xFE8
  6621                           indf2	equ	0xFDF
  6622                           postinc2	equ	0xFDE
  6623                           postdec2	equ	0xFDD
  6624                           fsr2h	equ	0xFDA
  6625                           fsr2l	equ	0xFD9
  6626                           status	equ	0xFD8
  6627                           
  6628 ;; *************** function ___wmul *****************
  6629 ;; Defined at:
  6630 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  multiplier      2   55[BANK0 ] unsigned int 
  6633 ;;  multiplicand    2   57[BANK0 ] unsigned int 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  product         2   59[BANK0 ] unsigned int 
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  2   55[BANK0 ] unsigned int 
  6638 ;; Registers used:
  6639 ;;		wreg, status,2, status,0, prodl, prodh
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6645 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6646 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6648 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6649 ;;Total ram usage:        6 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:   10
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_fround
  6656 ;;		_scale
  6657 ;;		_printf
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text17
  6662  013B9C                     __ptext17:
  6663                           	opt stack 0
  6664  013B9C                     ___wmul:
  6665                           	opt stack 16
  6666                           
  6667                           ;incstack = 0
  6668  013B9C  0100               	movlb	0	; () banked
  6669  013B9E  5197               	movf	___wmul@multiplier& (0+255),w,b
  6670  013BA0  0399               	mulwf	___wmul@multiplicand& (0+255),b
  6671  013BA2  CFF3 F09B          	movff	prodl,___wmul@product
  6672  013BA6  CFF4 F09C          	movff	prodh,___wmul@product+1
  6673  013BAA  5197               	movf	___wmul@multiplier& (0+255),w,b
  6674  013BAC  039A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6675  013BAE  50F3               	movf	prodl,w,c
  6676  013BB0  279C               	addwf	(___wmul@product+1)& (0+255),f,b
  6677  013BB2  5198               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6678  013BB4  0399               	mulwf	___wmul@multiplicand& (0+255),b
  6679  013BB6  50F3               	movf	prodl,w,c
  6680  013BB8  279C               	addwf	(___wmul@product+1)& (0+255),f,b
  6681                           
  6682                           ; BSR set to: 0
  6683  013BBA  C09B  F097         	movff	___wmul@product,?___wmul
  6684  013BBE  C09C  F098         	movff	___wmul@product+1,?___wmul+1
  6685  013BC2  0012               	return	
  6686  013BC4                     __end_of___wmul:
  6687                           	opt stack 0
  6688                           tblptru	equ	0xFF8
  6689                           tblptrh	equ	0xFF7
  6690                           tblptrl	equ	0xFF6
  6691                           tablat	equ	0xFF5
  6692                           prodh	equ	0xFF4
  6693                           prodl	equ	0xFF3
  6694                           intcon	equ	0xFF2
  6695                           postinc0	equ	0xFEE
  6696                           wreg	equ	0xFE8
  6697                           indf2	equ	0xFDF
  6698                           postinc2	equ	0xFDE
  6699                           postdec2	equ	0xFDD
  6700                           fsr2h	equ	0xFDA
  6701                           fsr2l	equ	0xFD9
  6702                           status	equ	0xFD8
  6703                           
  6704 ;; *************** function ___ftmul *****************
  6705 ;; Defined at:
  6706 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  f1              3   61[BANK0 ] float 
  6709 ;;  f2              3   64[BANK0 ] float 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;  f3_as_produc    3   71[BANK0 ] unsigned um
  6712 ;;  sign            1   75[BANK0 ] unsigned char 
  6713 ;;  cntr            1   74[BANK0 ] unsigned char 
  6714 ;;  exp             1   70[BANK0 ] unsigned char 
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  3   61[BANK0 ] float 
  6717 ;; Registers used:
  6718 ;;		wreg, status,2, status,0, cstack
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6724 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6725 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6726 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6727 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6728 ;;Total ram usage:       15 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; Hardware stack levels required when called:   11
  6731 ;; This function calls:
  6732 ;;		___ftpack
  6733 ;; This function is called by:
  6734 ;;		_fround
  6735 ;;		_scale
  6736 ;;		_printf
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           	psect	text18
  6741  012A70                     __ptext18:
  6742                           	opt stack 0
  6743  012A70                     ___ftmul:
  6744                           	opt stack 15
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;incstack = 0
  6748  012A70  C09F  F0A3         	movff	___ftmul@f1+2,??___ftmul
  6749  012A74  0100               	movlb	0	; () banked
  6750  012A76  6BA4               	clrf	(??___ftmul+1)& (0+255),b
  6751  012A78  6BA5               	clrf	(??___ftmul+2)& (0+255),b
  6752  012A7A  359E               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  6753  012A7C  37A3               	rlcf	??___ftmul& (0+255),f,b
  6754  012A7E  E301               	bnc	u6321
  6755  012A80  81A4               	bsf	(??___ftmul+1)& (0+255),0,b
  6756  012A82                     u6321:
  6757  012A82  51A3               	movf	??___ftmul& (0+255),w,b
  6758  012A84  6FA6               	movwf	___ftmul@exp& (0+255),b
  6759  012A86  51A6               	movf	___ftmul@exp& (0+255),w,b
  6760  012A88  A4D8               	btfss	status,2,c
  6761  012A8A  D007               	goto	l1256
  6762                           
  6763                           ; BSR set to: 0
  6764  012A8C  0E00               	movlw	0
  6765  012A8E  6F9D               	movwf	?___ftmul& (0+255),b
  6766  012A90  0E00               	movlw	0
  6767  012A92  6F9E               	movwf	(?___ftmul+1)& (0+255),b
  6768  012A94  0E00               	movlw	0
  6769  012A96  6F9F               	movwf	(?___ftmul+2)& (0+255),b
  6770                           
  6771                           ; BSR set to: 0
  6772  012A98  0012               	return	
  6773  012A9A                     l1256:
  6774                           
  6775                           ; BSR set to: 0
  6776                           
  6777                           ; BSR set to: 0
  6778  012A9A  C0A2  F0A3         	movff	___ftmul@f2+2,??___ftmul
  6779  012A9E  6BA4               	clrf	(??___ftmul+1)& (0+255),b
  6780  012AA0  6BA5               	clrf	(??___ftmul+2)& (0+255),b
  6781  012AA2  35A1               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  6782  012AA4  37A3               	rlcf	??___ftmul& (0+255),f,b
  6783  012AA6  E301               	bnc	u6341
  6784  012AA8  81A4               	bsf	(??___ftmul+1)& (0+255),0,b
  6785  012AAA                     u6341:
  6786  012AAA  51A3               	movf	??___ftmul& (0+255),w,b
  6787  012AAC  6FAB               	movwf	___ftmul@sign& (0+255),b
  6788  012AAE  51AB               	movf	___ftmul@sign& (0+255),w,b
  6789  012AB0  A4D8               	btfss	status,2,c
  6790  012AB2  D007               	goto	l1258
  6791                           
  6792                           ; BSR set to: 0
  6793  012AB4  0E00               	movlw	0
  6794  012AB6  6F9D               	movwf	?___ftmul& (0+255),b
  6795  012AB8  0E00               	movlw	0
  6796  012ABA  6F9E               	movwf	(?___ftmul+1)& (0+255),b
  6797  012ABC  0E00               	movlw	0
  6798  012ABE  6F9F               	movwf	(?___ftmul+2)& (0+255),b
  6799                           
  6800                           ; BSR set to: 0
  6801  012AC0  0012               	return	
  6802  012AC2                     l1258:
  6803                           
  6804                           ; BSR set to: 0
  6805                           
  6806                           ; BSR set to: 0
  6807  012AC2  51AB               	movf	___ftmul@sign& (0+255),w,b
  6808  012AC4  0F7B               	addlw	123
  6809  012AC6  27A6               	addwf	___ftmul@exp& (0+255),f,b
  6810                           
  6811                           ; BSR set to: 0
  6812  012AC8  C09F  F0AB         	movff	___ftmul@f1+2,___ftmul@sign
  6813  012ACC  51A2               	movf	(___ftmul@f2+2)& (0+255),w,b
  6814  012ACE  1BAB               	xorwf	___ftmul@sign& (0+255),f,b
  6815  012AD0  0E80               	movlw	128
  6816  012AD2  17AB               	andwf	___ftmul@sign& (0+255),f,b
  6817                           
  6818                           ; BSR set to: 0
  6819  012AD4  8F9E               	bsf	(___ftmul@f1+1)& (0+255),7,b
  6820                           
  6821                           ; BSR set to: 0
  6822  012AD6  8FA1               	bsf	(___ftmul@f2+1)& (0+255),7,b
  6823                           
  6824                           ; BSR set to: 0
  6825  012AD8  0EFF               	movlw	255
  6826  012ADA  17A0               	andwf	___ftmul@f2& (0+255),f,b
  6827  012ADC  0EFF               	movlw	255
  6828  012ADE  17A1               	andwf	(___ftmul@f2+1)& (0+255),f,b
  6829  012AE0  0E00               	movlw	0
  6830  012AE2  17A2               	andwf	(___ftmul@f2+2)& (0+255),f,b
  6831                           
  6832                           ; BSR set to: 0
  6833  012AE4  0E00               	movlw	0
  6834  012AE6  6FA7               	movwf	___ftmul@f3_as_product& (0+255),b
  6835  012AE8  0E00               	movlw	0
  6836  012AEA  6FA8               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  6837  012AEC  0E00               	movlw	0
  6838  012AEE  6FA9               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  6839                           
  6840                           ; BSR set to: 0
  6841  012AF0  0E07               	movlw	7
  6842  012AF2  6FAA               	movwf	___ftmul@cntr& (0+255),b
  6843  012AF4                     
  6844                           ; BSR set to: 0
  6845                           
  6846                           ; BSR set to: 0
  6847  012AF4  A19D               	btfss	___ftmul@f1& (0+255),0,b
  6848  012AF6  D006               	goto	l1260
  6849                           
  6850                           ; BSR set to: 0
  6851  012AF8  51A0               	movf	___ftmul@f2& (0+255),w,b
  6852  012AFA  27A7               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6853  012AFC  51A1               	movf	(___ftmul@f2+1)& (0+255),w,b
  6854  012AFE  23A8               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6855  012B00  51A2               	movf	(___ftmul@f2+2)& (0+255),w,b
  6856  012B02  23A9               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6857  012B04                     l1260:
  6858                           
  6859                           ; BSR set to: 0
  6860                           
  6861                           ; BSR set to: 0
  6862  012B04  90D8               	bcf	status,0,c
  6863  012B06  339F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6864  012B08  339E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6865  012B0A  339D               	rrcf	___ftmul@f1& (0+255),f,b
  6866  012B0C  90D8               	bcf	status,0,c
  6867  012B0E  37A0               	rlcf	___ftmul@f2& (0+255),f,b
  6868  012B10  37A1               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  6869  012B12  37A2               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  6870                           
  6871                           ; BSR set to: 0
  6872  012B14  2FAA               	decfsz	___ftmul@cntr& (0+255),f,b
  6873  012B16  D7EE               	goto	l1259
  6874                           
  6875                           ; BSR set to: 0
  6876                           
  6877                           ; BSR set to: 0
  6878  012B18  0E09               	movlw	9
  6879  012B1A  6FAA               	movwf	___ftmul@cntr& (0+255),b
  6880  012B1C                     
  6881                           ; BSR set to: 0
  6882                           
  6883                           ; BSR set to: 0
  6884  012B1C  A19D               	btfss	___ftmul@f1& (0+255),0,b
  6885  012B1E  D006               	goto	l1263
  6886                           
  6887                           ; BSR set to: 0
  6888  012B20  51A0               	movf	___ftmul@f2& (0+255),w,b
  6889  012B22  27A7               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6890  012B24  51A1               	movf	(___ftmul@f2+1)& (0+255),w,b
  6891  012B26  23A8               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6892  012B28  51A2               	movf	(___ftmul@f2+2)& (0+255),w,b
  6893  012B2A  23A9               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6894  012B2C                     l1263:
  6895                           
  6896                           ; BSR set to: 0
  6897                           
  6898                           ; BSR set to: 0
  6899  012B2C  90D8               	bcf	status,0,c
  6900  012B2E  339F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6901  012B30  339E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6902  012B32  339D               	rrcf	___ftmul@f1& (0+255),f,b
  6903  012B34  90D8               	bcf	status,0,c
  6904  012B36  33A9               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  6905  012B38  33A8               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  6906  012B3A  33A7               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  6907                           
  6908                           ; BSR set to: 0
  6909  012B3C  2FAA               	decfsz	___ftmul@cntr& (0+255),f,b
  6910  012B3E  D7EE               	goto	l1262
  6911                           
  6912                           ; BSR set to: 0
  6913                           
  6914                           ; BSR set to: 0
  6915  012B40  C0A7  F089         	movff	___ftmul@f3_as_product,___ftpack@arg
  6916  012B44  C0A8  F08A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6917  012B48  C0A9  F08B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6918  012B4C  C0A6  F08C         	movff	___ftmul@exp,___ftpack@exp
  6919  012B50  C0AB  F08D         	movff	___ftmul@sign,___ftpack@sign
  6920  012B54  EC07  F097         	call	___ftpack	;wreg free
  6921  012B58  C089  F09D         	movff	?___ftpack,?___ftmul
  6922  012B5C  C08A  F09E         	movff	?___ftpack+1,?___ftmul+1
  6923  012B60  C08B  F09F         	movff	?___ftpack+2,?___ftmul+2
  6924  012B64  0012               	return	
  6925  012B66                     __end_of___ftmul:
  6926                           	opt stack 0
  6927                           tblptru	equ	0xFF8
  6928                           tblptrh	equ	0xFF7
  6929                           tblptrl	equ	0xFF6
  6930                           tablat	equ	0xFF5
  6931                           prodh	equ	0xFF4
  6932                           prodl	equ	0xFF3
  6933                           intcon	equ	0xFF2
  6934                           postinc0	equ	0xFEE
  6935                           wreg	equ	0xFE8
  6936                           indf2	equ	0xFDF
  6937                           postinc2	equ	0xFDE
  6938                           postdec2	equ	0xFDD
  6939                           fsr2h	equ	0xFDA
  6940                           fsr2l	equ	0xFD9
  6941                           status	equ	0xFD8
  6942                           
  6943 ;; *************** function ___awmod *****************
  6944 ;; Defined at:
  6945 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;  dividend        2   41[BANK0 ] int 
  6948 ;;  divisor         2   43[BANK0 ] int 
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;  sign            1   46[BANK0 ] unsigned char 
  6951 ;;  counter         1   45[BANK0 ] unsigned char 
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  2   41[BANK0 ] int 
  6954 ;; Registers used:
  6955 ;;		wreg, status,2, status,0
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6961 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6962 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6964 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6965 ;;Total ram usage:        6 bytes
  6966 ;; Hardware stack levels used:    1
  6967 ;; Hardware stack levels required when called:   10
  6968 ;; This function calls:
  6969 ;;		Nothing
  6970 ;; This function is called by:
  6971 ;;		_fround
  6972 ;;		_scale
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text19
  6977  013478                     __ptext19:
  6978                           	opt stack 0
  6979  013478                     ___awmod:
  6980                           	opt stack 16
  6981                           
  6982                           ;incstack = 0
  6983  013478  0E00               	movlw	0
  6984  01347A  0100               	movlb	0	; () banked
  6985  01347C  6F8E               	movwf	___awmod@sign& (0+255),b
  6986                           
  6987                           ; BSR set to: 0
  6988  01347E  AF8A               	btfss	(___awmod@dividend+1)& (0+255),7,b
  6989  013480  D006               	goto	l1109
  6990                           
  6991                           ; BSR set to: 0
  6992  013482  6D89               	negf	___awmod@dividend& (0+255),b
  6993  013484  1F8A               	comf	(___awmod@dividend+1)& (0+255),f,b
  6994  013486  B0D8               	btfsc	status,0,c
  6995  013488  2B8A               	incf	(___awmod@dividend+1)& (0+255),f,b
  6996                           
  6997                           ; BSR set to: 0
  6998  01348A  0E01               	movlw	1
  6999  01348C  6F8E               	movwf	___awmod@sign& (0+255),b
  7000  01348E                     l1109:
  7001                           
  7002                           ; BSR set to: 0
  7003                           
  7004                           ; BSR set to: 0
  7005  01348E  AF8C               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7006  013490  D004               	goto	l1110
  7007                           
  7008                           ; BSR set to: 0
  7009  013492  6D8B               	negf	___awmod@divisor& (0+255),b
  7010  013494  1F8C               	comf	(___awmod@divisor+1)& (0+255),f,b
  7011  013496  B0D8               	btfsc	status,0,c
  7012  013498  2B8C               	incf	(___awmod@divisor+1)& (0+255),f,b
  7013  01349A                     l1110:
  7014                           
  7015                           ; BSR set to: 0
  7016                           
  7017                           ; BSR set to: 0
  7018  01349A  518B               	movf	___awmod@divisor& (0+255),w,b
  7019  01349C  118C               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7020  01349E  B4D8               	btfsc	status,2,c
  7021  0134A0  D018               	goto	l1117
  7022                           
  7023                           ; BSR set to: 0
  7024  0134A2  0E01               	movlw	1
  7025  0134A4  6F8D               	movwf	___awmod@counter& (0+255),b
  7026  0134A6  D004               	goto	l1112
  7027  0134A8                     
  7028                           ; BSR set to: 0
  7029                           
  7030                           ; BSR set to: 0
  7031  0134A8  90D8               	bcf	status,0,c
  7032  0134AA  378B               	rlcf	___awmod@divisor& (0+255),f,b
  7033  0134AC  378C               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7034  0134AE  2B8D               	incf	___awmod@counter& (0+255),f,b
  7035  0134B0                     l1112:
  7036                           
  7037                           ; BSR set to: 0
  7038                           
  7039                           ; BSR set to: 0
  7040  0134B0  AF8C               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7041  0134B2  D7FA               	goto	l1113
  7042  0134B4                     u6470:
  7043                           
  7044                           ; BSR set to: 0
  7045                           
  7046                           ; BSR set to: 0
  7047                           
  7048                           ; BSR set to: 0
  7049  0134B4  518B               	movf	___awmod@divisor& (0+255),w,b
  7050  0134B6  5D89               	subwf	___awmod@dividend& (0+255),w,b
  7051  0134B8  518C               	movf	(___awmod@divisor+1)& (0+255),w,b
  7052  0134BA  598A               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7053  0134BC  A0D8               	btfss	status,0,c
  7054  0134BE  D004               	goto	l1116
  7055                           
  7056                           ; BSR set to: 0
  7057  0134C0  518B               	movf	___awmod@divisor& (0+255),w,b
  7058  0134C2  5F89               	subwf	___awmod@dividend& (0+255),f,b
  7059  0134C4  518C               	movf	(___awmod@divisor+1)& (0+255),w,b
  7060  0134C6  5B8A               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7061  0134C8                     l1116:
  7062                           
  7063                           ; BSR set to: 0
  7064                           
  7065                           ; BSR set to: 0
  7066  0134C8  90D8               	bcf	status,0,c
  7067  0134CA  338C               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7068  0134CC  338B               	rrcf	___awmod@divisor& (0+255),f,b
  7069                           
  7070                           ; BSR set to: 0
  7071  0134CE  2F8D               	decfsz	___awmod@counter& (0+255),f,b
  7072  0134D0  D7F1               	goto	u6470
  7073  0134D2                     l1117:
  7074                           
  7075                           ; BSR set to: 0
  7076                           
  7077                           ; BSR set to: 0
  7078                           
  7079                           ; BSR set to: 0
  7080  0134D2  518E               	movf	___awmod@sign& (0+255),w,b
  7081  0134D4  B4D8               	btfsc	status,2,c
  7082  0134D6  D004               	goto	l1118
  7083                           
  7084                           ; BSR set to: 0
  7085  0134D8  6D89               	negf	___awmod@dividend& (0+255),b
  7086  0134DA  1F8A               	comf	(___awmod@dividend+1)& (0+255),f,b
  7087  0134DC  B0D8               	btfsc	status,0,c
  7088  0134DE  2B8A               	incf	(___awmod@dividend+1)& (0+255),f,b
  7089  0134E0                     l1118:
  7090                           
  7091                           ; BSR set to: 0
  7092                           
  7093                           ; BSR set to: 0
  7094  0134E0  C089  F089         	movff	___awmod@dividend,?___awmod
  7095  0134E4  C08A  F08A         	movff	___awmod@dividend+1,?___awmod+1
  7096  0134E8  0012               	return	
  7097  0134EA                     __end_of___awmod:
  7098                           	opt stack 0
  7099                           tblptru	equ	0xFF8
  7100                           tblptrh	equ	0xFF7
  7101                           tblptrl	equ	0xFF6
  7102                           tablat	equ	0xFF5
  7103                           prodh	equ	0xFF4
  7104                           prodl	equ	0xFF3
  7105                           intcon	equ	0xFF2
  7106                           postinc0	equ	0xFEE
  7107                           wreg	equ	0xFE8
  7108                           indf2	equ	0xFDF
  7109                           postinc2	equ	0xFDE
  7110                           postdec2	equ	0xFDD
  7111                           fsr2h	equ	0xFDA
  7112                           fsr2l	equ	0xFD9
  7113                           status	equ	0xFD8
  7114                           
  7115 ;; *************** function ___awdiv *****************
  7116 ;; Defined at:
  7117 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;  dividend        2   47[BANK0 ] int 
  7120 ;;  divisor         2   49[BANK0 ] int 
  7121 ;; Auto vars:     Size  Location     Type
  7122 ;;  quotient        2   53[BANK0 ] int 
  7123 ;;  sign            1   52[BANK0 ] unsigned char 
  7124 ;;  counter         1   51[BANK0 ] unsigned char 
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  2   47[BANK0 ] int 
  7127 ;; Registers used:
  7128 ;;		wreg, status,2, status,0
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7134 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7135 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7137 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7138 ;;Total ram usage:        8 bytes
  7139 ;; Hardware stack levels used:    1
  7140 ;; Hardware stack levels required when called:   10
  7141 ;; This function calls:
  7142 ;;		Nothing
  7143 ;; This function is called by:
  7144 ;;		_fround
  7145 ;;		_scale
  7146 ;;		_printf
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           	psect	text20
  7151  013268                     __ptext20:
  7152                           	opt stack 0
  7153  013268                     ___awdiv:
  7154                           	opt stack 16
  7155                           
  7156                           ; BSR set to: 0
  7157                           ;incstack = 0
  7158  013268  0E00               	movlw	0
  7159  01326A  0100               	movlb	0	; () banked
  7160  01326C  6F94               	movwf	___awdiv@sign& (0+255),b
  7161                           
  7162                           ; BSR set to: 0
  7163  01326E  AF92               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7164  013270  D006               	goto	l1096
  7165                           
  7166                           ; BSR set to: 0
  7167  013272  6D91               	negf	___awdiv@divisor& (0+255),b
  7168  013274  1F92               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7169  013276  B0D8               	btfsc	status,0,c
  7170  013278  2B92               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7171                           
  7172                           ; BSR set to: 0
  7173  01327A  0E01               	movlw	1
  7174  01327C  6F94               	movwf	___awdiv@sign& (0+255),b
  7175  01327E                     l1096:
  7176                           
  7177                           ; BSR set to: 0
  7178                           
  7179                           ; BSR set to: 0
  7180  01327E  AF90               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7181  013280  D006               	goto	l1097
  7182                           
  7183                           ; BSR set to: 0
  7184  013282  6D8F               	negf	___awdiv@dividend& (0+255),b
  7185  013284  1F90               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7186  013286  B0D8               	btfsc	status,0,c
  7187  013288  2B90               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7188                           
  7189                           ; BSR set to: 0
  7190  01328A  0E01               	movlw	1
  7191  01328C  1B94               	xorwf	___awdiv@sign& (0+255),f,b
  7192  01328E                     l1097:
  7193                           
  7194                           ; BSR set to: 0
  7195                           
  7196                           ; BSR set to: 0
  7197  01328E  0E00               	movlw	0
  7198  013290  6F96               	movwf	(___awdiv@quotient+1)& (0+255),b
  7199  013292  0E00               	movlw	0
  7200  013294  6F95               	movwf	___awdiv@quotient& (0+255),b
  7201                           
  7202                           ; BSR set to: 0
  7203  013296  5191               	movf	___awdiv@divisor& (0+255),w,b
  7204  013298  1192               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7205  01329A  B4D8               	btfsc	status,2,c
  7206  01329C  D01C               	goto	l1104
  7207                           
  7208                           ; BSR set to: 0
  7209  01329E  0E01               	movlw	1
  7210  0132A0  6F93               	movwf	___awdiv@counter& (0+255),b
  7211  0132A2  D004               	goto	l1099
  7212  0132A4                     
  7213                           ; BSR set to: 0
  7214                           
  7215                           ; BSR set to: 0
  7216  0132A4  90D8               	bcf	status,0,c
  7217  0132A6  3791               	rlcf	___awdiv@divisor& (0+255),f,b
  7218  0132A8  3792               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7219  0132AA  2B93               	incf	___awdiv@counter& (0+255),f,b
  7220  0132AC                     l1099:
  7221                           
  7222                           ; BSR set to: 0
  7223                           
  7224                           ; BSR set to: 0
  7225  0132AC  AF92               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7226  0132AE  D7FA               	goto	l1100
  7227  0132B0                     u6410:
  7228                           
  7229                           ; BSR set to: 0
  7230                           
  7231                           ; BSR set to: 0
  7232                           
  7233                           ; BSR set to: 0
  7234  0132B0  90D8               	bcf	status,0,c
  7235  0132B2  3795               	rlcf	___awdiv@quotient& (0+255),f,b
  7236  0132B4  3796               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7237                           
  7238                           ; BSR set to: 0
  7239  0132B6  5191               	movf	___awdiv@divisor& (0+255),w,b
  7240  0132B8  5D8F               	subwf	___awdiv@dividend& (0+255),w,b
  7241  0132BA  5192               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7242  0132BC  5990               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7243  0132BE  A0D8               	btfss	status,0,c
  7244  0132C0  D005               	goto	l1103
  7245                           
  7246                           ; BSR set to: 0
  7247  0132C2  5191               	movf	___awdiv@divisor& (0+255),w,b
  7248  0132C4  5F8F               	subwf	___awdiv@dividend& (0+255),f,b
  7249  0132C6  5192               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7250  0132C8  5B90               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7251                           
  7252                           ; BSR set to: 0
  7253  0132CA  8195               	bsf	___awdiv@quotient& (0+255),0,b
  7254  0132CC                     l1103:
  7255                           
  7256                           ; BSR set to: 0
  7257                           
  7258                           ; BSR set to: 0
  7259  0132CC  90D8               	bcf	status,0,c
  7260  0132CE  3392               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7261  0132D0  3391               	rrcf	___awdiv@divisor& (0+255),f,b
  7262                           
  7263                           ; BSR set to: 0
  7264  0132D2  2F93               	decfsz	___awdiv@counter& (0+255),f,b
  7265  0132D4  D7ED               	goto	u6410
  7266  0132D6                     l1104:
  7267                           
  7268                           ; BSR set to: 0
  7269                           
  7270                           ; BSR set to: 0
  7271                           
  7272                           ; BSR set to: 0
  7273  0132D6  5194               	movf	___awdiv@sign& (0+255),w,b
  7274  0132D8  B4D8               	btfsc	status,2,c
  7275  0132DA  D004               	goto	l1105
  7276                           
  7277                           ; BSR set to: 0
  7278  0132DC  6D95               	negf	___awdiv@quotient& (0+255),b
  7279  0132DE  1F96               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7280  0132E0  B0D8               	btfsc	status,0,c
  7281  0132E2  2B96               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7282  0132E4                     l1105:
  7283                           
  7284                           ; BSR set to: 0
  7285                           
  7286                           ; BSR set to: 0
  7287  0132E4  C095  F08F         	movff	___awdiv@quotient,?___awdiv
  7288  0132E8  C096  F090         	movff	___awdiv@quotient+1,?___awdiv+1
  7289  0132EC  0012               	return	
  7290  0132EE                     __end_of___awdiv:
  7291                           	opt stack 0
  7292                           tblptru	equ	0xFF8
  7293                           tblptrh	equ	0xFF7
  7294                           tblptrl	equ	0xFF6
  7295                           tablat	equ	0xFF5
  7296                           prodh	equ	0xFF4
  7297                           prodl	equ	0xFF3
  7298                           intcon	equ	0xFF2
  7299                           postinc0	equ	0xFEE
  7300                           wreg	equ	0xFE8
  7301                           indf2	equ	0xFDF
  7302                           postinc2	equ	0xFDE
  7303                           postdec2	equ	0xFDD
  7304                           fsr2h	equ	0xFDA
  7305                           fsr2l	equ	0xFD9
  7306                           status	equ	0xFD8
  7307                           
  7308 ;; *************** function __tdiv_to_l_ *****************
  7309 ;; Defined at:
  7310 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;  f1              3   41[BANK0 ] float 
  7313 ;;  f2              3   44[BANK0 ] float 
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;  quot            4   50[BANK0 ] unsigned long 
  7316 ;;  exp1            1   55[BANK0 ] unsigned char 
  7317 ;;  cntr            1   54[BANK0 ] unsigned char 
  7318 ;; Return value:  Size  Location     Type
  7319 ;;                  4   41[BANK0 ] unsigned long 
  7320 ;; Registers used:
  7321 ;;		wreg, status,2, status,0
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7327 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7328 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7329 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7330 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7331 ;;Total ram usage:       15 bytes
  7332 ;; Hardware stack levels used:    1
  7333 ;; Hardware stack levels required when called:   10
  7334 ;; This function calls:
  7335 ;;		Nothing
  7336 ;; This function is called by:
  7337 ;;		_printf
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           	psect	text21
  7342  0124A2                     __ptext21:
  7343                           	opt stack 0
  7344  0124A2                     __tdiv_to_l_:
  7345                           	opt stack 17
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;incstack = 0
  7349  0124A2  C08B  F08F         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  7350  0124A6  0100               	movlb	0	; () banked
  7351  0124A8  6B90               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7352  0124AA  6B91               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7353  0124AC  358A               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7354  0124AE  378F               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7355  0124B0  E301               	bnc	u6571
  7356  0124B2  8190               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7357  0124B4                     u6571:
  7358  0124B4  518F               	movf	??__tdiv_to_l_& (0+255),w,b
  7359  0124B6  6F97               	movwf	__tdiv_to_l_@exp1& (0+255),b
  7360  0124B8  5197               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7361  0124BA  A4D8               	btfss	status,2,c
  7362  0124BC  D009               	goto	l1232
  7363                           
  7364                           ; BSR set to: 0
  7365  0124BE  0E00               	movlw	0
  7366  0124C0  6F89               	movwf	?__tdiv_to_l_& (0+255),b
  7367  0124C2  0E00               	movlw	0
  7368  0124C4  6F8A               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7369  0124C6  0E00               	movlw	0
  7370  0124C8  6F8B               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7371  0124CA  0E00               	movlw	0
  7372  0124CC  6F8C               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7373                           
  7374                           ; BSR set to: 0
  7375  0124CE  0012               	return	
  7376  0124D0                     l1232:
  7377                           
  7378                           ; BSR set to: 0
  7379                           
  7380                           ; BSR set to: 0
  7381  0124D0  C08E  F08F         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7382  0124D4  6B90               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  7383  0124D6  6B91               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  7384  0124D8  358D               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7385  0124DA  378F               	rlcf	??__tdiv_to_l_& (0+255),f,b
  7386  0124DC  E301               	bnc	u6591
  7387  0124DE  8190               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  7388  0124E0                     u6591:
  7389  0124E0  518F               	movf	??__tdiv_to_l_& (0+255),w,b
  7390  0124E2  6F96               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7391  0124E4  5196               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7392  0124E6  A4D8               	btfss	status,2,c
  7393  0124E8  D009               	goto	l1234
  7394                           
  7395                           ; BSR set to: 0
  7396  0124EA  0E00               	movlw	0
  7397  0124EC  6F89               	movwf	?__tdiv_to_l_& (0+255),b
  7398  0124EE  0E00               	movlw	0
  7399  0124F0  6F8A               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7400  0124F2  0E00               	movlw	0
  7401  0124F4  6F8B               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7402  0124F6  0E00               	movlw	0
  7403  0124F8  6F8C               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7404                           
  7405                           ; BSR set to: 0
  7406  0124FA  0012               	return	
  7407  0124FC                     l1234:
  7408                           
  7409                           ; BSR set to: 0
  7410                           
  7411                           ; BSR set to: 0
  7412  0124FC  8F8A               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  7413                           
  7414                           ; BSR set to: 0
  7415  0124FE  0EFF               	movlw	255
  7416  012500  1789               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  7417  012502  0EFF               	movlw	255
  7418  012504  178A               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7419  012506  0E00               	movlw	0
  7420  012508  178B               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7421  01250A  8F8D               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  7422                           
  7423                           ; BSR set to: 0
  7424  01250C  0EFF               	movlw	255
  7425  01250E  178C               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  7426  012510  0EFF               	movlw	255
  7427  012512  178D               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  7428  012514  0E00               	movlw	0
  7429  012516  178E               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  7430                           
  7431                           ; BSR set to: 0
  7432  012518  0E00               	movlw	0
  7433  01251A  6F92               	movwf	__tdiv_to_l_@quot& (0+255),b
  7434  01251C  0E00               	movlw	0
  7435  01251E  6F93               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  7436  012520  0E00               	movlw	0
  7437  012522  6F94               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  7438  012524  0E00               	movlw	0
  7439  012526  6F95               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  7440                           
  7441                           ; BSR set to: 0
  7442  012528  0E7F               	movlw	127
  7443  01252A  5F97               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7444                           
  7445                           ; BSR set to: 0
  7446  01252C  5196               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  7447  01252E  0F98               	addlw	152
  7448  012530  5F97               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  7449                           
  7450                           ; BSR set to: 0
  7451  012532  0E18               	movlw	24
  7452  012534  6F96               	movwf	__tdiv_to_l_@cntr& (0+255),b
  7453  012536                     l1235:
  7454                           
  7455                           ; BSR set to: 0
  7456  012536  90D8               	bcf	status,0,c
  7457  012538  3792               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7458  01253A  3793               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7459  01253C  3794               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7460  01253E  3795               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7461                           
  7462                           ; BSR set to: 0
  7463  012540  518C               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7464  012542  5D89               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  7465  012544  518D               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7466  012546  598A               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  7467  012548  518E               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7468  01254A  598B               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  7469  01254C  A0D8               	btfss	status,0,c
  7470  01254E  D007               	goto	l1236
  7471                           
  7472                           ; BSR set to: 0
  7473  012550  518C               	movf	__tdiv_to_l_@f2& (0+255),w,b
  7474  012552  5F89               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  7475  012554  518D               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  7476  012556  5B8A               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7477  012558  518E               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  7478  01255A  5B8B               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7479                           
  7480                           ; BSR set to: 0
  7481  01255C  8192               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  7482  01255E                     l1236:
  7483                           
  7484                           ; BSR set to: 0
  7485  01255E  90D8               	bcf	status,0,c
  7486  012560  3789               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  7487  012562  378A               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  7488  012564  378B               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  7489                           
  7490                           ; BSR set to: 0
  7491  012566  2F96               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  7492  012568  D7E6               	goto	l1235
  7493                           
  7494                           ; BSR set to: 0
  7495                           
  7496                           ; BSR set to: 0
  7497  01256A  AF97               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  7498  01256C  D016               	goto	l1238
  7499                           
  7500                           ; BSR set to: 0
  7501  01256E  5197               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7502  012570  0A80               	xorlw	128
  7503  012572  0F97               	addlw	151
  7504  012574  B0D8               	btfsc	status,0,c
  7505  012576  D009               	goto	l1239
  7506                           
  7507                           ; BSR set to: 0
  7508  012578  0E00               	movlw	0
  7509  01257A  6F89               	movwf	?__tdiv_to_l_& (0+255),b
  7510  01257C  0E00               	movlw	0
  7511  01257E  6F8A               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7512  012580  0E00               	movlw	0
  7513  012582  6F8B               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7514  012584  0E00               	movlw	0
  7515  012586  6F8C               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7516                           
  7517                           ; BSR set to: 0
  7518  012588  0012               	return	
  7519  01258A                     l1239:
  7520                           
  7521                           ; BSR set to: 0
  7522                           
  7523                           ; BSR set to: 0
  7524                           
  7525                           ; BSR set to: 0
  7526  01258A  90D8               	bcf	status,0,c
  7527  01258C  3395               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7528  01258E  3394               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7529  012590  3393               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7530  012592  3392               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  7531                           
  7532                           ; BSR set to: 0
  7533  012594  3F97               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  7534  012596  D7F9               	goto	l1239
  7535                           
  7536                           ; BSR set to: 0
  7537  012598  D015               	goto	u6650
  7538  01259A                     l1238:
  7539                           
  7540                           ; BSR set to: 0
  7541                           
  7542                           ; BSR set to: 0
  7543  01259A  0E17               	movlw	23
  7544  01259C  6597               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  7545  01259E  D00F               	goto	l1244
  7546                           
  7547                           ; BSR set to: 0
  7548  0125A0  0E00               	movlw	0
  7549  0125A2  6F89               	movwf	?__tdiv_to_l_& (0+255),b
  7550  0125A4  0E00               	movlw	0
  7551  0125A6  6F8A               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  7552  0125A8  0E00               	movlw	0
  7553  0125AA  6F8B               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  7554  0125AC  0E00               	movlw	0
  7555  0125AE  6F8C               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  7556                           
  7557                           ; BSR set to: 0
  7558  0125B0  0012               	return	
  7559  0125B2                     
  7560                           ; BSR set to: 0
  7561                           
  7562                           ; BSR set to: 0
  7563  0125B2  90D8               	bcf	status,0,c
  7564  0125B4  3792               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  7565  0125B6  3793               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  7566  0125B8  3794               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  7567  0125BA  3795               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  7568  0125BC  0797               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  7569  0125BE                     l1244:
  7570                           
  7571                           ; BSR set to: 0
  7572                           
  7573                           ; BSR set to: 0
  7574  0125BE  5197               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  7575  0125C0  A4D8               	btfss	status,2,c
  7576  0125C2  D7F7               	goto	l1245
  7577  0125C4                     u6650:
  7578                           
  7579                           ; BSR set to: 0
  7580                           
  7581                           ; BSR set to: 0
  7582  0125C4  C092  F089         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7583  0125C8  C093  F08A         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7584  0125CC  C094  F08B         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7585  0125D0  C095  F08C         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7586                           
  7587                           ; BSR set to: 0
  7588  0125D4  0012               	return		;funcret
  7589  0125D6                     __end_of__tdiv_to_l_:
  7590                           	opt stack 0
  7591                           tblptru	equ	0xFF8
  7592                           tblptrh	equ	0xFF7
  7593                           tblptrl	equ	0xFF6
  7594                           tablat	equ	0xFF5
  7595                           prodh	equ	0xFF4
  7596                           prodl	equ	0xFF3
  7597                           intcon	equ	0xFF2
  7598                           postinc0	equ	0xFEE
  7599                           wreg	equ	0xFE8
  7600                           indf2	equ	0xFDF
  7601                           postinc2	equ	0xFDE
  7602                           postdec2	equ	0xFDD
  7603                           fsr2h	equ	0xFDA
  7604                           fsr2l	equ	0xFD9
  7605                           status	equ	0xFD8
  7606                           
  7607 ;; *************** function __div_to_l_ *****************
  7608 ;; Defined at:
  7609 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;  f1              3   41[BANK0 ] unsigned long 
  7612 ;;  f2              3   44[BANK0 ] unsigned long 
  7613 ;; Auto vars:     Size  Location     Type
  7614 ;;  quot            4   47[BANK0 ] unsigned long 
  7615 ;;  exp1            1   52[BANK0 ] unsigned char 
  7616 ;;  cntr            1   51[BANK0 ] unsigned char 
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  4   41[BANK0 ] unsigned long 
  7619 ;; Registers used:
  7620 ;;		wreg, status,2, status,0
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7626 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7627 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7629 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7630 ;;Total ram usage:       12 bytes
  7631 ;; Hardware stack levels used:    1
  7632 ;; Hardware stack levels required when called:   10
  7633 ;; This function calls:
  7634 ;;		Nothing
  7635 ;; This function is called by:
  7636 ;;		_printf
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           	psect	text22
  7641  012708                     __ptext22:
  7642                           	opt stack 0
  7643  012708                     __div_to_l_:
  7644                           	opt stack 17
  7645                           
  7646                           ; BSR set to: 0
  7647                           ;incstack = 0
  7648  012708  0100               	movlb	0	; () banked
  7649  01270A  358B               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  7650  01270C  358C               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  7651  01270E  6F94               	movwf	__div_to_l_@exp1& (0+255),b
  7652  012710  5194               	movf	__div_to_l_@exp1& (0+255),w,b
  7653  012712  A4D8               	btfss	status,2,c
  7654  012714  D009               	goto	l1128
  7655                           
  7656                           ; BSR set to: 0
  7657  012716  0E00               	movlw	0
  7658  012718  6F89               	movwf	?__div_to_l_& (0+255),b
  7659  01271A  0E00               	movlw	0
  7660  01271C  6F8A               	movwf	(?__div_to_l_+1)& (0+255),b
  7661  01271E  0E00               	movlw	0
  7662  012720  6F8B               	movwf	(?__div_to_l_+2)& (0+255),b
  7663  012722  0E00               	movlw	0
  7664  012724  6F8C               	movwf	(?__div_to_l_+3)& (0+255),b
  7665                           
  7666                           ; BSR set to: 0
  7667  012726  0012               	return	
  7668  012728                     l1128:
  7669                           
  7670                           ; BSR set to: 0
  7671                           
  7672                           ; BSR set to: 0
  7673  012728  358E               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  7674  01272A  358F               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  7675  01272C  6F93               	movwf	__div_to_l_@cntr& (0+255),b
  7676  01272E  5193               	movf	__div_to_l_@cntr& (0+255),w,b
  7677  012730  A4D8               	btfss	status,2,c
  7678  012732  D009               	goto	l1130
  7679                           
  7680                           ; BSR set to: 0
  7681  012734  0E00               	movlw	0
  7682  012736  6F89               	movwf	?__div_to_l_& (0+255),b
  7683  012738  0E00               	movlw	0
  7684  01273A  6F8A               	movwf	(?__div_to_l_+1)& (0+255),b
  7685  01273C  0E00               	movlw	0
  7686  01273E  6F8B               	movwf	(?__div_to_l_+2)& (0+255),b
  7687  012740  0E00               	movlw	0
  7688  012742  6F8C               	movwf	(?__div_to_l_+3)& (0+255),b
  7689                           
  7690                           ; BSR set to: 0
  7691  012744  0012               	return	
  7692  012746                     l1130:
  7693                           
  7694                           ; BSR set to: 0
  7695                           
  7696                           ; BSR set to: 0
  7697  012746  8F8B               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  7698                           
  7699                           ; BSR set to: 0
  7700  012748  0EFF               	movlw	255
  7701  01274A  1789               	andwf	__div_to_l_@f1& (0+255),f,b
  7702  01274C  0EFF               	movlw	255
  7703  01274E  178A               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  7704  012750  0EFF               	movlw	255
  7705  012752  178B               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  7706  012754  0E00               	movlw	0
  7707  012756  178C               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  7708                           
  7709                           ; BSR set to: 0
  7710  012758  8F8E               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  7711  01275A  0EFF               	movlw	255
  7712  01275C  178C               	andwf	__div_to_l_@f2& (0+255),f,b
  7713  01275E  0EFF               	movlw	255
  7714  012760  178D               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  7715  012762  0EFF               	movlw	255
  7716  012764  178E               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  7717  012766  0E00               	movlw	0
  7718  012768  178F               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  7719                           
  7720                           ; BSR set to: 0
  7721  01276A  0E00               	movlw	0
  7722  01276C  6F8F               	movwf	__div_to_l_@quot& (0+255),b
  7723  01276E  0E00               	movlw	0
  7724  012770  6F90               	movwf	(__div_to_l_@quot+1)& (0+255),b
  7725  012772  0E00               	movlw	0
  7726  012774  6F91               	movwf	(__div_to_l_@quot+2)& (0+255),b
  7727  012776  0E00               	movlw	0
  7728  012778  6F92               	movwf	(__div_to_l_@quot+3)& (0+255),b
  7729                           
  7730                           ; BSR set to: 0
  7731  01277A  0E7F               	movlw	127
  7732  01277C  5F94               	subwf	__div_to_l_@exp1& (0+255),f,b
  7733                           
  7734                           ; BSR set to: 0
  7735  01277E  5193               	movf	__div_to_l_@cntr& (0+255),w,b
  7736  012780  0FA0               	addlw	160
  7737  012782  5F94               	subwf	__div_to_l_@exp1& (0+255),f,b
  7738                           
  7739                           ; BSR set to: 0
  7740  012784  0E20               	movlw	32
  7741  012786  6F93               	movwf	__div_to_l_@cntr& (0+255),b
  7742  012788                     
  7743                           ; BSR set to: 0
  7744                           
  7745                           ; BSR set to: 0
  7746  012788  90D8               	bcf	status,0,c
  7747  01278A  378F               	rlcf	__div_to_l_@quot& (0+255),f,b
  7748  01278C  3790               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7749  01278E  3791               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7750  012790  3792               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7751                           
  7752                           ; BSR set to: 0
  7753  012792  518C               	movf	__div_to_l_@f2& (0+255),w,b
  7754  012794  5D89               	subwf	__div_to_l_@f1& (0+255),w,b
  7755  012796  518D               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7756  012798  598A               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  7757  01279A  518E               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7758  01279C  598B               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  7759  01279E  518F               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7760  0127A0  598C               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  7761  0127A2  A0D8               	btfss	status,0,c
  7762  0127A4  D009               	goto	l1132
  7763                           
  7764                           ; BSR set to: 0
  7765  0127A6  518C               	movf	__div_to_l_@f2& (0+255),w,b
  7766  0127A8  5F89               	subwf	__div_to_l_@f1& (0+255),f,b
  7767  0127AA  518D               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  7768  0127AC  5B8A               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  7769  0127AE  518E               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  7770  0127B0  5B8B               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  7771  0127B2  518F               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  7772  0127B4  5B8C               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  7773                           
  7774                           ; BSR set to: 0
  7775  0127B6  818F               	bsf	__div_to_l_@quot& (0+255),0,b
  7776  0127B8                     l1132:
  7777                           
  7778                           ; BSR set to: 0
  7779                           
  7780                           ; BSR set to: 0
  7781  0127B8  90D8               	bcf	status,0,c
  7782  0127BA  3789               	rlcf	__div_to_l_@f1& (0+255),f,b
  7783  0127BC  378A               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  7784  0127BE  378B               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  7785  0127C0  378C               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  7786                           
  7787                           ; BSR set to: 0
  7788  0127C2  2F93               	decfsz	__div_to_l_@cntr& (0+255),f,b
  7789  0127C4  D7E1               	goto	l1131
  7790                           
  7791                           ; BSR set to: 0
  7792                           
  7793                           ; BSR set to: 0
  7794  0127C6  AF94               	btfss	__div_to_l_@exp1& (0+255),7,b
  7795  0127C8  D016               	goto	l1134
  7796                           
  7797                           ; BSR set to: 0
  7798  0127CA  5194               	movf	__div_to_l_@exp1& (0+255),w,b
  7799  0127CC  0A80               	xorlw	128
  7800  0127CE  0F9F               	addlw	159
  7801  0127D0  B0D8               	btfsc	status,0,c
  7802  0127D2  D009               	goto	l1135
  7803                           
  7804                           ; BSR set to: 0
  7805  0127D4  0E00               	movlw	0
  7806  0127D6  6F89               	movwf	?__div_to_l_& (0+255),b
  7807  0127D8  0E00               	movlw	0
  7808  0127DA  6F8A               	movwf	(?__div_to_l_+1)& (0+255),b
  7809  0127DC  0E00               	movlw	0
  7810  0127DE  6F8B               	movwf	(?__div_to_l_+2)& (0+255),b
  7811  0127E0  0E00               	movlw	0
  7812  0127E2  6F8C               	movwf	(?__div_to_l_+3)& (0+255),b
  7813                           
  7814                           ; BSR set to: 0
  7815  0127E4  0012               	return	
  7816  0127E6                     l1135:
  7817                           
  7818                           ; BSR set to: 0
  7819                           
  7820                           ; BSR set to: 0
  7821                           
  7822                           ; BSR set to: 0
  7823  0127E6  90D8               	bcf	status,0,c
  7824  0127E8  3392               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  7825  0127EA  3391               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  7826  0127EC  3390               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  7827  0127EE  338F               	rrcf	__div_to_l_@quot& (0+255),f,b
  7828                           
  7829                           ; BSR set to: 0
  7830  0127F0  3F94               	incfsz	__div_to_l_@exp1& (0+255),f,b
  7831  0127F2  D7F9               	goto	l1135
  7832                           
  7833                           ; BSR set to: 0
  7834  0127F4  D015               	goto	u6720
  7835  0127F6                     l1134:
  7836                           
  7837                           ; BSR set to: 0
  7838                           
  7839                           ; BSR set to: 0
  7840  0127F6  0E1F               	movlw	31
  7841  0127F8  6594               	cpfsgt	__div_to_l_@exp1& (0+255),b
  7842  0127FA  D00F               	goto	l1140
  7843                           
  7844                           ; BSR set to: 0
  7845  0127FC  0E00               	movlw	0
  7846  0127FE  6F89               	movwf	?__div_to_l_& (0+255),b
  7847  012800  0E00               	movlw	0
  7848  012802  6F8A               	movwf	(?__div_to_l_+1)& (0+255),b
  7849  012804  0E00               	movlw	0
  7850  012806  6F8B               	movwf	(?__div_to_l_+2)& (0+255),b
  7851  012808  0E00               	movlw	0
  7852  01280A  6F8C               	movwf	(?__div_to_l_+3)& (0+255),b
  7853                           
  7854                           ; BSR set to: 0
  7855  01280C  0012               	return	
  7856  01280E                     
  7857                           ; BSR set to: 0
  7858                           
  7859                           ; BSR set to: 0
  7860  01280E  90D8               	bcf	status,0,c
  7861  012810  378F               	rlcf	__div_to_l_@quot& (0+255),f,b
  7862  012812  3790               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  7863  012814  3791               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  7864  012816  3792               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  7865  012818  0794               	decf	__div_to_l_@exp1& (0+255),f,b
  7866  01281A                     l1140:
  7867                           
  7868                           ; BSR set to: 0
  7869                           
  7870                           ; BSR set to: 0
  7871  01281A  5194               	movf	__div_to_l_@exp1& (0+255),w,b
  7872  01281C  A4D8               	btfss	status,2,c
  7873  01281E  D7F7               	goto	l1141
  7874  012820                     u6720:
  7875                           
  7876                           ; BSR set to: 0
  7877                           
  7878                           ; BSR set to: 0
  7879  012820  C08F  F089         	movff	__div_to_l_@quot,?__div_to_l_
  7880  012824  C090  F08A         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7881  012828  C091  F08B         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7882  01282C  C092  F08C         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7883                           
  7884                           ; BSR set to: 0
  7885  012830  0012               	return		;funcret
  7886  012832                     __end_of__div_to_l_:
  7887                           	opt stack 0
  7888                           tblptru	equ	0xFF8
  7889                           tblptrh	equ	0xFF7
  7890                           tblptrl	equ	0xFF6
  7891                           tablat	equ	0xFF5
  7892                           prodh	equ	0xFF4
  7893                           prodl	equ	0xFF3
  7894                           intcon	equ	0xFF2
  7895                           postinc0	equ	0xFEE
  7896                           wreg	equ	0xFE8
  7897                           indf2	equ	0xFDF
  7898                           postinc2	equ	0xFDE
  7899                           postdec2	equ	0xFDD
  7900                           fsr2h	equ	0xFDA
  7901                           fsr2l	equ	0xFD9
  7902                           status	equ	0xFD8
  7903                           
  7904 ;; *************** function ___lltoft *****************
  7905 ;; Defined at:
  7906 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;  c               4   49[BANK0 ] unsigned long 
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;  exp             1   57[BANK0 ] unsigned char 
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  3   49[BANK0 ] float 
  7913 ;; Registers used:
  7914 ;;		wreg, status,2, status,0, cstack
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7920 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7921 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7922 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7923 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7924 ;;Total ram usage:        9 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:   11
  7927 ;; This function calls:
  7928 ;;		___ftpack
  7929 ;; This function is called by:
  7930 ;;		_printf
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text23
  7935  0137CA                     __ptext23:
  7936                           	opt stack 0
  7937  0137CA                     ___lltoft:
  7938                           	opt stack 16
  7939                           
  7940                           ; BSR set to: 0
  7941                           ;incstack = 0
  7942  0137CA  0E8E               	movlw	142
  7943  0137CC  0100               	movlb	0	; () banked
  7944  0137CE  6F99               	movwf	___lltoft@exp& (0+255),b
  7945  0137D0  D006               	goto	l1334
  7946  0137D2                     
  7947                           ; BSR set to: 0
  7948                           
  7949                           ; BSR set to: 0
  7950  0137D2  90D8               	bcf	status,0,c
  7951  0137D4  3394               	rrcf	(___lltoft@c+3)& (0+255),f,b
  7952  0137D6  3393               	rrcf	(___lltoft@c+2)& (0+255),f,b
  7953  0137D8  3392               	rrcf	(___lltoft@c+1)& (0+255),f,b
  7954  0137DA  3391               	rrcf	___lltoft@c& (0+255),f,b
  7955  0137DC  2B99               	incf	___lltoft@exp& (0+255),f,b
  7956  0137DE                     l1334:
  7957                           
  7958                           ; BSR set to: 0
  7959                           
  7960                           ; BSR set to: 0
  7961  0137DE  0E00               	movlw	0
  7962  0137E0  1591               	andwf	___lltoft@c& (0+255),w,b
  7963  0137E2  6F95               	movwf	??___lltoft& (0+255),b
  7964  0137E4  0E00               	movlw	0
  7965  0137E6  1592               	andwf	(___lltoft@c+1)& (0+255),w,b
  7966  0137E8  6F96               	movwf	(??___lltoft+1)& (0+255),b
  7967  0137EA  0E00               	movlw	0
  7968  0137EC  1593               	andwf	(___lltoft@c+2)& (0+255),w,b
  7969  0137EE  6F97               	movwf	(??___lltoft+2)& (0+255),b
  7970  0137F0  0EFF               	movlw	255
  7971  0137F2  1594               	andwf	(___lltoft@c+3)& (0+255),w,b
  7972  0137F4  6F98               	movwf	(??___lltoft+3)& (0+255),b
  7973  0137F6  5195               	movf	??___lltoft& (0+255),w,b
  7974  0137F8  1196               	iorwf	(??___lltoft+1)& (0+255),w,b
  7975  0137FA  1197               	iorwf	(??___lltoft+2)& (0+255),w,b
  7976  0137FC  1198               	iorwf	(??___lltoft+3)& (0+255),w,b
  7977  0137FE  A4D8               	btfss	status,2,c
  7978  013800  D7E8               	goto	l1335
  7979                           
  7980                           ; BSR set to: 0
  7981                           
  7982                           ; BSR set to: 0
  7983  013802  C091  F089         	movff	___lltoft@c,___ftpack@arg
  7984  013806  C092  F08A         	movff	___lltoft@c+1,___ftpack@arg+1
  7985  01380A  C093  F08B         	movff	___lltoft@c+2,___ftpack@arg+2
  7986  01380E  C099  F08C         	movff	___lltoft@exp,___ftpack@exp
  7987  013812  0E00               	movlw	0
  7988  013814  6F8D               	movwf	___ftpack@sign& (0+255),b
  7989  013816  EC07  F097         	call	___ftpack	;wreg free
  7990  01381A  C089  F091         	movff	?___ftpack,?___lltoft
  7991  01381E  C08A  F092         	movff	?___ftpack+1,?___lltoft+1
  7992  013822  C08B  F093         	movff	?___ftpack+2,?___lltoft+2
  7993  013826  0012               	return	
  7994  013828                     __end_of___lltoft:
  7995                           	opt stack 0
  7996                           tblptru	equ	0xFF8
  7997                           tblptrh	equ	0xFF7
  7998                           tblptrl	equ	0xFF6
  7999                           tablat	equ	0xFF5
  8000                           prodh	equ	0xFF4
  8001                           prodl	equ	0xFF3
  8002                           intcon	equ	0xFF2
  8003                           postinc0	equ	0xFEE
  8004                           wreg	equ	0xFE8
  8005                           indf2	equ	0xFDF
  8006                           postinc2	equ	0xFDE
  8007                           postdec2	equ	0xFDD
  8008                           fsr2h	equ	0xFDA
  8009                           fsr2l	equ	0xFD9
  8010                           status	equ	0xFD8
  8011                           
  8012 ;; *************** function ___llmod *****************
  8013 ;; Defined at:
  8014 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;  dividend        4   41[BANK0 ] unsigned long 
  8017 ;;  divisor         4   45[BANK0 ] unsigned long 
  8018 ;; Auto vars:     Size  Location     Type
  8019 ;;  counter         1   49[BANK0 ] unsigned char 
  8020 ;; Return value:  Size  Location     Type
  8021 ;;                  4   41[BANK0 ] unsigned long 
  8022 ;; Registers used:
  8023 ;;		wreg, status,2, status,0
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8029 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8030 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8032 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8033 ;;Total ram usage:        9 bytes
  8034 ;; Hardware stack levels used:    1
  8035 ;; Hardware stack levels required when called:   10
  8036 ;; This function calls:
  8037 ;;		Nothing
  8038 ;; This function is called by:
  8039 ;;		_printf
  8040 ;; This function uses a non-reentrant model
  8041 ;;
  8042                           
  8043                           	psect	text24
  8044  013632                     __ptext24:
  8045                           	opt stack 0
  8046  013632                     ___llmod:
  8047                           	opt stack 17
  8048                           
  8049                           ;incstack = 0
  8050  013632  0100               	movlb	0	; () banked
  8051  013634  518D               	movf	___llmod@divisor& (0+255),w,b
  8052  013636  118E               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  8053  013638  118F               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  8054  01363A  1190               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  8055  01363C  B4D8               	btfsc	status,2,c
  8056  01363E  D024               	goto	l1328
  8057                           
  8058                           ; BSR set to: 0
  8059  013640  0E01               	movlw	1
  8060  013642  6F91               	movwf	___llmod@counter& (0+255),b
  8061  013644  D006               	goto	l1323
  8062  013646                     
  8063                           ; BSR set to: 0
  8064                           
  8065                           ; BSR set to: 0
  8066  013646  90D8               	bcf	status,0,c
  8067  013648  378D               	rlcf	___llmod@divisor& (0+255),f,b
  8068  01364A  378E               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  8069  01364C  378F               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  8070  01364E  3790               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  8071  013650  2B91               	incf	___llmod@counter& (0+255),f,b
  8072  013652                     l1323:
  8073                           
  8074                           ; BSR set to: 0
  8075                           
  8076                           ; BSR set to: 0
  8077  013652  AF90               	btfss	(___llmod@divisor+3)& (0+255),7,b
  8078  013654  D7F8               	goto	l1324
  8079  013656                     u6900:
  8080                           
  8081                           ; BSR set to: 0
  8082                           
  8083                           ; BSR set to: 0
  8084                           
  8085                           ; BSR set to: 0
  8086  013656  518D               	movf	___llmod@divisor& (0+255),w,b
  8087  013658  5D89               	subwf	___llmod@dividend& (0+255),w,b
  8088  01365A  518E               	movf	(___llmod@divisor+1)& (0+255),w,b
  8089  01365C  598A               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  8090  01365E  518F               	movf	(___llmod@divisor+2)& (0+255),w,b
  8091  013660  598B               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  8092  013662  5190               	movf	(___llmod@divisor+3)& (0+255),w,b
  8093  013664  598C               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  8094  013666  A0D8               	btfss	status,0,c
  8095  013668  D008               	goto	l1327
  8096                           
  8097                           ; BSR set to: 0
  8098  01366A  518D               	movf	___llmod@divisor& (0+255),w,b
  8099  01366C  5F89               	subwf	___llmod@dividend& (0+255),f,b
  8100  01366E  518E               	movf	(___llmod@divisor+1)& (0+255),w,b
  8101  013670  5B8A               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  8102  013672  518F               	movf	(___llmod@divisor+2)& (0+255),w,b
  8103  013674  5B8B               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  8104  013676  5190               	movf	(___llmod@divisor+3)& (0+255),w,b
  8105  013678  5B8C               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  8106  01367A                     l1327:
  8107                           
  8108                           ; BSR set to: 0
  8109                           
  8110                           ; BSR set to: 0
  8111  01367A  90D8               	bcf	status,0,c
  8112  01367C  3390               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  8113  01367E  338F               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  8114  013680  338E               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  8115  013682  338D               	rrcf	___llmod@divisor& (0+255),f,b
  8116                           
  8117                           ; BSR set to: 0
  8118  013684  2F91               	decfsz	___llmod@counter& (0+255),f,b
  8119  013686  D7E7               	goto	u6900
  8120  013688                     l1328:
  8121                           
  8122                           ; BSR set to: 0
  8123                           
  8124                           ; BSR set to: 0
  8125  013688  C089  F089         	movff	___llmod@dividend,?___llmod
  8126  01368C  C08A  F08A         	movff	___llmod@dividend+1,?___llmod+1
  8127  013690  C08B  F08B         	movff	___llmod@dividend+2,?___llmod+2
  8128  013694  C08C  F08C         	movff	___llmod@dividend+3,?___llmod+3
  8129                           
  8130                           ; BSR set to: 0
  8131  013698  0012               	return		;funcret
  8132  01369A                     __end_of___llmod:
  8133                           	opt stack 0
  8134                           tblptru	equ	0xFF8
  8135                           tblptrh	equ	0xFF7
  8136                           tblptrl	equ	0xFF6
  8137                           tablat	equ	0xFF5
  8138                           prodh	equ	0xFF4
  8139                           prodl	equ	0xFF3
  8140                           intcon	equ	0xFF2
  8141                           postinc0	equ	0xFEE
  8142                           wreg	equ	0xFE8
  8143                           indf2	equ	0xFDF
  8144                           postinc2	equ	0xFDE
  8145                           postdec2	equ	0xFDD
  8146                           fsr2h	equ	0xFDA
  8147                           fsr2l	equ	0xFD9
  8148                           status	equ	0xFD8
  8149                           
  8150 ;; *************** function ___lldiv *****************
  8151 ;; Defined at:
  8152 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;  dividend        4   41[BANK0 ] unsigned long 
  8155 ;;  divisor         4   45[BANK0 ] unsigned long 
  8156 ;; Auto vars:     Size  Location     Type
  8157 ;;  quotient        4   49[BANK0 ] unsigned long 
  8158 ;;  counter         1   53[BANK0 ] unsigned char 
  8159 ;; Return value:  Size  Location     Type
  8160 ;;                  4   41[BANK0 ] unsigned long 
  8161 ;; Registers used:
  8162 ;;		wreg, status,2, status,0
  8163 ;; Tracked objects:
  8164 ;;		On entry : 0/0
  8165 ;;		On exit  : 0/0
  8166 ;;		Unchanged: 0/0
  8167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8168 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8169 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8171 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8172 ;;Total ram usage:       13 bytes
  8173 ;; Hardware stack levels used:    1
  8174 ;; Hardware stack levels required when called:   10
  8175 ;; This function calls:
  8176 ;;		Nothing
  8177 ;; This function is called by:
  8178 ;;		_printf
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           	psect	text25
  8183  0132EE                     __ptext25:
  8184                           	opt stack 0
  8185  0132EE                     ___lldiv:
  8186                           	opt stack 17
  8187                           
  8188                           ; BSR set to: 0
  8189                           ;incstack = 0
  8190  0132EE  0E00               	movlw	0
  8191  0132F0  0100               	movlb	0	; () banked
  8192  0132F2  6F91               	movwf	___lldiv@quotient& (0+255),b
  8193  0132F4  0E00               	movlw	0
  8194  0132F6  6F92               	movwf	(___lldiv@quotient+1)& (0+255),b
  8195  0132F8  0E00               	movlw	0
  8196  0132FA  6F93               	movwf	(___lldiv@quotient+2)& (0+255),b
  8197  0132FC  0E00               	movlw	0
  8198  0132FE  6F94               	movwf	(___lldiv@quotient+3)& (0+255),b
  8199                           
  8200                           ; BSR set to: 0
  8201  013300  518D               	movf	___lldiv@divisor& (0+255),w,b
  8202  013302  118E               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8203  013304  118F               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8204  013306  1190               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8205  013308  B4D8               	btfsc	status,2,c
  8206  01330A  D02A               	goto	l1318
  8207                           
  8208                           ; BSR set to: 0
  8209  01330C  0E01               	movlw	1
  8210  01330E  6F95               	movwf	___lldiv@counter& (0+255),b
  8211  013310  D006               	goto	l1313
  8212  013312                     
  8213                           ; BSR set to: 0
  8214                           
  8215                           ; BSR set to: 0
  8216  013312  90D8               	bcf	status,0,c
  8217  013314  378D               	rlcf	___lldiv@divisor& (0+255),f,b
  8218  013316  378E               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8219  013318  378F               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8220  01331A  3790               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8221  01331C  2B95               	incf	___lldiv@counter& (0+255),f,b
  8222  01331E                     l1313:
  8223                           
  8224                           ; BSR set to: 0
  8225                           
  8226                           ; BSR set to: 0
  8227  01331E  AF90               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8228  013320  D7F8               	goto	l1314
  8229  013322                     u6870:
  8230                           
  8231                           ; BSR set to: 0
  8232                           
  8233                           ; BSR set to: 0
  8234                           
  8235                           ; BSR set to: 0
  8236  013322  90D8               	bcf	status,0,c
  8237  013324  3791               	rlcf	___lldiv@quotient& (0+255),f,b
  8238  013326  3792               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8239  013328  3793               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8240  01332A  3794               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8241                           
  8242                           ; BSR set to: 0
  8243  01332C  518D               	movf	___lldiv@divisor& (0+255),w,b
  8244  01332E  5D89               	subwf	___lldiv@dividend& (0+255),w,b
  8245  013330  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8246  013332  598A               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8247  013334  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8248  013336  598B               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8249  013338  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8250  01333A  598C               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8251  01333C  A0D8               	btfss	status,0,c
  8252  01333E  D009               	goto	l1317
  8253                           
  8254                           ; BSR set to: 0
  8255  013340  518D               	movf	___lldiv@divisor& (0+255),w,b
  8256  013342  5F89               	subwf	___lldiv@dividend& (0+255),f,b
  8257  013344  518E               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8258  013346  5B8A               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8259  013348  518F               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8260  01334A  5B8B               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8261  01334C  5190               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8262  01334E  5B8C               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8263                           
  8264                           ; BSR set to: 0
  8265  013350  8191               	bsf	___lldiv@quotient& (0+255),0,b
  8266  013352                     l1317:
  8267                           
  8268                           ; BSR set to: 0
  8269                           
  8270                           ; BSR set to: 0
  8271  013352  90D8               	bcf	status,0,c
  8272  013354  3390               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8273  013356  338F               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8274  013358  338E               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8275  01335A  338D               	rrcf	___lldiv@divisor& (0+255),f,b
  8276                           
  8277                           ; BSR set to: 0
  8278  01335C  2F95               	decfsz	___lldiv@counter& (0+255),f,b
  8279  01335E  D7E1               	goto	u6870
  8280  013360                     l1318:
  8281                           
  8282                           ; BSR set to: 0
  8283                           
  8284                           ; BSR set to: 0
  8285  013360  C091  F089         	movff	___lldiv@quotient,?___lldiv
  8286  013364  C092  F08A         	movff	___lldiv@quotient+1,?___lldiv+1
  8287  013368  C093  F08B         	movff	___lldiv@quotient+2,?___lldiv+2
  8288  01336C  C094  F08C         	movff	___lldiv@quotient+3,?___lldiv+3
  8289                           
  8290                           ; BSR set to: 0
  8291  013370  0012               	return		;funcret
  8292  013372                     __end_of___lldiv:
  8293                           	opt stack 0
  8294                           tblptru	equ	0xFF8
  8295                           tblptrh	equ	0xFF7
  8296                           tblptrl	equ	0xFF6
  8297                           tablat	equ	0xFF5
  8298                           prodh	equ	0xFF4
  8299                           prodl	equ	0xFF3
  8300                           intcon	equ	0xFF2
  8301                           postinc0	equ	0xFEE
  8302                           wreg	equ	0xFE8
  8303                           indf2	equ	0xFDF
  8304                           postinc2	equ	0xFDE
  8305                           postdec2	equ	0xFDD
  8306                           fsr2h	equ	0xFDA
  8307                           fsr2l	equ	0xFD9
  8308                           status	equ	0xFD8
  8309                           
  8310 ;; *************** function ___fttol *****************
  8311 ;; Defined at:
  8312 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;  f1              3   83[BANK0 ] float 
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;  lval            4    6[BANK1 ] unsigned long 
  8317 ;;  exp1            1   10[BANK1 ] unsigned char 
  8318 ;;  sign1           1    5[BANK1 ] unsigned char 
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  4   83[BANK0 ] long 
  8321 ;; Registers used:
  8322 ;;		wreg, status,2, status,0
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8328 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8329 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8330 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8331 ;;      Totals:         0       4      11       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8332 ;;Total ram usage:       15 bytes
  8333 ;; Hardware stack levels used:    1
  8334 ;; Hardware stack levels required when called:   10
  8335 ;; This function calls:
  8336 ;;		Nothing
  8337 ;; This function is called by:
  8338 ;;		_printf
  8339 ;; This function uses a non-reentrant model
  8340 ;;
  8341                           
  8342                           	psect	text26
  8343  01295A                     __ptext26:
  8344                           	opt stack 0
  8345  01295A                     ___fttol:
  8346                           	opt stack 17
  8347                           
  8348                           ; BSR set to: 0
  8349                           ;incstack = 0
  8350  01295A  C0B5  F1C1         	movff	___fttol@f1+2,??___fttol
  8351  01295E  0101               	movlb	1	; () banked
  8352  012960  6BC2               	clrf	(??___fttol+1)& (0+255),b
  8353  012962  6BC3               	clrf	(??___fttol+2)& (0+255),b
  8354  012964  0100               	movlb	0	; () banked
  8355  012966  35B4               	rlcf	(___fttol@f1+1)& (0+255),w,b
  8356  012968  0101               	movlb	1	; () banked
  8357  01296A  37C1               	rlcf	??___fttol& (0+255),f,b
  8358  01296C  E301               	bnc	u9741
  8359  01296E  81C2               	bsf	(??___fttol+1)& (0+255),0,b
  8360  012970                     u9741:
  8361  012970  51C1               	movf	??___fttol& (0+255),w,b
  8362  012972  6FCB               	movwf	___fttol@exp1& (0+255),b
  8363  012974  51CB               	movf	___fttol@exp1& (0+255),w,b
  8364  012976  A4D8               	btfss	status,2,c
  8365  012978  D00A               	goto	l1277
  8366                           
  8367                           ; BSR set to: 1
  8368  01297A  0E00               	movlw	0
  8369  01297C  0100               	movlb	0	; () banked
  8370  01297E  6FB3               	movwf	?___fttol& (0+255),b
  8371  012980  0E00               	movlw	0
  8372  012982  6FB4               	movwf	(?___fttol+1)& (0+255),b
  8373  012984  0E00               	movlw	0
  8374  012986  6FB5               	movwf	(?___fttol+2)& (0+255),b
  8375  012988  0E00               	movlw	0
  8376  01298A  6FB6               	movwf	(?___fttol+3)& (0+255),b
  8377                           
  8378                           ; BSR set to: 0
  8379  01298C  0012               	return	
  8380  01298E                     l1277:
  8381                           
  8382                           ; BSR set to: 0
  8383  01298E  0E17               	movlw	23
  8384  012990  0101               	movlb	1	; () banked
  8385  012992  6FC1               	movwf	??___fttol& (0+255),b
  8386  012994  C0B3  F1C2         	movff	___fttol@f1,??___fttol+1
  8387  012998  C0B4  F1C3         	movff	___fttol@f1+1,??___fttol+2
  8388  01299C  C0B5  F1C4         	movff	___fttol@f1+2,??___fttol+3
  8389  0129A0  29C1               	incf	??___fttol& (0+255),w,b
  8390  0129A2  6FC5               	movwf	(??___fttol+4)& (0+255),b
  8391  0129A4  D004               	goto	u9760
  8392  0129A6                     u9765:
  8393  0129A6  90D8               	bcf	status,0,c
  8394  0129A8  33C4               	rrcf	(??___fttol+3)& (0+255),f,b
  8395  0129AA  33C3               	rrcf	(??___fttol+2)& (0+255),f,b
  8396  0129AC  33C2               	rrcf	(??___fttol+1)& (0+255),f,b
  8397  0129AE                     u9760:
  8398  0129AE  2FC5               	decfsz	(??___fttol+4)& (0+255),f,b
  8399  0129B0  D7FA               	goto	u9765
  8400  0129B2  0101               	movlb	1	; () banked
  8401  0129B4  51C2               	movf	(??___fttol+1)& (0+255),w,b
  8402  0129B6  6FC6               	movwf	___fttol@sign1& (0+255),b
  8403                           
  8404                           ; BSR set to: 1
  8405  0129B8  0100               	movlb	0	; () banked
  8406  0129BA  8FB4               	bsf	(___fttol@f1+1)& (0+255),7,b
  8407                           
  8408                           ; BSR set to: 0
  8409  0129BC  0EFF               	movlw	255
  8410  0129BE  17B3               	andwf	___fttol@f1& (0+255),f,b
  8411  0129C0  0EFF               	movlw	255
  8412  0129C2  17B4               	andwf	(___fttol@f1+1)& (0+255),f,b
  8413  0129C4  0E00               	movlw	0
  8414  0129C6  17B5               	andwf	(___fttol@f1+2)& (0+255),f,b
  8415                           
  8416                           ; BSR set to: 0
  8417  0129C8  51B3               	movf	___fttol@f1& (0+255),w,b
  8418  0129CA  0101               	movlb	1	; () banked
  8419  0129CC  6FC7               	movwf	___fttol@lval& (0+255),b
  8420  0129CE  0100               	movlb	0	; () banked
  8421  0129D0  51B4               	movf	(___fttol@f1+1)& (0+255),w,b
  8422  0129D2  0101               	movlb	1	; () banked
  8423  0129D4  6FC8               	movwf	(___fttol@lval+1)& (0+255),b
  8424  0129D6  0100               	movlb	0	; () banked
  8425  0129D8  51B5               	movf	(___fttol@f1+2)& (0+255),w,b
  8426  0129DA  0101               	movlb	1	; () banked
  8427  0129DC  6FC9               	movwf	(___fttol@lval+2)& (0+255),b
  8428  0129DE  6BCA               	clrf	(___fttol@lval+3)& (0+255),b
  8429                           
  8430                           ; BSR set to: 1
  8431  0129E0  0E8E               	movlw	142
  8432  0129E2  5FCB               	subwf	___fttol@exp1& (0+255),f,b
  8433                           
  8434                           ; BSR set to: 1
  8435  0129E4  AFCB               	btfss	___fttol@exp1& (0+255),7,b
  8436  0129E6  D018               	goto	l1279
  8437                           
  8438                           ; BSR set to: 1
  8439  0129E8  51CB               	movf	___fttol@exp1& (0+255),w,b
  8440  0129EA  0A80               	xorlw	128
  8441  0129EC  0F8F               	addlw	143
  8442  0129EE  B0D8               	btfsc	status,0,c
  8443  0129F0  D00A               	goto	l1280
  8444                           
  8445                           ; BSR set to: 1
  8446  0129F2  0E00               	movlw	0
  8447  0129F4  0100               	movlb	0	; () banked
  8448  0129F6  6FB3               	movwf	?___fttol& (0+255),b
  8449  0129F8  0E00               	movlw	0
  8450  0129FA  6FB4               	movwf	(?___fttol+1)& (0+255),b
  8451  0129FC  0E00               	movlw	0
  8452  0129FE  6FB5               	movwf	(?___fttol+2)& (0+255),b
  8453  012A00  0E00               	movlw	0
  8454  012A02  6FB6               	movwf	(?___fttol+3)& (0+255),b
  8455                           
  8456                           ; BSR set to: 0
  8457  012A04  0012               	return	
  8458  012A06                     l1280:
  8459                           
  8460                           ; BSR set to: 0
  8461                           
  8462                           ; BSR set to: 0
  8463  012A06  0101               	movlb	1	; () banked
  8464  012A08  90D8               	bcf	status,0,c
  8465  012A0A  33CA               	rrcf	(___fttol@lval+3)& (0+255),f,b
  8466  012A0C  33C9               	rrcf	(___fttol@lval+2)& (0+255),f,b
  8467  012A0E  33C8               	rrcf	(___fttol@lval+1)& (0+255),f,b
  8468  012A10  33C7               	rrcf	___fttol@lval& (0+255),f,b
  8469                           
  8470                           ; BSR set to: 1
  8471  012A12  3FCB               	incfsz	___fttol@exp1& (0+255),f,b
  8472  012A14  D7F8               	goto	l1280
  8473                           
  8474                           ; BSR set to: 1
  8475  012A16  D018               	goto	u9800
  8476  012A18                     l1279:
  8477                           
  8478                           ; BSR set to: 1
  8479                           
  8480                           ; BSR set to: 1
  8481  012A18  0E17               	movlw	23
  8482  012A1A  65CB               	cpfsgt	___fttol@exp1& (0+255),b
  8483  012A1C  D011               	goto	l1285
  8484                           
  8485                           ; BSR set to: 1
  8486  012A1E  0E00               	movlw	0
  8487  012A20  0100               	movlb	0	; () banked
  8488  012A22  6FB3               	movwf	?___fttol& (0+255),b
  8489  012A24  0E00               	movlw	0
  8490  012A26  6FB4               	movwf	(?___fttol+1)& (0+255),b
  8491  012A28  0E00               	movlw	0
  8492  012A2A  6FB5               	movwf	(?___fttol+2)& (0+255),b
  8493  012A2C  0E00               	movlw	0
  8494  012A2E  6FB6               	movwf	(?___fttol+3)& (0+255),b
  8495                           
  8496                           ; BSR set to: 0
  8497  012A30  0012               	return	
  8498  012A32                     
  8499                           ; BSR set to: 0
  8500  012A32  0101               	movlb	1	; () banked
  8501  012A34  90D8               	bcf	status,0,c
  8502  012A36  37C7               	rlcf	___fttol@lval& (0+255),f,b
  8503  012A38  37C8               	rlcf	(___fttol@lval+1)& (0+255),f,b
  8504  012A3A  37C9               	rlcf	(___fttol@lval+2)& (0+255),f,b
  8505  012A3C  37CA               	rlcf	(___fttol@lval+3)& (0+255),f,b
  8506  012A3E  07CB               	decf	___fttol@exp1& (0+255),f,b
  8507  012A40                     l1285:
  8508                           
  8509                           ; BSR set to: 1
  8510  012A40  0101               	movlb	1	; () banked
  8511  012A42  51CB               	movf	___fttol@exp1& (0+255),w,b
  8512  012A44  A4D8               	btfss	status,2,c
  8513  012A46  D7F5               	goto	l1286
  8514  012A48                     u9800:
  8515                           
  8516                           ; BSR set to: 1
  8517                           
  8518                           ; BSR set to: 1
  8519                           
  8520                           ; BSR set to: 1
  8521  012A48  51C6               	movf	___fttol@sign1& (0+255),w,b
  8522  012A4A  B4D8               	btfsc	status,2,c
  8523  012A4C  D008               	goto	l1288
  8524                           
  8525                           ; BSR set to: 1
  8526  012A4E  1FCA               	comf	(___fttol@lval+3)& (0+255),f,b
  8527  012A50  1FC9               	comf	(___fttol@lval+2)& (0+255),f,b
  8528  012A52  1FC8               	comf	(___fttol@lval+1)& (0+255),f,b
  8529  012A54  6DC7               	negf	___fttol@lval& (0+255),b
  8530  012A56  0E00               	movlw	0
  8531  012A58  23C8               	addwfc	(___fttol@lval+1)& (0+255),f,b
  8532  012A5A  23C9               	addwfc	(___fttol@lval+2)& (0+255),f,b
  8533  012A5C  23CA               	addwfc	(___fttol@lval+3)& (0+255),f,b
  8534  012A5E                     l1288:
  8535                           
  8536                           ; BSR set to: 1
  8537                           
  8538                           ; BSR set to: 1
  8539  012A5E  C1C7  F0B3         	movff	___fttol@lval,?___fttol
  8540  012A62  C1C8  F0B4         	movff	___fttol@lval+1,?___fttol+1
  8541  012A66  C1C9  F0B5         	movff	___fttol@lval+2,?___fttol+2
  8542  012A6A  C1CA  F0B6         	movff	___fttol@lval+3,?___fttol+3
  8543  012A6E  0012               	return	
  8544  012A70                     __end_of___fttol:
  8545                           	opt stack 0
  8546                           tblptru	equ	0xFF8
  8547                           tblptrh	equ	0xFF7
  8548                           tblptrl	equ	0xFF6
  8549                           tablat	equ	0xFF5
  8550                           prodh	equ	0xFF4
  8551                           prodl	equ	0xFF3
  8552                           intcon	equ	0xFF2
  8553                           postinc0	equ	0xFEE
  8554                           wreg	equ	0xFE8
  8555                           indf2	equ	0xFDF
  8556                           postinc2	equ	0xFDE
  8557                           postdec2	equ	0xFDD
  8558                           fsr2h	equ	0xFDA
  8559                           fsr2l	equ	0xFD9
  8560                           status	equ	0xFD8
  8561                           
  8562 ;; *************** function ___ftsub *****************
  8563 ;; Defined at:
  8564 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;  f1              3   12[BANK1 ] float 
  8567 ;;  f2              3   15[BANK1 ] float 
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;		None
  8570 ;; Return value:  Size  Location     Type
  8571 ;;                  3   12[BANK1 ] float 
  8572 ;; Registers used:
  8573 ;;		wreg, status,2, status,0, cstack
  8574 ;; Tracked objects:
  8575 ;;		On entry : 0/0
  8576 ;;		On exit  : 0/0
  8577 ;;		Unchanged: 0/0
  8578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8579 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8582 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8583 ;;Total ram usage:        6 bytes
  8584 ;; Hardware stack levels used:    1
  8585 ;; Hardware stack levels required when called:   12
  8586 ;; This function calls:
  8587 ;;		___ftadd
  8588 ;; This function is called by:
  8589 ;;		_printf
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           
  8593                           	psect	text27
  8594  013A40                     __ptext27:
  8595                           	opt stack 0
  8596  013A40                     ___ftsub:
  8597                           	opt stack 15
  8598                           
  8599                           ;incstack = 0
  8600  013A40  0101               	movlb	1	; () banked
  8601  013A42  51D0               	movf	___ftsub@f2& (0+255),w,b
  8602  013A44  11D1               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  8603  013A46  11D2               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  8604  013A48  B4D8               	btfsc	status,2,c
  8605  013A4A  D006               	goto	l1273
  8606                           
  8607                           ; BSR set to: 1
  8608  013A4C  0E00               	movlw	0
  8609  013A4E  1BD0               	xorwf	___ftsub@f2& (0+255),f,b
  8610  013A50  0E00               	movlw	0
  8611  013A52  1BD1               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  8612  013A54  0E80               	movlw	128
  8613  013A56  1BD2               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  8614  013A58                     l1273:
  8615                           
  8616                           ; BSR set to: 1
  8617                           
  8618                           ; BSR set to: 1
  8619  013A58  C1CD  F1C1         	movff	___ftsub@f1,___ftadd@f1
  8620  013A5C  C1CE  F1C2         	movff	___ftsub@f1+1,___ftadd@f1+1
  8621  013A60  C1CF  F1C3         	movff	___ftsub@f1+2,___ftadd@f1+2
  8622  013A64  C1D0  F1C4         	movff	___ftsub@f2,___ftadd@f2
  8623  013A68  C1D1  F1C5         	movff	___ftsub@f2+1,___ftadd@f2+1
  8624  013A6C  C1D2  F1C6         	movff	___ftsub@f2+2,___ftadd@f2+2
  8625  013A70  EC04  F090         	call	___ftadd	;wreg free
  8626  013A74  C1C1  F1CD         	movff	?___ftadd,?___ftsub
  8627  013A78  C1C2  F1CE         	movff	?___ftadd+1,?___ftsub+1
  8628  013A7C  C1C3  F1CF         	movff	?___ftadd+2,?___ftsub+2
  8629  013A80  0012               	return	
  8630  013A82                     __end_of___ftsub:
  8631                           	opt stack 0
  8632                           tblptru	equ	0xFF8
  8633                           tblptrh	equ	0xFF7
  8634                           tblptrl	equ	0xFF6
  8635                           tablat	equ	0xFF5
  8636                           prodh	equ	0xFF4
  8637                           prodl	equ	0xFF3
  8638                           intcon	equ	0xFF2
  8639                           postinc0	equ	0xFEE
  8640                           wreg	equ	0xFE8
  8641                           indf2	equ	0xFDF
  8642                           postinc2	equ	0xFDE
  8643                           postdec2	equ	0xFDD
  8644                           fsr2h	equ	0xFDA
  8645                           fsr2l	equ	0xFD9
  8646                           status	equ	0xFD8
  8647                           
  8648 ;; *************** function ___ftadd *****************
  8649 ;; Defined at:
  8650 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;  f1              3    0[BANK1 ] float 
  8653 ;;  f2              3    3[BANK1 ] float 
  8654 ;; Auto vars:     Size  Location     Type
  8655 ;;  exp1            1   11[BANK1 ] unsigned char 
  8656 ;;  exp2            1   10[BANK1 ] unsigned char 
  8657 ;;  sign            1    9[BANK1 ] unsigned char 
  8658 ;; Return value:  Size  Location     Type
  8659 ;;                  3    0[BANK1 ] float 
  8660 ;; Registers used:
  8661 ;;		wreg, status,2, status,0, cstack
  8662 ;; Tracked objects:
  8663 ;;		On entry : 0/0
  8664 ;;		On exit  : 0/0
  8665 ;;		Unchanged: 0/0
  8666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8667 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8668 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8669 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8670 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8671 ;;Total ram usage:       12 bytes
  8672 ;; Hardware stack levels used:    1
  8673 ;; Hardware stack levels required when called:   11
  8674 ;; This function calls:
  8675 ;;		___ftpack
  8676 ;; This function is called by:
  8677 ;;		_printf
  8678 ;;		___ftsub
  8679 ;; This function uses a non-reentrant model
  8680 ;;
  8681                           
  8682                           	psect	text28
  8683  012008                     __ptext28:
  8684                           	opt stack 0
  8685  012008                     ___ftadd:
  8686                           	opt stack 15
  8687                           
  8688                           ;incstack = 0
  8689  012008  C1C3  F1C7         	movff	___ftadd@f1+2,??___ftadd
  8690  01200C  0101               	movlb	1	; () banked
  8691  01200E  6BC8               	clrf	(??___ftadd+1)& (0+255),b
  8692  012010  6BC9               	clrf	(??___ftadd+2)& (0+255),b
  8693  012012  35C2               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  8694  012014  37C7               	rlcf	??___ftadd& (0+255),f,b
  8695  012016  E301               	bnc	u6111
  8696  012018  81C8               	bsf	(??___ftadd+1)& (0+255),0,b
  8697  01201A                     u6111:
  8698  01201A  51C7               	movf	??___ftadd& (0+255),w,b
  8699  01201C  6FCC               	movwf	___ftadd@exp1& (0+255),b
  8700  01201E  C1C6  F1C7         	movff	___ftadd@f2+2,??___ftadd
  8701  012022  6BC8               	clrf	(??___ftadd+1)& (0+255),b
  8702  012024  6BC9               	clrf	(??___ftadd+2)& (0+255),b
  8703  012026  35C5               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  8704  012028  37C7               	rlcf	??___ftadd& (0+255),f,b
  8705  01202A  E301               	bnc	u6121
  8706  01202C  81C8               	bsf	(??___ftadd+1)& (0+255),0,b
  8707  01202E                     u6121:
  8708  01202E  51C7               	movf	??___ftadd& (0+255),w,b
  8709  012030  6FCB               	movwf	___ftadd@exp2& (0+255),b
  8710                           
  8711                           ; BSR set to: 1
  8712  012032  51CC               	movf	___ftadd@exp1& (0+255),w,b
  8713  012034  B4D8               	btfsc	status,2,c
  8714  012036  D00B               	goto	u6150
  8715                           
  8716                           ; BSR set to: 1
  8717  012038  51CB               	movf	___ftadd@exp2& (0+255),w,b
  8718  01203A  5DCC               	subwf	___ftadd@exp1& (0+255),w,b
  8719  01203C  B0D8               	btfsc	status,0,c
  8720  01203E  D00E               	goto	l1191
  8721                           
  8722                           ; BSR set to: 1
  8723  012040  51CC               	movf	___ftadd@exp1& (0+255),w,b
  8724  012042  0800               	sublw	0
  8725  012044  25CB               	addwf	___ftadd@exp2& (0+255),w,b
  8726  012046  6FC7               	movwf	??___ftadd& (0+255),b
  8727  012048  0E18               	movlw	24
  8728  01204A  65C7               	cpfsgt	??___ftadd& (0+255),b
  8729  01204C  D007               	goto	l1191
  8730  01204E                     u6150:
  8731                           
  8732                           ; BSR set to: 1
  8733  01204E  C1C4  F1C1         	movff	___ftadd@f2,?___ftadd
  8734  012052  C1C5  F1C2         	movff	___ftadd@f2+1,?___ftadd+1
  8735  012056  C1C6  F1C3         	movff	___ftadd@f2+2,?___ftadd+2
  8736  01205A  0012               	return	
  8737  01205C                     l1191:
  8738                           
  8739                           ; BSR set to: 1
  8740                           
  8741                           ; BSR set to: 1
  8742  01205C  51CB               	movf	___ftadd@exp2& (0+255),w,b
  8743  01205E  B4D8               	btfsc	status,2,c
  8744  012060  D00B               	goto	u6180
  8745                           
  8746                           ; BSR set to: 1
  8747  012062  51CC               	movf	___ftadd@exp1& (0+255),w,b
  8748  012064  5DCB               	subwf	___ftadd@exp2& (0+255),w,b
  8749  012066  B0D8               	btfsc	status,0,c
  8750  012068  D00E               	goto	l1195
  8751                           
  8752                           ; BSR set to: 1
  8753  01206A  51CB               	movf	___ftadd@exp2& (0+255),w,b
  8754  01206C  0800               	sublw	0
  8755  01206E  25CC               	addwf	___ftadd@exp1& (0+255),w,b
  8756  012070  6FC7               	movwf	??___ftadd& (0+255),b
  8757  012072  0E18               	movlw	24
  8758  012074  65C7               	cpfsgt	??___ftadd& (0+255),b
  8759  012076  D007               	goto	l1195
  8760  012078                     u6180:
  8761                           
  8762                           ; BSR set to: 1
  8763  012078  C1C1  F1C1         	movff	___ftadd@f1,?___ftadd
  8764  01207C  C1C2  F1C2         	movff	___ftadd@f1+1,?___ftadd+1
  8765  012080  C1C3  F1C3         	movff	___ftadd@f1+2,?___ftadd+2
  8766  012084  0012               	return	
  8767  012086                     l1195:
  8768                           
  8769                           ; BSR set to: 1
  8770                           
  8771                           ; BSR set to: 1
  8772  012086  0E06               	movlw	6
  8773  012088  6FCA               	movwf	___ftadd@sign& (0+255),b
  8774                           
  8775                           ; BSR set to: 1
  8776  01208A  BFC3               	btfsc	(___ftadd@f1+2)& (0+255),7,b
  8777                           
  8778                           ; BSR set to: 1
  8779  01208C  8FCA               	bsf	___ftadd@sign& (0+255),7,b
  8780                           
  8781                           ; BSR set to: 1
  8782                           
  8783                           ; BSR set to: 1
  8784  01208E  BFC6               	btfsc	(___ftadd@f2+2)& (0+255),7,b
  8785                           
  8786                           ; BSR set to: 1
  8787  012090  8DCA               	bsf	___ftadd@sign& (0+255),6,b
  8788                           
  8789                           ; BSR set to: 1
  8790  012092  8FC2               	bsf	(___ftadd@f1+1)& (0+255),7,b
  8791                           
  8792                           ; BSR set to: 1
  8793  012094  0EFF               	movlw	255
  8794  012096  17C1               	andwf	___ftadd@f1& (0+255),f,b
  8795  012098  0EFF               	movlw	255
  8796  01209A  17C2               	andwf	(___ftadd@f1+1)& (0+255),f,b
  8797  01209C  0E00               	movlw	0
  8798  01209E  17C3               	andwf	(___ftadd@f1+2)& (0+255),f,b
  8799  0120A0  8FC5               	bsf	(___ftadd@f2+1)& (0+255),7,b
  8800                           
  8801                           ; BSR set to: 1
  8802  0120A2  0EFF               	movlw	255
  8803  0120A4  17C4               	andwf	___ftadd@f2& (0+255),f,b
  8804  0120A6  0EFF               	movlw	255
  8805  0120A8  17C5               	andwf	(___ftadd@f2+1)& (0+255),f,b
  8806  0120AA  0E00               	movlw	0
  8807  0120AC  17C6               	andwf	(___ftadd@f2+2)& (0+255),f,b
  8808                           
  8809                           ; BSR set to: 1
  8810  0120AE  51CB               	movf	___ftadd@exp2& (0+255),w,b
  8811  0120B0  5DCC               	subwf	___ftadd@exp1& (0+255),w,b
  8812  0120B2  B0D8               	btfsc	status,0,c
  8813  0120B4  D01B               	goto	l1200
  8814  0120B6                     u6210:
  8815                           
  8816                           ; BSR set to: 1
  8817                           
  8818                           ; BSR set to: 1
  8819  0120B6  90D8               	bcf	status,0,c
  8820  0120B8  37C4               	rlcf	___ftadd@f2& (0+255),f,b
  8821  0120BA  37C5               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  8822  0120BC  37C6               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  8823  0120BE  07CB               	decf	___ftadd@exp2& (0+255),f,b
  8824                           
  8825                           ; BSR set to: 1
  8826  0120C0  51CC               	movf	___ftadd@exp1& (0+255),w,b
  8827  0120C2  19CB               	xorwf	___ftadd@exp2& (0+255),w,b
  8828  0120C4  B4D8               	btfsc	status,2,c
  8829  0120C6  D00D               	goto	l1205
  8830                           
  8831                           ; BSR set to: 1
  8832  0120C8  07CA               	decf	___ftadd@sign& (0+255),f,b
  8833  0120CA  C1CA  F1C7         	movff	___ftadd@sign,??___ftadd
  8834  0120CE  0E07               	movlw	7
  8835  0120D0  17C7               	andwf	??___ftadd& (0+255),f,b
  8836  0120D2  B4D8               	btfsc	status,2,c
  8837  0120D4  D006               	goto	l1205
  8838  0120D6  D7EF               	goto	u6210
  8839  0120D8                     
  8840                           ; BSR set to: 1
  8841                           
  8842                           ; BSR set to: 1
  8843  0120D8  90D8               	bcf	status,0,c
  8844  0120DA  33C3               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  8845  0120DC  33C2               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  8846  0120DE  33C1               	rrcf	___ftadd@f1& (0+255),f,b
  8847  0120E0  2BCC               	incf	___ftadd@exp1& (0+255),f,b
  8848  0120E2                     l1205:
  8849                           
  8850                           ; BSR set to: 1
  8851                           
  8852                           ; BSR set to: 1
  8853  0120E2  51CB               	movf	___ftadd@exp2& (0+255),w,b
  8854  0120E4  19CC               	xorwf	___ftadd@exp1& (0+255),w,b
  8855  0120E6  B4D8               	btfsc	status,2,c
  8856  0120E8  D01F               	goto	u6280
  8857  0120EA  D7F6               	goto	l1206
  8858  0120EC                     l1200:
  8859                           
  8860                           ; BSR set to: 1
  8861                           
  8862                           ; BSR set to: 1
  8863  0120EC  51CC               	movf	___ftadd@exp1& (0+255),w,b
  8864  0120EE  5DCB               	subwf	___ftadd@exp2& (0+255),w,b
  8865  0120F0  B0D8               	btfsc	status,0,c
  8866  0120F2  D01A               	goto	u6280
  8867  0120F4                     u6250:
  8868                           
  8869                           ; BSR set to: 1
  8870                           
  8871                           ; BSR set to: 1
  8872  0120F4  90D8               	bcf	status,0,c
  8873  0120F6  37C1               	rlcf	___ftadd@f1& (0+255),f,b
  8874  0120F8  37C2               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  8875  0120FA  37C3               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  8876  0120FC  07CC               	decf	___ftadd@exp1& (0+255),f,b
  8877                           
  8878                           ; BSR set to: 1
  8879  0120FE  51CC               	movf	___ftadd@exp1& (0+255),w,b
  8880  012100  19CB               	xorwf	___ftadd@exp2& (0+255),w,b
  8881  012102  B4D8               	btfsc	status,2,c
  8882  012104  D00D               	goto	l1214
  8883                           
  8884                           ; BSR set to: 1
  8885  012106  07CA               	decf	___ftadd@sign& (0+255),f,b
  8886  012108  C1CA  F1C7         	movff	___ftadd@sign,??___ftadd
  8887  01210C  0E07               	movlw	7
  8888  01210E  17C7               	andwf	??___ftadd& (0+255),f,b
  8889  012110  B4D8               	btfsc	status,2,c
  8890  012112  D006               	goto	l1214
  8891  012114  D7EF               	goto	u6250
  8892  012116                     
  8893                           ; BSR set to: 1
  8894                           
  8895                           ; BSR set to: 1
  8896  012116  90D8               	bcf	status,0,c
  8897  012118  33C6               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  8898  01211A  33C5               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  8899  01211C  33C4               	rrcf	___ftadd@f2& (0+255),f,b
  8900  01211E  2BCB               	incf	___ftadd@exp2& (0+255),f,b
  8901  012120                     l1214:
  8902                           
  8903                           ; BSR set to: 1
  8904                           
  8905                           ; BSR set to: 1
  8906  012120  51CB               	movf	___ftadd@exp2& (0+255),w,b
  8907  012122  19CC               	xorwf	___ftadd@exp1& (0+255),w,b
  8908  012124  A4D8               	btfss	status,2,c
  8909  012126  D7F7               	goto	l1215
  8910  012128                     u6280:
  8911                           
  8912                           ; BSR set to: 1
  8913                           
  8914                           ; BSR set to: 1
  8915                           
  8916                           ; BSR set to: 1
  8917  012128  AFCA               	btfss	___ftadd@sign& (0+255),7,b
  8918  01212A  D00C               	goto	l1217
  8919                           
  8920                           ; BSR set to: 1
  8921  01212C  0EFF               	movlw	255
  8922  01212E  1BC1               	xorwf	___ftadd@f1& (0+255),f,b
  8923  012130  0EFF               	movlw	255
  8924  012132  1BC2               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8925  012134  0EFF               	movlw	255
  8926  012136  1BC3               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8927  012138  0E01               	movlw	1
  8928  01213A  27C1               	addwf	___ftadd@f1& (0+255),f,b
  8929  01213C  0E00               	movlw	0
  8930  01213E  23C2               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8931  012140  0E00               	movlw	0
  8932  012142  23C3               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8933  012144                     l1217:
  8934                           
  8935                           ; BSR set to: 1
  8936  012144  ADCA               	btfss	___ftadd@sign& (0+255),6,b
  8937  012146  D00C               	goto	l1218
  8938                           
  8939                           ; BSR set to: 1
  8940  012148  0EFF               	movlw	255
  8941  01214A  1BC4               	xorwf	___ftadd@f2& (0+255),f,b
  8942  01214C  0EFF               	movlw	255
  8943  01214E  1BC5               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8944  012150  0EFF               	movlw	255
  8945  012152  1BC6               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8946  012154  0E01               	movlw	1
  8947  012156  27C4               	addwf	___ftadd@f2& (0+255),f,b
  8948  012158  0E00               	movlw	0
  8949  01215A  23C5               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8950  01215C  0E00               	movlw	0
  8951  01215E  23C6               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8952  012160                     l1218:
  8953                           
  8954                           ; BSR set to: 1
  8955                           
  8956                           ; BSR set to: 1
  8957  012160  0E00               	movlw	0
  8958  012162  6FCA               	movwf	___ftadd@sign& (0+255),b
  8959                           
  8960                           ; BSR set to: 1
  8961  012164  51C1               	movf	___ftadd@f1& (0+255),w,b
  8962  012166  27C4               	addwf	___ftadd@f2& (0+255),f,b
  8963  012168  51C2               	movf	(___ftadd@f1+1)& (0+255),w,b
  8964  01216A  23C5               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8965  01216C  51C3               	movf	(___ftadd@f1+2)& (0+255),w,b
  8966  01216E  23C6               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8967                           
  8968                           ; BSR set to: 1
  8969  012170  AFC6               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8970  012172  D00E               	goto	l1219
  8971                           
  8972                           ; BSR set to: 1
  8973  012174  0EFF               	movlw	255
  8974  012176  1BC4               	xorwf	___ftadd@f2& (0+255),f,b
  8975  012178  0EFF               	movlw	255
  8976  01217A  1BC5               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8977  01217C  0EFF               	movlw	255
  8978  01217E  1BC6               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8979  012180  0E01               	movlw	1
  8980  012182  27C4               	addwf	___ftadd@f2& (0+255),f,b
  8981  012184  0E00               	movlw	0
  8982  012186  23C5               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8983  012188  0E00               	movlw	0
  8984  01218A  23C6               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8985                           
  8986                           ; BSR set to: 1
  8987  01218C  0E01               	movlw	1
  8988  01218E  6FCA               	movwf	___ftadd@sign& (0+255),b
  8989  012190                     l1219:
  8990                           
  8991                           ; BSR set to: 1
  8992                           
  8993                           ; BSR set to: 1
  8994  012190  C1C4  F089         	movff	___ftadd@f2,___ftpack@arg
  8995  012194  C1C5  F08A         	movff	___ftadd@f2+1,___ftpack@arg+1
  8996  012198  C1C6  F08B         	movff	___ftadd@f2+2,___ftpack@arg+2
  8997  01219C  C1CC  F08C         	movff	___ftadd@exp1,___ftpack@exp
  8998  0121A0  C1CA  F08D         	movff	___ftadd@sign,___ftpack@sign
  8999  0121A4  EC07  F097         	call	___ftpack	;wreg free
  9000  0121A8  C089  F1C1         	movff	?___ftpack,?___ftadd
  9001  0121AC  C08A  F1C2         	movff	?___ftpack+1,?___ftadd+1
  9002  0121B0  C08B  F1C3         	movff	?___ftpack+2,?___ftadd+2
  9003  0121B4  0012               	return	
  9004  0121B6                     __end_of___ftadd:
  9005                           	opt stack 0
  9006                           tblptru	equ	0xFF8
  9007                           tblptrh	equ	0xFF7
  9008                           tblptrl	equ	0xFF6
  9009                           tablat	equ	0xFF5
  9010                           prodh	equ	0xFF4
  9011                           prodl	equ	0xFF3
  9012                           intcon	equ	0xFF2
  9013                           postinc0	equ	0xFEE
  9014                           wreg	equ	0xFE8
  9015                           indf2	equ	0xFDF
  9016                           postinc2	equ	0xFDE
  9017                           postdec2	equ	0xFDD
  9018                           fsr2h	equ	0xFDA
  9019                           fsr2l	equ	0xFD9
  9020                           status	equ	0xFD8
  9021                           
  9022 ;; *************** function ___ftpack *****************
  9023 ;; Defined at:
  9024 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;  arg             3   41[BANK0 ] unsigned um
  9027 ;;  exp             1   44[BANK0 ] unsigned char 
  9028 ;;  sign            1   45[BANK0 ] unsigned char 
  9029 ;; Auto vars:     Size  Location     Type
  9030 ;;		None
  9031 ;; Return value:  Size  Location     Type
  9032 ;;                  3   41[BANK0 ] float 
  9033 ;; Registers used:
  9034 ;;		wreg, status,2, status,0
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 0/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9040 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9042 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9043 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9044 ;;Total ram usage:        8 bytes
  9045 ;; Hardware stack levels used:    1
  9046 ;; Hardware stack levels required when called:   10
  9047 ;; This function calls:
  9048 ;;		Nothing
  9049 ;; This function is called by:
  9050 ;;		___ftadd
  9051 ;;		___ftmul
  9052 ;;		___lltoft
  9053 ;; This function uses a non-reentrant model
  9054 ;;
  9055                           
  9056                           	psect	text29
  9057  012E0E                     __ptext29:
  9058                           	opt stack 0
  9059  012E0E                     ___ftpack:
  9060                           	opt stack 15
  9061                           
  9062                           ;incstack = 0
  9063  012E0E  0100               	movlb	0	; () banked
  9064  012E10  518C               	movf	___ftpack@exp& (0+255),w,b
  9065  012E12  B4D8               	btfsc	status,2,c
  9066  012E14  D005               	goto	u6010
  9067                           
  9068                           ; BSR set to: 0
  9069  012E16  5189               	movf	___ftpack@arg& (0+255),w,b
  9070  012E18  118A               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  9071  012E1A  118B               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  9072  012E1C  A4D8               	btfss	status,2,c
  9073  012E1E  D00C               	goto	l1160
  9074  012E20                     u6010:
  9075                           
  9076                           ; BSR set to: 0
  9077                           
  9078                           ; BSR set to: 0
  9079  012E20  0E00               	movlw	0
  9080  012E22  6F89               	movwf	?___ftpack& (0+255),b
  9081  012E24  0E00               	movlw	0
  9082  012E26  6F8A               	movwf	(?___ftpack+1)& (0+255),b
  9083  012E28  0E00               	movlw	0
  9084  012E2A  6F8B               	movwf	(?___ftpack+2)& (0+255),b
  9085                           
  9086                           ; BSR set to: 0
  9087  012E2C  0012               	return	
  9088  012E2E                     
  9089                           ; BSR set to: 0
  9090                           
  9091                           ; BSR set to: 0
  9092  012E2E  2B8C               	incf	___ftpack@exp& (0+255),f,b
  9093  012E30  90D8               	bcf	status,0,c
  9094  012E32  338B               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9095  012E34  338A               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9096  012E36  3389               	rrcf	___ftpack@arg& (0+255),f,b
  9097  012E38                     l1160:
  9098                           
  9099                           ; BSR set to: 0
  9100                           
  9101                           ; BSR set to: 0
  9102  012E38  0E00               	movlw	0
  9103  012E3A  1589               	andwf	___ftpack@arg& (0+255),w,b
  9104  012E3C  6F8E               	movwf	??___ftpack& (0+255),b
  9105  012E3E  0E00               	movlw	0
  9106  012E40  158A               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9107  012E42  6F8F               	movwf	(??___ftpack+1)& (0+255),b
  9108  012E44  0EFE               	movlw	254
  9109  012E46  158B               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9110  012E48  6F90               	movwf	(??___ftpack+2)& (0+255),b
  9111  012E4A  518E               	movf	??___ftpack& (0+255),w,b
  9112  012E4C  118F               	iorwf	(??___ftpack+1)& (0+255),w,b
  9113  012E4E  1190               	iorwf	(??___ftpack+2)& (0+255),w,b
  9114  012E50  B4D8               	btfsc	status,2,c
  9115  012E52  D00C               	goto	l1163
  9116  012E54  D7EC               	goto	l1161
  9117  012E56                     
  9118                           ; BSR set to: 0
  9119                           
  9120                           ; BSR set to: 0
  9121  012E56  2B8C               	incf	___ftpack@exp& (0+255),f,b
  9122                           
  9123                           ; BSR set to: 0
  9124  012E58  0E01               	movlw	1
  9125  012E5A  2789               	addwf	___ftpack@arg& (0+255),f,b
  9126  012E5C  0E00               	movlw	0
  9127  012E5E  238A               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  9128  012E60  0E00               	movlw	0
  9129  012E62  238B               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  9130  012E64  90D8               	bcf	status,0,c
  9131  012E66  338B               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9132  012E68  338A               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9133  012E6A  3389               	rrcf	___ftpack@arg& (0+255),f,b
  9134  012E6C                     l1163:
  9135                           
  9136                           ; BSR set to: 0
  9137                           
  9138                           ; BSR set to: 0
  9139  012E6C  0E00               	movlw	0
  9140  012E6E  1589               	andwf	___ftpack@arg& (0+255),w,b
  9141  012E70  6F8E               	movwf	??___ftpack& (0+255),b
  9142  012E72  0E00               	movlw	0
  9143  012E74  158A               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9144  012E76  6F8F               	movwf	(??___ftpack+1)& (0+255),b
  9145  012E78  0EFF               	movlw	255
  9146  012E7A  158B               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9147  012E7C  6F90               	movwf	(??___ftpack+2)& (0+255),b
  9148  012E7E  518E               	movf	??___ftpack& (0+255),w,b
  9149  012E80  118F               	iorwf	(??___ftpack+1)& (0+255),w,b
  9150  012E82  1190               	iorwf	(??___ftpack+2)& (0+255),w,b
  9151  012E84  B4D8               	btfsc	status,2,c
  9152  012E86  D006               	goto	l1166
  9153  012E88  D7E6               	goto	l1164
  9154  012E8A                     
  9155                           ; BSR set to: 0
  9156                           
  9157                           ; BSR set to: 0
  9158  012E8A  078C               	decf	___ftpack@exp& (0+255),f,b
  9159  012E8C  90D8               	bcf	status,0,c
  9160  012E8E  3789               	rlcf	___ftpack@arg& (0+255),f,b
  9161  012E90  378A               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  9162  012E92  378B               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  9163  012E94                     l1166:
  9164                           
  9165                           ; BSR set to: 0
  9166                           
  9167                           ; BSR set to: 0
  9168  012E94  BF8A               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  9169  012E96  D003               	goto	u6050
  9170                           
  9171                           ; BSR set to: 0
  9172  012E98  0E02               	movlw	2
  9173  012E9A  618C               	cpfslt	___ftpack@exp& (0+255),b
  9174  012E9C  D7F6               	goto	l1167
  9175  012E9E                     u6050:
  9176                           
  9177                           ; BSR set to: 0
  9178                           
  9179                           ; BSR set to: 0
  9180  012E9E  A18C               	btfss	___ftpack@exp& (0+255),0,b
  9181                           
  9182                           ; BSR set to: 0
  9183  012EA0  9F8A               	bcf	(___ftpack@arg+1)& (0+255),7,b
  9184                           
  9185                           ; BSR set to: 0
  9186                           
  9187                           ; BSR set to: 0
  9188  012EA2  90D8               	bcf	status,0,c
  9189  012EA4  338C               	rrcf	___ftpack@exp& (0+255),f,b
  9190  012EA6  518C               	movf	___ftpack@exp& (0+255),w,b
  9191  012EA8  138B               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  9192                           
  9193                           ; BSR set to: 0
  9194  012EAA  518D               	movf	___ftpack@sign& (0+255),w,b
  9195  012EAC  A4D8               	btfss	status,2,c
  9196                           
  9197                           ; BSR set to: 0
  9198  012EAE  8F8B               	bsf	(___ftpack@arg+2)& (0+255),7,b
  9199                           
  9200                           ; BSR set to: 0
  9201                           
  9202                           ; BSR set to: 0
  9203  012EB0  C089  F089         	movff	___ftpack@arg,?___ftpack
  9204  012EB4  C08A  F08A         	movff	___ftpack@arg+1,?___ftpack+1
  9205  012EB8  C08B  F08B         	movff	___ftpack@arg+2,?___ftpack+2
  9206  012EBC  0012               	return	
  9207  012EBE                     __end_of___ftpack:
  9208                           	opt stack 0
  9209                           tblptru	equ	0xFF8
  9210                           tblptrh	equ	0xFF7
  9211                           tblptrl	equ	0xFF6
  9212                           tablat	equ	0xFF5
  9213                           prodh	equ	0xFF4
  9214                           prodl	equ	0xFF3
  9215                           intcon	equ	0xFF2
  9216                           postinc0	equ	0xFEE
  9217                           wreg	equ	0xFE8
  9218                           indf2	equ	0xFDF
  9219                           postinc2	equ	0xFDE
  9220                           postdec2	equ	0xFDD
  9221                           fsr2h	equ	0xFDA
  9222                           fsr2l	equ	0xFD9
  9223                           status	equ	0xFD8
  9224                           
  9225 ;; *************** function ___ftneg *****************
  9226 ;; Defined at:
  9227 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  9228 ;; Parameters:    Size  Location     Type
  9229 ;;  f1              3   41[BANK0 ] float 
  9230 ;; Auto vars:     Size  Location     Type
  9231 ;;		None
  9232 ;; Return value:  Size  Location     Type
  9233 ;;                  3   41[BANK0 ] float 
  9234 ;; Registers used:
  9235 ;;		wreg, status,2, status,0
  9236 ;; Tracked objects:
  9237 ;;		On entry : 0/0
  9238 ;;		On exit  : 0/0
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9241 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9244 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9245 ;;Total ram usage:        3 bytes
  9246 ;; Hardware stack levels used:    1
  9247 ;; Hardware stack levels required when called:   10
  9248 ;; This function calls:
  9249 ;;		Nothing
  9250 ;; This function is called by:
  9251 ;;		_printf
  9252 ;; This function uses a non-reentrant model
  9253 ;;
  9254                           
  9255                           	psect	text30
  9256  013C3A                     __ptext30:
  9257                           	opt stack 0
  9258  013C3A                     ___ftneg:
  9259                           	opt stack 17
  9260                           
  9261                           ; BSR set to: 0
  9262                           ;incstack = 0
  9263  013C3A  0100               	movlb	0	; () banked
  9264  013C3C  5189               	movf	___ftneg@f1& (0+255),w,b
  9265  013C3E  118A               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  9266  013C40  118B               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  9267  013C42  B4D8               	btfsc	status,2,c
  9268  013C44  D006               	goto	l1267
  9269                           
  9270                           ; BSR set to: 0
  9271  013C46  0E00               	movlw	0
  9272  013C48  1B89               	xorwf	___ftneg@f1& (0+255),f,b
  9273  013C4A  0E00               	movlw	0
  9274  013C4C  1B8A               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  9275  013C4E  0E80               	movlw	128
  9276  013C50  1B8B               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  9277  013C52                     l1267:
  9278                           
  9279                           ; BSR set to: 0
  9280  013C52  C089  F089         	movff	___ftneg@f1,?___ftneg
  9281  013C56  C08A  F08A         	movff	___ftneg@f1+1,?___ftneg+1
  9282  013C5A  C08B  F08B         	movff	___ftneg@f1+2,?___ftneg+2
  9283                           
  9284                           ; BSR set to: 0
  9285  013C5E  0012               	return		;funcret
  9286  013C60                     __end_of___ftneg:
  9287                           	opt stack 0
  9288                           tblptru	equ	0xFF8
  9289                           tblptrh	equ	0xFF7
  9290                           tblptrl	equ	0xFF6
  9291                           tablat	equ	0xFF5
  9292                           prodh	equ	0xFF4
  9293                           prodl	equ	0xFF3
  9294                           intcon	equ	0xFF2
  9295                           postinc0	equ	0xFEE
  9296                           wreg	equ	0xFE8
  9297                           indf2	equ	0xFDF
  9298                           postinc2	equ	0xFDE
  9299                           postdec2	equ	0xFDD
  9300                           fsr2h	equ	0xFDA
  9301                           fsr2l	equ	0xFD9
  9302                           status	equ	0xFD8
  9303                           
  9304 ;; *************** function ___ftge *****************
  9305 ;; Defined at:
  9306 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;  ff1             3   41[BANK0 ] float 
  9309 ;;  ff2             3   44[BANK0 ] float 
  9310 ;; Auto vars:     Size  Location     Type
  9311 ;;		None
  9312 ;; Return value:  Size  Location     Type
  9313 ;;		None               void
  9314 ;; Registers used:
  9315 ;;		wreg, status,2, status,0
  9316 ;; Tracked objects:
  9317 ;;		On entry : 0/0
  9318 ;;		On exit  : 0/0
  9319 ;;		Unchanged: 0/0
  9320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9321 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9323 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9324 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9325 ;;Total ram usage:        9 bytes
  9326 ;; Hardware stack levels used:    1
  9327 ;; Hardware stack levels required when called:   10
  9328 ;; This function calls:
  9329 ;;		Nothing
  9330 ;; This function is called by:
  9331 ;;		_printf
  9332 ;; This function uses a non-reentrant model
  9333 ;;
  9334                           
  9335                           	psect	text31
  9336  0130B8                     __ptext31:
  9337                           	opt stack 0
  9338  0130B8                     ___ftge:
  9339                           	opt stack 17
  9340                           
  9341                           ; BSR set to: 0
  9342                           ;incstack = 0
  9343  0130B8  0100               	movlb	0	; () banked
  9344  0130BA  AF8B               	btfss	(___ftge@ff1+2)& (0+255),7,b
  9345  0130BC  D016               	goto	l1249
  9346                           
  9347                           ; BSR set to: 0
  9348  0130BE  C089  F08F         	movff	___ftge@ff1,??___ftge
  9349  0130C2  C08A  F090         	movff	___ftge@ff1+1,??___ftge+1
  9350  0130C6  C08B  F091         	movff	___ftge@ff1+2,??___ftge+2
  9351  0130CA  1F8F               	comf	??___ftge& (0+255),f,b
  9352  0130CC  1F90               	comf	(??___ftge+1)& (0+255),f,b
  9353  0130CE  1F91               	comf	(??___ftge+2)& (0+255),f,b
  9354  0130D0  2B8F               	incf	??___ftge& (0+255),f,b
  9355  0130D2  0E00               	movlw	0
  9356  0130D4  2390               	addwfc	(??___ftge+1)& (0+255),f,b
  9357  0130D6  2391               	addwfc	(??___ftge+2)& (0+255),f,b
  9358  0130D8  0E00               	movlw	0
  9359  0130DA  258F               	addwf	??___ftge& (0+255),w,b
  9360  0130DC  6F89               	movwf	___ftge@ff1& (0+255),b
  9361  0130DE  0E00               	movlw	0
  9362  0130E0  2190               	addwfc	(??___ftge+1)& (0+255),w,b
  9363  0130E2  6F8A               	movwf	(___ftge@ff1+1)& (0+255),b
  9364  0130E4  0E80               	movlw	128
  9365  0130E6  2191               	addwfc	(??___ftge+2)& (0+255),w,b
  9366  0130E8  6F8B               	movwf	(___ftge@ff1+2)& (0+255),b
  9367  0130EA                     l1249:
  9368                           
  9369                           ; BSR set to: 0
  9370                           
  9371                           ; BSR set to: 0
  9372  0130EA  AF8E               	btfss	(___ftge@ff2+2)& (0+255),7,b
  9373  0130EC  D016               	goto	l1250
  9374                           
  9375                           ; BSR set to: 0
  9376  0130EE  C08C  F08F         	movff	___ftge@ff2,??___ftge
  9377  0130F2  C08D  F090         	movff	___ftge@ff2+1,??___ftge+1
  9378  0130F6  C08E  F091         	movff	___ftge@ff2+2,??___ftge+2
  9379  0130FA  1F8F               	comf	??___ftge& (0+255),f,b
  9380  0130FC  1F90               	comf	(??___ftge+1)& (0+255),f,b
  9381  0130FE  1F91               	comf	(??___ftge+2)& (0+255),f,b
  9382  013100  2B8F               	incf	??___ftge& (0+255),f,b
  9383  013102  0E00               	movlw	0
  9384  013104  2390               	addwfc	(??___ftge+1)& (0+255),f,b
  9385  013106  2391               	addwfc	(??___ftge+2)& (0+255),f,b
  9386  013108  0E00               	movlw	0
  9387  01310A  258F               	addwf	??___ftge& (0+255),w,b
  9388  01310C  6F8C               	movwf	___ftge@ff2& (0+255),b
  9389  01310E  0E00               	movlw	0
  9390  013110  2190               	addwfc	(??___ftge+1)& (0+255),w,b
  9391  013112  6F8D               	movwf	(___ftge@ff2+1)& (0+255),b
  9392  013114  0E80               	movlw	128
  9393  013116  2191               	addwfc	(??___ftge+2)& (0+255),w,b
  9394  013118  6F8E               	movwf	(___ftge@ff2+2)& (0+255),b
  9395  01311A                     l1250:
  9396                           
  9397                           ; BSR set to: 0
  9398                           
  9399                           ; BSR set to: 0
  9400  01311A  0E00               	movlw	0
  9401  01311C  1B89               	xorwf	___ftge@ff1& (0+255),f,b
  9402  01311E  0E00               	movlw	0
  9403  013120  1B8A               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  9404  013122  0E80               	movlw	128
  9405  013124  1B8B               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  9406                           
  9407                           ; BSR set to: 0
  9408  013126  0E00               	movlw	0
  9409  013128  1B8C               	xorwf	___ftge@ff2& (0+255),f,b
  9410  01312A  0E00               	movlw	0
  9411  01312C  1B8D               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  9412  01312E  0E80               	movlw	128
  9413  013130  1B8E               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  9414  013132  518C               	movf	___ftge@ff2& (0+255),w,b
  9415  013134  5D89               	subwf	___ftge@ff1& (0+255),w,b
  9416  013136  518D               	movf	(___ftge@ff2+1)& (0+255),w,b
  9417  013138  598A               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  9418  01313A  518E               	movf	(___ftge@ff2+2)& (0+255),w,b
  9419  01313C  598B               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  9420  01313E  B0D8               	btfsc	status,0,c
  9421  013140  D002               	goto	l5683
  9422                           
  9423                           ; BSR set to: 0
  9424  013142  90D8               	bcf	status,0,c
  9425  013144  0012               	return	
  9426  013146                     l5683:
  9427                           
  9428                           ; BSR set to: 0
  9429                           
  9430                           ; BSR set to: 0
  9431  013146  80D8               	bsf	status,0,c
  9432                           
  9433                           ; BSR set to: 0
  9434  013148  0012               	return	
  9435  01314A                     __end_of___ftge:
  9436                           	opt stack 0
  9437                           tblptru	equ	0xFF8
  9438                           tblptrh	equ	0xFF7
  9439                           tblptrl	equ	0xFF6
  9440                           tablat	equ	0xFF5
  9441                           prodh	equ	0xFF4
  9442                           prodl	equ	0xFF3
  9443                           intcon	equ	0xFF2
  9444                           postinc0	equ	0xFEE
  9445                           wreg	equ	0xFE8
  9446                           indf2	equ	0xFDF
  9447                           postinc2	equ	0xFDE
  9448                           postdec2	equ	0xFDD
  9449                           fsr2h	equ	0xFDA
  9450                           fsr2l	equ	0xFD9
  9451                           status	equ	0xFD8
  9452                           
  9453 ;; *************** function _SYSTEM_Initialize *****************
  9454 ;; Defined at:
  9455 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9456 ;; Parameters:    Size  Location     Type
  9457 ;;		None
  9458 ;; Auto vars:     Size  Location     Type
  9459 ;;		None
  9460 ;; Return value:  Size  Location     Type
  9461 ;;                  1    wreg      void 
  9462 ;; Registers used:
  9463 ;;		wreg, status,2, status,0, cstack
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9473 ;;Total ram usage:        0 bytes
  9474 ;; Hardware stack levels used:    1
  9475 ;; Hardware stack levels required when called:   12
  9476 ;; This function calls:
  9477 ;;		_ADCC_Initialize
  9478 ;;		_EUSART2_Initialize
  9479 ;;		_INTERRUPT_Initialize
  9480 ;;		_OSCILLATOR_Initialize
  9481 ;;		_PIN_MANAGER_Initialize
  9482 ;;		_PMD_Initialize
  9483 ;;		_TMR6_Initialize
  9484 ;;		_TMR7_Initialize
  9485 ;; This function is called by:
  9486 ;;		_main
  9487 ;; This function uses a non-reentrant model
  9488 ;;
  9489                           
  9490                           	psect	text32
  9491  013CF4                     __ptext32:
  9492                           	opt stack 0
  9493  013CF4                     _SYSTEM_Initialize:
  9494                           	opt stack 18
  9495                           
  9496                           ;mcc.c: 52: INTERRUPT_Initialize();
  9497                           
  9498                           ; BSR set to: 0
  9499                           ;incstack = 0
  9500  013CF4  ECEC  F09E         	call	_INTERRUPT_Initialize	;wreg free
  9501                           
  9502                           ;mcc.c: 53: PMD_Initialize();
  9503  013CF8  ECAD  F09E         	call	_PMD_Initialize	;wreg free
  9504                           
  9505                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  9506  013CFC  EC0B  F098         	call	_PIN_MANAGER_Initialize	;wreg free
  9507                           
  9508                           ;mcc.c: 55: OSCILLATOR_Initialize();
  9509  013D00  ECBB  F09E         	call	_OSCILLATOR_Initialize	;wreg free
  9510                           
  9511                           ;mcc.c: 56: TMR7_Initialize();
  9512  013D04  EC6A  F09C         	call	_TMR7_Initialize	;wreg free
  9513                           
  9514                           ;mcc.c: 57: TMR6_Initialize();
  9515  013D08  ECB5  F09D         	call	_TMR6_Initialize	;wreg free
  9516                           
  9517                           ;mcc.c: 58: ADCC_Initialize();
  9518  013D0C  ECB3  F09B         	call	_ADCC_Initialize	;wreg free
  9519                           
  9520                           ;mcc.c: 59: EUSART2_Initialize();
  9521  013D10  EC4D  F09B         	call	_EUSART2_Initialize	;wreg free
  9522  013D14  0012               	return		;funcret
  9523  013D16                     __end_of_SYSTEM_Initialize:
  9524                           	opt stack 0
  9525                           tblptru	equ	0xFF8
  9526                           tblptrh	equ	0xFF7
  9527                           tblptrl	equ	0xFF6
  9528                           tablat	equ	0xFF5
  9529                           prodh	equ	0xFF4
  9530                           prodl	equ	0xFF3
  9531                           intcon	equ	0xFF2
  9532                           postinc0	equ	0xFEE
  9533                           wreg	equ	0xFE8
  9534                           indf2	equ	0xFDF
  9535                           postinc2	equ	0xFDE
  9536                           postdec2	equ	0xFDD
  9537                           fsr2h	equ	0xFDA
  9538                           fsr2l	equ	0xFD9
  9539                           status	equ	0xFD8
  9540                           
  9541 ;; *************** function _TMR7_Initialize *****************
  9542 ;; Defined at:
  9543 ;;		line 64 in file "mcc_generated_files/tmr7.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;		None
  9546 ;; Auto vars:     Size  Location     Type
  9547 ;;		None
  9548 ;; Return value:  Size  Location     Type
  9549 ;;                  1    wreg      void 
  9550 ;; Registers used:
  9551 ;;		wreg, status,2, status,0, cstack
  9552 ;; Tracked objects:
  9553 ;;		On entry : 0/0
  9554 ;;		On exit  : 0/0
  9555 ;;		Unchanged: 0/0
  9556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9559 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9560 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9561 ;;Total ram usage:        2 bytes
  9562 ;; Hardware stack levels used:    1
  9563 ;; Hardware stack levels required when called:   11
  9564 ;; This function calls:
  9565 ;;		_TMR7_SetInterruptHandler
  9566 ;; This function is called by:
  9567 ;;		_SYSTEM_Initialize
  9568 ;; This function uses a non-reentrant model
  9569 ;;
  9570                           
  9571                           	psect	text33
  9572  0138D4                     __ptext33:
  9573                           	opt stack 0
  9574  0138D4                     _TMR7_Initialize:
  9575                           	opt stack 18
  9576                           
  9577                           ;tmr7.c: 69: T7GCON = 0x00;
  9578                           
  9579                           ;incstack = 0
  9580  0138D4  0E00               	movlw	0
  9581  0138D6  010F               	movlb	15	; () banked
  9582  0138D8  6F31               	movwf	49,b	;volatile
  9583                           
  9584                           ;tmr7.c: 72: T7GATE = 0x00;
  9585  0138DA  0E00               	movlw	0
  9586  0138DC  6F32               	movwf	50,b	;volatile
  9587                           
  9588                           ;tmr7.c: 75: T7CLK = 0x03;
  9589  0138DE  0E03               	movlw	3
  9590  0138E0  6F33               	movwf	51,b	;volatile
  9591                           
  9592                           ;tmr7.c: 78: TMR7H = 0x02;
  9593  0138E2  0E02               	movlw	2
  9594  0138E4  6F2F               	movwf	47,b	;volatile
  9595                           
  9596                           ;tmr7.c: 81: TMR7L = 0x18;
  9597  0138E6  0E18               	movlw	24
  9598  0138E8  6F2E               	movwf	46,b	;volatile
  9599                           
  9600                           ; BSR set to: 15
  9601                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
  9602  0138EA  512E               	movf	46,w,b	;volatile
  9603  0138EC  CF2F F08C          	movff	3887,??_TMR7_Initialize	;volatile
  9604  0138F0  0100               	movlb	0	; () banked
  9605  0138F2  6B8D               	clrf	(??_TMR7_Initialize+1)& (0+255),b
  9606  0138F4  C08C  F08D         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
  9607  0138F8  6B8C               	clrf	??_TMR7_Initialize& (0+255),b
  9608  0138FA  118C               	iorwf	??_TMR7_Initialize& (0+255),w,b
  9609  0138FC  6FCC               	movwf	_timer7ReloadVal& (0+255),b	;volatile
  9610  0138FE  518D               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
  9611  013900  6FCD               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
  9612                           
  9613                           ; BSR set to: 0
  9614                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
  9615  013902  010E               	movlb	14	; () banked
  9616  013904  9D38               	bcf	56,6,b	;volatile
  9617                           
  9618                           ; BSR set to: 14
  9619                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
  9620  013906  8D2E               	bsf	46,6,b	;volatile
  9621                           
  9622                           ; BSR set to: 14
  9623                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
  9624  013908  0E60               	movlw	low _TMR7_DefaultInterruptHandler
  9625  01390A  0100               	movlb	0	; () banked
  9626  01390C  6F89               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  9627  01390E  0E3E               	movlw	high _TMR7_DefaultInterruptHandler
  9628  013910  6F8A               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9629  013912  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
  9630  013914  6F8B               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9631  013916  ECFB  F09E         	call	_TMR7_SetInterruptHandler	;wreg free
  9632                           
  9633                           ;tmr7.c: 96: T7CON = 0x21;
  9634  01391A  0E21               	movlw	33
  9635  01391C  010F               	movlb	15	; () banked
  9636  01391E  6F30               	movwf	48,b	;volatile
  9637                           
  9638                           ; BSR set to: 15
  9639  013920  0012               	return		;funcret
  9640  013922                     __end_of_TMR7_Initialize:
  9641                           	opt stack 0
  9642                           tblptru	equ	0xFF8
  9643                           tblptrh	equ	0xFF7
  9644                           tblptrl	equ	0xFF6
  9645                           tablat	equ	0xFF5
  9646                           prodh	equ	0xFF4
  9647                           prodl	equ	0xFF3
  9648                           intcon	equ	0xFF2
  9649                           postinc0	equ	0xFEE
  9650                           wreg	equ	0xFE8
  9651                           indf2	equ	0xFDF
  9652                           postinc2	equ	0xFDE
  9653                           postdec2	equ	0xFDD
  9654                           fsr2h	equ	0xFDA
  9655                           fsr2l	equ	0xFD9
  9656                           status	equ	0xFD8
  9657                           
  9658 ;; *************** function _TMR7_SetInterruptHandler *****************
  9659 ;; Defined at:
  9660 ;;		line 178 in file "mcc_generated_files/tmr7.c"
  9661 ;; Parameters:    Size  Location     Type
  9662 ;;  InterruptHan    3   41[BANK0 ] PTR FTN()void 
  9663 ;;		 -> TMR7_DefaultInterruptHandler(1), acquisitionTimerCallback(1), 
  9664 ;; Auto vars:     Size  Location     Type
  9665 ;;		None
  9666 ;; Return value:  Size  Location     Type
  9667 ;;                  1    wreg      void 
  9668 ;; Registers used:
  9669 ;;		wreg, status,2, status,0
  9670 ;; Tracked objects:
  9671 ;;		On entry : 0/0
  9672 ;;		On exit  : 0/0
  9673 ;;		Unchanged: 0/0
  9674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9675 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9678 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9679 ;;Total ram usage:        3 bytes
  9680 ;; Hardware stack levels used:    1
  9681 ;; Hardware stack levels required when called:   10
  9682 ;; This function calls:
  9683 ;;		Nothing
  9684 ;; This function is called by:
  9685 ;;		_main
  9686 ;;		_TMR7_Initialize
  9687 ;; This function uses a non-reentrant model
  9688 ;;
  9689                           
  9690                           	psect	text34
  9691  013DF6                     __ptext34:
  9692                           	opt stack 0
  9693  013DF6                     _TMR7_SetInterruptHandler:
  9694                           	opt stack 20
  9695                           
  9696                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
  9697                           
  9698                           ; BSR set to: 15
  9699                           ;incstack = 0
  9700  013DF6  C089  F0B7         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
  9701  013DFA  C08A  F0B8         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
  9702  013DFE  C08B  F0B9         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
  9703  013E02  0012               	return		;funcret
  9704  013E04                     __end_of_TMR7_SetInterruptHandler:
  9705                           	opt stack 0
  9706                           tblptru	equ	0xFF8
  9707                           tblptrh	equ	0xFF7
  9708                           tblptrl	equ	0xFF6
  9709                           tablat	equ	0xFF5
  9710                           prodh	equ	0xFF4
  9711                           prodl	equ	0xFF3
  9712                           intcon	equ	0xFF2
  9713                           postinc0	equ	0xFEE
  9714                           wreg	equ	0xFE8
  9715                           indf2	equ	0xFDF
  9716                           postinc2	equ	0xFDE
  9717                           postdec2	equ	0xFDD
  9718                           fsr2h	equ	0xFDA
  9719                           fsr2l	equ	0xFD9
  9720                           status	equ	0xFD8
  9721                           
  9722 ;; *************** function _TMR6_Initialize *****************
  9723 ;; Defined at:
  9724 ;;		line 64 in file "mcc_generated_files/tmr6.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;		None
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;		None
  9729 ;; Return value:  Size  Location     Type
  9730 ;;                  1    wreg      void 
  9731 ;; Registers used:
  9732 ;;		wreg, status,2, status,0, cstack
  9733 ;; Tracked objects:
  9734 ;;		On entry : 0/0
  9735 ;;		On exit  : 0/0
  9736 ;;		Unchanged: 0/0
  9737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9742 ;;Total ram usage:        0 bytes
  9743 ;; Hardware stack levels used:    1
  9744 ;; Hardware stack levels required when called:   11
  9745 ;; This function calls:
  9746 ;;		_TMR6_SetInterruptHandler
  9747 ;; This function is called by:
  9748 ;;		_SYSTEM_Initialize
  9749 ;; This function uses a non-reentrant model
  9750 ;;
  9751                           
  9752                           	psect	text35
  9753  013B6A                     __ptext35:
  9754                           	opt stack 0
  9755  013B6A                     _TMR6_Initialize:
  9756                           	opt stack 18
  9757                           
  9758                           ;tmr6.c: 69: T6CLKCON = 0x04;
  9759                           
  9760                           ;incstack = 0
  9761  013B6A  0E04               	movlw	4
  9762  013B6C  6EB3               	movwf	4019,c	;volatile
  9763                           
  9764                           ;tmr6.c: 72: T6HLT = 0x20;
  9765  013B6E  0E20               	movlw	32
  9766  013B70  6EB2               	movwf	4018,c	;volatile
  9767                           
  9768                           ;tmr6.c: 75: T6RST = 0x00;
  9769  013B72  0E00               	movlw	0
  9770  013B74  6EB4               	movwf	4020,c	;volatile
  9771                           
  9772                           ;tmr6.c: 78: T6PR = 0xF1;
  9773  013B76  0EF1               	movlw	241
  9774  013B78  6EB0               	movwf	4016,c	;volatile
  9775                           
  9776                           ;tmr6.c: 81: T6TMR = 0x00;
  9777  013B7A  0E00               	movlw	0
  9778  013B7C  6EAF               	movwf	4015,c	;volatile
  9779                           
  9780                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
  9781  013B7E  010E               	movlb	14	; () banked
  9782  013B80  9B38               	bcf	56,5,b	;volatile
  9783                           
  9784                           ; BSR set to: 14
  9785                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
  9786  013B82  8B2E               	bsf	46,5,b	;volatile
  9787                           
  9788                           ; BSR set to: 14
  9789                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
  9790  013B84  0E62               	movlw	low _TMR6_DefaultInterruptHandler
  9791  013B86  0100               	movlb	0	; () banked
  9792  013B88  6F89               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  9793  013B8A  0E3E               	movlw	high _TMR6_DefaultInterruptHandler
  9794  013B8C  6F8A               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9795  013B8E  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
  9796  013B90  6F8B               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9797  013B92  EC02  F09F         	call	_TMR6_SetInterruptHandler	;wreg free
  9798                           
  9799                           ;tmr6.c: 93: T6CON = 0xBF;
  9800  013B96  0EBF               	movlw	191
  9801  013B98  6EB1               	movwf	4017,c	;volatile
  9802  013B9A  0012               	return		;funcret
  9803  013B9C                     __end_of_TMR6_Initialize:
  9804                           	opt stack 0
  9805                           tblptru	equ	0xFF8
  9806                           tblptrh	equ	0xFF7
  9807                           tblptrl	equ	0xFF6
  9808                           tablat	equ	0xFF5
  9809                           prodh	equ	0xFF4
  9810                           prodl	equ	0xFF3
  9811                           intcon	equ	0xFF2
  9812                           postinc0	equ	0xFEE
  9813                           wreg	equ	0xFE8
  9814                           indf2	equ	0xFDF
  9815                           postinc2	equ	0xFDE
  9816                           postdec2	equ	0xFDD
  9817                           fsr2h	equ	0xFDA
  9818                           fsr2l	equ	0xFD9
  9819                           status	equ	0xFD8
  9820                           
  9821 ;; *************** function _TMR6_SetInterruptHandler *****************
  9822 ;; Defined at:
  9823 ;;		line 178 in file "mcc_generated_files/tmr6.c"
  9824 ;; Parameters:    Size  Location     Type
  9825 ;;  InterruptHan    3   41[BANK0 ] PTR FTN()void 
  9826 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;		None
  9829 ;; Return value:  Size  Location     Type
  9830 ;;                  1    wreg      void 
  9831 ;; Registers used:
  9832 ;;		wreg, status,2, status,0
  9833 ;; Tracked objects:
  9834 ;;		On entry : 0/0
  9835 ;;		On exit  : 0/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9838 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9841 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9842 ;;Total ram usage:        3 bytes
  9843 ;; Hardware stack levels used:    1
  9844 ;; Hardware stack levels required when called:   10
  9845 ;; This function calls:
  9846 ;;		Nothing
  9847 ;; This function is called by:
  9848 ;;		_TMR6_Initialize
  9849 ;;		_main
  9850 ;; This function uses a non-reentrant model
  9851 ;;
  9852                           
  9853                           	psect	text36
  9854  013E04                     __ptext36:
  9855                           	opt stack 0
  9856  013E04                     _TMR6_SetInterruptHandler:
  9857                           	opt stack 20
  9858                           
  9859                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
  9860                           
  9861                           ;incstack = 0
  9862  013E04  C089  F0C3         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  9863  013E08  C08A  F0C4         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  9864  013E0C  C08B  F0C5         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
  9865  013E10  0012               	return		;funcret
  9866  013E12                     __end_of_TMR6_SetInterruptHandler:
  9867                           	opt stack 0
  9868                           tblptru	equ	0xFF8
  9869                           tblptrh	equ	0xFF7
  9870                           tblptrl	equ	0xFF6
  9871                           tablat	equ	0xFF5
  9872                           prodh	equ	0xFF4
  9873                           prodl	equ	0xFF3
  9874                           intcon	equ	0xFF2
  9875                           postinc0	equ	0xFEE
  9876                           wreg	equ	0xFE8
  9877                           indf2	equ	0xFDF
  9878                           postinc2	equ	0xFDE
  9879                           postdec2	equ	0xFDD
  9880                           fsr2h	equ	0xFDA
  9881                           fsr2l	equ	0xFD9
  9882                           status	equ	0xFD8
  9883                           
  9884 ;; *************** function _PMD_Initialize *****************
  9885 ;; Defined at:
  9886 ;;		line 80 in file "mcc_generated_files/mcc.c"
  9887 ;; Parameters:    Size  Location     Type
  9888 ;;		None
  9889 ;; Auto vars:     Size  Location     Type
  9890 ;;		None
  9891 ;; Return value:  Size  Location     Type
  9892 ;;                  1    wreg      void 
  9893 ;; Registers used:
  9894 ;;		wreg, status,2
  9895 ;; Tracked objects:
  9896 ;;		On entry : 0/0
  9897 ;;		On exit  : 0/0
  9898 ;;		Unchanged: 0/0
  9899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9904 ;;Total ram usage:        0 bytes
  9905 ;; Hardware stack levels used:    1
  9906 ;; Hardware stack levels required when called:   10
  9907 ;; This function calls:
  9908 ;;		Nothing
  9909 ;; This function is called by:
  9910 ;;		_SYSTEM_Initialize
  9911 ;; This function uses a non-reentrant model
  9912 ;;
  9913                           
  9914                           	psect	text37
  9915  013D5A                     __ptext37:
  9916                           	opt stack 0
  9917  013D5A                     _PMD_Initialize:
  9918                           	opt stack 19
  9919                           
  9920                           ;mcc.c: 83: PMD0 = 0x00;
  9921                           
  9922                           ;incstack = 0
  9923  013D5A  0E00               	movlw	0
  9924  013D5C  010E               	movlb	14	; () banked
  9925  013D5E  6F4C               	movwf	76,b	;volatile
  9926                           
  9927                           ;mcc.c: 85: PMD1 = 0x00;
  9928  013D60  0E00               	movlw	0
  9929  013D62  6F4D               	movwf	77,b	;volatile
  9930                           
  9931                           ;mcc.c: 87: PMD2 = 0x00;
  9932  013D64  0E00               	movlw	0
  9933  013D66  6F4E               	movwf	78,b	;volatile
  9934                           
  9935                           ;mcc.c: 89: PMD3 = 0x00;
  9936  013D68  0E00               	movlw	0
  9937  013D6A  6F4F               	movwf	79,b	;volatile
  9938                           
  9939                           ;mcc.c: 91: PMD4 = 0x00;
  9940  013D6C  0E00               	movlw	0
  9941  013D6E  6F50               	movwf	80,b	;volatile
  9942                           
  9943                           ;mcc.c: 93: PMD5 = 0x00;
  9944  013D70  0E00               	movlw	0
  9945  013D72  6F51               	movwf	81,b	;volatile
  9946                           
  9947                           ; BSR set to: 14
  9948  013D74  0012               	return		;funcret
  9949  013D76                     __end_of_PMD_Initialize:
  9950                           	opt stack 0
  9951                           tblptru	equ	0xFF8
  9952                           tblptrh	equ	0xFF7
  9953                           tblptrl	equ	0xFF6
  9954                           tablat	equ	0xFF5
  9955                           prodh	equ	0xFF4
  9956                           prodl	equ	0xFF3
  9957                           intcon	equ	0xFF2
  9958                           postinc0	equ	0xFEE
  9959                           wreg	equ	0xFE8
  9960                           indf2	equ	0xFDF
  9961                           postinc2	equ	0xFDE
  9962                           postdec2	equ	0xFDD
  9963                           fsr2h	equ	0xFDA
  9964                           fsr2l	equ	0xFD9
  9965                           status	equ	0xFD8
  9966                           
  9967 ;; *************** function _PIN_MANAGER_Initialize *****************
  9968 ;; Defined at:
  9969 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  9970 ;; Parameters:    Size  Location     Type
  9971 ;;		None
  9972 ;; Auto vars:     Size  Location     Type
  9973 ;;		None
  9974 ;; Return value:  Size  Location     Type
  9975 ;;                  1    wreg      void 
  9976 ;; Registers used:
  9977 ;;		wreg, status,2
  9978 ;; Tracked objects:
  9979 ;;		On entry : 0/0
  9980 ;;		On exit  : 0/0
  9981 ;;		Unchanged: 0/0
  9982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9987 ;;Total ram usage:        0 bytes
  9988 ;; Hardware stack levels used:    1
  9989 ;; Hardware stack levels required when called:   10
  9990 ;; This function calls:
  9991 ;;		Nothing
  9992 ;; This function is called by:
  9993 ;;		_SYSTEM_Initialize
  9994 ;; This function uses a non-reentrant model
  9995 ;;
  9996                           
  9997                           	psect	text38
  9998  013016                     __ptext38:
  9999                           	opt stack 0
 10000  013016                     _PIN_MANAGER_Initialize:
 10001                           	opt stack 19
 10002                           
 10003                           ;pin_manager.c: 62: LATE = 0x00;
 10004                           
 10005                           ; BSR set to: 14
 10006                           ;incstack = 0
 10007  013016  0E00               	movlw	0
 10008  013018  6E7D               	movwf	3965,c	;volatile
 10009                           
 10010                           ;pin_manager.c: 63: LATD = 0x00;
 10011  01301A  0E00               	movlw	0
 10012  01301C  6E7C               	movwf	3964,c	;volatile
 10013                           
 10014                           ;pin_manager.c: 64: LATA = 0x00;
 10015  01301E  0E00               	movlw	0
 10016  013020  6E79               	movwf	3961,c	;volatile
 10017                           
 10018                           ;pin_manager.c: 65: LATF = 0x00;
 10019  013022  0E00               	movlw	0
 10020  013024  6E7E               	movwf	3966,c	;volatile
 10021                           
 10022                           ;pin_manager.c: 66: LATB = 0x00;
 10023  013026  0E00               	movlw	0
 10024  013028  6E7A               	movwf	3962,c	;volatile
 10025                           
 10026                           ;pin_manager.c: 67: LATG = 0x00;
 10027  01302A  0E00               	movlw	0
 10028  01302C  6E7F               	movwf	3967,c	;volatile
 10029                           
 10030                           ;pin_manager.c: 68: LATC = 0x00;
 10031  01302E  0E00               	movlw	0
 10032  013030  6E7B               	movwf	3963,c	;volatile
 10033                           
 10034                           ;pin_manager.c: 69: LATH = 0x00;
 10035  013032  0E00               	movlw	0
 10036  013034  6E80               	movwf	3968,c	;volatile
 10037                           
 10038                           ;pin_manager.c: 74: TRISE = 0xFF;
 10039  013036  6885               	setf	3973,c	;volatile
 10040                           
 10041                           ;pin_manager.c: 75: TRISF = 0xF0;
 10042  013038  0EF0               	movlw	240
 10043  01303A  6E86               	movwf	3974,c	;volatile
 10044                           
 10045                           ;pin_manager.c: 76: TRISA = 0xFF;
 10046  01303C  6881               	setf	3969,c	;volatile
 10047                           
 10048                           ;pin_manager.c: 77: TRISG = 0x5C;
 10049  01303E  0E5C               	movlw	92
 10050  013040  6E87               	movwf	3975,c	;volatile
 10051                           
 10052                           ;pin_manager.c: 78: TRISB = 0xFF;
 10053  013042  6882               	setf	3970,c	;volatile
 10054                           
 10055                           ;pin_manager.c: 79: TRISH = 0x0F;
 10056  013044  0E0F               	movlw	15
 10057  013046  6E88               	movwf	3976,c	;volatile
 10058                           
 10059                           ;pin_manager.c: 80: TRISC = 0xFF;
 10060  013048  6883               	setf	3971,c	;volatile
 10061                           
 10062                           ;pin_manager.c: 81: TRISD = 0xFF;
 10063  01304A  6884               	setf	3972,c	;volatile
 10064                           
 10065                           ;pin_manager.c: 86: ANSELD = 0xFF;
 10066  01304C  010E               	movlb	14	; () banked
 10067  01304E  69A7               	setf	167,b	;volatile
 10068                           
 10069                           ; BSR set to: 14
 10070                           ;pin_manager.c: 87: ANSELB = 0xFF;
 10071  013050  699A               	setf	154,b	;volatile
 10072                           
 10073                           ; BSR set to: 14
 10074                           ;pin_manager.c: 88: ANSELE = 0xFF;
 10075  013052  69AF               	setf	175,b	;volatile
 10076                           
 10077                           ;pin_manager.c: 89: ANSELG = 0x3C;
 10078  013054  0E3C               	movlw	60
 10079  013056  6FBC               	movwf	188,b	;volatile
 10080                           
 10081                           ;pin_manager.c: 90: ANSELF = 0xF0;
 10082  013058  0EF0               	movlw	240
 10083  01305A  6FB4               	movwf	180,b	;volatile
 10084                           
 10085                           ; BSR set to: 14
 10086                           ;pin_manager.c: 91: ANSELA = 0xFF;
 10087  01305C  6992               	setf	146,b	;volatile
 10088                           
 10089                           ;pin_manager.c: 96: WPUD = 0x00;
 10090  01305E  0E00               	movlw	0
 10091  013060  6FA6               	movwf	166,b	;volatile
 10092                           
 10093                           ;pin_manager.c: 97: WPUF = 0x00;
 10094  013062  0E00               	movlw	0
 10095  013064  6FB3               	movwf	179,b	;volatile
 10096                           
 10097                           ;pin_manager.c: 98: WPUE = 0x00;
 10098  013066  0E00               	movlw	0
 10099  013068  6FAE               	movwf	174,b	;volatile
 10100                           
 10101                           ;pin_manager.c: 99: WPUB = 0x00;
 10102  01306A  0E00               	movlw	0
 10103  01306C  6F99               	movwf	153,b	;volatile
 10104                           
 10105                           ;pin_manager.c: 100: WPUG = 0x00;
 10106  01306E  0E00               	movlw	0
 10107  013070  6FBB               	movwf	187,b	;volatile
 10108                           
 10109                           ;pin_manager.c: 101: WPUA = 0x00;
 10110  013072  0E00               	movlw	0
 10111  013074  6F91               	movwf	145,b	;volatile
 10112                           
 10113                           ;pin_manager.c: 102: WPUC = 0x00;
 10114  013076  0E00               	movlw	0
 10115  013078  6FA1               	movwf	161,b	;volatile
 10116                           
 10117                           ;pin_manager.c: 103: WPUH = 0x00;
 10118  01307A  0E00               	movlw	0
 10119  01307C  6FC0               	movwf	192,b	;volatile
 10120                           
 10121                           ;pin_manager.c: 108: ODCONE = 0x00;
 10122  01307E  0E00               	movlw	0
 10123  013080  6FAD               	movwf	173,b	;volatile
 10124                           
 10125                           ;pin_manager.c: 109: ODCONF = 0x01;
 10126  013082  0E01               	movlw	1
 10127  013084  6FB2               	movwf	178,b	;volatile
 10128                           
 10129                           ;pin_manager.c: 110: ODCONA = 0x00;
 10130  013086  0E00               	movlw	0
 10131  013088  6F90               	movwf	144,b	;volatile
 10132                           
 10133                           ;pin_manager.c: 111: ODCONG = 0x00;
 10134  01308A  0E00               	movlw	0
 10135  01308C  6FBA               	movwf	186,b	;volatile
 10136                           
 10137                           ;pin_manager.c: 112: ODCONB = 0x00;
 10138  01308E  0E00               	movlw	0
 10139  013090  6F98               	movwf	152,b	;volatile
 10140                           
 10141                           ;pin_manager.c: 113: ODCONH = 0x00;
 10142  013092  0E00               	movlw	0
 10143  013094  6FBF               	movwf	191,b	;volatile
 10144                           
 10145                           ;pin_manager.c: 114: ODCONC = 0x00;
 10146  013096  0E00               	movlw	0
 10147  013098  6FA0               	movwf	160,b	;volatile
 10148                           
 10149                           ;pin_manager.c: 115: ODCOND = 0x00;
 10150  01309A  0E00               	movlw	0
 10151  01309C  6FA5               	movwf	165,b	;volatile
 10152                           
 10153                           ; BSR set to: 14
 10154                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 10155  01309E  698F               	setf	143,b	;volatile
 10156                           
 10157                           ; BSR set to: 14
 10158                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 10159  0130A0  6997               	setf	151,b	;volatile
 10160                           
 10161                           ; BSR set to: 14
 10162                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 10163  0130A2  699F               	setf	159,b	;volatile
 10164                           
 10165                           ; BSR set to: 14
 10166                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 10167  0130A4  69A4               	setf	164,b	;volatile
 10168                           
 10169                           ; BSR set to: 14
 10170                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 10171  0130A6  69AC               	setf	172,b	;volatile
 10172                           
 10173                           ; BSR set to: 14
 10174                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 10175  0130A8  69B1               	setf	177,b	;volatile
 10176                           
 10177                           ; BSR set to: 14
 10178                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 10179  0130AA  69B9               	setf	185,b	;volatile
 10180                           
 10181                           ; BSR set to: 14
 10182                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 10183  0130AC  69BE               	setf	190,b	;volatile
 10184                           
 10185                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 10186  0130AE  0E0E               	movlw	14
 10187  0130B0  6F89               	movwf	137,b	;volatile
 10188                           
 10189                           ;pin_manager.c: 137: RX2PPS = 0x36;
 10190  0130B2  0E36               	movlw	54
 10191  0130B4  6F11               	movwf	17,b	;volatile
 10192                           
 10193                           ; BSR set to: 14
 10194  0130B6  0012               	return		;funcret
 10195  0130B8                     __end_of_PIN_MANAGER_Initialize:
 10196                           	opt stack 0
 10197                           tblptru	equ	0xFF8
 10198                           tblptrh	equ	0xFF7
 10199                           tblptrl	equ	0xFF6
 10200                           tablat	equ	0xFF5
 10201                           prodh	equ	0xFF4
 10202                           prodl	equ	0xFF3
 10203                           intcon	equ	0xFF2
 10204                           postinc0	equ	0xFEE
 10205                           wreg	equ	0xFE8
 10206                           indf2	equ	0xFDF
 10207                           postinc2	equ	0xFDE
 10208                           postdec2	equ	0xFDD
 10209                           fsr2h	equ	0xFDA
 10210                           fsr2l	equ	0xFD9
 10211                           status	equ	0xFD8
 10212                           
 10213 ;; *************** function _OSCILLATOR_Initialize *****************
 10214 ;; Defined at:
 10215 ;;		line 62 in file "mcc_generated_files/mcc.c"
 10216 ;; Parameters:    Size  Location     Type
 10217 ;;		None
 10218 ;; Auto vars:     Size  Location     Type
 10219 ;;		None
 10220 ;; Return value:  Size  Location     Type
 10221 ;;                  1    wreg      void 
 10222 ;; Registers used:
 10223 ;;		wreg, status,2
 10224 ;; Tracked objects:
 10225 ;;		On entry : 0/0
 10226 ;;		On exit  : 0/0
 10227 ;;		Unchanged: 0/0
 10228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10233 ;;Total ram usage:        0 bytes
 10234 ;; Hardware stack levels used:    1
 10235 ;; Hardware stack levels required when called:   10
 10236 ;; This function calls:
 10237 ;;		Nothing
 10238 ;; This function is called by:
 10239 ;;		_SYSTEM_Initialize
 10240 ;; This function uses a non-reentrant model
 10241 ;;
 10242                           
 10243                           	psect	text39
 10244  013D76                     __ptext39:
 10245                           	opt stack 0
 10246  013D76                     _OSCILLATOR_Initialize:
 10247                           	opt stack 19
 10248                           
 10249                           ;mcc.c: 65: OSCCON1 = 0x20;
 10250                           
 10251                           ; BSR set to: 14
 10252                           ;incstack = 0
 10253  013D76  0E20               	movlw	32
 10254  013D78  010E               	movlb	14	; () banked
 10255  013D7A  6F43               	movwf	67,b	;volatile
 10256                           
 10257                           ;mcc.c: 67: OSCCON3 = 0x00;
 10258  013D7C  0E00               	movlw	0
 10259  013D7E  6F45               	movwf	69,b	;volatile
 10260                           
 10261                           ;mcc.c: 69: OSCEN = 0x00;
 10262  013D80  0E00               	movlw	0
 10263  013D82  6F47               	movwf	71,b	;volatile
 10264                           
 10265                           ;mcc.c: 71: OSCFRQ = 0x02;
 10266  013D84  0E02               	movlw	2
 10267  013D86  6F49               	movwf	73,b	;volatile
 10268                           
 10269                           ;mcc.c: 73: OSCTUNE = 0x00;
 10270  013D88  0E00               	movlw	0
 10271  013D8A  6F48               	movwf	72,b	;volatile
 10272  013D8C                     
 10273                           ; BSR set to: 14
 10274                           
 10275                           ; BSR set to: 14
 10276                           ;mcc.c: 76: {
 10277  013D8C  B146               	btfsc	70,0,b	;volatile
 10278  013D8E  0012               	return	
 10279  013D90  D7FD               	goto	l51
 10280  013D92                     __end_of_OSCILLATOR_Initialize:
 10281                           	opt stack 0
 10282                           tblptru	equ	0xFF8
 10283                           tblptrh	equ	0xFF7
 10284                           tblptrl	equ	0xFF6
 10285                           tablat	equ	0xFF5
 10286                           prodh	equ	0xFF4
 10287                           prodl	equ	0xFF3
 10288                           intcon	equ	0xFF2
 10289                           postinc0	equ	0xFEE
 10290                           wreg	equ	0xFE8
 10291                           indf2	equ	0xFDF
 10292                           postinc2	equ	0xFDE
 10293                           postdec2	equ	0xFDD
 10294                           fsr2h	equ	0xFDA
 10295                           fsr2l	equ	0xFD9
 10296                           status	equ	0xFD8
 10297                           
 10298 ;; *************** function _INTERRUPT_Initialize *****************
 10299 ;; Defined at:
 10300 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10301 ;; Parameters:    Size  Location     Type
 10302 ;;		None
 10303 ;; Auto vars:     Size  Location     Type
 10304 ;;		None
 10305 ;; Return value:  Size  Location     Type
 10306 ;;                  1    wreg      void 
 10307 ;; Registers used:
 10308 ;;		None
 10309 ;; Tracked objects:
 10310 ;;		On entry : 0/0
 10311 ;;		On exit  : 0/0
 10312 ;;		Unchanged: 0/0
 10313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10318 ;;Total ram usage:        0 bytes
 10319 ;; Hardware stack levels used:    1
 10320 ;; Hardware stack levels required when called:   10
 10321 ;; This function calls:
 10322 ;;		Nothing
 10323 ;; This function is called by:
 10324 ;;		_SYSTEM_Initialize
 10325 ;; This function uses a non-reentrant model
 10326 ;;
 10327                           
 10328                           	psect	text40
 10329  013DD8                     __ptext40:
 10330                           	opt stack 0
 10331  013DD8                     _INTERRUPT_Initialize:
 10332                           	opt stack 19
 10333                           
 10334                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 10335                           
 10336                           ; BSR set to: 14
 10337                           ;incstack = 0
 10338  013DD8  8AF2               	bsf	intcon,5,c	;volatile
 10339                           
 10340                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 10341  013DDA  010E               	movlb	14	; () banked
 10342  013DDC  8F22               	bsf	34,7,b	;volatile
 10343                           
 10344                           ;interrupt_manager.c: 63: IPR1bits.ADIP = 1;
 10345  013DDE  8120               	bsf	32,0,b	;volatile
 10346                           
 10347                           ;interrupt_manager.c: 67: IPR5bits.TMR6IP = 0;
 10348  013DE0  9B24               	bcf	36,5,b	;volatile
 10349                           
 10350                           ;interrupt_manager.c: 70: IPR3bits.TX2IP = 0;
 10351  013DE2  9D22               	bcf	34,6,b	;volatile
 10352                           
 10353                           ;interrupt_manager.c: 73: IPR5bits.TMR7IP = 0;
 10354  013DE4  9D24               	bcf	36,6,b	;volatile
 10355                           
 10356                           ; BSR set to: 14
 10357  013DE6  0012               	return		;funcret
 10358  013DE8                     __end_of_INTERRUPT_Initialize:
 10359                           	opt stack 0
 10360                           tblptru	equ	0xFF8
 10361                           tblptrh	equ	0xFF7
 10362                           tblptrl	equ	0xFF6
 10363                           tablat	equ	0xFF5
 10364                           prodh	equ	0xFF4
 10365                           prodl	equ	0xFF3
 10366                           intcon	equ	0xFF2
 10367                           postinc0	equ	0xFEE
 10368                           wreg	equ	0xFE8
 10369                           indf2	equ	0xFDF
 10370                           postinc2	equ	0xFDE
 10371                           postdec2	equ	0xFDD
 10372                           fsr2h	equ	0xFDA
 10373                           fsr2l	equ	0xFD9
 10374                           status	equ	0xFD8
 10375                           
 10376 ;; *************** function _EUSART2_Initialize *****************
 10377 ;; Defined at:
 10378 ;;		line 77 in file "mcc_generated_files/eusart2.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;		None
 10381 ;; Auto vars:     Size  Location     Type
 10382 ;;		None
 10383 ;; Return value:  Size  Location     Type
 10384 ;;                  1    wreg      void 
 10385 ;; Registers used:
 10386 ;;		wreg, status,2, status,0, cstack
 10387 ;; Tracked objects:
 10388 ;;		On entry : 0/0
 10389 ;;		On exit  : 0/0
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10396 ;;Total ram usage:        0 bytes
 10397 ;; Hardware stack levels used:    1
 10398 ;; Hardware stack levels required when called:   11
 10399 ;; This function calls:
 10400 ;;		_EUSART2_SetRxInterruptHandler
 10401 ;;		_EUSART2_SetTxInterruptHandler
 10402 ;; This function is called by:
 10403 ;;		_SYSTEM_Initialize
 10404 ;; This function uses a non-reentrant model
 10405 ;;
 10406                           
 10407                           	psect	text41
 10408  01369A                     __ptext41:
 10409                           	opt stack 0
 10410  01369A                     _EUSART2_Initialize:
 10411                           	opt stack 18
 10412                           
 10413                           ;eusart2.c: 80: PIE3bits.RC2IE = 0;
 10414                           
 10415                           ; BSR set to: 14
 10416                           ;incstack = 0
 10417  01369A  010E               	movlb	14	; () banked
 10418  01369C  9F2C               	bcf	44,7,b	;volatile
 10419                           
 10420                           ; BSR set to: 14
 10421                           ;eusart2.c: 81: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 10422  01369E  0E6C               	movlw	low _EUSART2_Receive_ISR
 10423  0136A0  0100               	movlb	0	; () banked
 10424  0136A2  6F89               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 10425  0136A4  0E2F               	movlw	high _EUSART2_Receive_ISR
 10426  0136A6  6F8A               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 10427  0136A8  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 10428  0136AA  6F8B               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 10429  0136AC  EC10  F09F         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 10430                           
 10431                           ;eusart2.c: 82: PIE3bits.TX2IE = 0;
 10432  0136B0  010E               	movlb	14	; () banked
 10433  0136B2  9D2C               	bcf	44,6,b	;volatile
 10434                           
 10435                           ;eusart2.c: 83: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 10436  0136B4  0E00               	movlw	low _EUSART2_Transmit_ISR
 10437  0136B6  0100               	movlb	0	; () banked
 10438  0136B8  6F89               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 10439  0136BA  0E3B               	movlw	high _EUSART2_Transmit_ISR
 10440  0136BC  6F8A               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 10441  0136BE  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 10442  0136C0  6F8B               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 10443  0136C2  EC09  F09F         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 10444                           
 10445                           ;eusart2.c: 87: BAUD2CON = 0x08;
 10446  0136C6  0E08               	movlw	8
 10447  0136C8  010E               	movlb	14	; () banked
 10448  0136CA  6FF7               	movwf	247,b	;volatile
 10449                           
 10450                           ; BSR set to: 14
 10451                           ;eusart2.c: 90: RC2STA = 0x90;
 10452  0136CC  0E90               	movlw	144
 10453  0136CE  6FF5               	movwf	245,b	;volatile
 10454                           
 10455                           ; BSR set to: 14
 10456                           ;eusart2.c: 93: TX2STA = 0x24;
 10457  0136D0  0E24               	movlw	36
 10458  0136D2  6FF6               	movwf	246,b	;volatile
 10459                           
 10460                           ; BSR set to: 14
 10461                           ;eusart2.c: 96: SP2BRGL = 0x8A;
 10462  0136D4  0E8A               	movlw	138
 10463  0136D6  6FF3               	movwf	243,b	;volatile
 10464                           
 10465                           ; BSR set to: 14
 10466                           ;eusart2.c: 99: SP2BRGH = 0x00;
 10467  0136D8  0E00               	movlw	0
 10468  0136DA  6FF4               	movwf	244,b	;volatile
 10469                           
 10470                           ; BSR set to: 14
 10471                           ;eusart2.c: 103: eusart2TxHead = 0;
 10472  0136DC  0E00               	movlw	0
 10473  0136DE  0100               	movlb	0	; () banked
 10474  0136E0  6FD5               	movwf	_eusart2TxHead& (0+255),b	;volatile
 10475                           
 10476                           ; BSR set to: 0
 10477                           ;eusart2.c: 104: eusart2TxTail = 0;
 10478  0136E2  0E00               	movlw	0
 10479  0136E4  6FD4               	movwf	_eusart2TxTail& (0+255),b	;volatile
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;eusart2.c: 105: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 10483  0136E6  0E40               	movlw	64
 10484  0136E8  6FD3               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 10485                           
 10486                           ; BSR set to: 0
 10487                           ;eusart2.c: 107: eusart2RxHead = 0;
 10488  0136EA  0E00               	movlw	0
 10489  0136EC  0101               	movlb	1	; () banked
 10490  0136EE  6F80               	movwf	_eusart2RxHead& (0+255),b	;volatile
 10491                           
 10492                           ; BSR set to: 1
 10493                           ;eusart2.c: 108: eusart2RxTail = 0;
 10494  0136F0  0E00               	movlw	0
 10495  0136F2  0100               	movlb	0	; () banked
 10496  0136F4  6FD2               	movwf	_eusart2RxTail& (0+255),b	;volatile
 10497                           
 10498                           ; BSR set to: 0
 10499                           ;eusart2.c: 109: eusart2RxCount = 0;
 10500  0136F6  0E00               	movlw	0
 10501  0136F8  6FD1               	movwf	_eusart2RxCount& (0+255),b	;volatile
 10502                           
 10503                           ; BSR set to: 0
 10504                           ;eusart2.c: 112: PIE3bits.RC2IE = 1;
 10505  0136FA  010E               	movlb	14	; () banked
 10506  0136FC  8F2C               	bsf	44,7,b	;volatile
 10507                           
 10508                           ; BSR set to: 14
 10509  0136FE  0012               	return		;funcret
 10510  013700                     __end_of_EUSART2_Initialize:
 10511                           	opt stack 0
 10512                           tblptru	equ	0xFF8
 10513                           tblptrh	equ	0xFF7
 10514                           tblptrl	equ	0xFF6
 10515                           tablat	equ	0xFF5
 10516                           prodh	equ	0xFF4
 10517                           prodl	equ	0xFF3
 10518                           intcon	equ	0xFF2
 10519                           postinc0	equ	0xFEE
 10520                           wreg	equ	0xFE8
 10521                           indf2	equ	0xFDF
 10522                           postinc2	equ	0xFDE
 10523                           postdec2	equ	0xFDD
 10524                           fsr2h	equ	0xFDA
 10525                           fsr2l	equ	0xFD9
 10526                           status	equ	0xFD8
 10527                           
 10528 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 10529 ;; Defined at:
 10530 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 10531 ;; Parameters:    Size  Location     Type
 10532 ;;  interruptHan    3   41[BANK0 ] PTR FTN()void 
 10533 ;;		 -> EUSART2_Transmit_ISR(1), 
 10534 ;; Auto vars:     Size  Location     Type
 10535 ;;		None
 10536 ;; Return value:  Size  Location     Type
 10537 ;;                  1    wreg      void 
 10538 ;; Registers used:
 10539 ;;		wreg, status,2, status,0
 10540 ;; Tracked objects:
 10541 ;;		On entry : 0/0
 10542 ;;		On exit  : 0/0
 10543 ;;		Unchanged: 0/0
 10544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10545 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10548 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10549 ;;Total ram usage:        3 bytes
 10550 ;; Hardware stack levels used:    1
 10551 ;; Hardware stack levels required when called:   10
 10552 ;; This function calls:
 10553 ;;		Nothing
 10554 ;; This function is called by:
 10555 ;;		_EUSART2_Initialize
 10556 ;; This function uses a non-reentrant model
 10557 ;;
 10558                           
 10559                           	psect	text42
 10560  013E12                     __ptext42:
 10561                           	opt stack 0
 10562  013E12                     _EUSART2_SetTxInterruptHandler:
 10563                           	opt stack 18
 10564                           
 10565                           ;eusart2.c: 265: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 10566                           
 10567                           ; BSR set to: 14
 10568                           ;incstack = 0
 10569  013E12  C089  F0C9         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 10570  013E16  C08A  F0CA         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 10571  013E1A  C08B  F0CB         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 10572  013E1E  0012               	return		;funcret
 10573  013E20                     __end_of_EUSART2_SetTxInterruptHandler:
 10574                           	opt stack 0
 10575                           tblptru	equ	0xFF8
 10576                           tblptrh	equ	0xFF7
 10577                           tblptrl	equ	0xFF6
 10578                           tablat	equ	0xFF5
 10579                           prodh	equ	0xFF4
 10580                           prodl	equ	0xFF3
 10581                           intcon	equ	0xFF2
 10582                           postinc0	equ	0xFEE
 10583                           wreg	equ	0xFE8
 10584                           indf2	equ	0xFDF
 10585                           postinc2	equ	0xFDE
 10586                           postdec2	equ	0xFDD
 10587                           fsr2h	equ	0xFDA
 10588                           fsr2l	equ	0xFD9
 10589                           status	equ	0xFD8
 10590                           
 10591 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 10592 ;; Defined at:
 10593 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 10594 ;; Parameters:    Size  Location     Type
 10595 ;;  interruptHan    3   41[BANK0 ] PTR FTN()void 
 10596 ;;		 -> EUSART2_Receive_ISR(1), 
 10597 ;; Auto vars:     Size  Location     Type
 10598 ;;		None
 10599 ;; Return value:  Size  Location     Type
 10600 ;;                  1    wreg      void 
 10601 ;; Registers used:
 10602 ;;		wreg, status,2, status,0
 10603 ;; Tracked objects:
 10604 ;;		On entry : 0/0
 10605 ;;		On exit  : 0/0
 10606 ;;		Unchanged: 0/0
 10607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10608 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10611 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10612 ;;Total ram usage:        3 bytes
 10613 ;; Hardware stack levels used:    1
 10614 ;; Hardware stack levels required when called:   10
 10615 ;; This function calls:
 10616 ;;		Nothing
 10617 ;; This function is called by:
 10618 ;;		_EUSART2_Initialize
 10619 ;; This function uses a non-reentrant model
 10620 ;;
 10621                           
 10622                           	psect	text43
 10623  013E20                     __ptext43:
 10624                           	opt stack 0
 10625  013E20                     _EUSART2_SetRxInterruptHandler:
 10626                           	opt stack 18
 10627                           
 10628                           ;eusart2.c: 269: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 10629                           
 10630                           ;incstack = 0
 10631  013E20  C089  F0C6         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 10632  013E24  C08A  F0C7         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 10633  013E28  C08B  F0C8         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 10634  013E2C  0012               	return		;funcret
 10635  013E2E                     __end_of_EUSART2_SetRxInterruptHandler:
 10636                           	opt stack 0
 10637                           tblptru	equ	0xFF8
 10638                           tblptrh	equ	0xFF7
 10639                           tblptrl	equ	0xFF6
 10640                           tablat	equ	0xFF5
 10641                           prodh	equ	0xFF4
 10642                           prodl	equ	0xFF3
 10643                           intcon	equ	0xFF2
 10644                           postinc0	equ	0xFEE
 10645                           wreg	equ	0xFE8
 10646                           indf2	equ	0xFDF
 10647                           postinc2	equ	0xFDE
 10648                           postdec2	equ	0xFDD
 10649                           fsr2h	equ	0xFDA
 10650                           fsr2l	equ	0xFD9
 10651                           status	equ	0xFD8
 10652                           
 10653 ;; *************** function _ADCC_Initialize *****************
 10654 ;; Defined at:
 10655 ;;		line 63 in file "mcc_generated_files/adcc.c"
 10656 ;; Parameters:    Size  Location     Type
 10657 ;;		None
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;		None
 10660 ;; Return value:  Size  Location     Type
 10661 ;;                  1    wreg      void 
 10662 ;; Registers used:
 10663 ;;		wreg, status,2, status,0, cstack
 10664 ;; Tracked objects:
 10665 ;;		On entry : 0/0
 10666 ;;		On exit  : 0/0
 10667 ;;		Unchanged: 0/0
 10668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10673 ;;Total ram usage:        0 bytes
 10674 ;; Hardware stack levels used:    1
 10675 ;; Hardware stack levels required when called:   11
 10676 ;; This function calls:
 10677 ;;		_ADCC_SetADIInterruptHandler
 10678 ;; This function is called by:
 10679 ;;		_SYSTEM_Initialize
 10680 ;; This function uses a non-reentrant model
 10681 ;;
 10682                           
 10683                           	psect	text44
 10684  013766                     __ptext44:
 10685                           	opt stack 0
 10686  013766                     _ADCC_Initialize:
 10687                           	opt stack 18
 10688                           
 10689                           ;adcc.c: 67: ADLTHL = 0x00;
 10690                           
 10691                           ;incstack = 0
 10692  013766  0E00               	movlw	0
 10693  013768  6E6A               	movwf	3946,c	;volatile
 10694                           
 10695                           ;adcc.c: 69: ADLTHH = 0x00;
 10696  01376A  0E00               	movlw	0
 10697  01376C  6E6B               	movwf	3947,c	;volatile
 10698                           
 10699                           ;adcc.c: 71: ADUTHL = 0x00;
 10700  01376E  0E00               	movlw	0
 10701  013770  6E6C               	movwf	3948,c	;volatile
 10702                           
 10703                           ;adcc.c: 73: ADUTHH = 0x00;
 10704  013772  0E00               	movlw	0
 10705  013774  6E6D               	movwf	3949,c	;volatile
 10706                           
 10707                           ;adcc.c: 75: ADSTPTL = 0x00;
 10708  013776  0E00               	movlw	0
 10709  013778  6E68               	movwf	3944,c	;volatile
 10710                           
 10711                           ;adcc.c: 77: ADSTPTH = 0x00;
 10712  01377A  0E00               	movlw	0
 10713  01377C  6E69               	movwf	3945,c	;volatile
 10714                           
 10715                           ;adcc.c: 79: ADRPT = 0x00;
 10716  01377E  0E00               	movlw	0
 10717  013780  6E66               	movwf	3942,c	;volatile
 10718                           
 10719                           ;adcc.c: 81: ADPCH = 0x00;
 10720  013782  0E00               	movlw	0
 10721  013784  010F               	movlb	15	; () banked
 10722  013786  6F5F               	movwf	95,b	;volatile
 10723                           
 10724                           ;adcc.c: 83: ADCAP = 0x00;
 10725  013788  0E00               	movlw	0
 10726  01378A  6F5D               	movwf	93,b	;volatile
 10727                           
 10728                           ;adcc.c: 85: ADCON1 = 0x00;
 10729  01378C  0E00               	movlw	0
 10730  01378E  6F59               	movwf	89,b	;volatile
 10731                           
 10732                           ;adcc.c: 87: ADCON2 = 0x04;
 10733  013790  0E04               	movlw	4
 10734  013792  6F5A               	movwf	90,b	;volatile
 10735                           
 10736                           ;adcc.c: 89: ADCON3 = 0x00;
 10737  013794  0E00               	movlw	0
 10738  013796  6F5B               	movwf	91,b	;volatile
 10739                           
 10740                           ;adcc.c: 91: ADSTAT = 0x00;
 10741  013798  0E00               	movlw	0
 10742  01379A  6E65               	movwf	3941,c	;volatile
 10743                           
 10744                           ;adcc.c: 93: ADREF = 0x12;
 10745  01379C  0E12               	movlw	18
 10746  01379E  6F58               	movwf	88,b	;volatile
 10747                           
 10748                           ;adcc.c: 95: ADACT = 0x00;
 10749  0137A0  0E00               	movlw	0
 10750  0137A2  6F56               	movwf	86,b	;volatile
 10751                           
 10752                           ;adcc.c: 97: ADCLK = 0x00;
 10753  0137A4  0E00               	movlw	0
 10754  0137A6  6F57               	movwf	87,b	;volatile
 10755                           
 10756                           ;adcc.c: 99: ADCON0 = 0x94;
 10757  0137A8  0E94               	movlw	148
 10758  0137AA  6E60               	movwf	3936,c	;volatile
 10759                           
 10760                           ;adcc.c: 101: ADACQ = 0x00;
 10761  0137AC  0E00               	movlw	0
 10762  0137AE  6F5C               	movwf	92,b	;volatile
 10763                           
 10764                           ; BSR set to: 15
 10765                           ;adcc.c: 104: PIR1bits.ADIF = 0;
 10766  0137B0  010E               	movlb	14	; () banked
 10767  0137B2  9134               	bcf	52,0,b	;volatile
 10768                           
 10769                           ; BSR set to: 14
 10770                           ;adcc.c: 106: PIE1bits.ADIE = 1;
 10771  0137B4  812A               	bsf	42,0,b	;volatile
 10772                           
 10773                           ; BSR set to: 14
 10774                           ;adcc.c: 108: ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptHandler);
 10775  0137B6  0E64               	movlw	low _ADCC_DefaultInterruptHandler
 10776  0137B8  0100               	movlb	0	; () banked
 10777  0137BA  6F89               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 10778  0137BC  0E3E               	movlw	high _ADCC_DefaultInterruptHandler
 10779  0137BE  6F8A               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 10780  0137C0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 10781  0137C2  6F8B               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 10782  0137C4  EC17  F09F         	call	_ADCC_SetADIInterruptHandler	;wreg free
 10783  0137C8  0012               	return		;funcret
 10784  0137CA                     __end_of_ADCC_Initialize:
 10785                           	opt stack 0
 10786                           tblptru	equ	0xFF8
 10787                           tblptrh	equ	0xFF7
 10788                           tblptrl	equ	0xFF6
 10789                           tablat	equ	0xFF5
 10790                           prodh	equ	0xFF4
 10791                           prodl	equ	0xFF3
 10792                           intcon	equ	0xFF2
 10793                           postinc0	equ	0xFEE
 10794                           wreg	equ	0xFE8
 10795                           indf2	equ	0xFDF
 10796                           postinc2	equ	0xFDE
 10797                           postdec2	equ	0xFDD
 10798                           fsr2h	equ	0xFDA
 10799                           fsr2l	equ	0xFD9
 10800                           status	equ	0xFD8
 10801                           
 10802 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 10803 ;; Defined at:
 10804 ;;		line 306 in file "mcc_generated_files/adcc.c"
 10805 ;; Parameters:    Size  Location     Type
 10806 ;;  InterruptHan    3   41[BANK0 ] PTR FTN()void 
 10807 ;;		 -> ADCC_DefaultInterruptHandler(1), ADCCallback(1), 
 10808 ;; Auto vars:     Size  Location     Type
 10809 ;;		None
 10810 ;; Return value:  Size  Location     Type
 10811 ;;                  1    wreg      void 
 10812 ;; Registers used:
 10813 ;;		wreg, status,2, status,0
 10814 ;; Tracked objects:
 10815 ;;		On entry : 0/0
 10816 ;;		On exit  : 0/0
 10817 ;;		Unchanged: 0/0
 10818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10819 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10822 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10823 ;;Total ram usage:        3 bytes
 10824 ;; Hardware stack levels used:    1
 10825 ;; Hardware stack levels required when called:   10
 10826 ;; This function calls:
 10827 ;;		Nothing
 10828 ;; This function is called by:
 10829 ;;		_main
 10830 ;;		_ADCC_Initialize
 10831 ;; This function uses a non-reentrant model
 10832 ;;
 10833                           
 10834                           	psect	text45
 10835  013E2E                     __ptext45:
 10836                           	opt stack 0
 10837  013E2E                     _ADCC_SetADIInterruptHandler:
 10838                           	opt stack 18
 10839                           
 10840                           ;adcc.c: 307: ADCC_ADI_InterruptHandler = InterruptHandler;
 10841                           
 10842                           ;incstack = 0
 10843  013E2E  C089  F0BA         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 10844  013E32  C08A  F0BB         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 10845  013E36  C08B  F0BC         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 10846  013E3A  0012               	return		;funcret
 10847  013E3C                     __end_of_ADCC_SetADIInterruptHandler:
 10848                           	opt stack 0
 10849                           tblptru	equ	0xFF8
 10850                           tblptrh	equ	0xFF7
 10851                           tblptrl	equ	0xFF6
 10852                           tablat	equ	0xFF5
 10853                           prodh	equ	0xFF4
 10854                           prodl	equ	0xFF3
 10855                           intcon	equ	0xFF2
 10856                           postinc0	equ	0xFEE
 10857                           wreg	equ	0xFE8
 10858                           indf2	equ	0xFDF
 10859                           postinc2	equ	0xFDE
 10860                           postdec2	equ	0xFDD
 10861                           fsr2h	equ	0xFDA
 10862                           fsr2l	equ	0xFD9
 10863                           status	equ	0xFD8
 10864                           
 10865 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 10866 ;; Defined at:
 10867 ;;		line 94 in file "mcc_generated_files/interrupt_manager.c"
 10868 ;; Parameters:    Size  Location     Type
 10869 ;;		None
 10870 ;; Auto vars:     Size  Location     Type
 10871 ;;		None
 10872 ;; Return value:  Size  Location     Type
 10873 ;;                  1    wreg      void 
 10874 ;; Registers used:
 10875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10876 ;; Tracked objects:
 10877 ;;		On entry : 0/0
 10878 ;;		On exit  : 0/0
 10879 ;;		Unchanged: 0/0
 10880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10883 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10884 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10885 ;;Total ram usage:       21 bytes
 10886 ;; Hardware stack levels used:    1
 10887 ;; Hardware stack levels required when called:    9
 10888 ;; This function calls:
 10889 ;;		Absolute function
 10890 ;;		_EUSART2_Transmit_ISR
 10891 ;;		_TMR6_ISR
 10892 ;;		_TMR7_ISR
 10893 ;; This function is called by:
 10894 ;;		Interrupt level 1
 10895 ;; This function uses a non-reentrant model
 10896 ;;
 10897                           
 10898                           	psect	intcodelo
 10899  000018                     __pintcodelo:
 10900                           	opt stack 0
 10901  000018                     _INTERRUPT_InterruptManagerLow:
 10902                           	opt stack 13
 10903                           
 10904                           ;incstack = 0
 10905  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 10906  00001A  CFD8 F074          	movff	status,??_INTERRUPT_InterruptManagerLow
 10907  00001E  CFE8 F075          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 10908  000022  CFE0 F076          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 10909  000026  CFFA F077          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 10910  00002A  CFFB F078          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 10911  00002E  CFE9 F079          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 10912  000032  CFEA F07A          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 10913  000036  CFE1 F07B          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 10914  00003A  CFE2 F07C          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 10915  00003E  CFD9 F07D          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 10916  000042  CFDA F07E          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 10917  000046  CFF3 F07F          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 10918  00004A  CFF4 F080          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 10919  00004E  CFF6 F081          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 10920  000052  CFF7 F082          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 10921  000056  CFF8 F083          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 10922  00005A  CFF5 F084          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 10923  00005E  C05F  F085         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 10924  000062  C060  F086         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 10925  000066  C061  F087         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 10926  00006A  C062  F088         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 10927                           
 10928                           ;interrupt_manager.c: 97: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 10929  00006E  010E               	movlb	14	; () banked
 10930  000070  BB2E               	btfsc	46,5,b	;volatile
 10931                           
 10932                           ; BSR set to: 14
 10933  000072  AB38               	btfss	56,5,b	;volatile
 10934  000074  D003               	goto	i1l205
 10935                           
 10936                           ; BSR set to: 14
 10937                           ;interrupt_manager.c: 98: {
 10938                           ;interrupt_manager.c: 99: TMR6_ISR();
 10939  000076  ECE2  F09D         	call	_TMR6_ISR	;wreg free
 10940                           
 10941                           ;interrupt_manager.c: 100: }
 10942  00007A  D015               	goto	i1l209
 10943  00007C                     i1l205:
 10944                           
 10945                           ; BSR set to: 14
 10946                           ;interrupt_manager.c: 101: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 10947  00007C  BD2C               	btfsc	44,6,b	;volatile
 10948                           
 10949                           ; BSR set to: 14
 10950  00007E  AD36               	btfss	54,6,b	;volatile
 10951  000080  D00D               	goto	i1l207
 10952                           
 10953                           ; BSR set to: 14
 10954                           ;interrupt_manager.c: 102: {
 10955                           ;interrupt_manager.c: 103: EUSART2_TxDefaultInterruptHandler();
 10956  000082  D801               	call	i1u1037_28
 10957  000084  D010               	goto	i1l209
 10958  000086                     i1u1037_28:
 10959  000086  0005               	push	
 10960  000088  6EFA               	movwf	pclath,c
 10961  00008A  0100               	movlb	0	; () banked
 10962  00008C  51C9               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 10963  00008E  6EFD               	movwf	tosl,c
 10964  000090  51CA               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 10965  000092  6EFE               	movwf	tosh,c
 10966  000094  51CB               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 10967  000096  6EFF               	movwf	tosu,c
 10968  000098  50FA               	movf	pclath,w,c
 10969  00009A  0012               	return		;indir
 10970  00009C                     i1l207:
 10971                           
 10972                           ; BSR set to: 14
 10973                           ;interrupt_manager.c: 105: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 10974  00009C  BD2E               	btfsc	46,6,b	;volatile
 10975                           
 10976                           ; BSR set to: 14
 10977  00009E  AD38               	btfss	56,6,b	;volatile
 10978  0000A0  D002               	goto	i1l209
 10979                           
 10980                           ; BSR set to: 14
 10981                           ;interrupt_manager.c: 106: {
 10982                           ;interrupt_manager.c: 107: TMR7_ISR();
 10983  0000A2  EC9B  F09D         	call	_TMR7_ISR	;wreg free
 10984  0000A6                     i1l209:
 10985                           
 10986                           ;interrupt_manager.c: 109: else
 10987                           ;interrupt_manager.c: 110: {
 10988  0000A6  C088  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 10989  0000AA  C087  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 10990  0000AE  C086  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 10991  0000B2  C085  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 10992  0000B6  C084  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 10993  0000BA  C083  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 10994  0000BE  C082  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 10995  0000C2  C081  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 10996  0000C6  C080  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 10997  0000CA  C07F  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 10998  0000CE  C07E  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 10999  0000D2  C07D  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 11000  0000D6  C07C  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 11001  0000DA  C07B  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 11002  0000DE  C07A  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 11003  0000E2  C079  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 11004  0000E6  C078  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 11005  0000EA  C077  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 11006  0000EE  C076  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 11007  0000F2  C075  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 11008  0000F6  C074  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 11009  0000FA  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 11010  0000FC  0010               	retfie	
 11011  0000FE                     __end_of_INTERRUPT_InterruptManagerLow:
 11012                           	opt stack 0
 11013                           tosu	equ	0xFFF
 11014                           tosh	equ	0xFFE
 11015                           tosl	equ	0xFFD
 11016                           pclatu	equ	0xFFB
 11017                           pclath	equ	0xFFA
 11018                           tblptru	equ	0xFF8
 11019                           tblptrh	equ	0xFF7
 11020                           tblptrl	equ	0xFF6
 11021                           tablat	equ	0xFF5
 11022                           prodh	equ	0xFF4
 11023                           prodl	equ	0xFF3
 11024                           intcon	equ	0xFF2
 11025                           postinc0	equ	0xFEE
 11026                           fsr0h	equ	0xFEA
 11027                           fsr0l	equ	0xFE9
 11028                           wreg	equ	0xFE8
 11029                           fsr1h	equ	0xFE2
 11030                           fsr1l	equ	0xFE1
 11031                           bsr	equ	0xFE0
 11032                           indf2	equ	0xFDF
 11033                           postinc2	equ	0xFDE
 11034                           postdec2	equ	0xFDD
 11035                           fsr2h	equ	0xFDA
 11036                           fsr2l	equ	0xFD9
 11037                           status	equ	0xFD8
 11038                           
 11039 ;; *************** function _TMR7_ISR *****************
 11040 ;; Defined at:
 11041 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;		None
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;		None
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  1    wreg      void 
 11048 ;; Registers used:
 11049 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11059 ;;Total ram usage:        0 bytes
 11060 ;; Hardware stack levels used:    1
 11061 ;; Hardware stack levels required when called:    8
 11062 ;; This function calls:
 11063 ;;		Absolute function
 11064 ;;		_TMR7_DefaultInterruptHandler
 11065 ;;		_TMR7_WriteTimer
 11066 ;;		_acquisitionTimerCallback
 11067 ;; This function is called by:
 11068 ;;		_INTERRUPT_InterruptManagerLow
 11069 ;; This function uses a non-reentrant model
 11070 ;;
 11071                           
 11072                           	psect	text47
 11073  013B36                     __ptext47:
 11074                           	opt stack 0
 11075  013B36                     _TMR7_ISR:
 11076                           	opt stack 13
 11077                           
 11078                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 11079                           
 11080                           ;incstack = 0
 11081  013B36  010E               	movlb	14	; () banked
 11082  013B38  9D38               	bcf	56,6,b	;volatile
 11083                           
 11084                           ; BSR set to: 14
 11085                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 11086  013B3A  C0CC  F072         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 11087  013B3E  C0CD  F073         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 11088  013B42  EC30  F09E         	call	_TMR7_WriteTimer	;wreg free
 11089                           
 11090                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 11091  013B46  0100               	movlb	0	; () banked
 11092  013B48  51B7               	movf	_TMR7_InterruptHandler& (0+255),w,b
 11093  013B4A  11B8               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 11094  013B4C  11B9               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 11095  013B4E  B4D8               	btfsc	status,2,c
 11096  013B50  0012               	return	
 11097                           
 11098                           ; BSR set to: 0
 11099                           ;tmr7.c: 172: {
 11100                           ;tmr7.c: 173: TMR7_InterruptHandler();
 11101  013B52  D801               	call	i1u1022_28
 11102  013B54  0012               	return	
 11103  013B56                     i1u1022_28:
 11104  013B56  0005               	push	
 11105  013B58  6EFA               	movwf	pclath,c
 11106  013B5A  51B7               	movf	_TMR7_InterruptHandler& (0+255),w,b
 11107  013B5C  6EFD               	movwf	tosl,c
 11108  013B5E  51B8               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 11109  013B60  6EFE               	movwf	tosh,c
 11110  013B62  51B9               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 11111  013B64  6EFF               	movwf	tosu,c
 11112  013B66  50FA               	movf	pclath,w,c
 11113  013B68  0012               	return		;indir
 11114  013B6A                     __end_of_TMR7_ISR:
 11115                           	opt stack 0
 11116                           tosu	equ	0xFFF
 11117                           tosh	equ	0xFFE
 11118                           tosl	equ	0xFFD
 11119                           pclatu	equ	0xFFB
 11120                           pclath	equ	0xFFA
 11121                           tblptru	equ	0xFF8
 11122                           tblptrh	equ	0xFF7
 11123                           tblptrl	equ	0xFF6
 11124                           tablat	equ	0xFF5
 11125                           prodh	equ	0xFF4
 11126                           prodl	equ	0xFF3
 11127                           intcon	equ	0xFF2
 11128                           postinc0	equ	0xFEE
 11129                           fsr0h	equ	0xFEA
 11130                           fsr0l	equ	0xFE9
 11131                           wreg	equ	0xFE8
 11132                           fsr1h	equ	0xFE2
 11133                           fsr1l	equ	0xFE1
 11134                           bsr	equ	0xFE0
 11135                           indf2	equ	0xFDF
 11136                           postinc2	equ	0xFDE
 11137                           postdec2	equ	0xFDD
 11138                           fsr2h	equ	0xFDA
 11139                           fsr2l	equ	0xFD9
 11140                           status	equ	0xFD8
 11141                           
 11142 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 11143 ;; Defined at:
 11144 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 11145 ;; Parameters:    Size  Location     Type
 11146 ;;		None
 11147 ;; Auto vars:     Size  Location     Type
 11148 ;;		None
 11149 ;; Return value:  Size  Location     Type
 11150 ;;                  1    wreg      void 
 11151 ;; Registers used:
 11152 ;;		None
 11153 ;; Tracked objects:
 11154 ;;		On entry : 0/0
 11155 ;;		On exit  : 0/0
 11156 ;;		Unchanged: 0/0
 11157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11162 ;;Total ram usage:        0 bytes
 11163 ;; Hardware stack levels used:    1
 11164 ;; Hardware stack levels required when called:    6
 11165 ;; This function calls:
 11166 ;;		Nothing
 11167 ;; This function is called by:
 11168 ;;		_TMR7_Initialize
 11169 ;;		_TMR7_ISR
 11170 ;; This function uses a non-reentrant model
 11171 ;;
 11172                           
 11173                           	psect	text48
 11174  013E60                     __ptext48:
 11175                           	opt stack 0
 11176  013E60                     _TMR7_DefaultInterruptHandler:
 11177                           	opt stack 14
 11178                           
 11179                           ;incstack = 0
 11180  013E60  0012               	return		;funcret
 11181  013E62                     __end_of_TMR7_DefaultInterruptHandler:
 11182                           	opt stack 0
 11183                           tosu	equ	0xFFF
 11184                           tosh	equ	0xFFE
 11185                           tosl	equ	0xFFD
 11186                           pclatu	equ	0xFFB
 11187                           pclath	equ	0xFFA
 11188                           tblptru	equ	0xFF8
 11189                           tblptrh	equ	0xFF7
 11190                           tblptrl	equ	0xFF6
 11191                           tablat	equ	0xFF5
 11192                           prodh	equ	0xFF4
 11193                           prodl	equ	0xFF3
 11194                           intcon	equ	0xFF2
 11195                           postinc0	equ	0xFEE
 11196                           fsr0h	equ	0xFEA
 11197                           fsr0l	equ	0xFE9
 11198                           wreg	equ	0xFE8
 11199                           fsr1h	equ	0xFE2
 11200                           fsr1l	equ	0xFE1
 11201                           bsr	equ	0xFE0
 11202                           indf2	equ	0xFDF
 11203                           postinc2	equ	0xFDE
 11204                           postdec2	equ	0xFDD
 11205                           fsr2h	equ	0xFDA
 11206                           fsr2l	equ	0xFD9
 11207                           status	equ	0xFD8
 11208                           
 11209 ;; *************** function _acquisitionTimerCallback *****************
 11210 ;; Defined at:
 11211 ;;		line 98 in file "main.c"
 11212 ;; Parameters:    Size  Location     Type
 11213 ;;		None
 11214 ;; Auto vars:     Size  Location     Type
 11215 ;;		None
 11216 ;; Return value:  Size  Location     Type
 11217 ;;                  1    wreg      void 
 11218 ;; Registers used:
 11219 ;;		wreg, status,2, cstack
 11220 ;; Tracked objects:
 11221 ;;		On entry : 0/0
 11222 ;;		On exit  : 0/0
 11223 ;;		Unchanged: 0/0
 11224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11229 ;;Total ram usage:        0 bytes
 11230 ;; Hardware stack levels used:    1
 11231 ;; Hardware stack levels required when called:    7
 11232 ;; This function calls:
 11233 ;;		_ADCC_IsConversionDone
 11234 ;;		_ADCC_StartConversion
 11235 ;; This function is called by:
 11236 ;;		_main
 11237 ;;		_TMR7_ISR
 11238 ;; This function uses a non-reentrant model
 11239 ;;
 11240                           
 11241                           	psect	text49
 11242  013D16                     __ptext49:
 11243                           	opt stack 0
 11244  013D16                     _acquisitionTimerCallback:
 11245                           	opt stack 13
 11246                           
 11247                           ;main.c: 101: ADCC_StartConversion(POS3P3_ADC);
 11248                           
 11249                           ;incstack = 0
 11250  013D16  0E22               	movlw	34
 11251  013D18  EC1E  F09F         	call	_ADCC_StartConversion
 11252  013D1C  EC25  F09F         	call	_ADCC_IsConversionDone	;wreg free
 11253  013D20  0900               	iorlw	0
 11254  013D22  B4D8               	btfsc	status,2,c
 11255  013D24  D7FB               	goto	i1l458
 11256                           
 11257                           ;main.c: 107: ADCC_StartConversion(POS12_ADC);
 11258  013D26  0E04               	movlw	4
 11259  013D28  EC1E  F09F         	call	_ADCC_StartConversion
 11260  013D2C  EC25  F09F         	call	_ADCC_IsConversionDone	;wreg free
 11261  013D30  0900               	iorlw	0
 11262  013D32  A4D8               	btfss	status,2,c
 11263  013D34  0012               	return	
 11264  013D36  D7FA               	goto	i1l461
 11265  013D38                     __end_of_acquisitionTimerCallback:
 11266                           	opt stack 0
 11267                           tosu	equ	0xFFF
 11268                           tosh	equ	0xFFE
 11269                           tosl	equ	0xFFD
 11270                           pclatu	equ	0xFFB
 11271                           pclath	equ	0xFFA
 11272                           tblptru	equ	0xFF8
 11273                           tblptrh	equ	0xFF7
 11274                           tblptrl	equ	0xFF6
 11275                           tablat	equ	0xFF5
 11276                           prodh	equ	0xFF4
 11277                           prodl	equ	0xFF3
 11278                           intcon	equ	0xFF2
 11279                           postinc0	equ	0xFEE
 11280                           fsr0h	equ	0xFEA
 11281                           fsr0l	equ	0xFE9
 11282                           wreg	equ	0xFE8
 11283                           fsr1h	equ	0xFE2
 11284                           fsr1l	equ	0xFE1
 11285                           bsr	equ	0xFE0
 11286                           indf2	equ	0xFDF
 11287                           postinc2	equ	0xFDE
 11288                           postdec2	equ	0xFDD
 11289                           fsr2h	equ	0xFDA
 11290                           fsr2l	equ	0xFD9
 11291                           status	equ	0xFD8
 11292                           
 11293 ;; *************** function _ADCC_StartConversion *****************
 11294 ;; Defined at:
 11295 ;;		line 112 in file "mcc_generated_files/adcc.c"
 11296 ;; Parameters:    Size  Location     Type
 11297 ;;  channel         1    wreg     enum E17310
 11298 ;; Auto vars:     Size  Location     Type
 11299 ;;  channel         1   18[BANK0 ] enum E17310
 11300 ;; Return value:  Size  Location     Type
 11301 ;;                  1    wreg      void 
 11302 ;; Registers used:
 11303 ;;		wreg
 11304 ;; Tracked objects:
 11305 ;;		On entry : 0/0
 11306 ;;		On exit  : 0/0
 11307 ;;		Unchanged: 0/0
 11308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11310 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11312 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11313 ;;Total ram usage:        1 bytes
 11314 ;; Hardware stack levels used:    1
 11315 ;; Hardware stack levels required when called:    6
 11316 ;; This function calls:
 11317 ;;		Nothing
 11318 ;; This function is called by:
 11319 ;;		_acquisitionTimerCallback
 11320 ;; This function uses a non-reentrant model
 11321 ;;
 11322                           
 11323                           	psect	text50
 11324  013E3C                     __ptext50:
 11325                           	opt stack 0
 11326  013E3C                     _ADCC_StartConversion:
 11327                           	opt stack 13
 11328                           
 11329                           ;incstack = 0
 11330                           ;ADCC_StartConversion@channel stored from wreg
 11331  013E3C  0100               	movlb	0	; () banked
 11332  013E3E  6F72               	movwf	ADCC_StartConversion@channel& (0+255),b
 11333                           
 11334                           ;adcc.c: 115: ADPCH = channel;
 11335  013E40  C072  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 11336                           
 11337                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 11338  013E44  8E60               	bsf	3936,7,c	;volatile
 11339                           
 11340                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 11341  013E46  8060               	bsf	3936,0,c	;volatile
 11342  013E48  0012               	return		;funcret
 11343  013E4A                     __end_of_ADCC_StartConversion:
 11344                           	opt stack 0
 11345                           tosu	equ	0xFFF
 11346                           tosh	equ	0xFFE
 11347                           tosl	equ	0xFFD
 11348                           pclatu	equ	0xFFB
 11349                           pclath	equ	0xFFA
 11350                           tblptru	equ	0xFF8
 11351                           tblptrh	equ	0xFF7
 11352                           tblptrl	equ	0xFF6
 11353                           tablat	equ	0xFF5
 11354                           prodh	equ	0xFF4
 11355                           prodl	equ	0xFF3
 11356                           intcon	equ	0xFF2
 11357                           postinc0	equ	0xFEE
 11358                           fsr0h	equ	0xFEA
 11359                           fsr0l	equ	0xFE9
 11360                           wreg	equ	0xFE8
 11361                           fsr1h	equ	0xFE2
 11362                           fsr1l	equ	0xFE1
 11363                           bsr	equ	0xFE0
 11364                           indf2	equ	0xFDF
 11365                           postinc2	equ	0xFDE
 11366                           postdec2	equ	0xFDD
 11367                           fsr2h	equ	0xFDA
 11368                           fsr2l	equ	0xFD9
 11369                           status	equ	0xFD8
 11370                           
 11371 ;; *************** function _ADCC_IsConversionDone *****************
 11372 ;; Defined at:
 11373 ;;		line 124 in file "mcc_generated_files/adcc.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;		None
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;		None
 11378 ;; Return value:  Size  Location     Type
 11379 ;;                  1    wreg      unsigned char 
 11380 ;; Registers used:
 11381 ;;		wreg
 11382 ;; Tracked objects:
 11383 ;;		On entry : 0/0
 11384 ;;		On exit  : 0/0
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11391 ;;Total ram usage:        0 bytes
 11392 ;; Hardware stack levels used:    1
 11393 ;; Hardware stack levels required when called:    6
 11394 ;; This function calls:
 11395 ;;		Nothing
 11396 ;; This function is called by:
 11397 ;;		_acquisitionTimerCallback
 11398 ;; This function uses a non-reentrant model
 11399 ;;
 11400                           
 11401                           	psect	text51
 11402  013E4A                     __ptext51:
 11403                           	opt stack 0
 11404  013E4A                     _ADCC_IsConversionDone:
 11405                           	opt stack 13
 11406                           
 11407                           ;adcc.c: 127: return ((unsigned char)(!ADCON0bits.ADGO));
 11408                           
 11409                           ;incstack = 0
 11410  013E4A  B060               	btfsc	3936,0,c	;volatile
 11411  013E4C  D002               	goto	i1u477_20
 11412  013E4E  0E01               	movlw	1
 11413  013E50  0012               	return	
 11414  013E52                     i1u477_20:
 11415  013E52  0E00               	movlw	0
 11416  013E54  0012               	return	
 11417  013E56                     __end_of_ADCC_IsConversionDone:
 11418                           	opt stack 0
 11419                           tosu	equ	0xFFF
 11420                           tosh	equ	0xFFE
 11421                           tosl	equ	0xFFD
 11422                           pclatu	equ	0xFFB
 11423                           pclath	equ	0xFFA
 11424                           tblptru	equ	0xFF8
 11425                           tblptrh	equ	0xFF7
 11426                           tblptrl	equ	0xFF6
 11427                           tablat	equ	0xFF5
 11428                           prodh	equ	0xFF4
 11429                           prodl	equ	0xFF3
 11430                           intcon	equ	0xFF2
 11431                           postinc0	equ	0xFEE
 11432                           fsr0h	equ	0xFEA
 11433                           fsr0l	equ	0xFE9
 11434                           wreg	equ	0xFE8
 11435                           fsr1h	equ	0xFE2
 11436                           fsr1l	equ	0xFE1
 11437                           bsr	equ	0xFE0
 11438                           indf2	equ	0xFDF
 11439                           postinc2	equ	0xFDE
 11440                           postdec2	equ	0xFDD
 11441                           fsr2h	equ	0xFDA
 11442                           fsr2l	equ	0xFD9
 11443                           status	equ	0xFD8
 11444                           
 11445 ;; *************** function _TMR7_WriteTimer *****************
 11446 ;; Defined at:
 11447 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 11448 ;; Parameters:    Size  Location     Type
 11449 ;;  timerVal        2   18[BANK0 ] unsigned int 
 11450 ;; Auto vars:     Size  Location     Type
 11451 ;;		None
 11452 ;; Return value:  Size  Location     Type
 11453 ;;                  1    wreg      void 
 11454 ;; Registers used:
 11455 ;;		wreg, status,2
 11456 ;; Tracked objects:
 11457 ;;		On entry : 0/0
 11458 ;;		On exit  : 0/0
 11459 ;;		Unchanged: 0/0
 11460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11461 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11464 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11465 ;;Total ram usage:        2 bytes
 11466 ;; Hardware stack levels used:    1
 11467 ;; Hardware stack levels required when called:    6
 11468 ;; This function calls:
 11469 ;;		Nothing
 11470 ;; This function is called by:
 11471 ;;		_TMR7_ISR
 11472 ;;		_TMR7_Reload
 11473 ;; This function uses a non-reentrant model
 11474 ;;
 11475                           
 11476                           	psect	text52
 11477  013C60                     __ptext52:
 11478                           	opt stack 0
 11479  013C60                     _TMR7_WriteTimer:
 11480                           	opt stack 14
 11481                           
 11482                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 11483                           
 11484                           ;incstack = 0
 11485  013C60  010F               	movlb	15	; () banked
 11486  013C62  A530               	btfss	48,2,b	;volatile
 11487  013C64  D009               	goto	i1l824
 11488                           
 11489                           ; BSR set to: 15
 11490                           ;tmr7.c: 130: {
 11491                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 11492  013C66  9130               	bcf	48,0,b	;volatile
 11493                           
 11494                           ; BSR set to: 15
 11495                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 11496  013C68  0100               	movlb	0	; () banked
 11497  013C6A  5173               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 11498  013C6C  010F               	movlb	15	; () banked
 11499  013C6E  6F2F               	movwf	47,b	;volatile
 11500                           
 11501                           ; BSR set to: 15
 11502                           ;tmr7.c: 136: TMR7L = timerVal;
 11503  013C70  C072  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 11504                           
 11505                           ; BSR set to: 15
 11506                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 11507  013C74  8130               	bsf	48,0,b	;volatile
 11508                           
 11509                           ;tmr7.c: 140: }
 11510  013C76  0012               	return	
 11511  013C78                     i1l824:
 11512                           
 11513                           ; BSR set to: 15
 11514                           ;tmr7.c: 141: else
 11515                           ;tmr7.c: 142: {
 11516                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 11517                           
 11518                           ; BSR set to: 15
 11519  013C78  0100               	movlb	0	; () banked
 11520  013C7A  5173               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 11521  013C7C  010F               	movlb	15	; () banked
 11522  013C7E  6F2F               	movwf	47,b	;volatile
 11523                           
 11524                           ; BSR set to: 15
 11525                           ;tmr7.c: 145: TMR7L = timerVal;
 11526  013C80  C072  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 11527  013C84  0012               	return	
 11528  013C86                     __end_of_TMR7_WriteTimer:
 11529                           	opt stack 0
 11530                           tosu	equ	0xFFF
 11531                           tosh	equ	0xFFE
 11532                           tosl	equ	0xFFD
 11533                           pclatu	equ	0xFFB
 11534                           pclath	equ	0xFFA
 11535                           tblptru	equ	0xFF8
 11536                           tblptrh	equ	0xFF7
 11537                           tblptrl	equ	0xFF6
 11538                           tablat	equ	0xFF5
 11539                           prodh	equ	0xFF4
 11540                           prodl	equ	0xFF3
 11541                           intcon	equ	0xFF2
 11542                           postinc0	equ	0xFEE
 11543                           fsr0h	equ	0xFEA
 11544                           fsr0l	equ	0xFE9
 11545                           wreg	equ	0xFE8
 11546                           fsr1h	equ	0xFE2
 11547                           fsr1l	equ	0xFE1
 11548                           bsr	equ	0xFE0
 11549                           indf2	equ	0xFDF
 11550                           postinc2	equ	0xFDE
 11551                           postdec2	equ	0xFDD
 11552                           fsr2h	equ	0xFDA
 11553                           fsr2l	equ	0xFD9
 11554                           status	equ	0xFD8
 11555                           
 11556 ;; *************** function _TMR6_ISR *****************
 11557 ;; Defined at:
 11558 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 11559 ;; Parameters:    Size  Location     Type
 11560 ;;		None
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;		None
 11563 ;; Return value:  Size  Location     Type
 11564 ;;                  1    wreg      void 
 11565 ;; Registers used:
 11566 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11567 ;; Tracked objects:
 11568 ;;		On entry : 0/0
 11569 ;;		On exit  : 0/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11576 ;;Total ram usage:        0 bytes
 11577 ;; Hardware stack levels used:    1
 11578 ;; Hardware stack levels required when called:    7
 11579 ;; This function calls:
 11580 ;;		Absolute function
 11581 ;;		_TMR6_DefaultInterruptHandler
 11582 ;;		_heartbeatTimerCallback
 11583 ;; This function is called by:
 11584 ;;		_INTERRUPT_InterruptManagerLow
 11585 ;; This function uses a non-reentrant model
 11586 ;;
 11587                           
 11588                           	psect	text53
 11589  013BC4                     __ptext53:
 11590                           	opt stack 0
 11591  013BC4                     _TMR6_ISR:
 11592                           	opt stack 14
 11593                           
 11594                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 11595                           
 11596                           ; BSR set to: 15
 11597                           ;incstack = 0
 11598  013BC4  010E               	movlb	14	; () banked
 11599  013BC6  9B38               	bcf	56,5,b	;volatile
 11600                           
 11601                           ; BSR set to: 14
 11602                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 11603  013BC8  0100               	movlb	0	; () banked
 11604  013BCA  51C3               	movf	_TMR6_InterruptHandler& (0+255),w,b
 11605  013BCC  11C4               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 11606  013BCE  11C5               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 11607  013BD0  B4D8               	btfsc	status,2,c
 11608  013BD2  0012               	return	
 11609                           
 11610                           ; BSR set to: 0
 11611                           ;tmr6.c: 172: {
 11612                           ;tmr6.c: 173: TMR6_InterruptHandler();
 11613  013BD4  D801               	call	i1u1020_28
 11614  013BD6  0012               	return	
 11615  013BD8                     i1u1020_28:
 11616  013BD8  0005               	push	
 11617  013BDA  6EFA               	movwf	pclath,c
 11618  013BDC  51C3               	movf	_TMR6_InterruptHandler& (0+255),w,b
 11619  013BDE  6EFD               	movwf	tosl,c
 11620  013BE0  51C4               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 11621  013BE2  6EFE               	movwf	tosh,c
 11622  013BE4  51C5               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 11623  013BE6  6EFF               	movwf	tosu,c
 11624  013BE8  50FA               	movf	pclath,w,c
 11625  013BEA  0012               	return		;indir
 11626  013BEC                     __end_of_TMR6_ISR:
 11627                           	opt stack 0
 11628                           tosu	equ	0xFFF
 11629                           tosh	equ	0xFFE
 11630                           tosl	equ	0xFFD
 11631                           pclatu	equ	0xFFB
 11632                           pclath	equ	0xFFA
 11633                           tblptru	equ	0xFF8
 11634                           tblptrh	equ	0xFF7
 11635                           tblptrl	equ	0xFF6
 11636                           tablat	equ	0xFF5
 11637                           prodh	equ	0xFF4
 11638                           prodl	equ	0xFF3
 11639                           intcon	equ	0xFF2
 11640                           postinc0	equ	0xFEE
 11641                           fsr0h	equ	0xFEA
 11642                           fsr0l	equ	0xFE9
 11643                           wreg	equ	0xFE8
 11644                           fsr1h	equ	0xFE2
 11645                           fsr1l	equ	0xFE1
 11646                           bsr	equ	0xFE0
 11647                           indf2	equ	0xFDF
 11648                           postinc2	equ	0xFDE
 11649                           postdec2	equ	0xFDD
 11650                           fsr2h	equ	0xFDA
 11651                           fsr2l	equ	0xFD9
 11652                           status	equ	0xFD8
 11653                           
 11654 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 11655 ;; Defined at:
 11656 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 11657 ;; Parameters:    Size  Location     Type
 11658 ;;		None
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;		None
 11661 ;; Return value:  Size  Location     Type
 11662 ;;                  1    wreg      void 
 11663 ;; Registers used:
 11664 ;;		None
 11665 ;; Tracked objects:
 11666 ;;		On entry : 0/0
 11667 ;;		On exit  : 0/0
 11668 ;;		Unchanged: 0/0
 11669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11674 ;;Total ram usage:        0 bytes
 11675 ;; Hardware stack levels used:    1
 11676 ;; Hardware stack levels required when called:    6
 11677 ;; This function calls:
 11678 ;;		Nothing
 11679 ;; This function is called by:
 11680 ;;		_TMR6_Initialize
 11681 ;;		_TMR6_ISR
 11682 ;; This function uses a non-reentrant model
 11683 ;;
 11684                           
 11685                           	psect	text54
 11686  013E62                     __ptext54:
 11687                           	opt stack 0
 11688  013E62                     _TMR6_DefaultInterruptHandler:
 11689                           	opt stack 14
 11690                           
 11691                           ;incstack = 0
 11692  013E62  0012               	return		;funcret
 11693  013E64                     __end_of_TMR6_DefaultInterruptHandler:
 11694                           	opt stack 0
 11695                           tosu	equ	0xFFF
 11696                           tosh	equ	0xFFE
 11697                           tosl	equ	0xFFD
 11698                           pclatu	equ	0xFFB
 11699                           pclath	equ	0xFFA
 11700                           tblptru	equ	0xFF8
 11701                           tblptrh	equ	0xFF7
 11702                           tblptrl	equ	0xFF6
 11703                           tablat	equ	0xFF5
 11704                           prodh	equ	0xFF4
 11705                           prodl	equ	0xFF3
 11706                           intcon	equ	0xFF2
 11707                           postinc0	equ	0xFEE
 11708                           fsr0h	equ	0xFEA
 11709                           fsr0l	equ	0xFE9
 11710                           wreg	equ	0xFE8
 11711                           fsr1h	equ	0xFE2
 11712                           fsr1l	equ	0xFE1
 11713                           bsr	equ	0xFE0
 11714                           indf2	equ	0xFDF
 11715                           postinc2	equ	0xFDE
 11716                           postdec2	equ	0xFDD
 11717                           fsr2h	equ	0xFDA
 11718                           fsr2l	equ	0xFD9
 11719                           status	equ	0xFD8
 11720                           
 11721 ;; *************** function _heartbeatTimerCallback *****************
 11722 ;; Defined at:
 11723 ;;		line 64 in file "main.c"
 11724 ;; Parameters:    Size  Location     Type
 11725 ;;		None
 11726 ;; Auto vars:     Size  Location     Type
 11727 ;;		None
 11728 ;; Return value:  Size  Location     Type
 11729 ;;                  1    wreg      void 
 11730 ;; Registers used:
 11731 ;;		wreg, status,2, status,0
 11732 ;; Tracked objects:
 11733 ;;		On entry : 0/0
 11734 ;;		On exit  : 0/0
 11735 ;;		Unchanged: 0/0
 11736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11739 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11740 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11741 ;;Total ram usage:        1 bytes
 11742 ;; Hardware stack levels used:    1
 11743 ;; Hardware stack levels required when called:    6
 11744 ;; This function calls:
 11745 ;;		Nothing
 11746 ;; This function is called by:
 11747 ;;		_main
 11748 ;;		_TMR6_ISR
 11749 ;; This function uses a non-reentrant model
 11750 ;;
 11751                           
 11752                           	psect	text55
 11753  013D38                     __ptext55:
 11754                           	opt stack 0
 11755  013D38                     _heartbeatTimerCallback:
 11756                           	opt stack 14
 11757                           
 11758                           ;main.c: 67: LATFbits.LATF2 = !LATFbits.LATF2;
 11759                           
 11760                           ;incstack = 0
 11761  013D38  B47E               	btfsc	3966,2,c	;volatile
 11762  013D3A  D004               	goto	i1u527_20
 11763  013D3C  0100               	movlb	0	; () banked
 11764  013D3E  6B72               	clrf	??_heartbeatTimerCallback& (0+255),b
 11765  013D40  2B72               	incf	??_heartbeatTimerCallback& (0+255),f,b
 11766  013D42  D002               	goto	i1u528_28
 11767  013D44                     i1u527_20:
 11768  013D44  0100               	movlb	0	; () banked
 11769  013D46  6B72               	clrf	??_heartbeatTimerCallback& (0+255),b
 11770  013D48                     i1u528_28:
 11771  013D48  4772               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 11772  013D4A  4772               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 11773  013D4C  507E               	movf	3966,w,c	;volatile
 11774  013D4E  1972               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 11775  013D50  0BFB               	andlw	-5
 11776  013D52  1972               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 11777  013D54  6E7E               	movwf	3966,c	;volatile
 11778  013D56  0004               	clrwdt		;# 
 11779  013D58  0012               	return		;funcret
 11780  013D5A                     __end_of_heartbeatTimerCallback:
 11781                           	opt stack 0
 11782                           tosu	equ	0xFFF
 11783                           tosh	equ	0xFFE
 11784                           tosl	equ	0xFFD
 11785                           pclatu	equ	0xFFB
 11786                           pclath	equ	0xFFA
 11787                           tblptru	equ	0xFF8
 11788                           tblptrh	equ	0xFF7
 11789                           tblptrl	equ	0xFF6
 11790                           tablat	equ	0xFF5
 11791                           prodh	equ	0xFF4
 11792                           prodl	equ	0xFF3
 11793                           intcon	equ	0xFF2
 11794                           postinc0	equ	0xFEE
 11795                           fsr0h	equ	0xFEA
 11796                           fsr0l	equ	0xFE9
 11797                           wreg	equ	0xFE8
 11798                           fsr1h	equ	0xFE2
 11799                           fsr1l	equ	0xFE1
 11800                           bsr	equ	0xFE0
 11801                           indf2	equ	0xFDF
 11802                           postinc2	equ	0xFDE
 11803                           postdec2	equ	0xFDD
 11804                           fsr2h	equ	0xFDA
 11805                           fsr2l	equ	0xFD9
 11806                           status	equ	0xFD8
 11807                           
 11808 ;; *************** function _EUSART2_Transmit_ISR *****************
 11809 ;; Defined at:
 11810 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 11811 ;; Parameters:    Size  Location     Type
 11812 ;;		None
 11813 ;; Auto vars:     Size  Location     Type
 11814 ;;		None
 11815 ;; Return value:  Size  Location     Type
 11816 ;;                  1    wreg      void 
 11817 ;; Registers used:
 11818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11819 ;; Tracked objects:
 11820 ;;		On entry : 0/0
 11821 ;;		On exit  : 0/0
 11822 ;;		Unchanged: 0/0
 11823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11828 ;;Total ram usage:        0 bytes
 11829 ;; Hardware stack levels used:    1
 11830 ;; Hardware stack levels required when called:    6
 11831 ;; This function calls:
 11832 ;;		Nothing
 11833 ;; This function is called by:
 11834 ;;		_EUSART2_Initialize
 11835 ;;		_INTERRUPT_InterruptManagerLow
 11836 ;; This function uses a non-reentrant model
 11837 ;;
 11838                           
 11839                           	psect	text56
 11840  013B00                     __ptext56:
 11841                           	opt stack 0
 11842  013B00                     _EUSART2_Transmit_ISR:
 11843                           	opt stack 15
 11844                           
 11845                           ;eusart2.c: 189: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 11846                           
 11847                           ;incstack = 0
 11848  013B00  0E40               	movlw	64
 11849  013B02  0100               	movlb	0	; () banked
 11850  013B04  61D3               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 11851  013B06  D014               	goto	i1l381
 11852                           
 11853                           ; BSR set to: 0
 11854                           ;eusart2.c: 190: {
 11855                           ;eusart2.c: 191: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 11856  013B08  51D4               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 11857  013B0A  0D01               	mullw	1
 11858  013B0C  0E40               	movlw	low _eusart2TxBuffer
 11859  013B0E  24F3               	addwf	prodl,w,c
 11860  013B10  6ED9               	movwf	fsr2l,c
 11861  013B12  0E01               	movlw	high _eusart2TxBuffer
 11862  013B14  20F4               	addwfc	prodh,w,c
 11863  013B16  6EDA               	movwf	fsr2h,c
 11864  013B18  50DF               	movf	indf2,w,c
 11865  013B1A  010E               	movlb	14	; () banked
 11866  013B1C  6FF2               	movwf	242,b	;volatile
 11867                           
 11868                           ; BSR set to: 14
 11869  013B1E  0100               	movlb	0	; () banked
 11870  013B20  2BD4               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 11871                           
 11872                           ; BSR set to: 0
 11873                           ;eusart2.c: 192: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 11874  013B22  0E3F               	movlw	63
 11875  013B24  65D4               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 11876  013B26  D002               	goto	i1l382
 11877                           
 11878                           ; BSR set to: 0
 11879                           ;eusart2.c: 193: {
 11880                           ;eusart2.c: 194: eusart2TxTail = 0;
 11881  013B28  0E00               	movlw	0
 11882  013B2A  6FD4               	movwf	_eusart2TxTail& (0+255),b	;volatile
 11883  013B2C                     i1l382:
 11884                           
 11885                           ; BSR set to: 0
 11886                           ;eusart2.c: 195: }
 11887                           ;eusart2.c: 196: eusart2TxBufferRemaining++;
 11888                           
 11889                           ; BSR set to: 0
 11890  013B2C  2BD3               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 11891                           
 11892                           ;eusart2.c: 197: }
 11893  013B2E  0012               	return	
 11894  013B30                     i1l381:
 11895                           
 11896                           ; BSR set to: 0
 11897                           ;eusart2.c: 198: else
 11898                           ;eusart2.c: 199: {
 11899                           ;eusart2.c: 200: PIE3bits.TX2IE = 0;
 11900  013B30  010E               	movlb	14	; () banked
 11901  013B32  9D2C               	bcf	44,6,b	;volatile
 11902  013B34  0012               	return	
 11903  013B36                     __end_of_EUSART2_Transmit_ISR:
 11904                           	opt stack 0
 11905                           tosu	equ	0xFFF
 11906                           tosh	equ	0xFFE
 11907                           tosl	equ	0xFFD
 11908                           pclatu	equ	0xFFB
 11909                           pclath	equ	0xFFA
 11910                           tblptru	equ	0xFF8
 11911                           tblptrh	equ	0xFF7
 11912                           tblptrl	equ	0xFF6
 11913                           tablat	equ	0xFF5
 11914                           prodh	equ	0xFF4
 11915                           prodl	equ	0xFF3
 11916                           intcon	equ	0xFF2
 11917                           postinc0	equ	0xFEE
 11918                           fsr0h	equ	0xFEA
 11919                           fsr0l	equ	0xFE9
 11920                           wreg	equ	0xFE8
 11921                           fsr1h	equ	0xFE2
 11922                           fsr1l	equ	0xFE1
 11923                           bsr	equ	0xFE0
 11924                           indf2	equ	0xFDF
 11925                           postinc2	equ	0xFDE
 11926                           postdec2	equ	0xFDD
 11927                           fsr2h	equ	0xFDA
 11928                           fsr2l	equ	0xFD9
 11929                           status	equ	0xFD8
 11930                           
 11931 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 11932 ;; Defined at:
 11933 ;;		line 77 in file "mcc_generated_files/interrupt_manager.c"
 11934 ;; Parameters:    Size  Location     Type
 11935 ;;		None
 11936 ;; Auto vars:     Size  Location     Type
 11937 ;;		None
 11938 ;; Return value:  Size  Location     Type
 11939 ;;                  1    wreg      void 
 11940 ;; Registers used:
 11941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11942 ;; Tracked objects:
 11943 ;;		On entry : 0/0
 11944 ;;		On exit  : 0/0
 11945 ;;		Unchanged: 0/0
 11946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11949 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11950 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11951 ;;Total ram usage:       18 bytes
 11952 ;; Hardware stack levels used:    1
 11953 ;; Hardware stack levels required when called:    5
 11954 ;; This function calls:
 11955 ;;		Absolute function
 11956 ;;		_ADCC_ISR
 11957 ;;		_EUSART2_Receive_ISR
 11958 ;; This function is called by:
 11959 ;;		Interrupt level 2
 11960 ;; This function uses a non-reentrant model
 11961 ;;
 11962                           
 11963                           	psect	intcode
 11964  000008                     __pintcode:
 11965                           	opt stack 0
 11966  000008                     _INTERRUPT_InterruptManagerHigh:
 11967                           	opt stack 13
 11968                           
 11969                           ;incstack = 0
 11970  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11971  00000A  EFA7  F096         	goto	int_func
 11972                           tosu	equ	0xFFF
 11973                           tosh	equ	0xFFE
 11974                           tosl	equ	0xFFD
 11975                           pclatu	equ	0xFFB
 11976                           pclath	equ	0xFFA
 11977                           tblptru	equ	0xFF8
 11978                           tblptrh	equ	0xFF7
 11979                           tblptrl	equ	0xFF6
 11980                           tablat	equ	0xFF5
 11981                           prodh	equ	0xFF4
 11982                           prodl	equ	0xFF3
 11983                           intcon	equ	0xFF2
 11984                           postinc0	equ	0xFEE
 11985                           fsr0h	equ	0xFEA
 11986                           fsr0l	equ	0xFE9
 11987                           wreg	equ	0xFE8
 11988                           fsr1h	equ	0xFE2
 11989                           fsr1l	equ	0xFE1
 11990                           bsr	equ	0xFE0
 11991                           indf2	equ	0xFDF
 11992                           postinc2	equ	0xFDE
 11993                           postdec2	equ	0xFDD
 11994                           fsr2h	equ	0xFDA
 11995                           fsr2l	equ	0xFD9
 11996                           status	equ	0xFD8
 11997                           
 11998                           	psect	intcode_body
 11999  012D4E                     __pintcode_body:
 12000                           	opt stack 13
 12001  012D4E                     int_func:
 12002                           	opt stack 13
 12003  012D4E  CFFA F060          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 12004  012D52  CFFB F061          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 12005  012D56  CFE9 F062          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 12006  012D5A  CFEA F063          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 12007  012D5E  CFE1 F064          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 12008  012D62  CFE2 F065          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 12009  012D66  CFD9 F066          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 12010  012D6A  CFDA F067          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 12011  012D6E  CFF3 F068          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 12012  012D72  CFF4 F069          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 12013  012D76  CFF6 F06A          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 12014  012D7A  CFF7 F06B          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 12015  012D7E  CFF8 F06C          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 12016  012D82  CFF5 F06D          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 12017  012D86  C05F  F06E         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 12018  012D8A  C060  F06F         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 12019  012D8E  C061  F070         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 12020  012D92  C062  F071         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 12021                           
 12022                           ;interrupt_manager.c: 80: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 12023  012D96  010E               	movlb	14	; () banked
 12024  012D98  BF2C               	btfsc	44,7,b	;volatile
 12025                           
 12026                           ; BSR set to: 14
 12027  012D9A  AF36               	btfss	54,7,b	;volatile
 12028  012D9C  D00D               	goto	i2l196
 12029                           
 12030                           ; BSR set to: 14
 12031                           ;interrupt_manager.c: 81: {
 12032                           ;interrupt_manager.c: 82: EUSART2_RxDefaultInterruptHandler();
 12033  012D9E  D801               	call	i2u1030_48
 12034  012DA0  D010               	goto	i2l198
 12035  012DA2                     i2u1030_48:
 12036  012DA2  0005               	push	
 12037  012DA4  6EFA               	movwf	pclath,c
 12038  012DA6  0100               	movlb	0	; () banked
 12039  012DA8  51C6               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 12040  012DAA  6EFD               	movwf	tosl,c
 12041  012DAC  51C7               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 12042  012DAE  6EFE               	movwf	tosh,c
 12043  012DB0  51C8               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 12044  012DB2  6EFF               	movwf	tosu,c
 12045  012DB4  50FA               	movf	pclath,w,c
 12046  012DB6  0012               	return		;indir
 12047  012DB8                     i2l196:
 12048                           
 12049                           ; BSR set to: 14
 12050                           ;interrupt_manager.c: 84: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 12051  012DB8  B12A               	btfsc	42,0,b	;volatile
 12052                           
 12053                           ; BSR set to: 14
 12054  012DBA  A134               	btfss	52,0,b	;volatile
 12055  012DBC  D002               	goto	i2l198
 12056                           
 12057                           ; BSR set to: 14
 12058                           ;interrupt_manager.c: 85: {
 12059                           ;interrupt_manager.c: 86: ADCC_ISR();
 12060  012DBE  ECF6  F09D         	call	_ADCC_ISR	;wreg free
 12061  012DC2                     i2l198:
 12062                           
 12063                           ;interrupt_manager.c: 88: else
 12064                           ;interrupt_manager.c: 89: {
 12065  012DC2  C071  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 12066  012DC6  C070  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 12067  012DCA  C06F  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 12068  012DCE  C06E  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 12069  012DD2  C06D  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 12070  012DD6  C06C  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 12071  012DDA  C06B  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 12072  012DDE  C06A  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 12073  012DE2  C069  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 12074  012DE6  C068  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 12075  012DEA  C067  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 12076  012DEE  C066  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 12077  012DF2  C065  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 12078  012DF6  C064  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 12079  012DFA  C063  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 12080  012DFE  C062  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 12081  012E02  C061  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 12082  012E06  C060  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 12083  012E0A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12084  012E0C  0011               	retfie		f
 12085  012E0E                     __end_of_INTERRUPT_InterruptManagerHigh:
 12086                           	opt stack 0
 12087                           tosu	equ	0xFFF
 12088                           tosh	equ	0xFFE
 12089                           tosl	equ	0xFFD
 12090                           pclatu	equ	0xFFB
 12091                           pclath	equ	0xFFA
 12092                           tblptru	equ	0xFF8
 12093                           tblptrh	equ	0xFF7
 12094                           tblptrl	equ	0xFF6
 12095                           tablat	equ	0xFF5
 12096                           prodh	equ	0xFF4
 12097                           prodl	equ	0xFF3
 12098                           intcon	equ	0xFF2
 12099                           postinc0	equ	0xFEE
 12100                           fsr0h	equ	0xFEA
 12101                           fsr0l	equ	0xFE9
 12102                           wreg	equ	0xFE8
 12103                           fsr1h	equ	0xFE2
 12104                           fsr1l	equ	0xFE1
 12105                           bsr	equ	0xFE0
 12106                           indf2	equ	0xFDF
 12107                           postinc2	equ	0xFDE
 12108                           postdec2	equ	0xFDD
 12109                           fsr2h	equ	0xFDA
 12110                           fsr2l	equ	0xFD9
 12111                           status	equ	0xFD8
 12112                           
 12113 ;; *************** function _EUSART2_Receive_ISR *****************
 12114 ;; Defined at:
 12115 ;;		line 204 in file "mcc_generated_files/eusart2.c"
 12116 ;; Parameters:    Size  Location     Type
 12117 ;;		None
 12118 ;; Auto vars:     Size  Location     Type
 12119 ;;		None
 12120 ;; Return value:  Size  Location     Type
 12121 ;;                  1    wreg      void 
 12122 ;; Registers used:
 12123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12124 ;; Tracked objects:
 12125 ;;		On entry : 0/0
 12126 ;;		On exit  : 0/0
 12127 ;;		Unchanged: 0/0
 12128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12133 ;;Total ram usage:        0 bytes
 12134 ;; Hardware stack levels used:    1
 12135 ;; Hardware stack levels required when called:    4
 12136 ;; This function calls:
 12137 ;;		i2_printf
 12138 ;; This function is called by:
 12139 ;;		_EUSART2_Initialize
 12140 ;;		_INTERRUPT_InterruptManagerHigh
 12141 ;; This function uses a non-reentrant model
 12142 ;;
 12143                           
 12144                           	psect	text58
 12145  012F6C                     __ptext58:
 12146                           	opt stack 0
 12147  012F6C                     _EUSART2_Receive_ISR:
 12148                           	opt stack 13
 12149                           
 12150                           ;eusart2.c: 207: if(1 == RC2STAbits.OERR)
 12151                           
 12152                           ;incstack = 0
 12153  012F6C  010E               	movlb	14	; () banked
 12154  012F6E  A3F5               	btfss	245,1,b	;volatile
 12155  012F70  D002               	goto	i2l387
 12156                           
 12157                           ; BSR set to: 14
 12158                           ;eusart2.c: 208: {
 12159                           ;eusart2.c: 211: RC2STAbits.CREN = 0;
 12160  012F72  99F5               	bcf	245,4,b	;volatile
 12161                           
 12162                           ;eusart2.c: 212: RC2STAbits.CREN = 1;
 12163  012F74  89F5               	bsf	245,4,b	;volatile
 12164  012F76                     i2l387:
 12165                           
 12166                           ; BSR set to: 14
 12167                           ;eusart2.c: 213: }
 12168                           ;eusart2.c: 216: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 12169                           
 12170                           ; BSR set to: 14
 12171  012F76  0101               	movlb	1	; () banked
 12172  012F78  5180               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 12173  012F7A  0D01               	mullw	1
 12174  012F7C  0E00               	movlw	low _eusart2RxBuffer
 12175  012F7E  24F3               	addwf	prodl,w,c
 12176  012F80  6ED9               	movwf	fsr2l,c
 12177  012F82  0E01               	movlw	high _eusart2RxBuffer
 12178  012F84  20F4               	addwfc	prodh,w,c
 12179  012F86  6EDA               	movwf	fsr2h,c
 12180  012F88  CEF1 FFDF          	movff	3825,indf2	;volatile
 12181                           
 12182                           ; BSR set to: 1
 12183  012F8C  2B80               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 12184                           
 12185                           ; BSR set to: 1
 12186                           ;eusart2.c: 217: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 12187  012F8E  0E3F               	movlw	63
 12188  012F90  6580               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 12189  012F92  D002               	goto	i2l388
 12190                           
 12191                           ; BSR set to: 1
 12192                           ;eusart2.c: 218: {
 12193                           ;eusart2.c: 219: eusart2RxHead = 0;
 12194  012F94  0E00               	movlw	0
 12195  012F96  6F80               	movwf	_eusart2RxHead& (0+255),b	;volatile
 12196  012F98                     i2l388:
 12197                           
 12198                           ; BSR set to: 1
 12199                           ;eusart2.c: 220: }
 12200                           ;eusart2.c: 221: eusart2RxCount++;
 12201                           
 12202                           ; BSR set to: 1
 12203  012F98  0100               	movlb	0	; () banked
 12204  012F9A  2BD1               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 12205                           
 12206                           ; BSR set to: 0
 12207                           ;eusart2.c: 227: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 12208  012F9C  0E0A               	movlw	10
 12209  012F9E  010E               	movlb	14	; () banked
 12210  012FA0  19F1               	xorwf	241,w,b	;volatile
 12211  012FA2  B4D8               	btfsc	status,2,c
 12212  012FA4  D004               	goto	i2u868_40
 12213                           
 12214                           ; BSR set to: 14
 12215  012FA6  0E0D               	movlw	13
 12216  012FA8  19F1               	xorwf	241,w,b	;volatile
 12217  012FAA  A4D8               	btfss	status,2,c
 12218  012FAC  D006               	goto	i2l389
 12219  012FAE                     i2u868_40:
 12220                           
 12221                           ; BSR set to: 14
 12222                           ;eusart2.c: 229: eusart2RxStringReady = 1;
 12223  012FAE  0100               	movlb	0	; () banked
 12224  012FB0  81D6               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 12225                           
 12226                           ; BSR set to: 0
 12227                           ;eusart2.c: 232: RC2REG = 0;
 12228  012FB2  0E00               	movlw	0
 12229  012FB4  010E               	movlb	14	; () banked
 12230  012FB6  6FF1               	movwf	241,b	;volatile
 12231                           
 12232                           ;eusart2.c: 234: }
 12233  012FB8  D002               	goto	i2l392
 12234  012FBA                     i2l389:
 12235                           
 12236                           ; BSR set to: 14
 12237                           ;eusart2.c: 236: else {
 12238                           ;eusart2.c: 238: eusart2RxStringReady = 0;
 12239  012FBA  0100               	movlb	0	; () banked
 12240  012FBC  91D6               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 12241  012FBE                     i2l392:
 12242                           
 12243                           ;eusart2.c: 240: }
 12244                           ;eusart2.c: 243: if((RC2REG == (int) '\b')) {
 12245                           
 12246                           ; BSR set to: 0
 12247  012FBE  0E08               	movlw	8
 12248  012FC0  010E               	movlb	14	; () banked
 12249  012FC2  19F1               	xorwf	241,w,b	;volatile
 12250  012FC4  A4D8               	btfss	status,2,c
 12251  012FC6  0012               	return	
 12252                           
 12253                           ; BSR set to: 14
 12254                           ;eusart2.c: 245: eusart2RxBuffer[eusart2RxHead] = '\0';
 12255  012FC8  0101               	movlb	1	; () banked
 12256  012FCA  5180               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 12257  012FCC  0D01               	mullw	1
 12258  012FCE  0E00               	movlw	low _eusart2RxBuffer
 12259  012FD0  24F3               	addwf	prodl,w,c
 12260  012FD2  6ED9               	movwf	fsr2l,c
 12261  012FD4  0E01               	movlw	high _eusart2RxBuffer
 12262  012FD6  20F4               	addwfc	prodh,w,c
 12263  012FD8  6EDA               	movwf	fsr2h,c
 12264  012FDA  0E00               	movlw	0
 12265  012FDC  6EDF               	movwf	indf2,c
 12266                           
 12267                           ; BSR set to: 1
 12268                           ;eusart2.c: 246: eusart2RxHead--;
 12269  012FDE  0780               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 12270                           
 12271                           ; BSR set to: 1
 12272                           ;eusart2.c: 249: printf("\033[K");
 12273  012FE0  0EC2               	movlw	low STR_1
 12274  012FE2  6E40               	movwf	i2printf@f,c
 12275  012FE4  0EFF               	movlw	high STR_1
 12276  012FE6  6E41               	movwf	i2printf@f+1,c
 12277  012FE8  EC35  F083         	call	i2_printf	;wreg free
 12278                           
 12279                           ;eusart2.c: 251: if(eusart2RxHead != eusart2RxTail) {
 12280  012FEC  0100               	movlb	0	; () banked
 12281  012FEE  51D2               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 12282  012FF0  0101               	movlb	1	; () banked
 12283  012FF2  1980               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 12284  012FF4  B4D8               	btfsc	status,2,c
 12285  012FF6  D00B               	goto	i2l394
 12286                           
 12287                           ; BSR set to: 1
 12288                           ;eusart2.c: 253: eusart2RxBuffer[eusart2RxHead] = '\0';
 12289  012FF8  5180               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 12290  012FFA  0D01               	mullw	1
 12291  012FFC  0E00               	movlw	low _eusart2RxBuffer
 12292  012FFE  24F3               	addwf	prodl,w,c
 12293  013000  6ED9               	movwf	fsr2l,c
 12294  013002  0E01               	movlw	high _eusart2RxBuffer
 12295  013004  20F4               	addwfc	prodh,w,c
 12296  013006  6EDA               	movwf	fsr2h,c
 12297  013008  0E00               	movlw	0
 12298  01300A  6EDF               	movwf	indf2,c
 12299                           
 12300                           ; BSR set to: 1
 12301                           ;eusart2.c: 254: eusart2RxHead--;
 12302  01300C  0780               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 12303  01300E                     i2l394:
 12304                           
 12305                           ; BSR set to: 1
 12306                           ;eusart2.c: 256: }
 12307                           ;eusart2.c: 258: RC2REG = 0;
 12308                           
 12309                           ; BSR set to: 1
 12310  01300E  0E00               	movlw	0
 12311  013010  010E               	movlb	14	; () banked
 12312  013012  6FF1               	movwf	241,b	;volatile
 12313  013014  0012               	return	
 12314  013016                     __end_of_EUSART2_Receive_ISR:
 12315                           	opt stack 0
 12316                           tosu	equ	0xFFF
 12317                           tosh	equ	0xFFE
 12318                           tosl	equ	0xFFD
 12319                           pclatu	equ	0xFFB
 12320                           pclath	equ	0xFFA
 12321                           tblptru	equ	0xFF8
 12322                           tblptrh	equ	0xFF7
 12323                           tblptrl	equ	0xFF6
 12324                           tablat	equ	0xFF5
 12325                           prodh	equ	0xFF4
 12326                           prodl	equ	0xFF3
 12327                           intcon	equ	0xFF2
 12328                           postinc0	equ	0xFEE
 12329                           fsr0h	equ	0xFEA
 12330                           fsr0l	equ	0xFE9
 12331                           wreg	equ	0xFE8
 12332                           fsr1h	equ	0xFE2
 12333                           fsr1l	equ	0xFE1
 12334                           bsr	equ	0xFE0
 12335                           indf2	equ	0xFDF
 12336                           postinc2	equ	0xFDE
 12337                           postdec2	equ	0xFDD
 12338                           fsr2h	equ	0xFDA
 12339                           fsr2l	equ	0xFD9
 12340                           status	equ	0xFD8
 12341                           
 12342 ;; *************** function i2_printf *****************
 12343 ;; Defined at:
 12344 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 12345 ;; Parameters:    Size  Location     Type
 12346 ;;  f               2   63[COMRAM] PTR const unsigned char 
 12347 ;;		 -> STR_64(3), STR_63(337), STR_62(3), STR_60(3), 
 12348 ;;		 -> STR_59(34), STR_58(3), STR_56(3), STR_55(35), 
 12349 ;;		 -> STR_54(3), STR_52(3), STR_51(47), STR_50(17), 
 12350 ;;		 -> STR_49(3), STR_46(4), STR_45(5), STR_43(4), 
 12351 ;;		 -> STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), 
 12352 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
 12353 ;;		 -> STR_5(3), STR_4(372), STR_3(4), STR_2(5), 
 12354 ;;		 -> STR_1(4), 
 12355 ;; Auto vars:     Size  Location     Type
 12356 ;;  printf          4   86[COMRAM] struct .
 12357 ;;  printf          4   80[COMRAM] unsigned long 
 12358 ;;  printf          3   90[COMRAM] unsigned long 
 12359 ;;  printf          3    0        PTR const unsigned char 
 12360 ;;  printf          2   84[COMRAM] int 
 12361 ;;  printf          2   78[COMRAM] int 
 12362 ;;  printf          2   76[COMRAM] unsigned short 
 12363 ;;  printf          2   74[COMRAM] PTR void [1]
 12364 ;;		 -> ?i2_printf(2), ?_printf(2), 
 12365 ;;  printf          2    0        unsigned int 
 12366 ;;  printf          2    0        int 
 12367 ;;  printf          1   93[COMRAM] char 
 12368 ;;  printf          1    0        unsigned char 
 12369 ;; Return value:  Size  Location     Type
 12370 ;;                  2   63[COMRAM] int 
 12371 ;; Registers used:
 12372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12373 ;; Tracked objects:
 12374 ;;		On entry : 0/0
 12375 ;;		On exit  : 0/0
 12376 ;;		Unchanged: 0/0
 12377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12379 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12380 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12381 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12382 ;;Total ram usage:       31 bytes
 12383 ;; Hardware stack levels used:    1
 12384 ;; Hardware stack levels required when called:    3
 12385 ;; This function calls:
 12386 ;;		i2___awdiv
 12387 ;;		i2___ftadd
 12388 ;;		i2___ftge
 12389 ;;		i2___ftmul
 12390 ;;		i2___ftneg
 12391 ;;		i2___ftsub
 12392 ;;		i2___fttol
 12393 ;;		i2___lldiv
 12394 ;;		i2___llmod
 12395 ;;		i2___lltoft
 12396 ;;		i2___wmul
 12397 ;;		i2__div_to_l_
 12398 ;;		i2__tdiv_to_l_
 12399 ;;		i2_fround
 12400 ;;		i2_putch
 12401 ;;		i2_scale
 12402 ;; This function is called by:
 12403 ;;		_EUSART2_Receive_ISR
 12404 ;; This function uses a non-reentrant model
 12405 ;;
 12406                           
 12407                           	psect	text59
 12408  01066A                     __ptext59:
 12409                           	opt stack 0
 12410  01066A                     i2_printf:
 12411                           	opt stack 13
 12412                           
 12413                           ;doprnt.c: 466: va_list ap;
 12414                           ;doprnt.c: 499: signed char c;
 12415                           ;doprnt.c: 501: int width;
 12416                           ;doprnt.c: 504: int prec;
 12417                           ;doprnt.c: 508: unsigned short flag;
 12418                           ;doprnt.c: 515: char d;
 12419                           ;doprnt.c: 516: double fval;
 12420                           ;doprnt.c: 517: int exp;
 12421                           ;doprnt.c: 523: union {
 12422                           ;doprnt.c: 524: unsigned long vd;
 12423                           ;doprnt.c: 525: double integ;
 12424                           ;doprnt.c: 526: } tmpval;
 12425                           ;doprnt.c: 528: unsigned long val;
 12426                           ;doprnt.c: 529: unsigned len;
 12427                           ;doprnt.c: 530: const char * cp;
 12428                           ;doprnt.c: 533: *ap = __va_start();
 12429                           
 12430                           ; BSR set to: 14
 12431                           ;incstack = 0
 12432  01066A  0E42               	movlw	low (?i2_printf+2)
 12433  01066C  6E4B               	movwf	i2printf@ap,c
 12434  01066E  0E00               	movlw	high (?i2_printf+2)
 12435  010670  6E4C               	movwf	i2printf@ap+1,c
 12436                           
 12437                           ;doprnt.c: 536: while(c = *f++) {
 12438  010672  D2EC               	goto	i2l926
 12439  010674                     
 12440                           ;doprnt.c: 538: if(c != '%')
 12441  010674  0E25               	movlw	37
 12442  010676  185E               	xorwf	i2printf@c,w,c
 12443  010678  B4D8               	btfsc	status,2,c
 12444  01067A  D004               	goto	i2l882
 12445                           
 12446                           ;doprnt.c: 540: {
 12447                           ;doprnt.c: 541: (putch(c) );
 12448  01067C  505E               	movf	i2printf@c,w,c
 12449  01067E  EC2B  F09F         	call	i2_putch
 12450                           
 12451                           ;doprnt.c: 542: continue;
 12452  010682  D2E4               	goto	i2l926
 12453  010684                     i2l882:
 12454                           
 12455                           ;doprnt.c: 543: }
 12456                           ;doprnt.c: 548: flag = 0;
 12457  010684  0E00               	movlw	0
 12458  010686  6E4E               	movwf	i2printf@flag+1,c
 12459  010688  0E00               	movlw	0
 12460  01068A  6E4D               	movwf	i2printf@flag,c
 12461                           
 12462                           ;doprnt.c: 635: switch(c = *f++) {
 12463  01068C  D006               	goto	i2l883
 12464  01068E                     
 12465                           ;doprnt.c: 663: flag |= 0x400;
 12466  01068E  844E               	bsf	i2printf@flag+1,2,c
 12467                           
 12468                           ;doprnt.c: 664: break;
 12469  010690  D024               	goto	i2l887
 12470  010692                     
 12471                           ;doprnt.c: 809: (putch(c) );
 12472  010692  505E               	movf	i2printf@c,w,c
 12473  010694  EC2B  F09F         	call	i2_putch
 12474                           
 12475                           ;doprnt.c: 810: continue;
 12476  010698  D2D9               	goto	i2l926
 12477  01069A                     i2l883:
 12478  01069A  5040               	movf	i2printf@f,w,c
 12479  01069C  6E42               	movwf	??i2_printf& (0+255),c
 12480  01069E  5041               	movf	i2printf@f+1,w,c
 12481  0106A0  6E43               	movwf	(??i2_printf+1)& (0+255),c
 12482  0106A2  4A40               	infsnz	i2printf@f,f,c
 12483  0106A4  2A41               	incf	i2printf@f+1,f,c
 12484  0106A6  C042  FFF6         	movff	??i2_printf,tblptrl
 12485  0106AA  C043  FFF7         	movff	??i2_printf+1,tblptrh
 12486  0106AE  0E00               	movlw	low (__mediumconst shr (0+16))
 12487  0106B0  6EF8               	movwf	tblptru,c
 12488  0106B2  0E0D               	movlw	(high __ramtop+-1)
 12489  0106B4  64F7               	cpfsgt	tblptrh,c
 12490  0106B6  D003               	bra	i2u832_47
 12491  0106B8  0008               	tblrd		*
 12492  0106BA  50F5               	movf	tablat,w,c
 12493  0106BC  D005               	bra	i2u832_40
 12494  0106BE                     i2u832_47:
 12495  0106BE  CFF6 FFD9          	movff	tblptrl,fsr2l
 12496  0106C2  CFF7 FFDA          	movff	tblptrh,fsr2h
 12497  0106C6  50DF               	movf	indf2,w,c
 12498  0106C8                     i2u832_40:
 12499  0106C8  6E5E               	movwf	i2printf@c,c
 12500  0106CA  505E               	movf	i2printf@c,w,c
 12501                           
 12502                           ; Switch size 1, requested type "space"
 12503                           ; Number of cases is 2, Range of values is 0 to 102
 12504                           ; switch strategies available:
 12505                           ; Name         Instructions Cycles
 12506                           ; simple_byte            7     4 (average)
 12507                           ;	Chosen strategy is simple_byte
 12508  0106CC  0A00               	xorlw	0	; case 0
 12509  0106CE  B4D8               	btfsc	status,2,c
 12510  0106D0  0012               	return	
 12511  0106D2  0A66               	xorlw	102	; case 102
 12512  0106D4  B4D8               	btfsc	status,2,c
 12513  0106D6  D7DB               	goto	i2l886
 12514  0106D8  D7DC               	goto	i2l888
 12515  0106DA                     i2l887:
 12516                           
 12517                           ;doprnt.c: 825: if(flag & (0x700)) {
 12518  0106DA  0E07               	movlw	7
 12519  0106DC  144E               	andwf	i2printf@flag+1,w,c
 12520  0106DE  B4D8               	btfsc	status,2,c
 12521  0106E0  D2A8               	goto	i2l889
 12522                           
 12523                           ;doprnt.c: 829: prec = 6;
 12524  0106E2  0E00               	movlw	0
 12525  0106E4  6E50               	movwf	i2printf@prec+1,c
 12526  0106E6  0E06               	movlw	6
 12527  0106E8  6E4F               	movwf	i2printf@prec,c
 12528                           
 12529                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 12530  0106EA  C04B  FFD9         	movff	i2printf@ap,fsr2l
 12531  0106EE  C04C  FFDA         	movff	i2printf@ap+1,fsr2h
 12532  0106F2  CFDE F05B          	movff	postinc2,i2printf@fval
 12533  0106F6  CFDE F05C          	movff	postinc2,i2printf@fval+1
 12534  0106FA  CFDD F05D          	movff	postdec2,i2printf@fval+2
 12535  0106FE  0E03               	movlw	3
 12536  010700  264B               	addwf	i2printf@ap,f,c
 12537  010702  0E00               	movlw	0
 12538  010704  224C               	addwfc	i2printf@ap+1,f,c
 12539                           
 12540                           ;doprnt.c: 831: if(fval < 0.0) {
 12541  010706  AE5D               	btfss	i2printf@fval+2,7,c
 12542  010708  D010               	goto	i2l890
 12543                           
 12544                           ;doprnt.c: 832: fval = -fval;
 12545  01070A  C05B  F001         	movff	i2printf@fval,i2___ftneg@f1
 12546  01070E  C05C  F002         	movff	i2printf@fval+1,i2___ftneg@f1+1
 12547  010712  C05D  F003         	movff	i2printf@fval+2,i2___ftneg@f1+2
 12548  010716  EC56  F09E         	call	i2___ftneg	;wreg free
 12549  01071A  C001  F05B         	movff	?i2___ftneg,i2printf@fval
 12550  01071E  C002  F05C         	movff	?i2___ftneg+1,i2printf@fval+1
 12551  010722  C003  F05D         	movff	?i2___ftneg+2,i2printf@fval+2
 12552                           
 12553                           ;doprnt.c: 833: flag |= 0x03;
 12554  010726  0E03               	movlw	3
 12555  010728  124D               	iorwf	i2printf@flag,f,c
 12556  01072A                     i2l890:
 12557                           
 12558                           ;doprnt.c: 834: }
 12559                           ;doprnt.c: 835: exp = 0;
 12560  01072A  0E00               	movlw	0
 12561  01072C  6E56               	movwf	i2printf@exp+1,c
 12562  01072E  0E00               	movlw	0
 12563  010730  6E55               	movwf	i2printf@exp,c
 12564                           
 12565                           ;doprnt.c: 836: if( fval!=0) {
 12566  010732  505B               	movf	i2printf@fval,w,c
 12567  010734  105C               	iorwf	i2printf@fval+1,w,c
 12568  010736  105D               	iorwf	i2printf@fval+2,w,c
 12569  010738  B4D8               	btfsc	status,2,c
 12570  01073A  D083               	goto	i2l895
 12571                           
 12572                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 12573  01073C  0E82               	movlw	130
 12574  01073E  6E42               	movwf	??i2_printf& (0+255),c
 12575  010740  0EFF               	movlw	255
 12576  010742  6E43               	movwf	(??i2_printf+1)& (0+255),c
 12577  010744  C05B  F044         	movff	i2printf@fval,??i2_printf+2
 12578  010748  C05C  F045         	movff	i2printf@fval+1,??i2_printf+3
 12579  01074C  C05D  F046         	movff	i2printf@fval+2,??i2_printf+4
 12580  010750  C05E  F047         	movff	i2printf@fval+3,??i2_printf+5
 12581  010754  0E10               	movlw	16
 12582  010756  D005               	goto	i2u836_40
 12583  010758                     i2u836_45:
 12584  010758  90D8               	bcf	status,0,c
 12585  01075A  3247               	rrcf	??i2_printf+5,f,c
 12586  01075C  3246               	rrcf	??i2_printf+4,f,c
 12587  01075E  3245               	rrcf	??i2_printf+3,f,c
 12588  010760  3244               	rrcf	??i2_printf+2,f,c
 12589  010762                     i2u836_40:
 12590  010762  2EE8               	decfsz	wreg,f,c
 12591  010764  D7F9               	goto	i2u836_45
 12592  010766  5044               	movf	??i2_printf+2,w,c
 12593  010768  2442               	addwf	??i2_printf,w,c
 12594  01076A  6E55               	movwf	i2printf@exp,c
 12595  01076C  0E00               	movlw	0
 12596  01076E  2043               	addwfc	??i2_printf+1,w,c
 12597  010770  6E56               	movwf	i2printf@exp+1,c
 12598                           
 12599                           ;doprnt.c: 838: exp--;
 12600  010772  0655               	decf	i2printf@exp,f,c
 12601  010774  A0D8               	btfss	status,0,c
 12602  010776  0656               	decf	i2printf@exp+1,f,c
 12603                           
 12604                           ;doprnt.c: 839: exp *= 3;
 12605  010778  C055  F00F         	movff	i2printf@exp,i2___wmul@multiplier
 12606  01077C  C056  F010         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 12607  010780  0E00               	movlw	0
 12608  010782  6E12               	movwf	i2___wmul@multiplicand+1,c
 12609  010784  0E03               	movlw	3
 12610  010786  6E11               	movwf	i2___wmul@multiplicand,c
 12611  010788  EC43  F09E         	call	i2___wmul	;wreg free
 12612  01078C  C00F  F055         	movff	?i2___wmul,i2printf@exp
 12613  010790  C010  F056         	movff	?i2___wmul+1,i2printf@exp+1
 12614                           
 12615                           ;doprnt.c: 840: exp /= 10;
 12616  010794  C055  F007         	movff	i2printf@exp,i2___awdiv@dividend
 12617  010798  C056  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 12618  01079C  0E00               	movlw	0
 12619  01079E  6E0A               	movwf	i2___awdiv@divisor+1,c
 12620  0107A0  0E0A               	movlw	10
 12621  0107A2  6E09               	movwf	i2___awdiv@divisor,c
 12622  0107A4  ECB9  F099         	call	i2___awdiv	;wreg free
 12623  0107A8  C007  F055         	movff	?i2___awdiv,i2printf@exp
 12624  0107AC  C008  F056         	movff	?i2___awdiv+1,i2printf@exp+1
 12625                           
 12626                           ;doprnt.c: 841: if(exp < 0)
 12627  0107B0  AE56               	btfss	i2printf@exp+1,7,c
 12628  0107B2  D003               	goto	i2l892
 12629                           
 12630                           ;doprnt.c: 842: exp--;
 12631  0107B4  0655               	decf	i2printf@exp,f,c
 12632  0107B6  A0D8               	btfss	status,0,c
 12633  0107B8  0656               	decf	i2printf@exp+1,f,c
 12634  0107BA                     i2l892:
 12635                           
 12636                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 12637  0107BA  5055               	movf	i2printf@exp,w,c
 12638  0107BC  0800               	sublw	0
 12639  0107BE  EC82  F088         	call	i2_scale
 12640  0107C2  C024  F057         	movff	?i2_scale,i2printf@tmpval
 12641  0107C6  C025  F058         	movff	?i2_scale+1,i2printf@tmpval+1
 12642  0107CA  C026  F059         	movff	?i2_scale+2,i2printf@tmpval+2
 12643                           
 12644                           ;doprnt.c: 847: tmpval.integ *= fval;
 12645  0107CE  C057  F015         	movff	i2printf@tmpval,i2___ftmul@f1
 12646  0107D2  C058  F016         	movff	i2printf@tmpval+1,i2___ftmul@f1+1
 12647  0107D6  C059  F017         	movff	i2printf@tmpval+2,i2___ftmul@f1+2
 12648  0107DA  C05B  F018         	movff	i2printf@fval,i2___ftmul@f2
 12649  0107DE  C05C  F019         	movff	i2printf@fval+1,i2___ftmul@f2+1
 12650  0107E2  C05D  F01A         	movff	i2printf@fval+2,i2___ftmul@f2+2
 12651  0107E6  EC2D  F096         	call	i2___ftmul	;wreg free
 12652  0107EA  C015  F057         	movff	?i2___ftmul,i2printf@tmpval
 12653  0107EE  C016  F058         	movff	?i2___ftmul+1,i2printf@tmpval+1
 12654  0107F2  C017  F059         	movff	?i2___ftmul+2,i2printf@tmpval+2
 12655                           
 12656                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 12657  0107F6  C057  F001         	movff	i2printf@tmpval,i2___ftge@ff1
 12658  0107FA  C058  F002         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 12659  0107FE  C059  F003         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 12660  010802  0E00               	movlw	0
 12661  010804  6E04               	movwf	i2___ftge@ff2,c
 12662  010806  0E80               	movlw	128
 12663  010808  6E05               	movwf	i2___ftge@ff2+1,c
 12664  01080A  0E3F               	movlw	63
 12665  01080C  6E06               	movwf	i2___ftge@ff2+2,c
 12666  01080E  ECA5  F098         	call	i2___ftge	;wreg free
 12667  010812  B0D8               	btfsc	status,0,c
 12668  010814  D004               	goto	i2l893
 12669                           
 12670                           ;doprnt.c: 849: exp--;
 12671  010816  0655               	decf	i2printf@exp,f,c
 12672  010818  A0D8               	btfss	status,0,c
 12673  01081A  0656               	decf	i2printf@exp+1,f,c
 12674  01081C  D012               	goto	i2l895
 12675  01081E                     i2l893:
 12676                           
 12677                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 12678  01081E  C057  F001         	movff	i2printf@tmpval,i2___ftge@ff1
 12679  010822  C058  F002         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 12680  010826  C059  F003         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 12681  01082A  0E00               	movlw	0
 12682  01082C  6E04               	movwf	i2___ftge@ff2,c
 12683  01082E  0E20               	movlw	32
 12684  010830  6E05               	movwf	i2___ftge@ff2+1,c
 12685  010832  0E41               	movlw	65
 12686  010834  6E06               	movwf	i2___ftge@ff2+2,c
 12687  010836  ECA5  F098         	call	i2___ftge	;wreg free
 12688  01083A  A0D8               	btfss	status,0,c
 12689  01083C  D002               	goto	i2l895
 12690                           
 12691                           ;doprnt.c: 851: exp++;
 12692  01083E  4A55               	infsnz	i2printf@exp,f,c
 12693  010840  2A56               	incf	i2printf@exp+1,f,c
 12694  010842                     i2l895:
 12695                           
 12696                           ;doprnt.c: 852: }
 12697                           ;doprnt.c: 1112: if(prec <= 12)
 12698  010842  BE50               	btfsc	i2printf@prec+1,7,c
 12699  010844  D006               	goto	i2u840_40
 12700  010846  5050               	movf	i2printf@prec+1,w,c
 12701  010848  E11B               	bnz	i2l7243
 12702  01084A  0E0D               	movlw	13
 12703  01084C  5C4F               	subwf	i2printf@prec,w,c
 12704  01084E  B0D8               	btfsc	status,0,c
 12705  010850  D017               	goto	i2l896
 12706  010852                     i2u840_40:
 12707                           
 12708                           ;doprnt.c: 1113: fval += fround(prec);
 12709  010852  C05B  F02E         	movff	i2printf@fval,i2___ftadd@f1
 12710  010856  C05C  F02F         	movff	i2printf@fval+1,i2___ftadd@f1+1
 12711  01085A  C05D  F030         	movff	i2printf@fval+2,i2___ftadd@f1+2
 12712  01085E  504F               	movf	i2printf@prec,w,c
 12713  010860  ECA8  F08D         	call	i2_fround
 12714  010864  C024  F031         	movff	?i2_fround,i2___ftadd@f2
 12715  010868  C025  F032         	movff	?i2_fround+1,i2___ftadd@f2+1
 12716  01086C  C026  F033         	movff	?i2_fround+2,i2___ftadd@f2+2
 12717  010870  ECDB  F090         	call	i2___ftadd	;wreg free
 12718  010874  C02E  F05B         	movff	?i2___ftadd,i2printf@fval
 12719  010878  C02F  F05C         	movff	?i2___ftadd+1,i2printf@fval+1
 12720  01087C  C030  F05D         	movff	?i2___ftadd+2,i2printf@fval+2
 12721  010880                     i2l896:
 12722  010880                     i2l7243:
 12723                           
 12724                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 12725  010880  BE56               	btfsc	i2printf@exp+1,7,c
 12726  010882  D006               	goto	i2u841_40
 12727  010884  5056               	movf	i2printf@exp+1,w,c
 12728  010886  E11E               	bnz	i2l7251
 12729  010888  0E0A               	movlw	10
 12730  01088A  5C55               	subwf	i2printf@exp,w,c
 12731  01088C  B0D8               	btfsc	status,0,c
 12732  01088E  D01A               	goto	i2u844_40
 12733  010890                     i2u841_40:
 12734  010890  505B               	movf	i2printf@fval,w,c
 12735  010892  105C               	iorwf	i2printf@fval+1,w,c
 12736  010894  105D               	iorwf	i2printf@fval+2,w,c
 12737  010896  B4D8               	btfsc	status,2,c
 12738  010898  D051               	goto	i2l897
 12739  01089A  C05B  F024         	movff	i2printf@fval,i2___fttol@f1
 12740  01089E  C05C  F025         	movff	i2printf@fval+1,i2___fttol@f1+1
 12741  0108A2  C05D  F026         	movff	i2printf@fval+2,i2___fttol@f1+2
 12742  0108A6  ECB3  F095         	call	i2___fttol	;wreg free
 12743  0108AA  5024               	movf	?i2___fttol,w,c
 12744  0108AC  1025               	iorwf	?i2___fttol+1,w,c
 12745  0108AE  1026               	iorwf	?i2___fttol+2,w,c
 12746  0108B0  1027               	iorwf	?i2___fttol+3,w,c
 12747  0108B2  B4D8               	btfsc	status,2,c
 12748  0108B4  BE56               	btfsc	i2printf@exp+1,7,c
 12749  0108B6  D042               	goto	i2l897
 12750  0108B8  5056               	movf	i2printf@exp+1,w,c
 12751  0108BA  E104               	bnz	i2l7251
 12752  0108BC  0E02               	movlw	2
 12753  0108BE  5C55               	subwf	i2printf@exp,w,c
 12754  0108C0  A0D8               	btfss	status,0,c
 12755  0108C2  D03C               	goto	i2l897
 12756  0108C4                     i2u844_40:
 12757  0108C4                     i2l7251:
 12758                           
 12759                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 12760  0108C4  C057  F001         	movff	i2printf@tmpval,i2___ftge@ff1
 12761  0108C8  C058  F002         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 12762  0108CC  C059  F003         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 12763  0108D0  0E70               	movlw	112
 12764  0108D2  6E04               	movwf	i2___ftge@ff2,c
 12765  0108D4  0E89               	movlw	137
 12766  0108D6  6E05               	movwf	i2___ftge@ff2+1,c
 12767  0108D8  0E40               	movlw	64
 12768  0108DA  6E06               	movwf	i2___ftge@ff2+2,c
 12769  0108DC  ECA5  F098         	call	i2___ftge	;wreg free
 12770  0108E0  B0D8               	btfsc	status,0,c
 12771  0108E2  D002               	goto	i2l900
 12772                           
 12773                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 12774  0108E4  0EF7               	movlw	247
 12775  0108E6  D001               	goto	L2
 12776  0108E8                     i2l900:
 12777                           
 12778                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 12779  0108E8  0EF8               	movlw	248
 12780  0108EA                     L2:
 12781  0108EA  2655               	addwf	i2printf@exp,f,c
 12782  0108EC  0EFF               	movlw	255
 12783  0108EE  2256               	addwfc	i2printf@exp+1,f,c
 12784                           
 12785                           ;doprnt.c: 1124: }
 12786                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 12787  0108F0  5055               	movf	i2printf@exp,w,c
 12788  0108F2  EC82  F088         	call	i2_scale
 12789  0108F6  C024  F057         	movff	?i2_scale,i2printf@tmpval
 12790  0108FA  C025  F058         	movff	?i2_scale+1,i2printf@tmpval+1
 12791  0108FE  C026  F059         	movff	?i2_scale+2,i2printf@tmpval+2
 12792                           
 12793                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 12794  010902  C05B  F001         	movff	i2printf@fval,i2__tdiv_to_l_@f1
 12795  010906  C05C  F002         	movff	i2printf@fval+1,i2__tdiv_to_l_@f1+1
 12796  01090A  C05D  F003         	movff	i2printf@fval+2,i2__tdiv_to_l_@f1+2
 12797  01090E  C057  F004         	movff	i2printf@tmpval,i2__tdiv_to_l_@f2
 12798  010912  C058  F005         	movff	i2printf@tmpval+1,i2__tdiv_to_l_@f2+1
 12799  010916  C059  F006         	movff	i2printf@tmpval+2,i2__tdiv_to_l_@f2+2
 12800  01091A  ECEB  F092         	call	i2__tdiv_to_l_	;wreg free
 12801  01091E  C001  F051         	movff	?i2__tdiv_to_l_,i2printf@val
 12802  010922  C002  F052         	movff	?i2__tdiv_to_l_+1,i2printf@val+1
 12803  010926  C003  F053         	movff	?i2__tdiv_to_l_+2,i2printf@val+2
 12804  01092A  C004  F054         	movff	?i2__tdiv_to_l_+3,i2printf@val+3
 12805                           
 12806                           ;doprnt.c: 1129: fval = 0.0;
 12807  01092E  0E00               	movlw	0
 12808  010930  6E5B               	movwf	i2printf@fval,c
 12809  010932  0E00               	movlw	0
 12810  010934  6E5C               	movwf	i2printf@fval+1,c
 12811  010936  0E00               	movlw	0
 12812  010938  6E5D               	movwf	i2printf@fval+2,c
 12813                           
 12814                           ;doprnt.c: 1130: } else {
 12815  01093A  D032               	goto	i2l906
 12816  01093C                     i2l897:
 12817                           
 12818                           ;doprnt.c: 1131: val = (unsigned long)fval;
 12819  01093C  C05B  F024         	movff	i2printf@fval,i2___fttol@f1
 12820  010940  C05C  F025         	movff	i2printf@fval+1,i2___fttol@f1+1
 12821  010944  C05D  F026         	movff	i2printf@fval+2,i2___fttol@f1+2
 12822  010948  ECB3  F095         	call	i2___fttol	;wreg free
 12823  01094C  C024  F051         	movff	?i2___fttol,i2printf@val
 12824  010950  C025  F052         	movff	?i2___fttol+1,i2printf@val+1
 12825  010954  C026  F053         	movff	?i2___fttol+2,i2printf@val+2
 12826  010958  C027  F054         	movff	?i2___fttol+3,i2printf@val+3
 12827                           
 12828                           ;doprnt.c: 1132: fval -= (double)val;
 12829  01095C  C05B  F03A         	movff	i2printf@fval,i2___ftsub@f1
 12830  010960  C05C  F03B         	movff	i2printf@fval+1,i2___ftsub@f1+1
 12831  010964  C05D  F03C         	movff	i2printf@fval+2,i2___ftsub@f1+2
 12832  010968  C051  F009         	movff	i2printf@val,i2___lltoft@c
 12833  01096C  C052  F00A         	movff	i2printf@val+1,i2___lltoft@c+1
 12834  010970  C053  F00B         	movff	i2printf@val+2,i2___lltoft@c+2
 12835  010974  C054  F00C         	movff	i2printf@val+3,i2___lltoft@c+3
 12836  010978  EC14  F09C         	call	i2___lltoft	;wreg free
 12837  01097C  C009  F03D         	movff	?i2___lltoft,i2___ftsub@f2
 12838  010980  C00A  F03E         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 12839  010984  C00B  F03F         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 12840  010988  EC41  F09D         	call	i2___ftsub	;wreg free
 12841  01098C  C03A  F05B         	movff	?i2___ftsub,i2printf@fval
 12842  010990  C03B  F05C         	movff	?i2___ftsub+1,i2printf@fval+1
 12843  010994  C03C  F05D         	movff	?i2___ftsub+2,i2printf@fval+2
 12844                           
 12845                           ;doprnt.c: 1133: exp = 0;
 12846  010998  0E00               	movlw	0
 12847  01099A  6E56               	movwf	i2printf@exp+1,c
 12848  01099C  0E00               	movlw	0
 12849  01099E  6E55               	movwf	i2printf@exp,c
 12850  0109A0                     i2l906:
 12851                           
 12852                           ;doprnt.c: 1134: }
 12853                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 12854  0109A0  0E01               	movlw	1
 12855  0109A2  6E5E               	movwf	i2printf@c,c
 12856  0109A4                     i2l7271:
 12857  0109A4  0E0A               	movlw	10
 12858  0109A6  185E               	xorwf	i2printf@c,w,c
 12859  0109A8  B4D8               	btfsc	status,2,c
 12860  0109AA  D01B               	goto	i2u848_40
 12861                           
 12862                           ;doprnt.c: 1137: if(val < dpowers[c])
 12863  0109AC  505E               	movf	i2printf@c,w,c
 12864  0109AE  0D04               	mullw	4
 12865  0109B0  0EB7               	movlw	low _dpowers
 12866  0109B2  24F3               	addwf	prodl,w,c
 12867  0109B4  6EF6               	movwf	tblptrl,c
 12868  0109B6  0EFB               	movlw	high _dpowers
 12869  0109B8  20F4               	addwfc	prodh,w,c
 12870  0109BA  6EF7               	movwf	tblptrh,c
 12871  0109BC                     	if	1	;There are 3 active tblptr bytes
 12872  0109BC  6AF8               	clrf	tblptru,c
 12873  0109BE  0E00               	movlw	low (__mediumconst shr (0+16))
 12874  0109C0  22F8               	addwfc	tblptru,f,c
 12875  0109C2                     	endif
 12876  0109C2  0009               	tblrd		*+
 12877  0109C4  50F5               	movf	tablat,w,c
 12878  0109C6  5C51               	subwf	i2printf@val,w,c
 12879  0109C8  0009               	tblrd		*+
 12880  0109CA  50F5               	movf	tablat,w,c
 12881  0109CC  5852               	subwfb	i2printf@val+1,w,c
 12882  0109CE  0009               	tblrd		*+
 12883  0109D0  50F5               	movf	tablat,w,c
 12884  0109D2  5853               	subwfb	i2printf@val+2,w,c
 12885  0109D4  0009               	tblrd		*+
 12886  0109D6  50F5               	movf	tablat,w,c
 12887  0109D8  5854               	subwfb	i2printf@val+3,w,c
 12888  0109DA  A0D8               	btfss	status,0,c
 12889  0109DC  D002               	goto	i2u848_40
 12890                           
 12891                           ;doprnt.c: 1138: break;
 12892  0109DE  2A5E               	incf	i2printf@c,f,c
 12893  0109E0  D7E1               	goto	i2l7271
 12894  0109E2                     i2u848_40:
 12895                           
 12896                           ;doprnt.c: 1175: {
 12897                           ;doprnt.c: 1188: if(flag & 0x03)
 12898  0109E2  0E03               	movlw	3
 12899  0109E4  144D               	andwf	i2printf@flag,w,c
 12900  0109E6  6E42               	movwf	??i2_printf& (0+255),c
 12901  0109E8  0E00               	movlw	0
 12902  0109EA  144E               	andwf	i2printf@flag+1,w,c
 12903  0109EC  6E43               	movwf	(??i2_printf+1)& (0+255),c
 12904  0109EE  5042               	movf	??i2_printf,w,c
 12905  0109F0  1043               	iorwf	??i2_printf+1,w,c
 12906  0109F2  B4D8               	btfsc	status,2,c
 12907  0109F4  D04B               	goto	i2l911
 12908                           
 12909                           ;doprnt.c: 1190: (putch('-') );
 12910  0109F6  0E2D               	movlw	45
 12911  0109F8  EC2B  F09F         	call	i2_putch
 12912                           
 12913                           ;doprnt.c: 1195: }
 12914                           ;doprnt.c: 1196: while(c--) {
 12915  0109FC  D047               	goto	i2l911
 12916  0109FE                     
 12917                           ;doprnt.c: 1200: {
 12918                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 12919  0109FE  C051  F001         	movff	i2printf@val,i2___lldiv@dividend
 12920  010A02  C052  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 12921  010A06  C053  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 12922  010A0A  C054  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 12923  010A0E  505E               	movf	i2printf@c,w,c
 12924  010A10  0D04               	mullw	4
 12925  010A12  0EB7               	movlw	low _dpowers
 12926  010A14  24F3               	addwf	prodl,w,c
 12927  010A16  6EF6               	movwf	tblptrl,c
 12928  010A18  0EFB               	movlw	high _dpowers
 12929  010A1A  20F4               	addwfc	prodh,w,c
 12930  010A1C  6EF7               	movwf	tblptrh,c
 12931  010A1E                     	if	1	;There are 3 active tblptr bytes
 12932  010A1E  6AF8               	clrf	tblptru,c
 12933  010A20  0E00               	movlw	low (__mediumconst shr (0+16))
 12934  010A22  22F8               	addwfc	tblptru,f,c
 12935  010A24                     	endif
 12936  010A24  0009               	tblrd		*+
 12937  010A26  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 12938  010A2A  0009               	tblrd		*+
 12939  010A2C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 12940  010A30  0009               	tblrd		*+
 12941  010A32  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 12942  010A36  000A               	tblrd		*-
 12943  010A38  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 12944  010A3C  ECFB  F099         	call	i2___lldiv	;wreg free
 12945  010A40  C001  F057         	movff	?i2___lldiv,i2printf@tmpval
 12946  010A44  C002  F058         	movff	?i2___lldiv+1,i2printf@tmpval+1
 12947  010A48  C003  F059         	movff	?i2___lldiv+2,i2printf@tmpval+2
 12948  010A4C  C004  F05A         	movff	?i2___lldiv+3,i2printf@tmpval+3
 12949                           
 12950                           ;doprnt.c: 1202: tmpval.vd %= 10;
 12951  010A50  C057  F001         	movff	i2printf@tmpval,i2___llmod@dividend
 12952  010A54  C058  F002         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 12953  010A58  C059  F003         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 12954  010A5C  C05A  F004         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 12955  010A60  0E0A               	movlw	10
 12956  010A62  6E05               	movwf	i2___llmod@divisor,c
 12957  010A64  0E00               	movlw	0
 12958  010A66  6E06               	movwf	i2___llmod@divisor+1,c
 12959  010A68  0E00               	movlw	0
 12960  010A6A  6E07               	movwf	i2___llmod@divisor+2,c
 12961  010A6C  0E00               	movlw	0
 12962  010A6E  6E08               	movwf	i2___llmod@divisor+3,c
 12963  010A70  EC80  F09B         	call	i2___llmod	;wreg free
 12964  010A74  C001  F057         	movff	?i2___llmod,i2printf@tmpval
 12965  010A78  C002  F058         	movff	?i2___llmod+1,i2printf@tmpval+1
 12966  010A7C  C003  F059         	movff	?i2___llmod+2,i2printf@tmpval+2
 12967  010A80  C004  F05A         	movff	?i2___llmod+3,i2printf@tmpval+3
 12968                           
 12969                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 12970  010A84  5057               	movf	i2printf@tmpval,w,c
 12971  010A86  0F30               	addlw	48
 12972  010A88  EC2B  F09F         	call	i2_putch
 12973  010A8C                     i2l911:
 12974  010A8C  065E               	decf	i2printf@c,f,c
 12975  010A8E  285E               	incf	i2printf@c,w,c
 12976  010A90  B4D8               	btfsc	status,2,c
 12977  010A92  D007               	goto	i2l914
 12978  010A94  D7B4               	goto	i2l912
 12979  010A96                     i2l7295:
 12980                           
 12981                           ;doprnt.c: 1208: (putch('0') );
 12982  010A96  0E30               	movlw	48
 12983  010A98  EC2B  F09F         	call	i2_putch
 12984                           
 12985                           ;doprnt.c: 1209: exp--;
 12986  010A9C  0655               	decf	i2printf@exp,f,c
 12987  010A9E  A0D8               	btfss	status,0,c
 12988  010AA0  0656               	decf	i2printf@exp+1,f,c
 12989  010AA2                     i2l914:
 12990  010AA2  BE56               	btfsc	i2printf@exp+1,7,c
 12991  010AA4  D005               	goto	i2u851_40
 12992  010AA6  5056               	movf	i2printf@exp+1,w,c
 12993  010AA8  E1F6               	bnz	i2l7295
 12994  010AAA  0455               	decf	i2printf@exp,w,c
 12995  010AAC  B0D8               	btfsc	status,0,c
 12996  010AAE  D7F3               	goto	i2l915
 12997  010AB0                     i2u851_40:
 12998                           
 12999                           ;doprnt.c: 1210: }
 13000                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 13001  010AB0  BE50               	btfsc	i2printf@prec+1,7,c
 13002  010AB2  D009               	goto	i2l917
 13003  010AB4  5050               	movf	i2printf@prec+1,w,c
 13004  010AB6  E104               	bnz	i2u852_40
 13005  010AB8  0E09               	movlw	9
 13006  010ABA  5C4F               	subwf	i2printf@prec,w,c
 13007  010ABC  A0D8               	btfss	status,0,c
 13008  010ABE  D003               	goto	i2l917
 13009  010AC0                     i2u852_40:
 13010                           
 13011                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 13012  010AC0  0E08               	movlw	8
 13013  010AC2  6E5E               	movwf	i2printf@c,c
 13014  010AC4  D002               	goto	i2l918
 13015  010AC6                     i2l917:
 13016                           
 13017                           ;doprnt.c: 1213: else
 13018                           ;doprnt.c: 1214: c = prec;
 13019  010AC6  C04F  F05E         	movff	i2printf@prec,i2printf@c
 13020  010ACA                     i2l918:
 13021                           
 13022                           ;doprnt.c: 1215: prec -= c;
 13023  010ACA  505E               	movf	i2printf@c,w,c
 13024  010ACC  5E4F               	subwf	i2printf@prec,f,c
 13025  010ACE  0E00               	movlw	0
 13026  010AD0  BE5E               	btfsc	i2printf@c,7,c
 13027  010AD2  0EFF               	movlw	255
 13028  010AD4  5A50               	subwfb	i2printf@prec+1,f,c
 13029                           
 13030                           ;doprnt.c: 1219: if(c)
 13031  010AD6  505E               	movf	i2printf@c,w,c
 13032  010AD8  B4D8               	btfsc	status,2,c
 13033  010ADA  D003               	goto	i2l919
 13034                           
 13035                           ;doprnt.c: 1221: (putch('.') );
 13036  010ADC  0E2E               	movlw	46
 13037  010ADE  EC2B  F09F         	call	i2_putch
 13038  010AE2                     i2l919:
 13039                           
 13040                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 13041  010AE2  505E               	movf	i2printf@c,w,c
 13042  010AE4  EC82  F088         	call	i2_scale
 13043  010AE8  C024  F048         	movff	?i2_scale,i2_printf$2716
 13044  010AEC  C025  F049         	movff	?i2_scale+1,i2_printf$2716+1
 13045  010AF0  C026  F04A         	movff	?i2_scale+2,i2_printf$2716+2
 13046                           
 13047                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 13048  010AF4  C05B  F018         	movff	i2printf@fval,i2___ftmul@f2
 13049  010AF8  C05C  F019         	movff	i2printf@fval+1,i2___ftmul@f2+1
 13050  010AFC  C05D  F01A         	movff	i2printf@fval+2,i2___ftmul@f2+2
 13051  010B00  C048  F015         	movff	i2_printf$2716,i2___ftmul@f1
 13052  010B04  C049  F016         	movff	i2_printf$2716+1,i2___ftmul@f1+1
 13053  010B08  C04A  F017         	movff	i2_printf$2716+2,i2___ftmul@f1+2
 13054  010B0C  EC2D  F096         	call	i2___ftmul	;wreg free
 13055  010B10  C015  F024         	movff	?i2___ftmul,i2___fttol@f1
 13056  010B14  C016  F025         	movff	?i2___ftmul+1,i2___fttol@f1+1
 13057  010B18  C017  F026         	movff	?i2___ftmul+2,i2___fttol@f1+2
 13058  010B1C  ECB3  F095         	call	i2___fttol	;wreg free
 13059  010B20  C024  F051         	movff	?i2___fttol,i2printf@val
 13060  010B24  C025  F052         	movff	?i2___fttol+1,i2printf@val+1
 13061  010B28  C026  F053         	movff	?i2___fttol+2,i2printf@val+2
 13062  010B2C  C027  F054         	movff	?i2___fttol+3,i2printf@val+3
 13063                           
 13064                           ;doprnt.c: 1228: while(c--) {
 13065  010B30  D070               	goto	i2l920
 13066  010B32                     
 13067                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 13068  010B32  C051  F001         	movff	i2printf@val,i2___lldiv@dividend
 13069  010B36  C052  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 13070  010B3A  C053  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 13071  010B3E  C054  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 13072  010B42  505E               	movf	i2printf@c,w,c
 13073  010B44  0D04               	mullw	4
 13074  010B46  0EB7               	movlw	low _dpowers
 13075  010B48  24F3               	addwf	prodl,w,c
 13076  010B4A  6EF6               	movwf	tblptrl,c
 13077  010B4C  0EFB               	movlw	high _dpowers
 13078  010B4E  20F4               	addwfc	prodh,w,c
 13079  010B50  6EF7               	movwf	tblptrh,c
 13080  010B52                     	if	1	;There are 3 active tblptr bytes
 13081  010B52  6AF8               	clrf	tblptru,c
 13082  010B54  0E00               	movlw	low (__mediumconst shr (0+16))
 13083  010B56  22F8               	addwfc	tblptru,f,c
 13084  010B58                     	endif
 13085  010B58  0009               	tblrd		*+
 13086  010B5A  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 13087  010B5E  0009               	tblrd		*+
 13088  010B60  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 13089  010B64  0009               	tblrd		*+
 13090  010B66  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 13091  010B6A  000A               	tblrd		*-
 13092  010B6C  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 13093  010B70  ECFB  F099         	call	i2___lldiv	;wreg free
 13094  010B74  C001  F057         	movff	?i2___lldiv,i2printf@tmpval
 13095  010B78  C002  F058         	movff	?i2___lldiv+1,i2printf@tmpval+1
 13096  010B7C  C003  F059         	movff	?i2___lldiv+2,i2printf@tmpval+2
 13097  010B80  C004  F05A         	movff	?i2___lldiv+3,i2printf@tmpval+3
 13098                           
 13099                           ;doprnt.c: 1230: tmpval.vd %= 10;
 13100  010B84  C057  F001         	movff	i2printf@tmpval,i2___llmod@dividend
 13101  010B88  C058  F002         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 13102  010B8C  C059  F003         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 13103  010B90  C05A  F004         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 13104  010B94  0E0A               	movlw	10
 13105  010B96  6E05               	movwf	i2___llmod@divisor,c
 13106  010B98  0E00               	movlw	0
 13107  010B9A  6E06               	movwf	i2___llmod@divisor+1,c
 13108  010B9C  0E00               	movlw	0
 13109  010B9E  6E07               	movwf	i2___llmod@divisor+2,c
 13110  010BA0  0E00               	movlw	0
 13111  010BA2  6E08               	movwf	i2___llmod@divisor+3,c
 13112  010BA4  EC80  F09B         	call	i2___llmod	;wreg free
 13113  010BA8  C001  F057         	movff	?i2___llmod,i2printf@tmpval
 13114  010BAC  C002  F058         	movff	?i2___llmod+1,i2printf@tmpval+1
 13115  010BB0  C003  F059         	movff	?i2___llmod+2,i2printf@tmpval+2
 13116  010BB4  C004  F05A         	movff	?i2___llmod+3,i2printf@tmpval+3
 13117                           
 13118                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 13119  010BB8  5057               	movf	i2printf@tmpval,w,c
 13120  010BBA  0F30               	addlw	48
 13121  010BBC  EC2B  F09F         	call	i2_putch
 13122                           
 13123                           ;doprnt.c: 1232: val %= dpowers[c];
 13124  010BC0  C051  F001         	movff	i2printf@val,i2___llmod@dividend
 13125  010BC4  C052  F002         	movff	i2printf@val+1,i2___llmod@dividend+1
 13126  010BC8  C053  F003         	movff	i2printf@val+2,i2___llmod@dividend+2
 13127  010BCC  C054  F004         	movff	i2printf@val+3,i2___llmod@dividend+3
 13128  010BD0  505E               	movf	i2printf@c,w,c
 13129  010BD2  0D04               	mullw	4
 13130  010BD4  0EB7               	movlw	low _dpowers
 13131  010BD6  24F3               	addwf	prodl,w,c
 13132  010BD8  6EF6               	movwf	tblptrl,c
 13133  010BDA  0EFB               	movlw	high _dpowers
 13134  010BDC  20F4               	addwfc	prodh,w,c
 13135  010BDE  6EF7               	movwf	tblptrh,c
 13136  010BE0                     	if	1	;There are 3 active tblptr bytes
 13137  010BE0  6AF8               	clrf	tblptru,c
 13138  010BE2  0E00               	movlw	low (__mediumconst shr (0+16))
 13139  010BE4  22F8               	addwfc	tblptru,f,c
 13140  010BE6                     	endif
 13141  010BE6  0009               	tblrd		*+
 13142  010BE8  CFF5 F005          	movff	tablat,i2___llmod@divisor
 13143  010BEC  0009               	tblrd		*+
 13144  010BEE  CFF5 F006          	movff	tablat,i2___llmod@divisor+1
 13145  010BF2  0009               	tblrd		*+
 13146  010BF4  CFF5 F007          	movff	tablat,i2___llmod@divisor+2
 13147  010BF8  000A               	tblrd		*-
 13148  010BFA  CFF5 F008          	movff	tablat,i2___llmod@divisor+3
 13149  010BFE  EC80  F09B         	call	i2___llmod	;wreg free
 13150  010C02  C001  F051         	movff	?i2___llmod,i2printf@val
 13151  010C06  C002  F052         	movff	?i2___llmod+1,i2printf@val+1
 13152  010C0A  C003  F053         	movff	?i2___llmod+2,i2printf@val+2
 13153  010C0E  C004  F054         	movff	?i2___llmod+3,i2printf@val+3
 13154  010C12                     i2l920:
 13155  010C12  065E               	decf	i2printf@c,f,c
 13156  010C14  285E               	incf	i2printf@c,w,c
 13157  010C16  B4D8               	btfsc	status,2,c
 13158  010C18  D007               	goto	i2l923
 13159  010C1A  D78B               	goto	i2l921
 13160  010C1C                     
 13161                           ;doprnt.c: 1236: (putch('0') );
 13162  010C1C  0E30               	movlw	48
 13163  010C1E  EC2B  F09F         	call	i2_putch
 13164                           
 13165                           ;doprnt.c: 1237: prec--;
 13166  010C22  064F               	decf	i2printf@prec,f,c
 13167  010C24  A0D8               	btfss	status,0,c
 13168  010C26  0650               	decf	i2printf@prec+1,f,c
 13169  010C28                     i2l923:
 13170  010C28  504F               	movf	i2printf@prec,w,c
 13171  010C2A  1050               	iorwf	i2printf@prec+1,w,c
 13172  010C2C  B4D8               	btfsc	status,2,c
 13173  010C2E  D00E               	goto	i2l926
 13174  010C30  D7F5               	goto	i2l924
 13175  010C32                     i2l889:
 13176                           
 13177                           ;doprnt.c: 1246: }
 13178                           ;doprnt.c: 1422: {
 13179                           ;doprnt.c: 1438: if(flag & 0x03)
 13180  010C32  0E03               	movlw	3
 13181  010C34  144D               	andwf	i2printf@flag,w,c
 13182  010C36  6E42               	movwf	??i2_printf& (0+255),c
 13183  010C38  0E00               	movlw	0
 13184  010C3A  144E               	andwf	i2printf@flag+1,w,c
 13185  010C3C  6E43               	movwf	(??i2_printf+1)& (0+255),c
 13186  010C3E  5042               	movf	??i2_printf,w,c
 13187  010C40  1043               	iorwf	??i2_printf+1,w,c
 13188  010C42  B4D8               	btfsc	status,2,c
 13189  010C44  D003               	goto	i2l926
 13190                           
 13191                           ;doprnt.c: 1439: (putch('-') );
 13192  010C46  0E2D               	movlw	45
 13193  010C48  EC2B  F09F         	call	i2_putch
 13194  010C4C                     i2l926:
 13195  010C4C  5040               	movf	i2printf@f,w,c
 13196  010C4E  6E42               	movwf	??i2_printf& (0+255),c
 13197  010C50  5041               	movf	i2printf@f+1,w,c
 13198  010C52  6E43               	movwf	(??i2_printf+1)& (0+255),c
 13199  010C54  4A40               	infsnz	i2printf@f,f,c
 13200  010C56  2A41               	incf	i2printf@f+1,f,c
 13201  010C58  C042  FFF6         	movff	??i2_printf,tblptrl
 13202  010C5C  C043  FFF7         	movff	??i2_printf+1,tblptrh
 13203  010C60  0E00               	movlw	low (__mediumconst shr (0+16))
 13204  010C62  6EF8               	movwf	tblptru,c
 13205  010C64  0E0D               	movlw	(high __ramtop+-1)
 13206  010C66  64F7               	cpfsgt	tblptrh,c
 13207  010C68  D003               	bra	i2u857_47
 13208  010C6A  0008               	tblrd		*
 13209  010C6C  50F5               	movf	tablat,w,c
 13210  010C6E  D005               	bra	i2u857_40
 13211  010C70                     i2u857_47:
 13212  010C70  CFF6 FFD9          	movff	tblptrl,fsr2l
 13213  010C74  CFF7 FFDA          	movff	tblptrh,fsr2h
 13214  010C78  50DF               	movf	indf2,w,c
 13215  010C7A                     i2u857_40:
 13216  010C7A  6E5E               	movwf	i2printf@c,c
 13217  010C7C  505E               	movf	i2printf@c,w,c
 13218  010C7E  B4D8               	btfsc	status,2,c
 13219  010C80  0012               	return	
 13220  010C82  D4F8               	goto	i2l881
 13221  010C84                     __end_ofi2_printf:
 13222                           	opt stack 0
 13223                           tosu	equ	0xFFF
 13224                           tosh	equ	0xFFE
 13225                           tosl	equ	0xFFD
 13226                           pclatu	equ	0xFFB
 13227                           pclath	equ	0xFFA
 13228                           tblptru	equ	0xFF8
 13229                           tblptrh	equ	0xFF7
 13230                           tblptrl	equ	0xFF6
 13231                           tablat	equ	0xFF5
 13232                           prodh	equ	0xFF4
 13233                           prodl	equ	0xFF3
 13234                           intcon	equ	0xFF2
 13235                           postinc0	equ	0xFEE
 13236                           fsr0h	equ	0xFEA
 13237                           fsr0l	equ	0xFE9
 13238                           wreg	equ	0xFE8
 13239                           fsr1h	equ	0xFE2
 13240                           fsr1l	equ	0xFE1
 13241                           bsr	equ	0xFE0
 13242                           indf2	equ	0xFDF
 13243                           postinc2	equ	0xFDE
 13244                           postdec2	equ	0xFDD
 13245                           fsr2h	equ	0xFDA
 13246                           fsr2l	equ	0xFD9
 13247                           status	equ	0xFD8
 13248                           
 13249 ;; *************** function i2_scale *****************
 13250 ;; Defined at:
 13251 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 13252 ;; Parameters:    Size  Location     Type
 13253 ;;  scl             1    wreg     char 
 13254 ;; Auto vars:     Size  Location     Type
 13255 ;;  scl             1   41[COMRAM] char 
 13256 ;; Return value:  Size  Location     Type
 13257 ;;                  3   35[COMRAM] char 
 13258 ;; Registers used:
 13259 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13260 ;; Tracked objects:
 13261 ;;		On entry : 0/0
 13262 ;;		On exit  : 0/0
 13263 ;;		Unchanged: 0/0
 13264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13265 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13266 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13268 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13269 ;;Total ram usage:        7 bytes
 13270 ;; Hardware stack levels used:    1
 13271 ;; Hardware stack levels required when called:    2
 13272 ;; This function calls:
 13273 ;;		i2___awdiv
 13274 ;;		i2___awmod
 13275 ;;		i2___ftmul
 13276 ;;		i2___wmul
 13277 ;; This function is called by:
 13278 ;;		i2_printf
 13279 ;; This function uses a non-reentrant model
 13280 ;;
 13281                           
 13282                           	psect	text60
 13283  011104                     __ptext60:
 13284                           	opt stack 0
 13285  011104                     i2_scale:
 13286                           	opt stack 13
 13287                           
 13288                           ;incstack = 0
 13289                           ;i2scale@scl stored from wreg
 13290  011104  6E2A               	movwf	i2scale@scl,c
 13291                           
 13292                           ;doprnt.c: 428: if(scl < 0) {
 13293  011106  AE2A               	btfss	i2scale@scl,7,c
 13294  011108  D113               	goto	i2l870
 13295                           
 13296                           ;doprnt.c: 429: scl = -scl;
 13297  01110A  6C2A               	negf	i2scale@scl,c
 13298                           
 13299                           ;doprnt.c: 430: if(scl>=110)
 13300  01110C  502A               	movf	i2scale@scl,w,c
 13301  01110E  0A80               	xorlw	128
 13302  011110  0F12               	addlw	-238
 13303  011112  A0D8               	btfss	status,0,c
 13304  011114  D09A               	goto	i2l871
 13305                           
 13306                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 13307  011116  0E00               	movlw	0
 13308  011118  6E12               	movwf	i2___wmul@multiplicand+1,c
 13309  01111A  0E03               	movlw	3
 13310  01111C  6E11               	movwf	i2___wmul@multiplicand,c
 13311  01111E  0E00               	movlw	0
 13312  011120  6E0A               	movwf	i2___awdiv@divisor+1,c
 13313  011122  0E0A               	movlw	10
 13314  011124  6E09               	movwf	i2___awdiv@divisor,c
 13315  011126  0E00               	movlw	0
 13316  011128  6E04               	movwf	i2___awmod@divisor+1,c
 13317  01112A  0E64               	movlw	100
 13318  01112C  6E03               	movwf	i2___awmod@divisor,c
 13319  01112E  502A               	movf	i2scale@scl,w,c
 13320  011130  6E01               	movwf	i2___awmod@dividend,c
 13321  011132  6A02               	clrf	i2___awmod@dividend+1,c
 13322  011134  BE01               	btfsc	i2___awmod@dividend,7,c
 13323  011136  0602               	decf	i2___awmod@dividend+1,f,c
 13324  011138  ECAD  F09A         	call	i2___awmod	;wreg free
 13325  01113C  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 13326  011140  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 13327  011144  ECB9  F099         	call	i2___awdiv	;wreg free
 13328  011148  0E09               	movlw	9
 13329  01114A  2407               	addwf	?i2___awdiv,w,c
 13330  01114C  6E0F               	movwf	i2___wmul@multiplier,c
 13331  01114E  0E00               	movlw	0
 13332  011150  2008               	addwfc	?i2___awdiv+1,w,c
 13333  011152  6E10               	movwf	i2___wmul@multiplier+1,c
 13334  011154  EC43  F09E         	call	i2___wmul	;wreg free
 13335  011158  0E06               	movlw	low __npowers_
 13336  01115A  240F               	addwf	?i2___wmul,w,c
 13337  01115C  6EF6               	movwf	tblptrl,c
 13338  01115E  0EFC               	movlw	high __npowers_
 13339  011160  2010               	addwfc	?i2___wmul+1,w,c
 13340  011162  6EF7               	movwf	tblptrh,c
 13341  011164                     	if	1	;There are 3 active tblptr bytes
 13342  011164  6AF8               	clrf	tblptru,c
 13343  011166  0E00               	movlw	low (__mediumconst shr (0+16))
 13344  011168  22F8               	addwfc	tblptru,f,c
 13345  01116A                     	endif
 13346  01116A  0009               	tblrd		*+
 13347  01116C  CFF5 F018          	movff	tablat,i2___ftmul@f2
 13348  011170  0009               	tblrd		*+
 13349  011172  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 13350  011176  000A               	tblrd		*-
 13351  011178  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 13352  01117C  0E00               	movlw	0
 13353  01117E  6E0A               	movwf	i2___awdiv@divisor+1,c
 13354  011180  0E64               	movlw	100
 13355  011182  6E09               	movwf	i2___awdiv@divisor,c
 13356  011184  502A               	movf	i2scale@scl,w,c
 13357  011186  6E07               	movwf	i2___awdiv@dividend,c
 13358  011188  6A08               	clrf	i2___awdiv@dividend+1,c
 13359  01118A  BE07               	btfsc	i2___awdiv@dividend,7,c
 13360  01118C  0608               	decf	i2___awdiv@dividend+1,f,c
 13361  01118E  ECB9  F099         	call	i2___awdiv	;wreg free
 13362  011192  0E12               	movlw	18
 13363  011194  2407               	addwf	?i2___awdiv,w,c
 13364  011196  6E0F               	movwf	i2___wmul@multiplier,c
 13365  011198  0E00               	movlw	0
 13366  01119A  2008               	addwfc	?i2___awdiv+1,w,c
 13367  01119C  6E10               	movwf	i2___wmul@multiplier+1,c
 13368  01119E  0E00               	movlw	0
 13369  0111A0  6E12               	movwf	i2___wmul@multiplicand+1,c
 13370  0111A2  0E03               	movlw	3
 13371  0111A4  6E11               	movwf	i2___wmul@multiplicand,c
 13372  0111A6  EC43  F09E         	call	i2___wmul	;wreg free
 13373  0111AA  0E06               	movlw	low __npowers_
 13374  0111AC  240F               	addwf	?i2___wmul,w,c
 13375  0111AE  6EF6               	movwf	tblptrl,c
 13376  0111B0  0EFC               	movlw	high __npowers_
 13377  0111B2  2010               	addwfc	?i2___wmul+1,w,c
 13378  0111B4  6EF7               	movwf	tblptrh,c
 13379  0111B6                     	if	1	;There are 3 active tblptr bytes
 13380  0111B6  6AF8               	clrf	tblptru,c
 13381  0111B8  0E00               	movlw	low (__mediumconst shr (0+16))
 13382  0111BA  22F8               	addwfc	tblptru,f,c
 13383  0111BC                     	endif
 13384  0111BC  0009               	tblrd		*+
 13385  0111BE  CFF5 F015          	movff	tablat,i2___ftmul@f1
 13386  0111C2  0009               	tblrd		*+
 13387  0111C4  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 13388  0111C8  000A               	tblrd		*-
 13389  0111CA  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 13390  0111CE  EC2D  F096         	call	i2___ftmul	;wreg free
 13391  0111D2  C015  F027         	movff	?i2___ftmul,i2_scale$2715
 13392  0111D6  C016  F028         	movff	?i2___ftmul+1,i2_scale$2715+1
 13393  0111DA  C017  F029         	movff	?i2___ftmul+2,i2_scale$2715+2
 13394                           
 13395                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 13396  0111DE  C027  F015         	movff	i2_scale$2715,i2___ftmul@f1
 13397  0111E2  C028  F016         	movff	i2_scale$2715+1,i2___ftmul@f1+1
 13398  0111E6  C029  F017         	movff	i2_scale$2715+2,i2___ftmul@f1+2
 13399  0111EA  0E00               	movlw	0
 13400  0111EC  6E12               	movwf	i2___wmul@multiplicand+1,c
 13401  0111EE  0E03               	movlw	3
 13402  0111F0  6E11               	movwf	i2___wmul@multiplicand,c
 13403  0111F2  0E00               	movlw	0
 13404  0111F4  6E04               	movwf	i2___awmod@divisor+1,c
 13405  0111F6  0E0A               	movlw	10
 13406  0111F8  6E03               	movwf	i2___awmod@divisor,c
 13407  0111FA  502A               	movf	i2scale@scl,w,c
 13408  0111FC  6E01               	movwf	i2___awmod@dividend,c
 13409  0111FE  6A02               	clrf	i2___awmod@dividend+1,c
 13410  011200  BE01               	btfsc	i2___awmod@dividend,7,c
 13411  011202  0602               	decf	i2___awmod@dividend+1,f,c
 13412  011204  ECAD  F09A         	call	i2___awmod	;wreg free
 13413  011208  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 13414  01120C  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 13415  011210  EC43  F09E         	call	i2___wmul	;wreg free
 13416  011214  0E06               	movlw	low __npowers_
 13417  011216  240F               	addwf	?i2___wmul,w,c
 13418  011218  6EF6               	movwf	tblptrl,c
 13419  01121A  0EFC               	movlw	high __npowers_
 13420  01121C  2010               	addwfc	?i2___wmul+1,w,c
 13421  01121E  6EF7               	movwf	tblptrh,c
 13422  011220                     	if	1	;There are 3 active tblptr bytes
 13423  011220  6AF8               	clrf	tblptru,c
 13424  011222  0E00               	movlw	low (__mediumconst shr (0+16))
 13425  011224  22F8               	addwfc	tblptru,f,c
 13426  011226                     	endif
 13427  011226  0009               	tblrd		*+
 13428  011228  CFF5 F018          	movff	tablat,i2___ftmul@f2
 13429  01122C  0009               	tblrd		*+
 13430  01122E  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 13431  011232  000A               	tblrd		*-
 13432  011234  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 13433  011238  EC2D  F096         	call	i2___ftmul	;wreg free
 13434  01123C  C015  F024         	movff	?i2___ftmul,?i2_scale
 13435  011240  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 13436  011244  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 13437  011248  0012               	return	
 13438  01124A                     i2l871:
 13439                           
 13440                           ;doprnt.c: 432: else if(scl > 10)
 13441  01124A  502A               	movf	i2scale@scl,w,c
 13442  01124C  0A80               	xorlw	128
 13443  01124E  0F75               	addlw	-139
 13444  011250  A0D8               	btfss	status,0,c
 13445  011252  D059               	goto	i2l874
 13446                           
 13447                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 13448  011254  0E00               	movlw	0
 13449  011256  6E0A               	movwf	i2___awdiv@divisor+1,c
 13450  011258  0E0A               	movlw	10
 13451  01125A  6E09               	movwf	i2___awdiv@divisor,c
 13452  01125C  502A               	movf	i2scale@scl,w,c
 13453  01125E  6E07               	movwf	i2___awdiv@dividend,c
 13454  011260  6A08               	clrf	i2___awdiv@dividend+1,c
 13455  011262  BE07               	btfsc	i2___awdiv@dividend,7,c
 13456  011264  0608               	decf	i2___awdiv@dividend+1,f,c
 13457  011266  ECB9  F099         	call	i2___awdiv	;wreg free
 13458  01126A  0E09               	movlw	9
 13459  01126C  2407               	addwf	?i2___awdiv,w,c
 13460  01126E  6E0F               	movwf	i2___wmul@multiplier,c
 13461  011270  0E00               	movlw	0
 13462  011272  2008               	addwfc	?i2___awdiv+1,w,c
 13463  011274  6E10               	movwf	i2___wmul@multiplier+1,c
 13464  011276  0E00               	movlw	0
 13465  011278  6E12               	movwf	i2___wmul@multiplicand+1,c
 13466  01127A  0E03               	movlw	3
 13467  01127C  6E11               	movwf	i2___wmul@multiplicand,c
 13468  01127E  EC43  F09E         	call	i2___wmul	;wreg free
 13469  011282  0E06               	movlw	low __npowers_
 13470  011284  240F               	addwf	?i2___wmul,w,c
 13471  011286  6EF6               	movwf	tblptrl,c
 13472  011288  0EFC               	movlw	high __npowers_
 13473  01128A  2010               	addwfc	?i2___wmul+1,w,c
 13474  01128C  6EF7               	movwf	tblptrh,c
 13475  01128E                     	if	1	;There are 3 active tblptr bytes
 13476  01128E  6AF8               	clrf	tblptru,c
 13477  011290  0E00               	movlw	low (__mediumconst shr (0+16))
 13478  011292  22F8               	addwfc	tblptru,f,c
 13479  011294                     	endif
 13480  011294  0009               	tblrd		*+
 13481  011296  CFF5 F015          	movff	tablat,i2___ftmul@f1
 13482  01129A  0009               	tblrd		*+
 13483  01129C  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 13484  0112A0  000A               	tblrd		*-
 13485  0112A2  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 13486  0112A6  0E00               	movlw	0
 13487  0112A8  6E12               	movwf	i2___wmul@multiplicand+1,c
 13488  0112AA  0E03               	movlw	3
 13489  0112AC  6E11               	movwf	i2___wmul@multiplicand,c
 13490  0112AE  0E00               	movlw	0
 13491  0112B0  6E04               	movwf	i2___awmod@divisor+1,c
 13492  0112B2  0E0A               	movlw	10
 13493  0112B4  6E03               	movwf	i2___awmod@divisor,c
 13494  0112B6  502A               	movf	i2scale@scl,w,c
 13495  0112B8  6E01               	movwf	i2___awmod@dividend,c
 13496  0112BA  6A02               	clrf	i2___awmod@dividend+1,c
 13497  0112BC  BE01               	btfsc	i2___awmod@dividend,7,c
 13498  0112BE  0602               	decf	i2___awmod@dividend+1,f,c
 13499  0112C0  ECAD  F09A         	call	i2___awmod	;wreg free
 13500  0112C4  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 13501  0112C8  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 13502  0112CC  EC43  F09E         	call	i2___wmul	;wreg free
 13503  0112D0  0E06               	movlw	low __npowers_
 13504  0112D2  240F               	addwf	?i2___wmul,w,c
 13505  0112D4  6EF6               	movwf	tblptrl,c
 13506  0112D6  0EFC               	movlw	high __npowers_
 13507  0112D8  2010               	addwfc	?i2___wmul+1,w,c
 13508  0112DA  6EF7               	movwf	tblptrh,c
 13509  0112DC                     	if	1	;There are 3 active tblptr bytes
 13510  0112DC  6AF8               	clrf	tblptru,c
 13511  0112DE  0E00               	movlw	low (__mediumconst shr (0+16))
 13512  0112E0  22F8               	addwfc	tblptru,f,c
 13513  0112E2                     	endif
 13514  0112E2  0009               	tblrd		*+
 13515  0112E4  CFF5 F018          	movff	tablat,i2___ftmul@f2
 13516  0112E8  0009               	tblrd		*+
 13517  0112EA  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 13518  0112EE  000A               	tblrd		*-
 13519  0112F0  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 13520  0112F4  EC2D  F096         	call	i2___ftmul	;wreg free
 13521  0112F8  C015  F024         	movff	?i2___ftmul,?i2_scale
 13522  0112FC  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 13523  011300  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 13524  011304  0012               	return	
 13525  011306                     i2l874:
 13526                           
 13527                           ;doprnt.c: 434: return _npowers_[scl];
 13528  011306  502A               	movf	i2scale@scl,w,c
 13529  011308  0D03               	mullw	3
 13530  01130A  0E06               	movlw	low __npowers_
 13531  01130C  24F3               	addwf	prodl,w,c
 13532  01130E  6EF6               	movwf	tblptrl,c
 13533  011310  0EFC               	movlw	high __npowers_
 13534  011312  20F4               	addwfc	prodh,w,c
 13535  011314  6EF7               	movwf	tblptrh,c
 13536  011316                     	if	1	;There are 3 active tblptr bytes
 13537  011316  6AF8               	clrf	tblptru,c
 13538  011318  0E00               	movlw	low (__mediumconst shr (0+16))
 13539  01131A  22F8               	addwfc	tblptru,f,c
 13540  01131C                     	endif
 13541  01131C  0009               	tblrd		*+
 13542  01131E  CFF5 F024          	movff	tablat,?i2_scale
 13543  011322  0009               	tblrd		*+
 13544  011324  CFF5 F025          	movff	tablat,?i2_scale+1
 13545  011328  000A               	tblrd		*-
 13546  01132A  CFF5 F026          	movff	tablat,?i2_scale+2
 13547  01132E  0012               	return	
 13548  011330                     i2l870:
 13549                           
 13550                           ;doprnt.c: 435: }
 13551                           ;doprnt.c: 436: if(scl>=110)
 13552  011330  502A               	movf	i2scale@scl,w,c
 13553  011332  0A80               	xorlw	128
 13554  011334  0F12               	addlw	-238
 13555  011336  A0D8               	btfss	status,0,c
 13556  011338  D09A               	goto	i2l875
 13557                           
 13558                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 13559  01133A  0E00               	movlw	0
 13560  01133C  6E12               	movwf	i2___wmul@multiplicand+1,c
 13561  01133E  0E03               	movlw	3
 13562  011340  6E11               	movwf	i2___wmul@multiplicand,c
 13563  011342  0E00               	movlw	0
 13564  011344  6E0A               	movwf	i2___awdiv@divisor+1,c
 13565  011346  0E0A               	movlw	10
 13566  011348  6E09               	movwf	i2___awdiv@divisor,c
 13567  01134A  0E00               	movlw	0
 13568  01134C  6E04               	movwf	i2___awmod@divisor+1,c
 13569  01134E  0E64               	movlw	100
 13570  011350  6E03               	movwf	i2___awmod@divisor,c
 13571  011352  502A               	movf	i2scale@scl,w,c
 13572  011354  6E01               	movwf	i2___awmod@dividend,c
 13573  011356  6A02               	clrf	i2___awmod@dividend+1,c
 13574  011358  BE01               	btfsc	i2___awmod@dividend,7,c
 13575  01135A  0602               	decf	i2___awmod@dividend+1,f,c
 13576  01135C  ECAD  F09A         	call	i2___awmod	;wreg free
 13577  011360  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 13578  011364  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 13579  011368  ECB9  F099         	call	i2___awdiv	;wreg free
 13580  01136C  0E09               	movlw	9
 13581  01136E  2407               	addwf	?i2___awdiv,w,c
 13582  011370  6E0F               	movwf	i2___wmul@multiplier,c
 13583  011372  0E00               	movlw	0
 13584  011374  2008               	addwfc	?i2___awdiv+1,w,c
 13585  011376  6E10               	movwf	i2___wmul@multiplier+1,c
 13586  011378  EC43  F09E         	call	i2___wmul	;wreg free
 13587  01137C  0EDF               	movlw	low __powers_
 13588  01137E  240F               	addwf	?i2___wmul,w,c
 13589  011380  6EF6               	movwf	tblptrl,c
 13590  011382  0EFB               	movlw	high __powers_
 13591  011384  2010               	addwfc	?i2___wmul+1,w,c
 13592  011386  6EF7               	movwf	tblptrh,c
 13593  011388                     	if	1	;There are 3 active tblptr bytes
 13594  011388  6AF8               	clrf	tblptru,c
 13595  01138A  0E00               	movlw	low (__mediumconst shr (0+16))
 13596  01138C  22F8               	addwfc	tblptru,f,c
 13597  01138E                     	endif
 13598  01138E  0009               	tblrd		*+
 13599  011390  CFF5 F018          	movff	tablat,i2___ftmul@f2
 13600  011394  0009               	tblrd		*+
 13601  011396  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 13602  01139A  000A               	tblrd		*-
 13603  01139C  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 13604  0113A0  0E00               	movlw	0
 13605  0113A2  6E0A               	movwf	i2___awdiv@divisor+1,c
 13606  0113A4  0E64               	movlw	100
 13607  0113A6  6E09               	movwf	i2___awdiv@divisor,c
 13608  0113A8  502A               	movf	i2scale@scl,w,c
 13609  0113AA  6E07               	movwf	i2___awdiv@dividend,c
 13610  0113AC  6A08               	clrf	i2___awdiv@dividend+1,c
 13611  0113AE  BE07               	btfsc	i2___awdiv@dividend,7,c
 13612  0113B0  0608               	decf	i2___awdiv@dividend+1,f,c
 13613  0113B2  ECB9  F099         	call	i2___awdiv	;wreg free
 13614  0113B6  0E12               	movlw	18
 13615  0113B8  2407               	addwf	?i2___awdiv,w,c
 13616  0113BA  6E0F               	movwf	i2___wmul@multiplier,c
 13617  0113BC  0E00               	movlw	0
 13618  0113BE  2008               	addwfc	?i2___awdiv+1,w,c
 13619  0113C0  6E10               	movwf	i2___wmul@multiplier+1,c
 13620  0113C2  0E00               	movlw	0
 13621  0113C4  6E12               	movwf	i2___wmul@multiplicand+1,c
 13622  0113C6  0E03               	movlw	3
 13623  0113C8  6E11               	movwf	i2___wmul@multiplicand,c
 13624  0113CA  EC43  F09E         	call	i2___wmul	;wreg free
 13625  0113CE  0EDF               	movlw	low __powers_
 13626  0113D0  240F               	addwf	?i2___wmul,w,c
 13627  0113D2  6EF6               	movwf	tblptrl,c
 13628  0113D4  0EFB               	movlw	high __powers_
 13629  0113D6  2010               	addwfc	?i2___wmul+1,w,c
 13630  0113D8  6EF7               	movwf	tblptrh,c
 13631  0113DA                     	if	1	;There are 3 active tblptr bytes
 13632  0113DA  6AF8               	clrf	tblptru,c
 13633  0113DC  0E00               	movlw	low (__mediumconst shr (0+16))
 13634  0113DE  22F8               	addwfc	tblptru,f,c
 13635  0113E0                     	endif
 13636  0113E0  0009               	tblrd		*+
 13637  0113E2  CFF5 F015          	movff	tablat,i2___ftmul@f1
 13638  0113E6  0009               	tblrd		*+
 13639  0113E8  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 13640  0113EC  000A               	tblrd		*-
 13641  0113EE  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 13642  0113F2  EC2D  F096         	call	i2___ftmul	;wreg free
 13643  0113F6  C015  F027         	movff	?i2___ftmul,i2_scale$2715
 13644  0113FA  C016  F028         	movff	?i2___ftmul+1,i2_scale$2715+1
 13645  0113FE  C017  F029         	movff	?i2___ftmul+2,i2_scale$2715+2
 13646                           
 13647                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 13648  011402  C027  F015         	movff	i2_scale$2715,i2___ftmul@f1
 13649  011406  C028  F016         	movff	i2_scale$2715+1,i2___ftmul@f1+1
 13650  01140A  C029  F017         	movff	i2_scale$2715+2,i2___ftmul@f1+2
 13651  01140E  0E00               	movlw	0
 13652  011410  6E12               	movwf	i2___wmul@multiplicand+1,c
 13653  011412  0E03               	movlw	3
 13654  011414  6E11               	movwf	i2___wmul@multiplicand,c
 13655  011416  0E00               	movlw	0
 13656  011418  6E04               	movwf	i2___awmod@divisor+1,c
 13657  01141A  0E0A               	movlw	10
 13658  01141C  6E03               	movwf	i2___awmod@divisor,c
 13659  01141E  502A               	movf	i2scale@scl,w,c
 13660  011420  6E01               	movwf	i2___awmod@dividend,c
 13661  011422  6A02               	clrf	i2___awmod@dividend+1,c
 13662  011424  BE01               	btfsc	i2___awmod@dividend,7,c
 13663  011426  0602               	decf	i2___awmod@dividend+1,f,c
 13664  011428  ECAD  F09A         	call	i2___awmod	;wreg free
 13665  01142C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 13666  011430  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 13667  011434  EC43  F09E         	call	i2___wmul	;wreg free
 13668  011438  0EDF               	movlw	low __powers_
 13669  01143A  240F               	addwf	?i2___wmul,w,c
 13670  01143C  6EF6               	movwf	tblptrl,c
 13671  01143E  0EFB               	movlw	high __powers_
 13672  011440  2010               	addwfc	?i2___wmul+1,w,c
 13673  011442  6EF7               	movwf	tblptrh,c
 13674  011444                     	if	1	;There are 3 active tblptr bytes
 13675  011444  6AF8               	clrf	tblptru,c
 13676  011446  0E00               	movlw	low (__mediumconst shr (0+16))
 13677  011448  22F8               	addwfc	tblptru,f,c
 13678  01144A                     	endif
 13679  01144A  0009               	tblrd		*+
 13680  01144C  CFF5 F018          	movff	tablat,i2___ftmul@f2
 13681  011450  0009               	tblrd		*+
 13682  011452  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 13683  011456  000A               	tblrd		*-
 13684  011458  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 13685  01145C  EC2D  F096         	call	i2___ftmul	;wreg free
 13686  011460  C015  F024         	movff	?i2___ftmul,?i2_scale
 13687  011464  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 13688  011468  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 13689  01146C  0012               	return	
 13690  01146E                     i2l875:
 13691                           
 13692                           ;doprnt.c: 438: else if(scl > 10)
 13693  01146E  502A               	movf	i2scale@scl,w,c
 13694  011470  0A80               	xorlw	128
 13695  011472  0F75               	addlw	-139
 13696  011474  A0D8               	btfss	status,0,c
 13697  011476  D059               	goto	i2l877
 13698                           
 13699                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 13700  011478  0E00               	movlw	0
 13701  01147A  6E0A               	movwf	i2___awdiv@divisor+1,c
 13702  01147C  0E0A               	movlw	10
 13703  01147E  6E09               	movwf	i2___awdiv@divisor,c
 13704  011480  502A               	movf	i2scale@scl,w,c
 13705  011482  6E07               	movwf	i2___awdiv@dividend,c
 13706  011484  6A08               	clrf	i2___awdiv@dividend+1,c
 13707  011486  BE07               	btfsc	i2___awdiv@dividend,7,c
 13708  011488  0608               	decf	i2___awdiv@dividend+1,f,c
 13709  01148A  ECB9  F099         	call	i2___awdiv	;wreg free
 13710  01148E  0E09               	movlw	9
 13711  011490  2407               	addwf	?i2___awdiv,w,c
 13712  011492  6E0F               	movwf	i2___wmul@multiplier,c
 13713  011494  0E00               	movlw	0
 13714  011496  2008               	addwfc	?i2___awdiv+1,w,c
 13715  011498  6E10               	movwf	i2___wmul@multiplier+1,c
 13716  01149A  0E00               	movlw	0
 13717  01149C  6E12               	movwf	i2___wmul@multiplicand+1,c
 13718  01149E  0E03               	movlw	3
 13719  0114A0  6E11               	movwf	i2___wmul@multiplicand,c
 13720  0114A2  EC43  F09E         	call	i2___wmul	;wreg free
 13721  0114A6  0EDF               	movlw	low __powers_
 13722  0114A8  240F               	addwf	?i2___wmul,w,c
 13723  0114AA  6EF6               	movwf	tblptrl,c
 13724  0114AC  0EFB               	movlw	high __powers_
 13725  0114AE  2010               	addwfc	?i2___wmul+1,w,c
 13726  0114B0  6EF7               	movwf	tblptrh,c
 13727  0114B2                     	if	1	;There are 3 active tblptr bytes
 13728  0114B2  6AF8               	clrf	tblptru,c
 13729  0114B4  0E00               	movlw	low (__mediumconst shr (0+16))
 13730  0114B6  22F8               	addwfc	tblptru,f,c
 13731  0114B8                     	endif
 13732  0114B8  0009               	tblrd		*+
 13733  0114BA  CFF5 F015          	movff	tablat,i2___ftmul@f1
 13734  0114BE  0009               	tblrd		*+
 13735  0114C0  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 13736  0114C4  000A               	tblrd		*-
 13737  0114C6  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 13738  0114CA  0E00               	movlw	0
 13739  0114CC  6E12               	movwf	i2___wmul@multiplicand+1,c
 13740  0114CE  0E03               	movlw	3
 13741  0114D0  6E11               	movwf	i2___wmul@multiplicand,c
 13742  0114D2  0E00               	movlw	0
 13743  0114D4  6E04               	movwf	i2___awmod@divisor+1,c
 13744  0114D6  0E0A               	movlw	10
 13745  0114D8  6E03               	movwf	i2___awmod@divisor,c
 13746  0114DA  502A               	movf	i2scale@scl,w,c
 13747  0114DC  6E01               	movwf	i2___awmod@dividend,c
 13748  0114DE  6A02               	clrf	i2___awmod@dividend+1,c
 13749  0114E0  BE01               	btfsc	i2___awmod@dividend,7,c
 13750  0114E2  0602               	decf	i2___awmod@dividend+1,f,c
 13751  0114E4  ECAD  F09A         	call	i2___awmod	;wreg free
 13752  0114E8  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 13753  0114EC  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 13754  0114F0  EC43  F09E         	call	i2___wmul	;wreg free
 13755  0114F4  0EDF               	movlw	low __powers_
 13756  0114F6  240F               	addwf	?i2___wmul,w,c
 13757  0114F8  6EF6               	movwf	tblptrl,c
 13758  0114FA  0EFB               	movlw	high __powers_
 13759  0114FC  2010               	addwfc	?i2___wmul+1,w,c
 13760  0114FE  6EF7               	movwf	tblptrh,c
 13761  011500                     	if	1	;There are 3 active tblptr bytes
 13762  011500  6AF8               	clrf	tblptru,c
 13763  011502  0E00               	movlw	low (__mediumconst shr (0+16))
 13764  011504  22F8               	addwfc	tblptru,f,c
 13765  011506                     	endif
 13766  011506  0009               	tblrd		*+
 13767  011508  CFF5 F018          	movff	tablat,i2___ftmul@f2
 13768  01150C  0009               	tblrd		*+
 13769  01150E  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 13770  011512  000A               	tblrd		*-
 13771  011514  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 13772  011518  EC2D  F096         	call	i2___ftmul	;wreg free
 13773  01151C  C015  F024         	movff	?i2___ftmul,?i2_scale
 13774  011520  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 13775  011524  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 13776  011528  0012               	return	
 13777  01152A                     i2l877:
 13778                           
 13779                           ;doprnt.c: 440: return _powers_[scl];
 13780  01152A  502A               	movf	i2scale@scl,w,c
 13781  01152C  0D03               	mullw	3
 13782  01152E  0EDF               	movlw	low __powers_
 13783  011530  24F3               	addwf	prodl,w,c
 13784  011532  6EF6               	movwf	tblptrl,c
 13785  011534  0EFB               	movlw	high __powers_
 13786  011536  20F4               	addwfc	prodh,w,c
 13787  011538  6EF7               	movwf	tblptrh,c
 13788  01153A                     	if	1	;There are 3 active tblptr bytes
 13789  01153A  6AF8               	clrf	tblptru,c
 13790  01153C  0E00               	movlw	low (__mediumconst shr (0+16))
 13791  01153E  22F8               	addwfc	tblptru,f,c
 13792  011540                     	endif
 13793  011540  0009               	tblrd		*+
 13794  011542  CFF5 F024          	movff	tablat,?i2_scale
 13795  011546  0009               	tblrd		*+
 13796  011548  CFF5 F025          	movff	tablat,?i2_scale+1
 13797  01154C  000A               	tblrd		*-
 13798  01154E  CFF5 F026          	movff	tablat,?i2_scale+2
 13799  011552  0012               	return	
 13800  011554                     __end_ofi2_scale:
 13801                           	opt stack 0
 13802                           tosu	equ	0xFFF
 13803                           tosh	equ	0xFFE
 13804                           tosl	equ	0xFFD
 13805                           pclatu	equ	0xFFB
 13806                           pclath	equ	0xFFA
 13807                           tblptru	equ	0xFF8
 13808                           tblptrh	equ	0xFF7
 13809                           tblptrl	equ	0xFF6
 13810                           tablat	equ	0xFF5
 13811                           prodh	equ	0xFF4
 13812                           prodl	equ	0xFF3
 13813                           intcon	equ	0xFF2
 13814                           postinc0	equ	0xFEE
 13815                           fsr0h	equ	0xFEA
 13816                           fsr0l	equ	0xFE9
 13817                           wreg	equ	0xFE8
 13818                           fsr1h	equ	0xFE2
 13819                           fsr1l	equ	0xFE1
 13820                           bsr	equ	0xFE0
 13821                           indf2	equ	0xFDF
 13822                           postinc2	equ	0xFDE
 13823                           postdec2	equ	0xFDD
 13824                           fsr2h	equ	0xFDA
 13825                           fsr2l	equ	0xFD9
 13826                           status	equ	0xFD8
 13827                           
 13828 ;; *************** function i2_putch *****************
 13829 ;; Defined at:
 13830 ;;		line 180 in file "mcc_generated_files/eusart2.c"
 13831 ;; Parameters:    Size  Location     Type
 13832 ;;  txData          1    wreg     unsigned char 
 13833 ;; Auto vars:     Size  Location     Type
 13834 ;;  txData          1    1[COMRAM] unsigned char 
 13835 ;; Return value:  Size  Location     Type
 13836 ;;                  1    wreg      void 
 13837 ;; Registers used:
 13838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13839 ;; Tracked objects:
 13840 ;;		On entry : 0/0
 13841 ;;		On exit  : 0/0
 13842 ;;		Unchanged: 0/0
 13843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13847 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13848 ;;Total ram usage:        1 bytes
 13849 ;; Hardware stack levels used:    1
 13850 ;; Hardware stack levels required when called:    1
 13851 ;; This function calls:
 13852 ;;		i2_EUSART2_Write
 13853 ;; This function is called by:
 13854 ;;		i2_printf
 13855 ;; This function uses a non-reentrant model
 13856 ;;
 13857                           
 13858                           	psect	text61
 13859  013E56                     __ptext61:
 13860                           	opt stack 0
 13861  013E56                     i2_putch:
 13862                           	opt stack 14
 13863                           
 13864                           ;incstack = 0
 13865                           ;i2putch@txData stored from wreg
 13866  013E56  6E02               	movwf	i2putch@txData,c
 13867                           
 13868                           ;eusart2.c: 182: EUSART2_Write(txData);
 13869  013E58  5002               	movf	i2putch@txData,w,c
 13870  013E5A  ECDB  F09C         	call	i2_EUSART2_Write
 13871  013E5E  0012               	return		;funcret
 13872  013E60                     __end_ofi2_putch:
 13873                           	opt stack 0
 13874                           tosu	equ	0xFFF
 13875                           tosh	equ	0xFFE
 13876                           tosl	equ	0xFFD
 13877                           pclatu	equ	0xFFB
 13878                           pclath	equ	0xFFA
 13879                           tblptru	equ	0xFF8
 13880                           tblptrh	equ	0xFF7
 13881                           tblptrl	equ	0xFF6
 13882                           tablat	equ	0xFF5
 13883                           prodh	equ	0xFF4
 13884                           prodl	equ	0xFF3
 13885                           intcon	equ	0xFF2
 13886                           postinc0	equ	0xFEE
 13887                           fsr0h	equ	0xFEA
 13888                           fsr0l	equ	0xFE9
 13889                           wreg	equ	0xFE8
 13890                           fsr1h	equ	0xFE2
 13891                           fsr1l	equ	0xFE1
 13892                           bsr	equ	0xFE0
 13893                           indf2	equ	0xFDF
 13894                           postinc2	equ	0xFDE
 13895                           postdec2	equ	0xFDD
 13896                           fsr2h	equ	0xFDA
 13897                           fsr2l	equ	0xFD9
 13898                           status	equ	0xFD8
 13899                           
 13900 ;; *************** function i2_EUSART2_Write *****************
 13901 ;; Defined at:
 13902 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 13903 ;; Parameters:    Size  Location     Type
 13904 ;;  txData          1    wreg     unsigned char 
 13905 ;; Auto vars:     Size  Location     Type
 13906 ;;  txData          1    0[COMRAM] unsigned char 
 13907 ;; Return value:  Size  Location     Type
 13908 ;;                  1    wreg      void 
 13909 ;; Registers used:
 13910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13911 ;; Tracked objects:
 13912 ;;		On entry : 0/0
 13913 ;;		On exit  : 0/0
 13914 ;;		Unchanged: 0/0
 13915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13917 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13919 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13920 ;;Total ram usage:        1 bytes
 13921 ;; Hardware stack levels used:    1
 13922 ;; This function calls:
 13923 ;;		Nothing
 13924 ;; This function is called by:
 13925 ;;		i2_putch
 13926 ;; This function uses a non-reentrant model
 13927 ;;
 13928                           
 13929                           	psect	text62
 13930  0139B6                     __ptext62:
 13931                           	opt stack 0
 13932  0139B6                     i2_EUSART2_Write:
 13933                           	opt stack 14
 13934                           
 13935                           ;incstack = 0
 13936                           ;i2EUSART2_Write@txData stored from wreg
 13937  0139B6  6E01               	movwf	i2EUSART2_Write@txData,c
 13938                           
 13939                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
 13940  0139B8  D001               	goto	i2l366
 13941  0139BA                     i2l367:
 13942                           
 13943                           ; BSR set to: 0
 13944  0139BA  0004               	clrwdt		;# 
 13945  0139BC                     i2l366:
 13946  0139BC  0100               	movlb	0	; () banked
 13947  0139BE  51D3               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 13948  0139C0  B4D8               	btfsc	status,2,c
 13949  0139C2  D7FB               	goto	i2l367
 13950                           
 13951                           ; BSR set to: 0
 13952                           ;eusart2.c: 156: }
 13953                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
 13954  0139C4  010E               	movlb	14	; () banked
 13955  0139C6  BD2C               	btfsc	44,6,b	;volatile
 13956  0139C8  D003               	goto	i2l369
 13957                           
 13958                           ; BSR set to: 14
 13959                           ;eusart2.c: 159: {
 13960                           ;eusart2.c: 160: TX2REG = txData;
 13961  0139CA  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 13962                           
 13963                           ;eusart2.c: 161: }
 13964  0139CE  D013               	goto	i2l370
 13965  0139D0                     i2l369:
 13966                           
 13967                           ; BSR set to: 14
 13968                           ;eusart2.c: 162: else
 13969                           ;eusart2.c: 163: {
 13970                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
 13971  0139D0  9D2C               	bcf	44,6,b	;volatile
 13972                           
 13973                           ; BSR set to: 14
 13974                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
 13975  0139D2  0100               	movlb	0	; () banked
 13976  0139D4  51D5               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 13977  0139D6  0D01               	mullw	1
 13978  0139D8  0E40               	movlw	low _eusart2TxBuffer
 13979  0139DA  24F3               	addwf	prodl,w,c
 13980  0139DC  6ED9               	movwf	fsr2l,c
 13981  0139DE  0E01               	movlw	high _eusart2TxBuffer
 13982  0139E0  20F4               	addwfc	prodh,w,c
 13983  0139E2  6EDA               	movwf	fsr2h,c
 13984  0139E4  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 13985                           
 13986                           ; BSR set to: 0
 13987  0139E8  2BD5               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 13988                           
 13989                           ; BSR set to: 0
 13990                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 13991  0139EA  0E3F               	movlw	63
 13992  0139EC  65D5               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 13993  0139EE  D002               	goto	i2l371
 13994                           
 13995                           ; BSR set to: 0
 13996                           ;eusart2.c: 167: {
 13997                           ;eusart2.c: 168: eusart2TxHead = 0;
 13998  0139F0  0E00               	movlw	0
 13999  0139F2  6FD5               	movwf	_eusart2TxHead& (0+255),b	;volatile
 14000  0139F4                     i2l371:
 14001                           
 14002                           ; BSR set to: 0
 14003                           ;eusart2.c: 169: }
 14004                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
 14005                           
 14006                           ; BSR set to: 0
 14007  0139F4  07D3               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 14008  0139F6                     i2l370:
 14009                           
 14010                           ;eusart2.c: 171: }
 14011                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
 14012                           
 14013                           ; BSR set to: 0
 14014  0139F6  010E               	movlb	14	; () banked
 14015  0139F8  8D2C               	bsf	44,6,b	;volatile
 14016                           
 14017                           ; BSR set to: 14
 14018  0139FA  0012               	return		;funcret
 14019  0139FC                     __end_ofi2_EUSART2_Write:
 14020                           	opt stack 0
 14021                           tosu	equ	0xFFF
 14022                           tosh	equ	0xFFE
 14023                           tosl	equ	0xFFD
 14024                           pclatu	equ	0xFFB
 14025                           pclath	equ	0xFFA
 14026                           tblptru	equ	0xFF8
 14027                           tblptrh	equ	0xFF7
 14028                           tblptrl	equ	0xFF6
 14029                           tablat	equ	0xFF5
 14030                           prodh	equ	0xFF4
 14031                           prodl	equ	0xFF3
 14032                           intcon	equ	0xFF2
 14033                           postinc0	equ	0xFEE
 14034                           fsr0h	equ	0xFEA
 14035                           fsr0l	equ	0xFE9
 14036                           wreg	equ	0xFE8
 14037                           fsr1h	equ	0xFE2
 14038                           fsr1l	equ	0xFE1
 14039                           bsr	equ	0xFE0
 14040                           indf2	equ	0xFDF
 14041                           postinc2	equ	0xFDE
 14042                           postdec2	equ	0xFDD
 14043                           fsr2h	equ	0xFDA
 14044                           fsr2l	equ	0xFD9
 14045                           status	equ	0xFD8
 14046                           
 14047 ;; *************** function i2_fround *****************
 14048 ;; Defined at:
 14049 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 14050 ;; Parameters:    Size  Location     Type
 14051 ;;  prec            1    wreg     unsigned char 
 14052 ;; Auto vars:     Size  Location     Type
 14053 ;;  prec            1   44[COMRAM] unsigned char 
 14054 ;; Return value:  Size  Location     Type
 14055 ;;                  3   35[COMRAM] unsigned char 
 14056 ;; Registers used:
 14057 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14058 ;; Tracked objects:
 14059 ;;		On entry : 0/0
 14060 ;;		On exit  : 0/0
 14061 ;;		Unchanged: 0/0
 14062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14063 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14064 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14066 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14067 ;;Total ram usage:       10 bytes
 14068 ;; Hardware stack levels used:    1
 14069 ;; Hardware stack levels required when called:    2
 14070 ;; This function calls:
 14071 ;;		i2___awdiv
 14072 ;;		i2___awmod
 14073 ;;		i2___ftmul
 14074 ;;		i2___wmul
 14075 ;; This function is called by:
 14076 ;;		i2_printf
 14077 ;; This function uses a non-reentrant model
 14078 ;;
 14079                           
 14080                           	psect	text63
 14081  011B50                     __ptext63:
 14082                           	opt stack 0
 14083  011B50                     i2_fround:
 14084                           	opt stack 13
 14085                           
 14086                           ; BSR set to: 14
 14087                           ;incstack = 0
 14088                           ;i2fround@prec stored from wreg
 14089  011B50  6E2D               	movwf	i2fround@prec,c
 14090                           
 14091                           ;doprnt.c: 413: if(prec>=110)
 14092  011B52  0E6D               	movlw	109
 14093  011B54  642D               	cpfsgt	i2fround@prec,c
 14094  011B56  D0A8               	goto	i2l864
 14095                           
 14096                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 14097  011B58  0E00               	movlw	0
 14098  011B5A  6E12               	movwf	i2___wmul@multiplicand+1,c
 14099  011B5C  0E03               	movlw	3
 14100  011B5E  6E11               	movwf	i2___wmul@multiplicand,c
 14101  011B60  0E00               	movlw	0
 14102  011B62  6E0A               	movwf	i2___awdiv@divisor+1,c
 14103  011B64  0E0A               	movlw	10
 14104  011B66  6E09               	movwf	i2___awdiv@divisor,c
 14105  011B68  0E00               	movlw	0
 14106  011B6A  6E04               	movwf	i2___awmod@divisor+1,c
 14107  011B6C  0E64               	movlw	100
 14108  011B6E  6E03               	movwf	i2___awmod@divisor,c
 14109  011B70  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 14110  011B74  6A02               	clrf	i2___awmod@dividend+1,c
 14111  011B76  ECAD  F09A         	call	i2___awmod	;wreg free
 14112  011B7A  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 14113  011B7E  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 14114  011B82  ECB9  F099         	call	i2___awdiv	;wreg free
 14115  011B86  0E09               	movlw	9
 14116  011B88  2407               	addwf	?i2___awdiv,w,c
 14117  011B8A  6E0F               	movwf	i2___wmul@multiplier,c
 14118  011B8C  0E00               	movlw	0
 14119  011B8E  2008               	addwfc	?i2___awdiv+1,w,c
 14120  011B90  6E10               	movwf	i2___wmul@multiplier+1,c
 14121  011B92  EC43  F09E         	call	i2___wmul	;wreg free
 14122  011B96  0E06               	movlw	low __npowers_
 14123  011B98  240F               	addwf	?i2___wmul,w,c
 14124  011B9A  6EF6               	movwf	tblptrl,c
 14125  011B9C  0EFC               	movlw	high __npowers_
 14126  011B9E  2010               	addwfc	?i2___wmul+1,w,c
 14127  011BA0  6EF7               	movwf	tblptrh,c
 14128  011BA2                     	if	1	;There are 3 active tblptr bytes
 14129  011BA2  6AF8               	clrf	tblptru,c
 14130  011BA4  0E00               	movlw	low (__mediumconst shr (0+16))
 14131  011BA6  22F8               	addwfc	tblptru,f,c
 14132  011BA8                     	endif
 14133  011BA8  0009               	tblrd		*+
 14134  011BAA  CFF5 F018          	movff	tablat,i2___ftmul@f2
 14135  011BAE  0009               	tblrd		*+
 14136  011BB0  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 14137  011BB4  000A               	tblrd		*-
 14138  011BB6  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 14139  011BBA  0E00               	movlw	0
 14140  011BBC  6E0A               	movwf	i2___awdiv@divisor+1,c
 14141  011BBE  0E64               	movlw	100
 14142  011BC0  6E09               	movwf	i2___awdiv@divisor,c
 14143  011BC2  C02D  F007         	movff	i2fround@prec,i2___awdiv@dividend
 14144  011BC6  6A08               	clrf	i2___awdiv@dividend+1,c
 14145  011BC8  ECB9  F099         	call	i2___awdiv	;wreg free
 14146  011BCC  0E12               	movlw	18
 14147  011BCE  2407               	addwf	?i2___awdiv,w,c
 14148  011BD0  6E0F               	movwf	i2___wmul@multiplier,c
 14149  011BD2  0E00               	movlw	0
 14150  011BD4  2008               	addwfc	?i2___awdiv+1,w,c
 14151  011BD6  6E10               	movwf	i2___wmul@multiplier+1,c
 14152  011BD8  0E00               	movlw	0
 14153  011BDA  6E12               	movwf	i2___wmul@multiplicand+1,c
 14154  011BDC  0E03               	movlw	3
 14155  011BDE  6E11               	movwf	i2___wmul@multiplicand,c
 14156  011BE0  EC43  F09E         	call	i2___wmul	;wreg free
 14157  011BE4  0E06               	movlw	low __npowers_
 14158  011BE6  240F               	addwf	?i2___wmul,w,c
 14159  011BE8  6EF6               	movwf	tblptrl,c
 14160  011BEA  0EFC               	movlw	high __npowers_
 14161  011BEC  2010               	addwfc	?i2___wmul+1,w,c
 14162  011BEE  6EF7               	movwf	tblptrh,c
 14163  011BF0                     	if	1	;There are 3 active tblptr bytes
 14164  011BF0  6AF8               	clrf	tblptru,c
 14165  011BF2  0E00               	movlw	low (__mediumconst shr (0+16))
 14166  011BF4  22F8               	addwfc	tblptru,f,c
 14167  011BF6                     	endif
 14168  011BF6  0009               	tblrd		*+
 14169  011BF8  CFF5 F015          	movff	tablat,i2___ftmul@f1
 14170  011BFC  0009               	tblrd		*+
 14171  011BFE  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 14172  011C02  000A               	tblrd		*-
 14173  011C04  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 14174  011C08  EC2D  F096         	call	i2___ftmul	;wreg free
 14175  011C0C  C015  F02A         	movff	?i2___ftmul,i2_fround$2713
 14176  011C10  C016  F02B         	movff	?i2___ftmul+1,i2_fround$2713+1
 14177  011C14  C017  F02C         	movff	?i2___ftmul+2,i2_fround$2713+2
 14178                           
 14179                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 14180  011C18  0E00               	movlw	0
 14181  011C1A  6E12               	movwf	i2___wmul@multiplicand+1,c
 14182  011C1C  0E03               	movlw	3
 14183  011C1E  6E11               	movwf	i2___wmul@multiplicand,c
 14184  011C20  0E00               	movlw	0
 14185  011C22  6E04               	movwf	i2___awmod@divisor+1,c
 14186  011C24  0E0A               	movlw	10
 14187  011C26  6E03               	movwf	i2___awmod@divisor,c
 14188  011C28  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 14189  011C2C  6A02               	clrf	i2___awmod@dividend+1,c
 14190  011C2E  ECAD  F09A         	call	i2___awmod	;wreg free
 14191  011C32  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14192  011C36  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14193  011C3A  EC43  F09E         	call	i2___wmul	;wreg free
 14194  011C3E  0E06               	movlw	low __npowers_
 14195  011C40  240F               	addwf	?i2___wmul,w,c
 14196  011C42  6EF6               	movwf	tblptrl,c
 14197  011C44  0EFC               	movlw	high __npowers_
 14198  011C46  2010               	addwfc	?i2___wmul+1,w,c
 14199  011C48  6EF7               	movwf	tblptrh,c
 14200  011C4A                     	if	1	;There are 3 active tblptr bytes
 14201  011C4A  6AF8               	clrf	tblptru,c
 14202  011C4C  0E00               	movlw	low (__mediumconst shr (0+16))
 14203  011C4E  22F8               	addwfc	tblptru,f,c
 14204  011C50                     	endif
 14205  011C50  0009               	tblrd		*+
 14206  011C52  CFF5 F018          	movff	tablat,i2___ftmul@f2
 14207  011C56  0009               	tblrd		*+
 14208  011C58  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 14209  011C5C  000A               	tblrd		*-
 14210  011C5E  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 14211  011C62  C02A  F015         	movff	i2_fround$2713,i2___ftmul@f1
 14212  011C66  C02B  F016         	movff	i2_fround$2713+1,i2___ftmul@f1+1
 14213  011C6A  C02C  F017         	movff	i2_fround$2713+2,i2___ftmul@f1+2
 14214  011C6E  EC2D  F096         	call	i2___ftmul	;wreg free
 14215  011C72  C015  F027         	movff	?i2___ftmul,i2_fround$2714
 14216  011C76  C016  F028         	movff	?i2___ftmul+1,i2_fround$2714+1
 14217  011C7A  C017  F029         	movff	?i2___ftmul+2,i2_fround$2714+2
 14218                           
 14219                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 14220  011C7E  C027  F015         	movff	i2_fround$2714,i2___ftmul@f1
 14221  011C82  C028  F016         	movff	i2_fround$2714+1,i2___ftmul@f1+1
 14222  011C86  C029  F017         	movff	i2_fround$2714+2,i2___ftmul@f1+2
 14223  011C8A  0E00               	movlw	0
 14224  011C8C  6E18               	movwf	i2___ftmul@f2,c
 14225  011C8E  0E00               	movlw	0
 14226  011C90  6E19               	movwf	i2___ftmul@f2+1,c
 14227  011C92  0E3F               	movlw	63
 14228  011C94  6E1A               	movwf	i2___ftmul@f2+2,c
 14229  011C96  EC2D  F096         	call	i2___ftmul	;wreg free
 14230  011C9A  C015  F024         	movff	?i2___ftmul,?i2_fround
 14231  011C9E  C016  F025         	movff	?i2___ftmul+1,?i2_fround+1
 14232  011CA2  C017  F026         	movff	?i2___ftmul+2,?i2_fround+2
 14233  011CA6  0012               	return	
 14234  011CA8                     i2l864:
 14235                           
 14236                           ;doprnt.c: 415: else if(prec > 10)
 14237  011CA8  0E0A               	movlw	10
 14238  011CAA  642D               	cpfsgt	i2fround@prec,c
 14239  011CAC  D069               	goto	i2l867
 14240                           
 14241                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 14242  011CAE  0E00               	movlw	0
 14243  011CB0  6E12               	movwf	i2___wmul@multiplicand+1,c
 14244  011CB2  0E03               	movlw	3
 14245  011CB4  6E11               	movwf	i2___wmul@multiplicand,c
 14246  011CB6  0E00               	movlw	0
 14247  011CB8  6E04               	movwf	i2___awmod@divisor+1,c
 14248  011CBA  0E0A               	movlw	10
 14249  011CBC  6E03               	movwf	i2___awmod@divisor,c
 14250  011CBE  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 14251  011CC2  6A02               	clrf	i2___awmod@dividend+1,c
 14252  011CC4  ECAD  F09A         	call	i2___awmod	;wreg free
 14253  011CC8  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 14254  011CCC  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 14255  011CD0  EC43  F09E         	call	i2___wmul	;wreg free
 14256  011CD4  0E06               	movlw	low __npowers_
 14257  011CD6  240F               	addwf	?i2___wmul,w,c
 14258  011CD8  6EF6               	movwf	tblptrl,c
 14259  011CDA  0EFC               	movlw	high __npowers_
 14260  011CDC  2010               	addwfc	?i2___wmul+1,w,c
 14261  011CDE  6EF7               	movwf	tblptrh,c
 14262  011CE0                     	if	1	;There are 3 active tblptr bytes
 14263  011CE0  6AF8               	clrf	tblptru,c
 14264  011CE2  0E00               	movlw	low (__mediumconst shr (0+16))
 14265  011CE4  22F8               	addwfc	tblptru,f,c
 14266  011CE6                     	endif
 14267  011CE6  0009               	tblrd		*+
 14268  011CE8  CFF5 F018          	movff	tablat,i2___ftmul@f2
 14269  011CEC  0009               	tblrd		*+
 14270  011CEE  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 14271  011CF2  000A               	tblrd		*-
 14272  011CF4  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 14273  011CF8  0E00               	movlw	0
 14274  011CFA  6E0A               	movwf	i2___awdiv@divisor+1,c
 14275  011CFC  0E0A               	movlw	10
 14276  011CFE  6E09               	movwf	i2___awdiv@divisor,c
 14277  011D00  C02D  F007         	movff	i2fround@prec,i2___awdiv@dividend
 14278  011D04  6A08               	clrf	i2___awdiv@dividend+1,c
 14279  011D06  ECB9  F099         	call	i2___awdiv	;wreg free
 14280  011D0A  0E09               	movlw	9
 14281  011D0C  2407               	addwf	?i2___awdiv,w,c
 14282  011D0E  6E0F               	movwf	i2___wmul@multiplier,c
 14283  011D10  0E00               	movlw	0
 14284  011D12  2008               	addwfc	?i2___awdiv+1,w,c
 14285  011D14  6E10               	movwf	i2___wmul@multiplier+1,c
 14286  011D16  0E00               	movlw	0
 14287  011D18  6E12               	movwf	i2___wmul@multiplicand+1,c
 14288  011D1A  0E03               	movlw	3
 14289  011D1C  6E11               	movwf	i2___wmul@multiplicand,c
 14290  011D1E  EC43  F09E         	call	i2___wmul	;wreg free
 14291  011D22  0E06               	movlw	low __npowers_
 14292  011D24  240F               	addwf	?i2___wmul,w,c
 14293  011D26  6EF6               	movwf	tblptrl,c
 14294  011D28  0EFC               	movlw	high __npowers_
 14295  011D2A  2010               	addwfc	?i2___wmul+1,w,c
 14296  011D2C  6EF7               	movwf	tblptrh,c
 14297  011D2E                     	if	1	;There are 3 active tblptr bytes
 14298  011D2E  6AF8               	clrf	tblptru,c
 14299  011D30  0E00               	movlw	low (__mediumconst shr (0+16))
 14300  011D32  22F8               	addwfc	tblptru,f,c
 14301  011D34                     	endif
 14302  011D34  0009               	tblrd		*+
 14303  011D36  CFF5 F015          	movff	tablat,i2___ftmul@f1
 14304  011D3A  0009               	tblrd		*+
 14305  011D3C  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 14306  011D40  000A               	tblrd		*-
 14307  011D42  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 14308  011D46  EC2D  F096         	call	i2___ftmul	;wreg free
 14309  011D4A  C015  F02A         	movff	?i2___ftmul,i2_fround$2713
 14310  011D4E  C016  F02B         	movff	?i2___ftmul+1,i2_fround$2713+1
 14311  011D52  C017  F02C         	movff	?i2___ftmul+2,i2_fround$2713+2
 14312                           
 14313                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 14314  011D56  C02A  F015         	movff	i2_fround$2713,i2___ftmul@f1
 14315  011D5A  C02B  F016         	movff	i2_fround$2713+1,i2___ftmul@f1+1
 14316  011D5E  C02C  F017         	movff	i2_fround$2713+2,i2___ftmul@f1+2
 14317  011D62  0E00               	movlw	0
 14318  011D64  6E18               	movwf	i2___ftmul@f2,c
 14319  011D66  0E00               	movlw	0
 14320  011D68  6E19               	movwf	i2___ftmul@f2+1,c
 14321  011D6A  0E3F               	movlw	63
 14322  011D6C  6E1A               	movwf	i2___ftmul@f2+2,c
 14323  011D6E  EC2D  F096         	call	i2___ftmul	;wreg free
 14324  011D72  C015  F024         	movff	?i2___ftmul,?i2_fround
 14325  011D76  C016  F025         	movff	?i2___ftmul+1,?i2_fround+1
 14326  011D7A  C017  F026         	movff	?i2___ftmul+2,?i2_fround+2
 14327  011D7E  0012               	return	
 14328  011D80                     i2l867:
 14329                           
 14330                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 14331  011D80  502D               	movf	i2fround@prec,w,c
 14332  011D82  0D03               	mullw	3
 14333  011D84  0E06               	movlw	low __npowers_
 14334  011D86  24F3               	addwf	prodl,w,c
 14335  011D88  6EF6               	movwf	tblptrl,c
 14336  011D8A  0EFC               	movlw	high __npowers_
 14337  011D8C  20F4               	addwfc	prodh,w,c
 14338  011D8E  6EF7               	movwf	tblptrh,c
 14339  011D90                     	if	1	;There are 3 active tblptr bytes
 14340  011D90  6AF8               	clrf	tblptru,c
 14341  011D92  0E00               	movlw	low (__mediumconst shr (0+16))
 14342  011D94  22F8               	addwfc	tblptru,f,c
 14343  011D96                     	endif
 14344  011D96  0009               	tblrd		*+
 14345  011D98  CFF5 F015          	movff	tablat,i2___ftmul@f1
 14346  011D9C  0009               	tblrd		*+
 14347  011D9E  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 14348  011DA2  000A               	tblrd		*-
 14349  011DA4  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 14350  011DA8  0E00               	movlw	0
 14351  011DAA  6E18               	movwf	i2___ftmul@f2,c
 14352  011DAC  0E00               	movlw	0
 14353  011DAE  6E19               	movwf	i2___ftmul@f2+1,c
 14354  011DB0  0E3F               	movlw	63
 14355  011DB2  6E1A               	movwf	i2___ftmul@f2+2,c
 14356  011DB4  EC2D  F096         	call	i2___ftmul	;wreg free
 14357  011DB8  C015  F024         	movff	?i2___ftmul,?i2_fround
 14358  011DBC  C016  F025         	movff	?i2___ftmul+1,?i2_fround+1
 14359  011DC0  C017  F026         	movff	?i2___ftmul+2,?i2_fround+2
 14360  011DC4  0012               	return	
 14361  011DC6                     __end_ofi2_fround:
 14362                           	opt stack 0
 14363                           tosu	equ	0xFFF
 14364                           tosh	equ	0xFFE
 14365                           tosl	equ	0xFFD
 14366                           pclatu	equ	0xFFB
 14367                           pclath	equ	0xFFA
 14368                           tblptru	equ	0xFF8
 14369                           tblptrh	equ	0xFF7
 14370                           tblptrl	equ	0xFF6
 14371                           tablat	equ	0xFF5
 14372                           prodh	equ	0xFF4
 14373                           prodl	equ	0xFF3
 14374                           intcon	equ	0xFF2
 14375                           postinc0	equ	0xFEE
 14376                           fsr0h	equ	0xFEA
 14377                           fsr0l	equ	0xFE9
 14378                           wreg	equ	0xFE8
 14379                           fsr1h	equ	0xFE2
 14380                           fsr1l	equ	0xFE1
 14381                           bsr	equ	0xFE0
 14382                           indf2	equ	0xFDF
 14383                           postinc2	equ	0xFDE
 14384                           postdec2	equ	0xFDD
 14385                           fsr2h	equ	0xFDA
 14386                           fsr2l	equ	0xFD9
 14387                           status	equ	0xFD8
 14388                           
 14389 ;; *************** function i2___wmul *****************
 14390 ;; Defined at:
 14391 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 14392 ;; Parameters:    Size  Location     Type
 14393 ;;  multiplier      2   14[COMRAM] unsigned int 
 14394 ;;  multiplicand    2   16[COMRAM] unsigned int 
 14395 ;; Auto vars:     Size  Location     Type
 14396 ;;  __wmul          2   18[COMRAM] unsigned int 
 14397 ;; Return value:  Size  Location     Type
 14398 ;;                  2   14[COMRAM] unsigned int 
 14399 ;; Registers used:
 14400 ;;		wreg, status,2, status,0, prodl, prodh
 14401 ;; Tracked objects:
 14402 ;;		On entry : 0/0
 14403 ;;		On exit  : 0/0
 14404 ;;		Unchanged: 0/0
 14405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14406 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14407 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14409 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14410 ;;Total ram usage:        6 bytes
 14411 ;; Hardware stack levels used:    1
 14412 ;; This function calls:
 14413 ;;		Nothing
 14414 ;; This function is called by:
 14415 ;;		i2_fround
 14416 ;;		i2_scale
 14417 ;;		i2_printf
 14418 ;; This function uses a non-reentrant model
 14419 ;;
 14420                           
 14421                           	psect	text64
 14422  013C86                     __ptext64:
 14423                           	opt stack 0
 14424  013C86                     i2___wmul:
 14425                           	opt stack 14
 14426                           
 14427                           ;incstack = 0
 14428  013C86  500F               	movf	i2___wmul@multiplier,w,c
 14429  013C88  0211               	mulwf	i2___wmul@multiplicand,c
 14430  013C8A  CFF3 F013          	movff	prodl,i2___wmul@product
 14431  013C8E  CFF4 F014          	movff	prodh,i2___wmul@product+1
 14432  013C92  500F               	movf	i2___wmul@multiplier,w,c
 14433  013C94  0212               	mulwf	i2___wmul@multiplicand+1,c
 14434  013C96  50F3               	movf	prodl,w,c
 14435  013C98  2614               	addwf	i2___wmul@product+1,f,c
 14436  013C9A  5010               	movf	i2___wmul@multiplier+1,w,c
 14437  013C9C  0211               	mulwf	i2___wmul@multiplicand,c
 14438  013C9E  50F3               	movf	prodl,w,c
 14439  013CA0  2614               	addwf	i2___wmul@product+1,f,c
 14440  013CA2  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 14441  013CA6  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 14442  013CAA  0012               	return	
 14443  013CAC                     __end_ofi2___wmul:
 14444                           	opt stack 0
 14445                           tosu	equ	0xFFF
 14446                           tosh	equ	0xFFE
 14447                           tosl	equ	0xFFD
 14448                           pclatu	equ	0xFFB
 14449                           pclath	equ	0xFFA
 14450                           tblptru	equ	0xFF8
 14451                           tblptrh	equ	0xFF7
 14452                           tblptrl	equ	0xFF6
 14453                           tablat	equ	0xFF5
 14454                           prodh	equ	0xFF4
 14455                           prodl	equ	0xFF3
 14456                           intcon	equ	0xFF2
 14457                           postinc0	equ	0xFEE
 14458                           fsr0h	equ	0xFEA
 14459                           fsr0l	equ	0xFE9
 14460                           wreg	equ	0xFE8
 14461                           fsr1h	equ	0xFE2
 14462                           fsr1l	equ	0xFE1
 14463                           bsr	equ	0xFE0
 14464                           indf2	equ	0xFDF
 14465                           postinc2	equ	0xFDE
 14466                           postdec2	equ	0xFDD
 14467                           fsr2h	equ	0xFDA
 14468                           fsr2l	equ	0xFD9
 14469                           status	equ	0xFD8
 14470                           
 14471 ;; *************** function i2___awmod *****************
 14472 ;; Defined at:
 14473 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 14474 ;; Parameters:    Size  Location     Type
 14475 ;;  dividend        2    0[COMRAM] int 
 14476 ;;  divisor         2    2[COMRAM] int 
 14477 ;; Auto vars:     Size  Location     Type
 14478 ;;  __awmod         1    5[COMRAM] unsigned char 
 14479 ;;  __awmod         1    4[COMRAM] unsigned char 
 14480 ;; Return value:  Size  Location     Type
 14481 ;;                  2    0[COMRAM] int 
 14482 ;; Registers used:
 14483 ;;		wreg, status,2, status,0
 14484 ;; Tracked objects:
 14485 ;;		On entry : 0/0
 14486 ;;		On exit  : 0/0
 14487 ;;		Unchanged: 0/0
 14488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14489 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14490 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14492 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14493 ;;Total ram usage:        6 bytes
 14494 ;; Hardware stack levels used:    1
 14495 ;; This function calls:
 14496 ;;		Nothing
 14497 ;; This function is called by:
 14498 ;;		i2_fround
 14499 ;;		i2_scale
 14500 ;; This function uses a non-reentrant model
 14501 ;;
 14502                           
 14503                           	psect	text65
 14504  01355A                     __ptext65:
 14505                           	opt stack 0
 14506  01355A                     i2___awmod:
 14507                           	opt stack 14
 14508                           
 14509                           ;incstack = 0
 14510  01355A  0E00               	movlw	0
 14511  01355C  6E06               	movwf	i2___awmod@sign,c
 14512  01355E  AE02               	btfss	i2___awmod@dividend+1,7,c
 14513  013560  D006               	goto	i2l1109
 14514  013562  6C01               	negf	i2___awmod@dividend,c
 14515  013564  1E02               	comf	i2___awmod@dividend+1,f,c
 14516  013566  B0D8               	btfsc	status,0,c
 14517  013568  2A02               	incf	i2___awmod@dividend+1,f,c
 14518  01356A  0E01               	movlw	1
 14519  01356C  6E06               	movwf	i2___awmod@sign,c
 14520  01356E                     i2l1109:
 14521  01356E  AE04               	btfss	i2___awmod@divisor+1,7,c
 14522  013570  D004               	goto	i2l1110
 14523  013572  6C03               	negf	i2___awmod@divisor,c
 14524  013574  1E04               	comf	i2___awmod@divisor+1,f,c
 14525  013576  B0D8               	btfsc	status,0,c
 14526  013578  2A04               	incf	i2___awmod@divisor+1,f,c
 14527  01357A                     i2l1110:
 14528  01357A  5003               	movf	i2___awmod@divisor,w,c
 14529  01357C  1004               	iorwf	i2___awmod@divisor+1,w,c
 14530  01357E  B4D8               	btfsc	status,2,c
 14531  013580  D018               	goto	i2l1117
 14532  013582  0E01               	movlw	1
 14533  013584  6E05               	movwf	i2___awmod@counter,c
 14534  013586  D004               	goto	i2l1112
 14535  013588  90D8               	bcf	status,0,c
 14536  01358A  3603               	rlcf	i2___awmod@divisor,f,c
 14537  01358C  3604               	rlcf	i2___awmod@divisor+1,f,c
 14538  01358E  2A05               	incf	i2___awmod@counter,f,c
 14539  013590                     i2l1112:
 14540  013590  AE04               	btfss	i2___awmod@divisor+1,7,c
 14541  013592  D7FA               	goto	i2l1113
 14542  013594                     i2u746_40:
 14543  013594  5003               	movf	i2___awmod@divisor,w,c
 14544  013596  5C01               	subwf	i2___awmod@dividend,w,c
 14545  013598  5004               	movf	i2___awmod@divisor+1,w,c
 14546  01359A  5802               	subwfb	i2___awmod@dividend+1,w,c
 14547  01359C  A0D8               	btfss	status,0,c
 14548  01359E  D004               	goto	i2l1116
 14549  0135A0  5003               	movf	i2___awmod@divisor,w,c
 14550  0135A2  5E01               	subwf	i2___awmod@dividend,f,c
 14551  0135A4  5004               	movf	i2___awmod@divisor+1,w,c
 14552  0135A6  5A02               	subwfb	i2___awmod@dividend+1,f,c
 14553  0135A8                     i2l1116:
 14554  0135A8  90D8               	bcf	status,0,c
 14555  0135AA  3204               	rrcf	i2___awmod@divisor+1,f,c
 14556  0135AC  3203               	rrcf	i2___awmod@divisor,f,c
 14557  0135AE  2E05               	decfsz	i2___awmod@counter,f,c
 14558  0135B0  D7F1               	goto	i2u746_40
 14559  0135B2                     i2l1117:
 14560  0135B2  5006               	movf	i2___awmod@sign,w,c
 14561  0135B4  B4D8               	btfsc	status,2,c
 14562  0135B6  D004               	goto	i2l1118
 14563  0135B8  6C01               	negf	i2___awmod@dividend,c
 14564  0135BA  1E02               	comf	i2___awmod@dividend+1,f,c
 14565  0135BC  B0D8               	btfsc	status,0,c
 14566  0135BE  2A02               	incf	i2___awmod@dividend+1,f,c
 14567  0135C0                     i2l1118:
 14568  0135C0  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 14569  0135C4  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 14570  0135C8  0012               	return	
 14571  0135CA                     __end_ofi2___awmod:
 14572                           	opt stack 0
 14573                           tosu	equ	0xFFF
 14574                           tosh	equ	0xFFE
 14575                           tosl	equ	0xFFD
 14576                           pclatu	equ	0xFFB
 14577                           pclath	equ	0xFFA
 14578                           tblptru	equ	0xFF8
 14579                           tblptrh	equ	0xFF7
 14580                           tblptrl	equ	0xFF6
 14581                           tablat	equ	0xFF5
 14582                           prodh	equ	0xFF4
 14583                           prodl	equ	0xFF3
 14584                           intcon	equ	0xFF2
 14585                           postinc0	equ	0xFEE
 14586                           fsr0h	equ	0xFEA
 14587                           fsr0l	equ	0xFE9
 14588                           wreg	equ	0xFE8
 14589                           fsr1h	equ	0xFE2
 14590                           fsr1l	equ	0xFE1
 14591                           bsr	equ	0xFE0
 14592                           indf2	equ	0xFDF
 14593                           postinc2	equ	0xFDE
 14594                           postdec2	equ	0xFDD
 14595                           fsr2h	equ	0xFDA
 14596                           fsr2l	equ	0xFD9
 14597                           status	equ	0xFD8
 14598                           
 14599 ;; *************** function i2___awdiv *****************
 14600 ;; Defined at:
 14601 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 14602 ;; Parameters:    Size  Location     Type
 14603 ;;  dividend        2    6[COMRAM] int 
 14604 ;;  divisor         2    8[COMRAM] int 
 14605 ;; Auto vars:     Size  Location     Type
 14606 ;;  __awdiv         2   12[COMRAM] int 
 14607 ;;  __awdiv         1   11[COMRAM] unsigned char 
 14608 ;;  __awdiv         1   10[COMRAM] unsigned char 
 14609 ;; Return value:  Size  Location     Type
 14610 ;;                  2    6[COMRAM] int 
 14611 ;; Registers used:
 14612 ;;		wreg, status,2, status,0
 14613 ;; Tracked objects:
 14614 ;;		On entry : 0/0
 14615 ;;		On exit  : 0/0
 14616 ;;		Unchanged: 0/0
 14617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14618 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14619 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14621 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14622 ;;Total ram usage:        8 bytes
 14623 ;; Hardware stack levels used:    1
 14624 ;; This function calls:
 14625 ;;		Nothing
 14626 ;; This function is called by:
 14627 ;;		i2_fround
 14628 ;;		i2_scale
 14629 ;;		i2_printf
 14630 ;; This function uses a non-reentrant model
 14631 ;;
 14632                           
 14633                           	psect	text66
 14634  013372                     __ptext66:
 14635                           	opt stack 0
 14636  013372                     i2___awdiv:
 14637                           	opt stack 14
 14638                           
 14639                           ;incstack = 0
 14640  013372  0E00               	movlw	0
 14641  013374  6E0C               	movwf	i2___awdiv@sign,c
 14642  013376  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 14643  013378  D006               	goto	i2l1096
 14644  01337A  6C09               	negf	i2___awdiv@divisor,c
 14645  01337C  1E0A               	comf	i2___awdiv@divisor+1,f,c
 14646  01337E  B0D8               	btfsc	status,0,c
 14647  013380  2A0A               	incf	i2___awdiv@divisor+1,f,c
 14648  013382  0E01               	movlw	1
 14649  013384  6E0C               	movwf	i2___awdiv@sign,c
 14650  013386                     i2l1096:
 14651  013386  AE08               	btfss	i2___awdiv@dividend+1,7,c
 14652  013388  D006               	goto	i2l1097
 14653  01338A  6C07               	negf	i2___awdiv@dividend,c
 14654  01338C  1E08               	comf	i2___awdiv@dividend+1,f,c
 14655  01338E  B0D8               	btfsc	status,0,c
 14656  013390  2A08               	incf	i2___awdiv@dividend+1,f,c
 14657  013392  0E01               	movlw	1
 14658  013394  1A0C               	xorwf	i2___awdiv@sign,f,c
 14659  013396                     i2l1097:
 14660  013396  0E00               	movlw	0
 14661  013398  6E0E               	movwf	i2___awdiv@quotient+1,c
 14662  01339A  0E00               	movlw	0
 14663  01339C  6E0D               	movwf	i2___awdiv@quotient,c
 14664  01339E  5009               	movf	i2___awdiv@divisor,w,c
 14665  0133A0  100A               	iorwf	i2___awdiv@divisor+1,w,c
 14666  0133A2  B4D8               	btfsc	status,2,c
 14667  0133A4  D01C               	goto	i2l1104
 14668  0133A6  0E01               	movlw	1
 14669  0133A8  6E0B               	movwf	i2___awdiv@counter,c
 14670  0133AA  D004               	goto	i2l1099
 14671  0133AC  90D8               	bcf	status,0,c
 14672  0133AE  3609               	rlcf	i2___awdiv@divisor,f,c
 14673  0133B0  360A               	rlcf	i2___awdiv@divisor+1,f,c
 14674  0133B2  2A0B               	incf	i2___awdiv@counter,f,c
 14675  0133B4                     i2l1099:
 14676  0133B4  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 14677  0133B6  D7FA               	goto	i2l1100
 14678  0133B8                     i2u740_40:
 14679  0133B8  90D8               	bcf	status,0,c
 14680  0133BA  360D               	rlcf	i2___awdiv@quotient,f,c
 14681  0133BC  360E               	rlcf	i2___awdiv@quotient+1,f,c
 14682  0133BE  5009               	movf	i2___awdiv@divisor,w,c
 14683  0133C0  5C07               	subwf	i2___awdiv@dividend,w,c
 14684  0133C2  500A               	movf	i2___awdiv@divisor+1,w,c
 14685  0133C4  5808               	subwfb	i2___awdiv@dividend+1,w,c
 14686  0133C6  A0D8               	btfss	status,0,c
 14687  0133C8  D005               	goto	i2l1103
 14688  0133CA  5009               	movf	i2___awdiv@divisor,w,c
 14689  0133CC  5E07               	subwf	i2___awdiv@dividend,f,c
 14690  0133CE  500A               	movf	i2___awdiv@divisor+1,w,c
 14691  0133D0  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 14692  0133D2  800D               	bsf	i2___awdiv@quotient,0,c
 14693  0133D4                     i2l1103:
 14694  0133D4  90D8               	bcf	status,0,c
 14695  0133D6  320A               	rrcf	i2___awdiv@divisor+1,f,c
 14696  0133D8  3209               	rrcf	i2___awdiv@divisor,f,c
 14697  0133DA  2E0B               	decfsz	i2___awdiv@counter,f,c
 14698  0133DC  D7ED               	goto	i2u740_40
 14699  0133DE                     i2l1104:
 14700  0133DE  500C               	movf	i2___awdiv@sign,w,c
 14701  0133E0  B4D8               	btfsc	status,2,c
 14702  0133E2  D004               	goto	i2l1105
 14703  0133E4  6C0D               	negf	i2___awdiv@quotient,c
 14704  0133E6  1E0E               	comf	i2___awdiv@quotient+1,f,c
 14705  0133E8  B0D8               	btfsc	status,0,c
 14706  0133EA  2A0E               	incf	i2___awdiv@quotient+1,f,c
 14707  0133EC                     i2l1105:
 14708  0133EC  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 14709  0133F0  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 14710  0133F4  0012               	return	
 14711  0133F6                     __end_ofi2___awdiv:
 14712                           	opt stack 0
 14713                           tosu	equ	0xFFF
 14714                           tosh	equ	0xFFE
 14715                           tosl	equ	0xFFD
 14716                           pclatu	equ	0xFFB
 14717                           pclath	equ	0xFFA
 14718                           tblptru	equ	0xFF8
 14719                           tblptrh	equ	0xFF7
 14720                           tblptrl	equ	0xFF6
 14721                           tablat	equ	0xFF5
 14722                           prodh	equ	0xFF4
 14723                           prodl	equ	0xFF3
 14724                           intcon	equ	0xFF2
 14725                           postinc0	equ	0xFEE
 14726                           fsr0h	equ	0xFEA
 14727                           fsr0l	equ	0xFE9
 14728                           wreg	equ	0xFE8
 14729                           fsr1h	equ	0xFE2
 14730                           fsr1l	equ	0xFE1
 14731                           bsr	equ	0xFE0
 14732                           indf2	equ	0xFDF
 14733                           postinc2	equ	0xFDE
 14734                           postdec2	equ	0xFDD
 14735                           fsr2h	equ	0xFDA
 14736                           fsr2l	equ	0xFD9
 14737                           status	equ	0xFD8
 14738                           
 14739 ;; *************** function i2__tdiv_to_l_ *****************
 14740 ;; Defined at:
 14741 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 14742 ;; Parameters:    Size  Location     Type
 14743 ;;  f1              3    0[COMRAM] float 
 14744 ;;  f2              3    3[COMRAM] float 
 14745 ;; Auto vars:     Size  Location     Type
 14746 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 14747 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 14748 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 14749 ;; Return value:  Size  Location     Type
 14750 ;;                  4    0[COMRAM] unsigned long 
 14751 ;; Registers used:
 14752 ;;		wreg, status,2, status,0
 14753 ;; Tracked objects:
 14754 ;;		On entry : 0/0
 14755 ;;		On exit  : 0/0
 14756 ;;		Unchanged: 0/0
 14757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14758 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14759 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14760 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14761 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14762 ;;Total ram usage:       15 bytes
 14763 ;; Hardware stack levels used:    1
 14764 ;; This function calls:
 14765 ;;		Nothing
 14766 ;; This function is called by:
 14767 ;;		i2_printf
 14768 ;; This function uses a non-reentrant model
 14769 ;;
 14770                           
 14771                           	psect	text67
 14772  0125D6                     __ptext67:
 14773                           	opt stack 0
 14774  0125D6                     i2__tdiv_to_l_:
 14775                           	opt stack 15
 14776                           
 14777                           ;incstack = 0
 14778  0125D6  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 14779  0125DA  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 14780  0125DC  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 14781  0125DE  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 14782  0125E0  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 14783  0125E2  E301               	bnc	u792_41
 14784  0125E4  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 14785  0125E6                     u792_41:
 14786  0125E6  5007               	movf	??i2__tdiv_to_l_,w,c
 14787  0125E8  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 14788  0125EA  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 14789  0125EC  A4D8               	btfss	status,2,c
 14790  0125EE  D009               	goto	i2l1232
 14791  0125F0  0E00               	movlw	0
 14792  0125F2  6E01               	movwf	?i2__tdiv_to_l_,c
 14793  0125F4  0E00               	movlw	0
 14794  0125F6  6E02               	movwf	?i2__tdiv_to_l_+1,c
 14795  0125F8  0E00               	movlw	0
 14796  0125FA  6E03               	movwf	?i2__tdiv_to_l_+2,c
 14797  0125FC  0E00               	movlw	0
 14798  0125FE  6E04               	movwf	?i2__tdiv_to_l_+3,c
 14799  012600  0012               	return	
 14800  012602                     i2l1232:
 14801  012602  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 14802  012606  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 14803  012608  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 14804  01260A  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 14805  01260C  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 14806  01260E  E301               	bnc	u794_41
 14807  012610  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 14808  012612                     u794_41:
 14809  012612  5007               	movf	??i2__tdiv_to_l_,w,c
 14810  012614  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 14811  012616  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 14812  012618  A4D8               	btfss	status,2,c
 14813  01261A  D009               	goto	i2l1234
 14814  01261C  0E00               	movlw	0
 14815  01261E  6E01               	movwf	?i2__tdiv_to_l_,c
 14816  012620  0E00               	movlw	0
 14817  012622  6E02               	movwf	?i2__tdiv_to_l_+1,c
 14818  012624  0E00               	movlw	0
 14819  012626  6E03               	movwf	?i2__tdiv_to_l_+2,c
 14820  012628  0E00               	movlw	0
 14821  01262A  6E04               	movwf	?i2__tdiv_to_l_+3,c
 14822  01262C  0012               	return	
 14823  01262E                     i2l1234:
 14824  01262E  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 14825  012630  0EFF               	movlw	255
 14826  012632  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 14827  012634  0EFF               	movlw	255
 14828  012636  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 14829  012638  0E00               	movlw	0
 14830  01263A  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 14831  01263C  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 14832  01263E  0EFF               	movlw	255
 14833  012640  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 14834  012642  0EFF               	movlw	255
 14835  012644  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 14836  012646  0E00               	movlw	0
 14837  012648  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 14838  01264A  0E00               	movlw	0
 14839  01264C  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 14840  01264E  0E00               	movlw	0
 14841  012650  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 14842  012652  0E00               	movlw	0
 14843  012654  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 14844  012656  0E00               	movlw	0
 14845  012658  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 14846  01265A  0E7F               	movlw	127
 14847  01265C  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 14848  01265E  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 14849  012660  0F98               	addlw	152
 14850  012662  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 14851  012664  0E18               	movlw	24
 14852  012666  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 14853  012668                     i2l1235:
 14854  012668  90D8               	bcf	status,0,c
 14855  01266A  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 14856  01266C  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 14857  01266E  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 14858  012670  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 14859  012672  5004               	movf	i2__tdiv_to_l_@f2,w,c
 14860  012674  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 14861  012676  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 14862  012678  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 14863  01267A  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 14864  01267C  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 14865  01267E  A0D8               	btfss	status,0,c
 14866  012680  D007               	goto	i2l1236
 14867  012682  5004               	movf	i2__tdiv_to_l_@f2,w,c
 14868  012684  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 14869  012686  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 14870  012688  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 14871  01268A  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 14872  01268C  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 14873  01268E  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 14874  012690                     i2l1236:
 14875  012690  90D8               	bcf	status,0,c
 14876  012692  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 14877  012694  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 14878  012696  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 14879  012698  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 14880  01269A  D7E6               	goto	i2l1235
 14881  01269C  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 14882  01269E  D016               	goto	i2l1238
 14883  0126A0  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 14884  0126A2  0A80               	xorlw	128
 14885  0126A4  0F97               	addlw	151
 14886  0126A6  B0D8               	btfsc	status,0,c
 14887  0126A8  D009               	goto	i2l1239
 14888  0126AA  0E00               	movlw	0
 14889  0126AC  6E01               	movwf	?i2__tdiv_to_l_,c
 14890  0126AE  0E00               	movlw	0
 14891  0126B0  6E02               	movwf	?i2__tdiv_to_l_+1,c
 14892  0126B2  0E00               	movlw	0
 14893  0126B4  6E03               	movwf	?i2__tdiv_to_l_+2,c
 14894  0126B6  0E00               	movlw	0
 14895  0126B8  6E04               	movwf	?i2__tdiv_to_l_+3,c
 14896  0126BA  0012               	return	
 14897  0126BC                     i2l1239:
 14898  0126BC  90D8               	bcf	status,0,c
 14899  0126BE  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 14900  0126C0  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 14901  0126C2  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 14902  0126C4  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 14903  0126C6  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 14904  0126C8  D7F9               	goto	i2l1239
 14905  0126CA  D015               	goto	i2u800_40
 14906  0126CC                     i2l1238:
 14907  0126CC  0E17               	movlw	23
 14908  0126CE  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 14909  0126D0  D00F               	goto	i2l1244
 14910  0126D2  0E00               	movlw	0
 14911  0126D4  6E01               	movwf	?i2__tdiv_to_l_,c
 14912  0126D6  0E00               	movlw	0
 14913  0126D8  6E02               	movwf	?i2__tdiv_to_l_+1,c
 14914  0126DA  0E00               	movlw	0
 14915  0126DC  6E03               	movwf	?i2__tdiv_to_l_+2,c
 14916  0126DE  0E00               	movlw	0
 14917  0126E0  6E04               	movwf	?i2__tdiv_to_l_+3,c
 14918  0126E2  0012               	return	
 14919  0126E4  90D8               	bcf	status,0,c
 14920  0126E6  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 14921  0126E8  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 14922  0126EA  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 14923  0126EC  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 14924  0126EE  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 14925  0126F0                     i2l1244:
 14926  0126F0  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 14927  0126F2  A4D8               	btfss	status,2,c
 14928  0126F4  D7F7               	goto	i2l1245
 14929  0126F6                     i2u800_40:
 14930  0126F6  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 14931  0126FA  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 14932  0126FE  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 14933  012702  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 14934  012706  0012               	return		;funcret
 14935  012708                     __end_ofi2__tdiv_to_l_:
 14936                           	opt stack 0
 14937                           tosu	equ	0xFFF
 14938                           tosh	equ	0xFFE
 14939                           tosl	equ	0xFFD
 14940                           pclatu	equ	0xFFB
 14941                           pclath	equ	0xFFA
 14942                           tblptru	equ	0xFF8
 14943                           tblptrh	equ	0xFF7
 14944                           tblptrl	equ	0xFF6
 14945                           tablat	equ	0xFF5
 14946                           prodh	equ	0xFF4
 14947                           prodl	equ	0xFF3
 14948                           intcon	equ	0xFF2
 14949                           postinc0	equ	0xFEE
 14950                           fsr0h	equ	0xFEA
 14951                           fsr0l	equ	0xFE9
 14952                           wreg	equ	0xFE8
 14953                           fsr1h	equ	0xFE2
 14954                           fsr1l	equ	0xFE1
 14955                           bsr	equ	0xFE0
 14956                           indf2	equ	0xFDF
 14957                           postinc2	equ	0xFDE
 14958                           postdec2	equ	0xFDD
 14959                           fsr2h	equ	0xFDA
 14960                           fsr2l	equ	0xFD9
 14961                           status	equ	0xFD8
 14962                           
 14963 ;; *************** function i2__div_to_l_ *****************
 14964 ;; Defined at:
 14965 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 14966 ;; Parameters:    Size  Location     Type
 14967 ;;  f1              3    0[COMRAM] unsigned long 
 14968 ;;  f2              3    3[COMRAM] unsigned long 
 14969 ;; Auto vars:     Size  Location     Type
 14970 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 14971 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 14972 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 14973 ;; Return value:  Size  Location     Type
 14974 ;;                  4    0[COMRAM] unsigned long 
 14975 ;; Registers used:
 14976 ;;		wreg, status,2, status,0
 14977 ;; Tracked objects:
 14978 ;;		On entry : 0/0
 14979 ;;		On exit  : 0/0
 14980 ;;		Unchanged: 0/0
 14981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14982 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14983 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14985 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14986 ;;Total ram usage:       12 bytes
 14987 ;; Hardware stack levels used:    1
 14988 ;; This function calls:
 14989 ;;		Nothing
 14990 ;; This function is called by:
 14991 ;;		i2_printf
 14992 ;; This function uses a non-reentrant model
 14993 ;;
 14994                           
 14995                           	psect	text68
 14996  012832                     __ptext68:
 14997                           	opt stack 0
 14998  012832                     i2__div_to_l_:
 14999                           	opt stack 15
 15000                           
 15001                           ;incstack = 0
 15002  012832  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 15003  012834  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 15004  012836  6E0C               	movwf	i2__div_to_l_@exp1,c
 15005  012838  500C               	movf	i2__div_to_l_@exp1,w,c
 15006  01283A  A4D8               	btfss	status,2,c
 15007  01283C  D009               	goto	i2l1128
 15008  01283E  0E00               	movlw	0
 15009  012840  6E01               	movwf	?i2__div_to_l_,c
 15010  012842  0E00               	movlw	0
 15011  012844  6E02               	movwf	?i2__div_to_l_+1,c
 15012  012846  0E00               	movlw	0
 15013  012848  6E03               	movwf	?i2__div_to_l_+2,c
 15014  01284A  0E00               	movlw	0
 15015  01284C  6E04               	movwf	?i2__div_to_l_+3,c
 15016  01284E  0012               	return	
 15017  012850                     i2l1128:
 15018  012850  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 15019  012852  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 15020  012854  6E0B               	movwf	i2__div_to_l_@cntr,c
 15021  012856  500B               	movf	i2__div_to_l_@cntr,w,c
 15022  012858  A4D8               	btfss	status,2,c
 15023  01285A  D009               	goto	i2l1130
 15024  01285C  0E00               	movlw	0
 15025  01285E  6E01               	movwf	?i2__div_to_l_,c
 15026  012860  0E00               	movlw	0
 15027  012862  6E02               	movwf	?i2__div_to_l_+1,c
 15028  012864  0E00               	movlw	0
 15029  012866  6E03               	movwf	?i2__div_to_l_+2,c
 15030  012868  0E00               	movlw	0
 15031  01286A  6E04               	movwf	?i2__div_to_l_+3,c
 15032  01286C  0012               	return	
 15033  01286E                     i2l1130:
 15034  01286E  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 15035  012870  0EFF               	movlw	255
 15036  012872  1601               	andwf	i2__div_to_l_@f1,f,c
 15037  012874  0EFF               	movlw	255
 15038  012876  1602               	andwf	i2__div_to_l_@f1+1,f,c
 15039  012878  0EFF               	movlw	255
 15040  01287A  1603               	andwf	i2__div_to_l_@f1+2,f,c
 15041  01287C  0E00               	movlw	0
 15042  01287E  1604               	andwf	i2__div_to_l_@f1+3,f,c
 15043  012880  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 15044  012882  0EFF               	movlw	255
 15045  012884  1604               	andwf	i2__div_to_l_@f2,f,c
 15046  012886  0EFF               	movlw	255
 15047  012888  1605               	andwf	i2__div_to_l_@f2+1,f,c
 15048  01288A  0EFF               	movlw	255
 15049  01288C  1606               	andwf	i2__div_to_l_@f2+2,f,c
 15050  01288E  0E00               	movlw	0
 15051  012890  1607               	andwf	i2__div_to_l_@f2+3,f,c
 15052  012892  0E00               	movlw	0
 15053  012894  6E07               	movwf	i2__div_to_l_@quot,c
 15054  012896  0E00               	movlw	0
 15055  012898  6E08               	movwf	i2__div_to_l_@quot+1,c
 15056  01289A  0E00               	movlw	0
 15057  01289C  6E09               	movwf	i2__div_to_l_@quot+2,c
 15058  01289E  0E00               	movlw	0
 15059  0128A0  6E0A               	movwf	i2__div_to_l_@quot+3,c
 15060  0128A2  0E7F               	movlw	127
 15061  0128A4  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 15062  0128A6  500B               	movf	i2__div_to_l_@cntr,w,c
 15063  0128A8  0FA0               	addlw	160
 15064  0128AA  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 15065  0128AC  0E20               	movlw	32
 15066  0128AE  6E0B               	movwf	i2__div_to_l_@cntr,c
 15067  0128B0  90D8               	bcf	status,0,c
 15068  0128B2  3607               	rlcf	i2__div_to_l_@quot,f,c
 15069  0128B4  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 15070  0128B6  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 15071  0128B8  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 15072  0128BA  5004               	movf	i2__div_to_l_@f2,w,c
 15073  0128BC  5C01               	subwf	i2__div_to_l_@f1,w,c
 15074  0128BE  5005               	movf	i2__div_to_l_@f2+1,w,c
 15075  0128C0  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 15076  0128C2  5006               	movf	i2__div_to_l_@f2+2,w,c
 15077  0128C4  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 15078  0128C6  5007               	movf	i2__div_to_l_@f2+3,w,c
 15079  0128C8  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 15080  0128CA  A0D8               	btfss	status,0,c
 15081  0128CC  D009               	goto	i2l1132
 15082  0128CE  5004               	movf	i2__div_to_l_@f2,w,c
 15083  0128D0  5E01               	subwf	i2__div_to_l_@f1,f,c
 15084  0128D2  5005               	movf	i2__div_to_l_@f2+1,w,c
 15085  0128D4  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 15086  0128D6  5006               	movf	i2__div_to_l_@f2+2,w,c
 15087  0128D8  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 15088  0128DA  5007               	movf	i2__div_to_l_@f2+3,w,c
 15089  0128DC  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 15090  0128DE  8007               	bsf	i2__div_to_l_@quot,0,c
 15091  0128E0                     i2l1132:
 15092  0128E0  90D8               	bcf	status,0,c
 15093  0128E2  3601               	rlcf	i2__div_to_l_@f1,f,c
 15094  0128E4  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 15095  0128E6  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 15096  0128E8  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 15097  0128EA  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 15098  0128EC  D7E1               	goto	i2l1131
 15099  0128EE  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 15100  0128F0  D016               	goto	i2l1134
 15101  0128F2  500C               	movf	i2__div_to_l_@exp1,w,c
 15102  0128F4  0A80               	xorlw	128
 15103  0128F6  0F9F               	addlw	159
 15104  0128F8  B0D8               	btfsc	status,0,c
 15105  0128FA  D009               	goto	i2l1135
 15106  0128FC  0E00               	movlw	0
 15107  0128FE  6E01               	movwf	?i2__div_to_l_,c
 15108  012900  0E00               	movlw	0
 15109  012902  6E02               	movwf	?i2__div_to_l_+1,c
 15110  012904  0E00               	movlw	0
 15111  012906  6E03               	movwf	?i2__div_to_l_+2,c
 15112  012908  0E00               	movlw	0
 15113  01290A  6E04               	movwf	?i2__div_to_l_+3,c
 15114  01290C  0012               	return	
 15115  01290E                     i2l1135:
 15116  01290E  90D8               	bcf	status,0,c
 15117  012910  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 15118  012912  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 15119  012914  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 15120  012916  3207               	rrcf	i2__div_to_l_@quot,f,c
 15121  012918  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 15122  01291A  D7F9               	goto	i2l1135
 15123  01291C  D015               	goto	i2u791_40
 15124  01291E                     i2l1134:
 15125  01291E  0E1F               	movlw	31
 15126  012920  640C               	cpfsgt	i2__div_to_l_@exp1,c
 15127  012922  D00F               	goto	i2l1140
 15128  012924  0E00               	movlw	0
 15129  012926  6E01               	movwf	?i2__div_to_l_,c
 15130  012928  0E00               	movlw	0
 15131  01292A  6E02               	movwf	?i2__div_to_l_+1,c
 15132  01292C  0E00               	movlw	0
 15133  01292E  6E03               	movwf	?i2__div_to_l_+2,c
 15134  012930  0E00               	movlw	0
 15135  012932  6E04               	movwf	?i2__div_to_l_+3,c
 15136  012934  0012               	return	
 15137  012936  90D8               	bcf	status,0,c
 15138  012938  3607               	rlcf	i2__div_to_l_@quot,f,c
 15139  01293A  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 15140  01293C  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 15141  01293E  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 15142  012940  060C               	decf	i2__div_to_l_@exp1,f,c
 15143  012942                     i2l1140:
 15144  012942  500C               	movf	i2__div_to_l_@exp1,w,c
 15145  012944  A4D8               	btfss	status,2,c
 15146  012946  D7F7               	goto	i2l1141
 15147  012948                     i2u791_40:
 15148  012948  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 15149  01294C  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 15150  012950  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 15151  012954  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 15152  012958  0012               	return		;funcret
 15153  01295A                     __end_ofi2__div_to_l_:
 15154                           	opt stack 0
 15155                           tosu	equ	0xFFF
 15156                           tosh	equ	0xFFE
 15157                           tosl	equ	0xFFD
 15158                           pclatu	equ	0xFFB
 15159                           pclath	equ	0xFFA
 15160                           tblptru	equ	0xFF8
 15161                           tblptrh	equ	0xFF7
 15162                           tblptrl	equ	0xFF6
 15163                           tablat	equ	0xFF5
 15164                           prodh	equ	0xFF4
 15165                           prodl	equ	0xFF3
 15166                           intcon	equ	0xFF2
 15167                           postinc0	equ	0xFEE
 15168                           fsr0h	equ	0xFEA
 15169                           fsr0l	equ	0xFE9
 15170                           wreg	equ	0xFE8
 15171                           fsr1h	equ	0xFE2
 15172                           fsr1l	equ	0xFE1
 15173                           bsr	equ	0xFE0
 15174                           indf2	equ	0xFDF
 15175                           postinc2	equ	0xFDE
 15176                           postdec2	equ	0xFDD
 15177                           fsr2h	equ	0xFDA
 15178                           fsr2l	equ	0xFD9
 15179                           status	equ	0xFD8
 15180                           
 15181 ;; *************** function i2___lltoft *****************
 15182 ;; Defined at:
 15183 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 15184 ;; Parameters:    Size  Location     Type
 15185 ;;  c               4    8[COMRAM] unsigned long 
 15186 ;; Auto vars:     Size  Location     Type
 15187 ;;  __lltoft        1   16[COMRAM] unsigned char 
 15188 ;; Return value:  Size  Location     Type
 15189 ;;                  3    8[COMRAM] float 
 15190 ;; Registers used:
 15191 ;;		wreg, status,2, status,0, cstack
 15192 ;; Tracked objects:
 15193 ;;		On entry : 0/0
 15194 ;;		On exit  : 0/0
 15195 ;;		Unchanged: 0/0
 15196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15197 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15199 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15200 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15201 ;;Total ram usage:        9 bytes
 15202 ;; Hardware stack levels used:    1
 15203 ;; Hardware stack levels required when called:    1
 15204 ;; This function calls:
 15205 ;;		i2___ftpack
 15206 ;; This function is called by:
 15207 ;;		i2_printf
 15208 ;; This function uses a non-reentrant model
 15209 ;;
 15210                           
 15211                           	psect	text69
 15212  013828                     __ptext69:
 15213                           	opt stack 0
 15214  013828                     i2___lltoft:
 15215                           	opt stack 14
 15216                           
 15217                           ;incstack = 0
 15218  013828  0E8E               	movlw	142
 15219  01382A  6E11               	movwf	i2___lltoft@exp,c
 15220  01382C  D006               	goto	i2l1334
 15221  01382E  90D8               	bcf	status,0,c
 15222  013830  320C               	rrcf	i2___lltoft@c+3,f,c
 15223  013832  320B               	rrcf	i2___lltoft@c+2,f,c
 15224  013834  320A               	rrcf	i2___lltoft@c+1,f,c
 15225  013836  3209               	rrcf	i2___lltoft@c,f,c
 15226  013838  2A11               	incf	i2___lltoft@exp,f,c
 15227  01383A                     i2l1334:
 15228  01383A  0E00               	movlw	0
 15229  01383C  1409               	andwf	i2___lltoft@c,w,c
 15230  01383E  6E0D               	movwf	??i2___lltoft& (0+255),c
 15231  013840  0E00               	movlw	0
 15232  013842  140A               	andwf	i2___lltoft@c+1,w,c
 15233  013844  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 15234  013846  0E00               	movlw	0
 15235  013848  140B               	andwf	i2___lltoft@c+2,w,c
 15236  01384A  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 15237  01384C  0EFF               	movlw	255
 15238  01384E  140C               	andwf	i2___lltoft@c+3,w,c
 15239  013850  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 15240  013852  500D               	movf	??i2___lltoft,w,c
 15241  013854  100E               	iorwf	??i2___lltoft+1,w,c
 15242  013856  100F               	iorwf	??i2___lltoft+2,w,c
 15243  013858  1010               	iorwf	??i2___lltoft+3,w,c
 15244  01385A  A4D8               	btfss	status,2,c
 15245  01385C  D7E8               	goto	i2l1335
 15246  01385E  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 15247  013862  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 15248  013866  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 15249  01386A  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 15250  01386E  0E00               	movlw	0
 15251  013870  6E05               	movwf	i2___ftpack@sign,c
 15252  013872  EC5F  F097         	call	i2___ftpack	;wreg free
 15253  013876  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 15254  01387A  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 15255  01387E  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 15256  013882  0012               	return	
 15257  013884                     __end_ofi2___lltoft:
 15258                           	opt stack 0
 15259                           tosu	equ	0xFFF
 15260                           tosh	equ	0xFFE
 15261                           tosl	equ	0xFFD
 15262                           pclatu	equ	0xFFB
 15263                           pclath	equ	0xFFA
 15264                           tblptru	equ	0xFF8
 15265                           tblptrh	equ	0xFF7
 15266                           tblptrl	equ	0xFF6
 15267                           tablat	equ	0xFF5
 15268                           prodh	equ	0xFF4
 15269                           prodl	equ	0xFF3
 15270                           intcon	equ	0xFF2
 15271                           postinc0	equ	0xFEE
 15272                           fsr0h	equ	0xFEA
 15273                           fsr0l	equ	0xFE9
 15274                           wreg	equ	0xFE8
 15275                           fsr1h	equ	0xFE2
 15276                           fsr1l	equ	0xFE1
 15277                           bsr	equ	0xFE0
 15278                           indf2	equ	0xFDF
 15279                           postinc2	equ	0xFDE
 15280                           postdec2	equ	0xFDD
 15281                           fsr2h	equ	0xFDA
 15282                           fsr2l	equ	0xFD9
 15283                           status	equ	0xFD8
 15284                           
 15285 ;; *************** function i2___llmod *****************
 15286 ;; Defined at:
 15287 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 15288 ;; Parameters:    Size  Location     Type
 15289 ;;  dividend        4    0[COMRAM] unsigned long 
 15290 ;;  divisor         4    4[COMRAM] unsigned long 
 15291 ;; Auto vars:     Size  Location     Type
 15292 ;;  __llmod         1    8[COMRAM] unsigned char 
 15293 ;; Return value:  Size  Location     Type
 15294 ;;                  4    0[COMRAM] unsigned long 
 15295 ;; Registers used:
 15296 ;;		wreg, status,2, status,0
 15297 ;; Tracked objects:
 15298 ;;		On entry : 0/0
 15299 ;;		On exit  : 0/0
 15300 ;;		Unchanged: 0/0
 15301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15302 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15303 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15305 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15306 ;;Total ram usage:        9 bytes
 15307 ;; Hardware stack levels used:    1
 15308 ;; This function calls:
 15309 ;;		Nothing
 15310 ;; This function is called by:
 15311 ;;		i2_printf
 15312 ;; This function uses a non-reentrant model
 15313 ;;
 15314                           
 15315                           	psect	text70
 15316  013700                     __ptext70:
 15317                           	opt stack 0
 15318  013700                     i2___llmod:
 15319                           	opt stack 15
 15320                           
 15321                           ;incstack = 0
 15322  013700  5005               	movf	i2___llmod@divisor,w,c
 15323  013702  1006               	iorwf	i2___llmod@divisor+1,w,c
 15324  013704  1007               	iorwf	i2___llmod@divisor+2,w,c
 15325  013706  1008               	iorwf	i2___llmod@divisor+3,w,c
 15326  013708  B4D8               	btfsc	status,2,c
 15327  01370A  D024               	goto	i2l1328
 15328  01370C  0E01               	movlw	1
 15329  01370E  6E09               	movwf	i2___llmod@counter,c
 15330  013710  D006               	goto	i2l1323
 15331  013712  90D8               	bcf	status,0,c
 15332  013714  3605               	rlcf	i2___llmod@divisor,f,c
 15333  013716  3606               	rlcf	i2___llmod@divisor+1,f,c
 15334  013718  3607               	rlcf	i2___llmod@divisor+2,f,c
 15335  01371A  3608               	rlcf	i2___llmod@divisor+3,f,c
 15336  01371C  2A09               	incf	i2___llmod@counter,f,c
 15337  01371E                     i2l1323:
 15338  01371E  AE08               	btfss	i2___llmod@divisor+3,7,c
 15339  013720  D7F8               	goto	i2l1324
 15340  013722                     i2u818_40:
 15341  013722  5005               	movf	i2___llmod@divisor,w,c
 15342  013724  5C01               	subwf	i2___llmod@dividend,w,c
 15343  013726  5006               	movf	i2___llmod@divisor+1,w,c
 15344  013728  5802               	subwfb	i2___llmod@dividend+1,w,c
 15345  01372A  5007               	movf	i2___llmod@divisor+2,w,c
 15346  01372C  5803               	subwfb	i2___llmod@dividend+2,w,c
 15347  01372E  5008               	movf	i2___llmod@divisor+3,w,c
 15348  013730  5804               	subwfb	i2___llmod@dividend+3,w,c
 15349  013732  A0D8               	btfss	status,0,c
 15350  013734  D008               	goto	i2l1327
 15351  013736  5005               	movf	i2___llmod@divisor,w,c
 15352  013738  5E01               	subwf	i2___llmod@dividend,f,c
 15353  01373A  5006               	movf	i2___llmod@divisor+1,w,c
 15354  01373C  5A02               	subwfb	i2___llmod@dividend+1,f,c
 15355  01373E  5007               	movf	i2___llmod@divisor+2,w,c
 15356  013740  5A03               	subwfb	i2___llmod@dividend+2,f,c
 15357  013742  5008               	movf	i2___llmod@divisor+3,w,c
 15358  013744  5A04               	subwfb	i2___llmod@dividend+3,f,c
 15359  013746                     i2l1327:
 15360  013746  90D8               	bcf	status,0,c
 15361  013748  3208               	rrcf	i2___llmod@divisor+3,f,c
 15362  01374A  3207               	rrcf	i2___llmod@divisor+2,f,c
 15363  01374C  3206               	rrcf	i2___llmod@divisor+1,f,c
 15364  01374E  3205               	rrcf	i2___llmod@divisor,f,c
 15365  013750  2E09               	decfsz	i2___llmod@counter,f,c
 15366  013752  D7E7               	goto	i2u818_40
 15367  013754                     i2l1328:
 15368  013754  C001  F001         	movff	i2___llmod@dividend,?i2___llmod
 15369  013758  C002  F002         	movff	i2___llmod@dividend+1,?i2___llmod+1
 15370  01375C  C003  F003         	movff	i2___llmod@dividend+2,?i2___llmod+2
 15371  013760  C004  F004         	movff	i2___llmod@dividend+3,?i2___llmod+3
 15372  013764  0012               	return		;funcret
 15373  013766                     __end_ofi2___llmod:
 15374                           	opt stack 0
 15375                           tosu	equ	0xFFF
 15376                           tosh	equ	0xFFE
 15377                           tosl	equ	0xFFD
 15378                           pclatu	equ	0xFFB
 15379                           pclath	equ	0xFFA
 15380                           tblptru	equ	0xFF8
 15381                           tblptrh	equ	0xFF7
 15382                           tblptrl	equ	0xFF6
 15383                           tablat	equ	0xFF5
 15384                           prodh	equ	0xFF4
 15385                           prodl	equ	0xFF3
 15386                           intcon	equ	0xFF2
 15387                           postinc0	equ	0xFEE
 15388                           fsr0h	equ	0xFEA
 15389                           fsr0l	equ	0xFE9
 15390                           wreg	equ	0xFE8
 15391                           fsr1h	equ	0xFE2
 15392                           fsr1l	equ	0xFE1
 15393                           bsr	equ	0xFE0
 15394                           indf2	equ	0xFDF
 15395                           postinc2	equ	0xFDE
 15396                           postdec2	equ	0xFDD
 15397                           fsr2h	equ	0xFDA
 15398                           fsr2l	equ	0xFD9
 15399                           status	equ	0xFD8
 15400                           
 15401 ;; *************** function i2___lldiv *****************
 15402 ;; Defined at:
 15403 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 15404 ;; Parameters:    Size  Location     Type
 15405 ;;  dividend        4    0[COMRAM] unsigned long 
 15406 ;;  divisor         4    4[COMRAM] unsigned long 
 15407 ;; Auto vars:     Size  Location     Type
 15408 ;;  __lldiv         4    8[COMRAM] unsigned long 
 15409 ;;  __lldiv         1   12[COMRAM] unsigned char 
 15410 ;; Return value:  Size  Location     Type
 15411 ;;                  4    0[COMRAM] unsigned long 
 15412 ;; Registers used:
 15413 ;;		wreg, status,2, status,0
 15414 ;; Tracked objects:
 15415 ;;		On entry : 0/0
 15416 ;;		On exit  : 0/0
 15417 ;;		Unchanged: 0/0
 15418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15419 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15420 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15422 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15423 ;;Total ram usage:       13 bytes
 15424 ;; Hardware stack levels used:    1
 15425 ;; This function calls:
 15426 ;;		Nothing
 15427 ;; This function is called by:
 15428 ;;		i2_printf
 15429 ;; This function uses a non-reentrant model
 15430 ;;
 15431                           
 15432                           	psect	text71
 15433  0133F6                     __ptext71:
 15434                           	opt stack 0
 15435  0133F6                     i2___lldiv:
 15436                           	opt stack 15
 15437                           
 15438                           ;incstack = 0
 15439  0133F6  0E00               	movlw	0
 15440  0133F8  6E09               	movwf	i2___lldiv@quotient,c
 15441  0133FA  0E00               	movlw	0
 15442  0133FC  6E0A               	movwf	i2___lldiv@quotient+1,c
 15443  0133FE  0E00               	movlw	0
 15444  013400  6E0B               	movwf	i2___lldiv@quotient+2,c
 15445  013402  0E00               	movlw	0
 15446  013404  6E0C               	movwf	i2___lldiv@quotient+3,c
 15447  013406  5005               	movf	i2___lldiv@divisor,w,c
 15448  013408  1006               	iorwf	i2___lldiv@divisor+1,w,c
 15449  01340A  1007               	iorwf	i2___lldiv@divisor+2,w,c
 15450  01340C  1008               	iorwf	i2___lldiv@divisor+3,w,c
 15451  01340E  B4D8               	btfsc	status,2,c
 15452  013410  D02A               	goto	i2l1318
 15453  013412  0E01               	movlw	1
 15454  013414  6E0D               	movwf	i2___lldiv@counter,c
 15455  013416  D006               	goto	i2l1313
 15456  013418  90D8               	bcf	status,0,c
 15457  01341A  3605               	rlcf	i2___lldiv@divisor,f,c
 15458  01341C  3606               	rlcf	i2___lldiv@divisor+1,f,c
 15459  01341E  3607               	rlcf	i2___lldiv@divisor+2,f,c
 15460  013420  3608               	rlcf	i2___lldiv@divisor+3,f,c
 15461  013422  2A0D               	incf	i2___lldiv@counter,f,c
 15462  013424                     i2l1313:
 15463  013424  AE08               	btfss	i2___lldiv@divisor+3,7,c
 15464  013426  D7F8               	goto	i2l1314
 15465  013428                     i2u815_40:
 15466  013428  90D8               	bcf	status,0,c
 15467  01342A  3609               	rlcf	i2___lldiv@quotient,f,c
 15468  01342C  360A               	rlcf	i2___lldiv@quotient+1,f,c
 15469  01342E  360B               	rlcf	i2___lldiv@quotient+2,f,c
 15470  013430  360C               	rlcf	i2___lldiv@quotient+3,f,c
 15471  013432  5005               	movf	i2___lldiv@divisor,w,c
 15472  013434  5C01               	subwf	i2___lldiv@dividend,w,c
 15473  013436  5006               	movf	i2___lldiv@divisor+1,w,c
 15474  013438  5802               	subwfb	i2___lldiv@dividend+1,w,c
 15475  01343A  5007               	movf	i2___lldiv@divisor+2,w,c
 15476  01343C  5803               	subwfb	i2___lldiv@dividend+2,w,c
 15477  01343E  5008               	movf	i2___lldiv@divisor+3,w,c
 15478  013440  5804               	subwfb	i2___lldiv@dividend+3,w,c
 15479  013442  A0D8               	btfss	status,0,c
 15480  013444  D009               	goto	i2l1317
 15481  013446  5005               	movf	i2___lldiv@divisor,w,c
 15482  013448  5E01               	subwf	i2___lldiv@dividend,f,c
 15483  01344A  5006               	movf	i2___lldiv@divisor+1,w,c
 15484  01344C  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 15485  01344E  5007               	movf	i2___lldiv@divisor+2,w,c
 15486  013450  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 15487  013452  5008               	movf	i2___lldiv@divisor+3,w,c
 15488  013454  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 15489  013456  8009               	bsf	i2___lldiv@quotient,0,c
 15490  013458                     i2l1317:
 15491  013458  90D8               	bcf	status,0,c
 15492  01345A  3208               	rrcf	i2___lldiv@divisor+3,f,c
 15493  01345C  3207               	rrcf	i2___lldiv@divisor+2,f,c
 15494  01345E  3206               	rrcf	i2___lldiv@divisor+1,f,c
 15495  013460  3205               	rrcf	i2___lldiv@divisor,f,c
 15496  013462  2E0D               	decfsz	i2___lldiv@counter,f,c
 15497  013464  D7E1               	goto	i2u815_40
 15498  013466                     i2l1318:
 15499  013466  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 15500  01346A  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 15501  01346E  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 15502  013472  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 15503  013476  0012               	return		;funcret
 15504  013478                     __end_ofi2___lldiv:
 15505                           	opt stack 0
 15506                           tosu	equ	0xFFF
 15507                           tosh	equ	0xFFE
 15508                           tosl	equ	0xFFD
 15509                           pclatu	equ	0xFFB
 15510                           pclath	equ	0xFFA
 15511                           tblptru	equ	0xFF8
 15512                           tblptrh	equ	0xFF7
 15513                           tblptrl	equ	0xFF6
 15514                           tablat	equ	0xFF5
 15515                           prodh	equ	0xFF4
 15516                           prodl	equ	0xFF3
 15517                           intcon	equ	0xFF2
 15518                           postinc0	equ	0xFEE
 15519                           fsr0h	equ	0xFEA
 15520                           fsr0l	equ	0xFE9
 15521                           wreg	equ	0xFE8
 15522                           fsr1h	equ	0xFE2
 15523                           fsr1l	equ	0xFE1
 15524                           bsr	equ	0xFE0
 15525                           indf2	equ	0xFDF
 15526                           postinc2	equ	0xFDE
 15527                           postdec2	equ	0xFDD
 15528                           fsr2h	equ	0xFDA
 15529                           fsr2l	equ	0xFD9
 15530                           status	equ	0xFD8
 15531                           
 15532 ;; *************** function i2___fttol *****************
 15533 ;; Defined at:
 15534 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 15535 ;; Parameters:    Size  Location     Type
 15536 ;;  f1              3   35[COMRAM] float 
 15537 ;; Auto vars:     Size  Location     Type
 15538 ;;  __fttol         4   45[COMRAM] unsigned long 
 15539 ;;  __fttol         1   49[COMRAM] unsigned char 
 15540 ;;  __fttol         1   44[COMRAM] unsigned char 
 15541 ;; Return value:  Size  Location     Type
 15542 ;;                  4   35[COMRAM] long 
 15543 ;; Registers used:
 15544 ;;		wreg, status,2, status,0
 15545 ;; Tracked objects:
 15546 ;;		On entry : 0/0
 15547 ;;		On exit  : 0/0
 15548 ;;		Unchanged: 0/0
 15549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15550 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15551 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15552 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15553 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15554 ;;Total ram usage:       15 bytes
 15555 ;; Hardware stack levels used:    1
 15556 ;; This function calls:
 15557 ;;		Nothing
 15558 ;; This function is called by:
 15559 ;;		i2_printf
 15560 ;; This function uses a non-reentrant model
 15561 ;;
 15562                           
 15563                           	psect	text72
 15564  012B66                     __ptext72:
 15565                           	opt stack 0
 15566  012B66                     i2___fttol:
 15567                           	opt stack 15
 15568                           
 15569                           ;incstack = 0
 15570  012B66  C026  F028         	movff	i2___fttol@f1+2,??i2___fttol
 15571  012B6A  6A29               	clrf	(??i2___fttol+1)& (0+255),c
 15572  012B6C  6A2A               	clrf	(??i2___fttol+2)& (0+255),c
 15573  012B6E  3425               	rlcf	i2___fttol@f1+1,w,c
 15574  012B70  3628               	rlcf	??i2___fttol& (0+255),f,c
 15575  012B72  E301               	bnc	u806_41
 15576  012B74  8029               	bsf	(??i2___fttol+1)& (0+255),0,c
 15577  012B76                     u806_41:
 15578  012B76  5028               	movf	??i2___fttol,w,c
 15579  012B78  6E32               	movwf	i2___fttol@exp1,c
 15580  012B7A  5032               	movf	i2___fttol@exp1,w,c
 15581  012B7C  A4D8               	btfss	status,2,c
 15582  012B7E  D009               	goto	i2l1277
 15583  012B80  0E00               	movlw	0
 15584  012B82  6E24               	movwf	?i2___fttol,c
 15585  012B84  0E00               	movlw	0
 15586  012B86  6E25               	movwf	?i2___fttol+1,c
 15587  012B88  0E00               	movlw	0
 15588  012B8A  6E26               	movwf	?i2___fttol+2,c
 15589  012B8C  0E00               	movlw	0
 15590  012B8E  6E27               	movwf	?i2___fttol+3,c
 15591  012B90  0012               	return	
 15592  012B92                     i2l1277:
 15593  012B92  0E17               	movlw	23
 15594  012B94  6E28               	movwf	??i2___fttol& (0+255),c
 15595  012B96  C024  F029         	movff	i2___fttol@f1,??i2___fttol+1
 15596  012B9A  C025  F02A         	movff	i2___fttol@f1+1,??i2___fttol+2
 15597  012B9E  C026  F02B         	movff	i2___fttol@f1+2,??i2___fttol+3
 15598  012BA2  2828               	incf	??i2___fttol,w,c
 15599  012BA4  6E2C               	movwf	(??i2___fttol+4)& (0+255),c
 15600  012BA6  D004               	goto	i2u808_40
 15601  012BA8                     i2u808_45:
 15602  012BA8  90D8               	bcf	status,0,c
 15603  012BAA  322B               	rrcf	??i2___fttol+3,f,c
 15604  012BAC  322A               	rrcf	??i2___fttol+2,f,c
 15605  012BAE  3229               	rrcf	??i2___fttol+1,f,c
 15606  012BB0                     i2u808_40:
 15607  012BB0  2E2C               	decfsz	(??i2___fttol+4)& (0+255),f,c
 15608  012BB2  D7FA               	goto	i2u808_45
 15609  012BB4  5029               	movf	??i2___fttol+1,w,c
 15610  012BB6  6E2D               	movwf	i2___fttol@sign1,c
 15611  012BB8  8E25               	bsf	i2___fttol@f1+1,7,c
 15612  012BBA  0EFF               	movlw	255
 15613  012BBC  1624               	andwf	i2___fttol@f1,f,c
 15614  012BBE  0EFF               	movlw	255
 15615  012BC0  1625               	andwf	i2___fttol@f1+1,f,c
 15616  012BC2  0E00               	movlw	0
 15617  012BC4  1626               	andwf	i2___fttol@f1+2,f,c
 15618  012BC6  5024               	movf	i2___fttol@f1,w,c
 15619  012BC8  6E2E               	movwf	i2___fttol@lval,c
 15620  012BCA  5025               	movf	i2___fttol@f1+1,w,c
 15621  012BCC  6E2F               	movwf	i2___fttol@lval+1,c
 15622  012BCE  5026               	movf	i2___fttol@f1+2,w,c
 15623  012BD0  6E30               	movwf	i2___fttol@lval+2,c
 15624  012BD2  6A31               	clrf	i2___fttol@lval+3,c
 15625  012BD4  0E8E               	movlw	142
 15626  012BD6  5E32               	subwf	i2___fttol@exp1,f,c
 15627  012BD8  AE32               	btfss	i2___fttol@exp1,7,c
 15628  012BDA  D016               	goto	i2l1279
 15629  012BDC  5032               	movf	i2___fttol@exp1,w,c
 15630  012BDE  0A80               	xorlw	128
 15631  012BE0  0F8F               	addlw	143
 15632  012BE2  B0D8               	btfsc	status,0,c
 15633  012BE4  D009               	goto	i2l1280
 15634  012BE6  0E00               	movlw	0
 15635  012BE8  6E24               	movwf	?i2___fttol,c
 15636  012BEA  0E00               	movlw	0
 15637  012BEC  6E25               	movwf	?i2___fttol+1,c
 15638  012BEE  0E00               	movlw	0
 15639  012BF0  6E26               	movwf	?i2___fttol+2,c
 15640  012BF2  0E00               	movlw	0
 15641  012BF4  6E27               	movwf	?i2___fttol+3,c
 15642  012BF6  0012               	return	
 15643  012BF8                     i2l1280:
 15644  012BF8  90D8               	bcf	status,0,c
 15645  012BFA  3231               	rrcf	i2___fttol@lval+3,f,c
 15646  012BFC  3230               	rrcf	i2___fttol@lval+2,f,c
 15647  012BFE  322F               	rrcf	i2___fttol@lval+1,f,c
 15648  012C00  322E               	rrcf	i2___fttol@lval,f,c
 15649  012C02  3E32               	incfsz	i2___fttol@exp1,f,c
 15650  012C04  D7F9               	goto	i2l1280
 15651  012C06  D015               	goto	i2u812_40
 15652  012C08                     i2l1279:
 15653  012C08  0E17               	movlw	23
 15654  012C0A  6432               	cpfsgt	i2___fttol@exp1,c
 15655  012C0C  D00F               	goto	i2l1285
 15656  012C0E  0E00               	movlw	0
 15657  012C10  6E24               	movwf	?i2___fttol,c
 15658  012C12  0E00               	movlw	0
 15659  012C14  6E25               	movwf	?i2___fttol+1,c
 15660  012C16  0E00               	movlw	0
 15661  012C18  6E26               	movwf	?i2___fttol+2,c
 15662  012C1A  0E00               	movlw	0
 15663  012C1C  6E27               	movwf	?i2___fttol+3,c
 15664  012C1E  0012               	return	
 15665  012C20  90D8               	bcf	status,0,c
 15666  012C22  362E               	rlcf	i2___fttol@lval,f,c
 15667  012C24  362F               	rlcf	i2___fttol@lval+1,f,c
 15668  012C26  3630               	rlcf	i2___fttol@lval+2,f,c
 15669  012C28  3631               	rlcf	i2___fttol@lval+3,f,c
 15670  012C2A  0632               	decf	i2___fttol@exp1,f,c
 15671  012C2C                     i2l1285:
 15672  012C2C  5032               	movf	i2___fttol@exp1,w,c
 15673  012C2E  A4D8               	btfss	status,2,c
 15674  012C30  D7F7               	goto	i2l1286
 15675  012C32                     i2u812_40:
 15676  012C32  502D               	movf	i2___fttol@sign1,w,c
 15677  012C34  B4D8               	btfsc	status,2,c
 15678  012C36  D008               	goto	i2l1288
 15679  012C38  1E31               	comf	i2___fttol@lval+3,f,c
 15680  012C3A  1E30               	comf	i2___fttol@lval+2,f,c
 15681  012C3C  1E2F               	comf	i2___fttol@lval+1,f,c
 15682  012C3E  6C2E               	negf	i2___fttol@lval,c
 15683  012C40  0E00               	movlw	0
 15684  012C42  222F               	addwfc	i2___fttol@lval+1,f,c
 15685  012C44  2230               	addwfc	i2___fttol@lval+2,f,c
 15686  012C46  2231               	addwfc	i2___fttol@lval+3,f,c
 15687  012C48                     i2l1288:
 15688  012C48  C02E  F024         	movff	i2___fttol@lval,?i2___fttol
 15689  012C4C  C02F  F025         	movff	i2___fttol@lval+1,?i2___fttol+1
 15690  012C50  C030  F026         	movff	i2___fttol@lval+2,?i2___fttol+2
 15691  012C54  C031  F027         	movff	i2___fttol@lval+3,?i2___fttol+3
 15692  012C58  0012               	return	
 15693  012C5A                     __end_ofi2___fttol:
 15694                           	opt stack 0
 15695                           tosu	equ	0xFFF
 15696                           tosh	equ	0xFFE
 15697                           tosl	equ	0xFFD
 15698                           pclatu	equ	0xFFB
 15699                           pclath	equ	0xFFA
 15700                           tblptru	equ	0xFF8
 15701                           tblptrh	equ	0xFF7
 15702                           tblptrl	equ	0xFF6
 15703                           tablat	equ	0xFF5
 15704                           prodh	equ	0xFF4
 15705                           prodl	equ	0xFF3
 15706                           intcon	equ	0xFF2
 15707                           postinc0	equ	0xFEE
 15708                           fsr0h	equ	0xFEA
 15709                           fsr0l	equ	0xFE9
 15710                           wreg	equ	0xFE8
 15711                           fsr1h	equ	0xFE2
 15712                           fsr1l	equ	0xFE1
 15713                           bsr	equ	0xFE0
 15714                           indf2	equ	0xFDF
 15715                           postinc2	equ	0xFDE
 15716                           postdec2	equ	0xFDD
 15717                           fsr2h	equ	0xFDA
 15718                           fsr2l	equ	0xFD9
 15719                           status	equ	0xFD8
 15720                           
 15721 ;; *************** function i2___ftsub *****************
 15722 ;; Defined at:
 15723 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 15724 ;; Parameters:    Size  Location     Type
 15725 ;;  f1              3   57[COMRAM] float 
 15726 ;;  f2              3   60[COMRAM] float 
 15727 ;; Auto vars:     Size  Location     Type
 15728 ;;		None
 15729 ;; Return value:  Size  Location     Type
 15730 ;;                  3   57[COMRAM] float 
 15731 ;; Registers used:
 15732 ;;		wreg, status,2, status,0, cstack
 15733 ;; Tracked objects:
 15734 ;;		On entry : 0/0
 15735 ;;		On exit  : 0/0
 15736 ;;		Unchanged: 0/0
 15737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15738 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15741 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15742 ;;Total ram usage:        6 bytes
 15743 ;; Hardware stack levels used:    1
 15744 ;; Hardware stack levels required when called:    2
 15745 ;; This function calls:
 15746 ;;		i2___ftadd
 15747 ;; This function is called by:
 15748 ;;		i2_printf
 15749 ;; This function uses a non-reentrant model
 15750 ;;
 15751                           
 15752                           	psect	text73
 15753  013A82                     __ptext73:
 15754                           	opt stack 0
 15755  013A82                     i2___ftsub:
 15756                           	opt stack 13
 15757                           
 15758                           ;incstack = 0
 15759  013A82  503D               	movf	i2___ftsub@f2,w,c
 15760  013A84  103E               	iorwf	i2___ftsub@f2+1,w,c
 15761  013A86  103F               	iorwf	i2___ftsub@f2+2,w,c
 15762  013A88  B4D8               	btfsc	status,2,c
 15763  013A8A  D006               	goto	i2l1273
 15764  013A8C  0E00               	movlw	0
 15765  013A8E  1A3D               	xorwf	i2___ftsub@f2,f,c
 15766  013A90  0E00               	movlw	0
 15767  013A92  1A3E               	xorwf	i2___ftsub@f2+1,f,c
 15768  013A94  0E80               	movlw	128
 15769  013A96  1A3F               	xorwf	i2___ftsub@f2+2,f,c
 15770  013A98                     i2l1273:
 15771  013A98  C03A  F02E         	movff	i2___ftsub@f1,i2___ftadd@f1
 15772  013A9C  C03B  F02F         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 15773  013AA0  C03C  F030         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 15774  013AA4  C03D  F031         	movff	i2___ftsub@f2,i2___ftadd@f2
 15775  013AA8  C03E  F032         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 15776  013AAC  C03F  F033         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 15777  013AB0  ECDB  F090         	call	i2___ftadd	;wreg free
 15778  013AB4  C02E  F03A         	movff	?i2___ftadd,?i2___ftsub
 15779  013AB8  C02F  F03B         	movff	?i2___ftadd+1,?i2___ftsub+1
 15780  013ABC  C030  F03C         	movff	?i2___ftadd+2,?i2___ftsub+2
 15781  013AC0  0012               	return	
 15782  013AC2                     __end_ofi2___ftsub:
 15783                           	opt stack 0
 15784                           tosu	equ	0xFFF
 15785                           tosh	equ	0xFFE
 15786                           tosl	equ	0xFFD
 15787                           pclatu	equ	0xFFB
 15788                           pclath	equ	0xFFA
 15789                           tblptru	equ	0xFF8
 15790                           tblptrh	equ	0xFF7
 15791                           tblptrl	equ	0xFF6
 15792                           tablat	equ	0xFF5
 15793                           prodh	equ	0xFF4
 15794                           prodl	equ	0xFF3
 15795                           intcon	equ	0xFF2
 15796                           postinc0	equ	0xFEE
 15797                           fsr0h	equ	0xFEA
 15798                           fsr0l	equ	0xFE9
 15799                           wreg	equ	0xFE8
 15800                           fsr1h	equ	0xFE2
 15801                           fsr1l	equ	0xFE1
 15802                           bsr	equ	0xFE0
 15803                           indf2	equ	0xFDF
 15804                           postinc2	equ	0xFDE
 15805                           postdec2	equ	0xFDD
 15806                           fsr2h	equ	0xFDA
 15807                           fsr2l	equ	0xFD9
 15808                           status	equ	0xFD8
 15809                           
 15810 ;; *************** function i2___ftadd *****************
 15811 ;; Defined at:
 15812 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 15813 ;; Parameters:    Size  Location     Type
 15814 ;;  f1              3   45[COMRAM] float 
 15815 ;;  f2              3   48[COMRAM] float 
 15816 ;; Auto vars:     Size  Location     Type
 15817 ;;  __ftadd         1   56[COMRAM] unsigned char 
 15818 ;;  __ftadd         1   55[COMRAM] unsigned char 
 15819 ;;  __ftadd         1   54[COMRAM] unsigned char 
 15820 ;; Return value:  Size  Location     Type
 15821 ;;                  3   45[COMRAM] float 
 15822 ;; Registers used:
 15823 ;;		wreg, status,2, status,0, cstack
 15824 ;; Tracked objects:
 15825 ;;		On entry : 0/0
 15826 ;;		On exit  : 0/0
 15827 ;;		Unchanged: 0/0
 15828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15829 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15830 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15831 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15832 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15833 ;;Total ram usage:       12 bytes
 15834 ;; Hardware stack levels used:    1
 15835 ;; Hardware stack levels required when called:    1
 15836 ;; This function calls:
 15837 ;;		i2___ftpack
 15838 ;; This function is called by:
 15839 ;;		i2_printf
 15840 ;;		i2___ftsub
 15841 ;; This function uses a non-reentrant model
 15842 ;;
 15843                           
 15844                           	psect	text74
 15845  0121B6                     __ptext74:
 15846                           	opt stack 0
 15847  0121B6                     i2___ftadd:
 15848                           	opt stack 13
 15849                           
 15850                           ;incstack = 0
 15851  0121B6  C030  F034         	movff	i2___ftadd@f1+2,??i2___ftadd
 15852  0121BA  6A35               	clrf	(??i2___ftadd+1)& (0+255),c
 15853  0121BC  6A36               	clrf	(??i2___ftadd+2)& (0+255),c
 15854  0121BE  342F               	rlcf	i2___ftadd@f1+1,w,c
 15855  0121C0  3634               	rlcf	??i2___ftadd& (0+255),f,c
 15856  0121C2  E301               	bnc	u749_41
 15857  0121C4  8035               	bsf	(??i2___ftadd+1)& (0+255),0,c
 15858  0121C6                     u749_41:
 15859  0121C6  5034               	movf	??i2___ftadd,w,c
 15860  0121C8  6E39               	movwf	i2___ftadd@exp1,c
 15861  0121CA  C033  F034         	movff	i2___ftadd@f2+2,??i2___ftadd
 15862  0121CE  6A35               	clrf	(??i2___ftadd+1)& (0+255),c
 15863  0121D0  6A36               	clrf	(??i2___ftadd+2)& (0+255),c
 15864  0121D2  3432               	rlcf	i2___ftadd@f2+1,w,c
 15865  0121D4  3634               	rlcf	??i2___ftadd& (0+255),f,c
 15866  0121D6  E301               	bnc	u750_41
 15867  0121D8  8035               	bsf	(??i2___ftadd+1)& (0+255),0,c
 15868  0121DA                     u750_41:
 15869  0121DA  5034               	movf	??i2___ftadd,w,c
 15870  0121DC  6E38               	movwf	i2___ftadd@exp2,c
 15871  0121DE  5039               	movf	i2___ftadd@exp1,w,c
 15872  0121E0  B4D8               	btfsc	status,2,c
 15873  0121E2  D00B               	goto	i2u753_40
 15874  0121E4  5038               	movf	i2___ftadd@exp2,w,c
 15875  0121E6  5C39               	subwf	i2___ftadd@exp1,w,c
 15876  0121E8  B0D8               	btfsc	status,0,c
 15877  0121EA  D00E               	goto	i2l1191
 15878  0121EC  5039               	movf	i2___ftadd@exp1,w,c
 15879  0121EE  0800               	sublw	0
 15880  0121F0  2438               	addwf	i2___ftadd@exp2,w,c
 15881  0121F2  6E34               	movwf	??i2___ftadd& (0+255),c
 15882  0121F4  0E18               	movlw	24
 15883  0121F6  6434               	cpfsgt	??i2___ftadd,c
 15884  0121F8  D007               	goto	i2l1191
 15885  0121FA                     i2u753_40:
 15886  0121FA  C031  F02E         	movff	i2___ftadd@f2,?i2___ftadd
 15887  0121FE  C032  F02F         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 15888  012202  C033  F030         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 15889  012206  0012               	return	
 15890  012208                     i2l1191:
 15891  012208  5038               	movf	i2___ftadd@exp2,w,c
 15892  01220A  B4D8               	btfsc	status,2,c
 15893  01220C  D00B               	goto	i2u756_40
 15894  01220E  5039               	movf	i2___ftadd@exp1,w,c
 15895  012210  5C38               	subwf	i2___ftadd@exp2,w,c
 15896  012212  B0D8               	btfsc	status,0,c
 15897  012214  D00E               	goto	i2l1195
 15898  012216  5038               	movf	i2___ftadd@exp2,w,c
 15899  012218  0800               	sublw	0
 15900  01221A  2439               	addwf	i2___ftadd@exp1,w,c
 15901  01221C  6E34               	movwf	??i2___ftadd& (0+255),c
 15902  01221E  0E18               	movlw	24
 15903  012220  6434               	cpfsgt	??i2___ftadd,c
 15904  012222  D007               	goto	i2l1195
 15905  012224                     i2u756_40:
 15906  012224  C02E  F02E         	movff	i2___ftadd@f1,?i2___ftadd
 15907  012228  C02F  F02F         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 15908  01222C  C030  F030         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 15909  012230  0012               	return	
 15910  012232                     i2l1195:
 15911  012232  0E06               	movlw	6
 15912  012234  6E37               	movwf	i2___ftadd@sign,c
 15913  012236  BE30               	btfsc	i2___ftadd@f1+2,7,c
 15914  012238  8E37               	bsf	i2___ftadd@sign,7,c
 15915  01223A  BE33               	btfsc	i2___ftadd@f2+2,7,c
 15916  01223C  8C37               	bsf	i2___ftadd@sign,6,c
 15917  01223E  8E2F               	bsf	i2___ftadd@f1+1,7,c
 15918  012240  0EFF               	movlw	255
 15919  012242  162E               	andwf	i2___ftadd@f1,f,c
 15920  012244  0EFF               	movlw	255
 15921  012246  162F               	andwf	i2___ftadd@f1+1,f,c
 15922  012248  0E00               	movlw	0
 15923  01224A  1630               	andwf	i2___ftadd@f1+2,f,c
 15924  01224C  8E32               	bsf	i2___ftadd@f2+1,7,c
 15925  01224E  0EFF               	movlw	255
 15926  012250  1631               	andwf	i2___ftadd@f2,f,c
 15927  012252  0EFF               	movlw	255
 15928  012254  1632               	andwf	i2___ftadd@f2+1,f,c
 15929  012256  0E00               	movlw	0
 15930  012258  1633               	andwf	i2___ftadd@f2+2,f,c
 15931  01225A  5038               	movf	i2___ftadd@exp2,w,c
 15932  01225C  5C39               	subwf	i2___ftadd@exp1,w,c
 15933  01225E  B0D8               	btfsc	status,0,c
 15934  012260  D01B               	goto	i2l1200
 15935  012262                     i2u759_40:
 15936  012262  90D8               	bcf	status,0,c
 15937  012264  3631               	rlcf	i2___ftadd@f2,f,c
 15938  012266  3632               	rlcf	i2___ftadd@f2+1,f,c
 15939  012268  3633               	rlcf	i2___ftadd@f2+2,f,c
 15940  01226A  0638               	decf	i2___ftadd@exp2,f,c
 15941  01226C  5039               	movf	i2___ftadd@exp1,w,c
 15942  01226E  1838               	xorwf	i2___ftadd@exp2,w,c
 15943  012270  B4D8               	btfsc	status,2,c
 15944  012272  D00D               	goto	i2l1205
 15945  012274  0637               	decf	i2___ftadd@sign,f,c
 15946  012276  C037  F034         	movff	i2___ftadd@sign,??i2___ftadd
 15947  01227A  0E07               	movlw	7
 15948  01227C  1634               	andwf	??i2___ftadd,f,c
 15949  01227E  B4D8               	btfsc	status,2,c
 15950  012280  D006               	goto	i2l1205
 15951  012282  D7EF               	goto	i2u759_40
 15952  012284  90D8               	bcf	status,0,c
 15953  012286  3230               	rrcf	i2___ftadd@f1+2,f,c
 15954  012288  322F               	rrcf	i2___ftadd@f1+1,f,c
 15955  01228A  322E               	rrcf	i2___ftadd@f1,f,c
 15956  01228C  2A39               	incf	i2___ftadd@exp1,f,c
 15957  01228E                     i2l1205:
 15958  01228E  5038               	movf	i2___ftadd@exp2,w,c
 15959  012290  1839               	xorwf	i2___ftadd@exp1,w,c
 15960  012292  B4D8               	btfsc	status,2,c
 15961  012294  D01F               	goto	i2u766_40
 15962  012296  D7F6               	goto	i2l1206
 15963  012298                     i2l1200:
 15964  012298  5039               	movf	i2___ftadd@exp1,w,c
 15965  01229A  5C38               	subwf	i2___ftadd@exp2,w,c
 15966  01229C  B0D8               	btfsc	status,0,c
 15967  01229E  D01A               	goto	i2u766_40
 15968  0122A0                     i2u763_40:
 15969  0122A0  90D8               	bcf	status,0,c
 15970  0122A2  362E               	rlcf	i2___ftadd@f1,f,c
 15971  0122A4  362F               	rlcf	i2___ftadd@f1+1,f,c
 15972  0122A6  3630               	rlcf	i2___ftadd@f1+2,f,c
 15973  0122A8  0639               	decf	i2___ftadd@exp1,f,c
 15974  0122AA  5039               	movf	i2___ftadd@exp1,w,c
 15975  0122AC  1838               	xorwf	i2___ftadd@exp2,w,c
 15976  0122AE  B4D8               	btfsc	status,2,c
 15977  0122B0  D00D               	goto	i2l1214
 15978  0122B2  0637               	decf	i2___ftadd@sign,f,c
 15979  0122B4  C037  F034         	movff	i2___ftadd@sign,??i2___ftadd
 15980  0122B8  0E07               	movlw	7
 15981  0122BA  1634               	andwf	??i2___ftadd,f,c
 15982  0122BC  B4D8               	btfsc	status,2,c
 15983  0122BE  D006               	goto	i2l1214
 15984  0122C0  D7EF               	goto	i2u763_40
 15985  0122C2  90D8               	bcf	status,0,c
 15986  0122C4  3233               	rrcf	i2___ftadd@f2+2,f,c
 15987  0122C6  3232               	rrcf	i2___ftadd@f2+1,f,c
 15988  0122C8  3231               	rrcf	i2___ftadd@f2,f,c
 15989  0122CA  2A38               	incf	i2___ftadd@exp2,f,c
 15990  0122CC                     i2l1214:
 15991  0122CC  5038               	movf	i2___ftadd@exp2,w,c
 15992  0122CE  1839               	xorwf	i2___ftadd@exp1,w,c
 15993  0122D0  A4D8               	btfss	status,2,c
 15994  0122D2  D7F7               	goto	i2l1215
 15995  0122D4                     i2u766_40:
 15996  0122D4  AE37               	btfss	i2___ftadd@sign,7,c
 15997  0122D6  D00C               	goto	i2l1217
 15998  0122D8  0EFF               	movlw	255
 15999  0122DA  1A2E               	xorwf	i2___ftadd@f1,f,c
 16000  0122DC  0EFF               	movlw	255
 16001  0122DE  1A2F               	xorwf	i2___ftadd@f1+1,f,c
 16002  0122E0  0EFF               	movlw	255
 16003  0122E2  1A30               	xorwf	i2___ftadd@f1+2,f,c
 16004  0122E4  0E01               	movlw	1
 16005  0122E6  262E               	addwf	i2___ftadd@f1,f,c
 16006  0122E8  0E00               	movlw	0
 16007  0122EA  222F               	addwfc	i2___ftadd@f1+1,f,c
 16008  0122EC  0E00               	movlw	0
 16009  0122EE  2230               	addwfc	i2___ftadd@f1+2,f,c
 16010  0122F0                     i2l1217:
 16011  0122F0  AC37               	btfss	i2___ftadd@sign,6,c
 16012  0122F2  D00C               	goto	i2l1218
 16013  0122F4  0EFF               	movlw	255
 16014  0122F6  1A31               	xorwf	i2___ftadd@f2,f,c
 16015  0122F8  0EFF               	movlw	255
 16016  0122FA  1A32               	xorwf	i2___ftadd@f2+1,f,c
 16017  0122FC  0EFF               	movlw	255
 16018  0122FE  1A33               	xorwf	i2___ftadd@f2+2,f,c
 16019  012300  0E01               	movlw	1
 16020  012302  2631               	addwf	i2___ftadd@f2,f,c
 16021  012304  0E00               	movlw	0
 16022  012306  2232               	addwfc	i2___ftadd@f2+1,f,c
 16023  012308  0E00               	movlw	0
 16024  01230A  2233               	addwfc	i2___ftadd@f2+2,f,c
 16025  01230C                     i2l1218:
 16026  01230C  0E00               	movlw	0
 16027  01230E  6E37               	movwf	i2___ftadd@sign,c
 16028  012310  502E               	movf	i2___ftadd@f1,w,c
 16029  012312  2631               	addwf	i2___ftadd@f2,f,c
 16030  012314  502F               	movf	i2___ftadd@f1+1,w,c
 16031  012316  2232               	addwfc	i2___ftadd@f2+1,f,c
 16032  012318  5030               	movf	i2___ftadd@f1+2,w,c
 16033  01231A  2233               	addwfc	i2___ftadd@f2+2,f,c
 16034  01231C  AE33               	btfss	i2___ftadd@f2+2,7,c
 16035  01231E  D00E               	goto	i2l1219
 16036  012320  0EFF               	movlw	255
 16037  012322  1A31               	xorwf	i2___ftadd@f2,f,c
 16038  012324  0EFF               	movlw	255
 16039  012326  1A32               	xorwf	i2___ftadd@f2+1,f,c
 16040  012328  0EFF               	movlw	255
 16041  01232A  1A33               	xorwf	i2___ftadd@f2+2,f,c
 16042  01232C  0E01               	movlw	1
 16043  01232E  2631               	addwf	i2___ftadd@f2,f,c
 16044  012330  0E00               	movlw	0
 16045  012332  2232               	addwfc	i2___ftadd@f2+1,f,c
 16046  012334  0E00               	movlw	0
 16047  012336  2233               	addwfc	i2___ftadd@f2+2,f,c
 16048  012338  0E01               	movlw	1
 16049  01233A  6E37               	movwf	i2___ftadd@sign,c
 16050  01233C                     i2l1219:
 16051  01233C  C031  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 16052  012340  C032  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 16053  012344  C033  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 16054  012348  C039  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 16055  01234C  C037  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 16056  012350  EC5F  F097         	call	i2___ftpack	;wreg free
 16057  012354  C001  F02E         	movff	?i2___ftpack,?i2___ftadd
 16058  012358  C002  F02F         	movff	?i2___ftpack+1,?i2___ftadd+1
 16059  01235C  C003  F030         	movff	?i2___ftpack+2,?i2___ftadd+2
 16060  012360  0012               	return	
 16061  012362                     __end_ofi2___ftadd:
 16062                           	opt stack 0
 16063                           tosu	equ	0xFFF
 16064                           tosh	equ	0xFFE
 16065                           tosl	equ	0xFFD
 16066                           pclatu	equ	0xFFB
 16067                           pclath	equ	0xFFA
 16068                           tblptru	equ	0xFF8
 16069                           tblptrh	equ	0xFF7
 16070                           tblptrl	equ	0xFF6
 16071                           tablat	equ	0xFF5
 16072                           prodh	equ	0xFF4
 16073                           prodl	equ	0xFF3
 16074                           intcon	equ	0xFF2
 16075                           postinc0	equ	0xFEE
 16076                           fsr0h	equ	0xFEA
 16077                           fsr0l	equ	0xFE9
 16078                           wreg	equ	0xFE8
 16079                           fsr1h	equ	0xFE2
 16080                           fsr1l	equ	0xFE1
 16081                           bsr	equ	0xFE0
 16082                           indf2	equ	0xFDF
 16083                           postinc2	equ	0xFDE
 16084                           postdec2	equ	0xFDD
 16085                           fsr2h	equ	0xFDA
 16086                           fsr2l	equ	0xFD9
 16087                           status	equ	0xFD8
 16088                           
 16089 ;; *************** function i2___ftneg *****************
 16090 ;; Defined at:
 16091 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 16092 ;; Parameters:    Size  Location     Type
 16093 ;;  f1              3    0[COMRAM] float 
 16094 ;; Auto vars:     Size  Location     Type
 16095 ;;		None
 16096 ;; Return value:  Size  Location     Type
 16097 ;;                  3    0[COMRAM] float 
 16098 ;; Registers used:
 16099 ;;		wreg, status,2, status,0
 16100 ;; Tracked objects:
 16101 ;;		On entry : 0/0
 16102 ;;		On exit  : 0/0
 16103 ;;		Unchanged: 0/0
 16104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16105 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16108 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16109 ;;Total ram usage:        3 bytes
 16110 ;; Hardware stack levels used:    1
 16111 ;; This function calls:
 16112 ;;		Nothing
 16113 ;; This function is called by:
 16114 ;;		i2_printf
 16115 ;; This function uses a non-reentrant model
 16116 ;;
 16117                           
 16118                           	psect	text75
 16119  013CAC                     __ptext75:
 16120                           	opt stack 0
 16121  013CAC                     i2___ftneg:
 16122                           	opt stack 15
 16123                           
 16124                           ;incstack = 0
 16125  013CAC  5001               	movf	i2___ftneg@f1,w,c
 16126  013CAE  1002               	iorwf	i2___ftneg@f1+1,w,c
 16127  013CB0  1003               	iorwf	i2___ftneg@f1+2,w,c
 16128  013CB2  B4D8               	btfsc	status,2,c
 16129  013CB4  D006               	goto	i2l1267
 16130  013CB6  0E00               	movlw	0
 16131  013CB8  1A01               	xorwf	i2___ftneg@f1,f,c
 16132  013CBA  0E00               	movlw	0
 16133  013CBC  1A02               	xorwf	i2___ftneg@f1+1,f,c
 16134  013CBE  0E80               	movlw	128
 16135  013CC0  1A03               	xorwf	i2___ftneg@f1+2,f,c
 16136  013CC2                     i2l1267:
 16137  013CC2  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 16138  013CC6  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 16139  013CCA  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 16140  013CCE  0012               	return		;funcret
 16141  013CD0                     __end_ofi2___ftneg:
 16142                           	opt stack 0
 16143                           tosu	equ	0xFFF
 16144                           tosh	equ	0xFFE
 16145                           tosl	equ	0xFFD
 16146                           pclatu	equ	0xFFB
 16147                           pclath	equ	0xFFA
 16148                           tblptru	equ	0xFF8
 16149                           tblptrh	equ	0xFF7
 16150                           tblptrl	equ	0xFF6
 16151                           tablat	equ	0xFF5
 16152                           prodh	equ	0xFF4
 16153                           prodl	equ	0xFF3
 16154                           intcon	equ	0xFF2
 16155                           postinc0	equ	0xFEE
 16156                           fsr0h	equ	0xFEA
 16157                           fsr0l	equ	0xFE9
 16158                           wreg	equ	0xFE8
 16159                           fsr1h	equ	0xFE2
 16160                           fsr1l	equ	0xFE1
 16161                           bsr	equ	0xFE0
 16162                           indf2	equ	0xFDF
 16163                           postinc2	equ	0xFDE
 16164                           postdec2	equ	0xFDD
 16165                           fsr2h	equ	0xFDA
 16166                           fsr2l	equ	0xFD9
 16167                           status	equ	0xFD8
 16168                           
 16169 ;; *************** function i2___ftge *****************
 16170 ;; Defined at:
 16171 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 16172 ;; Parameters:    Size  Location     Type
 16173 ;;  ff1             3    0[COMRAM] float 
 16174 ;;  ff2             3    3[COMRAM] float 
 16175 ;; Auto vars:     Size  Location     Type
 16176 ;;		None
 16177 ;; Return value:  Size  Location     Type
 16178 ;;		None               void
 16179 ;; Registers used:
 16180 ;;		wreg, status,2, status,0
 16181 ;; Tracked objects:
 16182 ;;		On entry : 0/0
 16183 ;;		On exit  : 0/0
 16184 ;;		Unchanged: 0/0
 16185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16186 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16188 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16189 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16190 ;;Total ram usage:        9 bytes
 16191 ;; Hardware stack levels used:    1
 16192 ;; This function calls:
 16193 ;;		Nothing
 16194 ;; This function is called by:
 16195 ;;		i2_printf
 16196 ;; This function uses a non-reentrant model
 16197 ;;
 16198                           
 16199                           	psect	text76
 16200  01314A                     __ptext76:
 16201                           	opt stack 0
 16202  01314A                     i2___ftge:
 16203                           	opt stack 15
 16204                           
 16205                           ;incstack = 0
 16206  01314A  AE03               	btfss	i2___ftge@ff1+2,7,c
 16207  01314C  D016               	goto	i2l1249
 16208  01314E  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
 16209  013152  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
 16210  013156  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
 16211  01315A  1E07               	comf	??i2___ftge,f,c
 16212  01315C  1E08               	comf	??i2___ftge+1,f,c
 16213  01315E  1E09               	comf	??i2___ftge+2,f,c
 16214  013160  2A07               	incf	??i2___ftge,f,c
 16215  013162  0E00               	movlw	0
 16216  013164  2208               	addwfc	??i2___ftge+1,f,c
 16217  013166  2209               	addwfc	??i2___ftge+2,f,c
 16218  013168  0E00               	movlw	0
 16219  01316A  2407               	addwf	??i2___ftge,w,c
 16220  01316C  6E01               	movwf	i2___ftge@ff1,c
 16221  01316E  0E00               	movlw	0
 16222  013170  2008               	addwfc	??i2___ftge+1,w,c
 16223  013172  6E02               	movwf	i2___ftge@ff1+1,c
 16224  013174  0E80               	movlw	128
 16225  013176  2009               	addwfc	??i2___ftge+2,w,c
 16226  013178  6E03               	movwf	i2___ftge@ff1+2,c
 16227  01317A                     i2l1249:
 16228  01317A  AE06               	btfss	i2___ftge@ff2+2,7,c
 16229  01317C  D016               	goto	i2l1250
 16230  01317E  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
 16231  013182  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
 16232  013186  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
 16233  01318A  1E07               	comf	??i2___ftge,f,c
 16234  01318C  1E08               	comf	??i2___ftge+1,f,c
 16235  01318E  1E09               	comf	??i2___ftge+2,f,c
 16236  013190  2A07               	incf	??i2___ftge,f,c
 16237  013192  0E00               	movlw	0
 16238  013194  2208               	addwfc	??i2___ftge+1,f,c
 16239  013196  2209               	addwfc	??i2___ftge+2,f,c
 16240  013198  0E00               	movlw	0
 16241  01319A  2407               	addwf	??i2___ftge,w,c
 16242  01319C  6E04               	movwf	i2___ftge@ff2,c
 16243  01319E  0E00               	movlw	0
 16244  0131A0  2008               	addwfc	??i2___ftge+1,w,c
 16245  0131A2  6E05               	movwf	i2___ftge@ff2+1,c
 16246  0131A4  0E80               	movlw	128
 16247  0131A6  2009               	addwfc	??i2___ftge+2,w,c
 16248  0131A8  6E06               	movwf	i2___ftge@ff2+2,c
 16249  0131AA                     i2l1250:
 16250  0131AA  0E00               	movlw	0
 16251  0131AC  1A01               	xorwf	i2___ftge@ff1,f,c
 16252  0131AE  0E00               	movlw	0
 16253  0131B0  1A02               	xorwf	i2___ftge@ff1+1,f,c
 16254  0131B2  0E80               	movlw	128
 16255  0131B4  1A03               	xorwf	i2___ftge@ff1+2,f,c
 16256  0131B6  0E00               	movlw	0
 16257  0131B8  1A04               	xorwf	i2___ftge@ff2,f,c
 16258  0131BA  0E00               	movlw	0
 16259  0131BC  1A05               	xorwf	i2___ftge@ff2+1,f,c
 16260  0131BE  0E80               	movlw	128
 16261  0131C0  1A06               	xorwf	i2___ftge@ff2+2,f,c
 16262  0131C2  5004               	movf	i2___ftge@ff2,w,c
 16263  0131C4  5C01               	subwf	i2___ftge@ff1,w,c
 16264  0131C6  5005               	movf	i2___ftge@ff2+1,w,c
 16265  0131C8  5802               	subwfb	i2___ftge@ff1+1,w,c
 16266  0131CA  5006               	movf	i2___ftge@ff2+2,w,c
 16267  0131CC  5803               	subwfb	i2___ftge@ff1+2,w,c
 16268  0131CE  B0D8               	btfsc	status,0,c
 16269  0131D0  D002               	goto	i2l5687
 16270  0131D2  90D8               	bcf	status,0,c
 16271  0131D4  0012               	return	
 16272  0131D6                     i2l5687:
 16273  0131D6  80D8               	bsf	status,0,c
 16274  0131D8  0012               	return	
 16275  0131DA                     __end_ofi2___ftge:
 16276                           	opt stack 0
 16277                           tosu	equ	0xFFF
 16278                           tosh	equ	0xFFE
 16279                           tosl	equ	0xFFD
 16280                           pclatu	equ	0xFFB
 16281                           pclath	equ	0xFFA
 16282                           tblptru	equ	0xFF8
 16283                           tblptrh	equ	0xFF7
 16284                           tblptrl	equ	0xFF6
 16285                           tablat	equ	0xFF5
 16286                           prodh	equ	0xFF4
 16287                           prodl	equ	0xFF3
 16288                           intcon	equ	0xFF2
 16289                           postinc0	equ	0xFEE
 16290                           fsr0h	equ	0xFEA
 16291                           fsr0l	equ	0xFE9
 16292                           wreg	equ	0xFE8
 16293                           fsr1h	equ	0xFE2
 16294                           fsr1l	equ	0xFE1
 16295                           bsr	equ	0xFE0
 16296                           indf2	equ	0xFDF
 16297                           postinc2	equ	0xFDE
 16298                           postdec2	equ	0xFDD
 16299                           fsr2h	equ	0xFDA
 16300                           fsr2l	equ	0xFD9
 16301                           status	equ	0xFD8
 16302                           
 16303 ;; *************** function _ADCC_ISR *****************
 16304 ;; Defined at:
 16305 ;;		line 297 in file "mcc_generated_files/adcc.c"
 16306 ;; Parameters:    Size  Location     Type
 16307 ;;		None
 16308 ;; Auto vars:     Size  Location     Type
 16309 ;;		None
 16310 ;; Return value:  Size  Location     Type
 16311 ;;                  1    wreg      void 
 16312 ;; Registers used:
 16313 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16314 ;; Tracked objects:
 16315 ;;		On entry : 0/0
 16316 ;;		On exit  : 0/0
 16317 ;;		Unchanged: 0/0
 16318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16323 ;;Total ram usage:        0 bytes
 16324 ;; Hardware stack levels used:    1
 16325 ;; Hardware stack levels required when called:    3
 16326 ;; This function calls:
 16327 ;;		Absolute function
 16328 ;;		_ADCC_DefaultInterruptHandler
 16329 ;;		_ADCCallback
 16330 ;; This function is called by:
 16331 ;;		_INTERRUPT_InterruptManagerHigh
 16332 ;; This function uses a non-reentrant model
 16333 ;;
 16334                           
 16335                           	psect	text77
 16336  013BEC                     __ptext77:
 16337                           	opt stack 0
 16338  013BEC                     _ADCC_ISR:
 16339                           	opt stack 14
 16340                           
 16341                           ;adcc.c: 300: PIR1bits.ADIF = 0;
 16342                           
 16343                           ;incstack = 0
 16344  013BEC  010E               	movlb	14	; () banked
 16345  013BEE  9134               	bcf	52,0,b	;volatile
 16346                           
 16347                           ; BSR set to: 14
 16348                           ;adcc.c: 302: if (ADCC_ADI_InterruptHandler)
 16349  013BF0  0100               	movlb	0	; () banked
 16350  013BF2  51BA               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 16351  013BF4  11BB               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 16352  013BF6  11BC               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 16353  013BF8  B4D8               	btfsc	status,2,c
 16354  013BFA  0012               	return	
 16355                           
 16356                           ; BSR set to: 0
 16357                           ;adcc.c: 303: ADCC_ADI_InterruptHandler();
 16358  013BFC  D801               	call	i2u1018_48
 16359  013BFE  0012               	return	
 16360  013C00                     i2u1018_48:
 16361  013C00  0005               	push	
 16362  013C02  6EFA               	movwf	pclath,c
 16363  013C04  51BA               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 16364  013C06  6EFD               	movwf	tosl,c
 16365  013C08  51BB               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 16366  013C0A  6EFE               	movwf	tosh,c
 16367  013C0C  51BC               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 16368  013C0E  6EFF               	movwf	tosu,c
 16369  013C10  50FA               	movf	pclath,w,c
 16370  013C12  0012               	return		;indir
 16371  013C14                     __end_of_ADCC_ISR:
 16372                           	opt stack 0
 16373                           tosu	equ	0xFFF
 16374                           tosh	equ	0xFFE
 16375                           tosl	equ	0xFFD
 16376                           pclatu	equ	0xFFB
 16377                           pclath	equ	0xFFA
 16378                           tblptru	equ	0xFF8
 16379                           tblptrh	equ	0xFF7
 16380                           tblptrl	equ	0xFF6
 16381                           tablat	equ	0xFF5
 16382                           prodh	equ	0xFF4
 16383                           prodl	equ	0xFF3
 16384                           intcon	equ	0xFF2
 16385                           postinc0	equ	0xFEE
 16386                           fsr0h	equ	0xFEA
 16387                           fsr0l	equ	0xFE9
 16388                           wreg	equ	0xFE8
 16389                           fsr1h	equ	0xFE2
 16390                           fsr1l	equ	0xFE1
 16391                           bsr	equ	0xFE0
 16392                           indf2	equ	0xFDF
 16393                           postinc2	equ	0xFDE
 16394                           postdec2	equ	0xFDD
 16395                           fsr2h	equ	0xFDA
 16396                           fsr2l	equ	0xFD9
 16397                           status	equ	0xFD8
 16398                           
 16399 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 16400 ;; Defined at:
 16401 ;;		line 310 in file "mcc_generated_files/adcc.c"
 16402 ;; Parameters:    Size  Location     Type
 16403 ;;		None
 16404 ;; Auto vars:     Size  Location     Type
 16405 ;;		None
 16406 ;; Return value:  Size  Location     Type
 16407 ;;                  1    wreg      void 
 16408 ;; Registers used:
 16409 ;;		None
 16410 ;; Tracked objects:
 16411 ;;		On entry : 0/0
 16412 ;;		On exit  : 0/0
 16413 ;;		Unchanged: 0/0
 16414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16419 ;;Total ram usage:        0 bytes
 16420 ;; Hardware stack levels used:    1
 16421 ;; This function calls:
 16422 ;;		Nothing
 16423 ;; This function is called by:
 16424 ;;		_ADCC_Initialize
 16425 ;;		_ADCC_ISR
 16426 ;; This function uses a non-reentrant model
 16427 ;;
 16428                           
 16429                           	psect	text78
 16430  013E64                     __ptext78:
 16431                           	opt stack 0
 16432  013E64                     _ADCC_DefaultInterruptHandler:
 16433                           	opt stack 16
 16434                           
 16435                           ;incstack = 0
 16436  013E64  0012               	return		;funcret
 16437  013E66                     __end_of_ADCC_DefaultInterruptHandler:
 16438                           	opt stack 0
 16439                           tosu	equ	0xFFF
 16440                           tosh	equ	0xFFE
 16441                           tosl	equ	0xFFD
 16442                           pclatu	equ	0xFFB
 16443                           pclath	equ	0xFFA
 16444                           tblptru	equ	0xFF8
 16445                           tblptrh	equ	0xFF7
 16446                           tblptrl	equ	0xFF6
 16447                           tablat	equ	0xFF5
 16448                           prodh	equ	0xFF4
 16449                           prodl	equ	0xFF3
 16450                           intcon	equ	0xFF2
 16451                           postinc0	equ	0xFEE
 16452                           fsr0h	equ	0xFEA
 16453                           fsr0l	equ	0xFE9
 16454                           wreg	equ	0xFE8
 16455                           fsr1h	equ	0xFE2
 16456                           fsr1l	equ	0xFE1
 16457                           bsr	equ	0xFE0
 16458                           indf2	equ	0xFDF
 16459                           postinc2	equ	0xFDE
 16460                           postdec2	equ	0xFDD
 16461                           fsr2h	equ	0xFDA
 16462                           fsr2l	equ	0xFD9
 16463                           status	equ	0xFD8
 16464                           
 16465 ;; *************** function _ADCCallback *****************
 16466 ;; Defined at:
 16467 ;;		line 75 in file "main.c"
 16468 ;; Parameters:    Size  Location     Type
 16469 ;;		None
 16470 ;; Auto vars:     Size  Location     Type
 16471 ;;  currentADCCh    1   35[COMRAM] enum E17316
 16472 ;; Return value:  Size  Location     Type
 16473 ;;                  1    wreg      void 
 16474 ;; Registers used:
 16475 ;;		wreg, status,2, status,0, cstack
 16476 ;; Tracked objects:
 16477 ;;		On entry : 0/0
 16478 ;;		On exit  : 0/0
 16479 ;;		Unchanged: 0/0
 16480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16482 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16484 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16485 ;;Total ram usage:        1 bytes
 16486 ;; Hardware stack levels used:    1
 16487 ;; Hardware stack levels required when called:    2
 16488 ;; This function calls:
 16489 ;;		_ADCC_GetConversionResult
 16490 ;;		___lwtoft
 16491 ;;		i2___ftmul
 16492 ;; This function is called by:
 16493 ;;		_main
 16494 ;;		_ADCC_ISR
 16495 ;; This function uses a non-reentrant model
 16496 ;;
 16497                           
 16498                           	psect	text79
 16499  0131DA                     __ptext79:
 16500                           	opt stack 0
 16501  0131DA                     _ADCCallback:
 16502                           	opt stack 14
 16503                           
 16504                           ;main.c: 77: adcc_channel_t currentADCChannel = ADPCH;
 16505                           
 16506                           ;incstack = 0
 16507  0131DA  CF5F F024          	movff	3935,ADCCallback@currentADCChannel	;volatile
 16508                           
 16509                           ;main.c: 79: switch (currentADCChannel) {
 16510  0131DE  D03C               	goto	i2l449
 16511  0131E0                     
 16512                           ;main.c: 82: POS3P3_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) * 2.0;
 16513  0131E0  ECC9  F09E         	call	_ADCC_GetConversionResult	;wreg free
 16514  0131E4  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 16515  0131E8  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 16516  0131EC  EC68  F09E         	call	___lwtoft	;wreg free
 16517  0131F0  C009  F015         	movff	?___lwtoft,i2___ftmul@f1
 16518  0131F4  C00A  F016         	movff	?___lwtoft+1,i2___ftmul@f1+1
 16519  0131F8  C00B  F017         	movff	?___lwtoft+2,i2___ftmul@f1+2
 16520  0131FC  0E68               	movlw	104
 16521  0131FE  6E18               	movwf	i2___ftmul@f2,c
 16522  013200  0ED3               	movlw	211
 16523  013202  6E19               	movwf	i2___ftmul@f2+1,c
 16524  013204  0E3B               	movlw	59
 16525  013206  6E1A               	movwf	i2___ftmul@f2+2,c
 16526  013208  EC2D  F096         	call	i2___ftmul	;wreg free
 16527  01320C  C015  F0C0         	movff	?i2___ftmul,_POS3P3_ADC_Result
 16528  013210  C016  F0C1         	movff	?i2___ftmul+1,_POS3P3_ADC_Result+1
 16529  013214  C017  F0C2         	movff	?i2___ftmul+2,_POS3P3_ADC_Result+2
 16530                           
 16531                           ;main.c: 83: break;
 16532  013218  0012               	return	
 16533  01321A                     
 16534                           ;main.c: 86: POS12_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) * 4.03030303
      +                          03;
 16535  01321A  ECC9  F09E         	call	_ADCC_GetConversionResult	;wreg free
 16536  01321E  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 16537  013222  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 16538  013226  EC68  F09E         	call	___lwtoft	;wreg free
 16539  01322A  C009  F015         	movff	?___lwtoft,i2___ftmul@f1
 16540  01322E  C00A  F016         	movff	?___lwtoft+1,i2___ftmul@f1+1
 16541  013232  C00B  F017         	movff	?___lwtoft+2,i2___ftmul@f1+2
 16542  013236  0E02               	movlw	2
 16543  013238  6E18               	movwf	i2___ftmul@f2,c
 16544  01323A  0E55               	movlw	85
 16545  01323C  6E19               	movwf	i2___ftmul@f2+1,c
 16546  01323E  0E3C               	movlw	60
 16547  013240  6E1A               	movwf	i2___ftmul@f2+2,c
 16548  013242  EC2D  F096         	call	i2___ftmul	;wreg free
 16549  013246  C015  F0BD         	movff	?i2___ftmul,_POS12_ADC_Result
 16550  01324A  C016  F0BE         	movff	?i2___ftmul+1,_POS12_ADC_Result+1
 16551  01324E  C017  F0BF         	movff	?i2___ftmul+2,_POS12_ADC_Result+2
 16552                           
 16553                           ;main.c: 87: break;
 16554  013252  0012               	return	
 16555  013254                     i2l453:
 16556                           
 16557                           ;main.c: 90: LATFbits.LATF3 = 1;
 16558  013254  867E               	bsf	3966,3,c	;volatile
 16559                           
 16560                           ;main.c: 93: }
 16561                           
 16562                           ;main.c: 91: break;
 16563  013256  0012               	return	
 16564  013258                     i2l449:
 16565  013258  5024               	movf	ADCCallback@currentADCChannel,w,c
 16566                           
 16567                           ; Switch size 1, requested type "space"
 16568                           ; Number of cases is 2, Range of values is 4 to 34
 16569                           ; switch strategies available:
 16570                           ; Name         Instructions Cycles
 16571                           ; simple_byte            7     4 (average)
 16572                           ;	Chosen strategy is simple_byte
 16573  01325A  0A04               	xorlw	4	; case 4
 16574  01325C  B4D8               	btfsc	status,2,c
 16575  01325E  D7DD               	goto	i2l452
 16576  013260  0A26               	xorlw	38	; case 34
 16577  013262  B4D8               	btfsc	status,2,c
 16578  013264  D7BD               	goto	i2l450
 16579  013266  D7F6               	goto	i2l453
 16580  013268                     __end_of_ADCCallback:
 16581                           	opt stack 0
 16582                           tosu	equ	0xFFF
 16583                           tosh	equ	0xFFE
 16584                           tosl	equ	0xFFD
 16585                           pclatu	equ	0xFFB
 16586                           pclath	equ	0xFFA
 16587                           tblptru	equ	0xFF8
 16588                           tblptrh	equ	0xFF7
 16589                           tblptrl	equ	0xFF6
 16590                           tablat	equ	0xFF5
 16591                           prodh	equ	0xFF4
 16592                           prodl	equ	0xFF3
 16593                           intcon	equ	0xFF2
 16594                           postinc0	equ	0xFEE
 16595                           fsr0h	equ	0xFEA
 16596                           fsr0l	equ	0xFE9
 16597                           wreg	equ	0xFE8
 16598                           fsr1h	equ	0xFE2
 16599                           fsr1l	equ	0xFE1
 16600                           bsr	equ	0xFE0
 16601                           indf2	equ	0xFDF
 16602                           postinc2	equ	0xFDE
 16603                           postdec2	equ	0xFDD
 16604                           fsr2h	equ	0xFDA
 16605                           fsr2l	equ	0xFD9
 16606                           status	equ	0xFD8
 16607                           
 16608 ;; *************** function i2___ftmul *****************
 16609 ;; Defined at:
 16610 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 16611 ;; Parameters:    Size  Location     Type
 16612 ;;  f1              3   20[COMRAM] float 
 16613 ;;  f2              3   23[COMRAM] float 
 16614 ;; Auto vars:     Size  Location     Type
 16615 ;;  __ftmul         3   30[COMRAM] unsigned um
 16616 ;;  __ftmul         1   34[COMRAM] unsigned char 
 16617 ;;  __ftmul         1   33[COMRAM] unsigned char 
 16618 ;;  __ftmul         1   29[COMRAM] unsigned char 
 16619 ;; Return value:  Size  Location     Type
 16620 ;;                  3   20[COMRAM] float 
 16621 ;; Registers used:
 16622 ;;		wreg, status,2, status,0, cstack
 16623 ;; Tracked objects:
 16624 ;;		On entry : 0/0
 16625 ;;		On exit  : 0/0
 16626 ;;		Unchanged: 0/0
 16627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16628 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16629 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16630 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16631 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16632 ;;Total ram usage:       15 bytes
 16633 ;; Hardware stack levels used:    1
 16634 ;; Hardware stack levels required when called:    1
 16635 ;; This function calls:
 16636 ;;		i2___ftpack
 16637 ;; This function is called by:
 16638 ;;		_ADCCallback
 16639 ;;		i2_fround
 16640 ;;		i2_scale
 16641 ;;		i2_printf
 16642 ;; This function uses a non-reentrant model
 16643 ;;
 16644                           
 16645                           	psect	text80
 16646  012C5A                     __ptext80:
 16647                           	opt stack 0
 16648  012C5A                     i2___ftmul:
 16649                           	opt stack 13
 16650                           
 16651                           ;incstack = 0
 16652  012C5A  C017  F01B         	movff	i2___ftmul@f1+2,??i2___ftmul
 16653  012C5E  6A1C               	clrf	(??i2___ftmul+1)& (0+255),c
 16654  012C60  6A1D               	clrf	(??i2___ftmul+2)& (0+255),c
 16655  012C62  3416               	rlcf	i2___ftmul@f1+1,w,c
 16656  012C64  361B               	rlcf	??i2___ftmul& (0+255),f,c
 16657  012C66  E301               	bnc	u770_41
 16658  012C68  801C               	bsf	(??i2___ftmul+1)& (0+255),0,c
 16659  012C6A                     u770_41:
 16660  012C6A  501B               	movf	??i2___ftmul,w,c
 16661  012C6C  6E1E               	movwf	i2___ftmul@exp,c
 16662  012C6E  501E               	movf	i2___ftmul@exp,w,c
 16663  012C70  A4D8               	btfss	status,2,c
 16664  012C72  D007               	goto	i2l1256
 16665  012C74  0E00               	movlw	0
 16666  012C76  6E15               	movwf	?i2___ftmul,c
 16667  012C78  0E00               	movlw	0
 16668  012C7A  6E16               	movwf	?i2___ftmul+1,c
 16669  012C7C  0E00               	movlw	0
 16670  012C7E  6E17               	movwf	?i2___ftmul+2,c
 16671  012C80  0012               	return	
 16672  012C82                     i2l1256:
 16673  012C82  C01A  F01B         	movff	i2___ftmul@f2+2,??i2___ftmul
 16674  012C86  6A1C               	clrf	(??i2___ftmul+1)& (0+255),c
 16675  012C88  6A1D               	clrf	(??i2___ftmul+2)& (0+255),c
 16676  012C8A  3419               	rlcf	i2___ftmul@f2+1,w,c
 16677  012C8C  361B               	rlcf	??i2___ftmul& (0+255),f,c
 16678  012C8E  E301               	bnc	u772_41
 16679  012C90  801C               	bsf	(??i2___ftmul+1)& (0+255),0,c
 16680  012C92                     u772_41:
 16681  012C92  501B               	movf	??i2___ftmul,w,c
 16682  012C94  6E23               	movwf	i2___ftmul@sign,c
 16683  012C96  5023               	movf	i2___ftmul@sign,w,c
 16684  012C98  A4D8               	btfss	status,2,c
 16685  012C9A  D007               	goto	i2l1258
 16686  012C9C  0E00               	movlw	0
 16687  012C9E  6E15               	movwf	?i2___ftmul,c
 16688  012CA0  0E00               	movlw	0
 16689  012CA2  6E16               	movwf	?i2___ftmul+1,c
 16690  012CA4  0E00               	movlw	0
 16691  012CA6  6E17               	movwf	?i2___ftmul+2,c
 16692  012CA8  0012               	return	
 16693  012CAA                     i2l1258:
 16694  012CAA  5023               	movf	i2___ftmul@sign,w,c
 16695  012CAC  0F7B               	addlw	123
 16696  012CAE  261E               	addwf	i2___ftmul@exp,f,c
 16697  012CB0  C017  F023         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 16698  012CB4  501A               	movf	i2___ftmul@f2+2,w,c
 16699  012CB6  1A23               	xorwf	i2___ftmul@sign,f,c
 16700  012CB8  0E80               	movlw	128
 16701  012CBA  1623               	andwf	i2___ftmul@sign,f,c
 16702  012CBC  8E16               	bsf	i2___ftmul@f1+1,7,c
 16703  012CBE  8E19               	bsf	i2___ftmul@f2+1,7,c
 16704  012CC0  0EFF               	movlw	255
 16705  012CC2  1618               	andwf	i2___ftmul@f2,f,c
 16706  012CC4  0EFF               	movlw	255
 16707  012CC6  1619               	andwf	i2___ftmul@f2+1,f,c
 16708  012CC8  0E00               	movlw	0
 16709  012CCA  161A               	andwf	i2___ftmul@f2+2,f,c
 16710  012CCC  0E00               	movlw	0
 16711  012CCE  6E1F               	movwf	i2___ftmul@f3_as_product,c
 16712  012CD0  0E00               	movlw	0
 16713  012CD2  6E20               	movwf	i2___ftmul@f3_as_product+1,c
 16714  012CD4  0E00               	movlw	0
 16715  012CD6  6E21               	movwf	i2___ftmul@f3_as_product+2,c
 16716  012CD8  0E07               	movlw	7
 16717  012CDA  6E22               	movwf	i2___ftmul@cntr,c
 16718  012CDC  A015               	btfss	i2___ftmul@f1,0,c
 16719  012CDE  D006               	goto	i2l1260
 16720  012CE0  5018               	movf	i2___ftmul@f2,w,c
 16721  012CE2  261F               	addwf	i2___ftmul@f3_as_product,f,c
 16722  012CE4  5019               	movf	i2___ftmul@f2+1,w,c
 16723  012CE6  2220               	addwfc	i2___ftmul@f3_as_product+1,f,c
 16724  012CE8  501A               	movf	i2___ftmul@f2+2,w,c
 16725  012CEA  2221               	addwfc	i2___ftmul@f3_as_product+2,f,c
 16726  012CEC                     i2l1260:
 16727  012CEC  90D8               	bcf	status,0,c
 16728  012CEE  3217               	rrcf	i2___ftmul@f1+2,f,c
 16729  012CF0  3216               	rrcf	i2___ftmul@f1+1,f,c
 16730  012CF2  3215               	rrcf	i2___ftmul@f1,f,c
 16731  012CF4  90D8               	bcf	status,0,c
 16732  012CF6  3618               	rlcf	i2___ftmul@f2,f,c
 16733  012CF8  3619               	rlcf	i2___ftmul@f2+1,f,c
 16734  012CFA  361A               	rlcf	i2___ftmul@f2+2,f,c
 16735  012CFC  2E22               	decfsz	i2___ftmul@cntr,f,c
 16736  012CFE  D7EE               	goto	i2l1259
 16737  012D00  0E09               	movlw	9
 16738  012D02  6E22               	movwf	i2___ftmul@cntr,c
 16739  012D04  A015               	btfss	i2___ftmul@f1,0,c
 16740  012D06  D006               	goto	i2l1263
 16741  012D08  5018               	movf	i2___ftmul@f2,w,c
 16742  012D0A  261F               	addwf	i2___ftmul@f3_as_product,f,c
 16743  012D0C  5019               	movf	i2___ftmul@f2+1,w,c
 16744  012D0E  2220               	addwfc	i2___ftmul@f3_as_product+1,f,c
 16745  012D10  501A               	movf	i2___ftmul@f2+2,w,c
 16746  012D12  2221               	addwfc	i2___ftmul@f3_as_product+2,f,c
 16747  012D14                     i2l1263:
 16748  012D14  90D8               	bcf	status,0,c
 16749  012D16  3217               	rrcf	i2___ftmul@f1+2,f,c
 16750  012D18  3216               	rrcf	i2___ftmul@f1+1,f,c
 16751  012D1A  3215               	rrcf	i2___ftmul@f1,f,c
 16752  012D1C  90D8               	bcf	status,0,c
 16753  012D1E  3221               	rrcf	i2___ftmul@f3_as_product+2,f,c
 16754  012D20  3220               	rrcf	i2___ftmul@f3_as_product+1,f,c
 16755  012D22  321F               	rrcf	i2___ftmul@f3_as_product,f,c
 16756  012D24  2E22               	decfsz	i2___ftmul@cntr,f,c
 16757  012D26  D7EE               	goto	i2l1262
 16758  012D28  C01F  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 16759  012D2C  C020  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 16760  012D30  C021  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 16761  012D34  C01E  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 16762  012D38  C023  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 16763  012D3C  EC5F  F097         	call	i2___ftpack	;wreg free
 16764  012D40  C001  F015         	movff	?i2___ftpack,?i2___ftmul
 16765  012D44  C002  F016         	movff	?i2___ftpack+1,?i2___ftmul+1
 16766  012D48  C003  F017         	movff	?i2___ftpack+2,?i2___ftmul+2
 16767  012D4C  0012               	return	
 16768  012D4E                     __end_ofi2___ftmul:
 16769                           	opt stack 0
 16770                           tosu	equ	0xFFF
 16771                           tosh	equ	0xFFE
 16772                           tosl	equ	0xFFD
 16773                           pclatu	equ	0xFFB
 16774                           pclath	equ	0xFFA
 16775                           tblptru	equ	0xFF8
 16776                           tblptrh	equ	0xFF7
 16777                           tblptrl	equ	0xFF6
 16778                           tablat	equ	0xFF5
 16779                           prodh	equ	0xFF4
 16780                           prodl	equ	0xFF3
 16781                           intcon	equ	0xFF2
 16782                           postinc0	equ	0xFEE
 16783                           fsr0h	equ	0xFEA
 16784                           fsr0l	equ	0xFE9
 16785                           wreg	equ	0xFE8
 16786                           fsr1h	equ	0xFE2
 16787                           fsr1l	equ	0xFE1
 16788                           bsr	equ	0xFE0
 16789                           indf2	equ	0xFDF
 16790                           postinc2	equ	0xFDE
 16791                           postdec2	equ	0xFDD
 16792                           fsr2h	equ	0xFDA
 16793                           fsr2l	equ	0xFD9
 16794                           status	equ	0xFD8
 16795                           
 16796 ;; *************** function ___lwtoft *****************
 16797 ;; Defined at:
 16798 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 16799 ;; Parameters:    Size  Location     Type
 16800 ;;  c               2    8[COMRAM] unsigned int 
 16801 ;; Auto vars:     Size  Location     Type
 16802 ;;		None
 16803 ;; Return value:  Size  Location     Type
 16804 ;;                  3    8[COMRAM] float 
 16805 ;; Registers used:
 16806 ;;		wreg, status,2, status,0, cstack
 16807 ;; Tracked objects:
 16808 ;;		On entry : 0/0
 16809 ;;		On exit  : 0/0
 16810 ;;		Unchanged: 0/0
 16811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16812 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16815 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16816 ;;Total ram usage:        3 bytes
 16817 ;; Hardware stack levels used:    1
 16818 ;; Hardware stack levels required when called:    1
 16819 ;; This function calls:
 16820 ;;		i2___ftpack
 16821 ;; This function is called by:
 16822 ;;		_ADCCallback
 16823 ;; This function uses a non-reentrant model
 16824 ;;
 16825                           
 16826                           	psect	text81
 16827  013CD0                     __ptext81:
 16828                           	opt stack 0
 16829  013CD0                     ___lwtoft:
 16830                           	opt stack 14
 16831                           
 16832                           ;incstack = 0
 16833  013CD0  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 16834  013CD4  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 16835  013CD8  6A03               	clrf	i2___ftpack@arg+2,c
 16836  013CDA  0E8E               	movlw	142
 16837  013CDC  6E04               	movwf	i2___ftpack@exp,c
 16838  013CDE  0E00               	movlw	0
 16839  013CE0  6E05               	movwf	i2___ftpack@sign,c
 16840  013CE2  EC5F  F097         	call	i2___ftpack	;wreg free
 16841  013CE6  C001  F009         	movff	?i2___ftpack,?___lwtoft
 16842  013CEA  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 16843  013CEE  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 16844  013CF2  0012               	return	
 16845  013CF4                     __end_of___lwtoft:
 16846                           	opt stack 0
 16847                           tosu	equ	0xFFF
 16848                           tosh	equ	0xFFE
 16849                           tosl	equ	0xFFD
 16850                           pclatu	equ	0xFFB
 16851                           pclath	equ	0xFFA
 16852                           tblptru	equ	0xFF8
 16853                           tblptrh	equ	0xFF7
 16854                           tblptrl	equ	0xFF6
 16855                           tablat	equ	0xFF5
 16856                           prodh	equ	0xFF4
 16857                           prodl	equ	0xFF3
 16858                           intcon	equ	0xFF2
 16859                           postinc0	equ	0xFEE
 16860                           fsr0h	equ	0xFEA
 16861                           fsr0l	equ	0xFE9
 16862                           wreg	equ	0xFE8
 16863                           fsr1h	equ	0xFE2
 16864                           fsr1l	equ	0xFE1
 16865                           bsr	equ	0xFE0
 16866                           indf2	equ	0xFDF
 16867                           postinc2	equ	0xFDE
 16868                           postdec2	equ	0xFDD
 16869                           fsr2h	equ	0xFDA
 16870                           fsr2l	equ	0xFD9
 16871                           status	equ	0xFD8
 16872                           
 16873 ;; *************** function i2___ftpack *****************
 16874 ;; Defined at:
 16875 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 16876 ;; Parameters:    Size  Location     Type
 16877 ;;  arg             3    0[COMRAM] unsigned um
 16878 ;;  exp             1    3[COMRAM] unsigned char 
 16879 ;;  sign            1    4[COMRAM] unsigned char 
 16880 ;; Auto vars:     Size  Location     Type
 16881 ;;		None
 16882 ;; Return value:  Size  Location     Type
 16883 ;;                  3    0[COMRAM] float 
 16884 ;; Registers used:
 16885 ;;		wreg, status,2, status,0
 16886 ;; Tracked objects:
 16887 ;;		On entry : 0/0
 16888 ;;		On exit  : 0/0
 16889 ;;		Unchanged: 0/0
 16890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16891 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16893 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16894 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16895 ;;Total ram usage:        8 bytes
 16896 ;; Hardware stack levels used:    1
 16897 ;; This function calls:
 16898 ;;		Nothing
 16899 ;; This function is called by:
 16900 ;;		___lwtoft
 16901 ;;		i2___ftadd
 16902 ;;		i2___ftmul
 16903 ;;		i2___lltoft
 16904 ;; This function uses a non-reentrant model
 16905 ;;
 16906                           
 16907                           	psect	text82
 16908  012EBE                     __ptext82:
 16909                           	opt stack 0
 16910  012EBE                     i2___ftpack:
 16911                           	opt stack 13
 16912                           
 16913                           ;incstack = 0
 16914  012EBE  5004               	movf	i2___ftpack@exp,w,c
 16915  012EC0  B4D8               	btfsc	status,2,c
 16916  012EC2  D005               	goto	i2u727_40
 16917  012EC4  5001               	movf	i2___ftpack@arg,w,c
 16918  012EC6  1002               	iorwf	i2___ftpack@arg+1,w,c
 16919  012EC8  1003               	iorwf	i2___ftpack@arg+2,w,c
 16920  012ECA  A4D8               	btfss	status,2,c
 16921  012ECC  D00C               	goto	i2l1160
 16922  012ECE                     i2u727_40:
 16923  012ECE  0E00               	movlw	0
 16924  012ED0  6E01               	movwf	?i2___ftpack,c
 16925  012ED2  0E00               	movlw	0
 16926  012ED4  6E02               	movwf	?i2___ftpack+1,c
 16927  012ED6  0E00               	movlw	0
 16928  012ED8  6E03               	movwf	?i2___ftpack+2,c
 16929  012EDA  0012               	return	
 16930  012EDC  2A04               	incf	i2___ftpack@exp,f,c
 16931  012EDE  90D8               	bcf	status,0,c
 16932  012EE0  3203               	rrcf	i2___ftpack@arg+2,f,c
 16933  012EE2  3202               	rrcf	i2___ftpack@arg+1,f,c
 16934  012EE4  3201               	rrcf	i2___ftpack@arg,f,c
 16935  012EE6                     i2l1160:
 16936  012EE6  0E00               	movlw	0
 16937  012EE8  1401               	andwf	i2___ftpack@arg,w,c
 16938  012EEA  6E06               	movwf	??i2___ftpack& (0+255),c
 16939  012EEC  0E00               	movlw	0
 16940  012EEE  1402               	andwf	i2___ftpack@arg+1,w,c
 16941  012EF0  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 16942  012EF2  0EFE               	movlw	254
 16943  012EF4  1403               	andwf	i2___ftpack@arg+2,w,c
 16944  012EF6  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 16945  012EF8  5006               	movf	??i2___ftpack,w,c
 16946  012EFA  1007               	iorwf	??i2___ftpack+1,w,c
 16947  012EFC  1008               	iorwf	??i2___ftpack+2,w,c
 16948  012EFE  B4D8               	btfsc	status,2,c
 16949  012F00  D00C               	goto	i2l1163
 16950  012F02  D7EC               	goto	i2l1161
 16951  012F04  2A04               	incf	i2___ftpack@exp,f,c
 16952  012F06  0E01               	movlw	1
 16953  012F08  2601               	addwf	i2___ftpack@arg,f,c
 16954  012F0A  0E00               	movlw	0
 16955  012F0C  2202               	addwfc	i2___ftpack@arg+1,f,c
 16956  012F0E  0E00               	movlw	0
 16957  012F10  2203               	addwfc	i2___ftpack@arg+2,f,c
 16958  012F12  90D8               	bcf	status,0,c
 16959  012F14  3203               	rrcf	i2___ftpack@arg+2,f,c
 16960  012F16  3202               	rrcf	i2___ftpack@arg+1,f,c
 16961  012F18  3201               	rrcf	i2___ftpack@arg,f,c
 16962  012F1A                     i2l1163:
 16963  012F1A  0E00               	movlw	0
 16964  012F1C  1401               	andwf	i2___ftpack@arg,w,c
 16965  012F1E  6E06               	movwf	??i2___ftpack& (0+255),c
 16966  012F20  0E00               	movlw	0
 16967  012F22  1402               	andwf	i2___ftpack@arg+1,w,c
 16968  012F24  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 16969  012F26  0EFF               	movlw	255
 16970  012F28  1403               	andwf	i2___ftpack@arg+2,w,c
 16971  012F2A  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 16972  012F2C  5006               	movf	??i2___ftpack,w,c
 16973  012F2E  1007               	iorwf	??i2___ftpack+1,w,c
 16974  012F30  1008               	iorwf	??i2___ftpack+2,w,c
 16975  012F32  B4D8               	btfsc	status,2,c
 16976  012F34  D006               	goto	i2l1166
 16977  012F36  D7E6               	goto	i2l1164
 16978  012F38  0604               	decf	i2___ftpack@exp,f,c
 16979  012F3A  90D8               	bcf	status,0,c
 16980  012F3C  3601               	rlcf	i2___ftpack@arg,f,c
 16981  012F3E  3602               	rlcf	i2___ftpack@arg+1,f,c
 16982  012F40  3603               	rlcf	i2___ftpack@arg+2,f,c
 16983  012F42                     i2l1166:
 16984  012F42  BE02               	btfsc	i2___ftpack@arg+1,7,c
 16985  012F44  D003               	goto	i2u731_40
 16986  012F46  0E02               	movlw	2
 16987  012F48  6004               	cpfslt	i2___ftpack@exp,c
 16988  012F4A  D7F6               	goto	i2l1167
 16989  012F4C                     i2u731_40:
 16990  012F4C  A004               	btfss	i2___ftpack@exp,0,c
 16991  012F4E  9E02               	bcf	i2___ftpack@arg+1,7,c
 16992  012F50  90D8               	bcf	status,0,c
 16993  012F52  3204               	rrcf	i2___ftpack@exp,f,c
 16994  012F54  5004               	movf	i2___ftpack@exp,w,c
 16995  012F56  1203               	iorwf	i2___ftpack@arg+2,f,c
 16996  012F58  5005               	movf	i2___ftpack@sign,w,c
 16997  012F5A  A4D8               	btfss	status,2,c
 16998  012F5C  8E03               	bsf	i2___ftpack@arg+2,7,c
 16999  012F5E  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 17000  012F62  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 17001  012F66  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 17002  012F6A  0012               	return	
 17003  012F6C                     __end_ofi2___ftpack:
 17004                           	opt stack 0
 17005                           tosu	equ	0xFFF
 17006                           tosh	equ	0xFFE
 17007                           tosl	equ	0xFFD
 17008                           pclatu	equ	0xFFB
 17009                           pclath	equ	0xFFA
 17010                           tblptru	equ	0xFF8
 17011                           tblptrh	equ	0xFF7
 17012                           tblptrl	equ	0xFF6
 17013                           tablat	equ	0xFF5
 17014                           prodh	equ	0xFF4
 17015                           prodl	equ	0xFF3
 17016                           intcon	equ	0xFF2
 17017                           postinc0	equ	0xFEE
 17018                           fsr0h	equ	0xFEA
 17019                           fsr0l	equ	0xFE9
 17020                           wreg	equ	0xFE8
 17021                           fsr1h	equ	0xFE2
 17022                           fsr1l	equ	0xFE1
 17023                           bsr	equ	0xFE0
 17024                           indf2	equ	0xFDF
 17025                           postinc2	equ	0xFDE
 17026                           postdec2	equ	0xFDD
 17027                           fsr2h	equ	0xFDA
 17028                           fsr2l	equ	0xFD9
 17029                           status	equ	0xFD8
 17030                           
 17031 ;; *************** function _ADCC_GetConversionResult *****************
 17032 ;; Defined at:
 17033 ;;		line 130 in file "mcc_generated_files/adcc.c"
 17034 ;; Parameters:    Size  Location     Type
 17035 ;;		None
 17036 ;; Auto vars:     Size  Location     Type
 17037 ;;		None
 17038 ;; Return value:  Size  Location     Type
 17039 ;;                  2    0[COMRAM] unsigned int 
 17040 ;; Registers used:
 17041 ;;		wreg, status,2, status,0
 17042 ;; Tracked objects:
 17043 ;;		On entry : 0/0
 17044 ;;		On exit  : 0/0
 17045 ;;		Unchanged: 0/0
 17046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17049 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17050 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17051 ;;Total ram usage:        4 bytes
 17052 ;; Hardware stack levels used:    1
 17053 ;; This function calls:
 17054 ;;		Nothing
 17055 ;; This function is called by:
 17056 ;;		_ADCCallback
 17057 ;; This function uses a non-reentrant model
 17058 ;;
 17059                           
 17060                           	psect	text83
 17061  013D92                     __ptext83:
 17062                           	opt stack 0
 17063  013D92                     _ADCC_GetConversionResult:
 17064                           	opt stack 15
 17065                           
 17066                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 17067                           
 17068                           ;incstack = 0
 17069  013D92  5064               	movf	3940,w,c	;volatile
 17070  013D94  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 17071  013D96  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 17072  013D98  5063               	movf	3939,w,c	;volatile
 17073  013D9A  2403               	addwf	??_ADCC_GetConversionResult,w,c
 17074  013D9C  6E01               	movwf	?_ADCC_GetConversionResult,c
 17075  013D9E  0E00               	movlw	0
 17076  013DA0  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 17077  013DA2  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 17078  013DA4  0012               	return	
 17079  013DA6                     __end_of_ADCC_GetConversionResult:
 17080                           	opt stack 0
 17081                           tosu	equ	0xFFF
 17082                           tosh	equ	0xFFE
 17083                           tosl	equ	0xFFD
 17084                           pclatu	equ	0xFFB
 17085                           pclath	equ	0xFFA
 17086                           tblptru	equ	0xFF8
 17087                           tblptrh	equ	0xFF7
 17088                           tblptrl	equ	0xFF6
 17089                           tablat	equ	0xFF5
 17090                           prodh	equ	0xFF4
 17091                           prodl	equ	0xFF3
 17092                           intcon	equ	0xFF2
 17093                           postinc0	equ	0xFEE
 17094                           fsr0h	equ	0xFEA
 17095                           fsr0l	equ	0xFE9
 17096                           wreg	equ	0xFE8
 17097                           fsr1h	equ	0xFE2
 17098                           fsr1l	equ	0xFE1
 17099                           bsr	equ	0xFE0
 17100                           indf2	equ	0xFDF
 17101                           postinc2	equ	0xFDE
 17102                           postdec2	equ	0xFDD
 17103                           fsr2h	equ	0xFDA
 17104                           fsr2l	equ	0xFD9
 17105                           status	equ	0xFD8
 17106                           tosu	equ	0xFFF
 17107                           tosh	equ	0xFFE
 17108                           tosl	equ	0xFFD
 17109                           pclatu	equ	0xFFB
 17110                           pclath	equ	0xFFA
 17111                           tblptru	equ	0xFF8
 17112                           tblptrh	equ	0xFF7
 17113                           tblptrl	equ	0xFF6
 17114                           tablat	equ	0xFF5
 17115                           prodh	equ	0xFF4
 17116                           prodl	equ	0xFF3
 17117                           intcon	equ	0xFF2
 17118                           postinc0	equ	0xFEE
 17119                           fsr0h	equ	0xFEA
 17120                           fsr0l	equ	0xFE9
 17121                           wreg	equ	0xFE8
 17122                           fsr1h	equ	0xFE2
 17123                           fsr1l	equ	0xFE1
 17124                           bsr	equ	0xFE0
 17125                           indf2	equ	0xFDF
 17126                           postinc2	equ	0xFDE
 17127                           postdec2	equ	0xFDD
 17128                           fsr2h	equ	0xFDA
 17129                           fsr2l	equ	0xFD9
 17130                           status	equ	0xFD8
 17131                           
 17132                           	psect	text84
 17133  000000                     __ptext84:
 17134                           	opt stack 0
 17135                           tosu	equ	0xFFF
 17136                           tosh	equ	0xFFE
 17137                           tosl	equ	0xFFD
 17138                           pclatu	equ	0xFFB
 17139                           pclath	equ	0xFFA
 17140                           tblptru	equ	0xFF8
 17141                           tblptrh	equ	0xFF7
 17142                           tblptrl	equ	0xFF6
 17143                           tablat	equ	0xFF5
 17144                           prodh	equ	0xFF4
 17145                           prodl	equ	0xFF3
 17146                           intcon	equ	0xFF2
 17147                           postinc0	equ	0xFEE
 17148                           fsr0h	equ	0xFEA
 17149                           fsr0l	equ	0xFE9
 17150                           wreg	equ	0xFE8
 17151                           fsr1h	equ	0xFE2
 17152                           fsr1l	equ	0xFE1
 17153                           bsr	equ	0xFE0
 17154                           indf2	equ	0xFDF
 17155                           postinc2	equ	0xFDE
 17156                           postdec2	equ	0xFDD
 17157                           fsr2h	equ	0xFDA
 17158                           fsr2l	equ	0xFD9
 17159                           status	equ	0xFD8
 17160                           
 17161                           	psect	rparam
 17162  0000                     tosu	equ	0xFFF
 17163                           tosh	equ	0xFFE
 17164                           tosl	equ	0xFFD
 17165                           pclatu	equ	0xFFB
 17166                           pclath	equ	0xFFA
 17167                           tblptru	equ	0xFF8
 17168                           tblptrh	equ	0xFF7
 17169                           tblptrl	equ	0xFF6
 17170                           tablat	equ	0xFF5
 17171                           prodh	equ	0xFF4
 17172                           prodl	equ	0xFF3
 17173                           intcon	equ	0xFF2
 17174                           postinc0	equ	0xFEE
 17175                           fsr0h	equ	0xFEA
 17176                           fsr0l	equ	0xFE9
 17177                           wreg	equ	0xFE8
 17178                           fsr1h	equ	0xFE2
 17179                           fsr1l	equ	0xFE1
 17180                           bsr	equ	0xFE0
 17181                           indf2	equ	0xFDF
 17182                           postinc2	equ	0xFDE
 17183                           postdec2	equ	0xFDD
 17184                           fsr2h	equ	0xFDA
 17185                           fsr2l	equ	0xFD9
 17186                           status	equ	0xFD8
 17187                           
 17188                           	psect	temp
 17189  00005F                     btemp:
 17190                           	opt stack 0
 17191  00005F                     	ds	1
 17192  0000                     int$flags	set	btemp
 17193  0000                     wtemp6	set	btemp+1
 17194                           tosu	equ	0xFFF
 17195                           tosh	equ	0xFFE
 17196                           tosl	equ	0xFFD
 17197                           pclatu	equ	0xFFB
 17198                           pclath	equ	0xFFA
 17199                           tblptru	equ	0xFF8
 17200                           tblptrh	equ	0xFF7
 17201                           tblptrl	equ	0xFF6
 17202                           tablat	equ	0xFF5
 17203                           prodh	equ	0xFF4
 17204                           prodl	equ	0xFF3
 17205                           intcon	equ	0xFF2
 17206                           postinc0	equ	0xFEE
 17207                           fsr0h	equ	0xFEA
 17208                           fsr0l	equ	0xFE9
 17209                           wreg	equ	0xFE8
 17210                           fsr1h	equ	0xFE2
 17211                           fsr1l	equ	0xFE1
 17212                           bsr	equ	0xFE0
 17213                           indf2	equ	0xFDF
 17214                           postinc2	equ	0xFDE
 17215                           postdec2	equ	0xFDD
 17216                           fsr2h	equ	0xFDA
 17217                           fsr2l	equ	0xFD9
 17218                           status	equ	0xFD8


Data Sizes:
    Strings     978
    Constant    118
    Data        0
    BSS         224
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     87     119
    BANK1           256     61     254
    BANK2           256     22      22
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK1[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_61(CODE[5]), STR_57(CODE[15]), STR_53(CODE[16]), STR_48(CODE[4]), 
		 -> STR_47(CODE[6]), STR_44(CODE[6]), STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK1[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 372
		 -> STR_64(CODE[3]), STR_63(CODE[337]), STR_62(CODE[3]), STR_60(CODE[3]), 
		 -> STR_59(CODE[34]), STR_58(CODE[3]), STR_56(CODE[3]), STR_55(CODE[35]), 
		 -> STR_54(CODE[3]), STR_52(CODE[3]), STR_51(CODE[47]), STR_50(CODE[17]), 
		 -> STR_49(CODE[3]), STR_46(CODE[4]), STR_45(CODE[5]), STR_43(CODE[4]), 
		 -> STR_42(CODE[5]), STR_40(CODE[3]), terminal_textAttributes@output_buff(BANK2[15]), STR_10(CODE[4]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[5]), 
		 -> STR_5(CODE[3]), STR_4(CODE[372]), STR_3(CODE[4]), STR_2(CODE[5]), 
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(BANK1[2]), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR7_DefaultInterruptHandler(), acquisitionTimerCallback(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR7_DefaultInterruptHandler(), acquisitionTimerCallback(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), ADCCallback(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), ADCCallback(), Absolute function(), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK1[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK2[15]), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___ftsub
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___ftmul
    i2___wmul->i2___awdiv
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___fttol->i2___ftmul
    i2___ftsub->i2___ftadd
    i2___ftadd->i2_fround
    _ADCC_ISR->_ADCCallback
    _ADCCallback->i2___ftmul
    i2___ftmul->i2___wmul
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    _printf->___fttol
    _scale->___ftmul
    _putch->_EUSART2_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->_scale
    ___ftadd->_fround
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_clearTerminal->_printf
    _printf->___ftsub
    ___ftsub->___ftadd

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_terminal_ringBufferPull
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  417056
                                             59 BANK1      2     2      0
        _ADCC_SetADIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   64444
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  213673
                                             56 BANK1      3     3      0
                                             16 BANK2      6     6      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     400
                                             41 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                        2     0      2  212856
                                             54 BANK1      2     0      2
                             _printf
                             _strcmp
            _terminal_textAttributes
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0   73255
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2   73255
                                             52 BANK1      2     0      2
                                              0 BANK2     16    16      0
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             41 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             41 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    1393
                                             41 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             41 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   64444
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              42    37      5   64444
                                             18 BANK1     34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                7     4      3   14201
                                             76 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      93
                                             42 BANK0      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      62
                                             41 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              10     7      3   13922
                                             76 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3118
                                             55 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    6156
                                             61 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    2053
                                             41 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2245
                                             47 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     634
                                             41 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     904
                                             41 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2980
                                             49 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     772
                                             41 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     601
                                             41 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4    1077
                                             83 BANK0      4     0      4
                                              0 BANK1     11    11      0
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    4929
                                             12 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    4513
                                              0 BANK1     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2788
                                             41 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     155
                                             41 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     738
                                             41 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     718
                    _ADCC_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     174
                                             44 BANK0      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     174
                                             41 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     174
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     174
                                             41 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     196
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3      98
                                             41 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3      98
                                             41 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     174
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     174
                                             41 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                             20 BANK0     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR7_ISR                                            0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_IsConversionDone                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR7_WriteTimer                                     2     0      2     240
                                             18 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _heartbeatTimerCallback                              1     1      0       0
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                     18    18      0   31597
                                              0 BANK0     18    18      0
                   Absolute function *
                           _ADCC_ISR
                _EUSART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0   28218
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                           39    37      2   28218
                                             63 COMRAM    31    29      2
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (16) i2_scale                                             7     4      3    6554
                                             35 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (17) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_fround                                           10     7      3    6275
                                             35 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4    1346
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (16) i2__div_to_l_                                       12     6      6     692
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (16) i2___lltoft                                          9     5      4     900
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (16) i2___llmod                                           9     1      8     442
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (16) i2___lldiv                                          13     5      8     381
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (16) i2___fttol                                          15    11      4     476
                                             35 COMRAM    15    11      4
                          i2___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftsub                                           6     0      6    2294
                                             57 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftadd                                          12     6      6    2128
                                             45 COMRAM    12     6      6
                         i2___ftpack
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftneg                                           3     0      3     100
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (16) i2___ftge                                            9     3      6     408
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            0     0      0    3379
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                        _ADCCallback *
 ---------------------------------------------------------------------------------
 (15) _ADCCallback                                         1     1      0    3379
                                             35 COMRAM     1     1      0
           _ADCC_GetConversionResult
                           ___lwtoft
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (17) i2___ftmul                                          15     9      6    2371
                                             20 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (16) ___lwtoft                                            3     0      3     974
                                              8 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (18) i2___ftpack                                          8     3      5     763
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _putch
         _EUSART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _putch
           _EUSART2_Write
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcmp
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
           ___ftsub
             ___ftadd
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _putch
             _EUSART2_Write
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___ftadd
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftge
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg
             ___ftsub
               ___ftadd
                 ___ftpack
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
             ___fttol
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lldiv
             ___llmod
             ___lltoft
               ___ftpack
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _putch
               _EUSART2_Write
             _scale
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _strcat
           _strncpy
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _putch
         _EUSART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _putch
           _EUSART2_Write
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_IsConversionDone
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCCallback *
       _ADCC_GetConversionResult
       ___lwtoft
         _ADCC_GetConversionResult (ARG)
         i2___ftpack (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___ftadd
         i2___ftpack
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftge
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
       i2___ftsub
         i2___ftadd
           i2___ftpack
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lltoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lldiv
       i2___llmod
       i2___lltoft
         i2___ftpack
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     16      16      10        8.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3D      FE       7       99.2%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     57      77       5       74.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E9       8        0.0%
DATA                 0      0     1E9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Oct 27 19:48:02 2018

                         __size_of_ADCCallback 008E                                    __CFG_CP$OFF 000000  
                                           l51 3D8C                                   ___awdiv@sign 0094  
                                           bsr 000FE0                            ___wmul@multiplicand 0099  
                                   i2___ftpack 2EBE                 __end_of_heartbeatTimerCallback 3D5A  
                                 ___ftadd@exp1 01CC                                   ___ftadd@exp2 01CB  
                                   i2___lltoft 3828                                   ___ftadd@sign 01CA  
                                          l510 23A2                                            l360 3A04  
                                          l512 2418                                            l513 23E0  
                                          l370 39B0                                            l362 3A2E  
                                          l602 1F3C                                            l371 39AE  
                                          l507 2382                                            l540 15A8  
                                          l604 1FA8                                            l541 15C0  
                                          l509 23C0                                            l366 3976  
                                          l550 16AA                                            l542 15D8  
                                          l367 3974                                            l359 3A06  
                                          l551 16C2                                            l543 15F0  
                                          l560 17B8                                            l552 16DA  
                                          l536 1620                                            l544 1608  
                                          l369 398A                                            l561 17D0  
                                          l545 173A                                            l553 16F2  
                                          l537 1578                                            l562 17E8  
                                          l554 170A                                            l546 1662  
                                          l538 164A                                            l563 1800  
                                          l547 1770                                            l555 1722  
                                          l539 1590                                            l900 02AC  
                                          l556 1860                                            l564 1818  
                                          l548 167A                                            l468 354E  
                                          l565 1830                                            l557 1788  
                                          l549 1692                                            l558 1896  
                                          l566 1848                                            l911 045C  
                                          l559 17A0                                            l920 05F0  
                                          l912 03C8                                            l921 0508  
                                          l914 0476                                            l906 036A  
                                          l594 1E06                                            l923 060A  
                                          l915 0468                                            l924 05FC  
                                          l596 1E44                                            l917 049A  
                                          l870 0ECA                                            l926 062E  
                                          l918 049E                                            l598 1ED0  
                                          l871 0DDA                                            l919 04B6  
                                          l864 1A26                                            l881 000C  
                                          l874 0E9E                                            l890 00CC  
                                          l882 001C                                            l867 1B08  
                                          l875 1014                                            l883 0034  
                                          l892 0162                                            l877 10D8  
                                          l893 01CC                                            l886 0028  
                                          l895 01F6                                            l887 0078  
                                          l896 0236                                            l888 002C  
                                          l889 0614                                            l897 0304  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                      __size_of_PMD_Initialize 001C                                   ___awmod@sign 008E  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                   ?_ADCC_SetADIInterruptHandler 0089  
                                 __CFG_LVP$OFF 000000                                   __CFG_ZCD$OFF 000000  
                                         l1100 32A4                                           l1110 349A  
                                         l1103 32CC                                           l1200 20EC  
                                         l1104 32D6                                           l1112 34B0  
                                         l1105 32E4                                           l1113 34A8  
                                         l1130 2746                                           l1131 2788  
                                         l1140 281A                                           l1132 27B8  
                                         l1116 34C8                                           l1205 20E2  
                                         l1141 280E                                           l1117 34D2  
                                         l1109 348E                                           l1214 2120  
                                         l1206 20D8                                           l1134 27F6  
                                         l1118 34E0                                           l1215 2116  
                                         l1135 27E6                                           l1160 2E38  
                                         l1128 2728                                           l1232 24D0  
                                         l1161 2E2E                                           l1217 2144  
                                         l1313 331E                                           l1250 311A  
                                         l1218 2160                                           l1314 3312  
                                         l1234 24FC                                           l1163 2E6C  
                                         l1219 2190                                           l1323 3652  
                                         l1235 2536                                           l1164 2E56  
                                         l1324 3646                                           l1244 25BE  
                                         l1236 255E                                           l1260 2B04  
                                         l1317 3352                                           l1245 25B2  
                                         l1166 2E94                                           l1318 3360  
                                         l1334 37DE                                           l1238 259A  
                                         l1262 2B1C                                           l1167 2E8A  
                                         l1191 205C                                           l1327 367A  
                                         l1335 37D2                                           l1239 258A  
                                         l1263 2B2C                                           l1280 2A06  
                                         l1328 3688                                           l1096 327E  
                                         l1256 2A9A                                           l1249 30EA  
                                         l1273 3A58                                           l1097 328E  
                                         l1258 2AC2                                           l1514 3932  
                                         l1267 3C52                                           l1195 2086  
                                         l1099 32AC                                           l1259 2AF4  
                                         l1523 3890                                           l1515 392C  
                                         l1531 3AD2                                           l1524 3886  
                                         l1532 3ACC                                           l1285 2A40  
                                         l1277 298E                                           l1517 394C  
                                         l1541 3620                                           l1286 2A32  
                                         l1518 3942                                           l1542 3610  
                                         l1279 2A18                                           l1288 2A5E  
                                         l1538 35D4                                           l1539 3604  
                         _ADCC_StartConversion 3E3C                                           l6417 3610  
                                         l8119 0468                                           l5683 3146  
                                         l8075 0282                                           l8067 0236  
                                         l8095 036E                                           l8289 2372  
                                         l8299 2398                          __size_ofi2__div_to_l_ 0128  
                                         STR_1 FFC2                                           STR_2 FFAD  
                                         STR_3 FFB6                                           STR_4 FC2D  
                                         STR_6 FFAD                                           STR_7 FFB6  
                                         STR_9 FFBA                                           _LATA 000F79  
                                         _LATB 000F7A                                           _LATC 000F7B  
                                         _LATD 000F7C                                           _LATE 000F7D  
                                         _LATF 000F7E                                           _LATG 000F7F  
                                         _LATH 000F80                                           u6010 2E20  
                                 printf@tmpval 01ED                                           u6111 201A  
                                         u6121 202E                                           u6050 2E9E  
                                         u6210 20B6                                           _T6PR 000FB0  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         u6150 204E                                           _PMD2 000E4E  
                                         _PMD3 000E4F                                           _PMD4 000E50  
                                         u6321 2A82                                           _PMD5 000E51  
                                         u6250 20F4                                           u6410 32B0  
                                         u6180 2078                                           u6341 2AAA  
                                         u6280 2128                                           u6470 34B4  
                                         u6720 2820                                           u6650 25C4  
                                         u6571 24B4                                           u6900 3656  
                                         u6591 24E0                                           u6870 3322  
                                         u7770 38C8                                           u9800 2A48  
                                         _PLLR 007230                                           u9741 2970  
                                         u9910 0208                                           u9830 0064  
                                         u9760 29AE                                           u9920 0248  
                                         u9765 29A6                                           u9837 005A  
                                         u9950 0282                                           u9870 0104  
                                         u9875 00FA                                           u9990 03AC  
                                         _TMR6 000FAF                                           _WPUA 000E91  
                                         _WPUB 000E99                                           _WPUC 000EA1  
                                         _WPUD 000EA6                                           _WPUE 000EAE  
                                         _WPUF 000EB3                                           _WPUG 000EBB  
                                         _WPUH 000EC0                          ??_EUSART2_Receive_ISR 005F  
                             __end_of_ADCC_ISR 3C14                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write 396E                                           _main 34EA  
                                         _line 0181                                   ___ftpack@arg 0089  
                                 ___ftpack@exp 008C                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           btemp 005F  
                                 i2___ftadd@f1 002E                                   i2___ftadd@f2 0031  
                                 i2___ftge@ff1 0001                                   i2___ftge@ff2 0004  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00FE                                __end_ofi2_scale 1554  
                 __end_of_EUSART2_Transmit_ISR 3B36                                   i2___ftneg@f1 0001  
                              __end_ofi2_putch 3E60                                  __CFG_CSWEN$ON 000000  
                                 ___ftmul@cntr 00AA                                   i2___ftmul@f1 0015  
                                 i2___ftmul@f2 0018                                   ___param_bank 000000  
                   ??_TMR7_SetInterruptHandler 008C                                   ___ftmul@sign 00AB  
                                 i2___ftsub@f1 003A                                   i2___ftsub@f2 003D  
                                 i2___fttol@f1 0024                                  __CFG_SCANE$ON 000000  
                     __size_ofi2_EUSART2_Write 0046                                   ___fttol@exp1 01CB  
                              _timer7ReloadVal 00CC                                   i2___lltoft@c 0009  
                                 ___fttol@lval 01C7                 __size_of_OSCILLATOR_Initialize 001C  
                __end_of_OSCILLATOR_Initialize 3D92                       ?_terminal_textAttributes 01F5  
                            ??_TMR7_WriteTimer 0074                                          _ADACQ 000F5C  
                                        _ADCAP 000F5D                                          _ADACT 000F56  
                                        ?_main 0001                                          _ADCLK 000F57  
                                        _ADCNT 000F67                                          _ADPCH 000F5F  
                                        _ADREF 000F58                                __end_of___awdiv 32EE  
                                        _ADPRE 000F5E                                __end_of___ftadd 21B6  
                                        STR_10 FFBE                                          STR_11 FFF6  
                                        STR_12 FFC7                                          STR_20 FFC6  
                                        STR_13 FFCD                                          STR_21 FFCC  
                                        STR_14 FFDF                                          STR_22 FFD2  
                                        STR_30 FFC9                                          STR_15 FFE5  
                                        STR_23 FFD8                                          STR_31 FFCF  
                                        STR_16 FFF1                                          STR_24 FFDE  
                                        STR_32 FFD5                                          STR_17 FFF9  
                                        STR_25 FFE4                                          STR_33 FFDB  
                                        STR_41 FFA2                                          STR_18 FFC7  
                                        STR_42 FFAD                                          STR_26 FFEA  
                                        STR_34 FFE1                                          STR_50 FF66  
                                        STR_43 FFB6                                          STR_19 FFFB  
                                        STR_27 FFF0                                          STR_35 FFE7  
                                        STR_51 FEF2                                          STR_60 FF74  
                                        STR_52 FF74                                          STR_28 FFF0  
                                        STR_36 FFED                                          STR_44 FF9C  
                              __end_of___awmod 34EA                                          STR_29 FFFB  
                                        STR_45 FFAD                                          STR_37 FFF3  
                                        STR_61 FFA8                                          STR_53 FF77  
                                        STR_62 FF74                                          STR_54 FF74  
                                        STR_38 FFF3                                          STR_46 FFB6  
                                        STR_39 FFFD                                          STR_47 FF96  
                                        STR_55 FF21                                          STR_63 FDA1  
                                        STR_64 FF74                                          STR_56 FF74  
                                        STR_48 FFB2                                          _ADRPT 000F66  
                                        STR_49 FF74                                          STR_57 FF87  
                                        STR_58 FF74                                          STR_59 FF44  
                              __end_of___ftneg 3C60                                __end_of___lldiv 3372  
                                        u10020 0484                                          u10030 0494  
                                        u10130 1E82                                          u10080 065E  
                                        u10240 2398                                __end_of___ftmul 2B66  
                                        u10087 0654                                          u10417 34F6  
                              ___awdiv@divisor 0091                                __end_of___llmod 369A  
                              __end_of___ftsub 3A82                                __end_of___fttol 2A70  
                                        _T7CLK 000F33                                          _T6CON 000FB1  
                               __CFG_DEBUG$OFF 000000                                          _T7CON 000F30  
                                        _T6HLT 000FB2                                          i1l205 007C  
                                        i1l207 009C                                          i1l209 00A6  
                                        i1l381 3B30                                          i1l461 3D2C  
                                        i1l382 3B2C                                          i1l458 3D1C  
                                        i1l824 3C78                                          i2l450 31E0  
                                        i2l370 39F6                                          i2l371 39F4  
                                        i2l452 321A                                          i2l196 2DB8  
                                        _T6TMR 000FAF                                          i2l453 3254  
                                        i2l366 39BC                                          i2l198 2DC2  
                                        i2l367 39BA                                          i2l392 2FBE  
                                        i2l449 3258                                          i2l369 39D0  
                                        i2l394 300E                                          _T6RST 000FB4  
                                        i2l387 2F76                                          i2l900 08E8  
                                        i2l388 2F98                                          i2l389 2FBA  
                                        i2l911 0A8C                                          i2l920 0C12  
                                        i2l912 09FE                                          i2l921 0B32  
                                        i2l914 0AA2                                          i2l906 09A0  
                                        i2l923 0C28                                          i2l915 0A96  
                                        i2l924 0C1C                                          i2l917 0AC6  
                                        i2l870 1330                                          i2l926 0C4C  
                                        i2l918 0ACA                                          i2l871 124A  
                                        i2l919 0AE2                                          i2l864 1CA8  
                                        i2l881 0674                                          i2l874 1306  
                                        i2l890 072A                                          i2l882 0684  
                                        i2l867 1D80                                          i2l875 146E  
                                        i2l883 069A                                          i2l892 07BA  
                              ___awdiv@counter 0093                                          i2l877 152A  
                                        i2l893 081E                                          i2l886 068E  
                                        i2l895 0842                                          i2l887 06DA  
                                        i2l896 0880                                          i2l888 0692  
                                        i2l889 0C32                                          i2l897 093C  
                                        _OSCEN 000E47                                          _TMR7H 000F2F  
                                        _TMR7L 000F2E                                   i2__div_to_l_ 2832  
                                        _TRISA 000F81                                          _TRISB 000F82  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                  __CFG_WRT3$OFF 000000  
                                __CFG_WRT4$OFF 000000                                  __CFG_WRT5$OFF 000000  
                                 ___lltoft@exp 0099                                  __CFG_WRT6$OFF 000000  
                      ??_ADCC_IsConversionDone 0072                                  __CFG_WRT7$OFF 000000  
            __size_of_TMR6_SetInterruptHandler 000E                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                      ?_TMR6_SetInterruptHandler 0089  
                               __CFG_EBTR6$OFF 000000                                 __CFG_EBTR7$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                               __end_of_TMR6_ISR 3BEC  
                             __end_of_TMR7_ISR 3B6A                                 __CFG_EBTRB$OFF 000000  
                    ??_terminal_ringBufferPull 01F9                                __end_of_dpowers FBDF  
                                   i2scale@scl 002A                          ?_ADCC_StartConversion 0001  
                                        _scale 0C84                             __CFG_MCLRE$EXTMCLR 000000  
                                ___ftpack@sign 008D                                          _putch 3DE8  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                                        tablat 000FF5                               __end_ofi2___ftge 31DA  
                             __end_ofi2___wmul 3CAC                                 ??_EUSART2_Read 0089  
                                        status 000FD8                                          wtemp6 0060  
                              __end_of_strncpy 3632                               __end_ofi2_fround 1DC6  
               ?_INTERRUPT_InterruptManagerLow 0001                             __size_ofi2___awdiv 0084  
                           __size_ofi2___ftadd 01AC                             __size_ofi2___awmod 0070  
                           __size_ofi2___ftneg 0024                             __size_ofi2___lldiv 0082  
                           __size_ofi2___ftmul 00F4                             __size_ofi2___llmod 0066  
                           __size_ofi2___ftsub 0040                             __size_ofi2___fttol 00F4  
                             __end_ofi2_printf 0C84                 ??_TMR6_DefaultInterruptHandler 0072  
        __end_of_EUSART2_SetTxInterruptHandler 3E20         __size_of_EUSART2_SetTxInterruptHandler 000E  
                _EUSART2_SetTxInterruptHandler 3E12                                __initialization 3C14  
                            i2___lldiv@divisor 0005                                   __end_of_main 355A  
                            i2___lldiv@counter 000D                                  i2___ftmul@exp 001E  
                                   i2printf@ap 004B                          __end_of_ringBufferLUT 2008  
                                  ?i2___ftpack 0001                                    ?i2___lltoft 0009  
                                       ??_main 01FC                                  ___fttol@sign1 01C6  
                                __activetblptr 000003                           __size_of__tdiv_to_l_ 0134  
                              _TMR6_Initialize 3B6A                                         _ADACCH 000F71  
                                       _ADACCL 000F70                     __end_of_EUSART2_Initialize 3700  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                     _eusart2TxBufferRemaining 00D3                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                               ___llmod@dividend 0089  
                                       _ADLTHH 000F6B                                         ?_scale 00AC  
                                       _ADLTHL 000F6A                                         _ADRESH 000F64  
                                       _ADRESL 000F63                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                               ___awdiv@dividend 008F  
                                       _ADUTHL 000F6C                                         _ANSELA 000E92  
                                       ?_putch 0001                                         _ANSELB 000E9A  
                                       _ANSELD 000EA7                                         _ANSELE 000EAF  
                                       _ANSELF 000EB4                               __end_of___ftpack 2EBE  
                                       _ANSELG 000EBC                                         _T7GATE 000F32  
                                       _RC2REG 000EF1                                         _T7GCON 000F31  
                             __end_of___lltoft 3828                                         _RC2STA 000EF5  
                                       _ODCONA 000E90                                         _ODCONB 000E98  
                                       _ODCONC 000EA0                                         _ODCOND 000EA5  
                                       _ODCONE 000EAD                                         _ODCONF 000EB2  
                                       _ODCONG 000EBA                                         _ODCONH 000EBF  
                                       i2l1100 33AC                                         i2l1110 357A  
                                       i2l1103 33D4                                         i2l1200 2298  
                                       i2l1104 33DE                                         i2l1112 3590  
                                       i2l1105 33EC                                         i2l1113 3588  
                                       i2l1130 286E                                         i2l1131 28B0  
                                       i2l1140 2942                                         i2l1132 28E0  
                                       i2l1116 35A8                                         i2l1205 228E  
                                       i2l1141 2936                                         i2l1117 35B2  
                                       i2l1109 356E                                         i2l1214 22CC  
                                       i2l1206 2284                                         i2l1134 291E  
                                       i2l1118 35C0                                         i2l1215 22C2  
                                       i2l1135 290E                                         i2l1160 2EE6  
                                       i2l1128 2850                                         i2l1232 2602  
                                       i2l1161 2EDC                                         i2l1217 22F0  
                                       i2l1313 3424                                         i2l1250 31AA  
                                       i2l1218 230C                                         i2l1314 3418  
                                       i2l1234 262E                                         i2l1163 2F1A  
                                       i2l1219 233C                                         i2l1323 371E  
                                       i2l1235 2668                                         i2l1164 2F04  
                                       i2l1260 2CEC                                         i2l1324 3712  
                                       i2l1244 26F0                                         i2l1236 2690  
                                       i2l1317 3458                                         i2l1245 26E4  
                                       i2l1166 2F42                                         i2l1262 2D04  
                                       i2l1318 3466                                         i2l1334 383A  
                                       i2l1238 26CC                                         i2l1167 2F38  
                                       i2l1263 2D14                                         i2l1191 2208  
                                       i2l1327 3746                                         i2l1335 382E  
                                       i2l1239 26BC                                         i2l1256 2C82  
                                       i2l1280 2BF8                                         i2l1328 3754  
                                       i2l1096 3386                                         i2l1249 317A  
                                       i2l1273 3A98                                         i2l1097 3396  
                                       i2l1258 2CAA                                         i2l1259 2CDC  
                                       i2l1267 3CC2                                         i2l1195 2232  
                                       i2l1099 33B4                                         i2l1285 2C2C  
                                       i2l1277 2B92                                         i2l1286 2C20  
                                       i2l1279 2C08                                         i2l1288 2C48  
                                       i2l7251 08C4                                         i2l7243 0880  
                                       _RG7PPS 000E89                                         i2l7271 09A4  
                                       i2l5687 31D6                                         i2l7295 0A96  
                                i2putch@txData 0002                                      ??i2_scale 0027  
                             __end_of___lwtoft 3CF4                        TMR7_WriteTimer@timerVal 0072  
                                       _OSCFRQ 000E49                                         u750_41 21DA  
                                       u806_41 2B76                                         u770_41 2C6A  
                                       u772_41 2C92                                      ??i2_putch 0002  
                                       u749_41 21C6                                         _RX2PPS 000E11  
                                       u792_41 25E6                                         u794_41 2612  
                                       _TX2REG 000EF2                                         _TX2STA 000EF6  
                   ??_ADCC_GetConversionResult 0003                         __size_ofi2__tdiv_to_l_ 0132  
                               __CFG_PWRTE$OFF 000000                                 __CFG_XINST$OFF 000000  
                              _TMR7_Initialize 38D4                                   i2_scale$2715 0027  
                             __end_of__powers_ FC06           __size_of_ADCC_SetADIInterruptHandler 000E  
              __end_of_terminal_ringBufferPull 24A2                                         ___ftge 30B8  
                                       ___wmul 3B9C                                      ??___awdiv 0093  
                                    ??___ftadd 01C7                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 008D                                      ??___ftneg 008C  
                                    ??___lldiv 0091                                      ??___ftmul 00A3  
                                    ??___llmod 0091                                      ??___ftsub 00B6  
                                    ??___fttol 01C1                       ??_terminal_setCursorHome 00B7  
                                       _fround 18BC                                         clear_0 3C1A  
                                       clear_1 3C2A                           _eusart2RxStringReady 06B0  
                             ___awdiv@quotient 0095                                ___awmod@divisor 008B  
                              ___awmod@counter 008D                                         _printf 0000  
                                       _strcat 3922                                         _strcmp 3884  
                                    ?_ADCC_ISR 0001                                         _strlen 3AC2  
                               i2___awdiv@sign 000C                          ___ftmul@f3_as_product 00A7  
                             _background_color 00CE                                _ADCC_Initialize 3766  
                            ??i2_EUSART2_Write 0001                                 _PMD_Initialize 3D5A  
                            __end_ofi2___awdiv 33F6                              __end_ofi2___ftadd 2362  
                            __end_ofi2___awmod 35CA                                 i2___ftadd@exp1 0039  
                               i2___ftadd@exp2 0038                              __end_ofi2___ftneg 3CD0  
                            __end_ofi2___lldiv 3478                              __end_ofi2___ftmul 2D4E  
                            __end_ofi2___llmod 3766                              __end_ofi2___ftsub 3AC2  
                            __end_ofi2___fttol 2C5A                                 i2___ftadd@sign 0037  
                                 __mediumconst FBB6                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                         _EUSART2_Transmit_ISR 3B00                         ??_ADCC_StartConversion 0072  
                               i2___awmod@sign 0006                                ??_EUSART2_Write 0089  
     TMR7_SetInterruptHandler@InterruptHandler 0089    ADCC_SetADIInterruptHandler@InterruptHandler 0089  
     TMR6_SetInterruptHandler@InterruptHandler 0089                                      ??_strncpy 008F  
      terminal_textAttributes@background_color 01F5                  __size_of_INTERRUPT_Initialize 0010  
                              _eusart2RxBuffer 0100                ?_INTERRUPT_InterruptManagerHigh 0001  
             ??_INTERRUPT_InterruptManagerHigh 0060                              _SYSTEM_Initialize 3CF4  
         __end_of_TMR7_DefaultInterruptHandler 3E62          __size_of_TMR7_DefaultInterruptHandler 0002  
                 _TMR7_DefaultInterruptHandler 3E60                                _eusart2TxBuffer 0140  
                                   __accesstop 0060                        __end_of__initialization 3C30  
                                   ___ftadd@f1 01C1                                     ___ftadd@f2 01C4  
                          __size_ofi2___ftpack 00AE                                 i2printf@tmpval 0057  
                                   ___ftge@ff1 0089                                     ___ftge@ff2 008C  
                           ?_SYSTEM_Initialize 0001                            __size_ofi2___lltoft 005C  
                                ___rparam_used 000001                                     ___ftneg@f1 0089  
                               i2___ftpack@arg 0001                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0005                                 i2___ftpack@exp 0004  
                           i2__tdiv_to_l_@cntr 000E                              i2___llmod@counter 0009  
                           i2__tdiv_to_l_@quot 000A                                     ___ftmul@f1 009D  
                                   ___ftmul@f2 00A0              terminal_ringBufferPull@charNumber 0210  
                                   ___ftsub@f1 01CD                                     ___ftsub@f2 01D0  
                                   ___fttol@f1 00B3                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                            ??_SYSTEM_Initialize 008E  
                                   ___lltoft@c 0091                                      ?_TMR6_ISR 0001  
                                    ?_TMR7_ISR 0001                                 i2___ftmul@cntr 0022  
                                __end_of_scale 1104                                 i2___ftmul@sign 0023  
               ?_EUSART2_SetTxInterruptHandler 0089                                  __end_of_putch 3DF6  
                     ??_terminal_clearTerminal 00B7                                    i2printf@exp 0055  
                                  i2printf@val 0051                        __end_of_TMR6_Initialize 3B9C  
                       __end_of_PMD_Initialize 3D76                                 i2___fttol@exp1 0032  
                                   ___lwtoft@c 0009                                 i2___fttol@lval 002E  
                                    ?i2___ftge 0001                                     ??_ADCC_ISR 0025  
                         __end_of_EUSART2_Read 3A40                                      ?i2___wmul 000F  
                                i2__tdiv_to_l_ 25D6                                     __div_to_l_ 2708  
                                    ?i2_fround 0024                          ?_EUSART2_Transmit_ISR 0001  
                                    ?i2_printf 0040                    ADCC_StartConversion@channel 0072  
                              __div_to_l_@exp1 0094                                __div_to_l_@cntr 0093  
                                      ??_scale 00AF                      __end_of_SYSTEM_Initialize 3D16  
                               i2___lltoft@exp 0011                                __div_to_l_@quot 008F  
                                      ??_putch 008A                             i2___lldiv@quotient 0009  
                                _eusart2RxHead 0180                                  _eusart2TxHead 00D5  
                                   __pbssBANK0 00B7                                     __pbssBANK1 0100  
                                _eusart2RxTail 00D2                                  _eusart2TxTail 00D4  
                             i2__tdiv_to_l_@f1 0001                               i2__tdiv_to_l_@f2 0004  
                      __end_of_TMR7_Initialize 3922                  ?_TMR7_DefaultInterruptHandler 0001  
                                __div_to_l_@f1 0089                                  __div_to_l_@f2 008C  
                        EUSART2_Read@readValue 0089                                _TMR7_WriteTimer 3C60  
                                ??_ADCCallback 0024                                        ?___ftge 0089  
            terminal_ringBufferPull@index_1170 0212                                        ?___wmul 0097  
                              __CFG_PPS1WAY$ON 000000               __end_of_TMR6_SetInterruptHandler 3E12  
                      __end_of_ADCC_Initialize 37CA                                     ??_TMR6_ISR 0073  
                                   ??_TMR7_ISR 0074                                        _ADFLTRH 000F73  
                                      _ADFLTRL 000F72                                        ?_fround 00AC  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
                                    ?___ftpack 0089                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                __size_of_terminal_setCursorHome 0010  
                                      ?_printf 01D3                                ?_PMD_Initialize 0001  
                                    ?___lltoft 0091                                 ?i2__tdiv_to_l_ 0001  
                                   ??i2___ftge 0007                                        ?_strcat 0089  
                                      ?_strcmp 0089                                        ?_strlen 0089  
                                    ?___lwtoft 0009                                     ??i2___wmul 0013  
                                      _SP2BRGH 000EF4                                     ??i2_fround 0027  
                                      _SP2BRGL 000EF3                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 3016  
                                   ??i2_printf 0042                                        _OSCTUNE 000E48  
                                      _SLRCONA 000E8F                                        _SLRCONB 000E97  
                                      _SLRCONC 000E9F                                        _SLRCOND 000EA4  
                                      _SLRCONE 000EAC                                        _SLRCONF 000EB1  
                                      _SLRCONG 000EB9                                        _SLRCONH 000EBE  
               __size_of_ADCC_IsConversionDone 000C                  __end_of_ADCC_IsConversionDone 3E56  
                     _acquisitionTimerCallback 3D16               __size_of_terminal_textAttributes 0368  
                                      i2_scale 1104                                        i2_putch 3E56  
         __end_of_terminal_textAttributesReset 3DB8          __size_of_terminal_textAttributesReset 0012  
                 _terminal_textAttributesReset 3DA6                              __end_of__npowers_ FC2D  
                                      __Hparam 0000                                     _scale$2555 00AF  
                                      __Lparam 0000                                __size_of___ftge 0092  
                                      ___awdiv 3268                                        ___ftadd 2008  
                                      ___awmod 3478                                        ___ftneg 3C3A  
                                      ___lldiv 32EE                                __size_of___wmul 0028  
                                      ___ftmul 2A70                                        ___llmod 3632  
                                      ___ftsub 3A40                                        ___fttol 295A  
                          __end_of_ADCCallback 3268                                        __pcinit 3C14  
                                 ??i2___ftpack 0006                                     ??___ftpack 008E  
                              __size_of_fround 0294                               ?_TMR6_Initialize 0001  
                      i2___ftmul@f3_as_product 001F                                        __ramtop 0E00  
              __size_of_terminal_clearTerminal 0010                                   ??i2___lltoft 000D  
                                   ??___lltoft 0095                                        __ptext0 34EA  
                                      __ptext1 3DB8                                        __ptext2 2362  
                                      __ptext3 3AC2                                        __ptext4 1DC6  
                                      __ptext5 3DA6                                        __ptext6 1554  
                                      __ptext7 35CA                                        __ptext8 3922  
                                      __ptext9 3884                                __size_of_printf 066A  
                                   ??___lwtoft 000C                                __size_of_strcat 004C  
                                i2_fround$2713 002A                                  i2_fround$2714 0027  
                              __size_of_strcmp 0050                                __size_of_strlen 003E  
                                  ?__div_to_l_ 0089                                        _dpowers FBB7  
                        _OSCILLATOR_Initialize 3D76                         ??_EUSART2_Transmit_ISR 0072  
                                 i2fround@prec 002D                               ___awmod@dividend 0089  
                 ADCCallback@currentADCChannel 0024                       ??_PIN_MANAGER_Initialize 0089  
            __size_of_TMR7_SetInterruptHandler 000E                      ?_TMR7_SetInterruptHandler 0089  
                                    _T6CONbits 000FB1                                      _T7CONbits 000F30  
                                    _T6HLTbits 000FB2                     __size_of_SYSTEM_Initialize 0022  
                        i2EUSART2_Write@txData 0001                                 __pintcode_body 2D4E  
                                      _strncpy 35CA                           end_of_initialization 3C30  
                      __end_of_TMR7_WriteTimer 3C86                         _terminal_setCursorHome 3DB8  
                             ?_TMR7_Initialize 0001                                      i1u1020_28 3BD8  
                                    i1u1022_28 3B56                                      i1u1037_28 0086  
                                      int_func 2D4E                            i2___wmul@multiplier 000F  
                                    _T6RSTbits 000FB4                                      i2u1030_48 2DA2  
                                    i2u1018_48 3C00                             __end_ofi2___ftpack 2F6C  
                           __end_ofi2___lltoft 3884                                ___lldiv@divisor 008D  
                              ___lldiv@counter 0095                             _EUSART2_Initialize 369A  
                ?_terminal_textAttributesReset 0001                                i2_EUSART2_Write 39B6  
                                      printf@c 01F4                                        printf@f 01D3  
                     ??_heartbeatTimerCallback 0072                 ??_TMR7_DefaultInterruptHandler 0072  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 0044  
                             ?_ADCC_Initialize 0001                                 __tdiv_to_l_@f1 0089  
                               __tdiv_to_l_@f2 008C                                ??i2__tdiv_to_l_ 0007  
                                      strcmp@r 008E                          __CFG_WDTCPS$WDTCPS_11 000000  
                          ?_EUSART2_Initialize 0001                                        strlen@s 0089  
                 terminal_ringBufferPull@index 0214                                  ??__tdiv_to_l_ 008F  
                     _TMR6_SetInterruptHandler 3E04                       ?_terminal_ringBufferPull 0001  
                         __CFG_WDTCCS$LFINTOSC 000000                              __size_of_ADCC_ISR 0028  
          __end_of_ADCC_SetADIInterruptHandler 3E3C                    _ADCC_SetADIInterruptHandler 3E2E  
                                    i2___awdiv 3372                                      i2___ftadd 21B6  
                                    i2___awmod 355A                               __CFG_FEXTOSC$ECH 000000  
                                    i2___ftneg 3CAC                                      i2___lldiv 33F6  
                                    i2___ftmul 2C5A                                      i2___llmod 3700  
                                    i2___ftsub 3A82                                      i2___fttol 2B66  
                         ??_EUSART2_Initialize 008C                         _terminal_clearTerminal 3DC8  
                       __size_of_ringBufferLUT 0242                  ??_ADCC_SetADIInterruptHandler 008C  
                                 _EUSART2_Read 39FC                             i2___llmod@dividend 0001  
                           i2___awdiv@dividend 0007                                i2___ftpack@sign 0005  
                          __size_of__div_to_l_ 012A                                    _ADCCallback 31DA  
                                  ___ftmul@exp 00A6                   __end_of_INTERRUPT_Initialize 3DE8  
               ??_ADCC_DefaultInterruptHandler 0001                                 __end_of___ftge 314A  
                               __end_of___wmul 3BC4                              __size_of_TMR6_ISR 0028  
                            __size_of_TMR7_ISR 0034                         ?_OSCILLATOR_Initialize 0001  
                                __pbitbssBANK0 06B0                                 __end_of_fround 1B50  
            __size_of_ADCC_GetConversionResult 0014                      ?_ADCC_GetConversionResult 0001  
                             i2___wmul@product 0013                                 __end_of_printf 066A  
                                i2_printf$2716 0048                                 __end_of_strcat 396E  
                               __end_of_strcmp 38D4                                   i2printf@flag 004D  
                               __end_of_strlen 3B00                                   i2printf@fval 005B  
                                 i2printf@prec 004F                            start_initialization 3C14  
                            __size_ofi2___ftge 0090                             i2___awdiv@quotient 000D  
                            __size_ofi2___wmul 0026                __size_of_PIN_MANAGER_Initialize 00A2  
                          __end_of__tdiv_to_l_ 25D6                                      i2printf@c 005E  
                                    i2printf@f 0040                                i2___fttol@sign1 002D  
                      _terminal_textAttributes 1554  EUSART2_SetRxInterruptHandler@interruptHandler 0089  
EUSART2_SetTxInterruptHandler@interruptHandler 0089                              __size_ofi2_fround 0276  
                                   ?i2___awdiv 0007                                     ?i2___ftadd 002E  
                                   ?i2___awmod 0001                                     ?i2___ftneg 0001  
                                   ?i2___lldiv 0001                                     ?i2___ftmul 0015  
                                   ?i2___llmod 0001                                     ?i2___ftsub 003A  
                                   ?i2___fttol 0024                  __size_of_ADCC_StartConversion 000E  
                                  putch@txData 008A                              __size_ofi2_printf 061A  
                        __end_of_EUSART2_Write 39B6                               ?_TMR7_WriteTimer 0072  
           terminal_textAttributes@output_buff 0201                        __end_ofi2_EUSART2_Write 39FC  
                              ___llmod@divisor 008D                                ___llmod@counter 0091  
                             __CFG_LPBOREN$OFF 000000                               ??_PMD_Initialize 0089  
                                     ??___ftge 008F                                       ??___wmul 009B  
              __size_of_heartbeatTimerCallback 0022                                       ??_fround 00AF  
                                _ringBufferLUT 1DC6                 ??_terminal_textAttributesReset 00B7  
                                     ??_printf 01D8                              _POS3P3_ADC_Result 00C0  
                                     ??_strcat 008D                     ??_acquisitionTimerCallback 0073  
                                     ??_strcmp 008D                                       ??_strlen 008B  
                                   fround@prec 00B5                                 _eusart2RxCount 00D1  
                                ?i2__div_to_l_ 0001                              __size_of___ftpack 00B0  
                            __size_of___lltoft 005E                              __size_of___lwtoft 0024  
                                __pcstackBANK0 0060                                  __pcstackBANK1 01C1  
                                __pcstackBANK2 0200                            EUSART2_Write@txData 0089  
                                     ?i2_scale 0024                ??_EUSART2_SetRxInterruptHandler 008C  
                                     ?i2_putch 0001                          _TMR6_InterruptHandler 00C3  
                       _PIN_MANAGER_Initialize 3016                                      __pintcode 0008  
                                __pmediumconst FBB6                                       ?___awdiv 008F  
                                     ?___ftadd 01C1                                       ?___awmod 0089  
             __end_of_TMR7_SetInterruptHandler 3E04                                       ?___ftneg 0089  
                                     ?___lldiv 0089                                       ?___ftmul 009D  
                                     ?___llmod 0089                                       ?___ftsub 01CD  
                                    __npowers_ FC06                                       ?___fttol 00B3  
                               ?_ringBufferLUT 01F7              _EUSART2_TxDefaultInterruptHandler 00C9  
                                  __pintcodelo 0018                                    __tdiv_to_l_ 24A2  
                                     _ADCC_ISR 3BEC                                 ??i2__div_to_l_ 0007  
                                 ??__div_to_l_ 008F                               _POS12_ADC_Result 00BD  
                                     _BAUD2CON 000EF7                      ??_terminal_textAttributes 00B7  
                                    _attribute 00D0                               __CFG_WDTE$NSLEEP 000000  
                      ?_terminal_setCursorHome 0001                         _heartbeatTimerCallback 3D38  
                                  ??i2___awdiv 000B                                    ??i2___ftadd 0034  
                                  ??i2___awmod 0005                                    ??i2___ftneg 0004  
                                  ??i2___lldiv 0009                                    ??i2___ftmul 001B  
                               __size_of_scale 0480                                    ??i2___llmod 0009  
                                  ??i2___ftsub 0040                                    ??i2___fttol 0028  
                                     ?_strncpy 0089                                 __size_of_putch 000E  
                         _INTERRUPT_Initialize 3DD8                                       _T6CLKCON 000FB3  
                        _ADCC_IsConversionDone 3E4A         terminal_textAttributes@input_attribute 01F6  
                 __size_of_EUSART2_Receive_ISR 00AA                                 ___wmul@product 009B  
                             ?i2_EUSART2_Write 0001                                       _LATFbits 000F7E  
                                  strncpy@from 008B                                       _IPR1bits 000E20  
                                     _IPR3bits 000E22                                       _PIE1bits 000E2A  
                                  strncpy@size 008D                                       _IPR5bits 000E24  
                                     _PIE3bits 000E2C                                       _PIE5bits 000E2E  
                                     i1u527_20 3D44                                       i1u528_28 3D48  
                                     i1u477_20 3E52                                       _PIR1bits 000E34  
                           __end_of__div_to_l_ 2832                                       _PIR3bits 000E36  
                                     i2u800_40 26F6                                       _PIR5bits 000E38  
                                     i2u731_40 2F4C                                       i2u812_40 2C32  
                                     i2u740_40 33B8                                       i2u727_40 2ECE  
                                     i2u815_40 3428                                       i2u808_40 2BB0  
                                     i2u840_40 0852                                       i2u832_40 06C8  
                                     i2u808_45 2BA8                                       i2u832_47 06BE  
                                     i2u753_40 21FA                                       i2u841_40 0890  
                                     i2u818_40 3722                                       i2u746_40 3594  
                                     i2u763_40 22A0                                       i2u851_40 0AB0  
                                     i2u756_40 2224                                       i2u852_40 0AC0  
                                     i2u844_40 08C4                                       i2u836_40 0762  
                   ??_TMR6_SetInterruptHandler 008C                                       i2u836_45 0758  
                                     i2u766_40 22D4                                       i2u759_40 2262  
                                     i2u791_40 2948                                       i2u848_40 09E2  
                                     i2u857_40 0C7A                                       i2u857_47 0C70  
                                     i2u868_40 2FAE                                       _TMR6_ISR 3BC4  
                                     _TMR7_ISR 3B36                                i2__div_to_l_@f1 0001  
                              i2__div_to_l_@f2 0004                                     _ADCON0bits 000F60  
                                   _ADCON1bits 000F59                                     _ADCON2bits 000F5A  
                                   _ADCON3bits 000F5B                              ___wmul@multiplier 0097  
                                     i2___ftge 314A                                       i2___wmul 3C86  
                                   printf@flag 01E3                                     printf@fval 01F1  
                                   printf@prec 01E5                 __end_of_terminal_setCursorHome 3DC8  
                            i2___awdiv@divisor 0009                                       i2_fround 1B50  
                            i2___awdiv@counter 000B                  __size_of_EUSART2_Transmit_ISR 0036  
                                     i2_printf 066A                       __size_of_TMR6_Initialize 0032  
                      ?_terminal_clearTerminal 0001                          ?_INTERRUPT_Initialize 0001  
                           i2___awmod@dividend 0001               __size_of_terminal_ringBufferPull 0140  
                             __size_ofi2_scale 0450                               __size_ofi2_putch 000A  
              __end_of_terminal_textAttributes 18BC                                     _ADSTATbits 000F65  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult 3DA6  
                      __CFG_RSTOSC$EXTOSC_4PLL 000000          __end_of_EUSART2_SetRxInterruptHandler 3E2E  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler 3E20  
                                 ?_ADCCallback 0001                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                                ??_ringBufferLUT 00B7  
                     __size_of_TMR7_Initialize 004E                               _foreground_color 00CF  
                      ??_OSCILLATOR_Initialize 0089                               __size_of___awdiv 0086  
                             __size_of___ftadd 01AE                               __size_of___awmod 0072  
                             __size_of___ftneg 0026                          i2___wmul@multiplicand 0011  
                             __size_of___lldiv 0084                               __size_of___ftmul 00F6  
                             __size_of___llmod 0068                               __size_of___ftsub 0042  
                             __size_of___fttol 0116                                       ___ftpack 2E0E  
             __end_of_acquisitionTimerCallback 3D38                                    _fround$2553 00B2  
                                  _fround$2554 00AF                                       ___lltoft 37CA  
                        __end_ofi2__tdiv_to_l_ 2708                                       ___lwtoft 3CD0  
                     _TMR7_SetInterruptHandler 3DF6                          _TMR7_InterruptHandler 00B7  
      terminal_textAttributes@foreground_color 0200                       __size_of_ADCC_Initialize 0064  
                                   strcat@from 008B                ??_INTERRUPT_InterruptManagerLow 0074  
               __end_of_terminal_clearTerminal 3DD8                                       __ptext10 39FC  
                                     __ptext11 3DC8                                       __ptext20 3268  
                                     __ptext12 0000                                       __ptext21 24A2  
                                     __ptext13 0C84                                       __ptext30 3C3A  
                                     __ptext22 2708                                       __ptext14 3DE8  
                                     __ptext31 30B8                                       __ptext23 37CA  
                                     __ptext15 396E                                       __ptext40 3DD8  
                                     __ptext32 3CF4                                       __ptext24 3632  
                                     __ptext16 18BC                                       __ptext41 369A  
                                     __ptext33 38D4                                       __ptext25 32EE  
                                     __ptext17 3B9C                                       __ptext50 3E3C  
                                     __ptext42 3E12                                       __ptext34 3DF6  
                                     __ptext26 295A                                       __ptext18 2A70  
                                     __ptext51 3E4A                                       __ptext43 3E20  
                                     __ptext35 3B6A                                       __ptext27 3A40  
                                     __ptext19 3478                                       __ptext60 1104  
                                     __ptext52 3C60                                       __ptext44 3766  
                                     __ptext36 3E04                                       __ptext28 2008  
                                     __ptext61 3E56                                       __ptext53 3BC4  
                                     __ptext45 3E2E                                       __ptext37 3D5A  
                                     __ptext29 2E0E                                       __ptext70 3700  
                                     __ptext62 39B6                                       __ptext54 3E62  
                                     __ptext38 3016                                       __ptext71 33F6  
                                     __ptext63 1B50                                       __ptext55 3D38  
                                     __ptext47 3B36                                       __ptext39 3D76  
                                     __ptext80 2C5A                                       __ptext72 2B66  
                                     __ptext64 3C86                                       __ptext56 3B00  
                                     __ptext48 3E60                                       __ptext81 3CD0  
                                     __ptext73 3A82                                       __ptext65 355A  
                                     __ptext49 3D16                                       __ptext82 2EBE  
                                     __ptext74 21B6                                       __ptext66 3372  
                                     __ptext58 2F6C                                       __ptext83 3D92  
                                     __ptext75 3CAC                                       __ptext67 25D6  
                                     __ptext59 066A                                       __ptext84 0000  
                                     __ptext76 314A                                       __ptext68 2832  
                                     __ptext77 3BEC                                       __ptext69 3828  
                                     __ptext78 3E64                                       __ptext79 31DA  
                                     __powers_ FBDF                         ?_ADCC_IsConversionDone 0001  
                             __size_of_strncpy 0068                    __size_of_EUSART2_Initialize 0066  
                                __size_of_main 0070                           __end_ofi2__div_to_l_ 295A  
                         __CFG_WDTCWS$WDTCWS_7 000000                                     _T7GCONbits 000F31  
                           __CFG_BORV$VBOR_190 000000                      _ADCC_ADI_InterruptHandler 00BA  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion 3E4A  
                                     int$flags 005F                                      printf@exp 01EB  
                                    printf@val 01E7                              i2___awmod@divisor 0003  
                            i2___awmod@counter 0005                                     _INTCONbits 000FF2  
                       ??_INTERRUPT_Initialize 0089                                       scale@scl 00B2  
         __end_of_TMR6_DefaultInterruptHandler 3E64          __size_of_TMR6_DefaultInterruptHandler 0002  
                 _TMR6_DefaultInterruptHandler 3E62           __end_of_ADCC_DefaultInterruptHandler 3E66  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler 3E64  
                                     intlevel1 0000                                       intlevel2 0000  
                             __tdiv_to_l_@exp1 0097                               __tdiv_to_l_@cntr 0096  
                             __tdiv_to_l_@quot 0092                               ___lldiv@dividend 0089  
                      ?_PIN_MANAGER_Initialize 0001                              ??_TMR6_Initialize 008C  
                            __CFG_CLKOUTEN$OFF 000000                                      strncpy@cp 008F  
                                    strncpy@to 0089                       __size_of_TMR7_WriteTimer 0026  
                                     printf@ap 01E1                       _ADCC_GetConversionResult 3D92  
               ?_EUSART2_SetRxInterruptHandler 0089                                   ?__tdiv_to_l_ 0089  
                       __size_of_EUSART2_Write 0048                            _EUSART2_Receive_ISR 2F6C  
       __end_of_INTERRUPT_InterruptManagerHigh 2E0E        __size_of_INTERRUPT_InterruptManagerHigh 2E06  
               _INTERRUPT_InterruptManagerHigh 0008                              ??_TMR7_Initialize 008C  
                                  _printf$2556 01DE                                       strcat@cp 008D  
                                     strcat@to 0089                        ?_heartbeatTimerCallback 0001  
                                     strcmp@s1 0089                                       strcmp@s2 008B  
                            ringBufferLUT@line 01F7                               ___lldiv@quotient 0091  
                                     strlen@cp 008D                                     _TX2STAbits 000EF6  
        __end_of_INTERRUPT_InterruptManagerLow 00FE         __size_of_INTERRUPT_InterruptManagerLow 00E6  
                _INTERRUPT_InterruptManagerLow 0018                 __end_of_PIN_MANAGER_Initialize 30B8  
                            ??_ADCC_Initialize 008C                              i2__div_to_l_@exp1 000C  
                            i2__div_to_l_@cntr 000B                        _terminal_ringBufferPull 2362  
                ?_TMR6_DefaultInterruptHandler 0001                ??_EUSART2_SetTxInterruptHandler 008C  
                            i2__div_to_l_@quot 0007                           ?_EUSART2_Receive_ISR 0001  
            __size_of_acquisitionTimerCallback 0022                  ?_ADCC_DefaultInterruptHandler 0001  
                    ?_acquisitionTimerCallback 0001              _EUSART2_RxDefaultInterruptHandler 00C6  
